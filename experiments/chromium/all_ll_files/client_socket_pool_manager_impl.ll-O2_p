; ModuleID = '../../net/socket/client_socket_pool_manager_impl.cc'
source_filename = "../../net/socket/client_socket_pool_manager_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::ClientSocketPoolManagerImpl" = type { %"class.net::ClientSocketPoolManager", %"struct.net::CommonConnectJobParams", %"struct.net::CommonConnectJobParams", i32, %"class.std::__1::map.491" }
%"class.net::ClientSocketPoolManager" = type { i32 (...)** }
%"struct.net::CommonConnectJobParams" = type { %"class.net::ClientSocketFactory"*, %"class.net::HostResolver"*, %"class.net::HttpAuthCache"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::SpdySessionPool"*, %"class.std::__1::vector.236"*, %"class.net::QuicStreamFactory"*, %"class.net::ProxyDelegate"*, %"class.net::HttpUserAgentSettings"*, %"class.net::SSLClientContext"*, %"class.net::SocketPerformanceWatcherFactory"*, %"class.net::NetworkQualityEstimator"*, %"class.net::NetLog"*, %"class.net::WebSocketEndpointLockManager"* }
%"class.net::ClientSocketFactory" = type opaque
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::HttpAuthCache" = type { %"class.base::TickClock"*, %"class.base::Clock"*, i8, %"class.std::__1::multimap" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::SpdySessionPool" = type { %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::SSLClientContext::Observer", %"class.net::HttpServerProperties"*, %"class.net::TransportSecurityState"*, %"class.std::__1::set.124", %"class.std::__1::map.134", %"class.std::__1::multimap.145", %"class.std::__1::map.156", %"class.net::Http2PushPromiseIndex", %"class.net::SSLClientContext"*, %"class.net::HostResolver"*, %"class.std::__1::vector.236", i8, i8, i8, i8, i64, i32, %"class.std::__1::map.243", %"class.absl::optional", i8, i8, %"class.std::__1::map.255", i64 ()*, %"class.net::ServerPushDelegate"*, %"class.net::NetworkQualityEstimator"*, %"class.base::WeakPtrFactory.264" }
%"class.net::NetworkChangeNotifier::IPAddressObserver" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.net::SSLClientContext::Observer" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"class.net::HttpServerProperties" = type { %"class.net::BrokenAlternativeServices::Delegate", %"class.base::TickClock"*, %"class.base::Clock"*, i8, i8, i8, %"class.std::__1::unique_ptr", %"class.net::HttpServerProperties::ServerInfoMap", %"class.net::BrokenAlternativeServices", %"class.net::IPAddress", %"class.base::flat_map", %"class.std::__1::vector.82", %"class.base::MRUCache.94", %"class.base::flat_map.114", i64, %"class.base::OneShotTimer" }
%"class.net::BrokenAlternativeServices::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.net::HttpServerPropertiesManager"* }
%"class.net::HttpServerPropertiesManager" = type opaque
%"class.net::HttpServerProperties::ServerInfoMap" = type { %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.18" }
%"class.std::__1::__tree.18" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::BrokenAlternativeServices" = type { %"class.net::BrokenAlternativeServices::Delegate"*, %"class.base::TickClock"*, %"class.std::__1::list.28", %"class.std::__1::map.35", %"class.std::__1::set", %"class.net::RecentlyBrokenAlternativeServices", %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.76" }
%"class.std::__1::list.28" = type { %"class.std::__1::__list_imp.29" }
%"class.std::__1::__list_imp.29" = type { %"struct.std::__1::__list_node_base.30", %"class.std::__1::__compressed_pair.31" }
%"struct.std::__1::__list_node_base.30" = type { %"struct.std::__1::__list_node_base.30"*, %"struct.std::__1::__list_node_base.30"* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.46" }
%"class.std::__1::__tree.46" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::RecentlyBrokenAlternativeServices" = type { %"class.base::MRUCache.53" }
%"class.base::MRUCache.53" = type { %"class.base::MRUCacheBase.54" }
%"class.base::MRUCacheBase.54" = type { i32 (...)**, %"class.std::__1::list.55", %"class.std::__1::map.62", i64 }
%"class.std::__1::list.55" = type { %"class.std::__1::__list_imp.56" }
%"class.std::__1::__list_imp.56" = type { %"struct.std::__1::__list_node_base.57", %"class.std::__1::__compressed_pair.58" }
%"struct.std::__1::__list_node_base.57" = type { %"struct.std::__1::__list_node_base.57"*, %"struct.std::__1::__list_node_base.57"* }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.62" = type { %"class.std::__1::__tree.63" }
%"class.std::__1::__tree.63" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.76" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.77" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::basic_string"* }
%"class.base::MRUCache.94" = type { %"class.base::MRUCacheBase.95" }
%"class.base::MRUCacheBase.95" = type { i32 (...)**, %"class.std::__1::list.96", %"class.std::__1::map.103", i64 }
%"class.std::__1::list.96" = type { %"class.std::__1::__list_imp.97" }
%"class.std::__1::__list_imp.97" = type { %"struct.std::__1::__list_node_base.98", %"class.std::__1::__compressed_pair.99" }
%"struct.std::__1::__list_node_base.98" = type { %"struct.std::__1::__list_node_base.98"*, %"struct.std::__1::__list_node_base.98"* }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.103" = type { %"class.std::__1::__tree.104" }
%"class.std::__1::__tree.104" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::flat_map.114" = type { %"class.base::internal::flat_tree.115" }
%"class.base::internal::flat_tree.115" = type { %"class.std::__1::vector.116" }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"struct.std::__1::pair.118"*, %"struct.std::__1::pair.118"*, %"class.std::__1::__compressed_pair.119" }
%"struct.std::__1::pair.118" = type opaque
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::pair.118"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.71, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.73" }
%class.scoped_refptr.71 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.72" }>
%"class.base::RefCountedThreadSafe.72" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory.73" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.74 }
%class.scoped_refptr.74 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.75", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.75" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::TransportSecurityState" = type opaque
%"class.std::__1::set.124" = type { %"class.std::__1::__tree.125" }
%"class.std::__1::__tree.125" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.134" = type { %"class.std::__1::__tree.135" }
%"class.std::__1::__tree.135" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::multimap.145" = type { %"class.std::__1::__tree.146" }
%"class.std::__1::__tree.146" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.156" = type { %"class.std::__1::__tree.157" }
%"class.std::__1::__tree.157" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::Http2PushPromiseIndex" = type { %"class.std::__1::set.165" }
%"class.std::__1::set.165" = type { %"class.std::__1::__tree.166" }
%"class.std::__1::__tree.166" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.236" = type { %"class.std::__1::__vector_base.237" }
%"class.std::__1::__vector_base.237" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.238" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::map.243" = type { %"class.std::__1::__tree.244" }
%"class.std::__1::__tree.244" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.245", %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.254 }
%union.anon.254 = type { %"struct.net::SpdySessionPool::GreasedHttp2Frame" }
%"struct.net::SpdySessionPool::GreasedHttp2Frame" = type { i8, i8, %"class.std::__1::basic_string" }
%"class.std::__1::map.255" = type { %"class.std::__1::__tree.256" }
%"class.std::__1::__tree.256" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::ServerPushDelegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.264" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::QuicStreamFactory" = type { %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::NetworkChangeNotifier::NetworkObserver", %"class.net::CertDatabase::Observer", i8, %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::ClientSocketFactory"*, %"class.net::HttpServerProperties"*, %"class.net::ServerPushDelegate"*, %"class.net::CertVerifier"*, %"class.net::CTPolicyEnforcer"*, %"class.net::TransportSecurityState"*, %"class.net::SCTAuditingDelegate"*, %"class.net::QuicCryptoClientStreamFactory"*, %"class.quic::QuicRandom"*, %"class.quic::QuicClock"*, %"struct.net::QuicParams", %"class.net::QuicClockSkewDetector", %"class.net::SocketPerformanceWatcherFactory"*, %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.303", %"class.std::__1::map.309", %"class.std::__1::map.320", %"class.std::__1::map.331", %"class.std::__1::map.340", %"class.std::__1::map.349", %"class.std::__1::set.358", %"class.std::__1::map.368", %"class.std::__1::map.377", %"class.base::MRUCache.388", %"class.quic::QuicConfig", %"class.std::__1::map.435", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, %"class.quic::QuicTime::Delta", i64, %"class.net::IPEndPoint", i8, i8, %"class.net::NetworkConnection", i32, %"class.net::QuicConnectivityMonitor", %"class.base::TickClock"*, %"class.base::SequencedTaskRunner"*, %"class.net::SSLConfigService"*, i8, %"class.base::WeakPtrFactory.480" }
%"class.net::NetworkChangeNotifier::NetworkObserver" = type { i32 (...)**, %class.scoped_refptr.265 }
%class.scoped_refptr.265 = type { %"class.base::ObserverListThreadSafe.266"* }
%"class.base::ObserverListThreadSafe.266" = type opaque
%"class.net::CertDatabase::Observer" = type { i32 (...)** }
%"class.net::CertVerifier" = type opaque
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::QuicCryptoClientStreamFactory" = type opaque
%"class.quic::QuicRandom" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.236", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set.281", %"class.std::__1::vector.289", %"class.std::__1::vector.289", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::set.281" = type { %"class.std::__1::__tree.282" }
%"class.std::__1::__tree.282" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.283", %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { i32*, i32*, %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { i32* }
%"class.net::QuicClockSkewDetector" = type { %"class.base::TimeTicks", %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.296" }
%"class.base::time_internal::TimeBase.296" = type { i64 }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.net::QuicChromiumConnectionHelper"* }
%"class.net::QuicChromiumConnectionHelper" = type opaque
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.quic::QuicAlarmFactory"* }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"class.std::__1::map.309" = type { %"class.std::__1::__tree.310" }
%"class.std::__1::__tree.310" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.311", %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.320" = type { %"class.std::__1::__tree.321" }
%"class.std::__1::__tree.321" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.331" = type { %"class.std::__1::__tree.332" }
%"class.std::__1::__tree.332" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.333", %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.340" = type { %"class.std::__1::__tree.341" }
%"class.std::__1::__tree.341" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.349" = type { %"class.std::__1::__tree.350" }
%"class.std::__1::__tree.350" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.351", %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.358" = type { %"class.std::__1::__tree.359" }
%"class.std::__1::__tree.359" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.360", %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.368" = type { %"class.std::__1::__tree.369" }
%"class.std::__1::__tree.369" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.370", %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.377" = type { %"class.std::__1::__tree.378" }
%"class.std::__1::__tree.378" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.379", %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::MRUCache.388" = type { %"class.base::MRUCacheBase.389" }
%"class.base::MRUCacheBase.389" = type { i32 (...)**, %"class.std::__1::list.390", %"class.std::__1::map.397", i64 }
%"class.std::__1::list.390" = type { %"class.std::__1::__list_imp.391" }
%"class.std::__1::__list_imp.391" = type { %"struct.std::__1::__list_node_base.392", %"class.std::__1::__compressed_pair.393" }
%"struct.std::__1::__list_node_base.392" = type { %"struct.std::__1::__list_node_base.392"*, %"struct.std::__1::__list_node_base.392"* }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.397" = type { %"class.std::__1::__tree.398" }
%"class.std::__1::__tree.398" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.399", %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.406", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.413", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.289", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.423", %"class.absl::optional.423", %"class.absl::optional.423", %"class.absl::optional.423", %"class.absl::optional.423", %"class.absl::optional.423", %"class.absl::flat_hash_map", %"class.absl::flat_hash_map" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.289", %"class.std::__1::vector.289" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.406" = type { %"class.absl::optional_internal::optional_data.407" }
%"class.absl::optional_internal::optional_data.407" = type { %"class.absl::optional_internal::optional_data_base.408" }
%"class.absl::optional_internal::optional_data_base.408" = type { %"class.absl::optional_internal::optional_data_dtor_base.409" }
%"class.absl::optional_internal::optional_data_dtor_base.409" = type { i8, %union.anon.410 }
%union.anon.410 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.411, i32 }
%union.anon.411 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.412 }
%union.anon.412 = type { [4 x i32] }
%"class.absl::optional.413" = type { %"class.absl::optional_internal::optional_data.414" }
%"class.absl::optional_internal::optional_data.414" = type { %"class.absl::optional_internal::optional_data_base.415" }
%"class.absl::optional_internal::optional_data_base.415" = type { %"class.absl::optional_internal::optional_data_dtor_base.416" }
%"class.absl::optional_internal::optional_data_dtor_base.416" = type { i8, %union.anon.417 }
%union.anon.417 = type { %"struct.std::__1::pair.418" }
%"struct.std::__1::pair.418" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.422" }
%"class.quic::QuicConnectionId" = type { %union.anon.419 }
%union.anon.419 = type { %struct.anon.421 }
%struct.anon.421 = type { i8, i8* }
%"struct.std::__1::array.422" = type { [16 x i8] }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.422", %"struct.std::__1::array.422", i8 }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::optional.423" = type { %"class.absl::optional_internal::optional_data.424" }
%"class.absl::optional_internal::optional_data.424" = type { %"class.absl::optional_internal::optional_data_base.425" }
%"class.absl::optional_internal::optional_data_base.425" = type { %"class.absl::optional_internal::optional_data_dtor_base.426" }
%"class.absl::optional_internal::optional_data_dtor_base.426" = type { i8, %union.anon.427 }
%union.anon.427 = type { %"class.quic::QuicConnectionId" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::map.435" = type { %"class.std::__1::__tree.436" }
%"class.std::__1::__tree.436" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.437", %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::NetworkConnection" = type { %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::NetworkChangeNotifier::ConnectionTypeObserver", i32, i8* }
%"class.net::NetworkChangeNotifier::ConnectionTypeObserver" = type { i32 (...)**, %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.base::ObserverListThreadSafe.445"* }
%"class.base::ObserverListThreadSafe.445" = type opaque
%"class.net::QuicConnectivityMonitor" = type { %"class.net::QuicChromiumClientSession::ConnectivityObserver", i64, %"class.std::__1::set.446", %"class.std::__1::set.446", %"class.absl::optional.454", %"class.base::internal::ClampedNumeric", %"class.base::flat_map.459", %"class.base::flat_map.469", %"class.base::WeakPtrFactory.479" }
%"class.net::QuicChromiumClientSession::ConnectivityObserver" = type { %"class.base::CheckedObserver" }
%"class.std::__1::set.446" = type { %"class.std::__1::__tree.447" }
%"class.std::__1::__tree.447" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional.454" = type { %"class.absl::optional_internal::optional_data.455" }
%"class.absl::optional_internal::optional_data.455" = type { %"class.absl::optional_internal::optional_data_base.456" }
%"class.absl::optional_internal::optional_data_base.456" = type { %"class.absl::optional_internal::optional_data_dtor_base.457" }
%"class.absl::optional_internal::optional_data_dtor_base.457" = type { i8, %union.anon.458 }
%union.anon.458 = type { %"class.base::internal::ClampedNumeric" }
%"class.base::internal::ClampedNumeric" = type { i32 }
%"class.base::flat_map.459" = type { %"class.base::internal::flat_tree.460" }
%"class.base::internal::flat_tree.460" = type { %"class.std::__1::vector.461" }
%"class.std::__1::vector.461" = type { %"class.std::__1::__vector_base.462" }
%"class.std::__1::__vector_base.462" = type { %"struct.std::__1::pair.463"*, %"struct.std::__1::pair.463"*, %"class.std::__1::__compressed_pair.464" }
%"struct.std::__1::pair.463" = type opaque
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"struct.std::__1::pair.463"* }
%"class.base::flat_map.469" = type { %"class.base::internal::flat_tree.470" }
%"class.base::internal::flat_tree.470" = type { %"class.std::__1::vector.471" }
%"class.std::__1::vector.471" = type { %"class.std::__1::__vector_base.472" }
%"class.std::__1::__vector_base.472" = type { %"struct.std::__1::pair.473"*, %"struct.std::__1::pair.473"*, %"class.std::__1::__compressed_pair.474" }
%"struct.std::__1::pair.473" = type opaque
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"struct.std::__1::pair.473"* }
%"class.base::WeakPtrFactory.479" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.180", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.182" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory.480" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::ProxyDelegate" = type opaque
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::SSLClientContext" = type { %"class.net::SSLConfigService::Observer", %"class.net::CertDatabase::Observer", %"struct.net::SSLContextConfig", %"class.net::SSLConfigService"*, %"class.net::CertVerifier"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SSLClientSessionCache"*, %"class.net::SCTAuditingDelegate"*, %"class.net::SSLClientAuthCache", %"class.base::ObserverList.224" }
%"class.net::SSLConfigService::Observer" = type { i32 (...)** }
%"struct.net::SSLContextConfig" = type <{ i16, i16, i16, [2 x i8], %"class.std::__1::vector.173", i8, i8, [6 x i8] }>
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { i16*, i16*, %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { i16* }
%"class.net::SSLClientSessionCache" = type { %"class.base::Clock"*, %"struct.net::SSLClientSessionCache::Config", %"class.base::MRUCache.187", i64, %"class.std::__1::unique_ptr.207" }
%"struct.net::SSLClientSessionCache::Config" = type { i64, i64 }
%"class.base::MRUCache.187" = type { %"class.base::MRUCacheBase.188" }
%"class.base::MRUCacheBase.188" = type { i32 (...)**, %"class.std::__1::list.189", %"class.std::__1::map.196", i64 }
%"class.std::__1::list.189" = type { %"class.std::__1::__list_imp.190" }
%"class.std::__1::__list_imp.190" = type { %"struct.std::__1::__list_node_base.191", %"class.std::__1::__compressed_pair.192" }
%"struct.std::__1::__list_node_base.191" = type { %"struct.std::__1::__list_node_base.191"*, %"struct.std::__1::__list_node_base.191"* }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.196" = type { %"class.std::__1::__tree.197" }
%"class.std::__1::__tree.197" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.198", %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.net::SSLClientAuthCache" = type { %"class.std::__1::map.213" }
%"class.std::__1::map.213" = type { %"class.std::__1::__tree.214" }
%"class.std::__1::__tree.214" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.215", %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ObserverList.224" = type <{ %"class.std::__1::vector.225", %"class.base::LinkedList.233", i64, i32, [4 x i8] }>
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.228" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.227 }
%class.scoped_refptr.227 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.233" = type { %"class.base::LinkNode.234" }
%"class.base::LinkNode.234" = type { %"class.base::internal::LinkNodeBase" }
%"class.net::SocketPerformanceWatcherFactory" = type opaque
%"class.net::NetworkQualityEstimator" = type opaque
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.267", %"class.std::__1::vector.274" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.267" = type { %"class.std::__1::__vector_base.268" }
%"class.std::__1::__vector_base.268" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.269" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.276" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::WebSocketEndpointLockManager" = type { %"class.std::__1::map.481", %"class.base::TimeDelta", i64, %"class.base::WeakPtrFactory.490" }
%"class.std::__1::map.481" = type { %"class.std::__1::__tree.482" }
%"class.std::__1::__tree.482" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.483", %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.490" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.491" = type { %"class.std::__1::__tree.492" }
%"class.std::__1::__tree.492" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.502" }
%"struct.std::__1::pair.502" = type { %"class.net::ProxyServer", %"class.std::__1::unique_ptr.503" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.net::ClientSocketPool"* }
%"class.net::ClientSocketPool" = type { %"class.net::LowerLayeredPool" }
%"class.net::LowerLayeredPool" = type { i32 (...)** }
%"struct.std::__1::pair.595" = type { %"class.net::ProxyServer", %"class.std::__1::unique_ptr.503" }
%"class.net::WebSocketTransportClientSocketPool" = type { %"class.net::ClientSocketPool", %"class.net::ProxyServer", %"struct.net::CommonConnectJobParams"*, %"class.std::__1::set.512", %"class.std::__1::map.522", %"class.std::__1::list.531", %"class.std::__1::map.538", i32, i32, i8, %"class.base::WeakPtrFactory.547" }
%"class.std::__1::set.512" = type { %"class.std::__1::__tree.513" }
%"class.std::__1::__tree.513" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.514", %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.522" = type { %"class.std::__1::__tree.523" }
%"class.std::__1::__tree.523" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::list.531" = type { %"class.std::__1::__list_imp.532" }
%"class.std::__1::__list_imp.532" = type { %"struct.std::__1::__list_node_base.533", %"class.std::__1::__compressed_pair.534" }
%"struct.std::__1::__list_node_base.533" = type { %"struct.std::__1::__list_node_base.533"*, %"struct.std::__1::__list_node_base.533"* }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.538" = type { %"class.std::__1::__tree.539" }
%"class.std::__1::__tree.539" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.540", %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.547" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::TransportClientSocketPool" = type { %"class.net::ClientSocketPool", %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::SSLClientContext::Observer", %"class.std::__1::map.554", %"class.std::__1::map.565", i32, i32, i32, i32, i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.net::ProxyServer", %"class.std::__1::unique_ptr.574", i8, %"class.std::__1::set.580", %"class.net::SSLClientContext"*, %"class.base::WeakPtrFactory.590" }
%"class.std::__1::map.554" = type { %"class.std::__1::__tree.555" }
%"class.std::__1::__tree.555" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.556", %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.565" = type { %"class.std::__1::__tree.566" }
%"class.std::__1::__tree.566" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.net::TransportClientSocketPool::ConnectJobFactory"* }
%"class.net::TransportClientSocketPool::ConnectJobFactory" = type { i32 (...)** }
%"class.std::__1::set.580" = type { %"class.std::__1::__tree.581" }
%"class.std::__1::__tree.581" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.582", %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.590" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.602" }
%"union.absl::variant_internal::DestructibleUnionImpl.602" = type { %"union.absl::variant_internal::DestructibleUnionImpl.603" }
%"union.absl::variant_internal::DestructibleUnionImpl.603" = type { %"union.absl::variant_internal::DestructibleUnionImpl.604" }
%"union.absl::variant_internal::DestructibleUnionImpl.604" = type { %"union.absl::variant_internal::DestructibleUnionImpl.605" }
%"union.absl::variant_internal::DestructibleUnionImpl.605" = type { %"class.std::__1::basic_string" }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::trace_event::ProcessMemoryDump" = type opaque

$_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE4findIS3_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS3_JNS_4pairIS3_S8_EEEEENSI_INS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNKSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE4findIS3_EENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEERKT_ = comdat any

@_ZTVN3net27ClientSocketPoolManagerImplE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::ClientSocketPoolManagerImpl"*)* @_ZN3net27ClientSocketPoolManagerImplD2Ev to i8*), i8* bitcast (void (%"class.net::ClientSocketPoolManagerImpl"*)* @_ZN3net27ClientSocketPoolManagerImplD0Ev to i8*), i8* bitcast (void (%"class.net::ClientSocketPoolManagerImpl"*, i32, i8*)* @_ZN3net27ClientSocketPoolManagerImpl25FlushSocketPoolsWithErrorEiPKc to i8*), i8* bitcast (void (%"class.net::ClientSocketPoolManagerImpl"*, i8*)* @_ZN3net27ClientSocketPoolManagerImpl16CloseIdleSocketsEPKc to i8*), i8* bitcast (%"class.net::ClientSocketPool"* (%"class.net::ClientSocketPoolManagerImpl"*, %"class.net::ProxyServer"*)* @_ZN3net27ClientSocketPoolManagerImpl13GetSocketPoolERKNS_11ProxyServerE to i8*), i8* bitcast (%"class.base::Value"* (%"class.net::ClientSocketPoolManagerImpl"*)* @_ZNK3net27ClientSocketPoolManagerImpl21SocketPoolInfoToValueEv to i8*), i8* bitcast (void (%"class.net::ClientSocketPoolManagerImpl"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"*)* @_ZNK3net27ClientSocketPoolManagerImpl15DumpMemoryStatsEPN4base11trace_event17ProcessMemoryDumpERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [22 x i8] c"transport_socket_pool\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"socks_socket_pool\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"http_proxy_socket_pool\00", align 1

@_ZN3net27ClientSocketPoolManagerImplC1ERKNS_22CommonConnectJobParamsES3_NS_18HttpNetworkSession14SocketPoolTypeE = hidden unnamed_addr alias void (%"class.net::ClientSocketPoolManagerImpl"*, %"struct.net::CommonConnectJobParams"*, %"struct.net::CommonConnectJobParams"*, i32), void (%"class.net::ClientSocketPoolManagerImpl"*, %"struct.net::CommonConnectJobParams"*, %"struct.net::CommonConnectJobParams"*, i32)* @_ZN3net27ClientSocketPoolManagerImplC2ERKNS_22CommonConnectJobParamsES3_NS_18HttpNetworkSession14SocketPoolTypeE
@_ZN3net27ClientSocketPoolManagerImplD1Ev = hidden unnamed_addr alias void (%"class.net::ClientSocketPoolManagerImpl"*), void (%"class.net::ClientSocketPoolManagerImpl"*)* @_ZN3net27ClientSocketPoolManagerImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net27ClientSocketPoolManagerImplC2ERKNS_22CommonConnectJobParamsES3_NS_18HttpNetworkSession14SocketPoolTypeE(%"class.net::ClientSocketPoolManagerImpl"*, %"struct.net::CommonConnectJobParams"* dereferenceable(112), %"struct.net::CommonConnectJobParams"* dereferenceable(112), i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 0
  tail call void @_ZN3net23ClientSocketPoolManagerC2Ev(%"class.net::ClientSocketPoolManager"* %5) #9
  %6 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net27ClientSocketPoolManagerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 1
  tail call void @_ZN3net22CommonConnectJobParamsC1ERKS0_(%"struct.net::CommonConnectJobParams"* %7, %"struct.net::CommonConnectJobParams"* dereferenceable(112) %1) #9
  %8 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 2
  tail call void @_ZN3net22CommonConnectJobParamsC1ERKS0_(%"struct.net::CommonConnectJobParams"* %8, %"struct.net::CommonConnectJobParams"* dereferenceable(112) %2) #9
  %9 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 3
  store i32 %3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_node_base"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %12, align 8
  ret void
}

declare void @_ZN3net23ClientSocketPoolManagerC2Ev(%"class.net::ClientSocketPoolManager"*) unnamed_addr #1

declare void @_ZN3net22CommonConnectJobParamsC1ERKS0_(%"struct.net::CommonConnectJobParams"*, %"struct.net::CommonConnectJobParams"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net27ClientSocketPoolManagerImplD2Ev(%"class.net::ClientSocketPoolManagerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net27ClientSocketPoolManagerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.492"* %3, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 2
  tail call void @_ZN3net22CommonConnectJobParamsD1Ev(%"struct.net::CommonConnectJobParams"* %7) #9
  %8 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 1
  tail call void @_ZN3net22CommonConnectJobParamsD1Ev(%"struct.net::CommonConnectJobParams"* %8) #9
  %9 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 0
  tail call void @_ZN3net23ClientSocketPoolManagerD2Ev(%"class.net::ClientSocketPoolManager"* %9) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net22CommonConnectJobParamsD1Ev(%"struct.net::CommonConnectJobParams"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net23ClientSocketPoolManagerD2Ev(%"class.net::ClientSocketPoolManager"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net27ClientSocketPoolManagerImplD0Ev(%"class.net::ClientSocketPoolManagerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net27ClientSocketPoolManagerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.492"* %3, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 2
  tail call void @_ZN3net22CommonConnectJobParamsD1Ev(%"struct.net::CommonConnectJobParams"* %7) #9
  %8 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 1
  tail call void @_ZN3net22CommonConnectJobParamsD1Ev(%"struct.net::CommonConnectJobParams"* %8) #9
  %9 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 0
  tail call void @_ZN3net23ClientSocketPoolManagerD2Ev(%"class.net::ClientSocketPoolManager"* %9) #9
  %10 = bitcast %"class.net::ClientSocketPoolManagerImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net27ClientSocketPoolManagerImpl25FlushSocketPoolsWithErrorEiPKc(%"class.net::ClientSocketPoolManagerImpl"*, i32, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %45, %3
  ret void

9:                                                ; preds = %3, %45
  %10 = phi %"class.std::__1::__tree_end_node"* [ %46, %45 ], [ %5, %3 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 9
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.net::ClientSocketPool"**
  %13 = load %"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool"** %12, align 8
  %14 = bitcast %"class.net::ClientSocketPool"* %13 to void (%"class.net::ClientSocketPool"*, i32, i8*)***
  %15 = load void (%"class.net::ClientSocketPool"*, i32, i8*)**, void (%"class.net::ClientSocketPool"*, i32, i8*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::ClientSocketPool"*, i32, i8*)*, void (%"class.net::ClientSocketPool"*, i32, i8*)** %15, i64 10
  %17 = load void (%"class.net::ClientSocketPool"*, i32, i8*)*, void (%"class.net::ClientSocketPool"*, i32, i8*)** %16, align 8
  tail call void %17(%"class.net::ClientSocketPool"* %13, i32 %1, i8* %2) #9
  %18 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 1, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %29

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node_base"*
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 2
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_end_node"**
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, %22
  br i1 %28, label %45, label %36

29:                                               ; preds = %9, %29
  %30 = phi %"class.std::__1::__tree_node_base"* [ %32, %29 ], [ %19, %9 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %29

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %30, i64 0, i32 0
  br label %45

36:                                               ; preds = %21, %36
  %37 = phi %"class.std::__1::__tree_end_node"** [ %40, %36 ], [ %24, %21 ]
  %38 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 2
  %41 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, %39
  br i1 %44, label %45, label %36

45:                                               ; preds = %36, %21, %34
  %46 = phi %"class.std::__1::__tree_end_node"* [ %35, %34 ], [ %25, %21 ], [ %41, %36 ]
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %46, %6
  br i1 %47, label %8, label %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net27ClientSocketPoolManagerImpl16CloseIdleSocketsEPKc(%"class.net::ClientSocketPoolManagerImpl"*, i8*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %44, %2
  ret void

8:                                                ; preds = %2, %44
  %9 = phi %"class.std::__1::__tree_end_node"* [ %45, %44 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 9
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.net::ClientSocketPool"**
  %12 = load %"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool"** %11, align 8
  %13 = bitcast %"class.net::ClientSocketPool"* %12 to void (%"class.net::ClientSocketPool"*, i8*)***
  %14 = load void (%"class.net::ClientSocketPool"*, i8*)**, void (%"class.net::ClientSocketPool"*, i8*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.net::ClientSocketPool"*, i8*)*, void (%"class.net::ClientSocketPool"*, i8*)** %14, i64 11
  %16 = load void (%"class.net::ClientSocketPool"*, i8*)*, void (%"class.net::ClientSocketPool"*, i8*)** %15, align 8
  tail call void %16(%"class.net::ClientSocketPool"* %12, i8* %1) #9
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 1, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %28

20:                                               ; preds = %8
  %21 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node_base"*
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 2
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_end_node"**
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, %21
  br i1 %27, label %44, label %35

28:                                               ; preds = %8, %28
  %29 = phi %"class.std::__1::__tree_node_base"* [ %31, %28 ], [ %18, %8 ]
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %28

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0
  br label %44

35:                                               ; preds = %20, %35
  %36 = phi %"class.std::__1::__tree_end_node"** [ %39, %35 ], [ %23, %20 ]
  %37 = bitcast %"class.std::__1::__tree_end_node"** %36 to %"class.std::__1::__tree_node_base"**
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %38
  br i1 %43, label %44, label %35

44:                                               ; preds = %35, %20, %33
  %45 = phi %"class.std::__1::__tree_end_node"* [ %34, %33 ], [ %24, %20 ], [ %40, %35 ]
  %46 = icmp eq %"class.std::__1::__tree_end_node"* %45, %5
  br i1 %46, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::ClientSocketPool"* @_ZN3net27ClientSocketPoolManagerImpl13GetSocketPoolERKNS_11ProxyServerE(%"class.net::ClientSocketPoolManagerImpl"*, %"class.net::ProxyServer"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::pair.595", align 8
  %4 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0
  %5 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE4findIS3_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEERKT_(%"class.std::__1::__tree.492"* %4, %"class.net::ProxyServer"* dereferenceable(40) %1) #9
  %6 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %8, label %90

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 2
  %12 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  br i1 %11, label %14, label %18

14:                                               ; preds = %8
  %15 = tail call i32 @_ZN3net23ClientSocketPoolManager20max_sockets_per_poolENS_18HttpNetworkSession14SocketPoolTypeE(i32 %13) #9
  %16 = load i32, i32* %12, align 8
  %17 = tail call i32 @_ZN3net23ClientSocketPoolManager21max_sockets_per_groupENS_18HttpNetworkSession14SocketPoolTypeE(i32 %16) #9
  br label %24

18:                                               ; preds = %8
  %19 = tail call i32 @_ZN3net23ClientSocketPoolManager28max_sockets_per_proxy_serverENS_18HttpNetworkSession14SocketPoolTypeE(i32 %13) #9
  %20 = load i32, i32* %12, align 8
  %21 = tail call i32 @_ZN3net23ClientSocketPoolManager21max_sockets_per_groupENS_18HttpNetworkSession14SocketPoolTypeE(i32 %20) #9
  %22 = icmp slt i32 %21, %19
  %23 = select i1 %22, i32 %21, i32 %19
  br label %24

24:                                               ; preds = %18, %14
  %25 = phi i32 [ %17, %14 ], [ %23, %18 ]
  %26 = phi i32 [ %15, %14 ], [ %19, %18 ]
  %27 = load i32, i32* %12, align 8
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  %30 = load i32, i32* %9, align 8
  %31 = icmp eq i32 %30, 2
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 2
  %34 = tail call i8* @_Znwm(i64 184) #10
  %35 = bitcast i8* %34 to %"class.net::WebSocketTransportClientSocketPool"*
  tail call void @_ZN3net34WebSocketTransportClientSocketPoolC1EiiRKNS_11ProxyServerEPKNS_22CommonConnectJobParamsE(%"class.net::WebSocketTransportClientSocketPool"* nonnull %35, i32 %26, i32 %25, %"class.net::ProxyServer"* dereferenceable(40) %1, %"struct.net::CommonConnectJobParams"* %33) #9
  br label %43

36:                                               ; preds = %29, %24
  %37 = tail call i64 @_ZN3net23ClientSocketPoolManager26unused_idle_socket_timeoutENS_18HttpNetworkSession14SocketPoolTypeE(i32 %27) #9
  %38 = load i32, i32* %12, align 8
  %39 = icmp eq i32 %38, 1
  %40 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 1
  %41 = tail call i8* @_Znwm(i64 240) #10
  %42 = bitcast i8* %41 to %"class.net::TransportClientSocketPool"*
  tail call void @_ZN3net25TransportClientSocketPoolC1EiiN4base9TimeDeltaERKNS_11ProxyServerEbPKNS_22CommonConnectJobParamsE(%"class.net::TransportClientSocketPool"* nonnull %42, i32 %26, i32 %25, i64 %37, %"class.net::ProxyServer"* dereferenceable(40) %1, i1 zeroext %39, %"struct.net::CommonConnectJobParams"* %40) #9
  br label %43

43:                                               ; preds = %36, %32
  %44 = phi i8* [ %34, %32 ], [ %41, %36 ]
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"struct.std::__1::pair.595"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"struct.std::__1::pair.595", %"struct.std::__1::pair.595"* %3, i64 0, i32 0, i32 0
  %48 = load i32, i32* %9, align 8, !noalias !2
  store i32 %48, i32* %47, align 8, !alias.scope !2
  %49 = getelementptr inbounds %"struct.std::__1::pair.595", %"struct.std::__1::pair.595"* %3, i64 0, i32 0, i32 2
  %50 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2
  %51 = bitcast %"class.net::HostPortPair"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1, !noalias !2
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %43
  %56 = bitcast %"class.net::HostPortPair"* %49 to i8*
  %57 = bitcast %"class.net::HostPortPair"* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #9
  br label %64

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %49, i64 0, i32 0
  %60 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8, !noalias !2
  %62 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %59, i8* %61, i64 %63) #9
  br label %64

64:                                               ; preds = %55, %58
  %65 = getelementptr inbounds %"struct.std::__1::pair.595", %"struct.std::__1::pair.595"* %3, i64 0, i32 0, i32 2, i32 1
  %66 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2, i32 1
  %67 = load i16, i16* %66, align 8, !noalias !2
  store i16 %67, i16* %65, align 8, !alias.scope !2
  %68 = getelementptr inbounds %"struct.std::__1::pair.595", %"struct.std::__1::pair.595"* %3, i64 0, i32 1
  %69 = bitcast %"class.std::__1::unique_ptr.503"* %68 to i64*
  store i64 %45, i64* %69, align 8, !alias.scope !2
  %70 = getelementptr inbounds %"struct.std::__1::pair.595", %"struct.std::__1::pair.595"* %3, i64 0, i32 0
  %71 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS3_JNS_4pairIS3_S8_EEEEENSI_INS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.492"* %4, %"class.net::ProxyServer"* nonnull dereferenceable(40) %70, %"struct.std::__1::pair.595"* nonnull dereferenceable(48) %3) #9
  %72 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %71, 0
  %73 = getelementptr inbounds %"struct.std::__1::pair.595", %"struct.std::__1::pair.595"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %74 = load %"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool"** %73, align 8
  store %"class.net::ClientSocketPool"* null, %"class.net::ClientSocketPool"** %73, align 8
  %75 = icmp eq %"class.net::ClientSocketPool"* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %64
  %77 = bitcast %"class.net::ClientSocketPool"* %74 to void (%"class.net::ClientSocketPool"*)***
  %78 = load void (%"class.net::ClientSocketPool"*)**, void (%"class.net::ClientSocketPool"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.net::ClientSocketPool"*)*, void (%"class.net::ClientSocketPool"*)** %78, i64 1
  %80 = load void (%"class.net::ClientSocketPool"*)*, void (%"class.net::ClientSocketPool"*)** %79, align 8
  call void %80(%"class.net::ClientSocketPool"* nonnull %74) #9
  br label %81

81:                                               ; preds = %76, %64
  %82 = bitcast %"class.net::HostPortPair"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %88) #10
  br label %89

89:                                               ; preds = %86, %81
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %46) #9
  br label %90

90:                                               ; preds = %2, %89
  %91 = phi %"class.std::__1::__tree_end_node"* [ %72, %89 ], [ %5, %2 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 9
  %93 = bitcast %"class.std::__1::__tree_end_node"* %92 to %"class.net::ClientSocketPool"**
  %94 = load %"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool"** %93, align 8
  ret %"class.net::ClientSocketPool"* %94
}

declare i32 @_ZN3net23ClientSocketPoolManager20max_sockets_per_poolENS_18HttpNetworkSession14SocketPoolTypeE(i32) local_unnamed_addr #1

declare i32 @_ZN3net23ClientSocketPoolManager21max_sockets_per_groupENS_18HttpNetworkSession14SocketPoolTypeE(i32) local_unnamed_addr #1

declare i32 @_ZN3net23ClientSocketPoolManager28max_sockets_per_proxy_serverENS_18HttpNetworkSession14SocketPoolTypeE(i32) local_unnamed_addr #1

declare i64 @_ZN3net23ClientSocketPoolManager26unused_idle_socket_timeoutENS_18HttpNetworkSession14SocketPoolTypeE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Value"* @_ZNK3net27ClientSocketPoolManagerImpl21SocketPoolInfoToValueEv(%"class.net::ClientSocketPoolManagerImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Value", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = tail call i8* @_Znwm(i64 32) #10
  %6 = bitcast i8* %5 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %6) #9
  %7 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %10 = icmp eq %"class.std::__1::__tree_end_node"* %8, %9
  %11 = bitcast i8* %5 to %"class.base::Value"*
  br i1 %10, label %24, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.base::Value"* %2 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %25

24:                                               ; preds = %102, %1
  ret %"class.base::Value"* %11

25:                                               ; preds = %12, %102
  %26 = phi %"class.std::__1::__tree_end_node"* [ %8, %12 ], [ %103, %102 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.net::ProxyServer"*
  %29 = bitcast %"class.std::__1::__tree_end_node"* %27 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 2
  br i1 %31, label %37, label %32

32:                                               ; preds = %25
  %33 = icmp eq i32 %30, 8
  %34 = icmp eq i32 %30, 16
  %35 = or i1 %33, %34
  %36 = select i1 %35, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)
  br label %37

37:                                               ; preds = %32, %25
  %38 = phi i8* [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), %25 ], [ %36, %32 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #9
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 9
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.net::ClientSocketPool"**
  %41 = load %"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  call void @_ZNK3net11ProxyServer5ToURIEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.net::ProxyServer"* %28) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %42 = call i64 @strlen(i8* %38) #9
  %43 = icmp ugt i64 %42, -17
  br i1 %43, label %44, label %46

44:                                               ; preds = %37
  %45 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %45) #11
  unreachable

46:                                               ; preds = %37
  %47 = icmp ult i64 %42, 23
  br i1 %47, label %53, label %48

48:                                               ; preds = %46
  %49 = add nuw i64 %42, 16
  %50 = and i64 %49, -16
  %51 = call i8* @_Znwm(i64 %50) #10
  store i8* %51, i8** %16, align 8
  %52 = or i64 %50, -9223372036854775808
  store i64 %52, i64* %17, align 8
  store i64 %42, i64* %18, align 8
  br label %56

53:                                               ; preds = %46
  %54 = trunc i64 %42 to i8
  store i8 %54, i8* %20, align 1
  %55 = icmp eq i64 %42, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %53, %48
  %57 = phi i8* [ %51, %48 ], [ %15, %53 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* align 1 %38, i64 %42, i1 false) #9
  br label %58

58:                                               ; preds = %53, %56
  %59 = phi i8* [ %15, %53 ], [ %57, %56 ]
  %60 = getelementptr inbounds i8, i8* %59, i64 %42
  store i8 0, i8* %60, align 1
  %61 = bitcast %"class.net::ClientSocketPool"* %41 to void (%"class.base::Value"*, %"class.net::ClientSocketPool"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)***
  %62 = load void (%"class.base::Value"*, %"class.net::ClientSocketPool"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**, void (%"class.base::Value"*, %"class.net::ClientSocketPool"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.base::Value"*, %"class.net::ClientSocketPool"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.base::Value"*, %"class.net::ClientSocketPool"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %62, i64 16
  %64 = load void (%"class.base::Value"*, %"class.net::ClientSocketPool"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.base::Value"*, %"class.net::ClientSocketPool"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %63, align 8
  call void %64(%"class.base::Value"* nonnull sret %2, %"class.net::ClientSocketPool"* %41, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #9
  call void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"* nonnull %11, %"class.base::Value"* nonnull dereferenceable(32) %2) #9
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %2) #9
  %65 = load i8, i8* %20, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %58
  %68 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %58, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  %70 = load i8, i8* %22, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %73) #10
  br label %74

74:                                               ; preds = %69, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #9
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 1, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %76, null
  br i1 %77, label %78, label %86

78:                                               ; preds = %74
  %79 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node_base"*
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 2
  %81 = bitcast %"class.std::__1::__tree_end_node"* %80 to %"class.std::__1::__tree_end_node"**
  %82 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %81, align 8
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, %79
  br i1 %85, label %102, label %93

86:                                               ; preds = %74, %86
  %87 = phi %"class.std::__1::__tree_node_base"* [ %89, %86 ], [ %76, %74 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %91, label %86

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %87, i64 0, i32 0
  br label %102

93:                                               ; preds = %78, %93
  %94 = phi %"class.std::__1::__tree_end_node"** [ %97, %93 ], [ %81, %78 ]
  %95 = bitcast %"class.std::__1::__tree_end_node"** %94 to %"class.std::__1::__tree_node_base"**
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %96, i64 0, i32 2
  %98 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, %96
  br i1 %101, label %102, label %93

102:                                              ; preds = %93, %78, %91
  %103 = phi %"class.std::__1::__tree_end_node"* [ %92, %91 ], [ %82, %78 ], [ %98, %93 ]
  %104 = icmp eq %"class.std::__1::__tree_end_node"* %103, %9
  br i1 %104, label %24, label %25
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #1

declare void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZNK3net11ProxyServer5ToURIEv(%"class.std::__1::basic_string"* sret, %"class.net::ProxyServer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net27ClientSocketPoolManagerImpl15DumpMemoryStatsEPN4base11trace_event17ProcessMemoryDumpERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.net::ClientSocketPoolManagerImpl"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.net::HostPortPair", align 8
  %5 = alloca %"class.net::ProxyServer", align 8
  %6 = bitcast %"class.net::ProxyServer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #9
  %7 = bitcast %"class.net::HostPortPair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9, !noalias !5
  call void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"* nonnull %4) #9, !noalias !5
  call void @_ZN3net11ProxyServerC1ENS0_6SchemeERKNS_12HostPortPairE(%"class.net::ProxyServer"* nonnull %5, i32 2, %"class.net::HostPortPair"* nonnull dereferenceable(32) %4) #9
  %8 = bitcast %"class.net::HostPortPair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1, !noalias !5
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !noalias !5
  call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %3, %12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9, !noalias !5
  %16 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0
  %17 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE4findIS3_EENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEERKT_(%"class.std::__1::__tree.492"* %16, %"class.net::ProxyServer"* nonnull dereferenceable(40) %5) #9
  %18 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %5, i64 0, i32 2
  %19 = bitcast %"class.net::HostPortPair"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %15, %23
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #9
  %27 = getelementptr inbounds %"class.net::ClientSocketPoolManagerImpl", %"class.net::ClientSocketPoolManagerImpl"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %28 = icmp eq %"class.std::__1::__tree_end_node"* %17, %27
  br i1 %28, label %37, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 9
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.net::ClientSocketPool"**
  %32 = load %"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool"** %31, align 8
  %33 = bitcast %"class.net::ClientSocketPool"* %32 to void (%"class.net::ClientSocketPool"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"*)***
  %34 = load void (%"class.net::ClientSocketPool"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"*)**, void (%"class.net::ClientSocketPool"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.net::ClientSocketPool"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"*)*, void (%"class.net::ClientSocketPool"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"*)** %34, i64 17
  %36 = load void (%"class.net::ClientSocketPool"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"*)*, void (%"class.net::ClientSocketPool"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"*)** %35, align 8
  call void %36(%"class.net::ClientSocketPool"* %32, %"class.base::trace_event::ProcessMemoryDump"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #9
  br label %37

37:                                               ; preds = %26, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"*) unnamed_addr #1

declare void @_ZN3net11ProxyServerC1ENS0_6SchemeERKNS_12HostPortPairE(%"class.net::ProxyServer"*, i32, %"class.net::HostPortPair"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.492"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.492"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.492"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool"** %10, align 8
  store %"class.net::ClientSocketPool"* null, %"class.net::ClientSocketPool"** %10, align 8
  %12 = icmp eq %"class.net::ClientSocketPool"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.net::ClientSocketPool"* %11 to void (%"class.net::ClientSocketPool"*)***
  %15 = load void (%"class.net::ClientSocketPool"*)**, void (%"class.net::ClientSocketPool"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::ClientSocketPool"*)*, void (%"class.net::ClientSocketPool"*)** %15, i64 1
  %17 = load void (%"class.net::ClientSocketPool"*)*, void (%"class.net::ClientSocketPool"*)** %16, align 8
  tail call void %17(%"class.net::ClientSocketPool"* nonnull %11) #9
  br label %18

18:                                               ; preds = %13, %4
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %20 = bitcast %"class.net::HostPortPair"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %18, %24
  %28 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %2, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE4findIS3_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEERKT_(%"class.std::__1::__tree.492"*, %"class.net::ProxyServer"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.492", %"class.std::__1::__tree.492"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %123, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2
  %10 = load i32, i32* %8, align 4
  %11 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = bitcast %"class.net::HostPortPair"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = zext i8 %15 to i64
  %19 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.net::HostPortPair"* %9 to i8*
  br label %21

21:                                               ; preds = %73, %7
  %22 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %75, %73 ]
  %23 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %76, %73 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 2
  %26 = load i32, i32* %24, align 4
  %27 = icmp slt i32 %26, %10
  br i1 %27, label %63, label %28

28:                                               ; preds = %21
  %29 = icmp slt i32 %10, %26
  br i1 %29, label %70, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %32 = load i16, i16* %31, align 2
  %33 = icmp ult i16 %32, %12
  br i1 %33, label %63, label %34

34:                                               ; preds = %30
  %35 = icmp ult i16 %12, %32
  br i1 %35, label %70, label %36

36:                                               ; preds = %34
  %37 = load i64, i64* %17, align 8
  %38 = select i1 %16, i64 %37, i64 %18
  %39 = bitcast %"class.net::HostPortPair"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %41 to i64
  %46 = select i1 %42, i64 %44, i64 %45
  %47 = icmp ult i64 %38, %46
  %48 = select i1 %47, i64 %38, i64 %46
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.net::HostPortPair"* %25 to i8*
  %54 = select i1 %42, i8* %52, i8* %53
  %55 = load i8*, i8** %19, align 8
  %56 = select i1 %16, i8* %55, i8* %20
  %57 = tail call i32 @memcmp(i8* %54, i8* %56, i64 %48) #9
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %66

59:                                               ; preds = %50, %36
  %60 = icmp ult i64 %46, %38
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node"**
  br i1 %60, label %73, label %70

63:                                               ; preds = %30, %21
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %65 = bitcast %"class.std::__1::__tree_node_base"** %64 to %"class.std::__1::__tree_node"**
  br label %73

66:                                               ; preds = %50
  %67 = icmp slt i32 %57, 0
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = bitcast %"class.std::__1::__tree_node_base"** %68 to %"class.std::__1::__tree_node"**
  br i1 %67, label %73, label %70

70:                                               ; preds = %66, %59, %34, %28
  %71 = bitcast %"class.std::__1::__tree_node"* %23 to %"class.std::__1::__tree_node"**
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  br label %73

73:                                               ; preds = %70, %66, %63, %59
  %74 = phi %"class.std::__1::__tree_node"** [ %71, %70 ], [ %65, %63 ], [ %69, %66 ], [ %62, %59 ]
  %75 = phi %"class.std::__1::__tree_end_node"* [ %72, %70 ], [ %22, %63 ], [ %22, %66 ], [ %22, %59 ]
  %76 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %74, align 8
  %77 = icmp eq %"class.std::__1::__tree_node"* %76, null
  br i1 %77, label %78, label %21

78:                                               ; preds = %73
  %79 = icmp eq %"class.std::__1::__tree_end_node"* %75, %3
  br i1 %79, label %123, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 4
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to i32*
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 5
  %84 = load i32, i32* %82, align 4
  %85 = icmp slt i32 %10, %84
  br i1 %85, label %123, label %86

86:                                               ; preds = %80
  %87 = icmp slt i32 %84, %10
  br i1 %87, label %124, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 8
  %90 = bitcast %"class.std::__1::__tree_end_node"* %89 to i16*
  %91 = load i16, i16* %90, align 2
  %92 = icmp ult i16 %12, %91
  br i1 %92, label %123, label %93

93:                                               ; preds = %88
  %94 = icmp ult i16 %91, %12
  br i1 %94, label %124, label %95

95:                                               ; preds = %93
  %96 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 6
  %101 = bitcast %"class.std::__1::__tree_end_node"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = zext i8 %98 to i64
  %104 = select i1 %99, i64 %102, i64 %103
  %105 = load i64, i64* %17, align 8
  %106 = select i1 %16, i64 %105, i64 %18
  %107 = icmp ult i64 %104, %106
  %108 = select i1 %107, i64 %104, i64 %106
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %119, label %110

110:                                              ; preds = %95
  %111 = load i8*, i8** %19, align 8
  %112 = select i1 %16, i8* %111, i8* %20
  %113 = bitcast %"class.std::__1::__tree_end_node"* %83 to i8**
  %114 = load i8*, i8** %113, align 8
  %115 = bitcast %"class.std::__1::__tree_end_node"* %83 to i8*
  %116 = select i1 %99, i8* %114, i8* %115
  %117 = tail call i32 @memcmp(i8* %112, i8* %116, i64 %108) #9
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %110, %95
  %120 = icmp ult i64 %106, %104
  br i1 %120, label %123, label %124

121:                                              ; preds = %110
  %122 = icmp slt i32 %117, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %78, %88, %80, %2, %119, %121
  br label %124

124:                                              ; preds = %93, %86, %121, %119, %123
  %125 = phi %"class.std::__1::__tree_end_node"* [ %3, %123 ], [ %75, %119 ], [ %75, %121 ], [ %75, %86 ], [ %75, %93 ]
  ret %"class.std::__1::__tree_end_node"* %125
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

declare void @_ZN3net34WebSocketTransportClientSocketPoolC1EiiRKNS_11ProxyServerEPKNS_22CommonConnectJobParamsE(%"class.net::WebSocketTransportClientSocketPool"*, i32, i32, %"class.net::ProxyServer"* dereferenceable(40), %"struct.net::CommonConnectJobParams"*) unnamed_addr #1

declare void @_ZN3net25TransportClientSocketPoolC1EiiN4base9TimeDeltaERKNS_11ProxyServerEbPKNS_22CommonConnectJobParamsE(%"class.net::TransportClientSocketPool"*, i32, i32, i64, %"class.net::ProxyServer"* dereferenceable(40), i1 zeroext, %"struct.net::CommonConnectJobParams"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS3_JNS_4pairIS3_S8_EEEEENSI_INS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.492"*, %"class.net::ProxyServer"* dereferenceable(40), %"struct.std::__1::pair.595"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree.492"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.net::ProxyServer"* dereferenceable(40) %1)
  %7 = bitcast %"class.std::__1::__tree_node_base"** %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %10, label %52

10:                                               ; preds = %3
  %11 = call i8* @_Znwm(i64 80) #10, !noalias !8
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast i8* %12 to i32*
  %14 = getelementptr inbounds %"struct.std::__1::pair.595", %"struct.std::__1::pair.595"* %2, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 8, !noalias !8
  store i32 %15, i32* %13, align 8, !noalias !8
  %16 = getelementptr inbounds i8, i8* %11, i64 40
  %17 = getelementptr inbounds %"struct.std::__1::pair.595", %"struct.std::__1::pair.595"* %2, i64 0, i32 0, i32 2
  %18 = bitcast %"class.net::HostPortPair"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %18, i64 24, i1 false) #9, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #9, !noalias !8
  %19 = getelementptr inbounds i8, i8* %11, i64 64
  %20 = bitcast i8* %19 to i16*
  %21 = getelementptr inbounds %"struct.std::__1::pair.595", %"struct.std::__1::pair.595"* %2, i64 0, i32 0, i32 2, i32 1
  %22 = load i16, i16* %21, align 8, !noalias !8
  store i16 %22, i16* %20, align 8, !noalias !8
  %23 = getelementptr inbounds i8, i8* %11, i64 72
  %24 = getelementptr inbounds %"struct.std::__1::pair.595", %"struct.std::__1::pair.595"* %2, i64 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.503", %"class.std::__1::unique_ptr.503"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::unique_ptr.503"* %24 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !8
  store %"class.net::ClientSocketPool"* null, %"class.net::ClientSocketPool"** %25, align 8, !noalias !8
  %28 = bitcast i8* %23 to i64*
  store i64 %27, i64* %28, align 8, !noalias !8
  %29 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i8* %11 to %"class.std::__1::__tree_node"*
  %32 = bitcast i8* %11 to %"class.std::__1::__tree_node_base"*
  %33 = getelementptr inbounds i8, i8* %11, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #9
  %34 = bitcast i8* %33 to i64*
  store i64 %30, i64* %34, align 8
  %35 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8**
  store i8* %11, i8** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree.492", %"class.std::__1::__tree.492"* %0, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 0, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %10
  %42 = ptrtoint %"class.std::__1::__tree_node_base"* %39 to i64
  %43 = bitcast %"class.std::__1::__tree.492"* %0 to i64*
  store i64 %42, i64* %43, align 8
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  br label %45

45:                                               ; preds = %41, %10
  %46 = phi %"class.std::__1::__tree_node_base"* [ %32, %10 ], [ %44, %41 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree.492", %"class.std::__1::__tree.492"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %48, %"class.std::__1::__tree_node_base"* %46) #9
  %49 = getelementptr inbounds %"class.std::__1::__tree.492", %"class.std::__1::__tree.492"* %0, i64 0, i32 2, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %49, align 8
  br label %52

52:                                               ; preds = %45, %3
  %53 = phi i8 [ 1, %45 ], [ 0, %3 ]
  %54 = phi %"class.std::__1::__tree_node"* [ %31, %45 ], [ %8, %3 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %54, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %56 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %55, 0
  %57 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %56, i8 %53, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree.492"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.net::ProxyServer"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.492", %"class.std::__1::__tree.492"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %116, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.492", %"class.std::__1::__tree.492"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %2, i64 0, i32 2
  %12 = load i32, i32* %10, align 4
  %13 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %2, i64 0, i32 2, i32 1
  %14 = load i16, i16* %13, align 2
  %15 = bitcast %"class.net::HostPortPair"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = zext i8 %17 to i64
  %21 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.net::HostPortPair"* %11 to i8*
  br label %23

23:                                               ; preds = %8, %112
  %24 = phi %"class.std::__1::__tree_node"* [ %115, %112 ], [ %6, %8 ]
  %25 = phi %"class.std::__1::__tree_node_base"** [ %114, %112 ], [ %9, %8 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 2
  %28 = load i32, i32* %26, align 4
  %29 = icmp slt i32 %12, %28
  br i1 %29, label %65, label %30

30:                                               ; preds = %23
  %31 = icmp slt i32 %28, %12
  br i1 %31, label %104, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %34 = load i16, i16* %33, align 2
  %35 = icmp ult i16 %14, %34
  br i1 %35, label %65, label %36

36:                                               ; preds = %32
  %37 = icmp ult i16 %34, %14
  br i1 %37, label %71, label %38

38:                                               ; preds = %36
  %39 = bitcast %"class.net::HostPortPair"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %41 to i64
  %46 = select i1 %42, i64 %44, i64 %45
  %47 = load i64, i64* %19, align 8
  %48 = select i1 %18, i64 %47, i64 %20
  %49 = icmp ult i64 %46, %48
  %50 = select i1 %49, i64 %46, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %61, label %52

52:                                               ; preds = %38
  %53 = load i8*, i8** %21, align 8
  %54 = select i1 %18, i8* %53, i8* %22
  %55 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = bitcast %"class.net::HostPortPair"* %27 to i8*
  %58 = select i1 %42, i8* %56, i8* %57
  %59 = tail call i32 @memcmp(i8* %54, i8* %58, i64 %50) #9
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %52, %38
  %62 = icmp ult i64 %48, %46
  br i1 %62, label %65, label %71

63:                                               ; preds = %52
  %64 = icmp slt i32 %59, 0
  br i1 %64, label %65, label %71

65:                                               ; preds = %32, %23, %61, %63
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %69, label %112

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %70, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %118

71:                                               ; preds = %36, %61, %63
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %73 = load i16, i16* %72, align 2
  %74 = icmp ult i16 %73, %14
  br i1 %74, label %104, label %75

75:                                               ; preds = %71
  %76 = icmp ult i16 %14, %73
  br i1 %76, label %110, label %77

77:                                               ; preds = %75
  %78 = load i64, i64* %19, align 8
  %79 = select i1 %18, i64 %78, i64 %20
  %80 = bitcast %"class.net::HostPortPair"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %82 to i64
  %87 = select i1 %83, i64 %85, i64 %86
  %88 = icmp ult i64 %79, %87
  %89 = select i1 %88, i64 %79, i64 %87
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %100, label %91

91:                                               ; preds = %77
  %92 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = bitcast %"class.net::HostPortPair"* %27 to i8*
  %95 = select i1 %83, i8* %93, i8* %94
  %96 = load i8*, i8** %21, align 8
  %97 = select i1 %18, i8* %96, i8* %22
  %98 = tail call i32 @memcmp(i8* %95, i8* %97, i64 %89) #9
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %91, %77
  %101 = icmp ult i64 %87, %79
  br i1 %101, label %104, label %110

102:                                              ; preds = %91
  %103 = icmp slt i32 %98, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %30, %71, %100, %102
  %105 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 1
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node_base"* %106, null
  br i1 %107, label %108, label %112

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %109, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %118

110:                                              ; preds = %75, %100, %102
  %111 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %111, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %118

112:                                              ; preds = %104, %65
  %113 = phi %"class.std::__1::__tree_node_base"* [ %67, %65 ], [ %106, %104 ]
  %114 = phi %"class.std::__1::__tree_node_base"** [ %66, %65 ], [ %105, %104 ]
  %115 = bitcast %"class.std::__1::__tree_node_base"* %113 to %"class.std::__1::__tree_node"*
  br label %23

116:                                              ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %118

118:                                              ; preds = %116, %110, %108, %69
  %119 = phi %"class.std::__1::__tree_node_base"** [ %66, %69 ], [ %105, %108 ], [ %25, %110 ], [ %117, %116 ]
  ret %"class.std::__1::__tree_node_base"** %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !11
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !11
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE4findIS3_EENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEERKT_(%"class.std::__1::__tree.492"*, %"class.net::ProxyServer"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.492", %"class.std::__1::__tree.492"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %123, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2
  %10 = load i32, i32* %8, align 4
  %11 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = bitcast %"class.net::HostPortPair"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = zext i8 %15 to i64
  %19 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.net::HostPortPair"* %9 to i8*
  br label %21

21:                                               ; preds = %73, %7
  %22 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %75, %73 ]
  %23 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %76, %73 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 2
  %26 = load i32, i32* %24, align 4
  %27 = icmp slt i32 %26, %10
  br i1 %27, label %63, label %28

28:                                               ; preds = %21
  %29 = icmp slt i32 %10, %26
  br i1 %29, label %70, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %32 = load i16, i16* %31, align 2
  %33 = icmp ult i16 %32, %12
  br i1 %33, label %63, label %34

34:                                               ; preds = %30
  %35 = icmp ult i16 %12, %32
  br i1 %35, label %70, label %36

36:                                               ; preds = %34
  %37 = load i64, i64* %17, align 8
  %38 = select i1 %16, i64 %37, i64 %18
  %39 = bitcast %"class.net::HostPortPair"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %41 to i64
  %46 = select i1 %42, i64 %44, i64 %45
  %47 = icmp ult i64 %38, %46
  %48 = select i1 %47, i64 %38, i64 %46
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.net::HostPortPair"* %25 to i8*
  %54 = select i1 %42, i8* %52, i8* %53
  %55 = load i8*, i8** %19, align 8
  %56 = select i1 %16, i8* %55, i8* %20
  %57 = tail call i32 @memcmp(i8* %54, i8* %56, i64 %48) #9
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %66

59:                                               ; preds = %50, %36
  %60 = icmp ult i64 %46, %38
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node"**
  br i1 %60, label %73, label %70

63:                                               ; preds = %30, %21
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %65 = bitcast %"class.std::__1::__tree_node_base"** %64 to %"class.std::__1::__tree_node"**
  br label %73

66:                                               ; preds = %50
  %67 = icmp slt i32 %57, 0
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = bitcast %"class.std::__1::__tree_node_base"** %68 to %"class.std::__1::__tree_node"**
  br i1 %67, label %73, label %70

70:                                               ; preds = %66, %59, %34, %28
  %71 = bitcast %"class.std::__1::__tree_node"* %23 to %"class.std::__1::__tree_node"**
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  br label %73

73:                                               ; preds = %70, %66, %63, %59
  %74 = phi %"class.std::__1::__tree_node"** [ %71, %70 ], [ %65, %63 ], [ %69, %66 ], [ %62, %59 ]
  %75 = phi %"class.std::__1::__tree_end_node"* [ %72, %70 ], [ %22, %63 ], [ %22, %66 ], [ %22, %59 ]
  %76 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %74, align 8
  %77 = icmp eq %"class.std::__1::__tree_node"* %76, null
  br i1 %77, label %78, label %21

78:                                               ; preds = %73
  %79 = icmp eq %"class.std::__1::__tree_end_node"* %75, %3
  br i1 %79, label %123, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 4
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to i32*
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 5
  %84 = load i32, i32* %82, align 4
  %85 = icmp slt i32 %10, %84
  br i1 %85, label %123, label %86

86:                                               ; preds = %80
  %87 = icmp slt i32 %84, %10
  br i1 %87, label %124, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 8
  %90 = bitcast %"class.std::__1::__tree_end_node"* %89 to i16*
  %91 = load i16, i16* %90, align 2
  %92 = icmp ult i16 %12, %91
  br i1 %92, label %123, label %93

93:                                               ; preds = %88
  %94 = icmp ult i16 %91, %12
  br i1 %94, label %124, label %95

95:                                               ; preds = %93
  %96 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 6
  %101 = bitcast %"class.std::__1::__tree_end_node"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = zext i8 %98 to i64
  %104 = select i1 %99, i64 %102, i64 %103
  %105 = load i64, i64* %17, align 8
  %106 = select i1 %16, i64 %105, i64 %18
  %107 = icmp ult i64 %104, %106
  %108 = select i1 %107, i64 %104, i64 %106
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %119, label %110

110:                                              ; preds = %95
  %111 = load i8*, i8** %19, align 8
  %112 = select i1 %16, i8* %111, i8* %20
  %113 = bitcast %"class.std::__1::__tree_end_node"* %83 to i8**
  %114 = load i8*, i8** %113, align 8
  %115 = bitcast %"class.std::__1::__tree_end_node"* %83 to i8*
  %116 = select i1 %99, i8* %114, i8* %115
  %117 = tail call i32 @memcmp(i8* %112, i8* %116, i64 %108) #9
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %110, %95
  %120 = icmp ult i64 %106, %104
  br i1 %120, label %123, label %124

121:                                              ; preds = %110
  %122 = icmp slt i32 %117, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %78, %88, %80, %2, %119, %121
  br label %124

124:                                              ; preds = %93, %86, %121, %119, %123
  %125 = phi %"class.std::__1::__tree_end_node"* [ %3, %123 ], [ %75, %119 ], [ %75, %121 ], [ %75, %86 ], [ %75, %93 ]
  ret %"class.std::__1::__tree_end_node"* %125
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__19make_pairIRKN3net11ProxyServerENS_10unique_ptrINS1_16ClientSocketPoolENS_14default_deleteIS6_EEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSB_IT0_E4typeEEEOSC_OSF_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__19make_pairIRKN3net11ProxyServerENS_10unique_ptrINS1_16ClientSocketPoolENS_14default_deleteIS6_EEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSB_IT0_E4typeEEEOSC_OSF_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3net11ProxyServer6DirectEv: argument 0"}
!7 = distinct !{!7, !"_ZN3net11ProxyServer6DirectEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJNS_4pairIS3_S8_EEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISM_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeINS_12__value_typeIN3net11ProxyServerENS_10unique_ptrINS2_16ClientSocketPoolENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJNS_4pairIS3_S8_EEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISM_EEEEEEDpOT_"}
!11 = !{i8 0, i8 2}
