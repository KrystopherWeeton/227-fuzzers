; ModuleID = '../../gpu/command_buffer/service/passthrough_abstract_texture_impl.cc'
source_filename = "../../gpu/command_buffer/service/passthrough_abstract_texture_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::gles2::PassthroughAbstractTextureImpl" = type { %"class.gpu::gles2::AbstractTexture", %class.scoped_refptr, i8, %"class.gl::GLApi"*, %"class.gpu::gles2::GLES2DecoderPassthroughImpl"*, %"class.base::OnceCallback.687" }
%"class.gpu::gles2::AbstractTexture" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.gpu::gles2::TexturePassthrough"* }
%"class.gl::GLApi" = type { i32 (...)** }
%"class.base::OnceCallback.687" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.30", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gpu::gles2::TexturePassthrough" = type { %"class.gpu::TextureBase", %"class.base::RefCounted", %"class.base::SupportsWeakPtr", i32, i8, i8, i64, %"class.std::__1::vector" }
%"class.gpu::TextureBase" = type { i32 (...)**, i32, i32, %"class.gpu::MailboxManager"* }
%"class.gpu::MailboxManager" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.7"*, %"class.std::__1::vector.7"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::vector.7" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::vector.7"* }
%"class.gpu::gles2::GLES2DecoderPassthroughImpl" = type { %"class.gpu::gles2::GLES2Decoder", %"class.ui::GpuSwitchingObserver", %"class.base::internal::flat_tree", i32, %"class.gpu::gles2::DebugMarkerManager", %"class.gpu::gles2::Logger", %"class.gl::GLApi"*, %class.scoped_refptr.31, %class.scoped_refptr.34, i8, %class.scoped_refptr.93, %class.scoped_refptr.168, i8, i8, %"struct.gpu::gles2::PassthroughResources"*, %"class.gpu::gles2::ClientServiceMap", %"class.gpu::gles2::ClientServiceMap", %"class.gpu::gles2::ClientServiceMap", %"class.gpu::gles2::ClientServiceMap", %"class.gpu::MailboxManager"*, %"class.std::__1::unique_ptr.534", %"class.std::__1::unique_ptr.540", i64, [4 x i32], [4 x i32], %"struct.std::__1::array", %"class.std::__1::vector.547", %"class.std::__1::unordered_map.390", %"class.std::__1::unordered_map.556", %"class.base::circular_deque.580", %"class.std::__1::unordered_map.613", %"class.base::circular_deque.637", %"class.base::flat_map.603", %"class.std::__1::set.640", i8, %"struct.gpu::gles2::GLES2DecoderPassthroughImpl::EmulatedDefaultFramebufferFormat", %"class.std::__1::unique_ptr.648", %"class.std::__1::unique_ptr.651", i8, i8, %"class.std::__1::vector.660", %"class.std::__1::vector.660", i64, i32, i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr.667", i8*, i32, i8, i8, i8, i8, i8, %"class.std::__1::vector.673", i32, %"class.std::__1::unique_ptr.680", %"class.base::WeakPtrFactory.686" }
%"class.gpu::gles2::GLES2Decoder" = type { %"class.gpu::CommonDecoder", %"class.gpu::DecoderContext", i8, i8, i8, %"class.gpu::gles2::Outputter"* }
%"class.gpu::CommonDecoder" = type { i32 (...)**, %"class.gpu::CommandBufferServiceBase"*, %"class.gpu::DecoderClient"*, i64, %"class.std::__1::map" }
%"class.gpu::CommandBufferServiceBase" = type opaque
%"class.gpu::DecoderClient" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.gpu::DecoderContext" = type { %"class.gpu::AsyncAPIInterface", %"class.gpu::GLContextVirtualDelegate" }
%"class.gpu::AsyncAPIInterface" = type { i32 (...)** }
%"class.gpu::GLContextVirtualDelegate" = type { i32 (...)** }
%"class.gpu::gles2::Outputter" = type opaque
%"class.ui::GpuSwitchingObserver" = type { i32 (...)** }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.17" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.gpu::gles2::PassthroughAbstractTextureImpl"**, %"class.gpu::gles2::PassthroughAbstractTextureImpl"**, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.gpu::gles2::PassthroughAbstractTextureImpl"** }
%"class.gpu::gles2::DebugMarkerManager" = type { %"class.std::__1::stack", %"class.std::__1::basic_string" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.gpu::gles2::DebugMarkerManager::Group"*, i64 }
%"class.gpu::gles2::DebugMarkerManager::Group" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gpu::gles2::Logger" = type <{ %"class.gpu::gles2::DebugMarkerManager"*, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", i32, i8, i8, [2 x i8] }>
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.31 = type { %"class.gl::GLSurface"* }
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted.32", %"class.base::SupportsWeakPtr.33" }
%"class.base::RefCounted.32" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr.33" = type { %"class.base::internal::WeakReferenceOwner" }
%class.scoped_refptr.34 = type { %"class.gl::GLContext"* }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted.35", [4 x i8], %"class.base::SupportsWeakPtr.36", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.64", %"class.gl::RealGLApi"*, %class.scoped_refptr.70, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", i8, [7 x i8] }>
%"class.base::RefCounted.35" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr.36" = type { %"class.base::internal::WeakReferenceOwner" }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type opaque
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.gl::RealGLApi" = type opaque
%class.scoped_refptr.70 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.71", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.71" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.72" }
%"class.std::__1::__tree.72" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.gl::GLVersionInfo"* }
%class.scoped_refptr.93 = type { %"class.gpu::gles2::ContextGroup"* }
%"class.gpu::gles2::ContextGroup" = type { %"class.base::RefCounted.94", [4 x i8], %"struct.gpu::GpuPreferences", %"class.gpu::MailboxManager"*, %"class.std::__1::unique_ptr.109", %"class.gpu::gles2::ShaderTranslatorCache"*, %"class.gpu::gles2::FramebufferCompletenessCache"*, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.gpu::gles2::ProgramCache"*, %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %"class.std::__1::unique_ptr.298", %class.scoped_refptr.168, %"class.gpu::gles2::ImageManager"*, %"class.gpu::ImageFactory"*, %"class.std::__1::vector.356", %"class.std::__1::unordered_map.363", i8, %"class.std::__1::unique_ptr.387", %"class.gpu::PassthroughDiscardableManager"*, %"class.gl::ProgressReporter"*, %"struct.gpu::GpuFeatureInfo", %"class.gpu::ServiceDiscardableManager"*, %"class.std::__1::unique_ptr.528", %"class.gpu::SharedImageManager"* }
%"class.base::RefCounted.94" = type { %"class.base::subtle::RefCountedBase" }
%"struct.gpu::GpuPreferences" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::vector.95", i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.102", %"class.std::__1::vector.102", i8, i8, [2 x i8], i32, i8, i8, [6 x i8] }>
%"class.std::__1::vector.95" = type { %"class.std::__1::__vector_base.96" }
%"class.std::__1::__vector_base.96" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair.97" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.gfx::BufferUsageAndFormat"* }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.gpu::MemoryTracker"* }
%"class.gpu::MemoryTracker" = type { i32 (...)** }
%"class.gpu::gles2::ShaderTranslatorCache" = type { %"class.gpu::gles2::ShaderTranslator::DestructionObserver", %"struct.gpu::GpuPreferences", %"class.std::__1::map.115" }
%"class.gpu::gles2::ShaderTranslator::DestructionObserver" = type { i32 (...)** }
%"class.std::__1::map.115" = type { %"class.std::__1::__tree.116" }
%"class.std::__1::__tree.116" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.gpu::gles2::FramebufferCompletenessCache" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.126", %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.141", [4 x i8] }>
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128", %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { float }
%"class.gpu::gles2::ProgramCache" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.gpu::gles2::BufferManager"* }
%"class.gpu::gles2::BufferManager" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.gpu::gles2::RenderbufferManager"* }
%"class.gpu::gles2::RenderbufferManager" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.gpu::gles2::TextureManager"* }
%"class.gpu::gles2::TextureManager" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.std::__1::unique_ptr.160", %"class.gpu::MemoryTracker"*, %class.scoped_refptr.168, %"class.std::__1::vector.185", %"class.std::__1::unordered_map", i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i8, [6 x i32], [6 x %class.scoped_refptr.216], %"class.std::__1::vector.276", i32, %"class.gl::ProgressReporter"*, %"class.gpu::ServiceDiscardableManager"* }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.gpu::MemoryTypeTracker"* }
%"class.gpu::MemoryTypeTracker" = type { %"class.gpu::MemoryTracker"*, i64, %"class.base::Lock", %class.scoped_refptr.163, %"class.base::WeakPtrFactory" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.scoped_refptr.163 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.164" }>
%"class.base::RefCountedThreadSafe.164" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"class.gpu::gles2::FramebufferManager"**, %"class.gpu::gles2::FramebufferManager"**, %"class.std::__1::__compressed_pair.187" }
%"class.gpu::gles2::FramebufferManager" = type opaque
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.gpu::gles2::FramebufferManager"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.192" }
%"class.std::__1::__hash_table.192" = type <{ %"class.std::__1::unique_ptr.193", %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.208", %"class.std::__1::__compressed_pair.212", [4 x i8] }>
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195", %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::__hash_node_base.196"** }
%"struct.std::__1::__hash_node_base.196" = type { %"struct.std::__1::__hash_node_base.196"* }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.std::__1::__bucket_list_deallocator.198" }
%"class.std::__1::__bucket_list_deallocator.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.std::__1::__hash_node_base.196" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%class.scoped_refptr.216 = type { %"class.gpu::gles2::TextureRef"* }
%"class.gpu::gles2::TextureRef" = type { %"class.base::RefCounted.217", %"class.gpu::gles2::TextureManager"*, %"class.gpu::gles2::Texture"*, i32, i32, i8, %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.270" }
%"class.base::RefCounted.217" = type { %"class.base::subtle::RefCountedBase" }
%"class.gpu::gles2::Texture" = type <{ %"class.gpu::TextureBase", %"class.std::__1::vector.218", %"class.base::internal::flat_tree.234", i8, [7 x i8], %"class.gpu::gles2::TextureRef"*, i32, i8, [3 x i8], i32, i32, %"struct.gpu::gles2::SamplerState", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i8, i8, i8, i8, i32, i32, i8, [7 x i8], %"struct.gpu::gles2::Texture::CompatibilitySwizzle"*, i8, [7 x i8] }>
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"struct.gpu::gles2::Texture::FaceInfo"*, %"struct.gpu::gles2::Texture::FaceInfo"*, %"class.std::__1::__compressed_pair.229" }
%"struct.gpu::gles2::Texture::FaceInfo" = type { i32, %"class.std::__1::vector.220" }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"struct.gpu::gles2::Texture::LevelInfo"*, %"struct.gpu::gles2::Texture::LevelInfo"*, %"class.std::__1::__compressed_pair.224" }
%"struct.gpu::gles2::Texture::LevelInfo" = type <{ %"class.gfx::Rect", i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %class.scoped_refptr.222, i32, i32, i8, [7 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.scoped_refptr.222 = type { %"class.gl::GLImage"* }
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted.223", %"class.gfx::ColorSpace" }
%"class.base::RefCounted.223" = type { %"class.base::subtle::RefCountedBase" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.gpu::gles2::Texture::LevelInfo"* }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.gpu::gles2::Texture::FaceInfo"* }
%"class.base::internal::flat_tree.234" = type { %"class.std::__1::vector.235" }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { %"class.gpu::gles2::TextureRef"**, %"class.gpu::gles2::TextureRef"**, %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.gpu::gles2::TextureRef"** }
%"struct.gpu::gles2::SamplerState" = type { i32, i32, i32, i32, i32, i32, i32, float, float, float }
%"struct.gpu::gles2::Texture::CompatibilitySwizzle" = type { i32, i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.gpu::SharedImageRepresentationGLTexture"* }
%"class.gpu::SharedImageRepresentationGLTexture" = type { %"class.gpu::SharedImageRepresentationGLTextureBase.base", [6 x i8] }
%"class.gpu::SharedImageRepresentationGLTextureBase.base" = type { %"class.gpu::SharedImageRepresentation.base" }
%"class.gpu::SharedImageRepresentation.base" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8 }>
%"class.gpu::SharedImageBacking" = type { i32 (...)**, %"class.absl::optional", %"struct.gpu::Mailbox", i32, %"class.gfx::Size", %"class.gfx::ColorSpace", i32, i32, i32, i64, %"class.gpu::SharedImageFactory"*, i8, %"class.absl::optional.255", %"class.std::__1::vector.260" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.245 }
%union.anon.245 = type { %"class.base::Lock" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gpu::SharedImageFactory" = type opaque
%"class.absl::optional.255" = type { %"class.absl::optional_internal::optional_data.256" }
%"class.absl::optional_internal::optional_data.256" = type { %"class.absl::optional_internal::optional_data_base.257" }
%"class.absl::optional_internal::optional_data_base.257" = type { %"class.absl::optional_internal::optional_data_dtor_base.258" }
%"class.absl::optional_internal::optional_data_dtor_base.258" = type { i8, %union.anon.259 }
%union.anon.259 = type { %"class.gpu::SharedImageBacking::ScopedWriteUMA" }
%"class.gpu::SharedImageBacking::ScopedWriteUMA" = type { i8 }
%"class.std::__1::vector.260" = type { %"class.std::__1::__vector_base.261" }
%"class.std::__1::__vector_base.261" = type { %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"**, %"class.std::__1::__compressed_pair.262" }
%"class.gpu::SharedImageRepresentation" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.gpu::SharedImageRepresentation"** }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.gpu::SharedImageRepresentationGLTextureBase::ScopedAccess"* }
%"class.gpu::SharedImageRepresentationGLTextureBase::ScopedAccess" = type { %"class.gpu::SharedImageRepresentation::ScopedAccessBase" }
%"class.gpu::SharedImageRepresentation::ScopedAccessBase" = type { %"class.gpu::SharedImageRepresentationGLTextureBase"* }
%"class.gpu::SharedImageRepresentationGLTextureBase" = type { %"class.gpu::SharedImageRepresentation.base", [6 x i8] }
%"class.std::__1::vector.276" = type { %"class.std::__1::__vector_base.277" }
%"class.std::__1::__vector_base.277" = type { %"class.gpu::gles2::TextureManager::DestructionObserver"**, %"class.gpu::gles2::TextureManager::DestructionObserver"**, %"class.std::__1::__compressed_pair.278" }
%"class.gpu::gles2::TextureManager::DestructionObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.gpu::gles2::TextureManager::DestructionObserver"** }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.gpu::gles2::ProgramManager"* }
%"class.gpu::gles2::ProgramManager" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.gpu::gles2::ShaderManager"* }
%"class.gpu::gles2::ShaderManager" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.gpu::gles2::SamplerManager"* }
%"class.gpu::gles2::SamplerManager" = type <{ %class.scoped_refptr.168, %"class.std::__1::unordered_map.301", i8, [7 x i8] }>
%"class.std::__1::unordered_map.301" = type { %"class.std::__1::__hash_table.302" }
%"class.std::__1::__hash_table.302" = type <{ %"class.std::__1::unique_ptr.303", %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.318", %"class.std::__1::__compressed_pair.321", [4 x i8] }>
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305", %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.std::__1::__hash_node_base.306"** }
%"struct.std::__1::__hash_node_base.306" = type { %"struct.std::__1::__hash_node_base.306"* }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.std::__1::__bucket_list_deallocator.308" }
%"class.std::__1::__bucket_list_deallocator.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.std::__1::__hash_node_base.306" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"class.gpu::gles2::ImageManager" = type { %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.350", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"class.gpu::ImageFactory" = type opaque
%"class.std::__1::vector.356" = type { %"class.std::__1::__vector_base.357" }
%"class.std::__1::__vector_base.357" = type { %"class.base::WeakPtr"*, %"class.base::WeakPtr"*, %"class.std::__1::__compressed_pair.358" }
%"class.base::WeakPtr" = type opaque
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.base::WeakPtr"* }
%"class.std::__1::unordered_map.363" = type { %"class.std::__1::__hash_table.364" }
%"class.std::__1::__hash_table.364" = type <{ %"class.std::__1::unique_ptr.365", %"class.std::__1::__compressed_pair.375", %"class.std::__1::__compressed_pair.380", %"class.std::__1::__compressed_pair.383", [4 x i8] }>
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367", %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"struct.std::__1::__hash_node_base.368"** }
%"struct.std::__1::__hash_node_base.368" = type { %"struct.std::__1::__hash_node_base.368"* }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.std::__1::__bucket_list_deallocator.370" }
%"class.std::__1::__bucket_list_deallocator.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.368" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gpu::gles2::PassthroughResources"* }
%"class.gpu::PassthroughDiscardableManager" = type opaque
%"class.gl::ProgressReporter" = type opaque
%"struct.gpu::GpuFeatureInfo" = type { [10 x i32], %"class.std::__1::vector.514", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.170", %"class.std::__1::vector.170", %"class.std::__1::vector.521" }
%"class.std::__1::vector.514" = type { %"class.std::__1::__vector_base.515" }
%"class.std::__1::__vector_base.515" = type { i32*, i32*, %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { i32* }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { i32*, i32*, %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { i32* }
%"class.std::__1::vector.521" = type { %"class.std::__1::__vector_base.522" }
%"class.std::__1::__vector_base.522" = type { i32*, i32*, %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { i32* }
%"class.gpu::ServiceDiscardableManager" = type opaque
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.gpu::SharedImageRepresentationFactory"* }
%"class.gpu::SharedImageRepresentationFactory" = type opaque
%"class.gpu::SharedImageManager" = type <{ %"class.absl::optional", %"class.base::internal::flat_tree.246", i8, [7 x i8] }>
%"class.base::internal::flat_tree.246" = type { %"class.std::__1::vector.247" }
%"class.std::__1::vector.247" = type { %"class.std::__1::__vector_base.248" }
%"class.std::__1::__vector_base.248" = type { %"class.std::__1::unique_ptr.249"*, %"class.std::__1::unique_ptr.249"*, %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::unique_ptr.249" = type opaque
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::unique_ptr.249"* }
%class.scoped_refptr.168 = type { %"class.gpu::gles2::FeatureInfo"* }
%"class.gpu::gles2::FeatureInfo" = type { %"class.base::RefCounted.169", i8, [3 x i8], %"struct.gpu::gles2::Validators", %"struct.gpu::gles2::DisallowedFeatures", i32, i8, %"class.base::internal::flat_tree.177", %"struct.gpu::gles2::FeatureInfo::FeatureFlags", %"class.gpu::GpuDriverBugWorkarounds", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.87" }
%"class.base::RefCounted.169" = type { %"class.base::subtle::RefCountedBase" }
%"struct.gpu::gles2::Validators" = type <{ %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BackbufferAttachmentValidator", %"class.gpu::gles2::Validators::BlitFilterValidator", %"class.gpu::gles2::Validators::BufferModeValidator", %"class.gpu::gles2::Validators::BufferParameterValidator", %"class.gpu::gles2::Validators::BufferParameter64Validator", %"class.gpu::gles2::Validators::BufferTargetValidator", %"class.gpu::gles2::Validators::BufferUsageValidator", i8, %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BufferfvValidator", %"class.gpu::gles2::Validators::BufferivValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::CmpFunctionValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::DrawModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::FaceModeValidator", %"class.gpu::gles2::Validators::FaceTypeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::GetMaxIndexTypeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::HintModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::IndexedBufferTargetValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::InternalFormatParameterValidator", %"class.gpu::gles2::Validators::MapBufferAccessValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::PixelStoreAlignmentValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::QueryObjectParameterValidator", %"class.gpu::gles2::Validators::QueryTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ResetStatusValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ShaderPrecisionValidator", %"class.gpu::gles2::Validators::ShaderTypeValidator", %"class.gpu::gles2::Validators::SharedImageAccessModeValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::StencilOpValidator", %"class.gpu::gles2::Validators::StringTypeValidator", %"class.gpu::gles2::Validators::SwapBuffersFlagsValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::SyncParameterValidator", %"class.gpu::gles2::Validators::Texture3DTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureCompareFuncValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureMagFilterModeValidator", %"class.gpu::gles2::Validators::TextureMinFilterModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSwizzleValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureUsageValidator", %"class.gpu::gles2::Validators::TextureWrapModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator", %"class.gpu::gles2::Validators::UniformBlockParameterValidator", %"class.gpu::gles2::Validators::UniformParameterValidator", %"class.gpu::gles2::Validators::VertexAttribITypeValidator", [4 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::WindowRectanglesModeValidator", [7 x i8] }>
%"class.gpu::gles2::Validators::BackbufferAttachmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::BlitFilterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameter64Validator" = type { i8 }
%"class.gpu::gles2::Validators::BufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferfvValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferivValidator" = type { i8 }
%"class.gpu::gles2::Validators::CmpFunctionValidator" = type { i8 }
%"class.gpu::gles2::Validators::DrawModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::GetMaxIndexTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::HintModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::IndexedBufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::InternalFormatParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::MapBufferAccessValidator" = type { i8 }
%"class.gpu::gles2::Validators::PixelStoreAlignmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryObjectParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::ResetStatusValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderPrecisionValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SharedImageAccessModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::StencilOpValidator" = type { i8 }
%"class.gpu::gles2::Validators::StringTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SwapBuffersFlagsValidator" = type { i8 }
%"class.gpu::gles2::Validators::SyncParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::Texture3DTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureCompareFuncValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMagFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMinFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSwizzleValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureWrapModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformBlockParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::VertexAttribITypeValidator" = type { i8 }
%"class.gpu::ValueValidator" = type { %"class.std::__1::vector.170" }
%"class.gpu::gles2::Validators::WindowRectanglesModeValidator" = type { i8 }
%"struct.gpu::gles2::DisallowedFeatures" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.base::internal::flat_tree.177" = type { %"class.std::__1::vector.178" }
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.180" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.base::BasicStringPiece"* }
%"struct.gpu::gles2::FeatureInfo::FeatureFlags" = type <{ %"struct.gpu::GpuMemoryBufferFormatSet", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"struct.gpu::GpuMemoryBufferFormatSet" = type { i32 }
%"class.gpu::GpuDriverBugWorkarounds" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32 }
%"struct.gpu::gles2::PassthroughResources" = type { %"class.gpu::gles2::ClientServiceMap", %"class.gpu::gles2::ClientServiceMap", %"class.gpu::gles2::ClientServiceMap", %"class.gpu::gles2::ClientServiceMap", %"class.gpu::gles2::ClientServiceMap", %"class.gpu::gles2::ClientServiceMap", %"class.gpu::gles2::ClientServiceMap.414", %"class.gpu::gles2::ClientServiceMap.446", %"class.base::flat_map", %"class.base::internal::flat_tree.486", %"class.std::__1::unordered_map.487" }
%"class.gpu::gles2::ClientServiceMap.414" = type { i64, %"class.std::__1::vector.415", %"class.std::__1::unordered_map.422" }
%"class.std::__1::vector.415" = type { %"class.std::__1::__vector_base.416" }
%"class.std::__1::__vector_base.416" = type { i64*, i64*, %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { i64* }
%"class.std::__1::unordered_map.422" = type { %"class.std::__1::__hash_table.423" }
%"class.std::__1::__hash_table.423" = type <{ %"class.std::__1::unique_ptr.424", %"class.std::__1::__compressed_pair.434", %"class.std::__1::__compressed_pair.439", %"class.std::__1::__compressed_pair.442", [4 x i8] }>
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426", %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"struct.std::__1::__hash_node_base.427"** }
%"struct.std::__1::__hash_node_base.427" = type { %"struct.std::__1::__hash_node_base.427"* }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.std::__1::__bucket_list_deallocator.429" }
%"class.std::__1::__bucket_list_deallocator.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"struct.std::__1::__hash_node_base.427" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"class.gpu::gles2::ClientServiceMap.446" = type { %class.scoped_refptr, %"class.std::__1::vector.447", %"class.std::__1::unordered_map.454" }
%"class.std::__1::vector.447" = type { %"class.std::__1::__vector_base.448" }
%"class.std::__1::__vector_base.448" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %class.scoped_refptr* }
%"class.std::__1::unordered_map.454" = type { %"class.std::__1::__hash_table.455" }
%"class.std::__1::__hash_table.455" = type <{ %"class.std::__1::unique_ptr.456", %"class.std::__1::__compressed_pair.466", %"class.std::__1::__compressed_pair.471", %"class.std::__1::__compressed_pair.474", [4 x i8] }>
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458", %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"struct.std::__1::__hash_node_base.459"** }
%"struct.std::__1::__hash_node_base.459" = type { %"struct.std::__1::__hash_node_base.459"* }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.std::__1::__bucket_list_deallocator.461" }
%"class.std::__1::__bucket_list_deallocator.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.std::__1::__hash_node_base.459" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.478" }
%"class.base::internal::flat_tree.478" = type { %"class.std::__1::vector.479" }
%"class.std::__1::vector.479" = type { %"class.std::__1::__vector_base.480" }
%"class.std::__1::__vector_base.480" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.481" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"struct.std::__1::pair"* }
%"class.base::internal::flat_tree.486" = type { %"class.std::__1::vector.447" }
%"class.std::__1::unordered_map.487" = type { %"class.std::__1::__hash_table.488" }
%"class.std::__1::__hash_table.488" = type <{ %"class.std::__1::unique_ptr.489", %"class.std::__1::__compressed_pair.499", %"class.std::__1::__compressed_pair.504", %"class.std::__1::__compressed_pair.507", [4 x i8] }>
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491", %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"struct.std::__1::__hash_node_base.492"** }
%"struct.std::__1::__hash_node_base.492" = type { %"struct.std::__1::__hash_node_base.492"* }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.std::__1::__bucket_list_deallocator.494" }
%"class.std::__1::__bucket_list_deallocator.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"struct.std::__1::__hash_node_base.492" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"class.gpu::gles2::ClientServiceMap" = type { i32, %"class.std::__1::vector.170", %"class.std::__1::unordered_map.390" }
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.gpu::gles2::GpuFenceManager"* }
%"class.gpu::gles2::GpuFenceManager" = type opaque
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.gpu::gles2::MultiDrawManager"* }
%"class.gpu::gles2::MultiDrawManager" = type opaque
%"struct.std::__1::array" = type { [7 x %"struct.std::__1::array.546"] }
%"struct.std::__1::array.546" = type { [64 x %"struct.gpu::gles2::GLES2DecoderPassthroughImpl::BoundTexture"] }
%"struct.gpu::gles2::GLES2DecoderPassthroughImpl::BoundTexture" = type { i32, %class.scoped_refptr }
%"class.std::__1::vector.547" = type { %"class.std::__1::__vector_base.548" }
%"class.std::__1::__vector_base.548" = type { %"struct.gpu::gles2::GLES2DecoderPassthroughImpl::TexturePendingBinding"*, %"struct.gpu::gles2::GLES2DecoderPassthroughImpl::TexturePendingBinding"*, %"class.std::__1::__compressed_pair.551" }
%"struct.gpu::gles2::GLES2DecoderPassthroughImpl::TexturePendingBinding" = type { i32, i32, %"class.base::WeakPtr.549" }
%"class.base::WeakPtr.549" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.550 }
%class.scoped_refptr.550 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"struct.gpu::gles2::GLES2DecoderPassthroughImpl::TexturePendingBinding"* }
%"class.std::__1::unordered_map.390" = type { %"class.std::__1::__hash_table.391" }
%"class.std::__1::__hash_table.391" = type <{ %"class.std::__1::unique_ptr.392", %"class.std::__1::__compressed_pair.402", %"class.std::__1::__compressed_pair.407", %"class.std::__1::__compressed_pair.410", [4 x i8] }>
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394", %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"struct.std::__1::__hash_node_base.395"** }
%"struct.std::__1::__hash_node_base.395" = type { %"struct.std::__1::__hash_node_base.395"* }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.std::__1::__bucket_list_deallocator.397" }
%"class.std::__1::__bucket_list_deallocator.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"struct.std::__1::__hash_node_base.395" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"class.std::__1::unordered_map.556" = type { %"class.std::__1::__hash_table.557" }
%"class.std::__1::__hash_table.557" = type <{ %"class.std::__1::unique_ptr.558", %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.576", [4 x i8] }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.std::__1::__hash_node_base.561"** }
%"struct.std::__1::__hash_node_base.561" = type { %"struct.std::__1::__hash_node_base.561"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::__bucket_list_deallocator.563" }
%"class.std::__1::__bucket_list_deallocator.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.561" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"class.base::circular_deque.580" = type { %"class.base::internal::VectorBuffer.581", i64, i64 }
%"class.base::internal::VectorBuffer.581" = type { %"struct.gpu::gles2::GLES2DecoderPassthroughImpl::PendingQuery"*, i64 }
%"struct.gpu::gles2::GLES2DecoderPassthroughImpl::PendingQuery" = type <{ i32, i32, %class.scoped_refptr.582, %"struct.gpu::QuerySync"*, i32, [4 x i8], %"class.std::__1::unique_ptr.590", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.std::__1::vector.596", %"class.std::__1::unique_ptr.590", %"class.base::flat_map.603", i32, [4 x i8] }>
%class.scoped_refptr.582 = type { %"class.gpu::Buffer"* }
%"class.gpu::Buffer" = type <{ %"class.base::RefCountedThreadSafe.583", [4 x i8], %"class.std::__1::unique_ptr.584", i8*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.583" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.gpu::BufferBacking"* }
%"class.gpu::BufferBacking" = type { i32 (...)** }
%"struct.gpu::QuerySync" = type <{ i32, i64 }>
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.596" = type { %"class.std::__1::__vector_base.597" }
%"class.std::__1::__vector_base.597" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.598" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.base::OnceCallback"* }
%"class.std::__1::unique_ptr.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.gl::GLFence"* }
%"class.gl::GLFence" = type { i32 (...)** }
%"class.std::__1::unordered_map.613" = type { %"class.std::__1::__hash_table.614" }
%"class.std::__1::__hash_table.614" = type <{ %"class.std::__1::unique_ptr.615", %"class.std::__1::__compressed_pair.625", %"class.std::__1::__compressed_pair.630", %"class.std::__1::__compressed_pair.633", [4 x i8] }>
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617", %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.618"** }
%"struct.std::__1::__hash_node_base.618" = type { %"struct.std::__1::__hash_node_base.618"* }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.std::__1::__bucket_list_deallocator.620" }
%"class.std::__1::__bucket_list_deallocator.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"struct.std::__1::__hash_node_base.618" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"class.base::circular_deque.637" = type { %"class.base::internal::VectorBuffer.638", i64, i64 }
%"class.base::internal::VectorBuffer.638" = type { %"struct.gpu::gles2::GLES2DecoderPassthroughImpl::PendingReadPixels"*, i64 }
%"struct.gpu::gles2::GLES2DecoderPassthroughImpl::PendingReadPixels" = type { %"class.std::__1::unique_ptr.590", i32, i32, i32, i32, i32, i32, %"class.base::internal::flat_tree.639" }
%"class.base::internal::flat_tree.639" = type { %"class.std::__1::vector.170" }
%"class.base::flat_map.603" = type { %"class.base::internal::flat_tree.604" }
%"class.base::internal::flat_tree.604" = type { %"class.std::__1::vector.605" }
%"class.std::__1::vector.605" = type { %"class.std::__1::__vector_base.606" }
%"class.std::__1::__vector_base.606" = type { %"struct.std::__1::pair.607"*, %"struct.std::__1::pair.607"*, %"class.std::__1::__compressed_pair.608" }
%"struct.std::__1::pair.607" = type opaque
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::pair.607"* }
%"class.std::__1::set.640" = type { %"class.std::__1::__tree.641" }
%"class.std::__1::__tree.641" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.642", %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.gpu::gles2::GLES2DecoderPassthroughImpl::EmulatedDefaultFramebufferFormat" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"struct.gpu::gles2::GLES2DecoderPassthroughImpl::EmulatedDefaultFramebuffer"* }
%"struct.gpu::gles2::GLES2DecoderPassthroughImpl::EmulatedDefaultFramebuffer" = type <{ %"class.gl::GLApi"*, i8, [3 x i8], i32, i32, [4 x i8], %"class.std::__1::unique_ptr.651", i32, i32, i32, %"class.gfx::Size", %"struct.gpu::gles2::GLES2DecoderPassthroughImpl::EmulatedDefaultFramebufferFormat", [4 x i8] }>
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"struct.gpu::gles2::GLES2DecoderPassthroughImpl::EmulatedColorBuffer"* }
%"struct.gpu::gles2::GLES2DecoderPassthroughImpl::EmulatedColorBuffer" = type { %"class.gl::GLApi"*, %class.scoped_refptr, %"class.gfx::Size", %"struct.gpu::gles2::GLES2DecoderPassthroughImpl::EmulatedDefaultFramebufferFormat" }
%"class.std::__1::vector.660" = type { %"class.std::__1::__vector_base.661" }
%"class.std::__1::__vector_base.661" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.gpu::gles2::GPUTracer"* }
%"class.gpu::gles2::GPUTracer" = type opaque
%"class.std::__1::vector.673" = type { %"class.std::__1::__vector_base.674" }
%"class.std::__1::__vector_base.674" = type { %"class.std::__1::unique_ptr.590"*, %"class.std::__1::unique_ptr.590"*, %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.std::__1::unique_ptr.590"* }
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"struct.gpu::gles2::CALayerSharedState"* }
%"struct.gpu::gles2::CALayerSharedState" = type { float, i8, %"class.gfx::Rect", %"class.gfx::RRectF", i32, %"class.gfx::Transform" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.base::WeakPtrFactory.686" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gl::ScopedTextureBinder" = type { %"class.gl::GLStateRestorer"*, i32, i32 }

@_ZTVN3gpu5gles230PassthroughAbstractTextureImplE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*)* @_ZN3gpu5gles230PassthroughAbstractTextureImplD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*)* @_ZN3gpu5gles230PassthroughAbstractTextureImplD0Ev to i8*), i8* bitcast (%"class.gpu::TextureBase"* (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*)* @_ZNK3gpu5gles230PassthroughAbstractTextureImpl14GetTextureBaseEv to i8*), i8* bitcast (void (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*, i32, i32)* @_ZN3gpu5gles230PassthroughAbstractTextureImpl13SetParameteriEji to i8*), i8* bitcast (void (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*, %"class.gl::GLImage"*, i32)* @_ZN3gpu5gles230PassthroughAbstractTextureImpl22BindStreamTextureImageEPN2gl7GLImageEj to i8*), i8* bitcast (void (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*, %"class.gl::GLImage"*, i1)* @_ZN3gpu5gles230PassthroughAbstractTextureImpl9BindImageEPN2gl7GLImageEb to i8*), i8* bitcast (%"class.gl::GLImage"* (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*)* @_ZNK3gpu5gles230PassthroughAbstractTextureImpl8GetImageEv to i8*), i8* bitcast (void (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*)* @_ZN3gpu5gles230PassthroughAbstractTextureImpl10SetClearedEv to i8*), i8* bitcast (void (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*, %"class.base::OnceCallback.687"*)* @_ZN3gpu5gles230PassthroughAbstractTextureImpl18SetCleanupCallbackEN4base12OnceCallbackIFvPNS0_15AbstractTextureEEEE to i8*), i8* bitcast (void (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*)* @_ZN3gpu5gles230PassthroughAbstractTextureImpl19NotifyOnContextLostEv to i8*)] }, align 8

@_ZN3gpu5gles230PassthroughAbstractTextureImplC1E13scoped_refptrINS0_18TexturePassthroughEEPNS0_27GLES2DecoderPassthroughImplE = hidden unnamed_addr alias void (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*, %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::GLES2DecoderPassthroughImpl"*), void (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*, %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::GLES2DecoderPassthroughImpl"*)* @_ZN3gpu5gles230PassthroughAbstractTextureImplC2E13scoped_refptrINS0_18TexturePassthroughEEPNS0_27GLES2DecoderPassthroughImplE
@_ZN3gpu5gles230PassthroughAbstractTextureImplD1Ev = hidden unnamed_addr alias void (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*), void (%"class.gpu::gles2::PassthroughAbstractTextureImpl"*)* @_ZN3gpu5gles230PassthroughAbstractTextureImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles230PassthroughAbstractTextureImplC2E13scoped_refptrINS0_18TexturePassthroughEEPNS0_27GLES2DecoderPassthroughImplE(%"class.gpu::gles2::PassthroughAbstractTextureImpl"* nocapture, %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::GLES2DecoderPassthroughImpl"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.gpu::gles2::TexturePassthrough"* %1 to i64
  %5 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu5gles230PassthroughAbstractTextureImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 1
  %7 = bitcast %class.scoped_refptr* %6 to i64*
  store i64 %4, i64* %7, align 8
  %8 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 2
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.gpu::gles2::GLES2DecoderPassthroughImpl", %"class.gpu::gles2::GLES2DecoderPassthroughImpl"* %2, i64 0, i32 6
  %11 = bitcast %"class.gl::GLApi"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.gl::GLApi"** %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 4
  store %"class.gpu::gles2::GLES2DecoderPassthroughImpl"* %2, %"class.gpu::gles2::GLES2DecoderPassthroughImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles230PassthroughAbstractTextureImplD2Ev(%"class.gpu::gles2::PassthroughAbstractTextureImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.687", align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu5gles230PassthroughAbstractTextureImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.base::OnceCallback.687", %"class.base::OnceCallback.687"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.base::OnceCallback.687", %"class.base::OnceCallback.687"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %6, align 8
  %8 = icmp eq %"class.base::internal::BindStateBase"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %1
  %10 = ptrtoint %"class.base::internal::BindStateBase"* %7 to i64
  %11 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.687"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  %13 = bitcast %"class.base::OnceCallback.687"* %2 to i64*
  store i64 %10, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %14 = getelementptr inbounds %"class.base::OnceCallback.687", %"class.base::OnceCallback.687"* %2, i64 0, i32 0
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %7, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*, %"class.gpu::gles2::AbstractTexture"*)**
  %17 = load void (%"class.base::internal::BindStateBase"*, %"class.gpu::gles2::AbstractTexture"*)*, void (%"class.base::internal::BindStateBase"*, %"class.gpu::gles2::AbstractTexture"*)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* nonnull %7, %"class.gpu::gles2::AbstractTexture"* %11) #7
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  br label %18

18:                                               ; preds = %1, %9
  %19 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 4
  %20 = load %"class.gpu::gles2::GLES2DecoderPassthroughImpl"*, %"class.gpu::gles2::GLES2DecoderPassthroughImpl"** %19, align 8
  %21 = icmp eq %"class.gpu::gles2::GLES2DecoderPassthroughImpl"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 1, i32 0
  %24 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %23, align 8
  store %"class.gpu::gles2::TexturePassthrough"* null, %"class.gpu::gles2::TexturePassthrough"** %23, align 8
  call void @_ZN3gpu5gles227GLES2DecoderPassthroughImpl26OnAbstractTextureDestroyedEPNS0_30PassthroughAbstractTextureImplE13scoped_refptrINS0_18TexturePassthroughEE(%"class.gpu::gles2::GLES2DecoderPassthroughImpl"* nonnull %20, %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, %"class.gpu::gles2::TexturePassthrough"* %24) #7
  br label %25

25:                                               ; preds = %18, %22
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #7
  %26 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 1, i32 0
  %27 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %26, align 8
  %28 = icmp eq %"class.gpu::gles2::TexturePassthrough"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %27, i64 0, i32 1
  %31 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %30, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #7
  %32 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %30, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %42

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %30, i64 -6
  %37 = bitcast %"class.base::RefCounted"* %36 to %"class.gpu::gles2::TexturePassthrough"*
  %38 = bitcast %"class.base::RefCounted"* %36 to void (%"class.gpu::gles2::TexturePassthrough"*)***
  %39 = load void (%"class.gpu::gles2::TexturePassthrough"*)**, void (%"class.gpu::gles2::TexturePassthrough"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.gpu::gles2::TexturePassthrough"*)*, void (%"class.gpu::gles2::TexturePassthrough"*)** %39, i64 1
  %41 = load void (%"class.gpu::gles2::TexturePassthrough"*)*, void (%"class.gpu::gles2::TexturePassthrough"*)** %40, align 8
  call void %41(%"class.gpu::gles2::TexturePassthrough"* nonnull %37) #7
  br label %42

42:                                               ; preds = %25, %29, %35
  ret void
}

declare void @_ZN3gpu5gles227GLES2DecoderPassthroughImpl26OnAbstractTextureDestroyedEPNS0_30PassthroughAbstractTextureImplE13scoped_refptrINS0_18TexturePassthroughEE(%"class.gpu::gles2::GLES2DecoderPassthroughImpl"*, %"class.gpu::gles2::PassthroughAbstractTextureImpl"*, %"class.gpu::gles2::TexturePassthrough"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles230PassthroughAbstractTextureImplD0Ev(%"class.gpu::gles2::PassthroughAbstractTextureImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu5gles230PassthroughAbstractTextureImplD2Ev(%"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0) #7
  %2 = bitcast %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gpu::TextureBase"* @_ZNK3gpu5gles230PassthroughAbstractTextureImpl14GetTextureBaseEv(%"class.gpu::gles2::PassthroughAbstractTextureImpl"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %2, align 8
  %4 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %3, i64 0, i32 0
  ret %"class.gpu::TextureBase"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles230PassthroughAbstractTextureImpl13SetParameteriEji(%"class.gpu::gles2::PassthroughAbstractTextureImpl"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.gl::ScopedTextureBinder", align 8
  %5 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %5, align 8
  %7 = icmp eq %"class.gpu::gles2::TexturePassthrough"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.gl::ScopedTextureBinder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %6, i64 0, i32 0, i32 2
  %11 = bitcast %"class.gl::ScopedTextureBinder"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  %12 = load i32, i32* %10, align 4
  %13 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 0
  %14 = bitcast %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0 to %"class.gpu::TextureBase"* (%"class.gpu::gles2::AbstractTexture"*)***
  %15 = load %"class.gpu::TextureBase"* (%"class.gpu::gles2::AbstractTexture"*)**, %"class.gpu::TextureBase"* (%"class.gpu::gles2::AbstractTexture"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.gpu::TextureBase"* (%"class.gpu::gles2::AbstractTexture"*)*, %"class.gpu::TextureBase"* (%"class.gpu::gles2::AbstractTexture"*)** %15, i64 2
  %17 = load %"class.gpu::TextureBase"* (%"class.gpu::gles2::AbstractTexture"*)*, %"class.gpu::TextureBase"* (%"class.gpu::gles2::AbstractTexture"*)** %16, align 8
  %18 = tail call %"class.gpu::TextureBase"* %17(%"class.gpu::gles2::AbstractTexture"* %13) #7
  %19 = getelementptr inbounds %"class.gpu::TextureBase", %"class.gpu::TextureBase"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  call void @_ZN2gl19ScopedTextureBinderC1Ejj(%"class.gl::ScopedTextureBinder"* nonnull %4, i32 %12, i32 %20) #7
  %21 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 3
  %22 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %21, align 8
  %23 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %5, align 8
  %24 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %23, i64 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = bitcast %"class.gl::GLApi"* %22 to void (%"class.gl::GLApi"*, i32, i32, i32)***
  %27 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %27, i64 428
  %29 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %28, align 8
  call void %29(%"class.gl::GLApi"* %22, i32 %25, i32 %1, i32 %2) #7
  call void @_ZN2gl19ScopedTextureBinderD1Ev(%"class.gl::ScopedTextureBinder"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  br label %30

30:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN2gl19ScopedTextureBinderC1Ejj(%"class.gl::ScopedTextureBinder"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2gl19ScopedTextureBinderD1Ev(%"class.gl::ScopedTextureBinder"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles230PassthroughAbstractTextureImpl9BindImageEPN2gl7GLImageEb(%"class.gpu::gles2::PassthroughAbstractTextureImpl"* nocapture, %"class.gl::GLImage"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %4, align 8
  %6 = icmp eq %"class.gpu::gles2::TexturePassthrough"* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %5, i64 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %27, label %13

13:                                               ; preds = %7
  %14 = tail call %"class.gl::GLImage"* @_ZNK3gpu5gles218TexturePassthrough13GetLevelImageEji(%"class.gpu::gles2::TexturePassthrough"* nonnull %5, i32 %9, i32 0) #7
  %15 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %4, align 8
  %16 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %15, i64 0, i32 5
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp ne i8 %17, 0
  %19 = icmp eq %"class.gl::GLImage"* %14, null
  %20 = or i1 %19, %18
  br i1 %20, label %27, label %21

21:                                               ; preds = %13
  %22 = bitcast %"class.gl::GLImage"* %14 to void (%"class.gl::GLImage"*, i32)***
  %23 = load void (%"class.gl::GLImage"*, i32)**, void (%"class.gl::GLImage"*, i32)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::GLImage"*, i32)*, void (%"class.gl::GLImage"*, i32)** %23, i64 7
  %25 = load void (%"class.gl::GLImage"*, i32)*, void (%"class.gl::GLImage"*, i32)** %24, align 8
  tail call void %25(%"class.gl::GLImage"* nonnull %14, i32 %9) #7
  %26 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %4, align 8
  br label %27

27:                                               ; preds = %21, %13, %7
  %28 = phi %"class.gpu::gles2::TexturePassthrough"* [ %26, %21 ], [ %15, %13 ], [ %5, %7 ]
  %29 = icmp ne %"class.gl::GLImage"* %1, null
  %30 = xor i1 %2, true
  %31 = and i1 %29, %30
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %10, align 8
  %33 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %28, i64 0, i32 5
  store i8 %32, i8* %33, align 1
  %34 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %4, align 8
  tail call void @_ZN3gpu5gles218TexturePassthrough13SetLevelImageEjiPN2gl7GLImageE(%"class.gpu::gles2::TexturePassthrough"* %34, i32 %9, i32 0, %"class.gl::GLImage"* %1) #7
  br label %35

35:                                               ; preds = %3, %27
  ret void
}

declare %"class.gl::GLImage"* @_ZNK3gpu5gles218TexturePassthrough13GetLevelImageEji(%"class.gpu::gles2::TexturePassthrough"*, i32, i32) local_unnamed_addr #1

declare void @_ZN3gpu5gles218TexturePassthrough13SetLevelImageEjiPN2gl7GLImageE(%"class.gpu::gles2::TexturePassthrough"*, i32, i32, %"class.gl::GLImage"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles230PassthroughAbstractTextureImpl22BindStreamTextureImageEPN2gl7GLImageEj(%"class.gpu::gles2::PassthroughAbstractTextureImpl"* nocapture readonly, %"class.gl::GLImage"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %4, align 8
  %6 = icmp eq %"class.gpu::gles2::TexturePassthrough"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %5, i64 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %5, i64 0, i32 5
  store i8 1, i8* %10, align 1
  %11 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %4, align 8
  tail call void @_ZN3gpu5gles218TexturePassthrough19SetStreamLevelImageEjiPN2gl7GLImageEj(%"class.gpu::gles2::TexturePassthrough"* %11, i32 %9, i32 0, %"class.gl::GLImage"* %1, i32 %2) #7
  br label %12

12:                                               ; preds = %3, %7
  ret void
}

declare void @_ZN3gpu5gles218TexturePassthrough19SetStreamLevelImageEjiPN2gl7GLImageEj(%"class.gpu::gles2::TexturePassthrough"*, i32, i32, %"class.gl::GLImage"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GLImage"* @_ZNK3gpu5gles230PassthroughAbstractTextureImpl8GetImageEv(%"class.gpu::gles2::PassthroughAbstractTextureImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %2, align 8
  %4 = icmp eq %"class.gpu::gles2::TexturePassthrough"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gpu::gles2::TexturePassthrough", %"class.gpu::gles2::TexturePassthrough"* %3, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = tail call %"class.gl::GLImage"* @_ZNK3gpu5gles218TexturePassthrough13GetLevelImageEji(%"class.gpu::gles2::TexturePassthrough"* nonnull %3, i32 %7, i32 0) #7
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi %"class.gl::GLImage"* [ %8, %5 ], [ null, %1 ]
  ret %"class.gl::GLImage"* %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu5gles230PassthroughAbstractTextureImpl10SetClearedEv(%"class.gpu::gles2::PassthroughAbstractTextureImpl"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles230PassthroughAbstractTextureImpl18SetCleanupCallbackEN4base12OnceCallbackIFvPNS0_15AbstractTextureEEEE(%"class.gpu::gles2::PassthroughAbstractTextureImpl"*, %"class.base::OnceCallback.687"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 5, i32 0
  %4 = getelementptr inbounds %"class.base::OnceCallback.687", %"class.base::OnceCallback.687"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %3, %"class.base::internal::CallbackBase"* dereferenceable(8) %4) #7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu5gles230PassthroughAbstractTextureImpl19NotifyOnContextLostEv(%"class.gpu::gles2::PassthroughAbstractTextureImpl"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::gles2::TexturePassthrough"* @_ZN3gpu5gles230PassthroughAbstractTextureImpl20OnDecoderWillDestroyEv(%"class.gpu::gles2::PassthroughAbstractTextureImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.687", align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.base::internal::BindStateBase"* %4 to i64
  %8 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 0
  %9 = bitcast %"class.base::OnceCallback.687"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = bitcast %"class.base::OnceCallback.687"* %2 to i64*
  store i64 %7, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %3, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback.687", %"class.base::OnceCallback.687"* %2, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*, %"class.gpu::gles2::AbstractTexture"*)**
  %14 = load void (%"class.base::internal::BindStateBase"*, %"class.gpu::gles2::AbstractTexture"*)*, void (%"class.base::internal::BindStateBase"*, %"class.gpu::gles2::AbstractTexture"*)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* nonnull %4, %"class.gpu::gles2::AbstractTexture"* %8) #7
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  br label %15

15:                                               ; preds = %1, %6
  %16 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.gpu::gles2::PassthroughAbstractTextureImpl", %"class.gpu::gles2::PassthroughAbstractTextureImpl"* %0, i64 0, i32 1, i32 0
  %18 = bitcast %"class.gl::GLApi"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  %19 = load %"class.gpu::gles2::TexturePassthrough"*, %"class.gpu::gles2::TexturePassthrough"** %17, align 8
  store %"class.gpu::gles2::TexturePassthrough"* null, %"class.gpu::gles2::TexturePassthrough"** %17, align 8
  ret %"class.gpu::gles2::TexturePassthrough"* %19
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
