; ModuleID = '../../third_party/boringssl/src/crypto/bn_extra/bn_asn1.c'
source_filename = "../../third_party/boringssl/src/crypto/bn_extra/bn_asn1.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cbs_st = type { i8*, i64 }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }

@.str = private unnamed_addr constant [58 x i8] c"../../third_party/boringssl/src/crypto/bn_extra/bn_asn1.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BN_parse_asn1_unsigned(%struct.cbs_st*, %struct.bignum_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca i32, align 4
  %5 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #3
  %6 = bitcast i32* %4 to i8*
  %7 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #3
  store i32 -1431655766, i32* %4, align 4
  %8 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %3, i32 2) #3
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = call i32 @CBS_is_valid_asn1_integer(%struct.cbs_st* nonnull %3, i32* nonnull %4) #3
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %10, %2
  call void @ERR_put_error(i32 3, i32 0, i32 117, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 26) #3
  br label %24

14:                                               ; preds = %10
  %15 = load i32, i32* %4, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  call void @ERR_put_error(i32 3, i32 0, i32 109, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 31) #3
  br label %24

18:                                               ; preds = %14
  %19 = call i8* @CBS_data(%struct.cbs_st* nonnull %3) #3
  %20 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #3
  %21 = call %struct.bignum_st* @BN_bin2bn(i8* %19, i64 %20, %struct.bignum_st* %1) #3
  %22 = icmp ne %struct.bignum_st* %21, null
  %23 = zext i1 %22 to i32
  br label %24

24:                                               ; preds = %18, %17, %13
  %25 = phi i32 [ 0, %17 ], [ %23, %18 ], [ 0, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #3
  ret i32 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @CBS_get_asn1(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare i32 @CBS_is_valid_asn1_integer(%struct.cbs_st*, i32*) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare %struct.bignum_st* @BN_bin2bn(i8*, i64, %struct.bignum_st*) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BN_marshal_asn1(%struct.cbb_st*, %struct.bignum_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = tail call i32 @BN_is_negative(%struct.bignum_st* %1) #3
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @ERR_put_error(i32 3, i32 0, i32 109, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 41) #3
  br label %29

7:                                                ; preds = %2
  %8 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %3, i32 2) #3
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %7
  %12 = call i32 @BN_num_bits(%struct.bignum_st* %1) #3
  %13 = and i32 %12, 7
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %3, i8 zeroext 0) #3
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %15, %11
  %19 = call i32 @BN_num_bytes(%struct.bignum_st* %1) #3
  %20 = zext i32 %19 to i64
  %21 = call i32 @BN_bn2cbb_padded(%struct.cbb_st* nonnull %3, i64 %20, %struct.bignum_st* %1) #3
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = call i32 @CBB_flush(%struct.cbb_st* %0) #3
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %15, %23, %18, %7
  call void @ERR_put_error(i32 3, i32 0, i32 118, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 52) #3
  br label %27

27:                                               ; preds = %23, %26
  %28 = phi i32 [ 0, %26 ], [ 1, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #3
  br label %29

29:                                               ; preds = %27, %6
  %30 = phi i32 [ 0, %6 ], [ %28, %27 ]
  ret i32 %30
}

declare i32 @BN_is_negative(%struct.bignum_st*) local_unnamed_addr #2

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @BN_num_bits(%struct.bignum_st*) local_unnamed_addr #2

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #2

declare i32 @BN_bn2cbb_padded(%struct.cbb_st*, i64, %struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_num_bytes(%struct.bignum_st*) local_unnamed_addr #2

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
