; ModuleID = '../../extensions/browser/api/storage/storage_area_namespace.cc'
source_filename = "../../extensions/browser/api/storage/storage_area_namespace.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN10extensions12_GLOBAL__N_112kLocalStringE = internal constant [6 x i8] c"local\00", align 1
@_ZN10extensions12_GLOBAL__N_111kSyncStringE = internal constant [5 x i8] c"sync\00", align 1
@_ZN10extensions12_GLOBAL__N_114kManagedStringE = internal constant [8 x i8] c"managed\00", align 1
@_ZN10extensions12_GLOBAL__N_114kSessionStringE = internal constant [8 x i8] c"session\00", align 1
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@switch.table._ZN10extensions19StorageAreaToStringENS_20StorageAreaNamespaceE = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN10extensions12_GLOBAL__N_112kLocalStringE, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN10extensions12_GLOBAL__N_111kSyncStringE, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN10extensions12_GLOBAL__N_114kManagedStringE, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN10extensions12_GLOBAL__N_114kSessionStringE, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)], align 8
@switch.table._ZN10extensions30StorageAreaToSettingsNamespaceENS_20StorageAreaNamespaceE = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 3], align 4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN10extensions19StorageAreaToStringENS_20StorageAreaNamespaceE(i32) local_unnamed_addr #0 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table._ZN10extensions19StorageAreaToStringENS_20StorageAreaNamespaceE, i64 0, i64 %2
  %4 = load i8*, i8** %3, align 8
  ret i8* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN10extensions30StorageAreaToSettingsNamespaceENS_20StorageAreaNamespaceE(i32) local_unnamed_addr #0 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN10extensions30StorageAreaToSettingsNamespaceENS_20StorageAreaNamespaceE, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10extensions21StorageAreaFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 5
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN10extensions12_GLOBAL__N_112kLocalStringE, i64 0, i64 0), i64 5) #3
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %57, label %14

14:                                               ; preds = %11
  %15 = load i8, i8* %3, align 1
  %16 = load i64, i64* %6, align 8
  %17 = zext i8 %15 to i64
  br label %18

18:                                               ; preds = %14, %1
  %19 = phi i64 [ %17, %14 ], [ %8, %1 ]
  %20 = phi i64 [ %16, %14 ], [ %7, %1 ]
  %21 = phi i8 [ %15, %14 ], [ %4, %1 ]
  %22 = icmp slt i8 %21, 0
  %23 = select i1 %22, i64 %20, i64 %19
  %24 = icmp eq i64 %23, 4
  br i1 %24, label %25, label %32

25:                                               ; preds = %18
  %26 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN10extensions12_GLOBAL__N_111kSyncStringE, i64 0, i64 0), i64 4) #3
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %57, label %28

28:                                               ; preds = %25
  %29 = load i8, i8* %3, align 1
  %30 = load i64, i64* %6, align 8
  %31 = zext i8 %29 to i64
  br label %32

32:                                               ; preds = %28, %18
  %33 = phi i64 [ %31, %28 ], [ %19, %18 ]
  %34 = phi i64 [ %30, %28 ], [ %20, %18 ]
  %35 = phi i8 [ %29, %28 ], [ %21, %18 ]
  %36 = icmp slt i8 %35, 0
  %37 = select i1 %36, i64 %34, i64 %33
  %38 = icmp eq i64 %37, 7
  br i1 %38, label %39, label %46

39:                                               ; preds = %32
  %40 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN10extensions12_GLOBAL__N_114kManagedStringE, i64 0, i64 0), i64 7) #3
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %57, label %42

42:                                               ; preds = %39
  %43 = load i8, i8* %3, align 1
  %44 = load i64, i64* %6, align 8
  %45 = zext i8 %43 to i64
  br label %46

46:                                               ; preds = %42, %32
  %47 = phi i64 [ %45, %42 ], [ %33, %32 ]
  %48 = phi i64 [ %44, %42 ], [ %34, %32 ]
  %49 = phi i8 [ %43, %42 ], [ %35, %32 ]
  %50 = icmp slt i8 %49, 0
  %51 = select i1 %50, i64 %48, i64 %47
  %52 = icmp eq i64 %51, 7
  br i1 %52, label %53, label %57

53:                                               ; preds = %46
  %54 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN10extensions12_GLOBAL__N_114kSessionStringE, i64 0, i64 0), i64 7) #3
  %55 = icmp eq i32 %54, 0
  %56 = select i1 %55, i32 3, i32 4
  ret i32 %56

57:                                               ; preds = %46, %39, %25, %11
  %58 = phi i32 [ 0, %11 ], [ 1, %25 ], [ 2, %39 ], [ 4, %46 ]
  ret i32 %58
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
