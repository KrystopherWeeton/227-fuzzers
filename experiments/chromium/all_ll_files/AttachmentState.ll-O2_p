; ModuleID = '../../third_party/dawn/src/dawn_native/AttachmentState.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/AttachmentState.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dawn_native::AttachmentStateBlueprint" = type { %"class.ityp::bitset", %"class.ityp::array", i32, i32 }
%"class.ityp::bitset" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.ityp::array" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [4 x i32] }
%"struct.dawn_native::RenderBundleEncoderDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, i32, i32*, i32, i32 }
%"struct.dawn_native::ChainedStruct" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::RenderPipelineDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, %"class.dawn_native::PipelineLayoutBase"*, %"struct.dawn_native::VertexState", %"struct.dawn_native::PrimitiveState", %"struct.dawn_native::DepthStencilState"*, %"struct.dawn_native::MultisampleState", %"struct.dawn_native::FragmentState"* }
%"class.dawn_native::PipelineLayoutBase" = type opaque
%"struct.dawn_native::VertexState" = type { %"struct.dawn_native::ChainedStruct"*, %"class.dawn_native::ShaderModuleBase"*, i8*, i32, %"struct.dawn_native::VertexBufferLayout"* }
%"class.dawn_native::ShaderModuleBase" = type opaque
%"struct.dawn_native::VertexBufferLayout" = type { i64, i32, i32, %"struct.dawn_native::VertexAttribute"* }
%"struct.dawn_native::VertexAttribute" = type { i32, i64, i32 }
%"struct.dawn_native::PrimitiveState" = type { %"struct.dawn_native::ChainedStruct"*, i32, i32, i32, i32 }
%"struct.dawn_native::DepthStencilState" = type { %"struct.dawn_native::ChainedStruct"*, i32, i8, i32, %"struct.dawn_native::StencilFaceState", %"struct.dawn_native::StencilFaceState", i32, i32, i32, float, float }
%"struct.dawn_native::StencilFaceState" = type { i32, i32, i32, i32 }
%"struct.dawn_native::MultisampleState" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i8, [7 x i8] }>
%"struct.dawn_native::FragmentState" = type { %"struct.dawn_native::ChainedStruct"*, %"class.dawn_native::ShaderModuleBase"*, i8*, i32, %"struct.dawn_native::ColorTargetState"* }
%"struct.dawn_native::ColorTargetState" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8], %"struct.dawn_native::BlendState"*, i32, [4 x i8] }>
%"struct.dawn_native::BlendState" = type { %"struct.dawn_native::BlendComponent", %"struct.dawn_native::BlendComponent" }
%"struct.dawn_native::BlendComponent" = type { i32, i32, i32 }
%"struct.dawn_native::RenderPassDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, i32, %"struct.dawn_native::RenderPassColorAttachment"*, %"struct.dawn_native::RenderPassDepthStencilAttachment"*, %"class.dawn_native::QuerySetBase"* }
%"struct.dawn_native::RenderPassColorAttachment" = type { %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"*, i32, i32, %"struct.dawn_native::Color", %"class.dawn_native::TextureViewBase"* }
%"struct.dawn_native::Color" = type { double, double, double, double }
%"class.dawn_native::TextureViewBase" = type { %"class.dawn_native::ObjectBase", %class.Ref.48, %"struct.dawn_native::Format"*, i32, %"struct.dawn_native::SubresourceRange" }
%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.2", %class.Ref.8, %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %class.Ref.22, %"class.std::__1::unique_ptr.24", i32, %"struct.std::__1::array.30", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.dawn_native::AdapterBase" = type opaque
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.8 = type { %class.RefBase.9 }
%class.RefBase.9 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.22 = type { %class.RefBase.23 }
%class.RefBase.23 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array.30" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset.32" }
%"class.std::__1::bitset.32" = type { %"class.std::__1::__bitset.33" }
%"class.std::__1::__bitset.33" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset.34" }
%"class.std::__1::bitset.34" = type { %"class.std::__1::__bitset.35" }
%"class.std::__1::__bitset.35" = type { i64 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%class.Ref.48 = type { %class.RefBase.49 }
%class.RefBase.49 = type { %"class.dawn_native::TextureBase"* }
%"class.dawn_native::TextureBase" = type { %"class.dawn_native::ObjectBase", i32, %"struct.dawn_native::Format"*, %"struct.dawn_native::Extent3D", i32, i32, i32, i32, %"class.std::__1::vector" }
%"struct.dawn_native::Extent3D" = type { i32, i32, i32 }
%"class.std::__1::vector" = type { i64*, i64, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { i64 }
%"struct.dawn_native::SubresourceRange" = type { i8, i32, i32, i32, i32 }
%"struct.dawn_native::RenderPassDepthStencilAttachment" = type { %"class.dawn_native::TextureViewBase"*, i32, i32, float, i8, i32, i32, i32, i8, %"class.dawn_native::TextureViewBase"* }
%"class.dawn_native::QuerySetBase" = type opaque
%"class.dawn_native::AttachmentState" = type { %"class.dawn_native::CachedObject.base", %"class.dawn_native::AttachmentStateBlueprint" }
%"class.dawn_native::CachedObject.base" = type <{ %"class.dawn_native::ObjectBase", i8, [7 x i8], i64, i8 }>
%"struct.dawn_native::AttachmentStateBlueprint::HashFunc" = type { i8 }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"class.BitSetIterator<4, unsigned char>::Iterator" = type { %"class.std::__1::bitset", i64, i64 }
%"struct.dawn_native::AttachmentStateBlueprint::EqualityFunc" = type { i8 }

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask = comdat any

@_ZTVN11dawn_native15AttachmentStateE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::AttachmentState"*)* @_ZN11dawn_native15AttachmentStateD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::AttachmentState"*)* @_ZN11dawn_native15AttachmentStateD0Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCounted10DeleteThisEv to i8*), i8* bitcast (i64 (%"class.dawn_native::AttachmentState"*)* @_ZN11dawn_native15AttachmentState18ComputeContentHashEv to i8*)] }, align 8
@_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 15 }, comdat, align 8

@_ZN11dawn_native24AttachmentStateBlueprintC1EPKNS_29RenderBundleEncoderDescriptorE = hidden unnamed_addr alias void (%"class.dawn_native::AttachmentStateBlueprint"*, %"struct.dawn_native::RenderBundleEncoderDescriptor"*), void (%"class.dawn_native::AttachmentStateBlueprint"*, %"struct.dawn_native::RenderBundleEncoderDescriptor"*)* @_ZN11dawn_native24AttachmentStateBlueprintC2EPKNS_29RenderBundleEncoderDescriptorE
@_ZN11dawn_native24AttachmentStateBlueprintC1EPKNS_24RenderPipelineDescriptorE = hidden unnamed_addr alias void (%"class.dawn_native::AttachmentStateBlueprint"*, %"struct.dawn_native::RenderPipelineDescriptor"*), void (%"class.dawn_native::AttachmentStateBlueprint"*, %"struct.dawn_native::RenderPipelineDescriptor"*)* @_ZN11dawn_native24AttachmentStateBlueprintC2EPKNS_24RenderPipelineDescriptorE
@_ZN11dawn_native24AttachmentStateBlueprintC1EPKNS_20RenderPassDescriptorE = hidden unnamed_addr alias void (%"class.dawn_native::AttachmentStateBlueprint"*, %"struct.dawn_native::RenderPassDescriptor"*), void (%"class.dawn_native::AttachmentStateBlueprint"*, %"struct.dawn_native::RenderPassDescriptor"*)* @_ZN11dawn_native24AttachmentStateBlueprintC2EPKNS_20RenderPassDescriptorE
@_ZN11dawn_native24AttachmentStateBlueprintC1ERKS0_ = hidden unnamed_addr alias void (%"class.dawn_native::AttachmentStateBlueprint"*, %"class.dawn_native::AttachmentStateBlueprint"*), void (%"class.dawn_native::AttachmentStateBlueprint"*, %"class.dawn_native::AttachmentStateBlueprint"*)* @_ZN11dawn_native24AttachmentStateBlueprintC2ERKS0_
@_ZN11dawn_native15AttachmentStateC1EPNS_10DeviceBaseERKNS_24AttachmentStateBlueprintE = hidden unnamed_addr alias void (%"class.dawn_native::AttachmentState"*, %"class.dawn_native::DeviceBase"*, %"class.dawn_native::AttachmentStateBlueprint"*), void (%"class.dawn_native::AttachmentState"*, %"class.dawn_native::DeviceBase"*, %"class.dawn_native::AttachmentStateBlueprint"*)* @_ZN11dawn_native15AttachmentStateC2EPNS_10DeviceBaseERKNS_24AttachmentStateBlueprintE
@_ZN11dawn_native15AttachmentStateD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::AttachmentState"*), void (%"class.dawn_native::AttachmentState"*)* @_ZN11dawn_native15AttachmentStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native24AttachmentStateBlueprintC2EPKNS_29RenderBundleEncoderDescriptorE(%"class.dawn_native::AttachmentStateBlueprint"* nocapture, %"struct.dawn_native::RenderBundleEncoderDescriptor"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.dawn_native::RenderBundleEncoderDescriptor", %"struct.dawn_native::RenderBundleEncoderDescriptor"* %1, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %5, align 4
  %8 = getelementptr inbounds %"struct.dawn_native::RenderBundleEncoderDescriptor", %"struct.dawn_native::RenderBundleEncoderDescriptor"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 255
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.dawn_native::RenderBundleEncoderDescriptor", %"struct.dawn_native::RenderBundleEncoderDescriptor"* %1, i64 0, i32 3
  store i64 1, i64* %3, align 8
  %14 = load i32*, i32** %13, align 8
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 1, i32 0, i32 0, i64 0
  store i32 %15, i32* %16, align 4
  %17 = load i32, i32* %8, align 8
  %18 = and i32 %17, 254
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %23, %39, %12, %31, %2
  %21 = getelementptr inbounds %"struct.dawn_native::RenderBundleEncoderDescriptor", %"struct.dawn_native::RenderBundleEncoderDescriptor"* %1, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %4, align 8
  ret void

23:                                               ; preds = %12
  store i64 3, i64* %3, align 8
  %24 = load i32*, i32** %13, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 1, i32 0, i32 0, i64 1
  store i32 %26, i32* %27, align 4
  %28 = load i32, i32* %8, align 8
  %29 = and i32 %28, 255
  %30 = icmp ugt i32 %29, 2
  br i1 %30, label %31, label %20

31:                                               ; preds = %23
  store i64 7, i64* %3, align 8
  %32 = load i32*, i32** %13, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 2
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 1, i32 0, i32 0, i64 2
  store i32 %34, i32* %35, align 4
  %36 = load i32, i32* %8, align 8
  %37 = and i32 %36, 252
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %20, label %39

39:                                               ; preds = %31
  store i64 15, i64* %3, align 8
  %40 = load i32*, i32** %13, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 3
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 1, i32 0, i32 0, i64 3
  store i32 %42, i32* %43, align 4
  %44 = load i32, i32* %8, align 8
  %45 = and i32 %44, 255
  %46 = icmp ugt i32 %45, 4
  br i1 %46, label %47, label %20

47:                                               ; preds = %39
  tail call void @abort() #6
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native24AttachmentStateBlueprintC2EPKNS_24RenderPipelineDescriptorE(%"class.dawn_native::AttachmentStateBlueprint"* nocapture, %"struct.dawn_native::RenderPipelineDescriptor"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.dawn_native::RenderPipelineDescriptor", %"struct.dawn_native::RenderPipelineDescriptor"* %1, i64 0, i32 6, i32 1
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %5, align 4
  %8 = getelementptr inbounds %"struct.dawn_native::RenderPipelineDescriptor", %"struct.dawn_native::RenderPipelineDescriptor"* %1, i64 0, i32 7
  %9 = load %"struct.dawn_native::FragmentState"*, %"struct.dawn_native::FragmentState"** %8, align 8
  %10 = getelementptr inbounds %"struct.dawn_native::FragmentState", %"struct.dawn_native::FragmentState"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 255
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %34, %58, %18, %46, %2
  %15 = getelementptr inbounds %"struct.dawn_native::RenderPipelineDescriptor", %"struct.dawn_native::RenderPipelineDescriptor"* %1, i64 0, i32 5
  %16 = load %"struct.dawn_native::DepthStencilState"*, %"struct.dawn_native::DepthStencilState"** %15, align 8
  %17 = icmp eq %"struct.dawn_native::DepthStencilState"* %16, null
  br i1 %17, label %33, label %30

18:                                               ; preds = %2
  store i64 1, i64* %3, align 8
  %19 = load %"struct.dawn_native::FragmentState"*, %"struct.dawn_native::FragmentState"** %8, align 8
  %20 = getelementptr inbounds %"struct.dawn_native::FragmentState", %"struct.dawn_native::FragmentState"* %19, i64 0, i32 4
  %21 = load %"struct.dawn_native::ColorTargetState"*, %"struct.dawn_native::ColorTargetState"** %20, align 8
  %22 = getelementptr inbounds %"struct.dawn_native::ColorTargetState", %"struct.dawn_native::ColorTargetState"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 1, i32 0, i32 0, i64 0
  store i32 %23, i32* %24, align 4
  %25 = load %"struct.dawn_native::FragmentState"*, %"struct.dawn_native::FragmentState"** %8, align 8
  %26 = getelementptr inbounds %"struct.dawn_native::FragmentState", %"struct.dawn_native::FragmentState"* %25, i64 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 254
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %14, label %34

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::DepthStencilState"* %16, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %4, align 8
  br label %33

33:                                               ; preds = %14, %30
  ret void

34:                                               ; preds = %18
  store i64 3, i64* %3, align 8
  %35 = load %"struct.dawn_native::FragmentState"*, %"struct.dawn_native::FragmentState"** %8, align 8
  %36 = getelementptr inbounds %"struct.dawn_native::FragmentState", %"struct.dawn_native::FragmentState"* %35, i64 0, i32 4
  %37 = load %"struct.dawn_native::ColorTargetState"*, %"struct.dawn_native::ColorTargetState"** %36, align 8
  %38 = getelementptr inbounds %"struct.dawn_native::ColorTargetState", %"struct.dawn_native::ColorTargetState"* %37, i64 1, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 1, i32 0, i32 0, i64 1
  store i32 %39, i32* %40, align 4
  %41 = load %"struct.dawn_native::FragmentState"*, %"struct.dawn_native::FragmentState"** %8, align 8
  %42 = getelementptr inbounds %"struct.dawn_native::FragmentState", %"struct.dawn_native::FragmentState"* %41, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 255
  %45 = icmp ugt i32 %44, 2
  br i1 %45, label %46, label %14

46:                                               ; preds = %34
  store i64 7, i64* %3, align 8
  %47 = load %"struct.dawn_native::FragmentState"*, %"struct.dawn_native::FragmentState"** %8, align 8
  %48 = getelementptr inbounds %"struct.dawn_native::FragmentState", %"struct.dawn_native::FragmentState"* %47, i64 0, i32 4
  %49 = load %"struct.dawn_native::ColorTargetState"*, %"struct.dawn_native::ColorTargetState"** %48, align 8
  %50 = getelementptr inbounds %"struct.dawn_native::ColorTargetState", %"struct.dawn_native::ColorTargetState"* %49, i64 2, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 1, i32 0, i32 0, i64 2
  store i32 %51, i32* %52, align 4
  %53 = load %"struct.dawn_native::FragmentState"*, %"struct.dawn_native::FragmentState"** %8, align 8
  %54 = getelementptr inbounds %"struct.dawn_native::FragmentState", %"struct.dawn_native::FragmentState"* %53, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 252
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %14, label %58

58:                                               ; preds = %46
  store i64 15, i64* %3, align 8
  %59 = load %"struct.dawn_native::FragmentState"*, %"struct.dawn_native::FragmentState"** %8, align 8
  %60 = getelementptr inbounds %"struct.dawn_native::FragmentState", %"struct.dawn_native::FragmentState"* %59, i64 0, i32 4
  %61 = load %"struct.dawn_native::ColorTargetState"*, %"struct.dawn_native::ColorTargetState"** %60, align 8
  %62 = getelementptr inbounds %"struct.dawn_native::ColorTargetState", %"struct.dawn_native::ColorTargetState"* %61, i64 3, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 1, i32 0, i32 0, i64 3
  store i32 %63, i32* %64, align 4
  %65 = load %"struct.dawn_native::FragmentState"*, %"struct.dawn_native::FragmentState"** %8, align 8
  %66 = getelementptr inbounds %"struct.dawn_native::FragmentState", %"struct.dawn_native::FragmentState"* %65, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 255
  %69 = icmp ugt i32 %68, 4
  br i1 %69, label %70, label %14

70:                                               ; preds = %58
  tail call void @abort() #6
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native24AttachmentStateBlueprintC2EPKNS_20RenderPassDescriptorE(%"class.dawn_native::AttachmentStateBlueprint"* nocapture, %"struct.dawn_native::RenderPassDescriptor"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 3
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.dawn_native::RenderPassDescriptor", %"struct.dawn_native::RenderPassDescriptor"* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 255
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.dawn_native::RenderPassDescriptor", %"struct.dawn_native::RenderPassDescriptor"* %1, i64 0, i32 3
  br label %16

12:                                               ; preds = %42, %2
  %13 = getelementptr inbounds %"struct.dawn_native::RenderPassDescriptor", %"struct.dawn_native::RenderPassDescriptor"* %1, i64 0, i32 4
  %14 = load %"struct.dawn_native::RenderPassDepthStencilAttachment"*, %"struct.dawn_native::RenderPassDepthStencilAttachment"** %13, align 8
  %15 = icmp eq %"struct.dawn_native::RenderPassDepthStencilAttachment"* %14, null
  br i1 %15, label %65, label %48

16:                                               ; preds = %10, %42
  %17 = phi i64 [ 0, %10 ], [ %43, %42 ]
  %18 = load %"struct.dawn_native::RenderPassColorAttachment"*, %"struct.dawn_native::RenderPassColorAttachment"** %11, align 8
  %19 = getelementptr inbounds %"struct.dawn_native::RenderPassColorAttachment", %"struct.dawn_native::RenderPassColorAttachment"* %18, i64 %17, i32 0
  %20 = load %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"** %19, align 8
  %21 = icmp eq %"class.dawn_native::TextureViewBase"* %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.dawn_native::RenderPassColorAttachment", %"struct.dawn_native::RenderPassColorAttachment"* %18, i64 %17, i32 5
  %24 = load %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"** %23, align 8
  br label %25

25:                                               ; preds = %22, %16
  %26 = phi %"class.dawn_native::TextureViewBase"* [ %24, %22 ], [ %20, %16 ]
  %27 = icmp eq i64 %17, 4
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @abort() #6
  unreachable

29:                                               ; preds = %25
  %30 = shl i64 1, %17
  %31 = load i64, i64* %3, align 8
  %32 = or i64 %31, %30
  store i64 %32, i64* %3, align 8
  %33 = tail call dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native15TextureViewBase9GetFormatEv(%"class.dawn_native::TextureViewBase"* %26) #7
  %34 = getelementptr inbounds %"struct.dawn_native::Format", %"struct.dawn_native::Format"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %0, i64 0, i32 1, i32 0, i32 0, i64 %17
  store i32 %35, i32* %36, align 4
  %37 = load i32, i32* %5, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %29
  %40 = tail call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %26) #7
  %41 = tail call i32 @_ZNK11dawn_native11TextureBase14GetSampleCountEv(%"class.dawn_native::TextureBase"* %40) #7
  store i32 %41, i32* %5, align 4
  br label %42

42:                                               ; preds = %29, %39
  %43 = add nuw nsw i64 %17, 1
  %44 = trunc i64 %43 to i32
  %45 = load i32, i32* %6, align 8
  %46 = and i32 %45, 255
  %47 = icmp ugt i32 %46, %44
  br i1 %47, label %16, label %12

48:                                               ; preds = %12
  %49 = getelementptr inbounds %"struct.dawn_native::RenderPassDepthStencilAttachment", %"struct.dawn_native::RenderPassDepthStencilAttachment"* %14, i64 0, i32 0
  %50 = load %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"** %49, align 8
  %51 = icmp eq %"class.dawn_native::TextureViewBase"* %50, null
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.dawn_native::RenderPassDepthStencilAttachment", %"struct.dawn_native::RenderPassDepthStencilAttachment"* %14, i64 0, i32 9
  %54 = load %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"** %53, align 8
  br label %55

55:                                               ; preds = %52, %48
  %56 = phi %"class.dawn_native::TextureViewBase"* [ %54, %52 ], [ %50, %48 ]
  %57 = tail call dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native15TextureViewBase9GetFormatEv(%"class.dawn_native::TextureViewBase"* %56) #7
  %58 = getelementptr inbounds %"struct.dawn_native::Format", %"struct.dawn_native::Format"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %4, align 8
  %60 = load i32, i32* %5, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %55
  %63 = tail call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %56) #7
  %64 = tail call i32 @_ZNK11dawn_native11TextureBase14GetSampleCountEv(%"class.dawn_native::TextureBase"* %63) #7
  store i32 %64, i32* %5, align 4
  br label %65

65:                                               ; preds = %62, %55, %12
  ret void
}

declare dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native15TextureViewBase9GetFormatEv(%"class.dawn_native::TextureViewBase"*) local_unnamed_addr #2

declare %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"*) local_unnamed_addr #2

declare i32 @_ZNK11dawn_native11TextureBase14GetSampleCountEv(%"class.dawn_native::TextureBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native24AttachmentStateBlueprintC2ERKS0_(%"class.dawn_native::AttachmentStateBlueprint"* nocapture, %"class.dawn_native::AttachmentStateBlueprint"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.dawn_native::AttachmentStateBlueprint"* %0 to i8*
  %4 = bitcast %"class.dawn_native::AttachmentStateBlueprint"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK11dawn_native24AttachmentStateBlueprint8HashFuncclEPKS0_(%"struct.dawn_native::AttachmentStateBlueprint::HashFunc"* nocapture readnone, %"class.dawn_native::AttachmentStateBlueprint"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__bit_iterator", align 8
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = alloca %"class.std::__1::__bit_iterator", align 8
  %9 = alloca %"class.std::__1::__bit_iterator", align 8
  %10 = alloca %"class.std::__1::__bit_iterator", align 8
  %11 = alloca %"class.BitSetIterator<4, unsigned char>::Iterator", align 8
  %12 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -7046029254386353130
  %15 = bitcast %"class.BitSetIterator<4, unsigned char>::Iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %11, i64 0, i32 1
  %18 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %11, i64 0, i32 2
  store i64 %13, i64* %16, align 8, !alias.scope !2
  %19 = bitcast i64* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #7, !alias.scope !2
  %20 = and i64 %13, 15
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %55, label %22

22:                                               ; preds = %2
  %23 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %11 to i64
  %24 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  %25 = bitcast %"class.std::__1::__bit_iterator"* %3 to i8*
  %26 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  %27 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  %28 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %29 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %30 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  %31 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  %32 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  br label %34

34:                                               ; preds = %46, %22
  %35 = phi i64 [ %13, %22 ], [ %48, %46 ]
  %36 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %37 = and i64 %36, %35
  %38 = and i64 %37, 4294967295
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %34
  %41 = trunc i64 %37 to i32
  %42 = call i32 @_Z11ScanForwardj(i32 %41) #7
  %43 = zext i32 %42 to i64
  %44 = load i64, i64* %18, align 8, !alias.scope !2
  %45 = add i64 %44, %43
  br label %52

46:                                               ; preds = %34
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #7, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #7, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #7, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #7, !noalias !2
  store i64 %23, i64* %28, align 8, !noalias !5
  store i32 4, i32* %29, align 8, !noalias !5
  store i64 %23, i64* %30, align 8, !noalias !5
  store i32 4, i32* %31, align 8, !noalias !5
  store i64 %23, i64* %32, align 8, !noalias !5
  store i32 0, i32* %33, align 8, !noalias !5
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %6, %"class.std::__1::__bit_iterator"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #7, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #7, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #7, !noalias !2
  %47 = load i64, i64* %16, align 8, !alias.scope !2
  %48 = and i64 %47, -16
  store i64 %48, i64* %16, align 8, !alias.scope !2
  %49 = load i64, i64* %18, align 8, !alias.scope !2
  %50 = add i64 %49, 32
  store i64 %50, i64* %18, align 8, !alias.scope !2
  %51 = icmp ult i64 %50, 4
  br i1 %51, label %34, label %52

52:                                               ; preds = %46, %40
  %53 = phi i64 [ %44, %40 ], [ %50, %46 ]
  %54 = phi i64 [ %45, %40 ], [ 0, %46 ]
  store i64 %54, i64* %17, align 8, !alias.scope !2
  br label %57

55:                                               ; preds = %2
  store i64 32, i64* %18, align 8, !alias.scope !2
  %56 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %11 to i64
  br label %57

57:                                               ; preds = %52, %55
  %58 = phi i64 [ %23, %52 ], [ %56, %55 ]
  %59 = phi i64 [ %54, %52 ], [ 0, %55 ]
  %60 = phi i64 [ %53, %52 ], [ 32, %55 ]
  %61 = bitcast %"class.std::__1::__bit_iterator"* %10 to i8*
  %62 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  %63 = bitcast %"class.std::__1::__bit_iterator"* %8 to i8*
  %64 = bitcast %"class.std::__1::__bit_iterator"* %9 to i8*
  %65 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  %66 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  %67 = bitcast %"class.std::__1::__bit_iterator"* %8 to i64*
  %68 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %8, i64 0, i32 1
  %69 = bitcast %"class.std::__1::__bit_iterator"* %9 to i64*
  %70 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %9, i64 0, i32 1
  br label %71

71:                                               ; preds = %137, %57
  %72 = phi i64 [ %59, %57 ], [ %139, %137 ]
  %73 = phi i64 [ %60, %57 ], [ %138, %137 ]
  %74 = phi i64 [ %14, %57 ], [ %109, %137 ]
  %75 = icmp eq i64 %73, 32
  br i1 %75, label %76, label %99

76:                                               ; preds = %71
  %77 = load i64, i64* %16, align 8
  %78 = and i64 %77, 15
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %99

80:                                               ; preds = %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #7
  %81 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %1, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = shl i64 %74, 6
  %85 = lshr i64 %74, 2
  %86 = add i64 %84, -7046029254386353130
  %87 = add i64 %86, %85
  %88 = add i64 %87, %83
  %89 = xor i64 %88, %74
  %90 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %1, i64 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i64
  %93 = add nuw nsw i64 %92, -7046029254386353130
  %94 = shl i64 %89, 6
  %95 = add i64 %93, %94
  %96 = lshr i64 %89, 2
  %97 = add i64 %95, %96
  %98 = xor i64 %97, %89
  ret i64 %98

99:                                               ; preds = %76, %71
  %100 = and i64 %72, 255
  %101 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %1, i64 0, i32 1, i32 0, i32 0, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i64
  %104 = shl i64 %74, 6
  %105 = lshr i64 %74, 2
  %106 = add i64 %104, -7046029254386353130
  %107 = add i64 %106, %105
  %108 = add i64 %107, %103
  %109 = xor i64 %108, %74
  %110 = sub i64 %72, %73
  %111 = icmp ugt i64 %110, 3
  br i1 %111, label %112, label %113

112:                                              ; preds = %99
  call void @abort() #6
  unreachable

113:                                              ; preds = %99
  %114 = shl i64 1, %110
  %115 = xor i64 %114, -1
  %116 = load i64, i64* %16, align 8
  %117 = and i64 %116, %115
  store i64 %117, i64* %16, align 8
  %118 = icmp ult i64 %73, 4
  br i1 %118, label %119, label %137

119:                                              ; preds = %113, %131
  %120 = phi i64 [ %133, %131 ], [ %117, %113 ]
  %121 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %122 = and i64 %121, %120
  %123 = and i64 %122, 4294967295
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %131, label %125

125:                                              ; preds = %119
  %126 = trunc i64 %122 to i32
  %127 = call i32 @_Z11ScanForwardj(i32 %126) #7
  %128 = zext i32 %127 to i64
  %129 = load i64, i64* %18, align 8
  %130 = add i64 %129, %128
  br label %137

131:                                              ; preds = %119
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #7
  store i64 %58, i64* %65, align 8, !noalias !8
  store i32 4, i32* %66, align 8, !noalias !8
  store i64 %58, i64* %67, align 8, !noalias !8
  store i32 4, i32* %68, align 8, !noalias !8
  store i64 %58, i64* %69, align 8, !noalias !8
  store i32 0, i32* %70, align 8, !noalias !8
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %10, %"class.std::__1::__bit_iterator"* nonnull %7, %"class.std::__1::__bit_iterator"* nonnull %8, %"class.std::__1::__bit_iterator"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #7
  %132 = load i64, i64* %16, align 8
  %133 = and i64 %132, -16
  store i64 %133, i64* %16, align 8
  %134 = load i64, i64* %18, align 8
  %135 = add i64 %134, 32
  store i64 %135, i64* %18, align 8
  %136 = icmp ult i64 %135, 4
  br i1 %136, label %119, label %137

137:                                              ; preds = %131, %113, %125
  %138 = phi i64 [ %129, %125 ], [ %73, %113 ], [ %135, %131 ]
  %139 = phi i64 [ %130, %125 ], [ 0, %113 ], [ 0, %131 ]
  store i64 %139, i64* %17, align 8
  br label %71
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11dawn_native24AttachmentStateBlueprint12EqualityFuncclEPKS0_S3_(%"struct.dawn_native::AttachmentStateBlueprint::EqualityFunc"* nocapture readnone, %"class.dawn_native::AttachmentStateBlueprint"* nocapture readonly, %"class.dawn_native::AttachmentStateBlueprint"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = alloca %"class.std::__1::__bit_iterator", align 8
  %9 = alloca %"class.std::__1::__bit_iterator", align 8
  %10 = alloca %"class.std::__1::__bit_iterator", align 8
  %11 = alloca %"class.std::__1::__bit_iterator", align 8
  %12 = alloca %"class.BitSetIterator<4, unsigned char>::Iterator", align 8
  %13 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %13, align 8
  %16 = load i64, i64* %14, align 8
  %17 = xor i64 %16, %15
  %18 = and i64 %17, 15
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %136

20:                                               ; preds = %3
  %21 = bitcast %"class.BitSetIterator<4, unsigned char>::Iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #7
  %22 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %12, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %12, i64 0, i32 1
  %24 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %12, i64 0, i32 2
  store i64 %16, i64* %22, align 8, !alias.scope !11
  %25 = bitcast i64* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #7, !alias.scope !11
  %26 = and i64 %16, 15
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %61, label %28

28:                                               ; preds = %20
  %29 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %12 to i64
  %30 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  %31 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  %32 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  %33 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  %34 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  %35 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  %36 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  %37 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  %38 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  %39 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  br label %40

40:                                               ; preds = %52, %28
  %41 = phi i64 [ %16, %28 ], [ %54, %52 ]
  %42 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %43 = and i64 %42, %41
  %44 = and i64 %43, 4294967295
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %40
  %47 = trunc i64 %43 to i32
  %48 = call i32 @_Z11ScanForwardj(i32 %47) #7
  %49 = zext i32 %48 to i64
  %50 = load i64, i64* %24, align 8, !alias.scope !11
  %51 = add i64 %50, %49
  br label %58

52:                                               ; preds = %40
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #7, !noalias !11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #7, !noalias !11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #7, !noalias !11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #7, !noalias !11
  store i64 %29, i64* %34, align 8, !noalias !14
  store i32 4, i32* %35, align 8, !noalias !14
  store i64 %29, i64* %36, align 8, !noalias !14
  store i32 4, i32* %37, align 8, !noalias !14
  store i64 %29, i64* %38, align 8, !noalias !14
  store i32 0, i32* %39, align 8, !noalias !14
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #7, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #7, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #7, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #7, !noalias !11
  %53 = load i64, i64* %22, align 8, !alias.scope !11
  %54 = and i64 %53, -16
  store i64 %54, i64* %22, align 8, !alias.scope !11
  %55 = load i64, i64* %24, align 8, !alias.scope !11
  %56 = add i64 %55, 32
  store i64 %56, i64* %24, align 8, !alias.scope !11
  %57 = icmp ult i64 %56, 4
  br i1 %57, label %40, label %58

58:                                               ; preds = %52, %46
  %59 = phi i64 [ %50, %46 ], [ %56, %52 ]
  %60 = phi i64 [ %51, %46 ], [ 0, %52 ]
  store i64 %60, i64* %23, align 8, !alias.scope !11
  br label %63

61:                                               ; preds = %20
  store i64 32, i64* %24, align 8, !alias.scope !11
  %62 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %12 to i64
  br label %63

63:                                               ; preds = %58, %61
  %64 = phi i64 [ %29, %58 ], [ %62, %61 ]
  %65 = phi i64 [ %60, %58 ], [ 0, %61 ]
  %66 = phi i64 [ %59, %58 ], [ 32, %61 ]
  %67 = bitcast %"class.std::__1::__bit_iterator"* %11 to i8*
  %68 = bitcast %"class.std::__1::__bit_iterator"* %8 to i8*
  %69 = bitcast %"class.std::__1::__bit_iterator"* %9 to i8*
  %70 = bitcast %"class.std::__1::__bit_iterator"* %10 to i8*
  %71 = bitcast %"class.std::__1::__bit_iterator"* %8 to i64*
  %72 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %8, i64 0, i32 1
  %73 = bitcast %"class.std::__1::__bit_iterator"* %9 to i64*
  %74 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %9, i64 0, i32 1
  %75 = bitcast %"class.std::__1::__bit_iterator"* %10 to i64*
  %76 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %10, i64 0, i32 1
  br label %77

77:                                               ; preds = %120, %63
  %78 = phi i64 [ %122, %120 ], [ %65, %63 ]
  %79 = phi i64 [ %121, %120 ], [ %66, %63 ]
  %80 = icmp eq i64 %79, 32
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  %82 = load i64, i64* %22, align 8
  %83 = and i64 %82, 15
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %124, label %85

85:                                               ; preds = %81, %77
  %86 = and i64 %78, 255
  %87 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %1, i64 0, i32 1, i32 0, i32 0, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %2, i64 0, i32 1, i32 0, i32 0, i64 %86
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %88, %90
  br i1 %91, label %92, label %123

92:                                               ; preds = %85
  %93 = sub i64 %78, %79
  %94 = icmp ugt i64 %93, 3
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @abort() #6
  unreachable

96:                                               ; preds = %92
  %97 = shl i64 1, %93
  %98 = xor i64 %97, -1
  %99 = load i64, i64* %22, align 8
  %100 = and i64 %99, %98
  store i64 %100, i64* %22, align 8
  %101 = icmp ult i64 %79, 4
  br i1 %101, label %102, label %120

102:                                              ; preds = %96, %114
  %103 = phi i64 [ %116, %114 ], [ %100, %96 ]
  %104 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %105 = and i64 %104, %103
  %106 = and i64 %105, 4294967295
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %114, label %108

108:                                              ; preds = %102
  %109 = trunc i64 %105 to i32
  %110 = call i32 @_Z11ScanForwardj(i32 %109) #7
  %111 = zext i32 %110 to i64
  %112 = load i64, i64* %24, align 8
  %113 = add i64 %112, %111
  br label %120

114:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #7
  store i64 %64, i64* %71, align 8, !noalias !17
  store i32 4, i32* %72, align 8, !noalias !17
  store i64 %64, i64* %73, align 8, !noalias !17
  store i32 4, i32* %74, align 8, !noalias !17
  store i64 %64, i64* %75, align 8, !noalias !17
  store i32 0, i32* %76, align 8, !noalias !17
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %11, %"class.std::__1::__bit_iterator"* nonnull %8, %"class.std::__1::__bit_iterator"* nonnull %9, %"class.std::__1::__bit_iterator"* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #7
  %115 = load i64, i64* %22, align 8
  %116 = and i64 %115, -16
  store i64 %116, i64* %22, align 8
  %117 = load i64, i64* %24, align 8
  %118 = add i64 %117, 32
  store i64 %118, i64* %24, align 8
  %119 = icmp ult i64 %118, 4
  br i1 %119, label %102, label %120

120:                                              ; preds = %114, %96, %108
  %121 = phi i64 [ %112, %108 ], [ %79, %96 ], [ %118, %114 ]
  %122 = phi i64 [ %113, %108 ], [ 0, %96 ], [ 0, %114 ]
  store i64 %122, i64* %23, align 8
  br label %77

123:                                              ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #7
  br label %136

124:                                              ; preds = %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #7
  %125 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %1, i64 0, i32 2
  %126 = load i32, i32* %125, align 8
  %127 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %2, i64 0, i32 2
  %128 = load i32, i32* %127, align 8
  %129 = icmp eq i32 %126, %128
  br i1 %129, label %130, label %136

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %1, i64 0, i32 3
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %"class.dawn_native::AttachmentStateBlueprint", %"class.dawn_native::AttachmentStateBlueprint"* %2, i64 0, i32 3
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %132, %134
  br label %136

136:                                              ; preds = %3, %123, %130, %124
  %137 = phi i1 [ false, %123 ], [ false, %3 ], [ false, %124 ], [ %135, %130 ]
  ret i1 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native15AttachmentStateC2EPNS_10DeviceBaseERKNS_24AttachmentStateBlueprintE(%"class.dawn_native::AttachmentState"*, %"class.dawn_native::DeviceBase"*, %"class.dawn_native::AttachmentStateBlueprint"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 1
  %5 = bitcast %"class.dawn_native::AttachmentStateBlueprint"* %4 to i8*
  %6 = bitcast %"class.dawn_native::AttachmentStateBlueprint"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false) #7
  %7 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN11dawn_native10ObjectBaseC2EPNS_10DeviceBaseE(%"class.dawn_native::ObjectBase"* %7, %"class.dawn_native::DeviceBase"* %1) #7
  %8 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 0, i32 3
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native15AttachmentStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native15AttachmentStateD2Ev(%"class.dawn_native::AttachmentState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native15AttachmentStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 0, i32 0
  %4 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %3) #7
  tail call void @_ZN11dawn_native10DeviceBase22UncacheAttachmentStateEPNS_15AttachmentStateE(%"class.dawn_native::DeviceBase"* %4, %"class.dawn_native::AttachmentState"* %0) #7
  ret void
}

declare %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"*) local_unnamed_addr #2

declare void @_ZN11dawn_native10DeviceBase22UncacheAttachmentStateEPNS_15AttachmentStateE(%"class.dawn_native::DeviceBase"*, %"class.dawn_native::AttachmentState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native15AttachmentStateD0Ev(%"class.dawn_native::AttachmentState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native15AttachmentStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 0, i32 0
  %4 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %3) #7
  tail call void @_ZN11dawn_native10DeviceBase22UncacheAttachmentStateEPNS_15AttachmentStateE(%"class.dawn_native::DeviceBase"* %4, %"class.dawn_native::AttachmentState"* %0) #7
  %5 = bitcast %"class.dawn_native::AttachmentState"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN11dawn_native15AttachmentState18ComputeContentHashEv(%"class.dawn_native::AttachmentState"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 1
  %3 = tail call i64 @_ZNK11dawn_native24AttachmentStateBlueprint8HashFuncclEPKS0_(%"struct.dawn_native::AttachmentStateBlueprint::HashFunc"* undef, %"class.dawn_native::AttachmentStateBlueprint"* %2)
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK11dawn_native15AttachmentState23GetColorAttachmentsMaskEv(%"class.dawn_native::AttachmentState"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11dawn_native15AttachmentState24GetColorAttachmentFormatEh(%"class.dawn_native::AttachmentState"* nocapture readonly, i8 zeroext) local_unnamed_addr #4 align 2 {
  %3 = zext i8 %1 to i64
  %4 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i64 %3
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11dawn_native15AttachmentState25HasDepthStencilAttachmentEv(%"class.dawn_native::AttachmentState"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 1, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11dawn_native15AttachmentState21GetDepthStencilFormatEv(%"class.dawn_native::AttachmentState"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 1, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11dawn_native15AttachmentState14GetSampleCountEv(%"class.dawn_native::AttachmentState"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AttachmentState", %"class.dawn_native::AttachmentState"* %0, i64 0, i32 1, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare void @_ZN10RefCounted10DeleteThisEv(%class.RefCounted*) unnamed_addr #2

declare void @_ZN11dawn_native10ObjectBaseC2EPNS_10DeviceBaseE(%"class.dawn_native::ObjectBase"*, %"class.dawn_native::DeviceBase"*) unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

declare i32 @_Z11ScanForwardj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK14BitSetIteratorILm4EhE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK14BitSetIteratorILm4EhE5beginEv"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK14BitSetIteratorILm4EhE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK14BitSetIteratorILm4EhE5beginEv"}
!14 = !{!15, !12}
!15 = distinct !{!15, !16, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
