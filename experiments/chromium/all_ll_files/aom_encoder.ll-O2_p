; ModuleID = '../../third_party/libaom/source/libaom/aom/src/aom_encoder.c'
source_filename = "../../third_party/libaom/source/libaom/aom/src/aom_encoder.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.aom_codec_ctx = type { i8*, %struct.aom_codec_iface*, i32, i8*, i64, %union.anon.0, %struct.aom_codec_priv* }
%union.anon.0 = type { %struct.aom_codec_dec_cfg* }
%struct.aom_codec_dec_cfg = type { i32, i32, i32, i32 }
%struct.aom_codec_priv = type { i8*, i64, %struct.anon.1 }
%struct.anon.1 = type { %struct.aom_fixed_buf, i32, i32, %struct.aom_codec_cx_pkt }
%struct.aom_fixed_buf = type { i8*, i64 }
%struct.aom_codec_cx_pkt = type { i32, %union.anon }
%union.anon = type { %struct.aom_psnr_pkt }
%struct.aom_psnr_pkt = type { [4 x i32], [4 x i64], [4 x double], [4 x i32], [4 x i64], [4 x double] }
%struct.aom_codec_iface = type { i8*, i32, i64, i32 (%struct.aom_codec_ctx*)*, i32 (%struct.aom_codec_alg_priv*)*, %struct.aom_codec_ctrl_fn_map*, %struct.aom_codec_dec_iface, %struct.aom_codec_enc_iface, i32 (%struct.aom_codec_alg_priv*, i8*, i8*)* }
%struct.aom_codec_alg_priv = type opaque
%struct.aom_codec_ctrl_fn_map = type { i32, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.aom_codec_dec_iface = type { i32 (i8*, i64, %struct.aom_codec_stream_info*)*, i32 (%struct.aom_codec_alg_priv*, %struct.aom_codec_stream_info*)*, i32 (%struct.aom_codec_alg_priv*, i8*, i64, i8*)*, %struct.aom_image* (%struct.aom_codec_alg_priv*, i8**)*, i32 (%struct.aom_codec_alg_priv*, i32 (i8*, i64, %struct.aom_codec_frame_buffer*)*, i32 (i8*, %struct.aom_codec_frame_buffer*)*, i8*)* }
%struct.aom_codec_stream_info = type { i32, i32, i32, i32, i32, i32 }
%struct.aom_image = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i8*], [3 x i32], i64, i32, i32, i32, i8*, i8*, i32, i32, %struct.aom_metadata_array*, i8* }
%struct.aom_metadata_array = type opaque
%struct.aom_codec_frame_buffer = type { i8*, i64, i8* }
%struct.aom_codec_enc_iface = type { i32, %struct.aom_codec_enc_cfg*, i32 (%struct.aom_codec_alg_priv*, %struct.aom_image*, i64, i64, i64)*, %struct.aom_codec_cx_pkt* (%struct.aom_codec_alg_priv*, i8**)*, i32 (%struct.aom_codec_alg_priv*, %struct.aom_codec_enc_cfg*)*, %struct.aom_fixed_buf* (%struct.aom_codec_alg_priv*)*, %struct.aom_image* (%struct.aom_codec_alg_priv*)* }
%struct.aom_codec_enc_cfg = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.aom_rational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.aom_fixed_buf, %struct.aom_fixed_buf, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [64 x i32], [64 x i32], i32, [5 x i32], %struct.cfg_options }
%struct.aom_rational = type { i32, i32 }
%struct.cfg_options = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.aom_codec_pkt_list = type { i32, i32, [1 x %struct.aom_codec_cx_pkt] }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_codec_enc_init_ver(%struct.aom_codec_ctx*, %struct.aom_codec_iface*, %struct.aom_codec_enc_cfg*, i64, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %4, 26
  br i1 %6, label %7, label %51

7:                                                ; preds = %5
  %8 = icmp ne %struct.aom_codec_ctx* %0, null
  %9 = icmp ne %struct.aom_codec_iface* %1, null
  %10 = and i1 %8, %9
  %11 = icmp ne %struct.aom_codec_enc_cfg* %2, null
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %51

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 7
  br i1 %16, label %17, label %54

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %1, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 2
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %54, label %22

22:                                               ; preds = %17
  %23 = and i64 %3, 65536
  %24 = icmp ne i64 %23, 0
  %25 = and i64 %19, 65536
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %24, %26
  br i1 %27, label %54, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 1
  store %struct.aom_codec_iface* %1, %struct.aom_codec_iface** %29, align 8
  %30 = bitcast %struct.aom_codec_iface* %1 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %struct.aom_codec_ctx* %0 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 6
  store %struct.aom_codec_priv* null, %struct.aom_codec_priv** %33, align 8
  %34 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 4
  store i64 %3, i64* %34, align 8
  %35 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 5
  %36 = bitcast %union.anon.0* %35 to %struct.aom_codec_enc_cfg**
  store %struct.aom_codec_enc_cfg* %2, %struct.aom_codec_enc_cfg** %36, align 8
  %37 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %1, i64 0, i32 3
  %38 = load i32 (%struct.aom_codec_ctx*)*, i32 (%struct.aom_codec_ctx*)** %37, align 8
  %39 = tail call i32 %38(%struct.aom_codec_ctx* nonnull %0) #4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %28
  %42 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %33, align 8
  %43 = icmp eq %struct.aom_codec_priv* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %42, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %41, %44
  %48 = phi i8* [ %46, %44 ], [ null, %41 ]
  %49 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 3
  store i8* %48, i8** %49, align 8
  %50 = tail call i32 @aom_codec_destroy(%struct.aom_codec_ctx* nonnull %0) #4
  br label %54

51:                                               ; preds = %7, %5
  %52 = phi i32 [ 3, %5 ], [ 8, %7 ]
  %53 = icmp eq %struct.aom_codec_ctx* %0, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %47, %28, %13, %17, %22, %51
  %55 = phi i32 [ %52, %51 ], [ 4, %22 ], [ 4, %17 ], [ 3, %13 ], [ 0, %28 ], [ %39, %47 ]
  %56 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 %55, i32* %56, align 8
  br label %57

57:                                               ; preds = %51, %54
  %58 = phi i32 [ %52, %51 ], [ %55, %54 ]
  ret i32 %58
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @aom_codec_destroy(%struct.aom_codec_ctx*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_codec_enc_config_default(%struct.aom_codec_iface* readonly, %struct.aom_codec_enc_cfg*, i32) local_unnamed_addr #0 {
  %4 = icmp ne %struct.aom_codec_iface* %0, null
  %5 = icmp ne %struct.aom_codec_enc_cfg* %1, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %32

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 2
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %0, i64 0, i32 7, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %0, i64 0, i32 7, i32 1
  %18 = load %struct.aom_codec_enc_cfg*, %struct.aom_codec_enc_cfg** %17, align 8
  %19 = sext i32 %14 to i64
  br label %22

20:                                               ; preds = %22
  %21 = icmp slt i64 %28, %19
  br i1 %21, label %22, label %32

22:                                               ; preds = %16, %20
  %23 = phi i64 [ 0, %16 ], [ %28, %20 ]
  %24 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %18, i64 %23
  %25 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %2
  %28 = add nuw nsw i64 %23, 1
  br i1 %27, label %29, label %20

29:                                               ; preds = %22
  %30 = bitcast %struct.aom_codec_enc_cfg* %1 to i8*
  %31 = bitcast %struct.aom_codec_enc_cfg* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %31, i64 904, i1 false)
  br label %32

32:                                               ; preds = %20, %12, %7, %3, %29
  %33 = phi i32 [ 0, %29 ], [ 8, %3 ], [ 4, %7 ], [ 8, %12 ], [ 8, %20 ]
  br i1 %5, label %34, label %40

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53
  %36 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 2
  %37 = bitcast %struct.cfg_options* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 140, i1 false)
  store i32 128, i32* %36, align 4
  %38 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 3
  store i32 4, i32* %38, align 4
  %39 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 31
  store i32 3, i32* %39, align 4
  br label %40

40:                                               ; preds = %34, %32
  ret i32 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_codec_encode(%struct.aom_codec_ctx*, %struct.aom_image*, i64, i64, i64) local_unnamed_addr #0 {
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = icmp eq %struct.aom_codec_ctx* %0, null
  br i1 %9, label %43, label %10

10:                                               ; preds = %5
  %11 = icmp eq %struct.aom_image* %1, null
  %12 = icmp ne i64 %3, 0
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %40

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 1
  %16 = load %struct.aom_codec_iface*, %struct.aom_codec_iface** %15, align 8
  %17 = icmp eq %struct.aom_codec_iface* %16, null
  br i1 %17, label %40, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 6
  %20 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %19, align 8
  %21 = icmp eq %struct.aom_codec_priv* %20, null
  br i1 %21, label %40, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %16, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 2
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %28) #4
  store i16 -21846, i16* %8, align 2
  call void asm sideeffect "fstcw $0\0A\09", "=*m,~{dirflag},~{fpsr},~{flags}"(i16* nonnull %8) #4, !srcloc !2
  %29 = load i16, i16* %8, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %28) #4
  %30 = and i16 %29, -769
  %31 = or i16 %30, 512
  %32 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %32) #4
  store i16 %31, i16* %7, align 2
  call void asm sideeffect "fldcw $0", "*m,~{dirflag},~{fpsr},~{flags}"(i16* nonnull %7) #4, !srcloc !3
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %32) #4
  %33 = load %struct.aom_codec_iface*, %struct.aom_codec_iface** %15, align 8
  %34 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %33, i64 0, i32 7, i32 2
  %35 = load i32 (%struct.aom_codec_alg_priv*, %struct.aom_image*, i64, i64, i64)*, i32 (%struct.aom_codec_alg_priv*, %struct.aom_image*, i64, i64, i64)** %34, align 8
  %36 = bitcast %struct.aom_codec_priv** %19 to %struct.aom_codec_alg_priv**
  %37 = load %struct.aom_codec_alg_priv*, %struct.aom_codec_alg_priv** %36, align 8
  %38 = call i32 %35(%struct.aom_codec_alg_priv* %37, %struct.aom_image* %1, i64 %2, i64 %3, i64 %4) #4
  %39 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %39)
  store i16 %29, i16* %6, align 2
  call void asm sideeffect "fldcw $0", "*m,~{dirflag},~{fpsr},~{flags}"(i16* nonnull %6) #4, !srcloc !3
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %39)
  br label %40

40:                                               ; preds = %22, %14, %18, %10, %27
  %41 = phi i32 [ 4, %22 ], [ 1, %14 ], [ 1, %18 ], [ 8, %10 ], [ %38, %27 ]
  %42 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 %41, i32* %42, align 8
  br label %43

43:                                               ; preds = %5, %40
  %44 = phi i32 [ %41, %40 ], [ 8, %5 ]
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.aom_codec_cx_pkt* @aom_codec_get_cx_data(%struct.aom_codec_ctx*, i8**) local_unnamed_addr #0 {
  %3 = icmp eq %struct.aom_codec_ctx* %0, null
  br i1 %3, label %90, label %4

4:                                                ; preds = %2
  %5 = icmp eq i8** %1, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 8, i32* %7, align 8
  br label %90

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 1
  %10 = load %struct.aom_codec_iface*, %struct.aom_codec_iface** %9, align 8
  %11 = icmp eq %struct.aom_codec_iface* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 6
  %14 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %13, align 8
  %15 = icmp eq %struct.aom_codec_priv* %14, null
  %16 = bitcast %struct.aom_codec_priv* %14 to %struct.aom_codec_alg_priv*
  br i1 %15, label %17, label %19

17:                                               ; preds = %12, %8
  %18 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 1, i32* %18, align 8
  br label %90

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %10, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 2
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 4, i32* %25, align 8
  br label %90

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %10, i64 0, i32 7, i32 3
  %28 = load %struct.aom_codec_cx_pkt* (%struct.aom_codec_alg_priv*, i8**)*, %struct.aom_codec_cx_pkt* (%struct.aom_codec_alg_priv*, i8**)** %27, align 8
  %29 = tail call %struct.aom_codec_cx_pkt* %28(%struct.aom_codec_alg_priv* nonnull %16, i8** nonnull %1) #4
  %30 = icmp eq %struct.aom_codec_cx_pkt* %29, null
  br i1 %30, label %90, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.aom_codec_cx_pkt, %struct.aom_codec_cx_pkt* %29, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %90

35:                                               ; preds = %31
  %36 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %13, align 8
  %37 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %75, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.aom_codec_cx_pkt, %struct.aom_codec_cx_pkt* %29, i64 0, i32 1
  %42 = bitcast %union.anon* %41 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %43, %38
  br i1 %44, label %75, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.aom_codec_cx_pkt, %struct.aom_codec_cx_pkt* %29, i64 0, i32 1, i32 0, i32 0, i64 2
  %47 = bitcast i32* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %36, i64 0, i32 2, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = zext i32 %50 to i64
  %52 = add i64 %48, %51
  %53 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %36, i64 0, i32 2, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = add i64 %52, %55
  %57 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %36, i64 0, i32 2, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = icmp ugt i64 %56, %58
  br i1 %59, label %75, label %60

60:                                               ; preds = %45
  %61 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %36, i64 0, i32 2, i32 3
  %62 = getelementptr inbounds i8, i8* %38, i64 %51
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* align 1 %43, i64 %48, i1 false)
  %63 = bitcast %struct.aom_codec_cx_pkt* %61 to i8*
  %64 = bitcast %struct.aom_codec_cx_pkt* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* nonnull align 8 %64, i64 168, i1 false)
  %65 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %36, i64 0, i32 2, i32 3, i32 1
  %66 = bitcast %union.anon* %65 to i8**
  store i8* %38, i8** %66, align 8
  %67 = load i32, i32* %49, align 8
  %68 = load i32, i32* %53, align 4
  %69 = add i32 %68, %67
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %36, i64 0, i32 2, i32 3, i32 1, i32 0, i32 0, i64 2
  %72 = bitcast i32* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, %70
  store i64 %74, i64* %72, align 8
  br label %75

75:                                               ; preds = %45, %40, %35, %60
  %76 = phi %struct.aom_codec_cx_pkt* [ %61, %60 ], [ %29, %45 ], [ %29, %40 ], [ %29, %35 ]
  %77 = getelementptr inbounds %struct.aom_codec_cx_pkt, %struct.aom_codec_cx_pkt* %76, i64 0, i32 1
  %78 = bitcast %union.anon* %77 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %38, %79
  br i1 %80, label %81, label %90

81:                                               ; preds = %75
  %82 = getelementptr inbounds %struct.aom_codec_cx_pkt, %struct.aom_codec_cx_pkt* %76, i64 0, i32 1, i32 0, i32 0, i64 2
  %83 = bitcast i32* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds i8, i8* %38, i64 %84
  store i8* %85, i8** %37, align 8
  %86 = load i64, i64* %83, align 8
  %87 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %36, i64 0, i32 2, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %88, %86
  store i64 %89, i64* %87, align 8
  br label %90

90:                                               ; preds = %2, %6, %17, %24, %75, %81, %26, %31
  %91 = phi %struct.aom_codec_cx_pkt* [ %29, %31 ], [ null, %26 ], [ %76, %81 ], [ %76, %75 ], [ null, %24 ], [ null, %17 ], [ null, %6 ], [ null, %2 ]
  ret %struct.aom_codec_cx_pkt* %91
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_codec_set_cx_data_buf(%struct.aom_codec_ctx* readonly, %struct.aom_fixed_buf* readonly, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.aom_codec_ctx* %0, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 6
  %8 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %7, align 8
  %9 = icmp eq %struct.aom_codec_priv* %8, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %6
  %11 = icmp eq %struct.aom_fixed_buf* %1, null
  %12 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %8, i64 0, i32 2, i32 0
  br i1 %11, label %20, label %13

13:                                               ; preds = %10
  %14 = bitcast %struct.aom_fixed_buf* %12 to i8*
  %15 = bitcast %struct.aom_fixed_buf* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* nonnull align 8 %15, i64 16, i1 false)
  %16 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %7, align 8
  %17 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %16, i64 0, i32 2, i32 1
  store i32 %2, i32* %17, align 8
  %18 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %7, align 8
  %19 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %18, i64 0, i32 2, i32 2
  store i32 %3, i32* %19, align 4
  br label %28

20:                                               ; preds = %10
  %21 = getelementptr inbounds %struct.aom_fixed_buf, %struct.aom_fixed_buf* %12, i64 0, i32 0
  store i8* null, i8** %21, align 8
  %22 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %7, align 8
  %23 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %22, i64 0, i32 2, i32 0, i32 1
  store i64 0, i64* %23, align 8
  %24 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %7, align 8
  %25 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %24, i64 0, i32 2, i32 1
  store i32 0, i32* %25, align 8
  %26 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %7, align 8
  %27 = getelementptr inbounds %struct.aom_codec_priv, %struct.aom_codec_priv* %26, i64 0, i32 2, i32 2
  store i32 0, i32* %27, align 4
  br label %28

28:                                               ; preds = %13, %20, %4, %6
  %29 = phi i32 [ 8, %6 ], [ 8, %4 ], [ 0, %20 ], [ 0, %13 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.aom_image* @aom_codec_get_preview_frame(%struct.aom_codec_ctx*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.aom_codec_ctx* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 1
  %5 = load %struct.aom_codec_iface*, %struct.aom_codec_iface** %4, align 8
  %6 = icmp eq %struct.aom_codec_iface* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 6
  %9 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %8, align 8
  %10 = icmp eq %struct.aom_codec_priv* %9, null
  %11 = bitcast %struct.aom_codec_priv* %9 to %struct.aom_codec_alg_priv*
  br i1 %10, label %12, label %14

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 1, i32* %13, align 8
  br label %29

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %5, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 2
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 4, i32* %20, align 8
  br label %29

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %5, i64 0, i32 7, i32 6
  %23 = load %struct.aom_image* (%struct.aom_codec_alg_priv*)*, %struct.aom_image* (%struct.aom_codec_alg_priv*)** %22, align 8
  %24 = icmp eq %struct.aom_image* (%struct.aom_codec_alg_priv*)* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 4, i32* %26, align 8
  br label %29

27:                                               ; preds = %21
  %28 = tail call %struct.aom_image* %23(%struct.aom_codec_alg_priv* nonnull %11) #4
  br label %29

29:                                               ; preds = %1, %12, %25, %27, %19
  %30 = phi %struct.aom_image* [ %28, %27 ], [ null, %25 ], [ null, %19 ], [ null, %12 ], [ null, %1 ]
  ret %struct.aom_image* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.aom_fixed_buf* @aom_codec_get_global_headers(%struct.aom_codec_ctx*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.aom_codec_ctx* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 1
  %5 = load %struct.aom_codec_iface*, %struct.aom_codec_iface** %4, align 8
  %6 = icmp eq %struct.aom_codec_iface* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 6
  %9 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %8, align 8
  %10 = icmp eq %struct.aom_codec_priv* %9, null
  %11 = bitcast %struct.aom_codec_priv* %9 to %struct.aom_codec_alg_priv*
  br i1 %10, label %12, label %14

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 1, i32* %13, align 8
  br label %29

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %5, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 2
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 4, i32* %20, align 8
  br label %29

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %5, i64 0, i32 7, i32 5
  %23 = load %struct.aom_fixed_buf* (%struct.aom_codec_alg_priv*)*, %struct.aom_fixed_buf* (%struct.aom_codec_alg_priv*)** %22, align 8
  %24 = icmp eq %struct.aom_fixed_buf* (%struct.aom_codec_alg_priv*)* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 4, i32* %26, align 8
  br label %29

27:                                               ; preds = %21
  %28 = tail call %struct.aom_fixed_buf* %23(%struct.aom_codec_alg_priv* nonnull %11) #4
  br label %29

29:                                               ; preds = %1, %12, %25, %27, %19
  %30 = phi %struct.aom_fixed_buf* [ %28, %27 ], [ null, %25 ], [ null, %19 ], [ null, %12 ], [ null, %1 ]
  ret %struct.aom_fixed_buf* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_codec_enc_config_set(%struct.aom_codec_ctx*, %struct.aom_codec_enc_cfg*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.aom_codec_ctx* %0, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 1
  %6 = load %struct.aom_codec_iface*, %struct.aom_codec_iface** %5, align 8
  %7 = icmp eq %struct.aom_codec_iface* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 6
  %10 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %9, align 8
  %11 = icmp ne %struct.aom_codec_priv* %10, null
  %12 = icmp ne %struct.aom_codec_enc_cfg* %1, null
  %13 = and i1 %12, %11
  %14 = bitcast %struct.aom_codec_priv* %10 to %struct.aom_codec_alg_priv*
  br i1 %13, label %15, label %24

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %6, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 2
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.aom_codec_iface, %struct.aom_codec_iface* %6, i64 0, i32 7, i32 4
  %22 = load i32 (%struct.aom_codec_alg_priv*, %struct.aom_codec_enc_cfg*)*, i32 (%struct.aom_codec_alg_priv*, %struct.aom_codec_enc_cfg*)** %21, align 8
  %23 = tail call i32 %22(%struct.aom_codec_alg_priv* nonnull %14, %struct.aom_codec_enc_cfg* nonnull %1) #4
  br label %24

24:                                               ; preds = %15, %8, %4, %20
  %25 = phi i32 [ 4, %15 ], [ 8, %8 ], [ 8, %4 ], [ %23, %20 ]
  %26 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 2
  store i32 %25, i32* %26, align 8
  br label %27

27:                                               ; preds = %2, %24
  %28 = phi i32 [ %25, %24 ], [ 8, %2 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_codec_pkt_list_add(%struct.aom_codec_pkt_list* nocapture, %struct.aom_codec_cx_pkt* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.aom_codec_pkt_list, %struct.aom_codec_pkt_list* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.aom_codec_pkt_list, %struct.aom_codec_pkt_list* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp ult i32 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = add nuw i32 %4, 1
  store i32 %9, i32* %3, align 8
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %struct.aom_codec_pkt_list, %struct.aom_codec_pkt_list* %0, i64 0, i32 2, i64 %10
  %12 = bitcast %struct.aom_codec_cx_pkt* %11 to i8*
  %13 = bitcast %struct.aom_codec_cx_pkt* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 168, i1 false)
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i32 [ 0, %8 ], [ 1, %2 ]
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.aom_codec_cx_pkt* @aom_codec_pkt_list_get(%struct.aom_codec_pkt_list*, i8** nocapture) local_unnamed_addr #3 {
  %3 = load i8*, i8** %1, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %struct.aom_codec_cx_pkt*
  %7 = bitcast i8** %1 to %struct.aom_codec_cx_pkt**
  br label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.aom_codec_pkt_list, %struct.aom_codec_pkt_list* %0, i64 0, i32 2, i64 0
  %10 = bitcast i8** %1 to %struct.aom_codec_cx_pkt**
  store %struct.aom_codec_cx_pkt* %9, %struct.aom_codec_cx_pkt** %10, align 8
  br label %11

11:                                               ; preds = %5, %8
  %12 = phi %struct.aom_codec_cx_pkt** [ %7, %5 ], [ %10, %8 ]
  %13 = phi %struct.aom_codec_cx_pkt* [ %6, %5 ], [ %9, %8 ]
  %14 = getelementptr inbounds %struct.aom_codec_pkt_list, %struct.aom_codec_pkt_list* %0, i64 0, i32 2, i64 0
  %15 = ptrtoint %struct.aom_codec_cx_pkt* %13 to i64
  %16 = ptrtoint %struct.aom_codec_cx_pkt* %14 to i64
  %17 = sub i64 %15, %16
  %18 = sdiv exact i64 %17, 168
  %19 = getelementptr inbounds %struct.aom_codec_pkt_list, %struct.aom_codec_pkt_list* %0, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %18, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %11
  %24 = getelementptr inbounds %struct.aom_codec_cx_pkt, %struct.aom_codec_cx_pkt* %13, i64 1
  store %struct.aom_codec_cx_pkt* %24, %struct.aom_codec_cx_pkt** %12, align 8
  br label %25

25:                                               ; preds = %11, %23
  %26 = phi %struct.aom_codec_cx_pkt* [ %13, %23 ], [ null, %11 ]
  ret %struct.aom_codec_cx_pkt* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 432158, i32 432169}
!3 = !{i32 432030}
