; ModuleID = '../../third_party/blink/renderer/platform/graphics/filters/fe_composite.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/filters/fe_composite.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::FEComposite" = type <{ %"class.blink::FilterEffect", i32, float, float, float, float, [4 x i8] }>
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector", %"class.blink::Member.2", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Filter"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.4, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.4 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.blink::Filter" = type opaque
%"class.cc::ArithmeticPaintFilter" = type { %"class.cc::PaintFilter", float, float, float, float, i8, %class.sk_sp, %class.sk_sp }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.cc::XfermodePaintFilter" = type { %"class.cc::PaintFilter", i32, %class.sk_sp, %class.sk_sp }
%"class.WTF::TextStream" = type { %"class.WTF::StringBuilder" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.12, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i32 }
%union.anon.12 = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15", [16 x i8] }
%"class.WTF::VectorBufferBase.15" = type { i8*, i32, i32 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.153", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.194", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.133", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i64 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.127", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { i64 }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { float }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.136", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.145" }
%"class.WTF::Vector.145" = type { %"class.WTF::VectorBuffer.146" }
%"class.WTF::VectorBuffer.146" = type { %"class.WTF::VectorBufferBase.147" }
%"class.WTF::VectorBufferBase.147" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.161" }
%"class.WTF::VectorBuffer.161" = type { %"class.WTF::VectorBufferBase.162" }
%"class.WTF::VectorBufferBase.162" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.175" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.85"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.92"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.198" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.193 }
%class.scoped_refptr.193 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__cxx_atomic_impl.196" }
%"struct.std::__1::__cxx_atomic_impl.196" = type { %"struct.std::__1::__cxx_atomic_base_impl.197" }
%"struct.std::__1::__cxx_atomic_base_impl.197" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

$_ZN5blink11FEComposite36MayProduceInvalidPreMultipliedPixelsEv = comdat any

$_ZN5blink11FECompositeD0Ev = comdat any

$_ZNK5blink12FilterEffect19GetFilterEffectTypeEv = comdat any

$_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE = comdat any

@_ZTVN5blink11FECompositeE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffectD2Ev to i8*), i8* bitcast (void (%"class.blink::FEComposite"*)* @_ZN5blink11FECompositeD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)* @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FEComposite"*)* @_ZN5blink11FEComposite17CreateImageFilterEv to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FEComposite"*)* @_ZN5blink11FEComposite34CreateImageFilterWithoutValidationEv to i8*), i8* bitcast (i32 (%"class.blink::FilterEffect"*)* @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv to i8*), i8* bitcast (%"class.WTF::TextStream"* (%"class.blink::FEComposite"*, %"class.WTF::TextStream"*, i32)* @_ZNK5blink11FEComposite22ExternalRepresentationERN3WTF10TextStreamEi to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, i32)* @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE to i8*), i8* bitcast (i1 (%"class.blink::FEComposite"*)* @_ZNK5blink11FEComposite24AffectsTransparentPixelsEv to i8*), i8* bitcast (i1 (%"class.blink::FEComposite"*)* @_ZN5blink11FEComposite36MayProduceInvalidPreMultipliedPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FEComposite"*, %"class.blink::FloatRect"*)* @_ZNK5blink11FEComposite9MapInputsERKNS_9FloatRectE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)* @_ZNK5blink12FilterEffect9MapEffectERKNS_9FloatRectE to i8*)] }, align 8
@__const._ZN5blink11FEComposite25CreateImageFilterInternalEb.crop_rect = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } } } } }, align 4
@.str = private unnamed_addr constant [13 x i8] c"[feComposite\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c" operation=\22\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c" k1=\22\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"\22 k2=\22\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"\22 k3=\22\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"\22 k4=\22\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"OVER\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"IN\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"OUT\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"ATOP\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"XOR\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"ARITHMETIC\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"LIGHTER\00", align 1
@switch.table._ZN5blink11ToBlendModeENS_22CompositeOperationTypeE = private unnamed_addr constant [6 x i32] [i32 5, i32 7, i32 9, i32 11, i32 3, i32 12], align 4
@switch.table._ZNK5blink11FEComposite22ExternalRepresentationERN3WTF10TextStreamEi = private unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0)], align 8

@_ZN5blink11FECompositeC1EPNS_6FilterERKNS_22CompositeOperationTypeEffff = hidden unnamed_addr alias void (%"class.blink::FEComposite"*, %"class.blink::Filter"*, i32*, float, float, float, float), void (%"class.blink::FEComposite"*, %"class.blink::Filter"*, i32*, float, float, float, float)* @_ZN5blink11FECompositeC2EPNS_6FilterERKNS_22CompositeOperationTypeEffff

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FECompositeC2EPNS_6FilterERKNS_22CompositeOperationTypeEffff(%"class.blink::FEComposite"*, %"class.blink::Filter"*, i32* nocapture readonly dereferenceable(4), float, float, float, float) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"* %8, %"class.blink::Filter"* %1) #9
  %9 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink11FECompositeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 1
  %11 = load i32, i32* %2, align 4
  store i32 %11, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 2
  store float %3, float* %12, align 4
  %13 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 3
  store float %4, float* %13, align 8
  %14 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 4
  store float %5, float* %14, align 4
  %15 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 5
  store float %6, float* %15, align 8
  ret void
}

declare void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"*, %"class.blink::Filter"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink11FEComposite9OperationEv(%"class.blink::FEComposite"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11FEComposite12SetOperationENS_22CompositeOperationTypeE(%"class.blink::FEComposite"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink11FEComposite2K1Ev(%"class.blink::FEComposite"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 2
  %3 = load float, float* %2, align 4
  ret float %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11FEComposite5SetK1Ef(%"class.blink::FEComposite"* nocapture, float) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 2
  %4 = load float, float* %3, align 4
  %5 = fcmp oeq float %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store float %1, float* %3, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink11FEComposite2K2Ev(%"class.blink::FEComposite"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 3
  %3 = load float, float* %2, align 8
  ret float %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11FEComposite5SetK2Ef(%"class.blink::FEComposite"* nocapture, float) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 3
  %4 = load float, float* %3, align 8
  %5 = fcmp oeq float %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store float %1, float* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink11FEComposite2K3Ev(%"class.blink::FEComposite"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 4
  %3 = load float, float* %2, align 4
  ret float %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11FEComposite5SetK3Ef(%"class.blink::FEComposite"* nocapture, float) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 4
  %4 = load float, float* %3, align 4
  %5 = fcmp oeq float %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store float %1, float* %3, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink11FEComposite2K4Ev(%"class.blink::FEComposite"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 5
  %3 = load float, float* %2, align 8
  ret float %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11FEComposite5SetK4Ef(%"class.blink::FEComposite"* nocapture, float) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 5
  %4 = load float, float* %3, align 8
  %5 = fcmp oeq float %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store float %1, float* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink11FEComposite24AffectsTransparentPixelsEv(%"class.blink::FEComposite"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 6
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 5
  %7 = load float, float* %6, align 8
  %8 = fcmp ogt float %7, 0.000000e+00
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink11FEComposite9MapInputsERKNS_9FloatRectE(%"class.blink::FEComposite"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.blink::FloatRect"*
  %8 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 0
  %9 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %8, i32 0) #9
  %10 = tail call { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect7MapRectERKNS_9FloatRectE(%"class.blink::FilterEffect"* %9, %"class.blink::FloatRect"* dereferenceable(16) %1) #9
  %11 = extractvalue { <2 x float>, <2 x float> } %10, 0
  %12 = extractvalue { <2 x float>, <2 x float> } %10, 1
  %13 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %8, i32 1) #9
  %15 = tail call { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect7MapRectERKNS_9FloatRectE(%"class.blink::FilterEffect"* %14, %"class.blink::FloatRect"* dereferenceable(16) %1) #9
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %17 = extractvalue { <2 x float>, <2 x float> } %15, 0
  store <2 x float> %17, <2 x float>* %16, align 8
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %19 = extractvalue { <2 x float>, <2 x float> } %15, 1
  store <2 x float> %19, <2 x float>* %18, align 8
  %20 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %53 [
    i32 2, label %22
    i32 4, label %60
    i32 6, label %29
  ]

22:                                               ; preds = %2
  %23 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23)
  %24 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.blink::FloatRect"*
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %11, <2 x float>* %25, align 8
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %12, <2 x float>* %26, align 8
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %24, %"class.blink::FloatRect"* nonnull dereferenceable(16) %7) #9
  %27 = load <2 x float>, <2 x float>* %25, align 8
  %28 = load <2 x float>, <2 x float>* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23)
  br label %60

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 5
  %31 = load float, float* %30, align 8
  %32 = fcmp ogt float %31, 0.000000e+00
  br i1 %32, label %53, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 3
  %35 = load float, float* %34, align 8
  %36 = fcmp ogt float %35, 0.000000e+00
  %37 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 4
  %38 = load float, float* %37, align 4
  %39 = fcmp ogt float %38, 0.000000e+00
  br i1 %36, label %40, label %41

40:                                               ; preds = %33
  br i1 %39, label %53, label %60

41:                                               ; preds = %33
  br i1 %39, label %60, label %42

42:                                               ; preds = %41
  %43 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 2
  %44 = load float, float* %43, align 4
  %45 = fcmp ogt float %44, 0.000000e+00
  br i1 %45, label %46, label %60

46:                                               ; preds = %42
  %47 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47)
  %48 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.blink::FloatRect"*
  %49 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %11, <2 x float>* %49, align 8
  %50 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %12, <2 x float>* %50, align 8
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %48, %"class.blink::FloatRect"* nonnull dereferenceable(16) %7) #9
  %51 = load <2 x float>, <2 x float>* %49, align 8
  %52 = load <2 x float>, <2 x float>* %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47)
  br label %60

53:                                               ; preds = %2, %40, %29
  %54 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRect"*
  %56 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %11, <2 x float>* %56, align 8
  %57 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %12, <2 x float>* %57, align 8
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %55, %"class.blink::FloatRect"* nonnull dereferenceable(16) %7) #9
  %58 = load <2 x float>, <2 x float>* %56, align 8
  %59 = load <2 x float>, <2 x float>* %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  br label %60

60:                                               ; preds = %42, %41, %40, %2, %53, %46, %22
  %61 = phi <2 x float> [ %59, %53 ], [ %52, %46 ], [ %28, %22 ], [ %19, %2 ], [ %12, %40 ], [ %19, %41 ], [ zeroinitializer, %42 ]
  %62 = phi <2 x float> [ %58, %53 ], [ %51, %46 ], [ %27, %22 ], [ %17, %2 ], [ %11, %40 ], [ %17, %41 ], [ zeroinitializer, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  %63 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %62, 0
  %64 = insertvalue { <2 x float>, <2 x float> } %63, <2 x float> %61, 1
  ret { <2 x float>, <2 x float> } %64
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"*, i32) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect7MapRectERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink11ToBlendModeENS_22CompositeOperationTypeE(i32) local_unnamed_addr #5 {
  %2 = add i32 %0, -2
  %3 = icmp ult i32 %2, 6
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN5blink11ToBlendModeENS_22CompositeOperationTypeE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FEComposite17CreateImageFilterEv(%class.sk_sp* noalias nocapture sret, %"class.blink::FEComposite"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink11FEComposite25CreateImageFilterInternalEb(%class.sk_sp* sret %0, %"class.blink::FEComposite"* %1, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FEComposite25CreateImageFilterInternalEb(%class.sk_sp* noalias nocapture sret, %"class.blink::FEComposite"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca %class.sk_sp, align 8
  %10 = alloca %"class.absl::optional", align 4
  %11 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %1, i64 0, i32 0
  %14 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %13, i32 0) #9
  %15 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %1, i64 0, i32 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp ne i32 %18, 6
  call void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* nonnull sret %8, %"class.blink::FilterEffect"* %14, i32 %16, i1 zeroext %19) #9
  %20 = bitcast %class.sk_sp* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  %21 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %21, align 8
  %22 = call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %13, i32 1) #9
  %23 = load i32, i32* %15, align 4
  %24 = load i32, i32* %17, align 8
  %25 = icmp ne i32 %24, 6
  call void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* nonnull sret %9, %"class.blink::FilterEffect"* %22, i32 %23, i1 zeroext %25) #9
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %26) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon } } } }* @__const._ZN5blink11FEComposite25CreateImageFilterInternalEb.crop_rect, i64 0, i32 0, i32 0, i32 0, i32 0), i64 20, i1 false)
  call void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* nonnull sret %10, %"class.blink::FilterEffect"* %13) #9
  %27 = load i32, i32* %17, align 8
  switch i32 %27, label %83 [
    i32 6, label %28
    i32 7, label %82
    i32 2, label %78
    i32 3, label %79
    i32 4, label %80
    i32 5, label %81
  ]

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %1, i64 0, i32 2
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %1, i64 0, i32 3
  %32 = load float, float* %31, align 8
  %33 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %1, i64 0, i32 4
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %1, i64 0, i32 5
  %36 = load float, float* %35, align 8
  %37 = load i8, i8* %26, align 4, !range !2
  %38 = icmp eq i8 %37, 0
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = select i1 %38, %struct.SkRect* null, %struct.SkRect* %39
  %41 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = call i8* @_Znwm(i64 96) #10, !noalias !3
  %44 = bitcast i8* %43 to %"class.cc::ArithmeticPaintFilter"*
  %45 = bitcast %class.sk_sp* %9 to i64*
  %46 = load i64, i64* %45, align 8, !noalias !3
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %21, align 8, !noalias !3
  %47 = bitcast %class.sk_sp* %4 to i64*
  store i64 %46, i64* %47, align 8, !noalias !3
  %48 = bitcast %class.sk_sp* %8 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !3
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %12, align 8, !noalias !3
  %50 = bitcast %class.sk_sp* %5 to i64*
  store i64 %49, i64* %50, align 8, !noalias !3
  call void @_ZN2cc21ArithmeticPaintFilterC1Effffb5sk_spINS_11PaintFilterEES3_PK6SkRect(%"class.cc::ArithmeticPaintFilter"* nonnull %44, float %30, float %32, float %34, float %36, i1 zeroext %2, %class.sk_sp* nonnull %4, %class.sk_sp* nonnull %5, %struct.SkRect* %40) #9, !noalias !3
  %51 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %52 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %51, align 8, !noalias !3
  %53 = icmp eq %"class.cc::PaintFilter"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %28
  %55 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel, !noalias !3
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %"class.cc::PaintFilter"* %52 to %class.SkRefCntBase*
  %60 = bitcast %"class.cc::PaintFilter"* %52 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8, !noalias !3
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8, !noalias !3
  call void %63(%class.SkRefCntBase* nonnull %59) #9, !noalias !3
  br label %64

64:                                               ; preds = %58, %54, %28
  %65 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %66 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %65, align 8, !noalias !3
  %67 = icmp eq %"class.cc::PaintFilter"* %66, null
  br i1 %67, label %126, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %66, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel, !noalias !3
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %126

72:                                               ; preds = %68
  %73 = bitcast %"class.cc::PaintFilter"* %66 to %class.SkRefCntBase*
  %74 = bitcast %"class.cc::PaintFilter"* %66 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8, !noalias !3
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8, !noalias !3
  call void %77(%class.SkRefCntBase* nonnull %73) #9, !noalias !3
  br label %126

78:                                               ; preds = %3
  br label %83

79:                                               ; preds = %3
  br label %83

80:                                               ; preds = %3
  br label %83

81:                                               ; preds = %3
  br label %83

82:                                               ; preds = %3
  br label %83

83:                                               ; preds = %3, %78, %79, %80, %81, %82
  %84 = phi i32 [ 12, %82 ], [ 11, %81 ], [ 9, %80 ], [ 7, %79 ], [ 5, %78 ], [ 3, %3 ]
  %85 = load i8, i8* %26, align 4, !range !2
  %86 = icmp eq i8 %85, 0
  %87 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %88 = select i1 %86, %struct.SkRect* null, %struct.SkRect* %87
  %89 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89)
  %90 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90)
  %91 = call i8* @_Znwm(i64 80) #10, !noalias !6
  %92 = bitcast i8* %91 to %"class.cc::XfermodePaintFilter"*
  %93 = bitcast %class.sk_sp* %9 to i64*
  %94 = load i64, i64* %93, align 8, !noalias !6
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %21, align 8, !noalias !6
  %95 = bitcast %class.sk_sp* %6 to i64*
  store i64 %94, i64* %95, align 8, !noalias !6
  %96 = bitcast %class.sk_sp* %8 to i64*
  %97 = load i64, i64* %96, align 8, !noalias !6
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %12, align 8, !noalias !6
  %98 = bitcast %class.sk_sp* %7 to i64*
  store i64 %97, i64* %98, align 8, !noalias !6
  call void @_ZN2cc19XfermodePaintFilterC1E11SkBlendMode5sk_spINS_11PaintFilterEES4_PK6SkRect(%"class.cc::XfermodePaintFilter"* nonnull %92, i32 %84, %class.sk_sp* nonnull %6, %class.sk_sp* nonnull %7, %struct.SkRect* %88) #9, !noalias !6
  %99 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %100 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %99, align 8, !noalias !6
  %101 = icmp eq %"class.cc::PaintFilter"* %100, null
  br i1 %101, label %112, label %102

102:                                              ; preds = %83
  %103 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %100, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw add i32* %103, i32 -1 acq_rel, !noalias !6
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %112

106:                                              ; preds = %102
  %107 = bitcast %"class.cc::PaintFilter"* %100 to %class.SkRefCntBase*
  %108 = bitcast %"class.cc::PaintFilter"* %100 to void (%class.SkRefCntBase*)***
  %109 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %108, align 8, !noalias !6
  %110 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, i64 2
  %111 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, align 8, !noalias !6
  call void %111(%class.SkRefCntBase* nonnull %107) #9, !noalias !6
  br label %112

112:                                              ; preds = %106, %102, %83
  %113 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %114 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %113, align 8, !noalias !6
  %115 = icmp eq %"class.cc::PaintFilter"* %114, null
  br i1 %115, label %126, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %114, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 -1 acq_rel, !noalias !6
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %126

120:                                              ; preds = %116
  %121 = bitcast %"class.cc::PaintFilter"* %114 to %class.SkRefCntBase*
  %122 = bitcast %"class.cc::PaintFilter"* %114 to void (%class.SkRefCntBase*)***
  %123 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %122, align 8, !noalias !6
  %124 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %123, i64 2
  %125 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %124, align 8, !noalias !6
  call void %125(%class.SkRefCntBase* nonnull %121) #9, !noalias !6
  br label %126

126:                                              ; preds = %112, %116, %120, %64, %68, %72
  %127 = phi i8* [ %41, %72 ], [ %41, %68 ], [ %41, %64 ], [ %89, %120 ], [ %89, %116 ], [ %89, %112 ]
  %128 = phi i8* [ %42, %72 ], [ %42, %68 ], [ %42, %64 ], [ %90, %120 ], [ %90, %116 ], [ %90, %112 ]
  %129 = phi i8* [ %43, %72 ], [ %43, %68 ], [ %43, %64 ], [ %91, %120 ], [ %91, %116 ], [ %91, %112 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128)
  %130 = bitcast %class.sk_sp* %0 to i8**
  store i8* %129, i8** %130, align 8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %26) #9
  %131 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %21, align 8
  %132 = icmp eq %"class.cc::PaintFilter"* %131, null
  br i1 %132, label %143, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %131, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = atomicrmw add i32* %134, i32 -1 acq_rel
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %143

137:                                              ; preds = %133
  %138 = bitcast %"class.cc::PaintFilter"* %131 to %class.SkRefCntBase*
  %139 = bitcast %"class.cc::PaintFilter"* %131 to void (%class.SkRefCntBase*)***
  %140 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %139, align 8
  %141 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %140, i64 2
  %142 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %141, align 8
  call void %142(%class.SkRefCntBase* nonnull %138) #9
  br label %143

143:                                              ; preds = %126, %133, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  %144 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %12, align 8
  %145 = icmp eq %"class.cc::PaintFilter"* %144, null
  br i1 %145, label %156, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %144, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 -1 acq_rel
  %149 = icmp eq i32 %148, 1
  br i1 %149, label %150, label %156

150:                                              ; preds = %146
  %151 = bitcast %"class.cc::PaintFilter"* %144 to %class.SkRefCntBase*
  %152 = bitcast %"class.cc::PaintFilter"* %144 to void (%class.SkRefCntBase*)***
  %153 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %152, align 8
  %154 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, i64 2
  %155 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %154, align 8
  call void %155(%class.SkRefCntBase* nonnull %151) #9
  br label %156

156:                                              ; preds = %143, %146, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FEComposite34CreateImageFilterWithoutValidationEv(%class.sk_sp* noalias nocapture sret, %"class.blink::FEComposite"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink11FEComposite25CreateImageFilterInternalEb(%class.sk_sp* sret %0, %"class.blink::FEComposite"* %1, i1 zeroext false)
  ret void
}

declare void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* sret, %"class.blink::FilterEffect"*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink11FEComposite36MayProduceInvalidPreMultipliedPixelsEv(%"class.blink::FEComposite"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 6
  ret i1 %4
}

declare void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* sret, %"class.blink::FilterEffect"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink11FEComposite22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FEComposite"*, %"class.WTF::TextStream"* returned dereferenceable(48), i32) unnamed_addr #0 align 2 {
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %1, i32 %2) #9
  %4 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #9
  %5 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 0
  %6 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"* %5, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 0) #9
  %7 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #9
  %8 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp ult i32 %9, 8
  br i1 %10, label %11, label %16

11:                                               ; preds = %3
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds [8 x i8*], [8 x i8*]* @switch.table._ZNK5blink11FEComposite22ExternalRepresentationERN3WTF10TextStreamEi, i64 0, i64 %12
  %14 = load i8*, i8** %13, align 8
  %15 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %7, i8* %14) #9
  br label %16

16:                                               ; preds = %3, %11
  %17 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #9
  %18 = load i32, i32* %8, align 8
  %19 = icmp eq i32 %18, 6
  br i1 %19, label %20, label %38

20:                                               ; preds = %16
  %21 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #9
  %22 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 2
  %23 = load float, float* %22, align 4
  %24 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %21, float %23) #9
  %25 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)) #9
  %26 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 3
  %27 = load float, float* %26, align 8
  %28 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %25, float %27) #9
  %29 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %28, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)) #9
  %30 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 4
  %31 = load float, float* %30, align 4
  %32 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %29, float %31) #9
  %33 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #9
  %34 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 5
  %35 = load float, float* %34, align 8
  %36 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %33, float %35) #9
  %37 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %38

38:                                               ; preds = %20, %16
  %39 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #9
  %40 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %5, i32 0) #9
  %41 = add nsw i32 %2, 1
  %42 = bitcast %"class.blink::FilterEffect"* %40 to %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)***
  %43 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)**, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %43, i64 6
  %45 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %44, align 8
  %46 = tail call dereferenceable(48) %"class.WTF::TextStream"* %45(%"class.blink::FilterEffect"* %40, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 %41) #9
  %47 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %5, i32 1) #9
  %48 = bitcast %"class.blink::FilterEffect"* %47 to %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)***
  %49 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)**, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %49, i64 6
  %51 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %50, align 8
  %52 = tail call dereferenceable(48) %"class.WTF::TextStream"* %51(%"class.blink::FilterEffect"* %47, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 %41) #9
  ret %"class.WTF::TextStream"* %1
}

declare void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48), i32) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"*, i8*) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"*, %"class.WTF::TextStream"* dereferenceable(48), i32) unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"*, float) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11FECompositeD0Ev(%"class.blink::FEComposite"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FEComposite", %"class.blink::FEComposite"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"* %2) #9
  ret void
}

declare void @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE(%"class.blink::FilterEffect"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE(%"class.blink::FilterEffect"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 4
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect9MapEffectERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN2cc21ArithmeticPaintFilterC1Effffb5sk_spINS_11PaintFilterEES3_PK6SkRect(%"class.cc::ArithmeticPaintFilter"*, float, float, float, float, i1 zeroext, %class.sk_sp*, %class.sk_sp*, %struct.SkRect*) unnamed_addr #1

declare void @_ZN2cc19XfermodePaintFilterC1E11SkBlendMode5sk_spINS_11PaintFilterEES4_PK6SkRect(%"class.cc::XfermodePaintFilter"*, i32, %class.sk_sp*, %class.sk_sp*, %struct.SkRect*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_Z10sk_make_spIN2cc21ArithmeticPaintFilterEJffffRb5sk_spINS0_11PaintFilterEES5_P6SkRectEES3_IT_EDpOT0_: argument 0"}
!5 = distinct !{!5, !"_Z10sk_make_spIN2cc21ArithmeticPaintFilterEJffffRb5sk_spINS0_11PaintFilterEES5_P6SkRectEES3_IT_EDpOT0_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z10sk_make_spIN2cc19XfermodePaintFilterEJ11SkBlendMode5sk_spINS0_11PaintFilterEES5_P6SkRectEES3_IT_EDpOT0_: argument 0"}
!8 = distinct !{!8, !"_Z10sk_make_spIN2cc19XfermodePaintFilterEJ11SkBlendMode5sk_spINS0_11PaintFilterEES5_P6SkRectEES3_IT_EDpOT0_"}
