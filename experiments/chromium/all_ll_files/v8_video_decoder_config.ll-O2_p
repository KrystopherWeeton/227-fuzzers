; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_video_decoder_config.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_video_decoder_config.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.89", i32, [4 x i8], %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.241", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.259", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.266", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.205", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__cxx_atomic_impl.128" }
%"struct.std::__1::__cxx_atomic_impl.128" = type { %"struct.std::__1::__cxx_atomic_base_impl.129" }
%"struct.std::__1::__cxx_atomic_base_impl.129" = type { i64 }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::Worklist.136"* }
%"class.blink::Worklist.136" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::Worklist.143"* }
%"class.blink::Worklist.143" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::Worklist.150"* }
%"class.blink::Worklist.150" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::Worklist.157"* }
%"class.blink::Worklist.157" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::Worklist.164"* }
%"class.blink::Worklist.164" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::Worklist.171"* }
%"class.blink::Worklist.171" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::Worklist.178"* }
%"class.blink::Worklist.178" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.185", %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.197", %"class.std::__1::__compressed_pair.199", [4 x i8] }>
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187", %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { i64 }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { float }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.208", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.217" }
%"class.WTF::Vector.217" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219" }
%"class.WTF::VectorBufferBase.219" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.233" }
%"class.WTF::VectorBuffer.233" = type { %"class.WTF::VectorBufferBase.234" }
%"class.WTF::VectorBufferBase.234" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.247" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.136"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.143"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.150"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.157"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.164"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.299" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.265 }
%class.scoped_refptr.265 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.266" = type { %"struct.std::__1::__atomic_base.267" }
%"struct.std::__1::__atomic_base.267" = type { %"struct.std::__1::__cxx_atomic_impl.268" }
%"struct.std::__1::__cxx_atomic_impl.268" = type { %"struct.std::__1::__cxx_atomic_base_impl.269" }
%"struct.std::__1::__cxx_atomic_base_impl.269" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::VideoDecoderConfig" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.WTF::String", i32, i32, i32, i32, i32, i32, %"class.blink::ArrayBufferOrArrayBufferView", i32, i32, %"class.WTF::String", i8, %"class.blink::Member.7" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ArrayBufferOrArrayBufferView" = type { i32, %"class.blink::Member", %"class.blink::NotShared" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::NotShared" = type { %"class.blink::Member.3" }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::DOMArrayBufferView"* }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.5" }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::VideoFrameRegion"* }
%"class.blink::VideoFrameRegion" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i32, i32, i32, i32, [4 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.9" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.9" = type { %"class.v8::TracedReference.10" }
%"class.v8::TracedReference.10" = type { %"class.v8::BasicTracedReference.11" }
%"class.v8::BasicTracedReference.11" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.36", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.83", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.270", %"class.std::__1::unique_ptr.275", %"class.blink::Persistent.281", %"class.blink::Persistent.285", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.20", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", i32, i32 }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.36" = type { %"class.WTF::HashTable.37" }
%"class.WTF::HashTable.37" = type <{ %"struct.WTF::KeyValuePair.40"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.40" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.49", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.44", i8* }
%"class.WTF::HashMap.44" = type { %"class.WTF::HashTable.45" }
%"class.WTF::HashTable.45" = type <{ %"struct.WTF::KeyValuePair.48"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.48" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.49" = type { %"class.v8::PersistentValueMapBase.50" }
%"class.v8::PersistentValueMapBase.50" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.51", i8* }
%"class.WTF::HashMap.51" = type { %"class.WTF::HashTable.52" }
%"class.WTF::HashTable.52" = type <{ %"struct.WTF::KeyValuePair.55"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.55" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.56" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.67", %"class.WTF::Vector.73", i8, i32 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.306, %"class.blink::Member.320", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.306 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.307", i32, i32, %"class.blink::Persistent.309" }
%"class.WTF::RefCounted.307" = type { %"class.base::RefCounted.308" }
%"class.base::RefCounted.308" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.309" = type { %"class.blink::PersistentBase.310" }
%"class.blink::PersistentBase.310" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.315" }
%"class.WTF::HashMap.315" = type { %"class.WTF::HashTable.316" }
%"class.WTF::HashTable.316" = type <{ %"struct.WTF::KeyValuePair.318"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.318" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.270" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272" }
%"class.WTF::VectorBufferBase.272" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.281" = type { %"class.blink::PersistentBase.282" }
%"class.blink::PersistentBase.282" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.285" = type { %"class.blink::PersistentBase.286" }
%"class.blink::PersistentBase.286" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.291" }
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"struct.std::__1::pair.294"*, i32, i32 }
%"struct.std::__1::pair.294" = type { %"class.blink::UntracedMember", %"class.blink::Member.296" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.296" = type { %"class.blink::MemberBase.297" }
%"class.blink::MemberBase.297" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.322" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::String" = type { i8 }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Boolean" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Integer" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [35 x i8] c"Missing required member(s): codec.\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"required member codec is undefined.\00", align 1
@_ZZN5blink20V8VideoDecoderConfig6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoDecoderConfigERNS_14ExceptionStateEE12kValidValues = internal constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0)], align 16
@.str.3 = private unnamed_addr constant [6 x i8] c"allow\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"deny\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"HardwarePreference\00", align 1
@_ZZN5blinkL31eternalV8VideoDecoderConfigKeysEPN2v87IsolateEE5kKeys = internal constant [13 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i32 0, i32 0)], align 16
@.str.7 = private unnamed_addr constant [6 x i8] c"codec\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"codedHeight\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"codedWidth\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"cropHeight\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"cropLeft\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"cropTop\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"cropWidth\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"description\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"displayHeight\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"displayWidth\00", align 1
@.str.17 = private unnamed_addr constant [21 x i8] c"hardwareAcceleration\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"optimizeForLatency\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"visibleRegion\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 13, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZZN5blinkL31eternalV8VideoDecoderConfigKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.21 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.22 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20V8VideoDecoderConfig6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoDecoderConfigERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::VideoDecoderConfig"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = alloca %"class.blink::V8StringResource", align 8
  %9 = alloca %"class.blink::ArrayBufferOrArrayBufferView", align 8
  %10 = alloca %"class.blink::V8StringResource", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = icmp eq %"class.v8::Value"* %1, null
  br i1 %13, label %35, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.v8::Value"* %1 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 3
  %18 = icmp eq i64 %17, 1
  br i1 %18, label %19, label %36

19:                                               ; preds = %14
  %20 = add i64 %16, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = and i64 %16, -4294967296
  %24 = zext i32 %22 to i64
  %25 = or i64 %23, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load i16, i16* %27, align 2
  %29 = icmp eq i16 %28, 67
  br i1 %29, label %30, label %36

30:                                               ; preds = %19
  %31 = add i64 %16, 23
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = ashr i32 %33, 1
  switch i32 %34, label %36 [
    i32 5, label %35
    i32 3, label %35
  ]

35:                                               ; preds = %30, %30, %4
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #7
  br label %1024

36:                                               ; preds = %30, %19, %14
  %37 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %37, label %39, label %38

38:                                               ; preds = %36
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %1024

39:                                               ; preds = %36
  %40 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %41 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to %"class.blink::V8PerIsolateData"**
  %44 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %43, align 8
  %45 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %44, i8* bitcast ([13 x i8*]* @_ZZN5blinkL31eternalV8VideoDecoderConfigKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.322"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.322"*)) #7
  %46 = extractvalue { i64, %"class.v8::Eternal"* } %45, 1
  %47 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %47) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %0) #7
  %48 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %49 = bitcast %"class.v8::Eternal"* %46 to %"class.v8::Value"**
  %50 = load %"class.v8::Value"*, %"class.v8::Value"** %49, align 8
  %51 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %50) #7
  %52 = icmp eq %"class.v8::Value"* %51, null
  br i1 %52, label %53, label %59

53:                                               ; preds = %39
  %54 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %55 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %56 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %56, i64 5
  %58 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %57, align 8
  call void %58(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %54) #7
  br label %1023

59:                                               ; preds = %39
  %60 = bitcast %"class.v8::Value"* %51 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 3
  %63 = icmp eq i64 %62, 1
  br i1 %63, label %64, label %82

64:                                               ; preds = %59
  %65 = add i64 %61, -1
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = and i64 %61, -4294967296
  %69 = zext i32 %67 to i64
  %70 = or i64 %68, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load i16, i16* %72, align 2
  %74 = icmp eq i16 %73, 67
  br i1 %74, label %75, label %82

75:                                               ; preds = %64
  %76 = add i64 %61, 23
  %77 = inttoptr i64 %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, -2
  %80 = icmp eq i32 %79, 10
  br i1 %80, label %81, label %82

81:                                               ; preds = %75
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %1023

82:                                               ; preds = %64, %59, %75
  %83 = bitcast %"class.blink::V8StringResource"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %83) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 152, i1 false)
  %84 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %51, %"class.v8::Value"** %84, align 8
  %85 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 1
  store i32 0, i32* %85, align 8
  %86 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  %87 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1
  %88 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %8) #7
  br i1 %89, label %100, label %90

90:                                               ; preds = %82
  %91 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %92 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %92) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %91) #7
  %93 = load %"class.v8::Value"*, %"class.v8::Value"** %84, align 8
  %94 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %91) #7
  %95 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %93, %"class.v8::Context"* %94) #7
  %96 = ptrtoint %"class.v8::String"* %95 to i64
  %97 = bitcast %"class.blink::V8StringResource"* %8 to i64*
  store i64 %96, i64* %97, align 8
  %98 = icmp eq %"class.v8::String"* %95, null
  br i1 %98, label %215, label %99

99:                                               ; preds = %90
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %92) #7
  br label %100

100:                                              ; preds = %82, %99
  %101 = load %"class.v8::Value"*, %"class.v8::Value"** %84, align 8
  %102 = icmp eq %"class.v8::Value"* %101, null
  br i1 %102, label %103, label %127, !prof !2

103:                                              ; preds = %100
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %106, label %108

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 10
  br label %152

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #7
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %113
  call void @llvm.trap() #7
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %108, %123
  %126 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 10
  br label %133

127:                                              ; preds = %100
  %128 = bitcast %"class.v8::Value"* %101 to %"class.v8::String"*
  %129 = load i32, i32* %85, align 8
  %130 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %128, i32 %129) #7
  %131 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 10
  %132 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %132, label %152, label %133

133:                                              ; preds = %125, %127
  %134 = phi %"class.WTF::String"* [ %126, %125 ], [ %131, %127 ]
  %135 = phi %"class.WTF::StringImpl"* [ %104, %125 ], [ %130, %127 ]
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i33
  %144 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %143, i33 1) #7
  %145 = extractvalue { i33, i1 } %144, 1
  %146 = extractvalue { i33, i1 } %144, 0
  %147 = icmp slt i33 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %149, label %150, !prof !2

149:                                              ; preds = %140
  call void @llvm.trap() #7
  unreachable

150:                                              ; preds = %140
  %151 = trunc i33 %146 to i32
  store i32 %151, i32* %141, align 4
  br label %152

152:                                              ; preds = %106, %150, %133, %127
  %153 = phi i1 [ false, %150 ], [ false, %133 ], [ true, %127 ], [ true, %106 ]
  %154 = phi %"class.WTF::String"* [ %134, %150 ], [ %134, %133 ], [ %131, %127 ], [ %107, %106 ]
  %155 = phi %"class.WTF::StringImpl"* [ %135, %150 ], [ %135, %133 ], [ null, %127 ], [ null, %106 ]
  %156 = ptrtoint %"class.WTF::StringImpl"* %155 to i64
  %157 = bitcast %"class.WTF::String"* %154 to i64*
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %154, i64 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  store i64 %156, i64* %157, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %152
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #7
  br label %174

174:                                              ; preds = %152, %170, %173
  br i1 %153, label %188, label %175

175:                                              ; preds = %174
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  br i1 %179, label %182, label %184

182:                                              ; preds = %175
  %183 = add i32 %181, -1
  store i32 %183, i32* %180, align 4
  br label %184

184:                                              ; preds = %182, %175
  %185 = phi i32 [ %183, %182 ], [ %181, %175 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #7
  br label %188

188:                                              ; preds = %174, %184, %187
  %189 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %190 = load i8*, i8** %189, align 8
  store i8* null, i8** %189, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %193, label %192

192:                                              ; preds = %188
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %190) #7
  br label %193

193:                                              ; preds = %192, %188
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %209, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  br i1 %200, label %203, label %205

203:                                              ; preds = %196
  %204 = add i32 %202, -1
  store i32 %204, i32* %201, align 4
  br label %205

205:                                              ; preds = %203, %196
  %206 = phi i32 [ %204, %203 ], [ %202, %196 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %194) #7
  br label %209

209:                                              ; preds = %193, %205, %208
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %83) #7
  %210 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 1, i32 0
  %211 = bitcast %"class.v8::Name"** %210 to %"class.v8::Value"**
  %212 = load %"class.v8::Value"*, %"class.v8::Value"** %211, align 8
  %213 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %212) #7
  %214 = icmp eq %"class.v8::Value"* %213, null
  br i1 %214, label %242, label %248

215:                                              ; preds = %90
  %216 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %217 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %218 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %218, i64 5
  %220 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %219, align 8
  call void %220(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %216) #7
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %92) #7
  %221 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %222 = load i8*, i8** %221, align 8
  store i8* null, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %225, label %224

224:                                              ; preds = %215
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %222) #7
  br label %225

225:                                              ; preds = %224, %215
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %226) #7
  br label %241

241:                                              ; preds = %225, %237, %240
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %83) #7
  br label %1023

242:                                              ; preds = %209
  %243 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %244 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %245 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %244, align 8
  %246 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %245, i64 5
  %247 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %246, align 8
  call void %247(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %243) #7
  br label %1023

248:                                              ; preds = %209
  %249 = bitcast %"class.v8::Value"* %213 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = and i64 %250, 3
  %252 = icmp eq i64 %251, 1
  br i1 %252, label %253, label %270

253:                                              ; preds = %248
  %254 = add i64 %250, -1
  %255 = inttoptr i64 %254 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = and i64 %250, -4294967296
  %258 = zext i32 %256 to i64
  %259 = or i64 %257, %258
  %260 = add i64 %259, 7
  %261 = inttoptr i64 %260 to i16*
  %262 = load i16, i16* %261, align 2
  %263 = icmp eq i16 %262, 67
  br i1 %263, label %264, label %270

264:                                              ; preds = %253
  %265 = add i64 %250, 23
  %266 = inttoptr i64 %265 to i32*
  %267 = load i32, i32* %266, align 4
  %268 = and i32 %267, -2
  %269 = icmp eq i32 %268, 10
  br i1 %269, label %286, label %270

270:                                              ; preds = %253, %248, %264
  %271 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %213) #7
  br i1 %271, label %272, label %275, !prof !3

272:                                              ; preds = %270
  %273 = bitcast %"class.v8::Value"* %213 to %"class.v8::Uint32"*
  %274 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %273) #7
  br label %278

275:                                              ; preds = %270
  %276 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %213) #7
  %277 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %213, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %278

278:                                              ; preds = %272, %275
  %279 = phi i32 [ %274, %272 ], [ %277, %275 ]
  %280 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %281 = load i32, i32* %280, align 8
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %1023

283:                                              ; preds = %278
  %284 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 11
  store i32 %279, i32* %284, align 8
  %285 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 1
  store i8 1, i8* %285, align 8
  br label %286

286:                                              ; preds = %283, %264
  %287 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 2, i32 0
  %288 = bitcast %"class.v8::Name"** %287 to %"class.v8::Value"**
  %289 = load %"class.v8::Value"*, %"class.v8::Value"** %288, align 8
  %290 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %289) #7
  %291 = icmp eq %"class.v8::Value"* %290, null
  br i1 %291, label %292, label %298

292:                                              ; preds = %286
  %293 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %294 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %295 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %294, align 8
  %296 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %295, i64 5
  %297 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %296, align 8
  call void %297(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %293) #7
  br label %1023

298:                                              ; preds = %286
  %299 = bitcast %"class.v8::Value"* %290 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = and i64 %300, 3
  %302 = icmp eq i64 %301, 1
  br i1 %302, label %303, label %320

303:                                              ; preds = %298
  %304 = add i64 %300, -1
  %305 = inttoptr i64 %304 to i32*
  %306 = load i32, i32* %305, align 4
  %307 = and i64 %300, -4294967296
  %308 = zext i32 %306 to i64
  %309 = or i64 %307, %308
  %310 = add i64 %309, 7
  %311 = inttoptr i64 %310 to i16*
  %312 = load i16, i16* %311, align 2
  %313 = icmp eq i16 %312, 67
  br i1 %313, label %314, label %320

314:                                              ; preds = %303
  %315 = add i64 %300, 23
  %316 = inttoptr i64 %315 to i32*
  %317 = load i32, i32* %316, align 4
  %318 = and i32 %317, -2
  %319 = icmp eq i32 %318, 10
  br i1 %319, label %336, label %320

320:                                              ; preds = %303, %298, %314
  %321 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %290) #7
  br i1 %321, label %322, label %325, !prof !3

322:                                              ; preds = %320
  %323 = bitcast %"class.v8::Value"* %290 to %"class.v8::Uint32"*
  %324 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %323) #7
  br label %328

325:                                              ; preds = %320
  %326 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %290) #7
  %327 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %290, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %328

328:                                              ; preds = %322, %325
  %329 = phi i32 [ %324, %322 ], [ %327, %325 ]
  %330 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %331 = load i32, i32* %330, align 8
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %1023

333:                                              ; preds = %328
  %334 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 12
  store i32 %329, i32* %334, align 4
  %335 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 2
  store i8 1, i8* %335, align 1
  br label %336

336:                                              ; preds = %333, %314
  %337 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 3, i32 0
  %338 = bitcast %"class.v8::Name"** %337 to %"class.v8::Value"**
  %339 = load %"class.v8::Value"*, %"class.v8::Value"** %338, align 8
  %340 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %339) #7
  %341 = icmp eq %"class.v8::Value"* %340, null
  br i1 %341, label %342, label %348

342:                                              ; preds = %336
  %343 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %344 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %345 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %344, align 8
  %346 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %345, i64 5
  %347 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %346, align 8
  call void %347(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %343) #7
  br label %1023

348:                                              ; preds = %336
  %349 = bitcast %"class.v8::Value"* %340 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = and i64 %350, 3
  %352 = icmp eq i64 %351, 1
  br i1 %352, label %353, label %370

353:                                              ; preds = %348
  %354 = add i64 %350, -1
  %355 = inttoptr i64 %354 to i32*
  %356 = load i32, i32* %355, align 4
  %357 = and i64 %350, -4294967296
  %358 = zext i32 %356 to i64
  %359 = or i64 %357, %358
  %360 = add i64 %359, 7
  %361 = inttoptr i64 %360 to i16*
  %362 = load i16, i16* %361, align 2
  %363 = icmp eq i16 %362, 67
  br i1 %363, label %364, label %370

364:                                              ; preds = %353
  %365 = add i64 %350, 23
  %366 = inttoptr i64 %365 to i32*
  %367 = load i32, i32* %366, align 4
  %368 = and i32 %367, -2
  %369 = icmp eq i32 %368, 10
  br i1 %369, label %386, label %370

370:                                              ; preds = %353, %348, %364
  %371 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %340) #7
  br i1 %371, label %372, label %375, !prof !3

372:                                              ; preds = %370
  %373 = bitcast %"class.v8::Value"* %340 to %"class.v8::Uint32"*
  %374 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %373) #7
  br label %378

375:                                              ; preds = %370
  %376 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %340) #7
  %377 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %340, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %378

378:                                              ; preds = %372, %375
  %379 = phi i32 [ %374, %372 ], [ %377, %375 ]
  %380 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %381 = load i32, i32* %380, align 8
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %1023

383:                                              ; preds = %378
  %384 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 13
  store i32 %379, i32* %384, align 8
  %385 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 3
  store i8 1, i8* %385, align 2
  br label %386

386:                                              ; preds = %383, %364
  %387 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 4, i32 0
  %388 = bitcast %"class.v8::Name"** %387 to %"class.v8::Value"**
  %389 = load %"class.v8::Value"*, %"class.v8::Value"** %388, align 8
  %390 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %389) #7
  %391 = icmp eq %"class.v8::Value"* %390, null
  br i1 %391, label %392, label %398

392:                                              ; preds = %386
  %393 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %394 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %395 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %394, align 8
  %396 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %395, i64 5
  %397 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %396, align 8
  call void %397(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %393) #7
  br label %1023

398:                                              ; preds = %386
  %399 = bitcast %"class.v8::Value"* %390 to i64*
  %400 = load i64, i64* %399, align 8
  %401 = and i64 %400, 3
  %402 = icmp eq i64 %401, 1
  br i1 %402, label %403, label %420

403:                                              ; preds = %398
  %404 = add i64 %400, -1
  %405 = inttoptr i64 %404 to i32*
  %406 = load i32, i32* %405, align 4
  %407 = and i64 %400, -4294967296
  %408 = zext i32 %406 to i64
  %409 = or i64 %407, %408
  %410 = add i64 %409, 7
  %411 = inttoptr i64 %410 to i16*
  %412 = load i16, i16* %411, align 2
  %413 = icmp eq i16 %412, 67
  br i1 %413, label %414, label %420

414:                                              ; preds = %403
  %415 = add i64 %400, 23
  %416 = inttoptr i64 %415 to i32*
  %417 = load i32, i32* %416, align 4
  %418 = and i32 %417, -2
  %419 = icmp eq i32 %418, 10
  br i1 %419, label %436, label %420

420:                                              ; preds = %403, %398, %414
  %421 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %390) #7
  br i1 %421, label %422, label %425, !prof !3

422:                                              ; preds = %420
  %423 = bitcast %"class.v8::Value"* %390 to %"class.v8::Uint32"*
  %424 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %423) #7
  br label %428

425:                                              ; preds = %420
  %426 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %390) #7
  %427 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %390, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %428

428:                                              ; preds = %422, %425
  %429 = phi i32 [ %424, %422 ], [ %427, %425 ]
  %430 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %431 = load i32, i32* %430, align 8
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %1023

433:                                              ; preds = %428
  %434 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 14
  store i32 %429, i32* %434, align 4
  %435 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 4
  store i8 1, i8* %435, align 1
  br label %436

436:                                              ; preds = %433, %414
  %437 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 5, i32 0
  %438 = bitcast %"class.v8::Name"** %437 to %"class.v8::Value"**
  %439 = load %"class.v8::Value"*, %"class.v8::Value"** %438, align 8
  %440 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %439) #7
  %441 = icmp eq %"class.v8::Value"* %440, null
  br i1 %441, label %442, label %448

442:                                              ; preds = %436
  %443 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %444 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %445 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %444, align 8
  %446 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %445, i64 5
  %447 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %446, align 8
  call void %447(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %443) #7
  br label %1023

448:                                              ; preds = %436
  %449 = bitcast %"class.v8::Value"* %440 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = and i64 %450, 3
  %452 = icmp eq i64 %451, 1
  br i1 %452, label %453, label %470

453:                                              ; preds = %448
  %454 = add i64 %450, -1
  %455 = inttoptr i64 %454 to i32*
  %456 = load i32, i32* %455, align 4
  %457 = and i64 %450, -4294967296
  %458 = zext i32 %456 to i64
  %459 = or i64 %457, %458
  %460 = add i64 %459, 7
  %461 = inttoptr i64 %460 to i16*
  %462 = load i16, i16* %461, align 2
  %463 = icmp eq i16 %462, 67
  br i1 %463, label %464, label %470

464:                                              ; preds = %453
  %465 = add i64 %450, 23
  %466 = inttoptr i64 %465 to i32*
  %467 = load i32, i32* %466, align 4
  %468 = and i32 %467, -2
  %469 = icmp eq i32 %468, 10
  br i1 %469, label %486, label %470

470:                                              ; preds = %453, %448, %464
  %471 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %440) #7
  br i1 %471, label %472, label %475, !prof !3

472:                                              ; preds = %470
  %473 = bitcast %"class.v8::Value"* %440 to %"class.v8::Uint32"*
  %474 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %473) #7
  br label %478

475:                                              ; preds = %470
  %476 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %440) #7
  %477 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %440, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %478

478:                                              ; preds = %472, %475
  %479 = phi i32 [ %474, %472 ], [ %477, %475 ]
  %480 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %481 = load i32, i32* %480, align 8
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %1023

483:                                              ; preds = %478
  %484 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 15
  store i32 %479, i32* %484, align 8
  %485 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 5
  store i8 1, i8* %485, align 4
  br label %486

486:                                              ; preds = %483, %464
  %487 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 6, i32 0
  %488 = bitcast %"class.v8::Name"** %487 to %"class.v8::Value"**
  %489 = load %"class.v8::Value"*, %"class.v8::Value"** %488, align 8
  %490 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %489) #7
  %491 = icmp eq %"class.v8::Value"* %490, null
  br i1 %491, label %492, label %498

492:                                              ; preds = %486
  %493 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %494 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %495 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %494, align 8
  %496 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %495, i64 5
  %497 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %496, align 8
  call void %497(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %493) #7
  br label %1023

498:                                              ; preds = %486
  %499 = bitcast %"class.v8::Value"* %490 to i64*
  %500 = load i64, i64* %499, align 8
  %501 = and i64 %500, 3
  %502 = icmp eq i64 %501, 1
  br i1 %502, label %503, label %520

503:                                              ; preds = %498
  %504 = add i64 %500, -1
  %505 = inttoptr i64 %504 to i32*
  %506 = load i32, i32* %505, align 4
  %507 = and i64 %500, -4294967296
  %508 = zext i32 %506 to i64
  %509 = or i64 %507, %508
  %510 = add i64 %509, 7
  %511 = inttoptr i64 %510 to i16*
  %512 = load i16, i16* %511, align 2
  %513 = icmp eq i16 %512, 67
  br i1 %513, label %514, label %520

514:                                              ; preds = %503
  %515 = add i64 %500, 23
  %516 = inttoptr i64 %515 to i32*
  %517 = load i32, i32* %516, align 4
  %518 = and i32 %517, -2
  %519 = icmp eq i32 %518, 10
  br i1 %519, label %536, label %520

520:                                              ; preds = %503, %498, %514
  %521 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %490) #7
  br i1 %521, label %522, label %525, !prof !3

522:                                              ; preds = %520
  %523 = bitcast %"class.v8::Value"* %490 to %"class.v8::Uint32"*
  %524 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %523) #7
  br label %528

525:                                              ; preds = %520
  %526 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %490) #7
  %527 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %490, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %528

528:                                              ; preds = %522, %525
  %529 = phi i32 [ %524, %522 ], [ %527, %525 ]
  %530 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %531 = load i32, i32* %530, align 8
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %1023

533:                                              ; preds = %528
  %534 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 16
  store i32 %529, i32* %534, align 4
  %535 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 6
  store i8 1, i8* %535, align 1
  br label %536

536:                                              ; preds = %533, %514
  %537 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 7, i32 0
  %538 = bitcast %"class.v8::Name"** %537 to %"class.v8::Value"**
  %539 = load %"class.v8::Value"*, %"class.v8::Value"** %538, align 8
  %540 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %539) #7
  %541 = icmp eq %"class.v8::Value"* %540, null
  br i1 %541, label %542, label %548

542:                                              ; preds = %536
  %543 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %544 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %545 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %544, align 8
  %546 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %545, i64 5
  %547 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %546, align 8
  call void %547(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %543) #7
  br label %1023

548:                                              ; preds = %536
  %549 = bitcast %"class.v8::Value"* %540 to i64*
  %550 = load i64, i64* %549, align 8
  %551 = and i64 %550, 3
  %552 = icmp eq i64 %551, 1
  br i1 %552, label %553, label %570

553:                                              ; preds = %548
  %554 = add i64 %550, -1
  %555 = inttoptr i64 %554 to i32*
  %556 = load i32, i32* %555, align 4
  %557 = and i64 %550, -4294967296
  %558 = zext i32 %556 to i64
  %559 = or i64 %557, %558
  %560 = add i64 %559, 7
  %561 = inttoptr i64 %560 to i16*
  %562 = load i16, i16* %561, align 2
  %563 = icmp eq i16 %562, 67
  br i1 %563, label %564, label %570

564:                                              ; preds = %553
  %565 = add i64 %550, 23
  %566 = inttoptr i64 %565 to i32*
  %567 = load i32, i32* %566, align 4
  %568 = and i32 %567, -2
  %569 = icmp eq i32 %568, 10
  br i1 %569, label %577, label %570

570:                                              ; preds = %553, %548, %564
  %571 = bitcast %"class.blink::ArrayBufferOrArrayBufferView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %571) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %571, i8 -86, i64 24, i1 false)
  call void @_ZN5blink28ArrayBufferOrArrayBufferViewC1Ev(%"class.blink::ArrayBufferOrArrayBufferView"* nonnull %9) #7
  call void @_ZN5blink30V8ArrayBufferOrArrayBufferView6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_28ArrayBufferOrArrayBufferViewENS_23UnionTypeConversionModeERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %540, %"class.blink::ArrayBufferOrArrayBufferView"* nonnull dereferenceable(24) %9, i32 1, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %572 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %573 = load i32, i32* %572, align 8
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %575, label %576

575:                                              ; preds = %570
  call void @_ZN5blink18VideoDecoderConfig14setDescriptionERKNS_28ArrayBufferOrArrayBufferViewE(%"class.blink::VideoDecoderConfig"* %2, %"class.blink::ArrayBufferOrArrayBufferView"* nonnull dereferenceable(24) %9) #7
  call void @_ZN5blink28ArrayBufferOrArrayBufferViewD1Ev(%"class.blink::ArrayBufferOrArrayBufferView"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %571) #7
  br label %577

576:                                              ; preds = %570
  call void @_ZN5blink28ArrayBufferOrArrayBufferViewD1Ev(%"class.blink::ArrayBufferOrArrayBufferView"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %571) #7
  br label %1023

577:                                              ; preds = %575, %564
  %578 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 8, i32 0
  %579 = bitcast %"class.v8::Name"** %578 to %"class.v8::Value"**
  %580 = load %"class.v8::Value"*, %"class.v8::Value"** %579, align 8
  %581 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %580) #7
  %582 = icmp eq %"class.v8::Value"* %581, null
  br i1 %582, label %583, label %589

583:                                              ; preds = %577
  %584 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %585 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %586 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %585, align 8
  %587 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %586, i64 5
  %588 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %587, align 8
  call void %588(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %584) #7
  br label %1023

589:                                              ; preds = %577
  %590 = bitcast %"class.v8::Value"* %581 to i64*
  %591 = load i64, i64* %590, align 8
  %592 = and i64 %591, 3
  %593 = icmp eq i64 %592, 1
  br i1 %593, label %594, label %611

594:                                              ; preds = %589
  %595 = add i64 %591, -1
  %596 = inttoptr i64 %595 to i32*
  %597 = load i32, i32* %596, align 4
  %598 = and i64 %591, -4294967296
  %599 = zext i32 %597 to i64
  %600 = or i64 %598, %599
  %601 = add i64 %600, 7
  %602 = inttoptr i64 %601 to i16*
  %603 = load i16, i16* %602, align 2
  %604 = icmp eq i16 %603, 67
  br i1 %604, label %605, label %611

605:                                              ; preds = %594
  %606 = add i64 %591, 23
  %607 = inttoptr i64 %606 to i32*
  %608 = load i32, i32* %607, align 4
  %609 = and i32 %608, -2
  %610 = icmp eq i32 %609, 10
  br i1 %610, label %627, label %611

611:                                              ; preds = %594, %589, %605
  %612 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %581) #7
  br i1 %612, label %613, label %616, !prof !3

613:                                              ; preds = %611
  %614 = bitcast %"class.v8::Value"* %581 to %"class.v8::Uint32"*
  %615 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %614) #7
  br label %619

616:                                              ; preds = %611
  %617 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %581) #7
  %618 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %581, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %619

619:                                              ; preds = %613, %616
  %620 = phi i32 [ %615, %613 ], [ %618, %616 ]
  %621 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %622 = load i32, i32* %621, align 8
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %624, label %1023

624:                                              ; preds = %619
  %625 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 18
  store i32 %620, i32* %625, align 8
  %626 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 7
  store i8 1, i8* %626, align 2
  br label %627

627:                                              ; preds = %624, %605
  %628 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 9, i32 0
  %629 = bitcast %"class.v8::Name"** %628 to %"class.v8::Value"**
  %630 = load %"class.v8::Value"*, %"class.v8::Value"** %629, align 8
  %631 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %630) #7
  %632 = icmp eq %"class.v8::Value"* %631, null
  br i1 %632, label %633, label %639

633:                                              ; preds = %627
  %634 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %635 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %636 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %635, align 8
  %637 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %636, i64 5
  %638 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %637, align 8
  call void %638(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %634) #7
  br label %1023

639:                                              ; preds = %627
  %640 = bitcast %"class.v8::Value"* %631 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = and i64 %641, 3
  %643 = icmp eq i64 %642, 1
  br i1 %643, label %644, label %661

644:                                              ; preds = %639
  %645 = add i64 %641, -1
  %646 = inttoptr i64 %645 to i32*
  %647 = load i32, i32* %646, align 4
  %648 = and i64 %641, -4294967296
  %649 = zext i32 %647 to i64
  %650 = or i64 %648, %649
  %651 = add i64 %650, 7
  %652 = inttoptr i64 %651 to i16*
  %653 = load i16, i16* %652, align 2
  %654 = icmp eq i16 %653, 67
  br i1 %654, label %655, label %661

655:                                              ; preds = %644
  %656 = add i64 %641, 23
  %657 = inttoptr i64 %656 to i32*
  %658 = load i32, i32* %657, align 4
  %659 = and i32 %658, -2
  %660 = icmp eq i32 %659, 10
  br i1 %660, label %677, label %661

661:                                              ; preds = %644, %639, %655
  %662 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %631) #7
  br i1 %662, label %663, label %666, !prof !3

663:                                              ; preds = %661
  %664 = bitcast %"class.v8::Value"* %631 to %"class.v8::Uint32"*
  %665 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %664) #7
  br label %669

666:                                              ; preds = %661
  %667 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %631) #7
  %668 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %631, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %669

669:                                              ; preds = %663, %666
  %670 = phi i32 [ %665, %663 ], [ %668, %666 ]
  %671 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %672 = load i32, i32* %671, align 8
  %673 = icmp eq i32 %672, 0
  br i1 %673, label %674, label %1023

674:                                              ; preds = %669
  %675 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 19
  store i32 %670, i32* %675, align 4
  %676 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 8
  store i8 1, i8* %676, align 1
  br label %677

677:                                              ; preds = %674, %655
  %678 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 10, i32 0
  %679 = bitcast %"class.v8::Name"** %678 to %"class.v8::Value"**
  %680 = load %"class.v8::Value"*, %"class.v8::Value"** %679, align 8
  %681 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %680) #7
  %682 = icmp eq %"class.v8::Value"* %681, null
  br i1 %682, label %683, label %689

683:                                              ; preds = %677
  %684 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %685 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %686 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %685, align 8
  %687 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %686, i64 5
  %688 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %687, align 8
  call void %688(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %684) #7
  br label %1023

689:                                              ; preds = %677
  %690 = bitcast %"class.v8::Value"* %681 to i64*
  %691 = load i64, i64* %690, align 8
  %692 = and i64 %691, 3
  %693 = icmp eq i64 %692, 1
  br i1 %693, label %694, label %711

694:                                              ; preds = %689
  %695 = add i64 %691, -1
  %696 = inttoptr i64 %695 to i32*
  %697 = load i32, i32* %696, align 4
  %698 = and i64 %691, -4294967296
  %699 = zext i32 %697 to i64
  %700 = or i64 %698, %699
  %701 = add i64 %700, 7
  %702 = inttoptr i64 %701 to i16*
  %703 = load i16, i16* %702, align 2
  %704 = icmp eq i16 %703, 67
  br i1 %704, label %705, label %711

705:                                              ; preds = %694
  %706 = add i64 %691, 23
  %707 = inttoptr i64 %706 to i32*
  %708 = load i32, i32* %707, align 4
  %709 = and i32 %708, -2
  %710 = icmp eq i32 %709, 10
  br i1 %710, label %933, label %711

711:                                              ; preds = %694, %689, %705
  %712 = bitcast %"class.blink::V8StringResource"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %712) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %712, i8 -86, i64 152, i1 false)
  %713 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %681, %"class.v8::Value"** %713, align 8
  %714 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 1
  store i32 0, i32* %714, align 8
  %715 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %715, align 8
  %716 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1
  %717 = bitcast %"class.std::__1::unique_ptr"* %716 to i64*
  store i64 0, i64* %717, align 8
  %718 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %10) #7
  br i1 %718, label %735, label %719

719:                                              ; preds = %711
  %720 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %721 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %721) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %721, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %720) #7
  %722 = load %"class.v8::Value"*, %"class.v8::Value"** %713, align 8
  %723 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %720) #7
  %724 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %722, %"class.v8::Context"* %723) #7
  %725 = ptrtoint %"class.v8::String"* %724 to i64
  %726 = bitcast %"class.blink::V8StringResource"* %10 to i64*
  store i64 %725, i64* %726, align 8
  %727 = icmp eq %"class.v8::String"* %724, null
  br i1 %727, label %729, label %728

728:                                              ; preds = %719
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %721) #7
  br label %735

729:                                              ; preds = %719
  %730 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %731 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %732 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %731, align 8
  %733 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %732, i64 5
  %734 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %733, align 8
  call void %734(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %730) #7
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %721) #7
  br label %911

735:                                              ; preds = %711, %728
  %736 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %736) #7
  %737 = load %"class.v8::Value"*, %"class.v8::Value"** %713, align 8
  %738 = icmp eq %"class.v8::Value"* %737, null
  br i1 %738, label %743, label %739, !prof !2

739:                                              ; preds = %735
  %740 = bitcast %"class.v8::Value"* %737 to %"class.v8::String"*
  %741 = load i32, i32* %714, align 8
  %742 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %740, i32 %741) #7
  br label %763

743:                                              ; preds = %735
  %744 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %715, align 8
  %745 = icmp eq %"class.WTF::StringImpl"* %744, null
  br i1 %745, label %763, label %746

746:                                              ; preds = %743
  %747 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %744, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %748 = load atomic i32, i32* %747 monotonic, align 4
  %749 = and i32 %748, 2
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %763

751:                                              ; preds = %746
  %752 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %744, i64 0, i32 0
  %753 = load i32, i32* %752, align 4
  %754 = zext i32 %753 to i33
  %755 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %754, i33 1) #7
  %756 = extractvalue { i33, i1 } %755, 1
  %757 = extractvalue { i33, i1 } %755, 0
  %758 = icmp slt i33 %757, 0
  %759 = or i1 %756, %758
  br i1 %759, label %760, label %761, !prof !2

760:                                              ; preds = %751
  call void @llvm.trap() #7
  unreachable

761:                                              ; preds = %751
  %762 = trunc i33 %757 to i32
  store i32 %762, i32* %752, align 4
  br label %763

763:                                              ; preds = %739, %743, %746, %761
  %764 = phi %"class.WTF::StringImpl"* [ %742, %739 ], [ null, %743 ], [ %744, %746 ], [ %744, %761 ]
  %765 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %764, %"class.WTF::StringImpl"** %765, align 8
  %766 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %766) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i64 18) #7
  %767 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %11, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink20V8VideoDecoderConfig6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoDecoderConfigERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %768 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %769 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %768, align 8
  %770 = icmp eq %"class.WTF::StringImpl"* %769, null
  br i1 %770, label %784, label %771

771:                                              ; preds = %763
  %772 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %769, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %773 = load atomic i32, i32* %772 monotonic, align 4
  %774 = and i32 %773, 2
  %775 = icmp eq i32 %774, 0
  %776 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %769, i64 0, i32 0
  %777 = load i32, i32* %776, align 4
  br i1 %775, label %778, label %780

778:                                              ; preds = %771
  %779 = add i32 %777, -1
  store i32 %779, i32* %776, align 4
  br label %780

780:                                              ; preds = %778, %771
  %781 = phi i32 [ %779, %778 ], [ %777, %771 ]
  %782 = icmp eq i32 %781, 0
  br i1 %782, label %783, label %784

783:                                              ; preds = %780
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %769) #7
  br label %784

784:                                              ; preds = %763, %780, %783
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %766) #7
  %785 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %765, align 8
  %786 = icmp eq %"class.WTF::StringImpl"* %785, null
  br i1 %786, label %800, label %787

787:                                              ; preds = %784
  %788 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %785, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %789 = load atomic i32, i32* %788 monotonic, align 4
  %790 = and i32 %789, 2
  %791 = icmp eq i32 %790, 0
  %792 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %785, i64 0, i32 0
  %793 = load i32, i32* %792, align 4
  br i1 %791, label %794, label %796

794:                                              ; preds = %787
  %795 = add i32 %793, -1
  store i32 %795, i32* %792, align 4
  br label %796

796:                                              ; preds = %794, %787
  %797 = phi i32 [ %795, %794 ], [ %793, %787 ]
  %798 = icmp eq i32 %797, 0
  br i1 %798, label %799, label %800

799:                                              ; preds = %796
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %785) #7
  br label %800

800:                                              ; preds = %784, %796, %799
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %736) #7
  br i1 %767, label %801, label %911

801:                                              ; preds = %800
  %802 = load %"class.v8::Value"*, %"class.v8::Value"** %713, align 8
  %803 = icmp eq %"class.v8::Value"* %802, null
  br i1 %803, label %804, label %828, !prof !2

804:                                              ; preds = %801
  %805 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %715, align 8
  %806 = icmp eq %"class.WTF::StringImpl"* %805, null
  br i1 %806, label %807, label %809

807:                                              ; preds = %804
  %808 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 20
  br label %853

809:                                              ; preds = %804
  %810 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %805, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %811 = load atomic i32, i32* %810 monotonic, align 4
  %812 = and i32 %811, 2
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %814, label %826

814:                                              ; preds = %809
  %815 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %805, i64 0, i32 0
  %816 = load i32, i32* %815, align 4
  %817 = zext i32 %816 to i33
  %818 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %817, i33 1) #7
  %819 = extractvalue { i33, i1 } %818, 1
  %820 = extractvalue { i33, i1 } %818, 0
  %821 = icmp slt i33 %820, 0
  %822 = or i1 %819, %821
  br i1 %822, label %823, label %824, !prof !2

823:                                              ; preds = %814
  call void @llvm.trap() #7
  unreachable

824:                                              ; preds = %814
  %825 = trunc i33 %820 to i32
  store i32 %825, i32* %815, align 4
  br label %826

826:                                              ; preds = %809, %824
  %827 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 20
  br label %834

828:                                              ; preds = %801
  %829 = bitcast %"class.v8::Value"* %802 to %"class.v8::String"*
  %830 = load i32, i32* %714, align 8
  %831 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %829, i32 %830) #7
  %832 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 20
  %833 = icmp eq %"class.WTF::StringImpl"* %831, null
  br i1 %833, label %853, label %834

834:                                              ; preds = %826, %828
  %835 = phi %"class.WTF::String"* [ %827, %826 ], [ %832, %828 ]
  %836 = phi %"class.WTF::StringImpl"* [ %805, %826 ], [ %831, %828 ]
  %837 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %836, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %838 = load atomic i32, i32* %837 monotonic, align 4
  %839 = and i32 %838, 2
  %840 = icmp eq i32 %839, 0
  br i1 %840, label %841, label %853

841:                                              ; preds = %834
  %842 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %836, i64 0, i32 0
  %843 = load i32, i32* %842, align 4
  %844 = zext i32 %843 to i33
  %845 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %844, i33 1) #7
  %846 = extractvalue { i33, i1 } %845, 1
  %847 = extractvalue { i33, i1 } %845, 0
  %848 = icmp slt i33 %847, 0
  %849 = or i1 %846, %848
  br i1 %849, label %850, label %851, !prof !2

850:                                              ; preds = %841
  call void @llvm.trap() #7
  unreachable

851:                                              ; preds = %841
  %852 = trunc i33 %847 to i32
  store i32 %852, i32* %842, align 4
  br label %853

853:                                              ; preds = %807, %851, %834, %828
  %854 = phi i1 [ false, %851 ], [ false, %834 ], [ true, %828 ], [ true, %807 ]
  %855 = phi %"class.WTF::String"* [ %835, %851 ], [ %835, %834 ], [ %832, %828 ], [ %808, %807 ]
  %856 = phi %"class.WTF::StringImpl"* [ %836, %851 ], [ %836, %834 ], [ null, %828 ], [ null, %807 ]
  %857 = ptrtoint %"class.WTF::StringImpl"* %856 to i64
  %858 = bitcast %"class.WTF::String"* %855 to i64*
  %859 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %855, i64 0, i32 0, i32 0
  %860 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %859, align 8
  store i64 %857, i64* %858, align 8
  %861 = icmp eq %"class.WTF::StringImpl"* %860, null
  br i1 %861, label %875, label %862

862:                                              ; preds = %853
  %863 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %860, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %864 = load atomic i32, i32* %863 monotonic, align 4
  %865 = and i32 %864, 2
  %866 = icmp eq i32 %865, 0
  %867 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %860, i64 0, i32 0
  %868 = load i32, i32* %867, align 4
  br i1 %866, label %869, label %871

869:                                              ; preds = %862
  %870 = add i32 %868, -1
  store i32 %870, i32* %867, align 4
  br label %871

871:                                              ; preds = %869, %862
  %872 = phi i32 [ %870, %869 ], [ %868, %862 ]
  %873 = icmp eq i32 %872, 0
  br i1 %873, label %874, label %875

874:                                              ; preds = %871
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %860) #7
  br label %875

875:                                              ; preds = %853, %871, %874
  br i1 %854, label %889, label %876

876:                                              ; preds = %875
  %877 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %856, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %878 = load atomic i32, i32* %877 monotonic, align 4
  %879 = and i32 %878, 2
  %880 = icmp eq i32 %879, 0
  %881 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %856, i64 0, i32 0
  %882 = load i32, i32* %881, align 4
  br i1 %880, label %883, label %885

883:                                              ; preds = %876
  %884 = add i32 %882, -1
  store i32 %884, i32* %881, align 4
  br label %885

885:                                              ; preds = %883, %876
  %886 = phi i32 [ %884, %883 ], [ %882, %876 ]
  %887 = icmp eq i32 %886, 0
  br i1 %887, label %888, label %889

888:                                              ; preds = %885
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %856) #7
  br label %889

889:                                              ; preds = %875, %885, %888
  %890 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %891 = load i8*, i8** %890, align 8
  store i8* null, i8** %890, align 8
  %892 = icmp eq i8* %891, null
  br i1 %892, label %894, label %893

893:                                              ; preds = %889
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %891) #7
  br label %894

894:                                              ; preds = %893, %889
  %895 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %715, align 8
  %896 = icmp eq %"class.WTF::StringImpl"* %895, null
  br i1 %896, label %910, label %897

897:                                              ; preds = %894
  %898 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %895, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %899 = load atomic i32, i32* %898 monotonic, align 4
  %900 = and i32 %899, 2
  %901 = icmp eq i32 %900, 0
  %902 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %895, i64 0, i32 0
  %903 = load i32, i32* %902, align 4
  br i1 %901, label %904, label %906

904:                                              ; preds = %897
  %905 = add i32 %903, -1
  store i32 %905, i32* %902, align 4
  br label %906

906:                                              ; preds = %904, %897
  %907 = phi i32 [ %905, %904 ], [ %903, %897 ]
  %908 = icmp eq i32 %907, 0
  br i1 %908, label %909, label %910

909:                                              ; preds = %906
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %895) #7
  br label %910

910:                                              ; preds = %894, %906, %909
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %712) #7
  br label %933

911:                                              ; preds = %729, %800
  %912 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %913 = load i8*, i8** %912, align 8
  store i8* null, i8** %912, align 8
  %914 = icmp eq i8* %913, null
  br i1 %914, label %916, label %915

915:                                              ; preds = %911
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %913) #7
  br label %916

916:                                              ; preds = %915, %911
  %917 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %715, align 8
  %918 = icmp eq %"class.WTF::StringImpl"* %917, null
  br i1 %918, label %932, label %919

919:                                              ; preds = %916
  %920 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %917, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %921 = load atomic i32, i32* %920 monotonic, align 4
  %922 = and i32 %921, 2
  %923 = icmp eq i32 %922, 0
  %924 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %917, i64 0, i32 0
  %925 = load i32, i32* %924, align 4
  br i1 %923, label %926, label %928

926:                                              ; preds = %919
  %927 = add i32 %925, -1
  store i32 %927, i32* %924, align 4
  br label %928

928:                                              ; preds = %926, %919
  %929 = phi i32 [ %927, %926 ], [ %925, %919 ]
  %930 = icmp eq i32 %929, 0
  br i1 %930, label %931, label %932

931:                                              ; preds = %928
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %917) #7
  br label %932

932:                                              ; preds = %916, %928, %931
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %712) #7
  br label %1023

933:                                              ; preds = %910, %705
  %934 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 11, i32 0
  %935 = bitcast %"class.v8::Name"** %934 to %"class.v8::Value"**
  %936 = load %"class.v8::Value"*, %"class.v8::Value"** %935, align 8
  %937 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %936) #7
  %938 = icmp eq %"class.v8::Value"* %937, null
  br i1 %938, label %939, label %945

939:                                              ; preds = %933
  %940 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %941 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %942 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %941, align 8
  %943 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %942, i64 5
  %944 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %943, align 8
  call void %944(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %940) #7
  br label %1023

945:                                              ; preds = %933
  %946 = bitcast %"class.v8::Value"* %937 to i64*
  %947 = load i64, i64* %946, align 8
  %948 = and i64 %947, 3
  %949 = icmp eq i64 %948, 1
  br i1 %949, label %950, label %967

950:                                              ; preds = %945
  %951 = add i64 %947, -1
  %952 = inttoptr i64 %951 to i32*
  %953 = load i32, i32* %952, align 4
  %954 = and i64 %947, -4294967296
  %955 = zext i32 %953 to i64
  %956 = or i64 %954, %955
  %957 = add i64 %956, 7
  %958 = inttoptr i64 %957 to i16*
  %959 = load i16, i16* %958, align 2
  %960 = icmp eq i16 %959, 67
  br i1 %960, label %961, label %967

961:                                              ; preds = %950
  %962 = add i64 %947, 23
  %963 = inttoptr i64 %962 to i32*
  %964 = load i32, i32* %963, align 4
  %965 = and i32 %964, -2
  %966 = icmp eq i32 %965, 10
  br i1 %966, label %983, label %967

967:                                              ; preds = %950, %945, %961
  %968 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %937) #7
  br i1 %968, label %969, label %972, !prof !3

969:                                              ; preds = %967
  %970 = bitcast %"class.v8::Value"* %937 to %"class.v8::Boolean"*
  %971 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %970) #7
  br label %974

972:                                              ; preds = %967
  %973 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %937, %"class.v8::Isolate"* %0) #7
  br label %974

974:                                              ; preds = %969, %972
  %975 = phi i1 [ %971, %969 ], [ %973, %972 ]
  %976 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %977 = load i32, i32* %976, align 8
  %978 = icmp eq i32 %977, 0
  br i1 %978, label %979, label %1023

979:                                              ; preds = %974
  %980 = zext i1 %975 to i8
  %981 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 21
  store i8 %980, i8* %981, align 8
  %982 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %2, i64 0, i32 9
  store i8 1, i8* %982, align 8
  br label %983

983:                                              ; preds = %979, %961
  %984 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 12, i32 0
  %985 = bitcast %"class.v8::Name"** %984 to %"class.v8::Value"**
  %986 = load %"class.v8::Value"*, %"class.v8::Value"** %985, align 8
  %987 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %986) #7
  %988 = icmp eq %"class.v8::Value"* %987, null
  br i1 %988, label %989, label %995

989:                                              ; preds = %983
  %990 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %991 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %992 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %991, align 8
  %993 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %992, i64 5
  %994 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %993, align 8
  call void %994(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %990) #7
  br label %1023

995:                                              ; preds = %983
  %996 = bitcast %"class.v8::Value"* %987 to i64*
  %997 = load i64, i64* %996, align 8
  %998 = and i64 %997, 3
  %999 = icmp eq i64 %998, 1
  br i1 %999, label %1000, label %1017

1000:                                             ; preds = %995
  %1001 = add i64 %997, -1
  %1002 = inttoptr i64 %1001 to i32*
  %1003 = load i32, i32* %1002, align 4
  %1004 = and i64 %997, -4294967296
  %1005 = zext i32 %1003 to i64
  %1006 = or i64 %1004, %1005
  %1007 = add i64 %1006, 7
  %1008 = inttoptr i64 %1007 to i16*
  %1009 = load i16, i16* %1008, align 2
  %1010 = icmp eq i16 %1009, 67
  br i1 %1010, label %1011, label %1017

1011:                                             ; preds = %1000
  %1012 = add i64 %997, 23
  %1013 = inttoptr i64 %1012 to i32*
  %1014 = load i32, i32* %1013, align 4
  %1015 = and i32 %1014, -2
  %1016 = icmp eq i32 %1015, 10
  br i1 %1016, label %1023, label %1017

1017:                                             ; preds = %1000, %995, %1011
  %1018 = call %"class.blink::VideoFrameRegion"* @_ZN5blink17NativeValueTraitsINS_16VideoFrameRegionEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %987, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %1019 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1020 = load i32, i32* %1019, align 8
  %1021 = icmp eq i32 %1020, 0
  br i1 %1021, label %1022, label %1023

1022:                                             ; preds = %1017
  call void @_ZN5blink18VideoDecoderConfig16setVisibleRegionEPNS_16VideoFrameRegionE(%"class.blink::VideoDecoderConfig"* %2, %"class.blink::VideoFrameRegion"* %1018) #7
  br label %1023

1023:                                             ; preds = %1017, %974, %669, %619, %528, %478, %428, %378, %328, %278, %242, %342, %442, %542, %576, %633, %939, %1011, %1022, %989, %932, %683, %583, %492, %392, %292, %241, %81, %53
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %47) #7
  br label %1024

1024:                                             ; preds = %1023, %35, %38
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

declare void @_ZN5blink28ArrayBufferOrArrayBufferViewC1Ev(%"class.blink::ArrayBufferOrArrayBufferView"*) unnamed_addr #1

declare void @_ZN5blink30V8ArrayBufferOrArrayBufferView6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_28ArrayBufferOrArrayBufferViewENS_23UnionTypeConversionModeERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24), i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink18VideoDecoderConfig14setDescriptionERKNS_28ArrayBufferOrArrayBufferViewE(%"class.blink::VideoDecoderConfig"*, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink28ArrayBufferOrArrayBufferViewD1Ev(%"class.blink::ArrayBufferOrArrayBufferView"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.blink::VideoFrameRegion"* @_ZN5blink17NativeValueTraitsINS_16VideoFrameRegionEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink18VideoDecoderConfig16setVisibleRegionEPNS_16VideoFrameRegionE(%"class.blink::VideoDecoderConfig"*, %"class.blink::VideoFrameRegion"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink18VideoDecoderConfig8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::VideoDecoderConfig"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink22toV8VideoDecoderConfigEPKNS_18VideoDecoderConfigEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::VideoDecoderConfig"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22toV8VideoDecoderConfigEPKNS_18VideoDecoderConfigEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::VideoDecoderConfig"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %8 = add i64 %7, 8
  %9 = inttoptr i64 %8 to %"class.blink::V8PerIsolateData"**
  %10 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %9, align 8
  %11 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %10, i8* bitcast ([13 x i8*]* @_ZZN5blinkL31eternalV8VideoDecoderConfigKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.322"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.322"*)) #7
  %12 = extractvalue { i64, %"class.v8::Eternal"* } %11, 1
  %13 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %14 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 10, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %4
  %18 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %21, i32* %25, align 8
  %26 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #7
  %27 = bitcast %"class.v8::String"* %26 to %"class.v8::Value"*
  %28 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 0, i32 0
  %29 = load %"class.v8::Name"*, %"class.v8::Name"** %28, align 8
  %30 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %29, %"class.v8::Value"* %27) #7
  %31 = trunc i16 %30 to i8
  %32 = icmp ne i8 %31, 0
  %33 = icmp ugt i16 %30, 255
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %242

35:                                               ; preds = %4, %17
  %36 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 11
  %41 = load i32, i32* %40, align 8
  %42 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %41) #7
  %43 = bitcast %"class.v8::Integer"* %42 to %"class.v8::Value"*
  %44 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 1, i32 0
  %45 = load %"class.v8::Name"*, %"class.v8::Name"** %44, align 8
  %46 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %45, %"class.v8::Value"* %43) #7
  %47 = trunc i16 %46 to i8
  %48 = icmp ne i8 %47, 0
  %49 = icmp ugt i16 %46, 255
  %50 = and i1 %49, %48
  br i1 %50, label %51, label %242

51:                                               ; preds = %35, %39
  %52 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 2
  %53 = load i8, i8* %52, align 1, !range !4
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %67, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 12
  %57 = load i32, i32* %56, align 4
  %58 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %57) #7
  %59 = bitcast %"class.v8::Integer"* %58 to %"class.v8::Value"*
  %60 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 2, i32 0
  %61 = load %"class.v8::Name"*, %"class.v8::Name"** %60, align 8
  %62 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %61, %"class.v8::Value"* %59) #7
  %63 = trunc i16 %62 to i8
  %64 = icmp ne i8 %63, 0
  %65 = icmp ugt i16 %62, 255
  %66 = and i1 %65, %64
  br i1 %66, label %67, label %242

67:                                               ; preds = %51, %55
  %68 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 3
  %69 = load i8, i8* %68, align 2, !range !4
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %83, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 13
  %73 = load i32, i32* %72, align 8
  %74 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %73) #7
  %75 = bitcast %"class.v8::Integer"* %74 to %"class.v8::Value"*
  %76 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 3, i32 0
  %77 = load %"class.v8::Name"*, %"class.v8::Name"** %76, align 8
  %78 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %77, %"class.v8::Value"* %75) #7
  %79 = trunc i16 %78 to i8
  %80 = icmp ne i8 %79, 0
  %81 = icmp ugt i16 %78, 255
  %82 = and i1 %81, %80
  br i1 %82, label %83, label %242

83:                                               ; preds = %67, %71
  %84 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 4
  %85 = load i8, i8* %84, align 1, !range !4
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %99, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 14
  %89 = load i32, i32* %88, align 4
  %90 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %89) #7
  %91 = bitcast %"class.v8::Integer"* %90 to %"class.v8::Value"*
  %92 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 4, i32 0
  %93 = load %"class.v8::Name"*, %"class.v8::Name"** %92, align 8
  %94 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %93, %"class.v8::Value"* %91) #7
  %95 = trunc i16 %94 to i8
  %96 = icmp ne i8 %95, 0
  %97 = icmp ugt i16 %94, 255
  %98 = and i1 %97, %96
  br i1 %98, label %99, label %242

99:                                               ; preds = %83, %87
  %100 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 5
  %101 = load i8, i8* %100, align 4, !range !4
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %115, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 15
  %105 = load i32, i32* %104, align 8
  %106 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %105) #7
  %107 = bitcast %"class.v8::Integer"* %106 to %"class.v8::Value"*
  %108 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 5, i32 0
  %109 = load %"class.v8::Name"*, %"class.v8::Name"** %108, align 8
  %110 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %109, %"class.v8::Value"* %107) #7
  %111 = trunc i16 %110 to i8
  %112 = icmp ne i8 %111, 0
  %113 = icmp ugt i16 %110, 255
  %114 = and i1 %113, %112
  br i1 %114, label %115, label %242

115:                                              ; preds = %99, %103
  %116 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 6
  %117 = load i8, i8* %116, align 1, !range !4
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %131, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 16
  %121 = load i32, i32* %120, align 4
  %122 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %121) #7
  %123 = bitcast %"class.v8::Integer"* %122 to %"class.v8::Value"*
  %124 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 6, i32 0
  %125 = load %"class.v8::Name"*, %"class.v8::Name"** %124, align 8
  %126 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %125, %"class.v8::Value"* %123) #7
  %127 = trunc i16 %126 to i8
  %128 = icmp ne i8 %127, 0
  %129 = icmp ugt i16 %126, 255
  %130 = and i1 %129, %128
  br i1 %130, label %131, label %242

131:                                              ; preds = %115, %119
  %132 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 17, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %145, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 17
  %137 = call %"class.v8::Value"* @_ZN5blink4ToV8ERKNS_28ArrayBufferOrArrayBufferViewEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24) %136, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  %138 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 7, i32 0
  %139 = load %"class.v8::Name"*, %"class.v8::Name"** %138, align 8
  %140 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %139, %"class.v8::Value"* %137) #7
  %141 = trunc i16 %140 to i8
  %142 = icmp ne i8 %141, 0
  %143 = icmp ugt i16 %140, 255
  %144 = and i1 %143, %142
  br i1 %144, label %145, label %242

145:                                              ; preds = %131, %135
  %146 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 7
  %147 = load i8, i8* %146, align 2, !range !4
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %161, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 18
  %151 = load i32, i32* %150, align 8
  %152 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %151) #7
  %153 = bitcast %"class.v8::Integer"* %152 to %"class.v8::Value"*
  %154 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 8, i32 0
  %155 = load %"class.v8::Name"*, %"class.v8::Name"** %154, align 8
  %156 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %155, %"class.v8::Value"* %153) #7
  %157 = trunc i16 %156 to i8
  %158 = icmp ne i8 %157, 0
  %159 = icmp ugt i16 %156, 255
  %160 = and i1 %159, %158
  br i1 %160, label %161, label %242

161:                                              ; preds = %145, %149
  %162 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 8
  %163 = load i8, i8* %162, align 1, !range !4
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %177, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 19
  %167 = load i32, i32* %166, align 4
  %168 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %167) #7
  %169 = bitcast %"class.v8::Integer"* %168 to %"class.v8::Value"*
  %170 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 9, i32 0
  %171 = load %"class.v8::Name"*, %"class.v8::Name"** %170, align 8
  %172 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %171, %"class.v8::Value"* %169) #7
  %173 = trunc i16 %172 to i8
  %174 = icmp ne i8 %173, 0
  %175 = icmp ugt i16 %172, 255
  %176 = and i1 %175, %174
  br i1 %176, label %177, label %242

177:                                              ; preds = %161, %165
  %178 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 20, i32 0, i32 0
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %191, label %181

181:                                              ; preds = %177
  %182 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #7
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %179, %"class.WTF::StringImpl"** %183, align 8
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 1
  %187 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %188 = bitcast i8** %187 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %188, align 8
  %189 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %185, i32* %189, align 8
  %190 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #7
  br label %195

191:                                              ; preds = %177
  %192 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 0, i32 5) #7
  %193 = icmp eq %"class.v8::String"* %192, null
  br i1 %193, label %194, label %195, !prof !2

194:                                              ; preds = %191
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %195

195:                                              ; preds = %194, %191, %181
  %196 = phi %"class.v8::String"* [ %190, %181 ], [ %192, %191 ], [ null, %194 ]
  %197 = bitcast %"class.v8::String"* %196 to %"class.v8::Value"*
  %198 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 10, i32 0
  %199 = load %"class.v8::Name"*, %"class.v8::Name"** %198, align 8
  %200 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %199, %"class.v8::Value"* %197) #7
  %201 = trunc i16 %200 to i8
  %202 = icmp ne i8 %201, 0
  %203 = icmp ugt i16 %200, 255
  %204 = and i1 %203, %202
  br i1 %204, label %205, label %242

205:                                              ; preds = %195
  %206 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 9
  %207 = load i8, i8* %206, align 8, !range !4
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %223, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 21
  %211 = load i8, i8* %210, align 8, !range !4
  %212 = icmp eq i8 %211, 0
  %213 = select i1 %212, i64 192, i64 184
  %214 = add i64 %213, %7
  %215 = inttoptr i64 %214 to %"class.v8::Value"*
  %216 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 11, i32 0
  %217 = load %"class.v8::Name"*, %"class.v8::Name"** %216, align 8
  %218 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %217, %"class.v8::Value"* %215) #7
  %219 = trunc i16 %218 to i8
  %220 = icmp ne i8 %219, 0
  %221 = icmp ugt i16 %218, 255
  %222 = and i1 %221, %220
  br i1 %222, label %223, label %242

223:                                              ; preds = %205, %209
  %224 = getelementptr inbounds %"class.blink::VideoDecoderConfig", %"class.blink::VideoDecoderConfig"* %0, i64 0, i32 22, i32 0, i32 0
  %225 = load %"class.blink::VideoFrameRegion"*, %"class.blink::VideoFrameRegion"** %224, align 8
  %226 = icmp eq %"class.blink::VideoFrameRegion"* %225, null
  br i1 %226, label %241, label %227

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"class.blink::VideoFrameRegion", %"class.blink::VideoFrameRegion"* %225, i64 0, i32 0
  %229 = bitcast %"class.blink::VideoFrameRegion"* %225 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %230 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %229, align 8
  %231 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %230, i64 2
  %232 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %231, align 8
  %233 = call %"class.v8::Value"* %232(%"class.blink::IDLDictionaryBase"* nonnull %228, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  %234 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 12, i32 0
  %235 = load %"class.v8::Name"*, %"class.v8::Name"** %234, align 8
  %236 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %235, %"class.v8::Value"* %233) #7
  %237 = trunc i16 %236 to i8
  %238 = icmp ne i8 %237, 0
  %239 = icmp ugt i16 %236, 255
  %240 = and i1 %239, %238
  br i1 %240, label %241, label %242

241:                                              ; preds = %223, %227
  br label %242

242:                                              ; preds = %39, %71, %103, %135, %165, %209, %227, %241, %195, %149, %119, %87, %55, %17
  %243 = phi i1 [ false, %17 ], [ false, %39 ], [ false, %55 ], [ false, %71 ], [ false, %87 ], [ false, %103 ], [ false, %119 ], [ false, %135 ], [ false, %149 ], [ false, %165 ], [ false, %195 ], [ false, %209 ], [ true, %241 ], [ false, %227 ]
  ret i1 %243
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN5blink4ToV8ERKNS_28ArrayBufferOrArrayBufferViewEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::VideoDecoderConfig"* @_ZN5blink17NativeValueTraitsINS_18VideoDecoderConfigEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 112) #7
  %5 = bitcast i8* %4 to %"class.blink::VideoDecoderConfig"*
  tail call void @_ZN5blink18VideoDecoderConfigC1Ev(%"class.blink::VideoDecoderConfig"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink20V8VideoDecoderConfig6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoDecoderConfigERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::VideoDecoderConfig"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::VideoDecoderConfig"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.322"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink18VideoDecoderConfigC1Ev(%"class.blink::VideoDecoderConfig"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !3

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !3

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #1

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
