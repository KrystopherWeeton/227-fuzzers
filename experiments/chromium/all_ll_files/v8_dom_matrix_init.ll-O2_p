; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_dom_matrix_init.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_dom_matrix_init.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.73", i32, [4 x i8], %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.225", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.243", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.250", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.189", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.109" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.109" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__atomic_base.111" }
%"struct.std::__1::__atomic_base.111" = type { %"struct.std::__1::__cxx_atomic_impl.112" }
%"struct.std::__1::__cxx_atomic_impl.112" = type { %"struct.std::__1::__cxx_atomic_base_impl.113" }
%"struct.std::__1::__cxx_atomic_base_impl.113" = type { i64 }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.109" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.109" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.109" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.109" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.109" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::Worklist.155"* }
%"class.blink::Worklist.155" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.109" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::Worklist.162"* }
%"class.blink::Worklist.162" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.109" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.169", %"class.std::__1::__compressed_pair.176", %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.183", [4 x i8] }>
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171", %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { i64 }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { float }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.192", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.201" }
%"class.WTF::Vector.201" = type { %"class.WTF::VectorBuffer.202" }
%"class.WTF::VectorBuffer.202" = type { %"class.WTF::VectorBufferBase.203" }
%"class.WTF::VectorBufferBase.203" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.217" }
%"class.WTF::VectorBuffer.217" = type { %"class.WTF::VectorBufferBase.218" }
%"class.WTF::VectorBufferBase.218" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.231" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.141"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.148"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.281" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.250" = type { %"struct.std::__1::__atomic_base.251" }
%"struct.std::__1::__atomic_base.251" = type { %"struct.std::__1::__cxx_atomic_impl.252" }
%"struct.std::__1::__cxx_atomic_impl.252" = type { %"struct.std::__1::__cxx_atomic_base_impl.253" }
%"struct.std::__1::__cxx_atomic_base_impl.253" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::DOMMatrixInit" = type { %"class.blink::DOMMatrix2DInit", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, double, double, double, double, double, double, double, double, double, double }
%"class.blink::DOMMatrix2DInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, double, double, double, double, double, double, double, double, double, double, double, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.20", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.67", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.254", %"class.std::__1::unique_ptr.259", %"class.blink::Persistent.265", %"class.blink::Persistent.269", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.20" = type { %"class.WTF::HashTable.21" }
%"class.WTF::HashTable.21" = type <{ %"struct.WTF::KeyValuePair.24"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.24" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.33", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.28", i8* }
%"class.WTF::HashMap.28" = type { %"class.WTF::HashTable.29" }
%"class.WTF::HashTable.29" = type <{ %"struct.WTF::KeyValuePair.32"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.32" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.33" = type { %"class.v8::PersistentValueMapBase.34" }
%"class.v8::PersistentValueMapBase.34" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.35", i8* }
%"class.WTF::HashMap.35" = type { %"class.WTF::HashTable.36" }
%"class.WTF::HashTable.36" = type <{ %"struct.WTF::KeyValuePair.39"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.39" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.40" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.51", %"class.WTF::Vector.57", i8, i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.288, %"class.blink::Member.307", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.288 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.289", i32, i32, %"class.blink::Persistent.291" }
%"class.WTF::RefCounted.289" = type { %"class.base::RefCounted.290" }
%"class.base::RefCounted.290" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.291" = type { %"class.blink::PersistentBase.292" }
%"class.blink::PersistentBase.292" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.297" }
%"class.WTF::HashMap.297" = type { %"class.WTF::HashTable.298" }
%"class.WTF::HashTable.298" = type <{ %"struct.WTF::KeyValuePair.300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.300" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.304" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.304" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.304" = type { %"class.v8::TracedReference.305" }
%"class.v8::TracedReference.305" = type { %"class.v8::BasicTracedReference.306" }
%"class.v8::BasicTracedReference.306" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.265" = type { %"class.blink::PersistentBase.266" }
%"class.blink::PersistentBase.266" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.269" = type { %"class.blink::PersistentBase.270" }
%"class.blink::PersistentBase.270" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.275" }
%"class.WTF::Vector.275" = type { %"class.WTF::VectorBuffer.276" }
%"class.WTF::VectorBuffer.276" = type { %"class.WTF::VectorBufferBase.277" }
%"class.WTF::VectorBufferBase.277" = type { %"struct.std::__1::pair.278"*, i32, i32 }
%"struct.std::__1::pair.278" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.279" }
%"class.blink::MemberBase.279" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.309" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::Boolean" = type { i8 }
%"class.v8::Number" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blinkL26eternalV8DOMMatrixInitKeysEPN2v87IsolateEE5kKeys = internal constant [11 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [5 x i8] c"is2D\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"m13\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"m14\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"m23\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"m24\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"m31\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"m32\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"m33\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"m34\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"m43\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"m44\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 11, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @_ZZN5blinkL26eternalV8DOMMatrixInitKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.14 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15V8DOMMatrixInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::DOMMatrixInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = icmp eq %"class.v8::Value"* %1, null
  br i1 %6, label %574, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %574
    i32 3, label %574
  ]

28:                                               ; preds = %23, %12, %7
  %29 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #4
  br i1 %29, label %31, label %30

30:                                               ; preds = %28
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #4
  br label %574

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %33 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 0
  tail call void @_ZN5blink17V8DOMMatrix2DInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_15DOMMatrix2DInitERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1, %"class.blink::DOMMatrix2DInit"* %33, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %574

37:                                               ; preds = %31
  %38 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to %"class.blink::V8PerIsolateData"**
  %41 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %40, align 8
  %42 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %41, i8* bitcast ([11 x i8*]* @_ZZN5blinkL26eternalV8DOMMatrixInitKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.309"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.309"*)) #4
  %43 = extractvalue { i64, %"class.v8::Eternal"* } %42, 1
  %44 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %44) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #4
  %45 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #4
  %46 = bitcast %"class.v8::Eternal"* %43 to %"class.v8::Value"**
  %47 = load %"class.v8::Value"*, %"class.v8::Value"** %46, align 8
  %48 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %45, %"class.v8::Value"* %47) #4
  %49 = icmp eq %"class.v8::Value"* %48, null
  br i1 %49, label %50, label %56

50:                                               ; preds = %37
  %51 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %52 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %53 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, i64 5
  %55 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %54, align 8
  call void %55(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %51) #4
  br label %573

56:                                               ; preds = %37
  %57 = bitcast %"class.v8::Value"* %48 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 3
  %60 = icmp eq i64 %59, 1
  br i1 %60, label %61, label %78

61:                                               ; preds = %56
  %62 = add i64 %58, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = and i64 %58, -4294967296
  %66 = zext i32 %64 to i64
  %67 = or i64 %65, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = icmp eq i16 %70, 67
  br i1 %71, label %72, label %78

72:                                               ; preds = %61
  %73 = add i64 %58, 23
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, -2
  %77 = icmp eq i32 %76, 10
  br i1 %77, label %93, label %78

78:                                               ; preds = %61, %56, %72
  %79 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %48) #4
  br i1 %79, label %80, label %83, !prof !2

80:                                               ; preds = %78
  %81 = bitcast %"class.v8::Value"* %48 to %"class.v8::Boolean"*
  %82 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %81) #4
  br label %85

83:                                               ; preds = %78
  %84 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %48, %"class.v8::Isolate"* %0) #4
  br label %85

85:                                               ; preds = %80, %83
  %86 = phi i1 [ %82, %80 ], [ %84, %83 ]
  %87 = load i32, i32* %34, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %573

89:                                               ; preds = %85
  %90 = zext i1 %86 to i8
  %91 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 12
  store i8 %90, i8* %91, align 1
  %92 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 1
  store i8 1, i8* %92, align 8
  br label %93

93:                                               ; preds = %89, %72
  %94 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %43, i64 1, i32 0
  %95 = bitcast %"class.v8::Name"** %94 to %"class.v8::Value"**
  %96 = load %"class.v8::Value"*, %"class.v8::Value"** %95, align 8
  %97 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %45, %"class.v8::Value"* %96) #4
  %98 = icmp eq %"class.v8::Value"* %97, null
  br i1 %98, label %99, label %105

99:                                               ; preds = %93
  %100 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %101 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %102 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %102, i64 5
  %104 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %103, align 8
  call void %104(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %100) #4
  br label %573

105:                                              ; preds = %93
  %106 = bitcast %"class.v8::Value"* %97 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %127

110:                                              ; preds = %105
  %111 = add i64 %107, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %107, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %127

121:                                              ; preds = %110
  %122 = add i64 %107, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = and i32 %124, -2
  %126 = icmp eq i32 %125, 10
  br i1 %126, label %141, label %127

127:                                              ; preds = %110, %105, %121
  %128 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %97) #4
  br i1 %128, label %129, label %132, !prof !2

129:                                              ; preds = %127
  %130 = bitcast %"class.v8::Value"* %97 to %"class.v8::Number"*
  %131 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %130) #4
  br label %134

132:                                              ; preds = %127
  %133 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %97, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %134

134:                                              ; preds = %129, %132
  %135 = phi double [ %131, %129 ], [ %133, %132 ]
  %136 = load i32, i32* %34, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %573

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 13
  store double %135, double* %139, align 8
  %140 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 2
  store i8 1, i8* %140, align 1
  br label %141

141:                                              ; preds = %138, %121
  %142 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %43, i64 2, i32 0
  %143 = bitcast %"class.v8::Name"** %142 to %"class.v8::Value"**
  %144 = load %"class.v8::Value"*, %"class.v8::Value"** %143, align 8
  %145 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %45, %"class.v8::Value"* %144) #4
  %146 = icmp eq %"class.v8::Value"* %145, null
  br i1 %146, label %147, label %153

147:                                              ; preds = %141
  %148 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %149 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %150 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %150, i64 5
  %152 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %151, align 8
  call void %152(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %148) #4
  br label %573

153:                                              ; preds = %141
  %154 = bitcast %"class.v8::Value"* %145 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, 3
  %157 = icmp eq i64 %156, 1
  br i1 %157, label %158, label %175

158:                                              ; preds = %153
  %159 = add i64 %155, -1
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = and i64 %155, -4294967296
  %163 = zext i32 %161 to i64
  %164 = or i64 %162, %163
  %165 = add i64 %164, 7
  %166 = inttoptr i64 %165 to i16*
  %167 = load i16, i16* %166, align 2
  %168 = icmp eq i16 %167, 67
  br i1 %168, label %169, label %175

169:                                              ; preds = %158
  %170 = add i64 %155, 23
  %171 = inttoptr i64 %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, -2
  %174 = icmp eq i32 %173, 10
  br i1 %174, label %189, label %175

175:                                              ; preds = %158, %153, %169
  %176 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %145) #4
  br i1 %176, label %177, label %180, !prof !2

177:                                              ; preds = %175
  %178 = bitcast %"class.v8::Value"* %145 to %"class.v8::Number"*
  %179 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %178) #4
  br label %182

180:                                              ; preds = %175
  %181 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %145, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %182

182:                                              ; preds = %177, %180
  %183 = phi double [ %179, %177 ], [ %181, %180 ]
  %184 = load i32, i32* %34, align 8
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %573

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 14
  store double %183, double* %187, align 8
  %188 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 3
  store i8 1, i8* %188, align 2
  br label %189

189:                                              ; preds = %186, %169
  %190 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %43, i64 3, i32 0
  %191 = bitcast %"class.v8::Name"** %190 to %"class.v8::Value"**
  %192 = load %"class.v8::Value"*, %"class.v8::Value"** %191, align 8
  %193 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %45, %"class.v8::Value"* %192) #4
  %194 = icmp eq %"class.v8::Value"* %193, null
  br i1 %194, label %195, label %201

195:                                              ; preds = %189
  %196 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %197 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %198 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %197, align 8
  %199 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %198, i64 5
  %200 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %199, align 8
  call void %200(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %196) #4
  br label %573

201:                                              ; preds = %189
  %202 = bitcast %"class.v8::Value"* %193 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = and i64 %203, 3
  %205 = icmp eq i64 %204, 1
  br i1 %205, label %206, label %223

206:                                              ; preds = %201
  %207 = add i64 %203, -1
  %208 = inttoptr i64 %207 to i32*
  %209 = load i32, i32* %208, align 4
  %210 = and i64 %203, -4294967296
  %211 = zext i32 %209 to i64
  %212 = or i64 %210, %211
  %213 = add i64 %212, 7
  %214 = inttoptr i64 %213 to i16*
  %215 = load i16, i16* %214, align 2
  %216 = icmp eq i16 %215, 67
  br i1 %216, label %217, label %223

217:                                              ; preds = %206
  %218 = add i64 %203, 23
  %219 = inttoptr i64 %218 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = and i32 %220, -2
  %222 = icmp eq i32 %221, 10
  br i1 %222, label %237, label %223

223:                                              ; preds = %206, %201, %217
  %224 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %193) #4
  br i1 %224, label %225, label %228, !prof !2

225:                                              ; preds = %223
  %226 = bitcast %"class.v8::Value"* %193 to %"class.v8::Number"*
  %227 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %226) #4
  br label %230

228:                                              ; preds = %223
  %229 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %193, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %230

230:                                              ; preds = %225, %228
  %231 = phi double [ %227, %225 ], [ %229, %228 ]
  %232 = load i32, i32* %34, align 8
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %573

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 15
  store double %231, double* %235, align 8
  %236 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 4
  store i8 1, i8* %236, align 1
  br label %237

237:                                              ; preds = %234, %217
  %238 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %43, i64 4, i32 0
  %239 = bitcast %"class.v8::Name"** %238 to %"class.v8::Value"**
  %240 = load %"class.v8::Value"*, %"class.v8::Value"** %239, align 8
  %241 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %45, %"class.v8::Value"* %240) #4
  %242 = icmp eq %"class.v8::Value"* %241, null
  br i1 %242, label %243, label %249

243:                                              ; preds = %237
  %244 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %245 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %246 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %246, i64 5
  %248 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %247, align 8
  call void %248(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %244) #4
  br label %573

249:                                              ; preds = %237
  %250 = bitcast %"class.v8::Value"* %241 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = and i64 %251, 3
  %253 = icmp eq i64 %252, 1
  br i1 %253, label %254, label %271

254:                                              ; preds = %249
  %255 = add i64 %251, -1
  %256 = inttoptr i64 %255 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = and i64 %251, -4294967296
  %259 = zext i32 %257 to i64
  %260 = or i64 %258, %259
  %261 = add i64 %260, 7
  %262 = inttoptr i64 %261 to i16*
  %263 = load i16, i16* %262, align 2
  %264 = icmp eq i16 %263, 67
  br i1 %264, label %265, label %271

265:                                              ; preds = %254
  %266 = add i64 %251, 23
  %267 = inttoptr i64 %266 to i32*
  %268 = load i32, i32* %267, align 4
  %269 = and i32 %268, -2
  %270 = icmp eq i32 %269, 10
  br i1 %270, label %285, label %271

271:                                              ; preds = %254, %249, %265
  %272 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %241) #4
  br i1 %272, label %273, label %276, !prof !2

273:                                              ; preds = %271
  %274 = bitcast %"class.v8::Value"* %241 to %"class.v8::Number"*
  %275 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %274) #4
  br label %278

276:                                              ; preds = %271
  %277 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %241, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %278

278:                                              ; preds = %273, %276
  %279 = phi double [ %275, %273 ], [ %277, %276 ]
  %280 = load i32, i32* %34, align 8
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %573

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 16
  store double %279, double* %283, align 8
  %284 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 5
  store i8 1, i8* %284, align 4
  br label %285

285:                                              ; preds = %282, %265
  %286 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %43, i64 5, i32 0
  %287 = bitcast %"class.v8::Name"** %286 to %"class.v8::Value"**
  %288 = load %"class.v8::Value"*, %"class.v8::Value"** %287, align 8
  %289 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %45, %"class.v8::Value"* %288) #4
  %290 = icmp eq %"class.v8::Value"* %289, null
  br i1 %290, label %291, label %297

291:                                              ; preds = %285
  %292 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %293 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %294 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %293, align 8
  %295 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %294, i64 5
  %296 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %295, align 8
  call void %296(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %292) #4
  br label %573

297:                                              ; preds = %285
  %298 = bitcast %"class.v8::Value"* %289 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = and i64 %299, 3
  %301 = icmp eq i64 %300, 1
  br i1 %301, label %302, label %319

302:                                              ; preds = %297
  %303 = add i64 %299, -1
  %304 = inttoptr i64 %303 to i32*
  %305 = load i32, i32* %304, align 4
  %306 = and i64 %299, -4294967296
  %307 = zext i32 %305 to i64
  %308 = or i64 %306, %307
  %309 = add i64 %308, 7
  %310 = inttoptr i64 %309 to i16*
  %311 = load i16, i16* %310, align 2
  %312 = icmp eq i16 %311, 67
  br i1 %312, label %313, label %319

313:                                              ; preds = %302
  %314 = add i64 %299, 23
  %315 = inttoptr i64 %314 to i32*
  %316 = load i32, i32* %315, align 4
  %317 = and i32 %316, -2
  %318 = icmp eq i32 %317, 10
  br i1 %318, label %333, label %319

319:                                              ; preds = %302, %297, %313
  %320 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %289) #4
  br i1 %320, label %321, label %324, !prof !2

321:                                              ; preds = %319
  %322 = bitcast %"class.v8::Value"* %289 to %"class.v8::Number"*
  %323 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %322) #4
  br label %326

324:                                              ; preds = %319
  %325 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %289, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %326

326:                                              ; preds = %321, %324
  %327 = phi double [ %323, %321 ], [ %325, %324 ]
  %328 = load i32, i32* %34, align 8
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %573

330:                                              ; preds = %326
  %331 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 17
  store double %327, double* %331, align 8
  %332 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 6
  store i8 1, i8* %332, align 1
  br label %333

333:                                              ; preds = %330, %313
  %334 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %43, i64 6, i32 0
  %335 = bitcast %"class.v8::Name"** %334 to %"class.v8::Value"**
  %336 = load %"class.v8::Value"*, %"class.v8::Value"** %335, align 8
  %337 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %45, %"class.v8::Value"* %336) #4
  %338 = icmp eq %"class.v8::Value"* %337, null
  br i1 %338, label %339, label %345

339:                                              ; preds = %333
  %340 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %341 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %342 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %341, align 8
  %343 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %342, i64 5
  %344 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %343, align 8
  call void %344(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %340) #4
  br label %573

345:                                              ; preds = %333
  %346 = bitcast %"class.v8::Value"* %337 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = and i64 %347, 3
  %349 = icmp eq i64 %348, 1
  br i1 %349, label %350, label %367

350:                                              ; preds = %345
  %351 = add i64 %347, -1
  %352 = inttoptr i64 %351 to i32*
  %353 = load i32, i32* %352, align 4
  %354 = and i64 %347, -4294967296
  %355 = zext i32 %353 to i64
  %356 = or i64 %354, %355
  %357 = add i64 %356, 7
  %358 = inttoptr i64 %357 to i16*
  %359 = load i16, i16* %358, align 2
  %360 = icmp eq i16 %359, 67
  br i1 %360, label %361, label %367

361:                                              ; preds = %350
  %362 = add i64 %347, 23
  %363 = inttoptr i64 %362 to i32*
  %364 = load i32, i32* %363, align 4
  %365 = and i32 %364, -2
  %366 = icmp eq i32 %365, 10
  br i1 %366, label %381, label %367

367:                                              ; preds = %350, %345, %361
  %368 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %337) #4
  br i1 %368, label %369, label %372, !prof !2

369:                                              ; preds = %367
  %370 = bitcast %"class.v8::Value"* %337 to %"class.v8::Number"*
  %371 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %370) #4
  br label %374

372:                                              ; preds = %367
  %373 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %337, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %374

374:                                              ; preds = %369, %372
  %375 = phi double [ %371, %369 ], [ %373, %372 ]
  %376 = load i32, i32* %34, align 8
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %573

378:                                              ; preds = %374
  %379 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 18
  store double %375, double* %379, align 8
  %380 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 7
  store i8 1, i8* %380, align 2
  br label %381

381:                                              ; preds = %378, %361
  %382 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %43, i64 7, i32 0
  %383 = bitcast %"class.v8::Name"** %382 to %"class.v8::Value"**
  %384 = load %"class.v8::Value"*, %"class.v8::Value"** %383, align 8
  %385 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %45, %"class.v8::Value"* %384) #4
  %386 = icmp eq %"class.v8::Value"* %385, null
  br i1 %386, label %387, label %393

387:                                              ; preds = %381
  %388 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %389 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %390 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %389, align 8
  %391 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %390, i64 5
  %392 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %391, align 8
  call void %392(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %388) #4
  br label %573

393:                                              ; preds = %381
  %394 = bitcast %"class.v8::Value"* %385 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = and i64 %395, 3
  %397 = icmp eq i64 %396, 1
  br i1 %397, label %398, label %415

398:                                              ; preds = %393
  %399 = add i64 %395, -1
  %400 = inttoptr i64 %399 to i32*
  %401 = load i32, i32* %400, align 4
  %402 = and i64 %395, -4294967296
  %403 = zext i32 %401 to i64
  %404 = or i64 %402, %403
  %405 = add i64 %404, 7
  %406 = inttoptr i64 %405 to i16*
  %407 = load i16, i16* %406, align 2
  %408 = icmp eq i16 %407, 67
  br i1 %408, label %409, label %415

409:                                              ; preds = %398
  %410 = add i64 %395, 23
  %411 = inttoptr i64 %410 to i32*
  %412 = load i32, i32* %411, align 4
  %413 = and i32 %412, -2
  %414 = icmp eq i32 %413, 10
  br i1 %414, label %429, label %415

415:                                              ; preds = %398, %393, %409
  %416 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %385) #4
  br i1 %416, label %417, label %420, !prof !2

417:                                              ; preds = %415
  %418 = bitcast %"class.v8::Value"* %385 to %"class.v8::Number"*
  %419 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %418) #4
  br label %422

420:                                              ; preds = %415
  %421 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %385, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %422

422:                                              ; preds = %417, %420
  %423 = phi double [ %419, %417 ], [ %421, %420 ]
  %424 = load i32, i32* %34, align 8
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %573

426:                                              ; preds = %422
  %427 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 19
  store double %423, double* %427, align 8
  %428 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 8
  store i8 1, i8* %428, align 1
  br label %429

429:                                              ; preds = %426, %409
  %430 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %43, i64 8, i32 0
  %431 = bitcast %"class.v8::Name"** %430 to %"class.v8::Value"**
  %432 = load %"class.v8::Value"*, %"class.v8::Value"** %431, align 8
  %433 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %45, %"class.v8::Value"* %432) #4
  %434 = icmp eq %"class.v8::Value"* %433, null
  br i1 %434, label %435, label %441

435:                                              ; preds = %429
  %436 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %437 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %438 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %437, align 8
  %439 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %438, i64 5
  %440 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %439, align 8
  call void %440(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %436) #4
  br label %573

441:                                              ; preds = %429
  %442 = bitcast %"class.v8::Value"* %433 to i64*
  %443 = load i64, i64* %442, align 8
  %444 = and i64 %443, 3
  %445 = icmp eq i64 %444, 1
  br i1 %445, label %446, label %463

446:                                              ; preds = %441
  %447 = add i64 %443, -1
  %448 = inttoptr i64 %447 to i32*
  %449 = load i32, i32* %448, align 4
  %450 = and i64 %443, -4294967296
  %451 = zext i32 %449 to i64
  %452 = or i64 %450, %451
  %453 = add i64 %452, 7
  %454 = inttoptr i64 %453 to i16*
  %455 = load i16, i16* %454, align 2
  %456 = icmp eq i16 %455, 67
  br i1 %456, label %457, label %463

457:                                              ; preds = %446
  %458 = add i64 %443, 23
  %459 = inttoptr i64 %458 to i32*
  %460 = load i32, i32* %459, align 4
  %461 = and i32 %460, -2
  %462 = icmp eq i32 %461, 10
  br i1 %462, label %477, label %463

463:                                              ; preds = %446, %441, %457
  %464 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %433) #4
  br i1 %464, label %465, label %468, !prof !2

465:                                              ; preds = %463
  %466 = bitcast %"class.v8::Value"* %433 to %"class.v8::Number"*
  %467 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %466) #4
  br label %470

468:                                              ; preds = %463
  %469 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %433, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %470

470:                                              ; preds = %465, %468
  %471 = phi double [ %467, %465 ], [ %469, %468 ]
  %472 = load i32, i32* %34, align 8
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %474, label %573

474:                                              ; preds = %470
  %475 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 20
  store double %471, double* %475, align 8
  %476 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 9
  store i8 1, i8* %476, align 8
  br label %477

477:                                              ; preds = %474, %457
  %478 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %43, i64 9, i32 0
  %479 = bitcast %"class.v8::Name"** %478 to %"class.v8::Value"**
  %480 = load %"class.v8::Value"*, %"class.v8::Value"** %479, align 8
  %481 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %45, %"class.v8::Value"* %480) #4
  %482 = icmp eq %"class.v8::Value"* %481, null
  br i1 %482, label %483, label %489

483:                                              ; preds = %477
  %484 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %485 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %486 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %485, align 8
  %487 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %486, i64 5
  %488 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %487, align 8
  call void %488(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %484) #4
  br label %573

489:                                              ; preds = %477
  %490 = bitcast %"class.v8::Value"* %481 to i64*
  %491 = load i64, i64* %490, align 8
  %492 = and i64 %491, 3
  %493 = icmp eq i64 %492, 1
  br i1 %493, label %494, label %511

494:                                              ; preds = %489
  %495 = add i64 %491, -1
  %496 = inttoptr i64 %495 to i32*
  %497 = load i32, i32* %496, align 4
  %498 = and i64 %491, -4294967296
  %499 = zext i32 %497 to i64
  %500 = or i64 %498, %499
  %501 = add i64 %500, 7
  %502 = inttoptr i64 %501 to i16*
  %503 = load i16, i16* %502, align 2
  %504 = icmp eq i16 %503, 67
  br i1 %504, label %505, label %511

505:                                              ; preds = %494
  %506 = add i64 %491, 23
  %507 = inttoptr i64 %506 to i32*
  %508 = load i32, i32* %507, align 4
  %509 = and i32 %508, -2
  %510 = icmp eq i32 %509, 10
  br i1 %510, label %525, label %511

511:                                              ; preds = %494, %489, %505
  %512 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %481) #4
  br i1 %512, label %513, label %516, !prof !2

513:                                              ; preds = %511
  %514 = bitcast %"class.v8::Value"* %481 to %"class.v8::Number"*
  %515 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %514) #4
  br label %518

516:                                              ; preds = %511
  %517 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %481, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %518

518:                                              ; preds = %513, %516
  %519 = phi double [ %515, %513 ], [ %517, %516 ]
  %520 = load i32, i32* %34, align 8
  %521 = icmp eq i32 %520, 0
  br i1 %521, label %522, label %573

522:                                              ; preds = %518
  %523 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 21
  store double %519, double* %523, align 8
  %524 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 10
  store i8 1, i8* %524, align 1
  br label %525

525:                                              ; preds = %522, %505
  %526 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %43, i64 10, i32 0
  %527 = bitcast %"class.v8::Name"** %526 to %"class.v8::Value"**
  %528 = load %"class.v8::Value"*, %"class.v8::Value"** %527, align 8
  %529 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %45, %"class.v8::Value"* %528) #4
  %530 = icmp eq %"class.v8::Value"* %529, null
  br i1 %530, label %531, label %537

531:                                              ; preds = %525
  %532 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %533 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %534 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %533, align 8
  %535 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %534, i64 5
  %536 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %535, align 8
  call void %536(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %532) #4
  br label %573

537:                                              ; preds = %525
  %538 = bitcast %"class.v8::Value"* %529 to i64*
  %539 = load i64, i64* %538, align 8
  %540 = and i64 %539, 3
  %541 = icmp eq i64 %540, 1
  br i1 %541, label %542, label %559

542:                                              ; preds = %537
  %543 = add i64 %539, -1
  %544 = inttoptr i64 %543 to i32*
  %545 = load i32, i32* %544, align 4
  %546 = and i64 %539, -4294967296
  %547 = zext i32 %545 to i64
  %548 = or i64 %546, %547
  %549 = add i64 %548, 7
  %550 = inttoptr i64 %549 to i16*
  %551 = load i16, i16* %550, align 2
  %552 = icmp eq i16 %551, 67
  br i1 %552, label %553, label %559

553:                                              ; preds = %542
  %554 = add i64 %539, 23
  %555 = inttoptr i64 %554 to i32*
  %556 = load i32, i32* %555, align 4
  %557 = and i32 %556, -2
  %558 = icmp eq i32 %557, 10
  br i1 %558, label %573, label %559

559:                                              ; preds = %542, %537, %553
  %560 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %529) #4
  br i1 %560, label %561, label %564, !prof !2

561:                                              ; preds = %559
  %562 = bitcast %"class.v8::Value"* %529 to %"class.v8::Number"*
  %563 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %562) #4
  br label %566

564:                                              ; preds = %559
  %565 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %529, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %566

566:                                              ; preds = %561, %564
  %567 = phi double [ %563, %561 ], [ %565, %564 ]
  %568 = load i32, i32* %34, align 8
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %570, label %573

570:                                              ; preds = %566
  %571 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 22
  store double %567, double* %571, align 8
  %572 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %2, i64 0, i32 11
  store i8 1, i8* %572, align 2
  br label %573

573:                                              ; preds = %566, %518, %470, %422, %374, %326, %278, %230, %182, %134, %85, %99, %195, %291, %387, %483, %553, %570, %531, %435, %339, %243, %147, %50
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %44) #4
  br label %574

574:                                              ; preds = %31, %23, %23, %4, %573, %30
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink17V8DOMMatrix2DInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_15DOMMatrix2DInitERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::DOMMatrix2DInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink13DOMMatrixInit8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::DOMMatrixInit"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #4
  %5 = tail call zeroext i1 @_ZN5blink17toV8DOMMatrixInitEPKNS_13DOMMatrixInitEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::DOMMatrixInit"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17toV8DOMMatrixInitEPKNS_13DOMMatrixInitEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::DOMMatrixInit"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZN5blink19toV8DOMMatrix2DInitEPKNS_15DOMMatrix2DInitEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::DOMMatrix2DInit"* %5, %"class.v8::Object"* %1, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #4
  br i1 %6, label %7, label %212

7:                                                ; preds = %4
  %8 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %9 = add i64 %8, 8
  %10 = inttoptr i64 %9 to %"class.blink::V8PerIsolateData"**
  %11 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %10, align 8
  %12 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %11, i8* bitcast ([11 x i8*]* @_ZZN5blinkL26eternalV8DOMMatrixInitKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.309"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.309"*)) #4
  %13 = extractvalue { i64, %"class.v8::Eternal"* } %12, 1
  %14 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #4
  %15 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 12
  %20 = load i8, i8* %19, align 1, !range !3
  %21 = icmp eq i8 %20, 0
  %22 = select i1 %21, i64 192, i64 184
  %23 = add i64 %22, %8
  %24 = inttoptr i64 %23 to %"class.v8::Value"*
  %25 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 0, i32 0
  %26 = load %"class.v8::Name"*, %"class.v8::Name"** %25, align 8
  %27 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %26, %"class.v8::Value"* %24) #4
  %28 = trunc i16 %27 to i8
  %29 = icmp ne i8 %28, 0
  %30 = icmp ugt i16 %27, 255
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %212

32:                                               ; preds = %7, %18
  %33 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 2
  %34 = load i8, i8* %33, align 1, !range !3
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 13
  %38 = load double, double* %37, align 8
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi double [ %38, %36 ], [ 0.000000e+00, %32 ]
  %41 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %40) #4
  %42 = bitcast %"class.v8::Number"* %41 to %"class.v8::Value"*
  %43 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 1, i32 0
  %44 = load %"class.v8::Name"*, %"class.v8::Name"** %43, align 8
  %45 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %44, %"class.v8::Value"* %42) #4
  %46 = trunc i16 %45 to i8
  %47 = icmp ne i8 %46, 0
  %48 = icmp ugt i16 %45, 255
  %49 = and i1 %48, %47
  br i1 %49, label %50, label %212

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 3
  %52 = load i8, i8* %51, align 2, !range !3
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 14
  %56 = load double, double* %55, align 8
  br label %57

57:                                               ; preds = %50, %54
  %58 = phi double [ %56, %54 ], [ 0.000000e+00, %50 ]
  %59 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %58) #4
  %60 = bitcast %"class.v8::Number"* %59 to %"class.v8::Value"*
  %61 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 2, i32 0
  %62 = load %"class.v8::Name"*, %"class.v8::Name"** %61, align 8
  %63 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %62, %"class.v8::Value"* %60) #4
  %64 = trunc i16 %63 to i8
  %65 = icmp ne i8 %64, 0
  %66 = icmp ugt i16 %63, 255
  %67 = and i1 %66, %65
  br i1 %67, label %68, label %212

68:                                               ; preds = %57
  %69 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 4
  %70 = load i8, i8* %69, align 1, !range !3
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 15
  %74 = load double, double* %73, align 8
  br label %75

75:                                               ; preds = %68, %72
  %76 = phi double [ %74, %72 ], [ 0.000000e+00, %68 ]
  %77 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %76) #4
  %78 = bitcast %"class.v8::Number"* %77 to %"class.v8::Value"*
  %79 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 3, i32 0
  %80 = load %"class.v8::Name"*, %"class.v8::Name"** %79, align 8
  %81 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %80, %"class.v8::Value"* %78) #4
  %82 = trunc i16 %81 to i8
  %83 = icmp ne i8 %82, 0
  %84 = icmp ugt i16 %81, 255
  %85 = and i1 %84, %83
  br i1 %85, label %86, label %212

86:                                               ; preds = %75
  %87 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 5
  %88 = load i8, i8* %87, align 4, !range !3
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 16
  %92 = load double, double* %91, align 8
  br label %93

93:                                               ; preds = %86, %90
  %94 = phi double [ %92, %90 ], [ 0.000000e+00, %86 ]
  %95 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %94) #4
  %96 = bitcast %"class.v8::Number"* %95 to %"class.v8::Value"*
  %97 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 4, i32 0
  %98 = load %"class.v8::Name"*, %"class.v8::Name"** %97, align 8
  %99 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %98, %"class.v8::Value"* %96) #4
  %100 = trunc i16 %99 to i8
  %101 = icmp ne i8 %100, 0
  %102 = icmp ugt i16 %99, 255
  %103 = and i1 %102, %101
  br i1 %103, label %104, label %212

104:                                              ; preds = %93
  %105 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 6
  %106 = load i8, i8* %105, align 1, !range !3
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 17
  %110 = load double, double* %109, align 8
  br label %111

111:                                              ; preds = %104, %108
  %112 = phi double [ %110, %108 ], [ 0.000000e+00, %104 ]
  %113 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %112) #4
  %114 = bitcast %"class.v8::Number"* %113 to %"class.v8::Value"*
  %115 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 5, i32 0
  %116 = load %"class.v8::Name"*, %"class.v8::Name"** %115, align 8
  %117 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %116, %"class.v8::Value"* %114) #4
  %118 = trunc i16 %117 to i8
  %119 = icmp ne i8 %118, 0
  %120 = icmp ugt i16 %117, 255
  %121 = and i1 %120, %119
  br i1 %121, label %122, label %212

122:                                              ; preds = %111
  %123 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 7
  %124 = load i8, i8* %123, align 2, !range !3
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 18
  %128 = load double, double* %127, align 8
  br label %129

129:                                              ; preds = %122, %126
  %130 = phi double [ %128, %126 ], [ 0.000000e+00, %122 ]
  %131 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %130) #4
  %132 = bitcast %"class.v8::Number"* %131 to %"class.v8::Value"*
  %133 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 6, i32 0
  %134 = load %"class.v8::Name"*, %"class.v8::Name"** %133, align 8
  %135 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %134, %"class.v8::Value"* %132) #4
  %136 = trunc i16 %135 to i8
  %137 = icmp ne i8 %136, 0
  %138 = icmp ugt i16 %135, 255
  %139 = and i1 %138, %137
  br i1 %139, label %140, label %212

140:                                              ; preds = %129
  %141 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 8
  %142 = load i8, i8* %141, align 1, !range !3
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %147, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 19
  %146 = load double, double* %145, align 8
  br label %147

147:                                              ; preds = %140, %144
  %148 = phi double [ %146, %144 ], [ 1.000000e+00, %140 ]
  %149 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %148) #4
  %150 = bitcast %"class.v8::Number"* %149 to %"class.v8::Value"*
  %151 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 7, i32 0
  %152 = load %"class.v8::Name"*, %"class.v8::Name"** %151, align 8
  %153 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %152, %"class.v8::Value"* %150) #4
  %154 = trunc i16 %153 to i8
  %155 = icmp ne i8 %154, 0
  %156 = icmp ugt i16 %153, 255
  %157 = and i1 %156, %155
  br i1 %157, label %158, label %212

158:                                              ; preds = %147
  %159 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 9
  %160 = load i8, i8* %159, align 8, !range !3
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %165, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 20
  %164 = load double, double* %163, align 8
  br label %165

165:                                              ; preds = %158, %162
  %166 = phi double [ %164, %162 ], [ 0.000000e+00, %158 ]
  %167 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %166) #4
  %168 = bitcast %"class.v8::Number"* %167 to %"class.v8::Value"*
  %169 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 8, i32 0
  %170 = load %"class.v8::Name"*, %"class.v8::Name"** %169, align 8
  %171 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %170, %"class.v8::Value"* %168) #4
  %172 = trunc i16 %171 to i8
  %173 = icmp ne i8 %172, 0
  %174 = icmp ugt i16 %171, 255
  %175 = and i1 %174, %173
  br i1 %175, label %176, label %212

176:                                              ; preds = %165
  %177 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 10
  %178 = load i8, i8* %177, align 1, !range !3
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 21
  %182 = load double, double* %181, align 8
  br label %183

183:                                              ; preds = %176, %180
  %184 = phi double [ %182, %180 ], [ 0.000000e+00, %176 ]
  %185 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %184) #4
  %186 = bitcast %"class.v8::Number"* %185 to %"class.v8::Value"*
  %187 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 9, i32 0
  %188 = load %"class.v8::Name"*, %"class.v8::Name"** %187, align 8
  %189 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %188, %"class.v8::Value"* %186) #4
  %190 = trunc i16 %189 to i8
  %191 = icmp ne i8 %190, 0
  %192 = icmp ugt i16 %189, 255
  %193 = and i1 %192, %191
  br i1 %193, label %194, label %212

194:                                              ; preds = %183
  %195 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 11
  %196 = load i8, i8* %195, align 2, !range !3
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 22
  %200 = load double, double* %199, align 8
  br label %201

201:                                              ; preds = %194, %198
  %202 = phi double [ %200, %198 ], [ 1.000000e+00, %194 ]
  %203 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %202) #4
  %204 = bitcast %"class.v8::Number"* %203 to %"class.v8::Value"*
  %205 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 10, i32 0
  %206 = load %"class.v8::Name"*, %"class.v8::Name"** %205, align 8
  %207 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %206, %"class.v8::Value"* %204) #4
  %208 = trunc i16 %207 to i8
  %209 = icmp ne i8 %208, 0
  %210 = icmp ugt i16 %207, 255
  %211 = and i1 %210, %209
  br label %212

212:                                              ; preds = %18, %57, %93, %129, %165, %183, %201, %147, %111, %75, %39, %4
  %213 = phi i1 [ false, %4 ], [ false, %18 ], [ false, %39 ], [ false, %57 ], [ false, %75 ], [ false, %93 ], [ false, %111 ], [ false, %129 ], [ false, %147 ], [ false, %165 ], [ %211, %201 ], [ false, %183 ]
  ret i1 %213
}

declare zeroext i1 @_ZN5blink19toV8DOMMatrix2DInitEPKNS_15DOMMatrix2DInitEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::DOMMatrix2DInit"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrixInit"* @_ZN5blink17NativeValueTraitsINS_13DOMMatrixInitEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 216) #4
  %5 = bitcast i8* %4 to %"class.blink::DOMMatrixInit"*
  tail call void @_ZN5blink13DOMMatrixInitC1Ev(%"class.blink::DOMMatrixInit"* %5) #4
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink15V8DOMMatrixInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::DOMMatrixInit"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::DOMMatrixInit"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.309"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"*) local_unnamed_addr #1

declare double @_ZNK2v86Number5ValueEv(%"class.v8::Number"*) local_unnamed_addr #1

declare double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink13DOMMatrixInitC1Ev(%"class.blink::DOMMatrixInit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #4
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #4
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #4
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #4
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #4
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #4
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %40, i8* %41) #4
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #4
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #4
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !4

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #4
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
