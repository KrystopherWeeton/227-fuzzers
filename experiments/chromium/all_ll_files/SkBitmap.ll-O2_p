; ModuleID = '../../third_party/skia/src/core/SkBitmap.cpp'
source_filename = "../../third_party/skia/src/core/SkBitmap.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.16 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type <{ %class.SkRefCnt.base, i32, i32, [4 x i8], i8*, i64, %"struct.std::__1::atomic.1", [4 x i8], %"class.SkIDChangeListener::List", %"struct.std::__1::atomic.11", i8, [6 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.11", [3 x i8] }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.15, i32, i32 }
%class.sk_sp.15 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.16 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp.15, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon, i8*, i64, i32, i32, i8, i8 }>
%union.anon = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%struct.SkSize = type { float, float }
%class.SkCachedData = type <{ i32 (...)**, %class.SkMutex, %union.anon, i8*, i64, i32, i32, i8, i8, [6 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.SkRect = type { float, float, float, float }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.SkBitmap::HeapAllocator" = type { %"class.SkBitmap::Allocator.base", [4 x i8] }
%"class.SkBitmap::Allocator.base" = type { %class.SkRefCnt.base }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%struct.SkWritePixelsRec = type { i8*, i64, %struct.SkImageInfo, i32, i32 }
%class.SkPaint = type <{ %class.sk_sp.19, %class.sk_sp.20, %class.sk_sp.21, %class.sk_sp.22, %class.sk_sp.23, %struct.SkRGBA4f, float, float, %union.anon.24, [4 x i8] }>
%class.sk_sp.19 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.20 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.21 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.22 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.23 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.24 = type { %struct.anon }
%struct.anon = type { i32 }
%struct.SkIPoint = type { i32, i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkMaskFilterBase = type { %class.SkMaskFilter.base, [4 x i8] }
%class.SkMaskFilter.base = type { %class.SkFlattenable.base }
%class.sk_sp.26 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN8SkBitmap13HeapAllocatorD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@.str = private unnamed_addr constant [45 x i8] c"../../third_party/skia/src/core/SkBitmap.cpp\00", align 1
@.str.1 = private unnamed_addr constant [77 x i8] c"SkBitmap::tryAllocPixels failed ColorType:%d AlphaType:%d [w:%d h:%d] rb:%zu\00", align 1
@.str.2 = private unnamed_addr constant [54 x i8] c"extractAlpha failed to allocate (%d,%d) alpha bitmap\0A\00", align 1
@_ZTVN8SkBitmap13HeapAllocatorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%"class.SkBitmap::HeapAllocator"*)* @_ZN8SkBitmap13HeapAllocatorD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.SkBitmap::HeapAllocator"*, %class.SkBitmap*)* @_ZN8SkBitmap13HeapAllocator13allocPixelRefEPS_ to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.4 = private unnamed_addr constant [39 x i8] c"this->tryAllocPixelsFlags(info, flags)\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"this->tryAllocPixels(info, rowBytes)\00", align 1

@_ZN8SkBitmapC1Ev = hidden unnamed_addr alias void (%class.SkBitmap*), void (%class.SkBitmap*)* @_ZN8SkBitmapC2Ev
@_ZN8SkBitmapC1ERKS_ = hidden unnamed_addr alias void (%class.SkBitmap*, %class.SkBitmap*), void (%class.SkBitmap*, %class.SkBitmap*)* @_ZN8SkBitmapC2ERKS_
@_ZN8SkBitmapC1EOS_ = hidden unnamed_addr alias void (%class.SkBitmap*, %class.SkBitmap*), void (%class.SkBitmap*, %class.SkBitmap*)* @_ZN8SkBitmapC2EOS_
@_ZN8SkBitmapD1Ev = hidden unnamed_addr alias void (%class.SkBitmap*), void (%class.SkBitmap*)* @_ZN8SkBitmapD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmapC2Ev(%class.SkBitmap* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkBitmap* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmapC2ERKS_(%class.SkBitmap* nocapture, %class.SkBitmap* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %5 = load %class.SkPixelRef*, %class.SkPixelRef** %4, align 8
  %6 = icmp eq %class.SkPixelRef* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkPixelRef* %5, %class.SkPixelRef** %3, align 8
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1
  %13 = bitcast %class.SkPixmap* %11 to i8*
  %14 = bitcast %class.SkPixmap* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false) #10
  %15 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %17 = load %class.SkColorSpace*, %class.SkColorSpace** %16, align 8
  %18 = icmp eq %class.SkColorSpace* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %10, %19
  store %class.SkColorSpace* %17, %class.SkColorSpace** %15, align 8
  %23 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %24 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %25 = bitcast i32* %24 to i64*
  %26 = bitcast i32* %23 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1
  %29 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1
  %30 = bitcast %struct.SkISize* %29 to i64*
  %31 = bitcast %struct.SkISize* %28 to i64*
  %32 = load i64, i64* %30, align 8
  store i64 %32, i64* %31, align 8
  %33 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %34 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 2, i32 0
  %35 = load %class.SkMipmap*, %class.SkMipmap** %34, align 8
  %36 = icmp eq %class.SkMipmap* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %22
  %38 = bitcast %class.SkMipmap* %35 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData* nonnull %38, i1 zeroext false) #10
  br label %39

39:                                               ; preds = %22, %37
  store %class.SkMipmap* %35, %class.SkMipmap** %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmapC2EOS_(%class.SkBitmap* nocapture, %class.SkBitmap* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %4 = bitcast %class.SkBitmap* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %3, align 8
  %6 = bitcast %class.SkBitmap* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1
  %9 = bitcast %class.SkPixmap* %7 to i8*
  %10 = bitcast %class.SkPixmap* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false) #10
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2
  %13 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %struct.SkImageInfo* %12 to i64*
  %15 = load i64, i64* %14, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %13, align 8
  %16 = bitcast %struct.SkImageInfo* %11 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %19 = bitcast i32* %18 to i64*
  %20 = bitcast i32* %17 to i64*
  %21 = load i64, i64* %19, align 8
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1
  %23 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1
  %24 = bitcast %struct.SkISize* %23 to i64*
  %25 = bitcast %struct.SkISize* %22 to i64*
  %26 = load i64, i64* %24, align 8
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2
  %28 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 2
  %29 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %28, i64 0, i32 0
  %30 = bitcast %class.sk_sp.16* %28 to i64*
  %31 = load i64, i64* %30, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %29, align 8
  %32 = bitcast %class.sk_sp.16* %27 to i64*
  store i64 %31, i64* %32, align 8
  tail call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %8) #10
  ret void
}

declare void @_ZN8SkPixmap5resetEv(%class.SkPixmap*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmapD2Ev(%class.SkBitmap* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %3 = load %class.SkMipmap*, %class.SkMipmap** %2, align 8
  %4 = icmp eq %class.SkMipmap* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.SkMipmap* %3 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %6, i1 zeroext false) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %9 = load %class.SkColorSpace*, %class.SkColorSpace** %8, align 8
  %10 = icmp eq %class.SkColorSpace* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = bitcast %class.SkColorSpace* %9 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %7, %11, %15
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %19 = load %class.SkPixelRef*, %class.SkPixelRef** %18, align 8
  %20 = icmp eq %class.SkPixelRef* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkPixelRef* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkPixelRef* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  tail call void %30(%class.SkRefCntBase* nonnull %26) #10
  br label %31

31:                                               ; preds = %17, %21, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* returned, %class.SkBitmap* readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.SkBitmap* %0, %1
  br i1 %3, label %68, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %6 = load %class.SkPixelRef*, %class.SkPixelRef** %5, align 8
  %7 = icmp eq %class.SkPixelRef* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %8, %4
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %13 = load %class.SkPixelRef*, %class.SkPixelRef** %12, align 8
  store %class.SkPixelRef* %6, %class.SkPixelRef** %12, align 8
  %14 = icmp eq %class.SkPixelRef* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkPixelRef* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkPixelRef* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #10
  br label %25

25:                                               ; preds = %19, %15, %11
  %26 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1
  %27 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  %28 = bitcast %class.SkPixmap* %27 to i8*
  %29 = bitcast %class.SkPixmap* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #10
  %30 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %31 = load %class.SkColorSpace*, %class.SkColorSpace** %30, align 8
  %32 = icmp eq %class.SkColorSpace* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  br label %36

36:                                               ; preds = %33, %25
  %37 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %38 = load %class.SkColorSpace*, %class.SkColorSpace** %37, align 8
  store %class.SkColorSpace* %31, %class.SkColorSpace** %37, align 8
  %39 = icmp eq %class.SkColorSpace* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = bitcast %class.SkColorSpace* %38 to i8*
  tail call void @_ZdlPv(i8* %45) #11
  br label %46

46:                                               ; preds = %44, %40, %36
  %47 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %48 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %49 = bitcast i32* %48 to i64*
  %50 = bitcast i32* %47 to i64*
  %51 = load i64, i64* %49, align 8
  store i64 %51, i64* %50, align 8
  %52 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1
  %53 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1
  %54 = bitcast %struct.SkISize* %53 to i64*
  %55 = bitcast %struct.SkISize* %52 to i64*
  %56 = load i64, i64* %54, align 8
  store i64 %56, i64* %55, align 8
  %57 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 2, i32 0
  %58 = load %class.SkMipmap*, %class.SkMipmap** %57, align 8
  %59 = icmp eq %class.SkMipmap* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %46
  %61 = bitcast %class.SkMipmap* %58 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData* nonnull %61, i1 zeroext false) #10
  br label %62

62:                                               ; preds = %60, %46
  %63 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %64 = load %class.SkMipmap*, %class.SkMipmap** %63, align 8
  store %class.SkMipmap* %58, %class.SkMipmap** %63, align 8
  %65 = icmp eq %class.SkMipmap* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %62
  %67 = bitcast %class.SkMipmap* %64 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %67, i1 zeroext false) #10
  br label %68

68:                                               ; preds = %66, %62, %2
  ret %class.SkBitmap* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* returned, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.SkBitmap* %0, %1
  br i1 %3, label %65, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %6 = bitcast %class.SkBitmap* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %5, align 8
  %8 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %9 = load %class.SkPixelRef*, %class.SkPixelRef** %8, align 8
  %10 = bitcast %class.SkBitmap* %0 to i64*
  store i64 %7, i64* %10, align 8
  %11 = icmp eq %class.SkPixelRef* %9, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = bitcast %class.SkPixelRef* %9 to %class.SkRefCntBase*
  %18 = bitcast %class.SkPixelRef* %9 to void (%class.SkRefCntBase*)***
  %19 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, i64 2
  %21 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, align 8
  tail call void %21(%class.SkRefCntBase* nonnull %17) #10
  br label %22

22:                                               ; preds = %4, %12, %16
  %23 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1
  %24 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  %25 = bitcast %class.SkPixmap* %24 to i8*
  %26 = bitcast %class.SkPixmap* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false) #10
  %27 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2
  %28 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2
  %29 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %28, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %struct.SkImageInfo* %28 to i64*
  %31 = load i64, i64* %30, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %29, align 8
  %32 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %27, i64 0, i32 0, i32 0, i32 0
  %33 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8
  %34 = bitcast %struct.SkImageInfo* %27 to i64*
  store i64 %31, i64* %34, align 8
  %35 = icmp eq %class.SkColorSpace* %33, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %22
  %37 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = bitcast %class.SkColorSpace* %33 to i8*
  tail call void @_ZdlPv(i8* %41) #11
  br label %42

42:                                               ; preds = %22, %36, %40
  %43 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %44 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %45 = bitcast i32* %44 to i64*
  %46 = bitcast i32* %43 to i64*
  %47 = load i64, i64* %45, align 8
  store i64 %47, i64* %46, align 8
  %48 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1
  %49 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1
  %50 = bitcast %struct.SkISize* %49 to i64*
  %51 = bitcast %struct.SkISize* %48 to i64*
  %52 = load i64, i64* %50, align 8
  store i64 %52, i64* %51, align 8
  %53 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 2
  %54 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2
  %55 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %53, i64 0, i32 0
  %56 = bitcast %class.sk_sp.16* %53 to i64*
  %57 = load i64, i64* %56, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %55, align 8
  %58 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %54, i64 0, i32 0
  %59 = load %class.SkMipmap*, %class.SkMipmap** %58, align 8
  %60 = bitcast %class.sk_sp.16* %54 to i64*
  store i64 %57, i64* %60, align 8
  %61 = icmp eq %class.SkMipmap* %59, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %42
  %63 = bitcast %class.SkMipmap* %59 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %63, i1 zeroext false) #10
  br label %64

64:                                               ; preds = %42, %62
  tail call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %23) #10
  br label %65

65:                                               ; preds = %2, %64
  ret %class.SkBitmap* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmap4swapERS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkBitmap, align 8
  %4 = bitcast %class.SkBitmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #10
  %5 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %6 = bitcast %class.SkBitmap* %0 to i64*
  %7 = load i64, i64* %6, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %5, align 8
  %8 = bitcast %class.SkBitmap* %3 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1
  %10 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  %11 = bitcast %class.SkPixmap* %9 to i8*
  %12 = bitcast %class.SkPixmap* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false) #10
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 2
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %struct.SkImageInfo* %14 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %15, align 8
  %18 = bitcast %struct.SkImageInfo* %13 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %18, align 8
  %19 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 2, i32 1
  %20 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1
  %21 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %22 = bitcast %struct.SkISize* %20 to <2 x i64>*
  %23 = load <2 x i64>, <2 x i64>* %22, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %21, align 8
  %24 = bitcast %struct.SkISize* %19 to <2 x i64>*
  store <2 x i64> %23, <2 x i64>* %24, align 8
  tail call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %10) #10
  %25 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %1) #10
  %26 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %1, %class.SkBitmap* nonnull dereferenceable(56) %3) #10
  %27 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 2, i32 0
  %28 = load %class.SkMipmap*, %class.SkMipmap** %27, align 8
  %29 = icmp eq %class.SkMipmap* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %2
  %31 = bitcast %class.SkMipmap* %28 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %31, i1 zeroext false) #10
  br label %32

32:                                               ; preds = %30, %2
  %33 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %33, align 8
  %35 = icmp eq %class.SkColorSpace* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = bitcast %class.SkColorSpace* %34 to i8*
  call void @_ZdlPv(i8* %41) #11
  br label %42

42:                                               ; preds = %40, %36, %32
  %43 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 0, i32 0
  %44 = load %class.SkPixelRef*, %class.SkPixelRef** %43, align 8
  %45 = icmp eq %class.SkPixelRef* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %44, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkPixelRef* %44 to %class.SkRefCntBase*
  %52 = bitcast %class.SkPixelRef* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  call void %55(%class.SkRefCntBase* nonnull %51) #10
  br label %56

56:                                               ; preds = %42, %46, %50
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmap5resetEv(%class.SkBitmap*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPixelRef*, %class.SkPixelRef** %2, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %2, align 8
  %4 = icmp eq %class.SkPixelRef* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %class.SkPixelRef* %3 to %class.SkRefCntBase*
  %11 = bitcast %class.SkPixelRef* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #10
  br label %15

15:                                               ; preds = %1, %5, %9
  %16 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  tail call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %16) #10
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %18 = load %class.SkMipmap*, %class.SkMipmap** %17, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %17, align 8
  %19 = icmp eq %class.SkMipmap* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = bitcast %class.SkMipmap* %18 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %21, i1 zeroext false) #10
  br label %22

22:                                               ; preds = %15, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8SkBitmap9getBoundsEP6SkRect(%class.SkBitmap* nocapture readonly, %struct.SkRect* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1
  %4 = bitcast %struct.SkISize* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = lshr i64 %5, 32
  %8 = trunc i64 %7 to i32
  %9 = sitofp i32 %6 to float
  %10 = insertelement <2 x float> undef, float %9, i32 0
  %11 = sitofp i32 %8 to float
  %12 = insertelement <2 x float> %10, float %11, i32 1
  %13 = bitcast %struct.SkRect* %1 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %13, align 4
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %15 = bitcast float* %14 to <2 x float>*
  store <2 x float> %12, <2 x float>* %15, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK8SkBitmap9getBoundsEP7SkIRect(%class.SkBitmap* nocapture readonly, %struct.SkIRect* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %4 to i64
  %10 = or i64 %8, %9
  %11 = bitcast %struct.SkIRect* %1 to i64*
  store i64 0, i64* %11, align 4
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %13 = bitcast i32* %12 to i64*
  store i64 %10, i64* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #10
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %4, align 4
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = call zeroext i1 @_Z28SkColorTypeValidateAlphaType11SkColorType11SkAlphaTypePS0_(i32 %10, i32 %8, i32* nonnull %4) #10
  br i1 %11, label %33, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %14 = load %class.SkPixelRef*, %class.SkPixelRef** %13, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %13, align 8
  %15 = icmp eq %class.SkPixelRef* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %class.SkPixelRef* %14 to %class.SkRefCntBase*
  %22 = bitcast %class.SkPixelRef* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  call void %25(%class.SkRefCntBase* nonnull %21) #10
  br label %26

26:                                               ; preds = %20, %16, %12
  %27 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %27) #10
  %28 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %29 = load %class.SkMipmap*, %class.SkMipmap** %28, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %28, align 8
  %30 = icmp eq %class.SkMipmap* %29, null
  br i1 %30, label %204, label %31

31:                                               ; preds = %26
  %32 = bitcast %class.SkMipmap* %29 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %32, i1 zeroext false) #10
  br label %204

33:                                               ; preds = %3
  %34 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %38 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %37) #10
  %39 = sext i32 %38 to i64
  %40 = mul nsw i64 %39, %36
  %41 = add nsw i64 %40, 2147483648
  %42 = icmp ult i64 %41, 4294967296
  br i1 %42, label %64, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %45 = load %class.SkPixelRef*, %class.SkPixelRef** %44, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %44, align 8
  %46 = icmp eq %class.SkPixelRef* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = bitcast %class.SkPixelRef* %45 to %class.SkRefCntBase*
  %53 = bitcast %class.SkPixelRef* %45 to void (%class.SkRefCntBase*)***
  %54 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, i64 2
  %56 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, align 8
  call void %56(%class.SkRefCntBase* nonnull %52) #10
  br label %57

57:                                               ; preds = %51, %47, %43
  %58 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %58) #10
  %59 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %60 = load %class.SkMipmap*, %class.SkMipmap** %59, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %59, align 8
  %61 = icmp eq %class.SkMipmap* %60, null
  br i1 %61, label %204, label %62

62:                                               ; preds = %57
  %63 = bitcast %class.SkMipmap* %60 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %63, i1 zeroext false) #10
  br label %204

64:                                               ; preds = %33
  %65 = icmp ult i64 %2, 2147483648
  br i1 %65, label %87, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %68 = load %class.SkPixelRef*, %class.SkPixelRef** %67, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %67, align 8
  %69 = icmp eq %class.SkPixelRef* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %68, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = bitcast %class.SkPixelRef* %68 to %class.SkRefCntBase*
  %76 = bitcast %class.SkPixelRef* %68 to void (%class.SkRefCntBase*)***
  %77 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %76, align 8
  %78 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, i64 2
  %79 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, align 8
  call void %79(%class.SkRefCntBase* nonnull %75) #10
  br label %80

80:                                               ; preds = %74, %70, %66
  %81 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %81) #10
  %82 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %83 = load %class.SkMipmap*, %class.SkMipmap** %82, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %82, align 8
  %84 = icmp eq %class.SkMipmap* %83, null
  br i1 %84, label %204, label %85

85:                                               ; preds = %80
  %86 = bitcast %class.SkMipmap* %83 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %86, i1 zeroext false) #10
  br label %204

87:                                               ; preds = %64
  %88 = load i32, i32* %34, align 4
  %89 = icmp slt i32 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %94, label %115

94:                                               ; preds = %90, %87
  %95 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %96 = load %class.SkPixelRef*, %class.SkPixelRef** %95, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %95, align 8
  %97 = icmp eq %class.SkPixelRef* %96, null
  br i1 %97, label %108, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %96, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %108

102:                                              ; preds = %98
  %103 = bitcast %class.SkPixelRef* %96 to %class.SkRefCntBase*
  %104 = bitcast %class.SkPixelRef* %96 to void (%class.SkRefCntBase*)***
  %105 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %104, align 8
  %106 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, i64 2
  %107 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, align 8
  call void %107(%class.SkRefCntBase* nonnull %103) #10
  br label %108

108:                                              ; preds = %102, %98, %94
  %109 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %109) #10
  %110 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %111 = load %class.SkMipmap*, %class.SkMipmap** %110, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %110, align 8
  %112 = icmp eq %class.SkMipmap* %111, null
  br i1 %112, label %204, label %113

113:                                              ; preds = %108
  %114 = bitcast %class.SkMipmap* %111 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %114, i1 zeroext false) #10
  br label %204

115:                                              ; preds = %90
  %116 = load i32, i32* %9, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %153, label %118

118:                                              ; preds = %115
  %119 = icmp eq i64 %2, 0
  br i1 %119, label %153, label %120

120:                                              ; preds = %118
  %121 = sext i32 %88 to i64
  %122 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %37) #10
  %123 = sext i32 %122 to i64
  %124 = mul nsw i64 %123, %121
  %125 = icmp ugt i64 %124, %2
  br i1 %125, label %132, label %126

126:                                              ; preds = %120
  %127 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %37) #10
  %128 = zext i32 %127 to i64
  %129 = shl i64 -1, %128
  %130 = and i64 %129, %2
  %131 = icmp eq i64 %130, %2
  br i1 %131, label %153, label %132

132:                                              ; preds = %120, %126
  %133 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %134 = load %class.SkPixelRef*, %class.SkPixelRef** %133, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %133, align 8
  %135 = icmp eq %class.SkPixelRef* %134, null
  br i1 %135, label %146, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %134, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 -1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %146

140:                                              ; preds = %136
  %141 = bitcast %class.SkPixelRef* %134 to %class.SkRefCntBase*
  %142 = bitcast %class.SkPixelRef* %134 to void (%class.SkRefCntBase*)***
  %143 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %142, align 8
  %144 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %143, i64 2
  %145 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %144, align 8
  call void %145(%class.SkRefCntBase* nonnull %141) #10
  br label %146

146:                                              ; preds = %140, %136, %132
  %147 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %147) #10
  %148 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %149 = load %class.SkMipmap*, %class.SkMipmap** %148, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %148, align 8
  %150 = icmp eq %class.SkMipmap* %149, null
  br i1 %150, label %204, label %151

151:                                              ; preds = %146
  %152 = bitcast %class.SkMipmap* %149 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %152, i1 zeroext false) #10
  br label %204

153:                                              ; preds = %118, %115, %126
  %154 = phi i64 [ %2, %126 ], [ 0, %115 ], [ %40, %118 ]
  %155 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %156 = load %class.SkPixelRef*, %class.SkPixelRef** %155, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %155, align 8
  %157 = icmp eq %class.SkPixelRef* %156, null
  br i1 %157, label %168, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %156, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = atomicrmw add i32* %159, i32 -1 acq_rel
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %168

162:                                              ; preds = %158
  %163 = bitcast %class.SkPixelRef* %156 to %class.SkRefCntBase*
  %164 = bitcast %class.SkPixelRef* %156 to void (%class.SkRefCntBase*)***
  %165 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %164, align 8
  %166 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %165, i64 2
  %167 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %166, align 8
  call void %167(%class.SkRefCntBase* nonnull %163) #10
  br label %168

168:                                              ; preds = %153, %158, %162
  %169 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  %170 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #10
  %171 = load i32, i32* %4, align 4
  %172 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %173 = bitcast %struct.SkISize* %172 to i64*
  %174 = load i64, i64* %173, align 8, !noalias !2
  %175 = load i32, i32* %9, align 8, !noalias !5
  %176 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %177 = load %class.SkColorSpace*, %class.SkColorSpace** %176, align 8, !noalias !8
  %178 = icmp eq %class.SkColorSpace* %177, null
  br i1 %178, label %182, label %179

179:                                              ; preds = %168
  %180 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = atomicrmw add i32* %180, i32 1 monotonic, !noalias !8
  br label %182

182:                                              ; preds = %168, %179
  %183 = ptrtoint %class.SkColorSpace* %177 to i64
  %184 = zext i32 %175 to i64
  %185 = zext i32 %171 to i64
  %186 = shl nuw i64 %185, 32
  %187 = or i64 %186, %184
  %188 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 %183, i64* %188, align 8, !alias.scope !11
  %189 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 1
  %190 = bitcast i32* %189 to i64*
  store i64 %187, i64* %190, align 8, !alias.scope !11
  %191 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %192 = bitcast %struct.SkISize* %191 to i64*
  store i64 %174, i64* %192, align 8, !alias.scope !11
  %193 = and i64 %154, 4294967295
  call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %169, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i8* null, i64 %193) #10
  %194 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %195 = load %class.SkColorSpace*, %class.SkColorSpace** %194, align 8
  %196 = icmp eq %class.SkColorSpace* %195, null
  br i1 %196, label %203, label %197

197:                                              ; preds = %182
  %198 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %195, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = atomicrmw add i32* %198, i32 -1 acq_rel
  %200 = icmp eq i32 %199, 1
  br i1 %200, label %201, label %203

201:                                              ; preds = %197
  %202 = bitcast %class.SkColorSpace* %195 to i8*
  call void @_ZdlPv(i8* %202) #11
  br label %203

203:                                              ; preds = %182, %197, %201
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #10
  br label %204

204:                                              ; preds = %151, %146, %113, %108, %85, %80, %62, %57, %31, %26, %203
  %205 = phi i1 [ true, %203 ], [ false, %26 ], [ false, %31 ], [ false, %57 ], [ false, %62 ], [ false, %80 ], [ false, %85 ], [ false, %108 ], [ false, %113 ], [ false, %146 ], [ false, %151 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10
  ret i1 %205
}

declare zeroext i1 @_Z28SkColorTypeValidateAlphaType11SkColorType11SkAlphaTypePS0_(i32, i32, i32*) local_unnamed_addr #1

declare void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkBitmap12setAlphaTypeE11SkAlphaType(%class.SkBitmap*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.SkImageInfo, align 8
  store i32 %1, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = call zeroext i1 @_Z28SkColorTypeValidateAlphaType11SkColorType11SkAlphaTypePS0_(i32 %6, i32 %1, i32* nonnull %3) #10
  br i1 %7, label %8, label %52

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %3, align 4
  %12 = icmp eq i32 %10, %11
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1
  %19 = bitcast %struct.SkISize* %18 to i64*
  %20 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  %21 = load i64, i64* %19, align 8, !noalias !14
  %22 = load i32, i32* %5, align 8, !noalias !17
  %23 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %24 = load %class.SkColorSpace*, %class.SkColorSpace** %23, align 8, !noalias !20
  %25 = icmp eq %class.SkColorSpace* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %13
  %27 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 1 monotonic, !noalias !20
  br label %29

29:                                               ; preds = %13, %26
  %30 = ptrtoint %class.SkColorSpace* %24 to i64
  %31 = zext i32 %22 to i64
  %32 = zext i32 %11 to i64
  %33 = shl nuw i64 %32, 32
  %34 = or i64 %33, %31
  %35 = bitcast %struct.SkImageInfo* %4 to i64*
  store i64 %30, i64* %35, align 8, !alias.scope !23
  %36 = bitcast i32* %16 to i64*
  store i64 %34, i64* %36, align 8, !alias.scope !23
  %37 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1
  %38 = bitcast %struct.SkISize* %37 to i64*
  store i64 %21, i64* %38, align 8, !alias.scope !23
  %39 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %17, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %42 = load i64, i64* %41, align 8
  call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %17, %struct.SkImageInfo* nonnull dereferenceable(24) %4, i8* %40, i64 %42) #10
  %43 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8
  %44 = icmp eq %class.SkColorSpace* %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %29
  %46 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = bitcast %class.SkColorSpace* %43 to i8*
  call void @_ZdlPv(i8* %50) #11
  br label %51

51:                                               ; preds = %29, %45, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  br label %52

52:                                               ; preds = %51, %8, %2
  %53 = phi i1 [ false, %2 ], [ true, %8 ], [ true, %51 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8SkBitmap14pixelRefOriginEv(%class.SkBitmap*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %6 = load %class.SkPixelRef*, %class.SkPixelRef** %5, align 8
  %7 = icmp eq %class.SkPixelRef* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %6, i64 0, i32 4
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i8* %10, null
  %14 = icmp eq i64 %12, 0
  %15 = or i1 %13, %14
  br i1 %15, label %27, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i8* %10 to i64
  %18 = sub i64 %4, %17
  %19 = urem i64 %18, %12
  %20 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0
  %21 = tail call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %20) #10
  %22 = zext i32 %21 to i64
  %23 = lshr i64 %19, %22
  %24 = udiv i64 %18, %12
  %25 = shl i64 %24, 32
  %26 = and i64 %23, 4294967295
  br label %27

27:                                               ; preds = %1, %8, %16
  %28 = phi i64 [ %26, %16 ], [ 0, %8 ], [ 0, %1 ]
  %29 = phi i64 [ %25, %16 ], [ 0, %8 ], [ 0, %1 ]
  %30 = or i64 %29, %28
  ret i64 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmap11setPixelRefE5sk_spI10SkPixelRefEii(%class.SkBitmap*, %class.sk_sp* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %10 = bitcast %class.sk_sp* %1 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %9, align 8
  br label %12

12:                                               ; preds = %4, %8
  %13 = phi i64 [ %11, %8 ], [ 0, %4 ]
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %15 = load %class.SkPixelRef*, %class.SkPixelRef** %14, align 8
  %16 = bitcast %class.SkBitmap* %0 to i64*
  store i64 %13, i64* %16, align 8
  %17 = icmp eq %class.SkPixelRef* %15, null
  %18 = inttoptr i64 %13 to %class.SkPixelRef*
  br i1 %17, label %31, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %class.SkPixelRef* %15 to %class.SkRefCntBase*
  %25 = bitcast %class.SkPixelRef* %15 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  tail call void %28(%class.SkRefCntBase* nonnull %24) #10
  br label %29

29:                                               ; preds = %19, %23
  %30 = load %class.SkPixelRef*, %class.SkPixelRef** %14, align 8
  br label %31

31:                                               ; preds = %29, %12
  %32 = phi %class.SkPixelRef* [ %30, %29 ], [ %18, %12 ]
  %33 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq %class.SkPixelRef* %32, null
  br i1 %35, label %51, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %32, i64 0, i32 5
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %32, i64 0, i32 4
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %51, label %42

42:                                               ; preds = %36
  %43 = sext i32 %3 to i64
  %44 = mul i64 %38, %43
  %45 = getelementptr inbounds i8, i8* %40, i64 %44
  %46 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0
  %47 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %46) #10
  %48 = mul nsw i32 %47, %2
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %45, i64 %49
  br label %51

51:                                               ; preds = %31, %36, %42
  %52 = phi i8* [ %50, %42 ], [ null, %36 ], [ null, %31 ]
  %53 = phi i64 [ %38, %42 ], [ %38, %36 ], [ %34, %31 ]
  store i64 %53, i64* %33, align 8
  %54 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  store i8* %52, i8** %54, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmap9setPixelsEPv(%class.SkBitmap* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = select i1 %5, i8* null, i8* %1
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  store i8* %6, i8** %9, align 8
  %10 = icmp eq i8* %6, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = tail call i8* @_Znwm(i64 88) #11, !noalias !26
  %17 = bitcast i8* %16 to %class.SkPixelRef*
  tail call void @_ZN10SkPixelRefC1EiiPvm(%class.SkPixelRef* nonnull %17, i32 %13, i32 %15, i8* nonnull %6, i64 %8) #10, !noalias !26
  %18 = ptrtoint i8* %16 to i64
  br label %19

19:                                               ; preds = %2, %11
  %20 = phi i64 [ %18, %11 ], [ 0, %2 ]
  %21 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %22 = load %class.SkPixelRef*, %class.SkPixelRef** %21, align 8
  %23 = bitcast %class.SkBitmap* %0 to i64*
  store i64 %20, i64* %23, align 8
  %24 = icmp eq %class.SkPixelRef* %22, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = bitcast %class.SkPixelRef* %22 to %class.SkRefCntBase*
  %31 = bitcast %class.SkPixelRef* %22 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  tail call void %34(%class.SkRefCntBase* nonnull %30) #10
  br label %35

35:                                               ; preds = %29, %25, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkBitmap14tryAllocPixelsEPNS_9AllocatorE(%class.SkBitmap*, %"class.SkBitmap::Allocator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkBitmap::HeapAllocator", align 8
  %4 = bitcast %"class.SkBitmap::HeapAllocator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.SkBitmap::HeapAllocator", %"class.SkBitmap::HeapAllocator"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.SkBitmap::HeapAllocator", %"class.SkBitmap::HeapAllocator"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.SkBitmap::HeapAllocator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  store i32 1, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8SkBitmap13HeapAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = icmp eq %"class.SkBitmap::Allocator"* %1, null
  %9 = bitcast %"class.SkBitmap::HeapAllocator"* %3 to %"class.SkBitmap::Allocator"*
  %10 = select i1 %8, %"class.SkBitmap::Allocator"* %9, %"class.SkBitmap::Allocator"* %1
  %11 = bitcast %"class.SkBitmap::Allocator"* %10 to i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)***
  %12 = load i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)**, i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)*, i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)** %12, i64 3
  %14 = load i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)*, i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)** %13, align 8
  %15 = call zeroext i1 %14(%"class.SkBitmap::Allocator"* %10, %class.SkBitmap* %0) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkBitmap17tryAllocN32PixelsEiib(%class.SkBitmap*, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 1
  %9 = zext i32 %2 to i64
  %10 = shl nuw i64 %9, 32
  %11 = zext i32 %1 to i64
  %12 = or i64 %10, %11
  %13 = select i1 %3, i64 4294967302, i64 8589934598
  %14 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 0, i64* %14, align 8, !alias.scope !29
  %15 = bitcast i32* %8 to i64*
  store i64 %13, i64* %15, align 8, !alias.scope !29
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %17 = bitcast %struct.SkISize* %16 to i64*
  store i64 %12, i64* %17, align 8, !alias.scope !29
  %18 = sext i32 %1 to i64
  %19 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0
  %20 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %19) #10
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %21, %18
  %23 = icmp ult i64 %22, 2147483648
  %24 = select i1 %23, i64 %22, i64 0
  %25 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* %0, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i64 %24) #10
  %26 = load %class.SkColorSpace*, %class.SkColorSpace** %7, align 8
  %27 = icmp eq %class.SkColorSpace* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %4
  %29 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = bitcast %class.SkColorSpace* %26 to i8*
  call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %4, %28, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap*, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 1
  %8 = zext i32 %2 to i64
  %9 = shl nuw i64 %8, 32
  %10 = zext i32 %1 to i64
  %11 = or i64 %9, %10
  %12 = select i1 %3, i64 4294967302, i64 8589934598
  %13 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 0, i64* %13, align 8, !alias.scope !34
  %14 = bitcast i32* %7 to i64*
  store i64 %12, i64* %14, align 8, !alias.scope !34
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %16 = bitcast %struct.SkISize* %15 to i64*
  store i64 %11, i64* %16, align 8, !alias.scope !34
  %17 = sext i32 %1 to i64
  %18 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0
  %19 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %18) #10
  %20 = sext i32 %19 to i64
  %21 = mul nsw i64 %20, %17
  %22 = icmp ult i64 %21, 2147483648
  %23 = select i1 %22, i64 %21, i64 0
  %24 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* %0, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i64 %23) #10
  br i1 %24, label %26, label %25

25:                                               ; preds = %4
  call fastcc void @"_ZZN8SkBitmap11allocPixelsERK11SkImageInfomENK3$_1clEv"() #10
  unreachable

26:                                               ; preds = %4
  %27 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %28 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8
  %29 = icmp eq %class.SkColorSpace* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = bitcast %class.SkColorSpace* %28 to i8*
  call void @_ZdlPv(i8* %35) #11
  br label %36

36:                                               ; preds = %26, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %7 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %6) #10
  %8 = sext i32 %7 to i64
  %9 = mul nsw i64 %8, %5
  %10 = icmp ult i64 %9, 2147483648
  %11 = select i1 %10, i64 %9, i64 0
  %12 = tail call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* %0, %struct.SkImageInfo* dereferenceable(24) %1, i64 %11) #10
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  tail call fastcc void @"_ZZN8SkBitmap11allocPixelsERK11SkImageInfomENK3$_1clEv"() #10
  unreachable

14:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmap11allocPixelsEv(%class.SkBitmap*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkBitmap::HeapAllocator", align 8
  %3 = bitcast %"class.SkBitmap::HeapAllocator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.SkBitmap::HeapAllocator", %"class.SkBitmap::HeapAllocator"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.SkBitmap::HeapAllocator", %"class.SkBitmap::HeapAllocator"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 16, i1 false) #10
  store i32 1, i32* %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8SkBitmap13HeapAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = call zeroext i1 @_ZN8SkBitmap13HeapAllocator13allocPixelRefEPS_(%"class.SkBitmap::HeapAllocator"* nonnull %2, %class.SkBitmap* %0) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #10
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %17 = load i64, i64* %16, align 8
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 234, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.1, i64 0, i64 0), i32 %9, i32 %11, i32 %13, i32 %15, i64 %17) #12
  unreachable

18:                                               ; preds = %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmap11allocPixelsEPNS_9AllocatorE(%class.SkBitmap*, %"class.SkBitmap::Allocator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkBitmap::HeapAllocator", align 8
  %4 = bitcast %"class.SkBitmap::HeapAllocator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.SkBitmap::HeapAllocator", %"class.SkBitmap::HeapAllocator"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.SkBitmap::HeapAllocator", %"class.SkBitmap::HeapAllocator"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false) #10
  store i32 1, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8SkBitmap13HeapAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = icmp eq %"class.SkBitmap::Allocator"* %1, null
  %8 = bitcast %"class.SkBitmap::HeapAllocator"* %3 to %"class.SkBitmap::Allocator"*
  %9 = select i1 %7, %"class.SkBitmap::Allocator"* %8, %"class.SkBitmap::Allocator"* %1
  %10 = bitcast %"class.SkBitmap::Allocator"* %9 to i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)***
  %11 = load i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)**, i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)*, i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)** %11, i64 3
  %13 = load i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)*, i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)** %12, align 8
  %14 = call zeroext i1 %13(%"class.SkBitmap::Allocator"* %9, %class.SkBitmap* %0) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  br i1 %14, label %26, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %25 = load i64, i64* %24, align 8
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 234, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.1, i64 0, i64 0), i32 %17, i32 %19, i32 %21, i32 %23, i64 %25) #12
  unreachable

26:                                               ; preds = %2
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmap16allocPixelsFlagsERK11SkImageInfoj(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN8SkBitmap19tryAllocPixelsFlagsERK11SkImageInfoj(%class.SkBitmap* %0, %struct.SkImageInfo* dereferenceable(24) %1, i32 undef)
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call fastcc void @"_ZZN8SkBitmap16allocPixelsFlagsERK11SkImageInfojENK3$_0clEv"()
  unreachable

6:                                                ; preds = %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkBitmap19tryAllocPixelsFlagsERK11SkImageInfoj(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = tail call zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap* %0, %struct.SkImageInfo* dereferenceable(24) %1, i64 0)
  br i1 %5, label %27, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %8 = load %class.SkPixelRef*, %class.SkPixelRef** %7, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %7, align 8
  %9 = icmp eq %class.SkPixelRef* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 -1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = bitcast %class.SkPixelRef* %8 to %class.SkRefCntBase*
  %16 = bitcast %class.SkPixelRef* %8 to void (%class.SkRefCntBase*)***
  %17 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %17, i64 2
  %19 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, align 8
  tail call void %19(%class.SkRefCntBase* nonnull %15) #10
  br label %20

20:                                               ; preds = %14, %10, %6
  %21 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  tail call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %21) #10
  %22 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %23 = load %class.SkMipmap*, %class.SkMipmap** %22, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %22, align 8
  %24 = icmp eq %class.SkMipmap* %23, null
  br i1 %24, label %154, label %25

25:                                               ; preds = %20
  %26 = bitcast %class.SkMipmap* %23 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %26, i1 zeroext false) #10
  br label %154

27:                                               ; preds = %3
  %28 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2
  %29 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  %30 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  store %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*), %class.SkPixelRef** %30, align 8
  %31 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %28, i64 0, i32 0
  %35 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %34) #10
  %36 = sext i32 %35 to i64
  %37 = mul nsw i64 %36, %33
  %38 = icmp ult i64 %37, 2147483648
  %39 = select i1 %38, i64 %37, i64 0
  call void @_ZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfom(%class.sk_sp* nonnull sret %4, %struct.SkImageInfo* dereferenceable(24) %28, i64 %39) #10
  %40 = load %class.SkPixelRef*, %class.SkPixelRef** %30, align 8
  %41 = icmp eq %class.SkPixelRef* %40, null
  br i1 %41, label %42, label %63

42:                                               ; preds = %27
  %43 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %44 = load %class.SkPixelRef*, %class.SkPixelRef** %43, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %43, align 8
  %45 = icmp eq %class.SkPixelRef* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %44, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkPixelRef* %44 to %class.SkRefCntBase*
  %52 = bitcast %class.SkPixelRef* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  call void %55(%class.SkRefCntBase* nonnull %51) #10
  br label %56

56:                                               ; preds = %50, %46, %42
  %57 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %57) #10
  %58 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %59 = load %class.SkMipmap*, %class.SkMipmap** %58, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %58, align 8
  %60 = icmp eq %class.SkMipmap* %59, null
  br i1 %60, label %139, label %61

61:                                               ; preds = %56
  %62 = bitcast %class.SkMipmap* %59 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %62, i1 zeroext false) #10
  br label %139

63:                                               ; preds = %27
  %64 = ptrtoint %class.SkPixelRef* %40 to i64
  store %class.SkPixelRef* null, %class.SkPixelRef** %30, align 8
  %65 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 0
  %68 = select i1 %67, i64 0, i64 %64
  %69 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %70 = load %class.SkPixelRef*, %class.SkPixelRef** %69, align 8
  %71 = bitcast %class.SkBitmap* %0 to i64*
  store i64 %68, i64* %71, align 8
  %72 = icmp eq %class.SkPixelRef* %70, null
  %73 = inttoptr i64 %68 to %class.SkPixelRef*
  br i1 %72, label %86, label %74

74:                                               ; preds = %63
  %75 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %70, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %84

78:                                               ; preds = %74
  %79 = bitcast %class.SkPixelRef* %70 to %class.SkRefCntBase*
  %80 = bitcast %class.SkPixelRef* %70 to void (%class.SkRefCntBase*)***
  %81 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, i64 2
  %83 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, align 8
  call void %83(%class.SkRefCntBase* nonnull %79) #10
  br label %84

84:                                               ; preds = %78, %74
  %85 = load %class.SkPixelRef*, %class.SkPixelRef** %69, align 8
  br label %86

86:                                               ; preds = %84, %63
  %87 = phi %class.SkPixelRef* [ %85, %84 ], [ %73, %63 ]
  %88 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq %class.SkPixelRef* %87, null
  br i1 %90, label %100, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %87, i64 0, i32 5
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %87, i64 0, i32 4
  %95 = load i8*, i8** %94, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0
  %99 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %98) #10
  br label %100

100:                                              ; preds = %86, %91, %97
  %101 = phi i8* [ %95, %97 ], [ null, %91 ], [ null, %86 ]
  %102 = phi i64 [ %93, %97 ], [ %93, %91 ], [ %89, %86 ]
  store i64 %102, i64* %88, align 8
  %103 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  store i8* %101, i8** %103, align 8
  br i1 %67, label %104, label %116

104:                                              ; preds = %100
  %105 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %40, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 -1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %114

108:                                              ; preds = %104
  %109 = bitcast %class.SkPixelRef* %40 to %class.SkRefCntBase*
  %110 = bitcast %class.SkPixelRef* %40 to void (%class.SkRefCntBase*)***
  %111 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %110, align 8
  %112 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, i64 2
  %113 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %112, align 8
  call void %113(%class.SkRefCntBase* nonnull %109) #10
  br label %114

114:                                              ; preds = %108, %104
  %115 = load i8*, i8** %103, align 8
  br label %116

116:                                              ; preds = %100, %114
  %117 = phi i8* [ %115, %114 ], [ %101, %100 ]
  %118 = icmp eq i8* %117, null
  br i1 %118, label %119, label %139

119:                                              ; preds = %116
  %120 = load %class.SkPixelRef*, %class.SkPixelRef** %69, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %69, align 8
  %121 = icmp eq %class.SkPixelRef* %120, null
  br i1 %121, label %132, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %120, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 -1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = bitcast %class.SkPixelRef* %120 to %class.SkRefCntBase*
  %128 = bitcast %class.SkPixelRef* %120 to void (%class.SkRefCntBase*)***
  %129 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %128, align 8
  %130 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, i64 2
  %131 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, align 8
  call void %131(%class.SkRefCntBase* nonnull %127) #10
  br label %132

132:                                              ; preds = %126, %122, %119
  %133 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %133) #10
  %134 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %135 = load %class.SkMipmap*, %class.SkMipmap** %134, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %134, align 8
  %136 = icmp eq %class.SkMipmap* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %132
  %138 = bitcast %class.SkMipmap* %135 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %138, i1 zeroext false) #10
  br label %139

139:                                              ; preds = %137, %132, %61, %56, %116
  %140 = phi i1 [ true, %116 ], [ false, %56 ], [ false, %61 ], [ false, %132 ], [ false, %137 ]
  %141 = load %class.SkPixelRef*, %class.SkPixelRef** %30, align 8
  %142 = icmp eq %class.SkPixelRef* %141, null
  br i1 %142, label %153, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %141, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = atomicrmw add i32* %144, i32 -1 acq_rel
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %153

147:                                              ; preds = %143
  %148 = bitcast %class.SkPixelRef* %141 to %class.SkRefCntBase*
  %149 = bitcast %class.SkPixelRef* %141 to void (%class.SkRefCntBase*)***
  %150 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %149, align 8
  %151 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, i64 2
  %152 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %151, align 8
  call void %152(%class.SkRefCntBase* nonnull %148) #10
  br label %153

153:                                              ; preds = %139, %143, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %154

154:                                              ; preds = %25, %20, %153
  %155 = phi i1 [ %140, %153 ], [ false, %20 ], [ false, %25 ]
  ret i1 %155
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @"_ZZN8SkBitmap16allocPixelsFlagsERK11SkImageInfojENK3$_0clEv"() unnamed_addr #5 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 239, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmap11allocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* %0, %struct.SkImageInfo* dereferenceable(24) %1, i64 %2)
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call fastcc void @"_ZZN8SkBitmap11allocPixelsERK11SkImageInfomENK3$_1clEv"()
  unreachable

6:                                                ; preds = %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = tail call zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap* %0, %struct.SkImageInfo* dereferenceable(24) %1, i64 %2)
  br i1 %5, label %27, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %8 = load %class.SkPixelRef*, %class.SkPixelRef** %7, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %7, align 8
  %9 = icmp eq %class.SkPixelRef* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 -1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = bitcast %class.SkPixelRef* %8 to %class.SkRefCntBase*
  %16 = bitcast %class.SkPixelRef* %8 to void (%class.SkRefCntBase*)***
  %17 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %17, i64 2
  %19 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, align 8
  tail call void %19(%class.SkRefCntBase* nonnull %15) #10
  br label %20

20:                                               ; preds = %14, %10, %6
  %21 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  tail call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %21) #10
  %22 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %23 = load %class.SkMipmap*, %class.SkMipmap** %22, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %22, align 8
  %24 = icmp eq %class.SkMipmap* %23, null
  br i1 %24, label %149, label %25

25:                                               ; preds = %20
  %26 = bitcast %class.SkMipmap* %23 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %26, i1 zeroext false) #10
  br label %149

27:                                               ; preds = %3
  %28 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %149, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2
  %33 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  store %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*), %class.SkPixelRef** %36, align 8
  call void @_ZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfom(%class.sk_sp* nonnull sret %4, %struct.SkImageInfo* dereferenceable(24) %32, i64 %34) #10
  %37 = load %class.SkPixelRef*, %class.SkPixelRef** %36, align 8
  %38 = icmp eq %class.SkPixelRef* %37, null
  br i1 %38, label %39, label %60

39:                                               ; preds = %31
  %40 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %41 = load %class.SkPixelRef*, %class.SkPixelRef** %40, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %40, align 8
  %42 = icmp eq %class.SkPixelRef* %41, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %41, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %class.SkPixelRef* %41 to %class.SkRefCntBase*
  %49 = bitcast %class.SkPixelRef* %41 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  call void %52(%class.SkRefCntBase* nonnull %48) #10
  br label %53

53:                                               ; preds = %47, %43, %39
  %54 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %54) #10
  %55 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %56 = load %class.SkMipmap*, %class.SkMipmap** %55, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %55, align 8
  %57 = icmp eq %class.SkMipmap* %56, null
  br i1 %57, label %134, label %58

58:                                               ; preds = %53
  %59 = bitcast %class.SkMipmap* %56 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %59, i1 zeroext false) #10
  br label %134

60:                                               ; preds = %31
  %61 = ptrtoint %class.SkPixelRef* %37 to i64
  store %class.SkPixelRef* null, %class.SkPixelRef** %36, align 8
  %62 = load i32, i32* %28, align 8
  %63 = icmp eq i32 %62, 0
  %64 = select i1 %63, i64 0, i64 %61
  %65 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %66 = load %class.SkPixelRef*, %class.SkPixelRef** %65, align 8
  %67 = bitcast %class.SkBitmap* %0 to i64*
  store i64 %64, i64* %67, align 8
  %68 = icmp eq %class.SkPixelRef* %66, null
  %69 = inttoptr i64 %64 to %class.SkPixelRef*
  br i1 %68, label %82, label %70

70:                                               ; preds = %60
  %71 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %66, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = bitcast %class.SkPixelRef* %66 to %class.SkRefCntBase*
  %76 = bitcast %class.SkPixelRef* %66 to void (%class.SkRefCntBase*)***
  %77 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %76, align 8
  %78 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, i64 2
  %79 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, align 8
  call void %79(%class.SkRefCntBase* nonnull %75) #10
  br label %80

80:                                               ; preds = %74, %70
  %81 = load %class.SkPixelRef*, %class.SkPixelRef** %65, align 8
  br label %82

82:                                               ; preds = %80, %60
  %83 = phi %class.SkPixelRef* [ %81, %80 ], [ %69, %60 ]
  %84 = load i64, i64* %33, align 8
  %85 = icmp eq %class.SkPixelRef* %83, null
  br i1 %85, label %95, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %83, i64 0, i32 5
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %83, i64 0, i32 4
  %90 = load i8*, i8** %89, align 8
  %91 = icmp eq i8* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0
  %94 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %93) #10
  br label %95

95:                                               ; preds = %82, %86, %92
  %96 = phi i8* [ %90, %92 ], [ null, %86 ], [ null, %82 ]
  %97 = phi i64 [ %88, %92 ], [ %88, %86 ], [ %84, %82 ]
  store i64 %97, i64* %33, align 8
  %98 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  store i8* %96, i8** %98, align 8
  br i1 %63, label %99, label %111

99:                                               ; preds = %95
  %100 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %37, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %109

103:                                              ; preds = %99
  %104 = bitcast %class.SkPixelRef* %37 to %class.SkRefCntBase*
  %105 = bitcast %class.SkPixelRef* %37 to void (%class.SkRefCntBase*)***
  %106 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %105, align 8
  %107 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, i64 2
  %108 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, align 8
  call void %108(%class.SkRefCntBase* nonnull %104) #10
  br label %109

109:                                              ; preds = %103, %99
  %110 = load i8*, i8** %98, align 8
  br label %111

111:                                              ; preds = %95, %109
  %112 = phi i8* [ %110, %109 ], [ %96, %95 ]
  %113 = icmp eq i8* %112, null
  br i1 %113, label %114, label %134

114:                                              ; preds = %111
  %115 = load %class.SkPixelRef*, %class.SkPixelRef** %65, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %65, align 8
  %116 = icmp eq %class.SkPixelRef* %115, null
  br i1 %116, label %127, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %115, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw add i32* %118, i32 -1 acq_rel
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %127

121:                                              ; preds = %117
  %122 = bitcast %class.SkPixelRef* %115 to %class.SkRefCntBase*
  %123 = bitcast %class.SkPixelRef* %115 to void (%class.SkRefCntBase*)***
  %124 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %123, align 8
  %125 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %124, i64 2
  %126 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %125, align 8
  call void %126(%class.SkRefCntBase* nonnull %122) #10
  br label %127

127:                                              ; preds = %121, %117, %114
  %128 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %128) #10
  %129 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %130 = load %class.SkMipmap*, %class.SkMipmap** %129, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %129, align 8
  %131 = icmp eq %class.SkMipmap* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %127
  %133 = bitcast %class.SkMipmap* %130 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %133, i1 zeroext false) #10
  br label %134

134:                                              ; preds = %132, %127, %58, %53, %111
  %135 = phi i1 [ true, %111 ], [ false, %53 ], [ false, %58 ], [ false, %127 ], [ false, %132 ]
  %136 = load %class.SkPixelRef*, %class.SkPixelRef** %36, align 8
  %137 = icmp eq %class.SkPixelRef* %136, null
  br i1 %137, label %148, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %136, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = atomicrmw add i32* %139, i32 -1 acq_rel
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %142, label %148

142:                                              ; preds = %138
  %143 = bitcast %class.SkPixelRef* %136 to %class.SkRefCntBase*
  %144 = bitcast %class.SkPixelRef* %136 to void (%class.SkRefCntBase*)***
  %145 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %144, align 8
  %146 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %145, i64 2
  %147 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %146, align 8
  call void %147(%class.SkRefCntBase* nonnull %143) #10
  br label %148

148:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  br label %149

149:                                              ; preds = %25, %20, %148, %27
  %150 = phi i1 [ %135, %148 ], [ true, %27 ], [ false, %20 ], [ false, %25 ]
  ret i1 %150
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @"_ZZN8SkBitmap11allocPixelsERK11SkImageInfomENK3$_1clEv"() unnamed_addr #5 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 243, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable
}

declare void @_ZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfom(%class.sk_sp* sret, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp, align 8
  %8 = tail call zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap* %0, %struct.SkImageInfo* dereferenceable(24) %1, i64 %3)
  br i1 %8, label %33, label %9

9:                                                ; preds = %6
  %10 = icmp eq void (i8*, i8*)* %4, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %9
  tail call void %4(i8* %2, i8* %5) #10
  br label %12

12:                                               ; preds = %9, %11
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %14 = load %class.SkPixelRef*, %class.SkPixelRef** %13, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %13, align 8
  %15 = icmp eq %class.SkPixelRef* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %class.SkPixelRef* %14 to %class.SkRefCntBase*
  %22 = bitcast %class.SkPixelRef* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  tail call void %25(%class.SkRefCntBase* nonnull %21) #10
  br label %26

26:                                               ; preds = %20, %16, %12
  %27 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  tail call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %27) #10
  %28 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %29 = load %class.SkMipmap*, %class.SkMipmap** %28, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %28, align 8
  %30 = icmp eq %class.SkMipmap* %29, null
  br i1 %30, label %100, label %31

31:                                               ; preds = %26
  %32 = bitcast %class.SkMipmap* %29 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %32, i1 zeroext false) #10
  br label %100

33:                                               ; preds = %6
  %34 = icmp eq i8* %2, null
  br i1 %34, label %35, label %38

35:                                               ; preds = %33
  %36 = icmp eq void (i8*, i8*)* %4, null
  br i1 %36, label %100, label %37

37:                                               ; preds = %35
  tail call void %4(i8* null, i8* %5) #10
  br label %100

38:                                               ; preds = %33
  %39 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %42 = load i32, i32* %41, align 4
  call void @_Z22SkMakePixelRefWithProciimPvPFvS_S_ES_(%class.sk_sp* nonnull sret %7, i32 %40, i32 %42, i64 %3, i8* nonnull %2, void (i8*, i8*)* %4, i8* %5) #10
  %43 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %48 = bitcast %class.sk_sp* %7 to i64*
  %49 = load i64, i64* %48, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %47, align 8
  br label %50

50:                                               ; preds = %46, %38
  %51 = phi i64 [ %49, %46 ], [ 0, %38 ]
  %52 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %53 = load %class.SkPixelRef*, %class.SkPixelRef** %52, align 8
  %54 = bitcast %class.SkBitmap* %0 to i64*
  store i64 %51, i64* %54, align 8
  %55 = icmp eq %class.SkPixelRef* %53, null
  %56 = inttoptr i64 %51 to %class.SkPixelRef*
  br i1 %55, label %69, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %53, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = bitcast %class.SkPixelRef* %53 to %class.SkRefCntBase*
  %63 = bitcast %class.SkPixelRef* %53 to void (%class.SkRefCntBase*)***
  %64 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, i64 2
  %66 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, align 8
  call void %66(%class.SkRefCntBase* nonnull %62) #10
  br label %67

67:                                               ; preds = %61, %57
  %68 = load %class.SkPixelRef*, %class.SkPixelRef** %52, align 8
  br label %69

69:                                               ; preds = %67, %50
  %70 = phi %class.SkPixelRef* [ %68, %67 ], [ %56, %50 ]
  %71 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq %class.SkPixelRef* %70, null
  br i1 %73, label %83, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %70, i64 0, i32 5
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %70, i64 0, i32 4
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %83, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0
  %82 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %81) #10
  br label %83

83:                                               ; preds = %69, %74, %80
  %84 = phi i8* [ %78, %80 ], [ null, %74 ], [ null, %69 ]
  %85 = phi i64 [ %76, %80 ], [ %76, %74 ], [ %72, %69 ]
  store i64 %85, i64* %71, align 8
  %86 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  store i8* %84, i8** %86, align 8
  %87 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %88 = load %class.SkPixelRef*, %class.SkPixelRef** %87, align 8
  %89 = icmp eq %class.SkPixelRef* %88, null
  br i1 %89, label %100, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %88, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %100

94:                                               ; preds = %90
  %95 = bitcast %class.SkPixelRef* %88 to %class.SkRefCntBase*
  %96 = bitcast %class.SkPixelRef* %88 to void (%class.SkRefCntBase*)***
  %97 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %96, align 8
  %98 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, i64 2
  %99 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %98, align 8
  call void %99(%class.SkRefCntBase* nonnull %95) #10
  br label %100

100:                                              ; preds = %94, %90, %83, %37, %35, %31, %26
  %101 = phi i1 [ false, %26 ], [ false, %31 ], [ true, %35 ], [ true, %37 ], [ true, %83 ], [ true, %90 ], [ true, %94 ]
  ret i1 %101
}

declare void @_Z22SkMakePixelRefWithProciimPvPFvS_S_ES_(%class.sk_sp* sret, i32, i32, i64, i8*, void (i8*, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkBitmap13installPixelsERK8SkPixmap(%class.SkBitmap*, %class.SkPixmap* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2
  %4 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = tail call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* %0, %struct.SkImageInfo* dereferenceable(24) %3, i8* %5, i64 %7, void (i8*, i8*)* null, i8* null)
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkBitmap17installMaskPixelsERK6SkMask(%class.SkBitmap*, %struct.SkMask* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkImageInfo, align 16
  %4 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 3
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 1
  br i1 %6, label %28, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %9 = load %class.SkPixelRef*, %class.SkPixelRef** %8, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %8, align 8
  %10 = icmp eq %class.SkPixelRef* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.SkPixelRef* %9 to %class.SkRefCntBase*
  %17 = bitcast %class.SkPixelRef* %9 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #10
  br label %21

21:                                               ; preds = %15, %11, %7
  %22 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  tail call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %22) #10
  %23 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 2, i32 0
  %24 = load %class.SkMipmap*, %class.SkMipmap** %23, align 8
  store %class.SkMipmap* null, %class.SkMipmap** %23, align 8
  %25 = icmp eq %class.SkMipmap* %24, null
  br i1 %25, label %63, label %26

26:                                               ; preds = %21
  %27 = bitcast %class.SkMipmap* %24 to %class.SkCachedData*
  tail call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %27, i1 zeroext false) #10
  br label %63

28:                                               ; preds = %2
  %29 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  %30 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = sub i32 %31, %33
  %35 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = sub i32 %36, %38
  %40 = zext i32 %39 to i64
  %41 = shl nuw i64 %40, 32
  %42 = zext i32 %34 to i64
  %43 = or i64 %41, %42
  %44 = bitcast %struct.SkImageInfo* %3 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %44, align 16, !alias.scope !39
  %45 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1
  %46 = bitcast %struct.SkISize* %45 to i64*
  store i64 %43, i64* %46, align 16, !alias.scope !39
  %47 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = zext i32 %50 to i64
  %52 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* %0, %struct.SkImageInfo* nonnull dereferenceable(24) %3, i8* %48, i64 %51, void (i8*, i8*)* null, i8* null) #10
  %53 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %54 = load %class.SkColorSpace*, %class.SkColorSpace** %53, align 16
  %55 = icmp eq %class.SkColorSpace* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %28
  %57 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = bitcast %class.SkColorSpace* %54 to i8*
  call void @_ZdlPv(i8* %61) #11
  br label %62

62:                                               ; preds = %28, %56, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  br label %63

63:                                               ; preds = %26, %21, %62
  %64 = phi i1 [ %52, %62 ], [ false, %21 ], [ false, %26 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8SkBitmap15getGenerationIDEv(%class.SkBitmap* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPixelRef*, %class.SkPixelRef** %2, align 8
  %4 = icmp eq %class.SkPixelRef* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @_ZNK10SkPixelRef15getGenerationIDEv(%class.SkPixelRef* nonnull %3) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ 0, %1 ]
  ret i32 %8
}

declare i32 @_ZNK10SkPixelRef15getGenerationIDEv(%class.SkPixelRef*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8SkBitmap19notifyPixelsChangedEv(%class.SkBitmap* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPixelRef*, %class.SkPixelRef** %2, align 8
  %4 = icmp eq %class.SkPixelRef* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN10SkPixelRef19notifyPixelsChangedEv(%class.SkPixelRef* nonnull %3) #10
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN10SkPixelRef19notifyPixelsChangedEv(%class.SkPixelRef*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkBitmap13HeapAllocator13allocPixelRefEPS_(%"class.SkBitmap::HeapAllocator"* nocapture readnone, %class.SkBitmap*) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %79, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2
  %9 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  store %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*), %class.SkPixelRef** %10, align 8
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  call void @_ZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfom(%class.sk_sp* nonnull sret %3, %struct.SkImageInfo* dereferenceable(24) %8, i64 %12) #10
  %13 = load %class.SkPixelRef*, %class.SkPixelRef** %10, align 8
  %14 = icmp eq %class.SkPixelRef* %13, null
  br i1 %14, label %77, label %15

15:                                               ; preds = %7
  %16 = ptrtoint %class.SkPixelRef* %13 to i64
  store %class.SkPixelRef* null, %class.SkPixelRef** %10, align 8
  %17 = load i32, i32* %4, align 8
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %18, i64 0, i64 %16
  %20 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %21 = load %class.SkPixelRef*, %class.SkPixelRef** %20, align 8
  %22 = bitcast %class.SkBitmap* %1 to i64*
  store i64 %19, i64* %22, align 8
  %23 = icmp eq %class.SkPixelRef* %21, null
  %24 = inttoptr i64 %19 to %class.SkPixelRef*
  br i1 %23, label %37, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = bitcast %class.SkPixelRef* %21 to %class.SkRefCntBase*
  %31 = bitcast %class.SkPixelRef* %21 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  call void %34(%class.SkRefCntBase* nonnull %30) #10
  br label %35

35:                                               ; preds = %29, %25
  %36 = load %class.SkPixelRef*, %class.SkPixelRef** %20, align 8
  br label %37

37:                                               ; preds = %35, %15
  %38 = phi %class.SkPixelRef* [ %36, %35 ], [ %24, %15 ]
  %39 = load i64, i64* %11, align 8
  %40 = icmp eq %class.SkPixelRef* %38, null
  br i1 %40, label %50, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %38, i64 0, i32 5
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %38, i64 0, i32 4
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0
  %49 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %48) #10
  br label %50

50:                                               ; preds = %37, %41, %47
  %51 = phi i8* [ %45, %47 ], [ null, %41 ], [ null, %37 ]
  %52 = phi i64 [ %43, %47 ], [ %43, %41 ], [ %39, %37 ]
  store i64 %52, i64* %11, align 8
  %53 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 0
  store i8* %51, i8** %53, align 8
  br i1 %18, label %54, label %64

54:                                               ; preds = %50
  %55 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %class.SkPixelRef* %13 to %class.SkRefCntBase*
  %60 = bitcast %class.SkPixelRef* %13 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8
  call void %63(%class.SkRefCntBase* nonnull %59) #10
  br label %64

64:                                               ; preds = %50, %58, %54
  %65 = load %class.SkPixelRef*, %class.SkPixelRef** %10, align 8
  %66 = icmp eq %class.SkPixelRef* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %65, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = bitcast %class.SkPixelRef* %65 to %class.SkRefCntBase*
  %73 = bitcast %class.SkPixelRef* %65 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8
  call void %76(%class.SkRefCntBase* nonnull %72) #10
  br label %77

77:                                               ; preds = %7, %64, %67, %71
  %78 = phi i1 [ true, %64 ], [ true, %67 ], [ true, %71 ], [ false, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  br label %79

79:                                               ; preds = %2, %77
  %80 = phi i1 [ %78, %77 ], [ false, %2 ]
  ret i1 %80
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8SkBitmap11isImmutableEv(%class.SkBitmap* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPixelRef*, %class.SkPixelRef** %2, align 8
  %4 = icmp eq %class.SkPixelRef* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %3, i64 0, i32 10
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ %8, %5 ], [ false, %1 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPixelRef*, %class.SkPixelRef** %2, align 8
  %4 = icmp eq %class.SkPixelRef* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN10SkPixelRef12setImmutableEv(%class.SkPixelRef* nonnull %3) #10
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN10SkPixelRef12setImmutableEv(%class.SkPixelRef*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK8SkBitmap7getAddrEii(%class.SkBitmap*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = mul i64 %10, %8
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0
  %13 = tail call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %12) #10
  %14 = shl i32 %1, %13
  %15 = sext i32 %14 to i64
  %16 = add i64 %11, %15
  %17 = getelementptr inbounds i8, i8* %5, i64 %16
  br label %18

18:                                               ; preds = %3, %7
  %19 = phi i8* [ %17, %7 ], [ null, %3 ]
  ret i8* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8SkBitmap5eraseEjRK7SkIRect(%class.SkBitmap* readonly, i32, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPixmap, align 8
  %5 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %58, label %8

8:                                                ; preds = %3
  %9 = bitcast %class.SkPixmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #10
  %10 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %47, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  %15 = bitcast %class.SkPixmap* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %15, i64 16, i1 false) #10
  %16 = icmp eq %class.SkPixmap* %14, %4
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %19 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %20 = icmp eq %class.SkColorSpace* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* %19, %class.SkColorSpace** %22, align 8
  br label %36

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  %26 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %27 = load %class.SkColorSpace*, %class.SkColorSpace** %26, align 8
  %28 = bitcast %class.SkColorSpace* %27 to i8*
  %29 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* %19, %class.SkColorSpace** %29, align 8
  %30 = icmp eq %class.SkColorSpace* %27, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  call void @_ZdlPv(i8* %28) #11
  br label %36

36:                                               ; preds = %21, %13, %23, %31, %35
  %37 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 1
  %38 = bitcast i32* %5 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 8
  %40 = bitcast i32* %37 to <2 x i64>*
  store <2 x i64> %39, <2 x i64>* %40, align 8
  %41 = call zeroext i1 @_ZNK8SkPixmap5eraseEjRK7SkIRect(%class.SkPixmap* nonnull %4, i32 %1, %struct.SkIRect* dereferenceable(16) %2) #10
  br i1 %41, label %42, label %47

42:                                               ; preds = %36
  %43 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %44 = load %class.SkPixelRef*, %class.SkPixelRef** %43, align 8
  %45 = icmp eq %class.SkPixelRef* %44, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  call void @_ZN10SkPixelRef19notifyPixelsChangedEv(%class.SkPixelRef* nonnull %44) #10
  br label %47

47:                                               ; preds = %46, %42, %8, %36
  %48 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %49 = load %class.SkColorSpace*, %class.SkColorSpace** %48, align 8
  %50 = icmp eq %class.SkColorSpace* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = bitcast %class.SkColorSpace* %49 to i8*
  call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %47, %51, %55
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #10
  br label %58

58:                                               ; preds = %3, %57
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* readonly, %class.SkPixmap*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %41, label %6

6:                                                ; preds = %2
  %7 = icmp eq %class.SkPixmap* %1, null
  br i1 %7, label %41, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  %10 = bitcast %class.SkPixmap* %1 to i8*
  %11 = bitcast %class.SkPixmap* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 16, i1 false) #10
  %12 = icmp eq %class.SkPixmap* %9, %1
  br i1 %12, label %30, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %16 = icmp eq %class.SkColorSpace* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  br label %20

20:                                               ; preds = %17, %13
  %21 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %class.SkColorSpace*, %class.SkColorSpace** %21, align 8
  store %class.SkColorSpace* %15, %class.SkColorSpace** %21, align 8
  %23 = icmp eq %class.SkColorSpace* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = bitcast %class.SkColorSpace* %22 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %8, %20, %24, %28
  %31 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 1
  %32 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %33 = bitcast i32* %32 to i64*
  %34 = bitcast i32* %31 to i64*
  %35 = load i64, i64* %33, align 8
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1
  %37 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1
  %38 = bitcast %struct.SkISize* %37 to i64*
  %39 = bitcast %struct.SkISize* %36 to i64*
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  br label %41

41:                                               ; preds = %2, %30, %6
  %42 = phi i1 [ true, %6 ], [ true, %30 ], [ false, %2 ]
  ret i1 %42
}

declare zeroext i1 @_ZNK8SkPixmap5eraseEjRK7SkIRect(%class.SkPixmap*, i32, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap* readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %struct.SkIRect*
  %5 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i32 %7 to i64
  %13 = or i64 %11, %12
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store i64 %13, i64* %15, align 8
  call void @_ZNK8SkBitmap5eraseEjRK7SkIRect(%class.SkBitmap* %0, i32 %1, %struct.SkIRect* nonnull dereferenceable(16) %4)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkBitmap13extractSubsetEPS_RK7SkIRect(%class.SkBitmap*, %class.SkBitmap*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkIRect, align 4
  %5 = alloca %struct.SkIRect, align 4
  %6 = alloca %class.SkBitmap, align 8
  %7 = alloca %struct.SkImageInfo, align 8
  %8 = icmp eq %class.SkBitmap* %1, null
  br i1 %8, label %202, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %11 = load %class.SkPixelRef*, %class.SkPixelRef** %10, align 8
  %12 = icmp eq %class.SkPixelRef* %11, null
  br i1 %12, label %202, label %13

13:                                               ; preds = %9
  %14 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %19 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #10
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 0
  %21 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %22 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %23 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 -86, i64 16, i1 false)
  %24 = load i32, i32* %22, align 4
  %25 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %26 = load i32, i32* %25, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %16, align 4
  store i32 %24, i32* %17, align 4
  store i32 %26, i32* %18, align 4
  %27 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %5, %struct.SkIRect* nonnull dereferenceable(16) %4, %struct.SkIRect* dereferenceable(16) %2) #10
  br i1 %27, label %28, label %200

28:                                               ; preds = %13
  %29 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 2
  %31 = bitcast %class.SkBitmap* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %31) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 56, i1 false) #10
  %32 = bitcast %struct.SkImageInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #10
  %33 = load i32, i32* %30, align 4
  %34 = load i32, i32* %20, align 4
  %35 = sub i32 %33, %34
  %36 = load i32, i32* %29, align 4
  %37 = load i32, i32* %21, align 4
  %38 = sub i32 %36, %37
  %39 = zext i32 %38 to i64
  %40 = shl nuw i64 %39, 32
  %41 = zext i32 %35 to i64
  %42 = or i64 %40, %41
  %43 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %45 = load %class.SkColorSpace*, %class.SkColorSpace** %44, align 8, !noalias !44
  %46 = icmp eq %class.SkColorSpace* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %28
  %48 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 1 monotonic, !noalias !44
  br label %50

50:                                               ; preds = %28, %47
  store %class.SkColorSpace* %45, %class.SkColorSpace** %43, align 8, !alias.scope !44
  %51 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %53 = bitcast i32* %52 to i64*
  %54 = bitcast i32* %51 to i64*
  %55 = load i64, i64* %53, align 8, !noalias !44
  store i64 %55, i64* %54, align 8, !alias.scope !44
  %56 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 1
  %57 = bitcast %struct.SkISize* %56 to i64*
  store i64 %42, i64* %57, align 8, !alias.scope !44
  %58 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = call zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap* nonnull %6, %struct.SkImageInfo* nonnull dereferenceable(24) %7, i64 %59)
  %61 = load %class.SkColorSpace*, %class.SkColorSpace** %43, align 8
  %62 = icmp eq %class.SkColorSpace* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %50
  %64 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = bitcast %class.SkColorSpace* %61 to i8*
  call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %50, %63, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #10
  %70 = load %class.SkPixelRef*, %class.SkPixelRef** %10, align 8
  %71 = icmp eq %class.SkPixelRef* %70, null
  br i1 %71, label %169, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %70, i64 0, i32 4
  %74 = load i8*, i8** %73, align 8
  %75 = load i64, i64* %58, align 8
  %76 = icmp eq i8* %74, null
  %77 = icmp eq i64 %75, 0
  %78 = or i1 %76, %77
  br i1 %78, label %95, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %81 = bitcast i8** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = ptrtoint i8* %74 to i64
  %84 = sub i64 %82, %83
  %85 = urem i64 %84, %75
  %86 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0
  %87 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %86) #10
  %88 = zext i32 %87 to i64
  %89 = lshr i64 %85, %88
  %90 = udiv i64 %84, %75
  %91 = trunc i64 %89 to i32
  %92 = trunc i64 %90 to i32
  %93 = load %class.SkPixelRef*, %class.SkPixelRef** %10, align 8
  %94 = icmp eq %class.SkPixelRef* %93, null
  br i1 %94, label %102, label %95

95:                                               ; preds = %72, %79
  %96 = phi i32 [ %92, %79 ], [ 0, %72 ]
  %97 = phi i32 [ %91, %79 ], [ 0, %72 ]
  %98 = phi %class.SkPixelRef* [ %93, %79 ], [ %70, %72 ]
  %99 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %98, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 1 monotonic
  %101 = ptrtoint %class.SkPixelRef* %98 to i64
  br label %102

102:                                              ; preds = %79, %95
  %103 = phi i32 [ %92, %79 ], [ %96, %95 ]
  %104 = phi i32 [ %91, %79 ], [ %97, %95 ]
  %105 = phi i64 [ 0, %79 ], [ %101, %95 ]
  %106 = load i32, i32* %20, align 4
  %107 = add nsw i32 %106, %104
  %108 = load i32, i32* %21, align 4
  %109 = add nsw i32 %108, %103
  %110 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %6, i64 0, i32 1, i32 2, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, 0
  %113 = select i1 %112, i64 0, i64 %105
  %114 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %6, i64 0, i32 0, i32 0
  %115 = load %class.SkPixelRef*, %class.SkPixelRef** %114, align 8
  %116 = bitcast %class.SkBitmap* %6 to i64*
  store i64 %113, i64* %116, align 8
  %117 = icmp eq %class.SkPixelRef* %115, null
  %118 = inttoptr i64 %113 to %class.SkPixelRef*
  br i1 %117, label %131, label %119

119:                                              ; preds = %102
  %120 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %115, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = atomicrmw add i32* %120, i32 -1 acq_rel
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = bitcast %class.SkPixelRef* %115 to %class.SkRefCntBase*
  %125 = bitcast %class.SkPixelRef* %115 to void (%class.SkRefCntBase*)***
  %126 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %125, align 8
  %127 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %126, i64 2
  %128 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %127, align 8
  call void %128(%class.SkRefCntBase* nonnull %124) #10
  br label %129

129:                                              ; preds = %123, %119
  %130 = load %class.SkPixelRef*, %class.SkPixelRef** %114, align 8
  br label %131

131:                                              ; preds = %129, %102
  %132 = phi %class.SkPixelRef* [ %130, %129 ], [ %118, %102 ]
  %133 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %6, i64 0, i32 1, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq %class.SkPixelRef* %132, null
  br i1 %135, label %151, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %132, i64 0, i32 5
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %132, i64 0, i32 4
  %140 = load i8*, i8** %139, align 8
  %141 = icmp eq i8* %140, null
  br i1 %141, label %151, label %142

142:                                              ; preds = %136
  %143 = sext i32 %109 to i64
  %144 = mul i64 %138, %143
  %145 = getelementptr inbounds i8, i8* %140, i64 %144
  %146 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %6, i64 0, i32 1, i32 2, i32 0
  %147 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %146) #10
  %148 = mul nsw i32 %147, %107
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* %145, i64 %149
  br label %151

151:                                              ; preds = %131, %136, %142
  %152 = phi i8* [ %150, %142 ], [ null, %136 ], [ null, %131 ]
  %153 = phi i64 [ %138, %142 ], [ %138, %136 ], [ %134, %131 ]
  store i64 %153, i64* %133, align 8
  %154 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %6, i64 0, i32 1, i32 0
  store i8* %152, i8** %154, align 8
  %155 = icmp eq i64 %105, 0
  %156 = xor i1 %112, true
  %157 = or i1 %155, %156
  br i1 %157, label %169, label %158

158:                                              ; preds = %151
  %159 = inttoptr i64 %105 to %class.SkPixelRef*
  %160 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %159, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i32* %160, i32 -1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %169

163:                                              ; preds = %158
  %164 = inttoptr i64 %105 to %class.SkRefCntBase*
  %165 = inttoptr i64 %105 to void (%class.SkRefCntBase*)***
  %166 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %165, align 8
  %167 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %166, i64 2
  %168 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %167, align 8
  call void %168(%class.SkRefCntBase* nonnull %164) #10
  br label %169

169:                                              ; preds = %69, %163, %158, %151
  call void @_ZN8SkBitmap4swapERS_(%class.SkBitmap* nonnull %1, %class.SkBitmap* nonnull dereferenceable(56) %6)
  %170 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %6, i64 0, i32 2, i32 0
  %171 = load %class.SkMipmap*, %class.SkMipmap** %170, align 8
  %172 = icmp eq %class.SkMipmap* %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %169
  %174 = bitcast %class.SkMipmap* %171 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %174, i1 zeroext false) #10
  br label %175

175:                                              ; preds = %173, %169
  %176 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %6, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %177 = load %class.SkColorSpace*, %class.SkColorSpace** %176, align 8
  %178 = icmp eq %class.SkColorSpace* %177, null
  br i1 %178, label %185, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = atomicrmw add i32* %180, i32 -1 acq_rel
  %182 = icmp eq i32 %181, 1
  br i1 %182, label %183, label %185

183:                                              ; preds = %179
  %184 = bitcast %class.SkColorSpace* %177 to i8*
  call void @_ZdlPv(i8* %184) #11
  br label %185

185:                                              ; preds = %183, %179, %175
  %186 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %6, i64 0, i32 0, i32 0
  %187 = load %class.SkPixelRef*, %class.SkPixelRef** %186, align 8
  %188 = icmp eq %class.SkPixelRef* %187, null
  br i1 %188, label %199, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %187, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = atomicrmw add i32* %190, i32 -1 acq_rel
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %199

193:                                              ; preds = %189
  %194 = bitcast %class.SkPixelRef* %187 to %class.SkRefCntBase*
  %195 = bitcast %class.SkPixelRef* %187 to void (%class.SkRefCntBase*)***
  %196 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %195, align 8
  %197 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %196, i64 2
  %198 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %197, align 8
  call void %198(%class.SkRefCntBase* nonnull %194) #10
  br label %199

199:                                              ; preds = %185, %189, %193
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %31) #10
  br label %200

200:                                              ; preds = %13, %199
  %201 = phi i1 [ true, %199 ], [ false, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  br label %202

202:                                              ; preds = %9, %3, %200
  %203 = phi i1 [ %201, %200 ], [ false, %9 ], [ false, %3 ]
  ret i1 %203
}

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkBitmap10readPixelsERK11SkImageInfoPvmii(%class.SkBitmap* readonly, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkPixmap, align 8
  %8 = bitcast %class.SkPixmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 40, i1 false) #10
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %51, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  %14 = bitcast %class.SkPixmap* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %14, i64 16, i1 false) #10
  %15 = icmp eq %class.SkPixmap* %13, %7
  br i1 %15, label %35, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %18 = load %class.SkColorSpace*, %class.SkColorSpace** %17, align 8
  %19 = icmp eq %class.SkColorSpace* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* %18, %class.SkColorSpace** %21, align 8
  br label %35

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic
  %25 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8
  %27 = bitcast %class.SkColorSpace* %26 to i8*
  %28 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* %18, %class.SkColorSpace** %28, align 8
  %29 = icmp eq %class.SkColorSpace* %26, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  call void @_ZdlPv(i8* %27) #11
  br label %35

35:                                               ; preds = %34, %30, %22, %12, %20
  %36 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 2, i32 0, i32 1
  %37 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %38 = bitcast i32* %37 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 8
  %40 = bitcast i32* %36 to <2 x i64>*
  store <2 x i64> %39, <2 x i64>* %40, align 8
  %41 = call zeroext i1 @_ZNK8SkPixmap10readPixelsERK11SkImageInfoPvmii(%class.SkPixmap* nonnull %7, %struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, i32 %4, i32 %5) #10
  %42 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %43 = load %class.SkColorSpace*, %class.SkColorSpace** %42, align 8
  %44 = bitcast %class.SkColorSpace* %43 to i8*
  %45 = icmp eq %class.SkColorSpace* %43, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %35
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call void @_ZdlPv(i8* %44) #11
  br label %51

51:                                               ; preds = %6, %35, %46, %50
  %52 = phi i1 [ %41, %35 ], [ %41, %46 ], [ %41, %50 ], [ false, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #10
  ret i1 %52
}

declare zeroext i1 @_ZNK8SkPixmap10readPixelsERK11SkImageInfoPvmii(%class.SkPixmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkBitmap10readPixelsERK8SkPixmapii(%class.SkBitmap* readonly, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPixmap, align 8
  %6 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.SkPixmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 40, i1 false) #10
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %53, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  %17 = bitcast %class.SkPixmap* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %17, i64 16, i1 false) #10
  %18 = icmp eq %class.SkPixmap* %16, %5
  br i1 %18, label %37, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %21 = load %class.SkColorSpace*, %class.SkColorSpace** %20, align 8
  %22 = icmp eq %class.SkColorSpace* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %24, align 8
  br label %37

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  %28 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = load %class.SkColorSpace*, %class.SkColorSpace** %28, align 8
  %30 = bitcast %class.SkColorSpace* %29 to i8*
  store %class.SkColorSpace* %21, %class.SkColorSpace** %28, align 8
  %31 = icmp eq %class.SkColorSpace* %29, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  call void @_ZdlPv(i8* %30) #11
  br label %37

37:                                               ; preds = %36, %32, %25, %23, %15
  %38 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 1
  %39 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %40 = bitcast i32* %39 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 8
  %42 = bitcast i32* %38 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  %43 = call zeroext i1 @_ZNK8SkPixmap10readPixelsERK11SkImageInfoPvmii(%class.SkPixmap* nonnull %5, %struct.SkImageInfo* dereferenceable(24) %6, i8* %8, i64 %10, i32 %2, i32 %3) #10
  %44 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = load %class.SkColorSpace*, %class.SkColorSpace** %44, align 8
  %46 = bitcast %class.SkColorSpace* %45 to i8*
  %47 = icmp eq %class.SkColorSpace* %45, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %53

52:                                               ; preds = %48
  call void @_ZdlPv(i8* %46) #11
  br label %53

53:                                               ; preds = %4, %37, %48, %52
  %54 = phi i1 [ %43, %37 ], [ %43, %48 ], [ %43, %52 ], [ false, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #10
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkBitmap11writePixelsERK8SkPixmapii(%class.SkBitmap*, %class.SkPixmap* nocapture readonly dereferenceable(40), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkWritePixelsRec, align 16
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %143, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %8, 536870911
  %14 = add i32 %12, -1
  %15 = icmp ugt i32 %14, 536870910
  %16 = or i1 %13, %15
  br i1 %16, label %143, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ne i32 %19, 0
  %21 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 0
  %24 = and i1 %20, %23
  br i1 %24, label %25, label %143

25:                                               ; preds = %17
  %26 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %143, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %27, 536870911
  %33 = add i32 %31, -1
  %34 = icmp ugt i32 %33, 536870910
  %35 = or i1 %32, %34
  br i1 %35, label %143, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp ne i32 %38, 0
  %40 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp ne i32 %41, 0
  %43 = and i1 %39, %42
  br i1 %43, label %44, label %143

44:                                               ; preds = %36
  %45 = bitcast %struct.SkWritePixelsRec* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %45) #10
  %46 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %5, i64 0, i32 2
  %47 = bitcast %struct.SkImageInfo* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %47, i8 -86, i64 32, i1 false)
  %48 = bitcast %class.SkPixmap* %1 to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 8
  %50 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %5, i64 0, i32 0
  %51 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %5, i64 0, i32 1
  %52 = bitcast %struct.SkWritePixelsRec* %5 to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %52, align 16
  %53 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %55 = load %class.SkColorSpace*, %class.SkColorSpace** %54, align 8
  %56 = icmp eq %class.SkColorSpace* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %44
  %58 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 1 monotonic
  %60 = load i32, i32* %7, align 4
  %61 = load i32, i32* %11, align 4
  br label %62

62:                                               ; preds = %44, %57
  %63 = phi i32 [ %12, %44 ], [ %61, %57 ]
  %64 = phi i32 [ %8, %44 ], [ %60, %57 ]
  store %class.SkColorSpace* %55, %class.SkColorSpace** %53, align 16
  %65 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %5, i64 0, i32 2, i32 0, i32 1
  %66 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %5, i64 0, i32 2, i32 1
  %67 = bitcast %struct.SkISize* %66 to i64*
  %68 = bitcast i32* %37 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8
  %70 = bitcast i32* %65 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %70, align 8
  %71 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %5, i64 0, i32 3
  store i32 %2, i32* %71, align 8
  %72 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %5, i64 0, i32 4
  store i32 %3, i32* %72, align 4
  %73 = call zeroext i1 @_ZN16SkWritePixelsRec4trimEii(%struct.SkWritePixelsRec* nonnull %5, i32 %64, i32 %63) #10
  br i1 %73, label %74, label %132

74:                                               ; preds = %62
  %75 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = load i32, i32* %72, align 4
  %80 = load i32, i32* %71, align 8
  %81 = sext i32 %79 to i64
  %82 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = mul i64 %83, %81
  %85 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0
  %86 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %85) #10
  %87 = shl i32 %80, %86
  %88 = sext i32 %87 to i64
  %89 = add i64 %84, %88
  %90 = getelementptr inbounds i8, i8* %76, i64 %89
  br label %91

91:                                               ; preds = %74, %78
  %92 = phi i8* [ %90, %78 ], [ null, %74 ]
  %93 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #10
  %94 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %96 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %5, i64 0, i32 2
  %97 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 24, i1 false)
  %98 = load i64, i64* %67, align 16
  %99 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %100 = load %class.SkColorSpace*, %class.SkColorSpace** %99, align 8, !noalias !49
  %101 = icmp eq %class.SkColorSpace* %100, null
  br i1 %101, label %105, label %102

102:                                              ; preds = %91
  %103 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw add i32* %103, i32 1 monotonic, !noalias !49
  br label %105

105:                                              ; preds = %91, %102
  store %class.SkColorSpace* %100, %class.SkColorSpace** %94, align 8, !alias.scope !49
  %106 = bitcast i32* %18 to i64*
  %107 = bitcast i32* %95 to i64*
  %108 = load i64, i64* %106, align 8, !noalias !49
  store i64 %108, i64* %107, align 8, !alias.scope !49
  %109 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %110 = bitcast %struct.SkISize* %109 to i64*
  store i64 %98, i64* %110, align 8, !alias.scope !49
  %111 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = load i8*, i8** %50, align 16
  %114 = load i64, i64* %51, align 8
  %115 = call zeroext i1 @_Z15SkConvertPixelsRK11SkImageInfoPvmS1_PKvm(%struct.SkImageInfo* nonnull dereferenceable(24) %6, i8* %92, i64 %112, %struct.SkImageInfo* dereferenceable(24) %96, i8* %113, i64 %114) #10
  br i1 %115, label %116, label %121

116:                                              ; preds = %105
  %117 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %118 = load %class.SkPixelRef*, %class.SkPixelRef** %117, align 8
  %119 = icmp eq %class.SkPixelRef* %118, null
  br i1 %119, label %121, label %120

120:                                              ; preds = %116
  call void @_ZN10SkPixelRef19notifyPixelsChangedEv(%class.SkPixelRef* nonnull %118) #10
  br label %121

121:                                              ; preds = %120, %116, %105
  %122 = phi i1 [ false, %105 ], [ true, %116 ], [ true, %120 ]
  %123 = load %class.SkColorSpace*, %class.SkColorSpace** %94, align 8
  %124 = icmp eq %class.SkColorSpace* %123, null
  br i1 %124, label %131, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = atomicrmw add i32* %126, i32 -1 acq_rel
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %131

129:                                              ; preds = %125
  %130 = bitcast %class.SkColorSpace* %123 to i8*
  call void @_ZdlPv(i8* %130) #11
  br label %131

131:                                              ; preds = %121, %125, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #10
  br label %132

132:                                              ; preds = %62, %131
  %133 = phi i1 [ %122, %131 ], [ false, %62 ]
  %134 = load %class.SkColorSpace*, %class.SkColorSpace** %53, align 16
  %135 = icmp eq %class.SkColorSpace* %134, null
  br i1 %135, label %142, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 -1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %136
  %141 = bitcast %class.SkColorSpace* %134 to i8*
  call void @_ZdlPv(i8* %141) #11
  br label %142

142:                                              ; preds = %132, %136, %140
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %45) #10
  br label %143

143:                                              ; preds = %4, %10, %25, %29, %17, %36, %142
  %144 = phi i1 [ %133, %142 ], [ false, %36 ], [ false, %17 ], [ false, %29 ], [ false, %25 ], [ false, %10 ], [ false, %4 ]
  ret i1 %144
}

declare zeroext i1 @_ZN16SkWritePixelsRec4trimEii(%struct.SkWritePixelsRec*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_Z15SkConvertPixelsRK11SkImageInfoPvmS1_PKvm(%struct.SkImageInfo* dereferenceable(24), i8*, i64, %struct.SkImageInfo* dereferenceable(24), i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkBitmap12extractAlphaEPS_PK7SkPaintPNS_9AllocatorEP8SkIPoint(%class.SkBitmap* readonly, %class.SkBitmap*, %class.SkPaint* readonly, %"class.SkBitmap::Allocator"*, %struct.SkIPoint*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.SkBitmap::HeapAllocator", align 8
  %7 = alloca %"class.SkBitmap::HeapAllocator", align 8
  %8 = alloca %class.SkBitmap, align 8
  %9 = alloca %class.SkMatrix, align 16
  %10 = alloca %struct.SkMask, align 8
  %11 = alloca %struct.SkMask, align 8
  %12 = alloca %struct.SkImageInfo, align 16
  %13 = alloca %struct.SkImageInfo, align 16
  %14 = bitcast %class.SkBitmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 56, i1 false) #10
  %15 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #10
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %17 = bitcast %class.SkMatrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %17, align 16
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %19, align 16
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %20, align 16
  store i32 16, i32* %16, align 4
  %21 = bitcast %struct.SkMask* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #10
  %22 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %10, i64 0, i32 0
  %23 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %10, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %10, i64 0, i32 1, i32 1
  %25 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %10, i64 0, i32 1, i32 2
  %26 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %10, i64 0, i32 1, i32 3
  %27 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %10, i64 0, i32 2
  %28 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %10, i64 0, i32 3
  %29 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %10, i64 0, i32 1
  %30 = bitcast %struct.SkIRect* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  store i8* null, i8** %22, align 8
  %31 = bitcast %struct.SkMask* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #10
  %32 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %11, i64 0, i32 0
  %33 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %11, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %11, i64 0, i32 1, i32 1
  %35 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %11, i64 0, i32 1, i32 2
  %36 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %11, i64 0, i32 1, i32 3
  %37 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %11, i64 0, i32 2
  %38 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %11, i64 0, i32 1
  %39 = bitcast %struct.SkIRect* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  store i8* null, i8** %32, align 8
  %40 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %192, label %43

43:                                               ; preds = %5
  %44 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %192, label %47

47:                                               ; preds = %43
  store i32 0, i32* %23, align 8
  store i32 0, i32* %24, align 4
  store i32 %41, i32* %25, align 8
  store i32 %45, i32* %26, align 4
  %48 = add nsw i32 %41, 3
  %49 = and i32 %48, -4
  store i32 %49, i32* %27, align 8
  store i8 1, i8* %28, align 4
  %50 = icmp eq %class.SkPaint* %2, null
  br i1 %50, label %76, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 2, i32 0
  %53 = load %class.SkMaskFilter*, %class.SkMaskFilter** %52, align 8
  %54 = icmp eq %class.SkMaskFilter* %53, null
  br i1 %54, label %76, label %55

55:                                               ; preds = %51
  %56 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %9) #10
  %57 = bitcast %class.SkMaskFilter* %53 to %class.SkMaskFilterBase*
  %58 = bitcast %class.SkMaskFilter* %53 to i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)***
  %59 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)**, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*** %58, align 8
  %60 = getelementptr inbounds i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %59, i64 8
  %61 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %60, align 8
  %62 = call zeroext i1 %61(%class.SkMaskFilterBase* nonnull %57, %struct.SkMask* nonnull %11, %struct.SkMask* nonnull dereferenceable(32) %10, %class.SkMatrix* nonnull dereferenceable(40) %9, %struct.SkIPoint* null) #10
  br i1 %62, label %63, label %76

63:                                               ; preds = %55
  %64 = load i32, i32* %35, align 8
  %65 = load i32, i32* %33, align 8
  %66 = add i32 %64, 3
  %67 = sub i32 %66, %65
  %68 = and i32 %67, -4
  store i32 %68, i32* %37, align 8
  %69 = call i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask* nonnull %10) #10
  %70 = call i8* @_ZN6SkMask10AllocImageEmNS_9AllocTypeE(i64 %69, i32 0) #10
  store i8* %70, i8** %22, align 8
  %71 = load i32, i32* %27, align 8
  call fastcc void @_ZL14GetBitmapAlphaRK8SkBitmapPhi(%class.SkBitmap* dereferenceable(56) %0, i8* %70, i32 %71)
  %72 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)**, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*** %58, align 8
  %73 = getelementptr inbounds i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %72, i64 8
  %74 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %73, align 8
  %75 = call zeroext i1 %74(%class.SkMaskFilterBase* nonnull %57, %struct.SkMask* nonnull %11, %struct.SkMask* nonnull dereferenceable(32) %10, %class.SkMatrix* nonnull dereferenceable(40) %9, %struct.SkIPoint* null) #10
  br i1 %75, label %125, label %186

76:                                               ; preds = %47, %51, %55, %191
  %77 = bitcast %struct.SkImageInfo* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #10
  %78 = load i32, i32* %40, align 4
  %79 = load i32, i32* %44, align 4
  %80 = zext i32 %79 to i64
  %81 = shl nuw i64 %80, 32
  %82 = zext i32 %78 to i64
  %83 = or i64 %81, %82
  %84 = bitcast %struct.SkImageInfo* %12 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %84, align 16, !alias.scope !54
  %85 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 1
  %86 = bitcast %struct.SkISize* %85 to i64*
  store i64 %83, i64* %86, align 16, !alias.scope !54
  %87 = load i32, i32* %27, align 8
  %88 = zext i32 %87 to i64
  %89 = call zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap* nonnull %8, %struct.SkImageInfo* nonnull dereferenceable(24) %12, i64 %88)
  %90 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 0, i32 0, i32 0
  %91 = load %class.SkColorSpace*, %class.SkColorSpace** %90, align 16
  %92 = icmp eq %class.SkColorSpace* %91, null
  br i1 %92, label %99, label %93

93:                                               ; preds = %76
  %94 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = bitcast %class.SkColorSpace* %91 to i8*
  call void @_ZdlPv(i8* %98) #11
  br label %99

99:                                               ; preds = %76, %93, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #10
  %100 = bitcast %"class.SkBitmap::HeapAllocator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #10
  %101 = getelementptr inbounds %"class.SkBitmap::HeapAllocator", %"class.SkBitmap::HeapAllocator"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.SkBitmap::HeapAllocator", %"class.SkBitmap::HeapAllocator"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 16, i1 false) #10
  store i32 1, i32* %102, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8SkBitmap13HeapAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %103 = icmp eq %"class.SkBitmap::Allocator"* %3, null
  %104 = bitcast %"class.SkBitmap::HeapAllocator"* %6 to %"class.SkBitmap::Allocator"*
  %105 = select i1 %103, %"class.SkBitmap::Allocator"* %104, %"class.SkBitmap::Allocator"* %3
  %106 = bitcast %"class.SkBitmap::Allocator"* %105 to i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)***
  %107 = load i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)**, i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)*** %106, align 8
  %108 = getelementptr inbounds i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)*, i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)** %107, i64 3
  %109 = load i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)*, i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)** %108, align 8
  %110 = call zeroext i1 %109(%"class.SkBitmap::Allocator"* %105, %class.SkBitmap* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #10
  br i1 %110, label %116, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 2, i32 1, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 2, i32 1, i32 1
  %115 = load i32, i32* %114, align 4
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 546, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i32 %113, i32 %115) #10
  br label %192

116:                                              ; preds = %99
  %117 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = load i32, i32* %27, align 8
  call fastcc void @_ZL14GetBitmapAlphaRK8SkBitmapPhi(%class.SkBitmap* dereferenceable(56) %0, i8* %118, i32 %119)
  %120 = icmp eq %struct.SkIPoint* %4, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 0
  store i32 0, i32* %122, align 4
  %123 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 1
  store i32 0, i32* %123, align 4
  br label %124

124:                                              ; preds = %116, %121
  call void @_ZN8SkBitmap4swapERS_(%class.SkBitmap* nonnull %8, %class.SkBitmap* dereferenceable(56) %1)
  br label %192

125:                                              ; preds = %63
  %126 = load i8*, i8** %32, align 8
  %127 = bitcast %struct.SkImageInfo* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #10
  %128 = load i32, i32* %35, align 8
  %129 = load i32, i32* %33, align 8
  %130 = sub i32 %128, %129
  %131 = load i32, i32* %36, align 4
  %132 = load i32, i32* %34, align 4
  %133 = sub i32 %131, %132
  %134 = zext i32 %133 to i64
  %135 = shl nuw i64 %134, 32
  %136 = zext i32 %130 to i64
  %137 = or i64 %135, %136
  %138 = bitcast %struct.SkImageInfo* %13 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %138, align 16, !alias.scope !59
  %139 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %13, i64 0, i32 1
  %140 = bitcast %struct.SkISize* %139 to i64*
  store i64 %137, i64* %140, align 16, !alias.scope !59
  %141 = load i32, i32* %37, align 8
  %142 = zext i32 %141 to i64
  %143 = call zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap* nonnull %8, %struct.SkImageInfo* nonnull dereferenceable(24) %13, i64 %142)
  %144 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %13, i64 0, i32 0, i32 0, i32 0
  %145 = load %class.SkColorSpace*, %class.SkColorSpace** %144, align 16
  %146 = icmp eq %class.SkColorSpace* %145, null
  br i1 %146, label %153, label %147

147:                                              ; preds = %125
  %148 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw add i32* %148, i32 -1 acq_rel
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %153

151:                                              ; preds = %147
  %152 = bitcast %class.SkColorSpace* %145 to i8*
  call void @_ZdlPv(i8* %152) #11
  br label %153

153:                                              ; preds = %125, %147, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #10
  %154 = bitcast %"class.SkBitmap::HeapAllocator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #10
  %155 = getelementptr inbounds %"class.SkBitmap::HeapAllocator", %"class.SkBitmap::HeapAllocator"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.SkBitmap::HeapAllocator", %"class.SkBitmap::HeapAllocator"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 16, i1 false) #10
  store i32 1, i32* %156, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8SkBitmap13HeapAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %157 = icmp eq %"class.SkBitmap::Allocator"* %3, null
  %158 = bitcast %"class.SkBitmap::HeapAllocator"* %7 to %"class.SkBitmap::Allocator"*
  %159 = select i1 %157, %"class.SkBitmap::Allocator"* %158, %"class.SkBitmap::Allocator"* %3
  %160 = bitcast %"class.SkBitmap::Allocator"* %159 to i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)***
  %161 = load i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)**, i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)*** %160, align 8
  %162 = getelementptr inbounds i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)*, i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)** %161, i64 3
  %163 = load i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)*, i1 (%"class.SkBitmap::Allocator"*, %class.SkBitmap*)** %162, align 8
  %164 = call zeroext i1 %163(%"class.SkBitmap::Allocator"* %159, %class.SkBitmap* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #10
  br i1 %164, label %170, label %165

165:                                              ; preds = %153
  %166 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 2, i32 1, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 2, i32 1, i32 1
  %169 = load i32, i32* %168, align 4
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 570, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i32 %167, i32 %169) #10
  br label %182

170:                                              ; preds = %153
  %171 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 0
  %172 = load i8*, i8** %171, align 8
  %173 = load i8*, i8** %32, align 8
  %174 = call i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask* nonnull %11) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %172, i8* align 1 %173, i64 %174, i1 false)
  %175 = icmp eq %struct.SkIPoint* %4, null
  br i1 %175, label %181, label %176

176:                                              ; preds = %170
  %177 = load i32, i32* %33, align 8
  %178 = load i32, i32* %34, align 4
  %179 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 0
  store i32 %177, i32* %179, align 4
  %180 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 1
  store i32 %178, i32* %180, align 4
  br label %181

181:                                              ; preds = %170, %176
  call void @_ZN8SkBitmap4swapERS_(%class.SkBitmap* nonnull %8, %class.SkBitmap* dereferenceable(56) %1)
  br label %182

182:                                              ; preds = %181, %165
  %183 = phi i1 [ true, %181 ], [ false, %165 ]
  %184 = icmp eq i8* %126, null
  br i1 %184, label %186, label %185

185:                                              ; preds = %182
  call void @_ZN6SkMask9FreeImageEPv(i8* nonnull %126) #10
  br label %186

186:                                              ; preds = %185, %182, %63
  %187 = phi i1 [ undef, %63 ], [ %183, %182 ], [ %183, %185 ]
  %188 = phi i1 [ true, %63 ], [ false, %182 ], [ false, %185 ]
  %189 = icmp eq i8* %70, null
  br i1 %189, label %191, label %190

190:                                              ; preds = %186
  call void @_ZN6SkMask9FreeImageEPv(i8* nonnull %70) #10
  br label %191

191:                                              ; preds = %186, %190
  br i1 %188, label %76, label %192

192:                                              ; preds = %111, %124, %191, %5, %43
  %193 = phi i1 [ false, %43 ], [ false, %5 ], [ true, %124 ], [ false, %111 ], [ %187, %191 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #10
  %194 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 2, i32 0
  %195 = load %class.SkMipmap*, %class.SkMipmap** %194, align 8
  %196 = icmp eq %class.SkMipmap* %195, null
  br i1 %196, label %199, label %197

197:                                              ; preds = %192
  %198 = bitcast %class.SkMipmap* %195 to %class.SkCachedData*
  call void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData* nonnull %198, i1 zeroext false) #10
  br label %199

199:                                              ; preds = %197, %192
  %200 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %201 = load %class.SkColorSpace*, %class.SkColorSpace** %200, align 8
  %202 = icmp eq %class.SkColorSpace* %201, null
  br i1 %202, label %209, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %201, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = atomicrmw add i32* %204, i32 -1 acq_rel
  %206 = icmp eq i32 %205, 1
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  %208 = bitcast %class.SkColorSpace* %201 to i8*
  call void @_ZdlPv(i8* %208) #11
  br label %209

209:                                              ; preds = %207, %203, %199
  %210 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 0, i32 0
  %211 = load %class.SkPixelRef*, %class.SkPixelRef** %210, align 8
  %212 = icmp eq %class.SkPixelRef* %211, null
  br i1 %212, label %223, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %211, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = atomicrmw add i32* %214, i32 -1 acq_rel
  %216 = icmp eq i32 %215, 1
  br i1 %216, label %217, label %223

217:                                              ; preds = %213
  %218 = bitcast %class.SkPixelRef* %211 to %class.SkRefCntBase*
  %219 = bitcast %class.SkPixelRef* %211 to void (%class.SkRefCntBase*)***
  %220 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %219, align 8
  %221 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %220, i64 2
  %222 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %221, align 8
  call void %222(%class.SkRefCntBase* nonnull %218) #10
  br label %223

223:                                              ; preds = %209, %213, %217
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #10
  ret i1 %193
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #1

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL14GetBitmapAlphaRK8SkBitmapPhi(%class.SkBitmap* readonly dereferenceable(56), i8* noalias, i32) unnamed_addr #0 {
  %4 = alloca %class.SkPixmap, align 8
  %5 = alloca %struct.SkImageInfo, align 16
  %6 = bitcast %class.SkPixmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 40, i1 false) #10
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %86

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %16 = sext i32 %2 to i64
  br label %40

17:                                               ; preds = %3
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1
  %19 = bitcast %class.SkPixmap* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %19, i64 16, i1 false) #10
  %20 = icmp eq %class.SkPixmap* %18, %4
  br i1 %20, label %49, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %23 = load %class.SkColorSpace*, %class.SkColorSpace** %22, align 8
  %24 = icmp eq %class.SkColorSpace* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* %23, %class.SkColorSpace** %26, align 8
  br label %49

27:                                               ; preds = %21
  %28 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic
  %30 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %31 = load %class.SkColorSpace*, %class.SkColorSpace** %30, align 8
  %32 = bitcast %class.SkColorSpace* %31 to i8*
  %33 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* %23, %class.SkColorSpace** %33, align 8
  %34 = icmp eq %class.SkColorSpace* %31, null
  br i1 %34, label %49, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %49

39:                                               ; preds = %35
  call void @_ZdlPv(i8* %32) #11
  br label %49

40:                                               ; preds = %14, %40
  %41 = phi i32 [ 0, %14 ], [ %46, %40 ]
  %42 = phi i8* [ %1, %14 ], [ %45, %40 ]
  %43 = load i32, i32* %15, align 4
  %44 = sext i32 %43 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %42, i8 0, i64 %44, i1 false)
  %45 = getelementptr inbounds i8, i8* %42, i64 %16
  %46 = add nuw nsw i32 %41, 1
  %47 = load i32, i32* %11, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %40, label %86

49:                                               ; preds = %25, %17, %27, %35, %39
  %50 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 1
  %51 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %52 = bitcast i32* %51 to <2 x i64>*
  %53 = load <2 x i64>, <2 x i64>* %52, align 8
  %54 = bitcast i32* %50 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %54, align 8
  %55 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #10
  %56 = bitcast %struct.SkImageInfo* %5 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %56, align 16, !alias.scope !64
  %57 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %58 = bitcast %struct.SkISize* %57 to i64*
  %59 = extractelement <2 x i64> %53, i32 1
  store i64 %59, i64* %58, align 16, !alias.scope !64
  %60 = sext i32 %2 to i64
  %61 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2
  %62 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = call zeroext i1 @_Z15SkConvertPixelsRK11SkImageInfoPvmS1_PKvm(%struct.SkImageInfo* nonnull dereferenceable(24) %5, i8* %1, i64 %60, %struct.SkImageInfo* dereferenceable(24) %61, i8* %63, i64 %65) #10
  %67 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %68 = load %class.SkColorSpace*, %class.SkColorSpace** %67, align 16
  %69 = icmp eq %class.SkColorSpace* %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %49
  %71 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = bitcast %class.SkColorSpace* %68 to i8*
  call void @_ZdlPv(i8* %75) #11
  br label %76

76:                                               ; preds = %74, %70, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #10
  %77 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %78 = load %class.SkColorSpace*, %class.SkColorSpace** %77, align 8
  %79 = bitcast %class.SkColorSpace* %78 to i8*
  %80 = icmp eq %class.SkColorSpace* %78, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %86

85:                                               ; preds = %81
  call void @_ZdlPv(i8* %79) #11
  br label %86

86:                                               ; preds = %40, %10, %76, %81, %85
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #10
  ret void
}

declare i8* @_ZN6SkMask10AllocImageEmNS_9AllocTypeE(i64, i32) local_unnamed_addr #1

declare i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.26* noalias sret, %class.SkBitmap*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.26* sret %0, %class.SkBitmap* dereferenceable(56) %1) #10
  ret void
}

declare void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.26* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkBitmap13HeapAllocatorD0Ev(%"class.SkBitmap::HeapAllocator"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.SkBitmap::HeapAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

declare i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

declare void @_ZNK12SkCachedData13internalUnrefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK12SkCachedData11internalRefEb(%class.SkCachedData*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN10SkPixelRefC1EiiPvm(%class.SkPixelRef*, i32, i32, i8*, i64) unnamed_addr #1

declare void @_ZN6SkMask9FreeImageEPv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!4 = distinct !{!4, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!7 = distinct !{!7, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!8 = !{!9, !6, !3}
!9 = distinct !{!9, !10, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!10 = distinct !{!10, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!11 = !{!12, !3}
!12 = distinct !{!12, !13, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!13 = distinct !{!13, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!16 = distinct !{!16, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!17 = !{!18, !15}
!18 = distinct !{!18, !19, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!19 = distinct !{!19, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!20 = !{!21, !18, !15}
!21 = distinct !{!21, !22, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!22 = distinct !{!22, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!23 = !{!24, !15}
!24 = distinct !{!24, !25, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!25 = distinct !{!25, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_Z10sk_make_spI10SkPixelRefJiiRPvRmEE5sk_spIT_EDpOT0_: argument 0"}
!28 = distinct !{!28, !"_Z10sk_make_spI10SkPixelRefJiiRPvRmEE5sk_spIT_EDpOT0_"}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!31 = distinct !{!31, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!32 = distinct !{!32, !33, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!33 = distinct !{!33, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE"}
!34 = !{!35, !37}
!35 = distinct !{!35, !36, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!36 = distinct !{!36, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!37 = distinct !{!37, !38, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!38 = distinct !{!38, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE"}
!39 = !{!40, !42}
!40 = distinct !{!40, !41, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!41 = distinct !{!41, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!42 = distinct !{!42, !43, !"_ZN11SkImageInfo6MakeA8Eii: argument 0"}
!43 = distinct !{!43, !"_ZN11SkImageInfo6MakeA8Eii"}
!44 = !{!45, !47}
!45 = distinct !{!45, !46, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!46 = distinct !{!46, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!47 = distinct !{!47, !48, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize: argument 0"}
!48 = distinct !{!48, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize"}
!49 = !{!50, !52}
!50 = distinct !{!50, !51, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!51 = distinct !{!51, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!52 = distinct !{!52, !53, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize: argument 0"}
!53 = distinct !{!53, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize"}
!54 = !{!55, !57}
!55 = distinct !{!55, !56, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!56 = distinct !{!56, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!57 = distinct !{!57, !58, !"_ZN11SkImageInfo6MakeA8Eii: argument 0"}
!58 = distinct !{!58, !"_ZN11SkImageInfo6MakeA8Eii"}
!59 = !{!60, !62}
!60 = distinct !{!60, !61, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!61 = distinct !{!61, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!62 = distinct !{!62, !63, !"_ZN11SkImageInfo6MakeA8Eii: argument 0"}
!63 = distinct !{!63, !"_ZN11SkImageInfo6MakeA8Eii"}
!64 = !{!65, !67}
!65 = distinct !{!65, !66, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!66 = distinct !{!66, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!67 = distinct !{!67, !68, !"_ZN11SkImageInfo6MakeA8Eii: argument 0"}
!68 = distinct !{!68, !"_ZN11SkImageInfo6MakeA8Eii"}
