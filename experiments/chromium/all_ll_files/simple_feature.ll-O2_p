; ModuleID = '../../extensions/common/features/simple_feature.cc'
source_filename = "../../extensions/common/features/simple_feature.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [24 x i8] }
%"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.extensions::SimpleFeature" = type <{ %"class.extensions::Feature.base", [7 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.6", %"class.std::__1::vector.13", %"class.absl::optional", %"class.std::__1::vector.28", %"class.extensions::URLPatternSet", %"class.absl::optional.43", %"class.absl::optional.48", %"class.absl::optional.48", %"class.absl::optional.53", %"class.absl::optional.53", %"class.absl::optional.58", %"class.absl::optional.63", i8, i8, i8, [3 x i8] }>
%"class.extensions::Feature.base" = type <{ i32 (...)**, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { i32*, i32*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i32* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.std::__1::vector.21" }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i32*, i32*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i32* }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i64 }
%"class.absl::optional.43" = type { %"class.absl::optional_internal::optional_data.44" }
%"class.absl::optional_internal::optional_data.44" = type { %"class.absl::optional_internal::optional_data_base.45" }
%"class.absl::optional_internal::optional_data_base.45" = type { %"class.absl::optional_internal::optional_data_dtor_base.46" }
%"class.absl::optional_internal::optional_data_dtor_base.46" = type { i8, %union.anon.47 }
%union.anon.47 = type { i32 }
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, %union.anon.52 }
%union.anon.52 = type { i32 }
%"class.absl::optional.53" = type { %"class.absl::optional_internal::optional_data.54" }
%"class.absl::optional_internal::optional_data.54" = type { %"class.absl::optional_internal::optional_data_base.55" }
%"class.absl::optional_internal::optional_data_base.55" = type { %"class.absl::optional_internal::optional_data_dtor_base.56" }
%"class.absl::optional_internal::optional_data_dtor_base.56" = type { i8, %union.anon.57 }
%union.anon.57 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.58" = type { %"class.absl::optional_internal::optional_data.59" }
%"class.absl::optional_internal::optional_data.59" = type { %"class.absl::optional_internal::optional_data_base.60" }
%"class.absl::optional_internal::optional_data_base.60" = type { %"class.absl::optional_internal::optional_data_dtor_base.61" }
%"class.absl::optional_internal::optional_data_dtor_base.61" = type { i8, %union.anon.62 }
%union.anon.62 = type { i32 }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { i8 }
%"struct.extensions::(anonymous namespace)::AllowlistInfo" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map.175", i64 }
%"class.std::__1::map.175" = type { %"class.std::__1::__tree.176" }
%"class.std::__1::__tree.176" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.extensions::Feature" = type <{ i32 (...)**, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.extensions::Feature::Availability" = type { i32, %"class.std::__1::basic_string" }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.68" }
%"struct.std::__1::__atomic_base.68" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.extensions::ExtensionAPI" = type { i32 (...)**, i8, %"class.base::Lock", %"class.std::__1::map.153", %"class.std::__1::map.162" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::map.153" = type { %"class.std::__1::__tree.154" }
%"class.std::__1::__tree.154" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::map.162" = type { %"class.std::__1::__tree.163" }
%"class.std::__1::__tree.163" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe.69", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.73", %"class.std::__1::vector.79", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.99", %"class.std::__1::map", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe.69" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.81" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.86" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.92" }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { i32*, i32*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i32* }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.102", i32, i32 }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.105" }
%"union.absl::variant_internal::DestructibleUnionImpl.105" = type { %"union.absl::variant_internal::DestructibleUnionImpl.106" }
%"union.absl::variant_internal::DestructibleUnionImpl.106" = type { %"union.absl::variant_internal::DestructibleUnionImpl.107" }
%"union.absl::variant_internal::DestructibleUnionImpl.107" = type { %"union.absl::variant_internal::DestructibleUnionImpl.108" }
%"union.absl::variant_internal::DestructibleUnionImpl.108" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.140" }
%"class.std::__1::__tree.140" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.141", %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.URLPattern = type { i32, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.202", %"class.std::__1::__tuple_leaf.203", %"class.std::__1::__tuple_leaf.204", %"class.std::__1::__tuple_leaf.205" }
%"class.std::__1::__tuple_leaf" = type { %"class.extensions::HashedExtensionId" }
%"class.std::__1::__tuple_leaf.202" = type { i32 }
%"class.std::__1::__tuple_leaf.203" = type { i32 }
%"class.std::__1::__tuple_leaf.204" = type { i32 }
%"class.std::__1::__tuple_leaf.205" = type { i32 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPKPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueEvE4typeESF_SF_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityERKNS3_17HashedExtensionIdENS3_8Manifest4TypeENS3_5mojom16ManifestLocationEiNS4_8PlatformEPKS4_EJS6_SA_SC_iSD_EEEFS5_SF_EE3RunEPNS0_13BindStateBaseESF_ = comdat any

$_ZN4base8internal9BindStateIPFN10extensions7Feature12AvailabilityERKNS2_17HashedExtensionIdENS2_8Manifest4TypeENS2_5mojom16ManifestLocationEiNS3_8PlatformEPKS3_EJS5_S9_SB_iSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityEPKNS3_9ExtensionENS4_7ContextERK4GURLNS4_8PlatformEPKS4_EJNS0_18RetainedRefWrapperIS7_EES9_SA_SD_EEEFS5_SF_EE3RunEPNS0_13BindStateBaseESF_ = comdat any

$_ZN4base8internal9BindStateIPFN10extensions7Feature12AvailabilityEPKNS2_9ExtensionENS3_7ContextERK4GURLNS3_8PlatformEPKS3_EJNS0_18RetainedRefWrapperIS6_EES8_S9_SC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityEPKS4_EJEEES8_E3RunEPNS0_13BindStateBaseES7_ = comdat any

$_ZN4base8internal9BindStateIPFN10extensions7Feature12AvailabilityEPKS3_EJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorIN10extensions7Feature7ContextENS_9allocatorIS3_EEE6assignIPKS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZNSt3__16vectorIN10extensions8Manifest4TypeENS_9allocatorIS3_EEE6assignIPKS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZNSt3__16vectorIN10extensions5mojom18FeatureSessionTypeENS_9allocatorIS3_EEE6assignIPKS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZNSt3__16vectorIN10extensions7Feature8PlatformENS_9allocatorIS3_EEE6assignIPKS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

@_ZN10extensions12_GLOBAL__N_116g_allowlist_infoE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZTVN10extensions13SimpleFeatureE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::SimpleFeature"*)* @_ZN10extensions13SimpleFeatureD2Ev to i8*), i8* bitcast (void (%"class.extensions::SimpleFeature"*)* @_ZN10extensions13SimpleFeatureD0Ev to i8*), i8* bitcast (i1 (%"class.extensions::SimpleFeature"*)* @_ZNK10extensions13SimpleFeature10IsInternalEv to i8*), i8* bitcast (void (%"class.extensions::Feature::Availability"*, %"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*, i32, i32, i32, i32)* @_ZNK10extensions13SimpleFeature21IsAvailableToManifestERKNS_17HashedExtensionIdENS_8Manifest4TypeENS_5mojom16ManifestLocationEiNS_7Feature8PlatformE to i8*), i8* bitcast (void (%"class.extensions::Feature::Availability"*, %"class.extensions::SimpleFeature"*, %"class.extensions::Extension"*, i32, %class.GURL*, i32)* @_ZNK10extensions13SimpleFeature20IsAvailableToContextEPKNS_9ExtensionENS_7Feature7ContextERK4GURLNS4_8PlatformE to i8*), i8* bitcast (void (%"class.extensions::Feature::Availability"*, %"class.extensions::SimpleFeature"*)* @_ZNK10extensions13SimpleFeature24IsAvailableToEnvironmentEv to i8*), i8* bitcast (i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)* @_ZNK10extensions13SimpleFeature15IsIdInBlocklistERKNS_17HashedExtensionIdE to i8*), i8* bitcast (i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)* @_ZNK10extensions13SimpleFeature15IsIdInAllowlistERKNS_17HashedExtensionIdE to i8*)] }, align 8
@.str = private unnamed_addr constant [48 x i8] c"'%s' is not allowed for specified extension ID.\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"'%s' is not allowed on %s.\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"'%s' is only allowed for %s, but this is a %s.\00", align 1
@.str.3 = private unnamed_addr constant [52 x i8] c"'%s' is only allowed to run in %s, but this is a %s\00", align 1
@.str.4 = private unnamed_addr constant [52 x i8] c"'%s' is not allowed for specified install location.\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"'%s' is not allowed for specified platform.\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"'%s' requires manifest version of at least %d.\00", align 1
@.str.7 = private unnamed_addr constant [47 x i8] c"'%s' requires manifest version of %d or lower.\00", align 1
@.str.8 = private unnamed_addr constant [68 x i8] c"'%s' is only allowed to run in %s sessions, but this is %s session.\00", align 1
@.str.9 = private unnamed_addr constant [55 x i8] c"'%s' requires a different Feature that is not present.\00", align 1
@.str.10 = private unnamed_addr constant [63 x i8] c"'%s' requires %s channel or newer, but this is the %s channel.\00", align 1
@.str.11 = private unnamed_addr constant [58 x i8] c"'%s' requires the '%s' command line switch to be enabled.\00", align 1
@.str.12 = private unnamed_addr constant [51 x i8] c"'%s' requires the '%s' feature flag to be enabled.\00", align 1
@_ZN10extensions8switches32kEnableExperimentalExtensionApisE = external constant [0 x i8], align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"extension\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"hosted app\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"legacy packaged app\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"packaged app\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"theme\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"user script\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"shared module\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"login screen extension\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"privileged page\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"extension iframe\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"content script\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"webui\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"webui untrusted\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"lock screen app\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"user-less\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"kiosk app\00", align 1
@.str.33 = private unnamed_addr constant [24 x i8] c"auto-launched kiosk app\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"regular user\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"trunk\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"canary\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"dev\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"stable\00", align 1
@.str.40 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.41 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"=1\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"enable-\00", align 1
@_ZN10extensions8switches23kAllowlistedExtensionIDE = external constant [0 x i8], align 1
@.str.44 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c", and \00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c" and \00", align 1

@_ZN10extensions13SimpleFeature34ScopedThreadUnsafeAllowlistForTestC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"*, %"class.std::__1::basic_string"*), void (%"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"*, %"class.std::__1::basic_string"*)* @_ZN10extensions13SimpleFeature34ScopedThreadUnsafeAllowlistForTestC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
@_ZN10extensions13SimpleFeature34ScopedThreadUnsafeAllowlistForTestD1Ev = hidden unnamed_addr alias void (%"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"*), void (%"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"*)* @_ZN10extensions13SimpleFeature34ScopedThreadUnsafeAllowlistForTestD2Ev
@_ZN10extensions13SimpleFeatureC1Ev = hidden unnamed_addr alias void (%"class.extensions::SimpleFeature"*), void (%"class.extensions::SimpleFeature"*)* @_ZN10extensions13SimpleFeatureC2Ev
@_ZN10extensions13SimpleFeatureD1Ev = hidden unnamed_addr alias void (%"class.extensions::SimpleFeature"*), void (%"class.extensions::SimpleFeature"*)* @_ZN10extensions13SimpleFeatureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeature34ScopedThreadUnsafeAllowlistForTestC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call fastcc dereferenceable(24) %"struct.extensions::(anonymous namespace)::AllowlistInfo"* @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_113AllowlistInfoENS_8internal23LeakyLazyInstanceTraitsIS3_EEE3GetEv()
  %5 = bitcast %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"* %0 to i8*
  %11 = bitcast %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #13
  br label %18

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest", %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.extensions::(anonymous namespace)::AllowlistInfo", %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"struct.extensions::(anonymous namespace)::AllowlistInfo", %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %13, i8* %15, i64 %17) #13
  br label %18

18:                                               ; preds = %9, %12
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  call void @_ZN8crx_file7id_util13HashedIdInHexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %20 = call fastcc dereferenceable(24) %"struct.extensions::(anonymous namespace)::AllowlistInfo"* @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_113AllowlistInfoENS_8internal23LeakyLazyInstanceTraitsIS3_EEE3GetEv()
  %21 = bitcast %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.extensions::(anonymous namespace)::AllowlistInfo", %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %25, %18
  %29 = bitcast %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %19, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(24) %"struct.extensions::(anonymous namespace)::AllowlistInfo"* @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_113AllowlistInfoENS_8internal23LeakyLazyInstanceTraitsIS3_EEE3GetEv() unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_116g_allowlist_infoE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %20, label %4

4:                                                ; preds = %0
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_116g_allowlist_infoE, i64 0, i32 0)) #13
  br i1 %5, label %6, label %18

6:                                                ; preds = %4
  %7 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #13
  %9 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions8switches23kAllowlistedExtensionIDE, i64 0, i64 0)) #13
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %1, %"class.base::CommandLine"* %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions8switches23kAllowlistedExtensionIDE, i64 0, i64 0), i64 %9) #13
  call void @_ZN8crx_file7id_util13HashedIdInHexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_116g_allowlist_infoE, i64 0, i32 1, i64 0) to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1) #13
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %14, %6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_116g_allowlist_infoE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_116g_allowlist_infoE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_116g_allowlist_infoE to i8*)) #13
  br label %20

18:                                               ; preds = %4
  %19 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_116g_allowlist_infoE, i64 0, i32 0) acquire, align 8
  br label %20

20:                                               ; preds = %0, %17, %18
  %21 = phi i64 [ %2, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_116g_allowlist_infoE, i64 0, i32 1, i64 0) to i64), %17 ], [ %19, %18 ]
  %22 = inttoptr i64 %21 to %"struct.extensions::(anonymous namespace)::AllowlistInfo"*
  ret %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8crx_file7id_util13HashedIdInHexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeature34ScopedThreadUnsafeAllowlistForTestD2Ev(%"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest", %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"* %0, i64 0, i32 0
  %3 = tail call fastcc dereferenceable(24) %"struct.extensions::(anonymous namespace)::AllowlistInfo"* @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_113AllowlistInfoENS_8internal23LeakyLazyInstanceTraitsIS3_EEE3GetEv()
  %4 = getelementptr inbounds %"struct.extensions::(anonymous namespace)::AllowlistInfo", %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %3, i64 0, i32 0
  %5 = icmp eq %"class.std::__1::basic_string"* %4, %2
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = bitcast %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %37

8:                                                ; preds = %1
  %9 = bitcast %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = bitcast %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %12, label %27, label %17

17:                                               ; preds = %8
  br i1 %16, label %21, label %18

18:                                               ; preds = %17
  %19 = bitcast %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %3 to i8*
  %20 = bitcast %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #13
  br label %37

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest", %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest", %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %23, i64 %25) #13
  br label %37

27:                                               ; preds = %8
  %28 = getelementptr inbounds %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest", %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest", %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"* %0 to i8*
  %33 = zext i8 %15 to i64
  %34 = select i1 %16, i8* %29, i8* %32
  %35 = select i1 %16, i64 %31, i64 %33
  %36 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %34, i64 %35) #13
  br label %37

37:                                               ; preds = %6, %18, %21, %27
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %7, %6 ], [ %13, %18 ], [ %13, %21 ], [ %13, %27 ]
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest", %"class.extensions::SimpleFeature::ScopedThreadUnsafeAllowlistForTest"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %37, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeatureC2Ev(%"class.extensions::SimpleFeature"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.extensions::SimpleFeature"* %0 to %"class.extensions::Feature"*
  tail call void @_ZN10extensions7FeatureC2Ev(%"class.extensions::Feature"* %2) #13
  %3 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN10extensions13SimpleFeatureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 9
  %7 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 121, i1 false)
  %8 = bitcast %union.anon.20* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false)
  tail call void @_ZN10extensions13URLPatternSetC1Ev(%"class.extensions::URLPatternSet"* %6) #13
  %9 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 17
  %17 = bitcast %union.anon.57* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 25, i1 false)
  %18 = bitcast %union.anon.57* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 25, i1 false)
  store i8 1, i8* %16, align 2
  %19 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 18
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 19
  store i8 0, i8* %20, align 4
  ret void
}

declare void @_ZN10extensions7FeatureC2Ev(%"class.extensions::Feature"*) unnamed_addr #2

declare void @_ZN10extensions13URLPatternSetC1Ev(%"class.extensions::URLPatternSet"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeatureD2Ev(%"class.extensions::SimpleFeature"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN10extensions13SimpleFeatureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZdlPv(i8* %14) #14
  br label %15

15:                                               ; preds = %12, %6
  store i8 0, i8* %3, align 8
  br label %16

16:                                               ; preds = %1, %15
  %17 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %26, %20
  store i8 0, i8* %17, align 8
  br label %30

30:                                               ; preds = %16, %29
  %31 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 9
  tail call void @_ZN10extensions13URLPatternSetD1Ev(%"class.extensions::URLPatternSet"* %31) #13
  %32 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 8, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = icmp eq i32* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = ptrtoint i32* %33 to i64
  %37 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 8, i32 0, i32 1
  %38 = bitcast i32** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast i32* %33 to i8*
  tail call void @_ZdlPv(i8* %39) #14
  br label %40

40:                                               ; preds = %30, %35
  %41 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = icmp eq i32* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = ptrtoint i32* %46 to i64
  %50 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %51 = bitcast i32** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = bitcast i32* %46 to i8*
  tail call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %48, %44
  store i8 0, i8* %41, align 8
  br label %54

54:                                               ; preds = %40, %53
  %55 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 6, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = icmp eq i32* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = ptrtoint i32* %56 to i64
  %60 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 6, i32 0, i32 1
  %61 = bitcast i32** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = bitcast i32* %56 to i8*
  tail call void @_ZdlPv(i8* %62) #14
  br label %63

63:                                               ; preds = %54, %58
  %64 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 5, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = icmp eq i32* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = ptrtoint i32* %65 to i64
  %69 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 5, i32 0, i32 1
  %70 = bitcast i32** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = bitcast i32* %65 to i8*
  tail call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %63, %67
  %73 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 4
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %74, align 8
  %76 = icmp eq %"class.std::__1::basic_string"* %75, null
  br i1 %76, label %99, label %77

77:                                               ; preds = %72
  %78 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %79 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 4, i32 0, i32 1
  %80 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %79, align 8
  %81 = icmp eq %"class.std::__1::basic_string"* %80, %75
  br i1 %81, label %97, label %82

82:                                               ; preds = %77, %92
  %83 = phi %"class.std::__1::basic_string"* [ %84, %92 ], [ %80, %77 ]
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 -1
  %85 = bitcast %"class.std::__1::basic_string"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  tail call void @_ZdlPv(i8* %91) #14
  br label %92

92:                                               ; preds = %89, %82
  %93 = icmp eq %"class.std::__1::basic_string"* %84, %75
  br i1 %93, label %94, label %82

94:                                               ; preds = %92
  %95 = bitcast %"class.std::__1::vector"* %73 to i8**
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %94, %77
  %98 = phi i8* [ %96, %94 ], [ %78, %77 ]
  store %"class.std::__1::basic_string"* %75, %"class.std::__1::basic_string"** %79, align 8
  tail call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %72, %97
  %100 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 3
  %101 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %101, align 8
  %103 = icmp eq %"class.std::__1::basic_string"* %102, null
  br i1 %103, label %126, label %104

104:                                              ; preds = %99
  %105 = bitcast %"class.std::__1::basic_string"* %102 to i8*
  %106 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 3, i32 0, i32 1
  %107 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %106, align 8
  %108 = icmp eq %"class.std::__1::basic_string"* %107, %102
  br i1 %108, label %124, label %109

109:                                              ; preds = %104, %119
  %110 = phi %"class.std::__1::basic_string"* [ %111, %119 ], [ %107, %104 ]
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 -1
  %112 = bitcast %"class.std::__1::basic_string"* %111 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  tail call void @_ZdlPv(i8* %118) #14
  br label %119

119:                                              ; preds = %116, %109
  %120 = icmp eq %"class.std::__1::basic_string"* %111, %102
  br i1 %120, label %121, label %109

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::vector"* %100 to i8**
  %123 = load i8*, i8** %122, align 8
  br label %124

124:                                              ; preds = %121, %104
  %125 = phi i8* [ %123, %121 ], [ %105, %104 ]
  store %"class.std::__1::basic_string"* %102, %"class.std::__1::basic_string"** %106, align 8
  tail call void @_ZdlPv(i8* %125) #14
  br label %126

126:                                              ; preds = %99, %124
  %127 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 2
  %128 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %128, align 8
  %130 = icmp eq %"class.std::__1::basic_string"* %129, null
  br i1 %130, label %153, label %131

131:                                              ; preds = %126
  %132 = bitcast %"class.std::__1::basic_string"* %129 to i8*
  %133 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 2, i32 0, i32 1
  %134 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %133, align 8
  %135 = icmp eq %"class.std::__1::basic_string"* %134, %129
  br i1 %135, label %151, label %136

136:                                              ; preds = %131, %146
  %137 = phi %"class.std::__1::basic_string"* [ %138, %146 ], [ %134, %131 ]
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %137, i64 -1
  %139 = bitcast %"class.std::__1::basic_string"* %138 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  tail call void @_ZdlPv(i8* %145) #14
  br label %146

146:                                              ; preds = %143, %136
  %147 = icmp eq %"class.std::__1::basic_string"* %138, %129
  br i1 %147, label %148, label %136

148:                                              ; preds = %146
  %149 = bitcast %"class.std::__1::vector"* %127 to i8**
  %150 = load i8*, i8** %149, align 8
  br label %151

151:                                              ; preds = %148, %131
  %152 = phi i8* [ %150, %148 ], [ %132, %131 ]
  store %"class.std::__1::basic_string"* %129, %"class.std::__1::basic_string"** %133, align 8
  tail call void @_ZdlPv(i8* %152) #14
  br label %153

153:                                              ; preds = %126, %151
  %154 = bitcast %"class.extensions::SimpleFeature"* %0 to %"class.extensions::Feature"*
  tail call void @_ZN10extensions7FeatureD2Ev(%"class.extensions::Feature"* %154) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10extensions13URLPatternSetD1Ev(%"class.extensions::URLPatternSet"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN10extensions7FeatureD2Ev(%"class.extensions::Feature"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeatureD0Ev(%"class.extensions::SimpleFeature"*) unnamed_addr #0 align 2 {
  tail call void @_ZN10extensions13SimpleFeatureD2Ev(%"class.extensions::SimpleFeature"* %0) #13
  %2 = bitcast %"class.extensions::SimpleFeature"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature21IsAvailableToManifestERKNS_17HashedExtensionIdENS_8Manifest4TypeENS_5mojom16ManifestLocationEiNS_7Feature8PlatformE(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"* dereferenceable(24), i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %8 = alloca %"class.extensions::Feature::Availability", align 8
  %9 = alloca %"class.extensions::Feature::Availability", align 8
  %10 = alloca %"class.base::RepeatingCallback", align 8
  %11 = bitcast %"class.extensions::Feature::Availability"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = tail call i32 @_ZN10extensions17GetCurrentChannelEv() #13
  %13 = tail call i32 @_ZN10extensions28GetCurrentFeatureSessionTypeEv() #13
  call void @_ZNK10extensions13SimpleFeature26GetEnvironmentAvailabilityENS_7Feature8PlatformEN12version_info7ChannelENS_5mojom18FeatureSessionTypeE(%"class.extensions::Feature::Availability"* nonnull sret %8, %"class.extensions::SimpleFeature"* %1, i32 %6, i32 undef, i32 %13)
  %14 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %8, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  store i32 %15, i32* %18, align 8
  %19 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %8, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %17
  %26 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #13
  br label %82

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %19, i8* %30, i64 %32) #13
  br label %82

33:                                               ; preds = %7
  %34 = bitcast %"class.extensions::Feature::Availability"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 32, i1 false)
  call void @_ZNK10extensions13SimpleFeature23GetManifestAvailabilityERKNS_17HashedExtensionIdENS_8Manifest4TypeENS_5mojom16ManifestLocationEi(%"class.extensions::Feature::Availability"* nonnull sret %9, %"class.extensions::SimpleFeature"* %1, %"class.extensions::HashedExtensionId"* dereferenceable(24) %2, i32 %3, i32 %4, i32 %5)
  %35 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %9, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %54, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  store i32 %36, i32* %39, align 8
  %40 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %41 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %9, i64 0, i32 1
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #13
  br label %72

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %40, i8* %51, i64 %53) #13
  br label %72

54:                                               ; preds = %33
  %55 = bitcast %"class.base::RepeatingCallback"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  %56 = call i8* @_Znwm(i64 80) #14, !noalias !3
  %57 = bitcast i8* %56 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %57, void ()* bitcast (void (%"class.extensions::Feature::Availability"*, %"class.base::internal::BindStateBase"*, %"class.extensions::Feature"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityERKNS3_17HashedExtensionIdENS3_8Manifest4TypeENS3_5mojom16ManifestLocationEiNS4_8PlatformEPKS4_EJS6_SA_SC_iSD_EEEFS5_SF_EE3RunEPNS0_13BindStateBaseESF_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFN10extensions7Feature12AvailabilityERKNS2_17HashedExtensionIdENS2_8Manifest4TypeENS2_5mojom16ManifestLocationEiNS3_8PlatformEPKS3_EJS5_S9_SB_iSC_EE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !3
  %58 = getelementptr inbounds i8, i8* %56, i64 32
  %59 = bitcast i8* %58 to i64*
  store i64 ptrtoint (void (%"class.extensions::Feature::Availability"*, %"class.extensions::HashedExtensionId"*, i32, i32, i32, i32, %"class.extensions::Feature"*)* @_ZN10extensions12_GLOBAL__N_128IsAvailableToManifestForBindERKNS_17HashedExtensionIdENS_8Manifest4TypeENS_5mojom16ManifestLocationEiNS_7Feature8PlatformEPKS8_ to i64), i64* %59, align 8, !noalias !3
  %60 = getelementptr inbounds i8, i8* %56, i64 40
  %61 = bitcast i8* %60 to %"class.extensions::HashedExtensionId"*
  call void @_ZN10extensions17HashedExtensionIdC1ERKS0_(%"class.extensions::HashedExtensionId"* %61, %"class.extensions::HashedExtensionId"* dereferenceable(24) %2) #13, !noalias !3
  %62 = getelementptr inbounds i8, i8* %56, i64 64
  %63 = bitcast i8* %62 to i32*
  store i32 %3, i32* %63, align 4, !noalias !3
  %64 = getelementptr inbounds i8, i8* %56, i64 68
  %65 = bitcast i8* %64 to i32*
  store i32 %4, i32* %65, align 4, !noalias !3
  %66 = getelementptr inbounds i8, i8* %56, i64 72
  %67 = bitcast i8* %66 to i32*
  store i32 %5, i32* %67, align 4, !noalias !3
  %68 = getelementptr inbounds i8, i8* %56, i64 76
  %69 = bitcast i8* %68 to i32*
  store i32 %6, i32* %69, align 4, !noalias !3
  %70 = bitcast %"class.base::RepeatingCallback"* %10 to i8**
  store i8* %56, i8** %70, align 8, !alias.scope !3
  call void @_ZNK10extensions13SimpleFeature17CheckDependenciesERKN4base17RepeatingCallbackIFNS_7Feature12AvailabilityEPKS3_EEE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %10)
  %71 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %71) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %72

72:                                               ; preds = %49, %46, %54
  %73 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %9, i64 0, i32 1
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %72, %78
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #13
  br label %82

82:                                               ; preds = %28, %25, %81
  %83 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %8, i64 0, i32 1
  %84 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #14
  br label %91

91:                                               ; preds = %82, %88
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature26GetEnvironmentAvailabilityENS_7Feature8PlatformEN12version_info7ChannelENS_5mojom18FeatureSessionTypeE(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::SimpleFeature"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #13
  %10 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 8, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 8, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %11, %13
  br i1 %14, label %25, label %15

15:                                               ; preds = %5, %19
  %16 = phi i32* [ %20, %19 ], [ %11, %5 ]
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, %2
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds i32, i32* %16, i64 1
  %21 = icmp eq i32* %20, %13
  br i1 %21, label %24, label %15

22:                                               ; preds = %15
  %23 = icmp eq i32* %16, %13
  br i1 %23, label %24, label %25

24:                                               ; preds = %19, %22
  tail call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 6)
  br label %194

25:                                               ; preds = %22, %5
  %26 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %58, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = tail call i32 @_ZN10extensions17GetCurrentChannelEv() #13
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %34, label %58

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 16
  %36 = getelementptr inbounds %"class.absl::optional.63", %"class.absl::optional.63"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1, !range !2
  br label %49

42:                                               ; preds = %34
  %43 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions8switches32kEnableExperimentalExtensionApisE, i64 0, i64 0)) #13
  %44 = bitcast %"class.absl::optional.63"* %35 to i16*
  %45 = zext i1 %43 to i16
  %46 = shl nuw nsw i16 %45, 8
  %47 = or i16 %46, 1
  store i16 %47, i16* %44, align 8
  %48 = zext i1 %43 to i8
  br label %49

49:                                               ; preds = %42, %39
  %50 = phi i8 [ %41, %39 ], [ %48, %42 ]
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %49
  %53 = load i8, i8* %26, align 4, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %56, !prof !8

55:                                               ; preds = %52
  tail call void @llvm.trap() #13
  unreachable

56:                                               ; preds = %52
  %57 = load i32, i32* %30, align 4
  tail call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultEN12version_info7ChannelE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 11, i32 %57)
  br label %194

58:                                               ; preds = %25, %49, %29
  %59 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %158, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %64 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #13
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 24, i1 false) #13, !alias.scope !9
  %68 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1, !noalias !9
  %71 = icmp slt i8 %70, 0
  %72 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = zext i8 %70 to i64
  %77 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  %78 = select i1 %71, i64 %73, i64 %76
  %79 = select i1 %71, i8* %75, i8* %77
  %80 = add i64 %78, 2
  %81 = icmp ugt i64 %80, -17
  br i1 %81, label %82, label %84

82:                                               ; preds = %62
  %83 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %83) #15
  unreachable

84:                                               ; preds = %62
  %85 = icmp ult i64 %80, 23
  br i1 %85, label %92, label %86

86:                                               ; preds = %84
  %87 = add nuw i64 %78, 18
  %88 = and i64 %87, -16
  %89 = tail call i8* @_Znwm(i64 %88) #14
  store i8* %89, i8** %65, align 8, !alias.scope !9
  %90 = or i64 %88, -9223372036854775808
  store i64 %90, i64* %67, align 8, !alias.scope !9
  store i64 %78, i64* %66, align 8, !alias.scope !9
  %91 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %97

92:                                               ; preds = %84
  %93 = trunc i64 %78 to i8
  %94 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  store i8 %93, i8* %95, align 1, !alias.scope !9
  %96 = icmp eq i64 %78, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %92, %86
  %98 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %94, %92 ], [ %91, %86 ]
  %99 = phi i8* [ %64, %92 ], [ %89, %86 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %99, i8* align 1 %79, i64 %78, i1 false) #13
  br label %100

100:                                              ; preds = %97, %92
  %101 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %98, %97 ], [ %94, %92 ]
  %102 = phi i8* [ %99, %97 ], [ %64, %92 ]
  %103 = getelementptr inbounds i8, i8* %102, i64 %78
  store i8 0, i8* %103, align 1
  %104 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0), i64 2) #13
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = load i8*, i8** %65, align 8
  %109 = select i1 %107, i8* %108, i8* %64
  %110 = load i64, i64* %66, align 8
  %111 = zext i8 %106 to i64
  %112 = select i1 %107, i64 %110, i64 %111
  %113 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"* %9, i8* %109, i64 %112) #13
  %114 = load i8, i8* %105, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %100
  %117 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %117) #14
  br label %118

118:                                              ; preds = %116, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #13
  br i1 %113, label %158, label %119

119:                                              ; preds = %118
  %120 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #13
  %121 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #13
  %122 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  store i8 7, i8* %123, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %121, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i64 0, i64 0), i64 7, i1 false) #13
  %124 = getelementptr inbounds i8, i8* %121, i64 7
  store i8 0, i8* %124, align 1
  %125 = load i8, i8* %69, align 1, !noalias !12
  %126 = icmp slt i8 %125, 0
  %127 = load i8*, i8** %74, align 8, !noalias !12
  %128 = load i64, i64* %72, align 8, !noalias !12
  %129 = zext i8 %125 to i64
  %130 = select i1 %126, i8* %127, i8* %77
  %131 = select i1 %126, i64 %128, i64 %129
  %132 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %130, i64 %131) #13, !noalias !12
  %133 = bitcast %"class.std::__1::basic_string"* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %120, i8* align 8 %133, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #13, !noalias !12
  %134 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = select i1 %137, i8* %139, i8* %120
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = zext i8 %136 to i64
  %144 = select i1 %137, i64 %142, i64 %143
  %145 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"* %9, i8* %140, i64 %144) #13
  %146 = load i8, i8* %135, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %119
  %149 = load i8*, i8** %138, align 8
  call void @_ZdlPv(i8* %149) #14
  br label %150

150:                                              ; preds = %148, %119
  %151 = load i8, i8* %123, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %150, %153
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #13
  br i1 %145, label %158, label %157

157:                                              ; preds = %156
  call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 13)
  br label %194

158:                                              ; preds = %58, %118, %156
  %159 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %160 = load i8, i8* %159, align 8, !range !2
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %166, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %164 = call zeroext i1 @_ZN10extensions20IsFeatureFlagEnabledERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %163) #13
  br i1 %164, label %166, label %165

165:                                              ; preds = %162
  call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 14)
  br label %194

166:                                              ; preds = %158, %162
  %167 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 6, i32 0, i32 0
  %168 = load i32*, i32** %167, align 8
  %169 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 6, i32 0, i32 1
  %170 = load i32*, i32** %169, align 8
  %171 = icmp eq i32* %168, %170
  br i1 %171, label %193, label %172

172:                                              ; preds = %166, %176
  %173 = phi i32* [ %177, %176 ], [ %168, %166 ]
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, %4
  br i1 %175, label %179, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds i32, i32* %173, i64 1
  %178 = icmp eq i32* %177, %170
  br i1 %178, label %181, label %172

179:                                              ; preds = %172
  %180 = icmp eq i32* %173, %170
  br i1 %180, label %181, label %193

181:                                              ; preds = %176, %179
  %182 = icmp eq i32 %4, 4
  br i1 %182, label %183, label %192

183:                                              ; preds = %181, %187
  %184 = phi i32* [ %188, %187 ], [ %168, %181 ]
  %185 = load i32, i32* %184, align 4
  %186 = icmp eq i32 %185, 3
  br i1 %186, label %190, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds i32, i32* %184, i64 1
  %189 = icmp eq i32* %188, %170
  br i1 %189, label %192, label %183

190:                                              ; preds = %183
  %191 = icmp eq i32* %184, %170
  br i1 %191, label %192, label %193

192:                                              ; preds = %187, %190, %181
  call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultENS_5mojom18FeatureSessionTypeE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 9, i32 %4)
  br label %194

193:                                              ; preds = %190, %179, %166
  call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 0)
  br label %194

194:                                              ; preds = %193, %192, %165, %157, %56, %24
  ret void
}

declare i32 @_ZN10extensions17GetCurrentChannelEv() local_unnamed_addr #2

declare i32 @_ZN10extensions28GetCurrentFeatureSessionTypeEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature23GetManifestAvailabilityERKNS_17HashedExtensionIdENS_8Manifest4TypeENS_5mojom16ManifestLocationEi(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"* dereferenceable(24), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = icmp eq i32 %3, 3
  %8 = select i1 %7, i32 1, i32 %3
  %9 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 5, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 5, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %10, %12
  br i1 %13, label %24, label %14

14:                                               ; preds = %6, %18
  %15 = phi i32* [ %19, %18 ], [ %10, %6 ]
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %8
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds i32, i32* %15, i64 1
  %20 = icmp eq i32* %19, %12
  br i1 %20, label %23, label %14

21:                                               ; preds = %14
  %22 = icmp eq i32* %15, %12
  br i1 %22, label %23, label %24

23:                                               ; preds = %18, %21
  tail call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultENS_8Manifest4TypeE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 3, i32 %3)
  br label %189

24:                                               ; preds = %21, %6
  %25 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %27 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 2, i32 0, i32 1
  %28 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %29 = icmp eq %"class.std::__1::basic_string"* %26, %28
  br i1 %29, label %37, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.extensions::SimpleFeature"* %1 to i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)***
  %32 = load i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)**, i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)*, i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)** %32, i64 6
  %34 = load i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)*, i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.extensions::SimpleFeature"* %1, %"class.extensions::HashedExtensionId"* dereferenceable(24) %2) #13
  br i1 %35, label %36, label %37

36:                                               ; preds = %30
  tail call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 12)
  br label %189

37:                                               ; preds = %30, %24
  %38 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 17
  %39 = load i8, i8* %38, align 2, !range !2
  %40 = icmp ne i8 %39, 0
  %41 = icmp eq i32 %4, 5
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %44

43:                                               ; preds = %37
  tail call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 0)
  br label %189

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %45, align 8
  %47 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 3, i32 0, i32 1
  %48 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %47, align 8
  %49 = icmp eq %"class.std::__1::basic_string"* %46, %48
  br i1 %49, label %107, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.extensions::SimpleFeature"* %1 to i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)***
  %52 = load i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)**, i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)*, i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)** %52, i64 7
  %54 = load i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)*, i1 (%"class.extensions::SimpleFeature"*, %"class.extensions::HashedExtensionId"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.extensions::SimpleFeature"* %1, %"class.extensions::HashedExtensionId"* dereferenceable(24) %2) #13
  br i1 %55, label %107, label %56

56:                                               ; preds = %50
  %57 = tail call fastcc dereferenceable(24) %"struct.extensions::(anonymous namespace)::AllowlistInfo"* @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_113AllowlistInfoENS_8internal23LeakyLazyInstanceTraitsIS3_EEE3GetEv() #13
  %58 = bitcast %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"struct.extensions::(anonymous namespace)::AllowlistInfo", %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = zext i8 %60 to i64
  %65 = select i1 %61, i64 %63, i64 %64
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %106, label %67

67:                                               ; preds = %56
  %68 = bitcast %"class.extensions::HashedExtensionId"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = getelementptr inbounds %"class.extensions::HashedExtensionId", %"class.extensions::HashedExtensionId"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = zext i8 %70 to i64
  %75 = select i1 %71, i64 %73, i64 %74
  %76 = icmp eq i64 %65, %75
  br i1 %76, label %77, label %106

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"struct.extensions::(anonymous namespace)::AllowlistInfo", %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"class.extensions::HashedExtensionId", %"class.extensions::HashedExtensionId"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = bitcast %"class.extensions::HashedExtensionId"* %2 to i8*
  %83 = select i1 %71, i8* %81, i8* %82
  br i1 %61, label %103, label %84

84:                                               ; preds = %77
  %85 = ptrtoint i8* %79 to i64
  %86 = trunc i64 %85 to i8
  %87 = load i8, i8* %83, align 1
  %88 = icmp eq i8 %87, %86
  br i1 %88, label %89, label %106

89:                                               ; preds = %84
  %90 = bitcast %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %57 to i8*
  br label %91

91:                                               ; preds = %89, %98
  %92 = phi i64 [ %95, %98 ], [ %64, %89 ]
  %93 = phi i8* [ %96, %98 ], [ %90, %89 ]
  %94 = phi i8* [ %99, %98 ], [ %83, %89 ]
  %95 = add i64 %92, -1
  %96 = getelementptr inbounds i8, i8* %93, i64 1
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %107, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %94, i64 1
  %100 = load i8, i8* %96, align 1
  %101 = load i8, i8* %99, align 1
  %102 = icmp eq i8 %100, %101
  br i1 %102, label %91, label %106

103:                                              ; preds = %77
  %104 = tail call i32 @bcmp(i8* %79, i8* %83, i64 %65) #13
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %107, label %106

106:                                              ; preds = %98, %84, %67, %56, %103
  tail call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 1)
  br label %189

107:                                              ; preds = %91, %103, %50, %44
  %108 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %109 = load i8, i8* %108, align 4, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %170, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %113 = load i32, i32* %112, align 4
  switch i32 %113, label %119 [
    i32 0, label %118
    i32 1, label %114
    i32 2, label %116
    i32 3, label %117
  ]

114:                                              ; preds = %111
  %115 = icmp eq i32 %4, 10
  br i1 %115, label %170, label %119

116:                                              ; preds = %111
  switch i32 %4, label %119 [
    i32 9, label %170
    i32 7, label %170
  ]

117:                                              ; preds = %111
  switch i32 %4, label %119 [
    i32 8, label %170
    i32 4, label %170
  ]

118:                                              ; preds = %111
  br i1 %41, label %170, label %119

119:                                              ; preds = %117, %116, %111, %114, %118
  %120 = tail call fastcc dereferenceable(24) %"struct.extensions::(anonymous namespace)::AllowlistInfo"* @_ZN4base12LazyInstanceIN10extensions12_GLOBAL__N_113AllowlistInfoENS_8internal23LeakyLazyInstanceTraitsIS3_EEE3GetEv() #13
  %121 = bitcast %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %120 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  %125 = getelementptr inbounds %"struct.extensions::(anonymous namespace)::AllowlistInfo", %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = zext i8 %123 to i64
  %128 = select i1 %124, i64 %126, i64 %127
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %169, label %130

130:                                              ; preds = %119
  %131 = bitcast %"class.extensions::HashedExtensionId"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  %135 = getelementptr inbounds %"class.extensions::HashedExtensionId", %"class.extensions::HashedExtensionId"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = zext i8 %133 to i64
  %138 = select i1 %134, i64 %136, i64 %137
  %139 = icmp eq i64 %128, %138
  br i1 %139, label %140, label %169

140:                                              ; preds = %130
  %141 = getelementptr inbounds %"struct.extensions::(anonymous namespace)::AllowlistInfo", %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = getelementptr inbounds %"class.extensions::HashedExtensionId", %"class.extensions::HashedExtensionId"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = bitcast %"class.extensions::HashedExtensionId"* %2 to i8*
  %146 = select i1 %134, i8* %144, i8* %145
  br i1 %124, label %166, label %147

147:                                              ; preds = %140
  %148 = ptrtoint i8* %142 to i64
  %149 = trunc i64 %148 to i8
  %150 = load i8, i8* %146, align 1
  %151 = icmp eq i8 %150, %149
  br i1 %151, label %152, label %169

152:                                              ; preds = %147
  %153 = bitcast %"struct.extensions::(anonymous namespace)::AllowlistInfo"* %120 to i8*
  br label %154

154:                                              ; preds = %152, %161
  %155 = phi i64 [ %158, %161 ], [ %127, %152 ]
  %156 = phi i8* [ %159, %161 ], [ %153, %152 ]
  %157 = phi i8* [ %162, %161 ], [ %146, %152 ]
  %158 = add i64 %155, -1
  %159 = getelementptr inbounds i8, i8* %156, i64 1
  %160 = icmp eq i64 %158, 0
  br i1 %160, label %170, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds i8, i8* %157, i64 1
  %163 = load i8, i8* %159, align 1
  %164 = load i8, i8* %162, align 1
  %165 = icmp eq i8 %163, %164
  br i1 %165, label %154, label %169

166:                                              ; preds = %140
  %167 = tail call i32 @bcmp(i8* %142, i8* %146, i64 %128) #13
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %170, label %169

169:                                              ; preds = %161, %147, %130, %119, %166
  tail call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 5)
  br label %189

170:                                              ; preds = %154, %107, %117, %117, %116, %116, %114, %166, %118
  %171 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %172 = load i8, i8* %171, align 4, !range !2
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %179, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = icmp sgt i32 %176, %5
  br i1 %177, label %178, label %179

178:                                              ; preds = %174
  tail call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 7)
  br label %189

179:                                              ; preds = %170, %174
  %180 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %181 = load i8, i8* %180, align 4, !range !2
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %188, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = icmp slt i32 %185, %5
  br i1 %186, label %187, label %188

187:                                              ; preds = %183
  tail call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 8)
  br label %189

188:                                              ; preds = %179, %183
  tail call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 0)
  br label %189

189:                                              ; preds = %188, %187, %178, %169, %106, %43, %36, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature17CheckDependenciesERKN4base17RepeatingCallbackIFNS_7Feature12AvailabilityEPKS3_EEE(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::SimpleFeature"*, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.extensions::Feature::Availability", align 8
  %5 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 4, i32 0, i32 1
  %8 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %9 = icmp eq %"class.std::__1::basic_string"* %6, %8
  br i1 %9, label %54, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.extensions::Feature::Availability"* %4 to i8*
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %4, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %25

23:                                               ; preds = %51
  %24 = icmp eq %"class.std::__1::basic_string"* %53, %8
  br i1 %24, label %54, label %25

25:                                               ; preds = %10, %23
  %26 = phi %"class.std::__1::basic_string"* [ %6, %10 ], [ %53, %23 ]
  %27 = call %"class.extensions::ExtensionAPI"* @_ZN10extensions12ExtensionAPI17GetSharedInstanceEv() #13
  %28 = call %"class.extensions::Feature"* @_ZN10extensions12ExtensionAPI20GetFeatureDependencyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionAPI"* %27, %"class.std::__1::basic_string"* dereferenceable(24) %26) #13
  %29 = icmp eq %"class.extensions::Feature"* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 10)
  br label %55

31:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %32 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8, !noalias !15
  %33 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %32, i64 0, i32 1
  %34 = bitcast void ()** %33 to void (%"class.extensions::Feature::Availability"*, %"class.base::internal::BindStateBase"*, %"class.extensions::Feature"*)**
  %35 = load void (%"class.extensions::Feature::Availability"*, %"class.base::internal::BindStateBase"*, %"class.extensions::Feature"*)*, void (%"class.extensions::Feature::Availability"*, %"class.base::internal::BindStateBase"*, %"class.extensions::Feature"*)** %34, align 8, !noalias !15
  call void %35(%"class.extensions::Feature::Availability"* nonnull sret %4, %"class.base::internal::BindStateBase"* %32, %"class.extensions::Feature"* nonnull %28) #13
  %36 = load i32, i32* %13, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %31
  store i32 %36, i32* %14, align 8
  %39 = load i8, i8* %18, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #13
  br label %55

42:                                               ; preds = %38
  %43 = load i8*, i8** %21, align 8
  %44 = load i64, i64* %22, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %15, i8* %43, i64 %44) #13
  br label %45

45:                                               ; preds = %42, %31
  %46 = phi i32 [ 1, %42 ], [ 0, %31 ]
  %47 = load i8, i8* %18, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %50) #14
  br label %51

51:                                               ; preds = %49, %45
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #13
  %52 = icmp eq i32 %46, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1
  br i1 %52, label %23, label %55

54:                                               ; preds = %23, %3
  call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 0)
  br label %55

55:                                               ; preds = %51, %41, %30, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_128IsAvailableToManifestForBindERKNS_17HashedExtensionIdENS_8Manifest4TypeENS_5mojom16ManifestLocationEiNS_7Feature8PlatformEPKS8_(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::HashedExtensionId"* dereferenceable(24), i32, i32, i32, i32, %"class.extensions::Feature"*) #0 {
  %8 = bitcast %"class.extensions::Feature"* %6 to void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::HashedExtensionId"*, i32, i32, i32, i32)***
  %9 = load void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::HashedExtensionId"*, i32, i32, i32, i32)**, void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::HashedExtensionId"*, i32, i32, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::HashedExtensionId"*, i32, i32, i32, i32)*, void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::HashedExtensionId"*, i32, i32, i32, i32)** %9, i64 3
  %11 = load void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::HashedExtensionId"*, i32, i32, i32, i32)*, void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::HashedExtensionId"*, i32, i32, i32, i32)** %10, align 8
  tail call void %11(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::Feature"* %6, %"class.extensions::HashedExtensionId"* dereferenceable(24) %1, i32 %2, i32 %3, i32 %4, i32 %5) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature20IsAvailableToContextEPKNS_9ExtensionENS_7Feature7ContextERK4GURLNS4_8PlatformE(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::SimpleFeature"*, %"class.extensions::Extension"*, i32, %class.GURL* dereferenceable(120), i32) unnamed_addr #0 align 2 {
  %7 = alloca %"class.extensions::Feature::Availability", align 8
  %8 = alloca %class.GURL, align 8
  %9 = alloca %"class.extensions::Feature::Availability", align 8
  %10 = alloca %"class.base::RepeatingCallback", align 8
  %11 = bitcast %"class.extensions::Feature::Availability"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = tail call i32 @_ZN10extensions17GetCurrentChannelEv() #13
  %13 = tail call i32 @_ZN10extensions28GetCurrentFeatureSessionTypeEv() #13
  call void @_ZNK10extensions13SimpleFeature26GetEnvironmentAvailabilityENS_7Feature8PlatformEN12version_info7ChannelENS_5mojom18FeatureSessionTypeE(%"class.extensions::Feature::Availability"* nonnull sret %7, %"class.extensions::SimpleFeature"* %1, i32 %5, i32 undef, i32 %13)
  %14 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  store i32 %15, i32* %18, align 8
  %19 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %7, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %17
  %26 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #13
  br label %118

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %19, i8* %30, i64 %32) #13
  br label %118

33:                                               ; preds = %6
  %34 = icmp eq %"class.extensions::Extension"* %2, null
  br i1 %34, label %65, label %35

35:                                               ; preds = %33
  %36 = bitcast %"class.extensions::Feature::Availability"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 -86, i64 32, i1 false)
  %37 = call dereferenceable(24) %"class.extensions::HashedExtensionId"* @_ZNK10extensions9Extension9hashed_idEv(%"class.extensions::Extension"* nonnull %2) #13
  %38 = call i32 @_ZNK10extensions9Extension7GetTypeEv(%"class.extensions::Extension"* nonnull %2) #13
  %39 = call i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"* nonnull %2) #13
  %40 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %2, i64 0, i32 4
  %41 = load i32, i32* %40, align 8
  call void @_ZNK10extensions13SimpleFeature23GetManifestAvailabilityERKNS_17HashedExtensionIdENS_8Manifest4TypeENS_5mojom16ManifestLocationEi(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, %"class.extensions::HashedExtensionId"* dereferenceable(24) %37, i32 %38, i32 %39, i32 %41)
  %42 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %118

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #14
  br label %54

54:                                               ; preds = %45, %51
  %55 = call zeroext i1 @_ZN10extensions14BackgroundInfo20IsServiceWorkerBasedEPKNS_9ExtensionE(%"class.extensions::Extension"* nonnull %2) #13
  br i1 %55, label %56, label %65

56:                                               ; preds = %54
  %57 = getelementptr inbounds %class.GURL, %class.GURL* %4, i64 0, i32 1
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = bitcast %class.GURL* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %61) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 120, i1 false)
  %62 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN10extensions14BackgroundInfo32GetBackgroundServiceWorkerScriptEPKNS_9ExtensionE(%"class.extensions::Extension"* nonnull %2) #13
  %63 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %2, i64 0, i32 10
  call void @_ZN10extensions9Extension14GetResourceURLERK4GURLRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%class.GURL* nonnull sret %8, %class.GURL* dereferenceable(120) %63, %"class.std::__1::basic_string"* dereferenceable(24) %62) #13
  %64 = call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* nonnull dereferenceable(120) %8, %class.GURL* dereferenceable(120) %4) #13
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %61) #13
  br label %65

65:                                               ; preds = %56, %33, %60, %54
  %66 = phi i1 [ %64, %60 ], [ false, %56 ], [ false, %54 ], [ false, %33 ]
  %67 = bitcast %"class.extensions::Feature::Availability"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 32, i1 false)
  call void @_ZNK10extensions13SimpleFeature22GetContextAvailabilityENS_7Feature7ContextERK4GURLb(%"class.extensions::Feature::Availability"* nonnull sret %9, %"class.extensions::SimpleFeature"* %1, i32 %3, %class.GURL* dereferenceable(120) %4, i1 zeroext %66)
  %68 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %9, i64 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %87, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  store i32 %69, i32* %72, align 8
  %73 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %74 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %9, i64 0, i32 1
  %75 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %71
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  %81 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 24, i1 false) #13
  br label %108

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %73, i8* %84, i64 %86) #13
  br label %108

87:                                               ; preds = %65
  %88 = bitcast %"class.base::RepeatingCallback"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #13
  br i1 %34, label %92, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 1 monotonic
  br label %92

92:                                               ; preds = %89, %87
  %93 = ptrtoint %"class.extensions::Extension"* %2 to i64
  %94 = call i8* @_Znwm(i64 184) #14, !noalias !18
  %95 = bitcast i8* %94 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %95, void ()* bitcast (void (%"class.extensions::Feature::Availability"*, %"class.base::internal::BindStateBase"*, %"class.extensions::Feature"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityEPKNS3_9ExtensionENS4_7ContextERK4GURLNS4_8PlatformEPKS4_EJNS0_18RetainedRefWrapperIS7_EES9_SA_SD_EEEFS5_SF_EE3RunEPNS0_13BindStateBaseESF_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFN10extensions7Feature12AvailabilityEPKNS2_9ExtensionENS3_7ContextERK4GURLNS3_8PlatformEPKS3_EJNS0_18RetainedRefWrapperIS6_EES8_S9_SC_EE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !18
  %96 = getelementptr inbounds i8, i8* %94, i64 32
  %97 = bitcast i8* %96 to i64*
  store i64 ptrtoint (void (%"class.extensions::Feature::Availability"*, %"class.extensions::Extension"*, i32, %class.GURL*, i32, %"class.extensions::Feature"*)* @_ZN10extensions12_GLOBAL__N_127IsAvailableToContextForBindEPKNS_9ExtensionENS_7Feature7ContextERK4GURLNS4_8PlatformEPKS4_ to i64), i64* %97, align 8, !noalias !18
  %98 = getelementptr inbounds i8, i8* %94, i64 40
  %99 = bitcast i8* %98 to i64*
  store i64 %93, i64* %99, align 8, !noalias !18
  %100 = getelementptr inbounds i8, i8* %94, i64 48
  %101 = bitcast i8* %100 to i32*
  store i32 %3, i32* %101, align 4, !noalias !18
  %102 = getelementptr inbounds i8, i8* %94, i64 56
  %103 = bitcast i8* %102 to %class.GURL*
  call void @_ZN4GURLC1ERKS_(%class.GURL* %103, %class.GURL* dereferenceable(120) %4) #13, !noalias !18
  %104 = getelementptr inbounds i8, i8* %94, i64 176
  %105 = bitcast i8* %104 to i32*
  store i32 %5, i32* %105, align 4, !noalias !18
  %106 = bitcast %"class.base::RepeatingCallback"* %10 to i8**
  store i8* %94, i8** %106, align 8, !alias.scope !18
  call void @_ZNK10extensions13SimpleFeature17CheckDependenciesERKN4base17RepeatingCallbackIFNS_7Feature12AvailabilityEPKS3_EEE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %10)
  %107 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %107) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #13
  br label %108

108:                                              ; preds = %82, %79, %92
  %109 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %9, i64 0, i32 1
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #14
  br label %117

117:                                              ; preds = %108, %114
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #13
  br label %118

118:                                              ; preds = %35, %28, %25, %117
  %119 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %7, i64 0, i32 1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %126) #14
  br label %127

127:                                              ; preds = %118, %124
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #13
  ret void
}

declare dereferenceable(24) %"class.extensions::HashedExtensionId"* @_ZNK10extensions9Extension9hashed_idEv(%"class.extensions::Extension"*) local_unnamed_addr #2

declare i32 @_ZNK10extensions9Extension7GetTypeEv(%"class.extensions::Extension"*) local_unnamed_addr #2

declare i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"*) local_unnamed_addr #2

declare zeroext i1 @_ZN10extensions14BackgroundInfo20IsServiceWorkerBasedEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN10extensions14BackgroundInfo32GetBackgroundServiceWorkerScriptEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #2

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature22GetContextAvailabilityENS_7Feature7ContextERK4GURLb(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::SimpleFeature"*, i32, %class.GURL* dereferenceable(120), i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %12, %14
  br i1 %15, label %23, label %16

16:                                               ; preds = %10, %20
  %17 = phi i32* [ %21, %20 ], [ %12, %10 ]
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, %2
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds i32, i32* %17, i64 1
  %22 = icmp eq i32* %21, %14
  br i1 %22, label %26, label %16

23:                                               ; preds = %16, %10
  %24 = phi i32* [ %12, %10 ], [ %17, %16 ]
  %25 = icmp eq i32* %24, %14
  br i1 %25, label %26, label %27

26:                                               ; preds = %20, %23
  tail call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultENS1_7ContextE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 4, i32 %2)
  br label %79

27:                                               ; preds = %23, %5
  switch i32 %2, label %72 [
    i32 7, label %28
    i32 6, label %28
    i32 4, label %28
  ]

28:                                               ; preds = %27, %27, %27
  %29 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 9
  %30 = tail call zeroext i1 @_ZNK10extensions13URLPatternSet10MatchesURLERK4GURL(%"class.extensions::URLPatternSet"* %29, %class.GURL* dereferenceable(120) %3) #13
  br i1 %30, label %72, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13, !noalias !23
  %33 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1, !noalias !26
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8, !noalias !26
  br label %43

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  br label %43

43:                                               ; preds = %38, %41
  %44 = phi i8* [ %40, %38 ], [ %42, %41 ]
  %45 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %3) #13, !noalias !23
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1, !noalias !23
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8, !noalias !23
  %52 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %53 = select i1 %49, i8* %51, i8* %52
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* %44, i8* %53) #13, !noalias !23
  %54 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  store i32 2, i32* %54, align 8, !alias.scope !23
  %55 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %56 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1, !noalias !23
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %43
  %61 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* nonnull align 8 %32, i64 24, i1 false) #13
  br label %71

62:                                               ; preds = %43
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8, !noalias !23
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8, !noalias !23
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %55, i8* %64, i64 %66) #13
  %67 = load i8, i8* %57, align 1, !noalias !23
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %62
  %70 = load i8*, i8** %63, align 8, !noalias !23
  call void @_ZdlPv(i8* %70) #14
  br label %71

71:                                               ; preds = %60, %62, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13, !noalias !23
  br label %79

72:                                               ; preds = %27, %28
  br i1 %4, label %73, label %78

73:                                               ; preds = %72
  %74 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 19
  %75 = load i8, i8* %74, align 4, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %78, label %77

77:                                               ; preds = %73
  tail call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 4)
  br label %79

78:                                               ; preds = %73, %72
  tail call void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, i32 0)
  br label %79

79:                                               ; preds = %71, %77, %78, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_127IsAvailableToContextForBindEPKNS_9ExtensionENS_7Feature7ContextERK4GURLNS4_8PlatformEPKS4_(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::Extension"*, i32, %class.GURL* dereferenceable(120), i32, %"class.extensions::Feature"*) #0 {
  %7 = bitcast %"class.extensions::Feature"* %5 to void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::Extension"*, i32, %class.GURL*, i32)***
  %8 = load void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::Extension"*, i32, %class.GURL*, i32)**, void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::Extension"*, i32, %class.GURL*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::Extension"*, i32, %class.GURL*, i32)*, void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::Extension"*, i32, %class.GURL*, i32)** %8, i64 4
  %10 = load void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::Extension"*, i32, %class.GURL*, i32)*, void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*, %"class.extensions::Extension"*, i32, %class.GURL*, i32)** %9, align 8
  tail call void %10(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::Feature"* %5, %"class.extensions::Extension"* %1, i32 %2, %class.GURL* dereferenceable(120) %3, i32 %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature24IsAvailableToEnvironmentEv(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::SimpleFeature"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.extensions::Feature::Availability", align 8
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = bitcast %"class.extensions::Feature::Availability"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = tail call i32 @_ZN10extensions7Feature18GetCurrentPlatformEv() #13
  %7 = tail call i32 @_ZN10extensions17GetCurrentChannelEv() #13
  %8 = tail call i32 @_ZN10extensions28GetCurrentFeatureSessionTypeEv() #13
  call void @_ZNK10extensions13SimpleFeature26GetEnvironmentAvailabilityENS_7Feature8PlatformEN12version_info7ChannelENS_5mojom18FeatureSessionTypeE(%"class.extensions::Feature::Availability"* nonnull sret %3, %"class.extensions::SimpleFeature"* %1, i32 %6, i32 undef, i32 %8)
  %9 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %3, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %3, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #13
  br label %36

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %14, i8* %25, i64 %27) #13
  br label %36

28:                                               ; preds = %2
  %29 = bitcast %"class.base::RepeatingCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = call i8* @_Znwm(i64 48) #14, !noalias !29
  %31 = bitcast i8* %30 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %31, void ()* bitcast (void (%"class.extensions::Feature::Availability"*, %"class.base::internal::BindStateBase"*, %"class.extensions::Feature"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityEPKS4_EJEEES8_E3RunEPNS0_13BindStateBaseES7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFN10extensions7Feature12AvailabilityEPKS3_EJEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !29
  %32 = getelementptr inbounds i8, i8* %30, i64 32
  %33 = bitcast i8* %32 to i64*
  store i64 ptrtoint (void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*)* @_ZN10extensions12_GLOBAL__N_131IsAvailableToEnvironmentForBindEPKNS_7FeatureE to i64), i64* %33, align 8, !noalias !29
  %34 = bitcast %"class.base::RepeatingCallback"* %4 to i8**
  store i8* %30, i8** %34, align 8, !alias.scope !29
  call void @_ZNK10extensions13SimpleFeature17CheckDependenciesERKN4base17RepeatingCallbackIFNS_7Feature12AvailabilityEPKS3_EEE(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::SimpleFeature"* %1, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %4)
  %35 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %36

36:                                               ; preds = %23, %20, %28
  %37 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %3, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %36, %42
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #13
  ret void
}

declare i32 @_ZN10extensions7Feature18GetCurrentPlatformEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_131IsAvailableToEnvironmentForBindEPKNS_7FeatureE(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::Feature"*) #0 {
  %3 = bitcast %"class.extensions::Feature"* %1 to void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*)***
  %4 = load void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*)**, void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*)*, void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*)** %4, i64 5
  %6 = load void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*)*, void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*)** %5, align 8
  tail call void %6(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::Feature"* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature22GetAvailabilityMessageENS_7Feature18AvailabilityResultENS_8Manifest4TypeERK4GURLNS1_7ContextEN12version_info7ChannelENS_5mojom18FeatureSessionTypeE(%"class.std::__1::basic_string"* noalias sret, %"class.extensions::SimpleFeature"*, i32, i32, %class.GURL* dereferenceable(120), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::vector.6", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::vector.21", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::vector.13", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  switch i32 %2, label %1384 [
    i32 0, label %26
    i32 1, label %28
    i32 12, label %28
    i32 2, label %41
    i32 3, label %63
    i32 4, label %431
    i32 5, label %808
    i32 6, label %821
    i32 7, label %834
    i32 8, label %854
    i32 9, label %874
    i32 10, label %1229
    i32 11, label %1242
    i32 13, label %1324
    i32 14, label %1354
  ]

26:                                               ; preds = %8
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #13
  br label %1386

28:                                               ; preds = %8, %8
  %29 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  br label %39

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  br label %39

39:                                               ; preds = %34, %37
  %40 = phi i8* [ %36, %34 ], [ %38, %37 ]
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i8* %40) #13
  br label %1386

41:                                               ; preds = %8
  %42 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  br label %52

50:                                               ; preds = %41
  %51 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  br label %52

52:                                               ; preds = %47, %50
  %53 = phi i8* [ %49, %47 ], [ %51, %50 ]
  %54 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %4) #13
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %62 = select i1 %58, i8* %60, i8* %61
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* %53, i8* %62) #13
  br label %1386

63:                                               ; preds = %8
  %64 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  br label %74

72:                                               ; preds = %63
  %73 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  br label %74

74:                                               ; preds = %69, %72
  %75 = phi i8* [ %71, %69 ], [ %73, %72 ]
  %76 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #13
  %77 = bitcast %"class.std::__1::vector.6"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13
  %78 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 5, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  %80 = bitcast i32* %79 to i8*
  %81 = ptrtoint i32* %79 to i64
  %82 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 5, i32 0, i32 1
  %83 = load i32*, i32** %82, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 24, i1 false) #13
  %84 = ptrtoint i32* %83 to i64
  %85 = sub i64 %84, %81
  %86 = ashr exact i64 %85, 2
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %267, label %88

88:                                               ; preds = %74
  %89 = icmp ugt i64 %86, 4611686018427387903
  br i1 %89, label %90, label %92

90:                                               ; preds = %88
  %91 = bitcast %"class.std::__1::vector.6"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %91) #15
  unreachable

92:                                               ; preds = %88
  %93 = tail call i8* @_Znwm(i64 %85) #14
  %94 = bitcast i8* %93 to i32*
  %95 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %16, i64 0, i32 0, i32 1
  %96 = bitcast i32** %95 to i8**
  store i8* %93, i8** %96, align 8
  %97 = bitcast %"class.std::__1::vector.6"* %16 to i8**
  store i8* %93, i8** %97, align 8
  %98 = getelementptr inbounds i32, i32* %94, i64 %86
  %99 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %98, i32** %99, align 8
  %100 = bitcast i32** %95 to i64*
  %101 = icmp eq i32* %79, %83
  br i1 %101, label %229, label %102

102:                                              ; preds = %92
  %103 = getelementptr i32, i32* %83, i64 -1
  %104 = ptrtoint i32* %103 to i64
  %105 = sub i64 %104, %81
  %106 = lshr i64 %105, 2
  %107 = add nuw nsw i64 %106, 1
  %108 = icmp ult i64 %107, 8
  br i1 %108, label %109, label %134

109:                                              ; preds = %227, %134, %102
  %110 = phi i32* [ %94, %134 ], [ %94, %102 ], [ %150, %227 ]
  %111 = phi i32* [ %79, %134 ], [ %79, %102 ], [ %151, %227 ]
  %112 = ptrtoint i32* %111 to i64
  %113 = getelementptr i32, i32* %83, i64 -1
  %114 = ptrtoint i32* %113 to i64
  %115 = sub i64 %114, %112
  %116 = lshr i64 %115, 2
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 7
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %129, label %120

120:                                              ; preds = %109, %120
  %121 = phi i32* [ %126, %120 ], [ %110, %109 ]
  %122 = phi i32* [ %125, %120 ], [ %111, %109 ]
  %123 = phi i64 [ %127, %120 ], [ %118, %109 ]
  %124 = load i32, i32* %122, align 4
  store i32 %124, i32* %121, align 4
  %125 = getelementptr inbounds i32, i32* %122, i64 1
  %126 = getelementptr inbounds i32, i32* %121, i64 1
  %127 = add i64 %123, -1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %120, !llvm.loop !34

129:                                              ; preds = %120, %109
  %130 = phi i32* [ undef, %109 ], [ %126, %120 ]
  %131 = phi i32* [ %110, %109 ], [ %126, %120 ]
  %132 = phi i32* [ %111, %109 ], [ %125, %120 ]
  %133 = icmp ult i64 %115, 28
  br i1 %133, label %259, label %231

134:                                              ; preds = %102
  %135 = getelementptr i32, i32* %83, i64 -1
  %136 = ptrtoint i32* %135 to i64
  %137 = sub i64 %136, %81
  %138 = lshr i64 %137, 2
  %139 = add i64 %137, 4
  %140 = and i64 %139, -4
  %141 = getelementptr i8, i8* %93, i64 %140
  %142 = add nuw nsw i64 %138, 1
  %143 = getelementptr i32, i32* %79, i64 %142
  %144 = bitcast i32* %143 to i8*
  %145 = icmp ult i8* %93, %144
  %146 = icmp ugt i8* %141, %80
  %147 = and i1 %145, %146
  br i1 %147, label %109, label %148

148:                                              ; preds = %134
  %149 = and i64 %107, 9223372036854775800
  %150 = getelementptr i32, i32* %94, i64 %149
  %151 = getelementptr i32, i32* %79, i64 %149
  %152 = add nsw i64 %149, -8
  %153 = lshr exact i64 %152, 3
  %154 = add nuw nsw i64 %153, 1
  %155 = and i64 %154, 3
  %156 = icmp ult i64 %152, 24
  br i1 %156, label %208, label %157

157:                                              ; preds = %148
  %158 = sub nsw i64 %154, %155
  br label %159

159:                                              ; preds = %159, %157
  %160 = phi i64 [ 0, %157 ], [ %205, %159 ]
  %161 = phi i64 [ %158, %157 ], [ %206, %159 ]
  %162 = getelementptr i32, i32* %94, i64 %160
  %163 = getelementptr i32, i32* %79, i64 %160
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4, !alias.scope !36
  %166 = getelementptr i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4, !alias.scope !36
  %169 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %165, <4 x i32>* %169, align 4, !alias.scope !39, !noalias !36
  %170 = getelementptr i32, i32* %162, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %171, align 4, !alias.scope !39, !noalias !36
  %172 = or i64 %160, 8
  %173 = getelementptr i32, i32* %94, i64 %172
  %174 = getelementptr i32, i32* %79, i64 %172
  %175 = bitcast i32* %174 to <4 x i32>*
  %176 = load <4 x i32>, <4 x i32>* %175, align 4, !alias.scope !36
  %177 = getelementptr i32, i32* %174, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  %179 = load <4 x i32>, <4 x i32>* %178, align 4, !alias.scope !36
  %180 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> %176, <4 x i32>* %180, align 4, !alias.scope !39, !noalias !36
  %181 = getelementptr i32, i32* %173, i64 4
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %179, <4 x i32>* %182, align 4, !alias.scope !39, !noalias !36
  %183 = or i64 %160, 16
  %184 = getelementptr i32, i32* %94, i64 %183
  %185 = getelementptr i32, i32* %79, i64 %183
  %186 = bitcast i32* %185 to <4 x i32>*
  %187 = load <4 x i32>, <4 x i32>* %186, align 4, !alias.scope !36
  %188 = getelementptr i32, i32* %185, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  %190 = load <4 x i32>, <4 x i32>* %189, align 4, !alias.scope !36
  %191 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %187, <4 x i32>* %191, align 4, !alias.scope !39, !noalias !36
  %192 = getelementptr i32, i32* %184, i64 4
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %190, <4 x i32>* %193, align 4, !alias.scope !39, !noalias !36
  %194 = or i64 %160, 24
  %195 = getelementptr i32, i32* %94, i64 %194
  %196 = getelementptr i32, i32* %79, i64 %194
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4, !alias.scope !36
  %199 = getelementptr i32, i32* %196, i64 4
  %200 = bitcast i32* %199 to <4 x i32>*
  %201 = load <4 x i32>, <4 x i32>* %200, align 4, !alias.scope !36
  %202 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> %198, <4 x i32>* %202, align 4, !alias.scope !39, !noalias !36
  %203 = getelementptr i32, i32* %195, i64 4
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %204, align 4, !alias.scope !39, !noalias !36
  %205 = add i64 %160, 32
  %206 = add i64 %161, -4
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %208, label %159, !llvm.loop !41

208:                                              ; preds = %159, %148
  %209 = phi i64 [ 0, %148 ], [ %205, %159 ]
  %210 = icmp eq i64 %155, 0
  br i1 %210, label %227, label %211

211:                                              ; preds = %208, %211
  %212 = phi i64 [ %224, %211 ], [ %209, %208 ]
  %213 = phi i64 [ %225, %211 ], [ %155, %208 ]
  %214 = getelementptr i32, i32* %94, i64 %212
  %215 = getelementptr i32, i32* %79, i64 %212
  %216 = bitcast i32* %215 to <4 x i32>*
  %217 = load <4 x i32>, <4 x i32>* %216, align 4, !alias.scope !36
  %218 = getelementptr i32, i32* %215, i64 4
  %219 = bitcast i32* %218 to <4 x i32>*
  %220 = load <4 x i32>, <4 x i32>* %219, align 4, !alias.scope !36
  %221 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> %217, <4 x i32>* %221, align 4, !alias.scope !39, !noalias !36
  %222 = getelementptr i32, i32* %214, i64 4
  %223 = bitcast i32* %222 to <4 x i32>*
  store <4 x i32> %220, <4 x i32>* %223, align 4, !alias.scope !39, !noalias !36
  %224 = add i64 %212, 8
  %225 = add i64 %213, -1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %211, !llvm.loop !43

227:                                              ; preds = %211, %208
  %228 = icmp eq i64 %107, %149
  br i1 %228, label %259, label %109

229:                                              ; preds = %92
  %230 = ptrtoint i8* %93 to i64
  store i64 %230, i64* %100, align 8
  br label %267

231:                                              ; preds = %129, %231
  %232 = phi i32* [ %257, %231 ], [ %131, %129 ]
  %233 = phi i32* [ %256, %231 ], [ %132, %129 ]
  %234 = load i32, i32* %233, align 4
  store i32 %234, i32* %232, align 4
  %235 = getelementptr inbounds i32, i32* %233, i64 1
  %236 = getelementptr inbounds i32, i32* %232, i64 1
  %237 = load i32, i32* %235, align 4
  store i32 %237, i32* %236, align 4
  %238 = getelementptr inbounds i32, i32* %233, i64 2
  %239 = getelementptr inbounds i32, i32* %232, i64 2
  %240 = load i32, i32* %238, align 4
  store i32 %240, i32* %239, align 4
  %241 = getelementptr inbounds i32, i32* %233, i64 3
  %242 = getelementptr inbounds i32, i32* %232, i64 3
  %243 = load i32, i32* %241, align 4
  store i32 %243, i32* %242, align 4
  %244 = getelementptr inbounds i32, i32* %233, i64 4
  %245 = getelementptr inbounds i32, i32* %232, i64 4
  %246 = load i32, i32* %244, align 4
  store i32 %246, i32* %245, align 4
  %247 = getelementptr inbounds i32, i32* %233, i64 5
  %248 = getelementptr inbounds i32, i32* %232, i64 5
  %249 = load i32, i32* %247, align 4
  store i32 %249, i32* %248, align 4
  %250 = getelementptr inbounds i32, i32* %233, i64 6
  %251 = getelementptr inbounds i32, i32* %232, i64 6
  %252 = load i32, i32* %250, align 4
  store i32 %252, i32* %251, align 4
  %253 = getelementptr inbounds i32, i32* %233, i64 7
  %254 = getelementptr inbounds i32, i32* %232, i64 7
  %255 = load i32, i32* %253, align 4
  store i32 %255, i32* %254, align 4
  %256 = getelementptr inbounds i32, i32* %233, i64 8
  %257 = getelementptr inbounds i32, i32* %232, i64 8
  %258 = icmp eq i32* %256, %83
  br i1 %258, label %259, label %231, !llvm.loop !44

259:                                              ; preds = %129, %231, %227
  %260 = phi i32* [ %150, %227 ], [ %130, %129 ], [ %257, %231 ]
  %261 = ptrtoint i32* %260 to i64
  %262 = bitcast %"class.std::__1::vector.6"* %16 to i64*
  %263 = load i64, i64* %262, align 8, !noalias !45
  store i64 %261, i64* %100, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #13, !alias.scope !45
  %264 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %16, i64 0, i32 0, i32 1
  %265 = bitcast i32** %264 to i64*
  %266 = icmp eq i64 %263, %261
  br i1 %266, label %270, label %273

267:                                              ; preds = %74, %229
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #13, !alias.scope !45
  %268 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %16, i64 0, i32 0, i32 1
  %269 = bitcast i32** %268 to i64*
  br label %270

270:                                              ; preds = %267, %259
  %271 = phi i64* [ %265, %259 ], [ %269, %267 ]
  %272 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %364

273:                                              ; preds = %259
  %274 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %275 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %276 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %277 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %276, i64 0, i32 1, i32 0
  %278 = getelementptr inbounds i8, i8* %275, i64 22
  %279 = getelementptr inbounds i8, i8* %275, i64 13
  %280 = getelementptr inbounds i8, i8* %275, i64 11
  %281 = getelementptr inbounds i8, i8* %275, i64 5
  %282 = getelementptr inbounds i8, i8* %275, i64 12
  %283 = getelementptr inbounds i8, i8* %275, i64 19
  %284 = getelementptr inbounds i8, i8* %275, i64 10
  %285 = getelementptr inbounds i8, i8* %275, i64 9
  %286 = getelementptr inbounds i8, i8* %275, i64 7
  %287 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %288 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %287, i64 0, i32 1, i32 0
  %289 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %291 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %292

292:                                              ; preds = %349, %273
  %293 = phi i64 [ %263, %273 ], [ %352, %349 ]
  %294 = phi i64 [ 0, %273 ], [ %350, %349 ]
  %295 = inttoptr i64 %293 to i32*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %274) #13, !noalias !45
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %275) #13, !noalias !45
  %296 = getelementptr inbounds i32, i32* %295, i64 %294
  %297 = load i32, i32* %296, align 4
  switch i32 %297, label %307 [
    i32 0, label %298
    i32 1, label %299
    i32 4, label %300
    i32 5, label %301
    i32 6, label %302
    i32 2, label %303
    i32 3, label %304
    i32 7, label %305
    i32 8, label %306
  ]

298:                                              ; preds = %292
  store i8 7, i8* %277, align 1, !alias.scope !48, !noalias !45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %275, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i64 7, i1 false) #13
  store i8 0, i8* %286, align 1, !alias.scope !48, !noalias !45
  br label %308

299:                                              ; preds = %292
  store i8 9, i8* %277, align 1, !alias.scope !48, !noalias !45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %275, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9, i1 false) #13
  store i8 0, i8* %285, align 1, !alias.scope !48, !noalias !45
  br label %308

300:                                              ; preds = %292
  store i8 10, i8* %277, align 1, !alias.scope !48, !noalias !45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %275, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i64 10, i1 false) #13
  store i8 0, i8* %284, align 2, !alias.scope !48, !noalias !45
  br label %308

301:                                              ; preds = %292
  store i8 19, i8* %277, align 1, !alias.scope !48, !noalias !45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %275, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i64 19, i1 false) #13
  store i8 0, i8* %283, align 1, !alias.scope !48, !noalias !45
  br label %308

302:                                              ; preds = %292
  store i8 12, i8* %277, align 1, !alias.scope !48, !noalias !45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %275, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i64 12, i1 false) #13
  store i8 0, i8* %282, align 4, !alias.scope !48, !noalias !45
  br label %308

303:                                              ; preds = %292
  store i8 5, i8* %277, align 1, !alias.scope !48, !noalias !45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %275, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i64 5, i1 false) #13
  store i8 0, i8* %281, align 1, !alias.scope !48, !noalias !45
  br label %308

304:                                              ; preds = %292
  store i8 11, i8* %277, align 1, !alias.scope !48, !noalias !45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %275, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i64 11, i1 false) #13
  store i8 0, i8* %280, align 1, !alias.scope !48, !noalias !45
  br label %308

305:                                              ; preds = %292
  store i8 13, i8* %277, align 1, !alias.scope !48, !noalias !45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %275, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0), i64 13, i1 false) #13
  store i8 0, i8* %279, align 1, !alias.scope !48, !noalias !45
  br label %308

306:                                              ; preds = %292
  store i8 22, i8* %277, align 1, !alias.scope !48, !noalias !45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %275, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i64 22, i1 false) #13
  store i8 0, i8* %278, align 2, !alias.scope !48, !noalias !45
  br label %308

307:                                              ; preds = %292
  store i8 0, i8* %277, align 1, !alias.scope !48, !noalias !45
  store i8 0, i8* %275, align 8, !alias.scope !48, !noalias !45
  br label %308

308:                                              ; preds = %307, %306, %305, %304, %303, %302, %301, %300, %299, %298
  %309 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)) #13, !noalias !51
  %310 = bitcast %"class.std::__1::basic_string"* %309 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %274, i8* align 8 %310, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %310, i8 0, i64 24, i1 false) #13, !noalias !51
  %311 = load i8, i8* %288, align 1, !noalias !45
  %312 = icmp slt i8 %311, 0
  %313 = load i8*, i8** %289, align 8, !noalias !45
  %314 = load i64, i64* %290, align 8, !noalias !45
  %315 = zext i8 %311 to i64
  %316 = select i1 %312, i8* %313, i8* %274
  %317 = select i1 %312, i64 %314, i64 %315
  %318 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %15, i8* %316, i64 %317) #13
  %319 = load i8, i8* %288, align 1, !noalias !45
  %320 = icmp slt i8 %319, 0
  br i1 %320, label %321, label %323

321:                                              ; preds = %308
  %322 = load i8*, i8** %289, align 8, !noalias !45
  call void @_ZdlPv(i8* %322) #14
  br label %323

323:                                              ; preds = %321, %308
  %324 = load i8, i8* %277, align 1, !noalias !45
  %325 = icmp slt i8 %324, 0
  br i1 %325, label %326, label %328

326:                                              ; preds = %323
  %327 = load i8*, i8** %291, align 8, !noalias !45
  call void @_ZdlPv(i8* %327) #14
  br label %328

328:                                              ; preds = %326, %323
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %275) #13, !noalias !45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %274) #13, !noalias !45
  %329 = load i64, i64* %265, align 8, !noalias !45
  %330 = load i64, i64* %262, align 8, !noalias !45
  %331 = sub i64 %329, %330
  %332 = ashr exact i64 %331, 2
  %333 = icmp ugt i64 %332, 2
  br i1 %333, label %334, label %343

334:                                              ; preds = %328
  %335 = add nsw i64 %332, -2
  %336 = icmp ult i64 %294, %335
  br i1 %336, label %337, label %339

337:                                              ; preds = %334
  %338 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0)) #13
  br label %349

339:                                              ; preds = %334
  %340 = icmp eq i64 %294, %335
  br i1 %340, label %341, label %349

341:                                              ; preds = %339
  %342 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0)) #13
  br label %349

343:                                              ; preds = %328
  %344 = icmp eq i64 %331, 8
  %345 = icmp eq i64 %294, 0
  %346 = and i1 %345, %344
  br i1 %346, label %347, label %349

347:                                              ; preds = %343
  %348 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0)) #13
  br label %349

349:                                              ; preds = %347, %343, %341, %339, %337
  %350 = add nuw i64 %294, 1
  %351 = load i64, i64* %265, align 8, !noalias !45
  %352 = load i64, i64* %262, align 8, !noalias !45
  %353 = sub i64 %351, %352
  %354 = ashr exact i64 %353, 2
  %355 = icmp ult i64 %350, %354
  br i1 %355, label %292, label %356

356:                                              ; preds = %349
  %357 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %358 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %357, i64 0, i32 1, i32 0
  %359 = load i8, i8* %358, align 1
  %360 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load i8*, i8** %360, align 8
  %362 = icmp slt i8 %359, 0
  %363 = select i1 %362, i8* %361, i8* %76
  br label %364

364:                                              ; preds = %270, %356
  %365 = phi i64* [ %271, %270 ], [ %265, %356 ]
  %366 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %272, %270 ], [ %357, %356 ]
  %367 = phi i8* [ %76, %270 ], [ %363, %356 ]
  %368 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %366, i64 0, i32 1, i32 0
  %369 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %370) #13
  switch i32 %3, label %407 [
    i32 0, label %371
    i32 1, label %375
    i32 4, label %379
    i32 5, label %383
    i32 6, label %387
    i32 2, label %391
    i32 3, label %395
    i32 7, label %399
    i32 8, label %403
  ]

371:                                              ; preds = %364
  %372 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %373 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %372, i64 0, i32 1, i32 0
  store i8 7, i8* %373, align 1, !alias.scope !54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %370, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i64 7, i1 false) #13
  %374 = getelementptr inbounds i8, i8* %370, i64 7
  store i8 0, i8* %374, align 1, !alias.scope !54
  br label %410

375:                                              ; preds = %364
  %376 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %377 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %376, i64 0, i32 1, i32 0
  store i8 9, i8* %377, align 1, !alias.scope !54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %370, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9, i1 false) #13
  %378 = getelementptr inbounds i8, i8* %370, i64 9
  store i8 0, i8* %378, align 1, !alias.scope !54
  br label %410

379:                                              ; preds = %364
  %380 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %381 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %380, i64 0, i32 1, i32 0
  store i8 10, i8* %381, align 1, !alias.scope !54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %370, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i64 10, i1 false) #13
  %382 = getelementptr inbounds i8, i8* %370, i64 10
  store i8 0, i8* %382, align 2, !alias.scope !54
  br label %410

383:                                              ; preds = %364
  %384 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %385 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %384, i64 0, i32 1, i32 0
  store i8 19, i8* %385, align 1, !alias.scope !54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %370, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i64 19, i1 false) #13
  %386 = getelementptr inbounds i8, i8* %370, i64 19
  store i8 0, i8* %386, align 1, !alias.scope !54
  br label %410

387:                                              ; preds = %364
  %388 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %389 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %388, i64 0, i32 1, i32 0
  store i8 12, i8* %389, align 1, !alias.scope !54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %370, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i64 12, i1 false) #13
  %390 = getelementptr inbounds i8, i8* %370, i64 12
  store i8 0, i8* %390, align 4, !alias.scope !54
  br label %410

391:                                              ; preds = %364
  %392 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %393 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %392, i64 0, i32 1, i32 0
  store i8 5, i8* %393, align 1, !alias.scope !54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %370, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i64 5, i1 false) #13
  %394 = getelementptr inbounds i8, i8* %370, i64 5
  store i8 0, i8* %394, align 1, !alias.scope !54
  br label %410

395:                                              ; preds = %364
  %396 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %397 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %396, i64 0, i32 1, i32 0
  store i8 11, i8* %397, align 1, !alias.scope !54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %370, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i64 11, i1 false) #13
  %398 = getelementptr inbounds i8, i8* %370, i64 11
  store i8 0, i8* %398, align 1, !alias.scope !54
  br label %410

399:                                              ; preds = %364
  %400 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %401 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %400, i64 0, i32 1, i32 0
  store i8 13, i8* %401, align 1, !alias.scope !54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %370, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0), i64 13, i1 false) #13
  %402 = getelementptr inbounds i8, i8* %370, i64 13
  store i8 0, i8* %402, align 1, !alias.scope !54
  br label %410

403:                                              ; preds = %364
  %404 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %405 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %404, i64 0, i32 1, i32 0
  store i8 22, i8* %405, align 1, !alias.scope !54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %370, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i64 22, i1 false) #13
  %406 = getelementptr inbounds i8, i8* %370, i64 22
  store i8 0, i8* %406, align 2, !alias.scope !54
  br label %410

407:                                              ; preds = %364
  %408 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %409 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %408, i64 0, i32 1, i32 0
  store i8 0, i8* %409, align 1, !alias.scope !54
  store i8 0, i8* %370, align 8, !alias.scope !54
  br label %410

410:                                              ; preds = %371, %375, %379, %383, %387, %391, %395, %399, %403, %407
  %411 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %372, %371 ], [ %376, %375 ], [ %380, %379 ], [ %384, %383 ], [ %388, %387 ], [ %392, %391 ], [ %396, %395 ], [ %400, %399 ], [ %404, %403 ], [ %408, %407 ]
  %412 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %411, i64 0, i32 1, i32 0
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i8* %75, i8* %367, %"class.std::__1::basic_string"* nonnull %17) #13
  %413 = load i8, i8* %412, align 1
  %414 = icmp slt i8 %413, 0
  br i1 %414, label %415, label %418

415:                                              ; preds = %410
  %416 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = load i8*, i8** %416, align 8
  call void @_ZdlPv(i8* %417) #14
  br label %418

418:                                              ; preds = %410, %415
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %370) #13
  %419 = load i8, i8* %368, align 1
  %420 = icmp slt i8 %419, 0
  br i1 %420, label %421, label %423

421:                                              ; preds = %418
  %422 = load i8*, i8** %369, align 8
  call void @_ZdlPv(i8* %422) #14
  br label %423

423:                                              ; preds = %418, %421
  %424 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %16, i64 0, i32 0, i32 0
  %425 = load i32*, i32** %424, align 8
  %426 = icmp eq i32* %425, null
  br i1 %426, label %430, label %427

427:                                              ; preds = %423
  %428 = ptrtoint i32* %425 to i64
  store i64 %428, i64* %365, align 8
  %429 = bitcast i32* %425 to i8*
  call void @_ZdlPv(i8* %429) #14
  br label %430

430:                                              ; preds = %423, %427
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #13
  br label %1386

431:                                              ; preds = %8
  %432 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %433 = bitcast %"class.std::__1::basic_string"* %432 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %434 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %433, i64 0, i32 1, i32 0
  %435 = load i8, i8* %434, align 1
  %436 = icmp slt i8 %435, 0
  br i1 %436, label %437, label %440

437:                                              ; preds = %431
  %438 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %432, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %439 = load i8*, i8** %438, align 8
  br label %442

440:                                              ; preds = %431
  %441 = bitcast %"class.std::__1::basic_string"* %432 to i8*
  br label %442

442:                                              ; preds = %437, %440
  %443 = phi i8* [ %439, %437 ], [ %441, %440 ]
  %444 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %444) #13
  %445 = bitcast %"class.std::__1::vector.21"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %445) #13
  %446 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %447 = load i8, i8* %446, align 8, !range !2
  %448 = icmp eq i8 %447, 0
  br i1 %448, label %449, label %450, !prof !8

449:                                              ; preds = %442
  tail call void @llvm.trap() #13
  unreachable

450:                                              ; preds = %442
  %451 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %452 = load i32*, i32** %451, align 8
  %453 = bitcast i32* %452 to i8*
  %454 = ptrtoint i32* %452 to i64
  %455 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %456 = load i32*, i32** %455, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %445, i8 0, i64 24, i1 false) #13
  %457 = ptrtoint i32* %456 to i64
  %458 = sub i64 %457, %454
  %459 = ashr exact i64 %458, 2
  %460 = icmp eq i64 %458, 0
  br i1 %460, label %640, label %461

461:                                              ; preds = %450
  %462 = icmp ugt i64 %459, 4611686018427387903
  br i1 %462, label %463, label %465

463:                                              ; preds = %461
  %464 = bitcast %"class.std::__1::vector.21"* %19 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %464) #15
  unreachable

465:                                              ; preds = %461
  %466 = tail call i8* @_Znwm(i64 %458) #14
  %467 = bitcast i8* %466 to i32*
  %468 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %19, i64 0, i32 0, i32 1
  %469 = bitcast i32** %468 to i8**
  store i8* %466, i8** %469, align 8
  %470 = bitcast %"class.std::__1::vector.21"* %19 to i8**
  store i8* %466, i8** %470, align 8
  %471 = getelementptr inbounds i32, i32* %467, i64 %459
  %472 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %471, i32** %472, align 8
  %473 = bitcast i32** %468 to i64*
  %474 = icmp eq i32* %452, %456
  br i1 %474, label %602, label %475

475:                                              ; preds = %465
  %476 = getelementptr i32, i32* %456, i64 -1
  %477 = ptrtoint i32* %476 to i64
  %478 = sub i64 %477, %454
  %479 = lshr i64 %478, 2
  %480 = add nuw nsw i64 %479, 1
  %481 = icmp ult i64 %480, 8
  br i1 %481, label %482, label %507

482:                                              ; preds = %600, %507, %475
  %483 = phi i32* [ %467, %507 ], [ %467, %475 ], [ %523, %600 ]
  %484 = phi i32* [ %452, %507 ], [ %452, %475 ], [ %524, %600 ]
  %485 = ptrtoint i32* %484 to i64
  %486 = getelementptr i32, i32* %456, i64 -1
  %487 = ptrtoint i32* %486 to i64
  %488 = sub i64 %487, %485
  %489 = lshr i64 %488, 2
  %490 = add nuw nsw i64 %489, 1
  %491 = and i64 %490, 7
  %492 = icmp eq i64 %491, 0
  br i1 %492, label %502, label %493

493:                                              ; preds = %482, %493
  %494 = phi i32* [ %499, %493 ], [ %483, %482 ]
  %495 = phi i32* [ %498, %493 ], [ %484, %482 ]
  %496 = phi i64 [ %500, %493 ], [ %491, %482 ]
  %497 = load i32, i32* %495, align 4
  store i32 %497, i32* %494, align 4
  %498 = getelementptr inbounds i32, i32* %495, i64 1
  %499 = getelementptr inbounds i32, i32* %494, i64 1
  %500 = add i64 %496, -1
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %502, label %493, !llvm.loop !57

502:                                              ; preds = %493, %482
  %503 = phi i32* [ undef, %482 ], [ %499, %493 ]
  %504 = phi i32* [ %483, %482 ], [ %499, %493 ]
  %505 = phi i32* [ %484, %482 ], [ %498, %493 ]
  %506 = icmp ult i64 %488, 28
  br i1 %506, label %632, label %604

507:                                              ; preds = %475
  %508 = getelementptr i32, i32* %456, i64 -1
  %509 = ptrtoint i32* %508 to i64
  %510 = sub i64 %509, %454
  %511 = lshr i64 %510, 2
  %512 = add i64 %510, 4
  %513 = and i64 %512, -4
  %514 = getelementptr i8, i8* %466, i64 %513
  %515 = add nuw nsw i64 %511, 1
  %516 = getelementptr i32, i32* %452, i64 %515
  %517 = bitcast i32* %516 to i8*
  %518 = icmp ult i8* %466, %517
  %519 = icmp ugt i8* %514, %453
  %520 = and i1 %518, %519
  br i1 %520, label %482, label %521

521:                                              ; preds = %507
  %522 = and i64 %480, 9223372036854775800
  %523 = getelementptr i32, i32* %467, i64 %522
  %524 = getelementptr i32, i32* %452, i64 %522
  %525 = add nsw i64 %522, -8
  %526 = lshr exact i64 %525, 3
  %527 = add nuw nsw i64 %526, 1
  %528 = and i64 %527, 3
  %529 = icmp ult i64 %525, 24
  br i1 %529, label %581, label %530

530:                                              ; preds = %521
  %531 = sub nsw i64 %527, %528
  br label %532

532:                                              ; preds = %532, %530
  %533 = phi i64 [ 0, %530 ], [ %578, %532 ]
  %534 = phi i64 [ %531, %530 ], [ %579, %532 ]
  %535 = getelementptr i32, i32* %467, i64 %533
  %536 = getelementptr i32, i32* %452, i64 %533
  %537 = bitcast i32* %536 to <4 x i32>*
  %538 = load <4 x i32>, <4 x i32>* %537, align 4, !alias.scope !58
  %539 = getelementptr i32, i32* %536, i64 4
  %540 = bitcast i32* %539 to <4 x i32>*
  %541 = load <4 x i32>, <4 x i32>* %540, align 4, !alias.scope !58
  %542 = bitcast i32* %535 to <4 x i32>*
  store <4 x i32> %538, <4 x i32>* %542, align 4, !alias.scope !61, !noalias !58
  %543 = getelementptr i32, i32* %535, i64 4
  %544 = bitcast i32* %543 to <4 x i32>*
  store <4 x i32> %541, <4 x i32>* %544, align 4, !alias.scope !61, !noalias !58
  %545 = or i64 %533, 8
  %546 = getelementptr i32, i32* %467, i64 %545
  %547 = getelementptr i32, i32* %452, i64 %545
  %548 = bitcast i32* %547 to <4 x i32>*
  %549 = load <4 x i32>, <4 x i32>* %548, align 4, !alias.scope !58
  %550 = getelementptr i32, i32* %547, i64 4
  %551 = bitcast i32* %550 to <4 x i32>*
  %552 = load <4 x i32>, <4 x i32>* %551, align 4, !alias.scope !58
  %553 = bitcast i32* %546 to <4 x i32>*
  store <4 x i32> %549, <4 x i32>* %553, align 4, !alias.scope !61, !noalias !58
  %554 = getelementptr i32, i32* %546, i64 4
  %555 = bitcast i32* %554 to <4 x i32>*
  store <4 x i32> %552, <4 x i32>* %555, align 4, !alias.scope !61, !noalias !58
  %556 = or i64 %533, 16
  %557 = getelementptr i32, i32* %467, i64 %556
  %558 = getelementptr i32, i32* %452, i64 %556
  %559 = bitcast i32* %558 to <4 x i32>*
  %560 = load <4 x i32>, <4 x i32>* %559, align 4, !alias.scope !58
  %561 = getelementptr i32, i32* %558, i64 4
  %562 = bitcast i32* %561 to <4 x i32>*
  %563 = load <4 x i32>, <4 x i32>* %562, align 4, !alias.scope !58
  %564 = bitcast i32* %557 to <4 x i32>*
  store <4 x i32> %560, <4 x i32>* %564, align 4, !alias.scope !61, !noalias !58
  %565 = getelementptr i32, i32* %557, i64 4
  %566 = bitcast i32* %565 to <4 x i32>*
  store <4 x i32> %563, <4 x i32>* %566, align 4, !alias.scope !61, !noalias !58
  %567 = or i64 %533, 24
  %568 = getelementptr i32, i32* %467, i64 %567
  %569 = getelementptr i32, i32* %452, i64 %567
  %570 = bitcast i32* %569 to <4 x i32>*
  %571 = load <4 x i32>, <4 x i32>* %570, align 4, !alias.scope !58
  %572 = getelementptr i32, i32* %569, i64 4
  %573 = bitcast i32* %572 to <4 x i32>*
  %574 = load <4 x i32>, <4 x i32>* %573, align 4, !alias.scope !58
  %575 = bitcast i32* %568 to <4 x i32>*
  store <4 x i32> %571, <4 x i32>* %575, align 4, !alias.scope !61, !noalias !58
  %576 = getelementptr i32, i32* %568, i64 4
  %577 = bitcast i32* %576 to <4 x i32>*
  store <4 x i32> %574, <4 x i32>* %577, align 4, !alias.scope !61, !noalias !58
  %578 = add i64 %533, 32
  %579 = add i64 %534, -4
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %532, !llvm.loop !63

581:                                              ; preds = %532, %521
  %582 = phi i64 [ 0, %521 ], [ %578, %532 ]
  %583 = icmp eq i64 %528, 0
  br i1 %583, label %600, label %584

584:                                              ; preds = %581, %584
  %585 = phi i64 [ %597, %584 ], [ %582, %581 ]
  %586 = phi i64 [ %598, %584 ], [ %528, %581 ]
  %587 = getelementptr i32, i32* %467, i64 %585
  %588 = getelementptr i32, i32* %452, i64 %585
  %589 = bitcast i32* %588 to <4 x i32>*
  %590 = load <4 x i32>, <4 x i32>* %589, align 4, !alias.scope !58
  %591 = getelementptr i32, i32* %588, i64 4
  %592 = bitcast i32* %591 to <4 x i32>*
  %593 = load <4 x i32>, <4 x i32>* %592, align 4, !alias.scope !58
  %594 = bitcast i32* %587 to <4 x i32>*
  store <4 x i32> %590, <4 x i32>* %594, align 4, !alias.scope !61, !noalias !58
  %595 = getelementptr i32, i32* %587, i64 4
  %596 = bitcast i32* %595 to <4 x i32>*
  store <4 x i32> %593, <4 x i32>* %596, align 4, !alias.scope !61, !noalias !58
  %597 = add i64 %585, 8
  %598 = add i64 %586, -1
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %600, label %584, !llvm.loop !64

600:                                              ; preds = %584, %581
  %601 = icmp eq i64 %480, %522
  br i1 %601, label %632, label %482

602:                                              ; preds = %465
  %603 = ptrtoint i8* %466 to i64
  store i64 %603, i64* %473, align 8
  br label %640

604:                                              ; preds = %502, %604
  %605 = phi i32* [ %630, %604 ], [ %504, %502 ]
  %606 = phi i32* [ %629, %604 ], [ %505, %502 ]
  %607 = load i32, i32* %606, align 4
  store i32 %607, i32* %605, align 4
  %608 = getelementptr inbounds i32, i32* %606, i64 1
  %609 = getelementptr inbounds i32, i32* %605, i64 1
  %610 = load i32, i32* %608, align 4
  store i32 %610, i32* %609, align 4
  %611 = getelementptr inbounds i32, i32* %606, i64 2
  %612 = getelementptr inbounds i32, i32* %605, i64 2
  %613 = load i32, i32* %611, align 4
  store i32 %613, i32* %612, align 4
  %614 = getelementptr inbounds i32, i32* %606, i64 3
  %615 = getelementptr inbounds i32, i32* %605, i64 3
  %616 = load i32, i32* %614, align 4
  store i32 %616, i32* %615, align 4
  %617 = getelementptr inbounds i32, i32* %606, i64 4
  %618 = getelementptr inbounds i32, i32* %605, i64 4
  %619 = load i32, i32* %617, align 4
  store i32 %619, i32* %618, align 4
  %620 = getelementptr inbounds i32, i32* %606, i64 5
  %621 = getelementptr inbounds i32, i32* %605, i64 5
  %622 = load i32, i32* %620, align 4
  store i32 %622, i32* %621, align 4
  %623 = getelementptr inbounds i32, i32* %606, i64 6
  %624 = getelementptr inbounds i32, i32* %605, i64 6
  %625 = load i32, i32* %623, align 4
  store i32 %625, i32* %624, align 4
  %626 = getelementptr inbounds i32, i32* %606, i64 7
  %627 = getelementptr inbounds i32, i32* %605, i64 7
  %628 = load i32, i32* %626, align 4
  store i32 %628, i32* %627, align 4
  %629 = getelementptr inbounds i32, i32* %606, i64 8
  %630 = getelementptr inbounds i32, i32* %605, i64 8
  %631 = icmp eq i32* %629, %456
  br i1 %631, label %632, label %604, !llvm.loop !65

632:                                              ; preds = %502, %604, %600
  %633 = phi i32* [ %523, %600 ], [ %503, %502 ], [ %630, %604 ]
  %634 = ptrtoint i32* %633 to i64
  %635 = bitcast %"class.std::__1::vector.21"* %19 to i64*
  %636 = load i64, i64* %635, align 8, !noalias !66
  store i64 %634, i64* %473, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %444, i8 0, i64 24, i1 false) #13, !alias.scope !66
  %637 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %19, i64 0, i32 0, i32 1
  %638 = bitcast i32** %637 to i64*
  %639 = icmp eq i64 %636, %634
  br i1 %639, label %643, label %646

640:                                              ; preds = %450, %602
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %444, i8 0, i64 24, i1 false) #13, !alias.scope !66
  %641 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %19, i64 0, i32 0, i32 1
  %642 = bitcast i32** %641 to i64*
  br label %643

643:                                              ; preds = %640, %632
  %644 = phi i64* [ %638, %632 ], [ %642, %640 ]
  %645 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %738

646:                                              ; preds = %632
  %647 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %648 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %649 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %650 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %649, i64 0, i32 1, i32 0
  %651 = getelementptr inbounds i8, i8* %648, i64 15
  %652 = getelementptr inbounds i8, i8* %648, i64 5
  %653 = getelementptr inbounds i8, i8* %648, i64 10
  %654 = bitcast %"class.std::__1::basic_string"* %10 to i64*
  %655 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %656 = bitcast i64* %655 to i8*
  %657 = getelementptr inbounds i8, i8* %648, i64 14
  %658 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %659 = bitcast i64* %658 to i8*
  %660 = getelementptr inbounds i8, i8* %648, i64 7
  %661 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %662 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %661, i64 0, i32 1, i32 0
  %663 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %664 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %665 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %666

666:                                              ; preds = %723, %646
  %667 = phi i64 [ %636, %646 ], [ %726, %723 ]
  %668 = phi i64 [ 0, %646 ], [ %724, %723 ]
  %669 = inttoptr i64 %667 to i32*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %647) #13, !noalias !66
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %648) #13, !noalias !66
  %670 = getelementptr inbounds i32, i32* %669, i64 %668
  %671 = load i32, i32* %670, align 4
  switch i32 %671, label %681 [
    i32 0, label %672
    i32 1, label %673
    i32 2, label %674
    i32 3, label %675
    i32 4, label %676
    i32 5, label %677
    i32 6, label %678
    i32 7, label %679
    i32 8, label %680
  ]

672:                                              ; preds = %666
  store i8 7, i8* %650, align 1, !alias.scope !69, !noalias !66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %648, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i64 7, i1 false) #13
  store i8 0, i8* %660, align 1, !alias.scope !69, !noalias !66
  br label %682

673:                                              ; preds = %666
  store i8 15, i8* %650, align 1, !alias.scope !69, !noalias !66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %648, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i64 0, i64 0), i64 15, i1 false) #13
  store i8 0, i8* %651, align 1, !alias.scope !69, !noalias !66
  br label %682

674:                                              ; preds = %666
  store i8 16, i8* %650, align 1, !alias.scope !69, !noalias !66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %648, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0), i64 16, i1 false) #13
  store i8 0, i8* %659, align 8, !alias.scope !69, !noalias !66
  br label %682

675:                                              ; preds = %666
  store i8 14, i8* %650, align 1, !alias.scope !69, !noalias !66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %648, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), i64 14, i1 false) #13
  store i8 0, i8* %657, align 2, !alias.scope !69, !noalias !66
  br label %682

676:                                              ; preds = %666
  store i8 8, i8* %650, align 1, !alias.scope !69, !noalias !66
  store i64 7306916054639469943, i64* %654, align 8, !alias.scope !69, !noalias !66
  store i8 0, i8* %656, align 8, !alias.scope !69, !noalias !66
  br label %682

677:                                              ; preds = %666
  store i8 10, i8* %650, align 1, !alias.scope !69, !noalias !66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %648, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i64 10, i1 false) #13
  store i8 0, i8* %653, align 2, !alias.scope !69, !noalias !66
  br label %682

678:                                              ; preds = %666
  store i8 5, i8* %650, align 1, !alias.scope !69, !noalias !66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %648, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i64 5, i1 false) #13
  store i8 0, i8* %652, align 1, !alias.scope !69, !noalias !66
  br label %682

679:                                              ; preds = %666
  store i8 15, i8* %650, align 1, !alias.scope !69, !noalias !66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %648, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i64 0, i64 0), i64 15, i1 false) #13
  store i8 0, i8* %651, align 1, !alias.scope !69, !noalias !66
  br label %682

680:                                              ; preds = %666
  store i8 15, i8* %650, align 1, !alias.scope !69, !noalias !66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %648, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0), i64 15, i1 false) #13
  store i8 0, i8* %651, align 1, !alias.scope !69, !noalias !66
  br label %682

681:                                              ; preds = %666
  store i8 0, i8* %650, align 1, !alias.scope !69, !noalias !66
  store i8 0, i8* %648, align 8, !alias.scope !69, !noalias !66
  br label %682

682:                                              ; preds = %681, %680, %679, %678, %677, %676, %675, %674, %673, %672
  %683 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)) #13, !noalias !72
  %684 = bitcast %"class.std::__1::basic_string"* %683 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %647, i8* align 8 %684, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %684, i8 0, i64 24, i1 false) #13, !noalias !72
  %685 = load i8, i8* %662, align 1, !noalias !66
  %686 = icmp slt i8 %685, 0
  %687 = load i8*, i8** %663, align 8, !noalias !66
  %688 = load i64, i64* %664, align 8, !noalias !66
  %689 = zext i8 %685 to i64
  %690 = select i1 %686, i8* %687, i8* %647
  %691 = select i1 %686, i64 %688, i64 %689
  %692 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %18, i8* %690, i64 %691) #13
  %693 = load i8, i8* %662, align 1, !noalias !66
  %694 = icmp slt i8 %693, 0
  br i1 %694, label %695, label %697

695:                                              ; preds = %682
  %696 = load i8*, i8** %663, align 8, !noalias !66
  call void @_ZdlPv(i8* %696) #14
  br label %697

697:                                              ; preds = %695, %682
  %698 = load i8, i8* %650, align 1, !noalias !66
  %699 = icmp slt i8 %698, 0
  br i1 %699, label %700, label %702

700:                                              ; preds = %697
  %701 = load i8*, i8** %665, align 8, !noalias !66
  call void @_ZdlPv(i8* %701) #14
  br label %702

702:                                              ; preds = %700, %697
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %648) #13, !noalias !66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %647) #13, !noalias !66
  %703 = load i64, i64* %638, align 8, !noalias !66
  %704 = load i64, i64* %635, align 8, !noalias !66
  %705 = sub i64 %703, %704
  %706 = ashr exact i64 %705, 2
  %707 = icmp ugt i64 %706, 2
  br i1 %707, label %708, label %717

708:                                              ; preds = %702
  %709 = add nsw i64 %706, -2
  %710 = icmp ult i64 %668, %709
  br i1 %710, label %711, label %713

711:                                              ; preds = %708
  %712 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0)) #13
  br label %723

713:                                              ; preds = %708
  %714 = icmp eq i64 %668, %709
  br i1 %714, label %715, label %723

715:                                              ; preds = %713
  %716 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0)) #13
  br label %723

717:                                              ; preds = %702
  %718 = icmp eq i64 %705, 8
  %719 = icmp eq i64 %668, 0
  %720 = and i1 %719, %718
  br i1 %720, label %721, label %723

721:                                              ; preds = %717
  %722 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0)) #13
  br label %723

723:                                              ; preds = %721, %717, %715, %713, %711
  %724 = add nuw i64 %668, 1
  %725 = load i64, i64* %638, align 8, !noalias !66
  %726 = load i64, i64* %635, align 8, !noalias !66
  %727 = sub i64 %725, %726
  %728 = ashr exact i64 %727, 2
  %729 = icmp ult i64 %724, %728
  br i1 %729, label %666, label %730

730:                                              ; preds = %723
  %731 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %732 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %731, i64 0, i32 1, i32 0
  %733 = load i8, i8* %732, align 1
  %734 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %735 = load i8*, i8** %734, align 8
  %736 = icmp slt i8 %733, 0
  %737 = select i1 %736, i8* %735, i8* %444
  br label %738

738:                                              ; preds = %643, %730
  %739 = phi i64* [ %644, %643 ], [ %638, %730 ]
  %740 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %645, %643 ], [ %731, %730 ]
  %741 = phi i8* [ %444, %643 ], [ %737, %730 ]
  %742 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %740, i64 0, i32 1, i32 0
  %743 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %744 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %744) #13
  switch i32 %5, label %784 [
    i32 0, label %745
    i32 1, label %749
    i32 2, label %753
    i32 3, label %758
    i32 4, label %762
    i32 5, label %768
    i32 6, label %772
    i32 7, label %776
    i32 8, label %780
  ]

745:                                              ; preds = %738
  %746 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %747 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %746, i64 0, i32 1, i32 0
  store i8 7, i8* %747, align 1, !alias.scope !75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %744, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i64 7, i1 false) #13
  %748 = getelementptr inbounds i8, i8* %744, i64 7
  store i8 0, i8* %748, align 1, !alias.scope !75
  br label %787

749:                                              ; preds = %738
  %750 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %751 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %750, i64 0, i32 1, i32 0
  store i8 15, i8* %751, align 1, !alias.scope !75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %744, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i64 0, i64 0), i64 15, i1 false) #13
  %752 = getelementptr inbounds i8, i8* %744, i64 15
  store i8 0, i8* %752, align 1, !alias.scope !75
  br label %787

753:                                              ; preds = %738
  %754 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %755 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %754, i64 0, i32 1, i32 0
  store i8 16, i8* %755, align 1, !alias.scope !75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %744, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0), i64 16, i1 false) #13
  %756 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %757 = bitcast i64* %756 to i8*
  store i8 0, i8* %757, align 8, !alias.scope !75
  br label %787

758:                                              ; preds = %738
  %759 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %760 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %759, i64 0, i32 1, i32 0
  store i8 14, i8* %760, align 1, !alias.scope !75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %744, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), i64 14, i1 false) #13
  %761 = getelementptr inbounds i8, i8* %744, i64 14
  store i8 0, i8* %761, align 2, !alias.scope !75
  br label %787

762:                                              ; preds = %738
  %763 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %764 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %763, i64 0, i32 1, i32 0
  store i8 8, i8* %764, align 1, !alias.scope !75
  %765 = bitcast %"class.std::__1::basic_string"* %20 to i64*
  store i64 7306916054639469943, i64* %765, align 8, !alias.scope !75
  %766 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %767 = bitcast i64* %766 to i8*
  store i8 0, i8* %767, align 8, !alias.scope !75
  br label %787

768:                                              ; preds = %738
  %769 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %770 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %769, i64 0, i32 1, i32 0
  store i8 10, i8* %770, align 1, !alias.scope !75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %744, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i64 10, i1 false) #13
  %771 = getelementptr inbounds i8, i8* %744, i64 10
  store i8 0, i8* %771, align 2, !alias.scope !75
  br label %787

772:                                              ; preds = %738
  %773 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %774 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %773, i64 0, i32 1, i32 0
  store i8 5, i8* %774, align 1, !alias.scope !75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %744, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i64 5, i1 false) #13
  %775 = getelementptr inbounds i8, i8* %744, i64 5
  store i8 0, i8* %775, align 1, !alias.scope !75
  br label %787

776:                                              ; preds = %738
  %777 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %778 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %777, i64 0, i32 1, i32 0
  store i8 15, i8* %778, align 1, !alias.scope !75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %744, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i64 0, i64 0), i64 15, i1 false) #13
  %779 = getelementptr inbounds i8, i8* %744, i64 15
  store i8 0, i8* %779, align 1, !alias.scope !75
  br label %787

780:                                              ; preds = %738
  %781 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %782 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %781, i64 0, i32 1, i32 0
  store i8 15, i8* %782, align 1, !alias.scope !75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %744, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0), i64 15, i1 false) #13
  %783 = getelementptr inbounds i8, i8* %744, i64 15
  store i8 0, i8* %783, align 1, !alias.scope !75
  br label %787

784:                                              ; preds = %738
  %785 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %786 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %785, i64 0, i32 1, i32 0
  store i8 0, i8* %786, align 1, !alias.scope !75
  store i8 0, i8* %744, align 8, !alias.scope !75
  br label %787

787:                                              ; preds = %745, %749, %753, %758, %762, %768, %772, %776, %780, %784
  %788 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %746, %745 ], [ %750, %749 ], [ %754, %753 ], [ %759, %758 ], [ %763, %762 ], [ %769, %768 ], [ %773, %772 ], [ %777, %776 ], [ %781, %780 ], [ %785, %784 ]
  %789 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %788, i64 0, i32 1, i32 0
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.3, i64 0, i64 0), i8* %443, i8* %741, %"class.std::__1::basic_string"* nonnull %20) #13
  %790 = load i8, i8* %789, align 1
  %791 = icmp slt i8 %790, 0
  br i1 %791, label %792, label %795

792:                                              ; preds = %787
  %793 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %794 = load i8*, i8** %793, align 8
  call void @_ZdlPv(i8* %794) #14
  br label %795

795:                                              ; preds = %787, %792
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %744) #13
  %796 = load i8, i8* %742, align 1
  %797 = icmp slt i8 %796, 0
  br i1 %797, label %798, label %800

798:                                              ; preds = %795
  %799 = load i8*, i8** %743, align 8
  call void @_ZdlPv(i8* %799) #14
  br label %800

800:                                              ; preds = %795, %798
  %801 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %19, i64 0, i32 0, i32 0
  %802 = load i32*, i32** %801, align 8
  %803 = icmp eq i32* %802, null
  br i1 %803, label %807, label %804

804:                                              ; preds = %800
  %805 = ptrtoint i32* %802 to i64
  store i64 %805, i64* %739, align 8
  %806 = bitcast i32* %802 to i8*
  call void @_ZdlPv(i8* %806) #14
  br label %807

807:                                              ; preds = %800, %804
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %445) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %444) #13
  br label %1386

808:                                              ; preds = %8
  %809 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %810 = bitcast %"class.std::__1::basic_string"* %809 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %811 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %810, i64 0, i32 1, i32 0
  %812 = load i8, i8* %811, align 1
  %813 = icmp slt i8 %812, 0
  br i1 %813, label %814, label %817

814:                                              ; preds = %808
  %815 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %809, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %816 = load i8*, i8** %815, align 8
  br label %819

817:                                              ; preds = %808
  %818 = bitcast %"class.std::__1::basic_string"* %809 to i8*
  br label %819

819:                                              ; preds = %814, %817
  %820 = phi i8* [ %816, %814 ], [ %818, %817 ]
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4, i64 0, i64 0), i8* %820) #13
  br label %1386

821:                                              ; preds = %8
  %822 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %823 = bitcast %"class.std::__1::basic_string"* %822 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %824 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %823, i64 0, i32 1, i32 0
  %825 = load i8, i8* %824, align 1
  %826 = icmp slt i8 %825, 0
  br i1 %826, label %827, label %830

827:                                              ; preds = %821
  %828 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %822, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %829 = load i8*, i8** %828, align 8
  br label %832

830:                                              ; preds = %821
  %831 = bitcast %"class.std::__1::basic_string"* %822 to i8*
  br label %832

832:                                              ; preds = %827, %830
  %833 = phi i8* [ %829, %827 ], [ %831, %830 ]
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %833) #13
  br label %1386

834:                                              ; preds = %8
  %835 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %836 = bitcast %"class.std::__1::basic_string"* %835 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %837 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %836, i64 0, i32 1, i32 0
  %838 = load i8, i8* %837, align 1
  %839 = icmp slt i8 %838, 0
  br i1 %839, label %840, label %843

840:                                              ; preds = %834
  %841 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %835, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %842 = load i8*, i8** %841, align 8
  br label %845

843:                                              ; preds = %834
  %844 = bitcast %"class.std::__1::basic_string"* %835 to i8*
  br label %845

845:                                              ; preds = %840, %843
  %846 = phi i8* [ %842, %840 ], [ %844, %843 ]
  %847 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %848 = load i8, i8* %847, align 4, !range !2
  %849 = icmp eq i8 %848, 0
  br i1 %849, label %850, label %851, !prof !8

850:                                              ; preds = %845
  tail call void @llvm.trap() #13
  unreachable

851:                                              ; preds = %845
  %852 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %853 = load i32, i32* %852, align 4
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i8* %846, i32 %853) #13
  br label %1386

854:                                              ; preds = %8
  %855 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %856 = bitcast %"class.std::__1::basic_string"* %855 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %857 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %856, i64 0, i32 1, i32 0
  %858 = load i8, i8* %857, align 1
  %859 = icmp slt i8 %858, 0
  br i1 %859, label %860, label %863

860:                                              ; preds = %854
  %861 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %855, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %862 = load i8*, i8** %861, align 8
  br label %865

863:                                              ; preds = %854
  %864 = bitcast %"class.std::__1::basic_string"* %855 to i8*
  br label %865

865:                                              ; preds = %860, %863
  %866 = phi i8* [ %862, %860 ], [ %864, %863 ]
  %867 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %868 = load i8, i8* %867, align 4, !range !2
  %869 = icmp eq i8 %868, 0
  br i1 %869, label %870, label %871, !prof !8

870:                                              ; preds = %865
  tail call void @llvm.trap() #13
  unreachable

871:                                              ; preds = %865
  %872 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %873 = load i32, i32* %872, align 4
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7, i64 0, i64 0), i8* %866, i32 %873) #13
  br label %1386

874:                                              ; preds = %8
  %875 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %876 = bitcast %"class.std::__1::basic_string"* %875 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %877 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %876, i64 0, i32 1, i32 0
  %878 = load i8, i8* %877, align 1
  %879 = icmp slt i8 %878, 0
  br i1 %879, label %880, label %883

880:                                              ; preds = %874
  %881 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %875, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %882 = load i8*, i8** %881, align 8
  br label %885

883:                                              ; preds = %874
  %884 = bitcast %"class.std::__1::basic_string"* %875 to i8*
  br label %885

885:                                              ; preds = %880, %883
  %886 = phi i8* [ %882, %880 ], [ %884, %883 ]
  %887 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %887) #13
  %888 = bitcast %"class.std::__1::vector.13"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %888) #13
  %889 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 6, i32 0, i32 0
  %890 = load i32*, i32** %889, align 8
  %891 = bitcast i32* %890 to i8*
  %892 = ptrtoint i32* %890 to i64
  %893 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 6, i32 0, i32 1
  %894 = load i32*, i32** %893, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %888, i8 0, i64 24, i1 false) #13
  %895 = ptrtoint i32* %894 to i64
  %896 = sub i64 %895, %892
  %897 = ashr exact i64 %896, 2
  %898 = icmp eq i64 %896, 0
  br i1 %898, label %1078, label %899

899:                                              ; preds = %885
  %900 = icmp ugt i64 %897, 4611686018427387903
  br i1 %900, label %901, label %903

901:                                              ; preds = %899
  %902 = bitcast %"class.std::__1::vector.13"* %22 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %902) #15
  unreachable

903:                                              ; preds = %899
  %904 = tail call i8* @_Znwm(i64 %896) #14
  %905 = bitcast i8* %904 to i32*
  %906 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %22, i64 0, i32 0, i32 1
  %907 = bitcast i32** %906 to i8**
  store i8* %904, i8** %907, align 8
  %908 = bitcast %"class.std::__1::vector.13"* %22 to i8**
  store i8* %904, i8** %908, align 8
  %909 = getelementptr inbounds i32, i32* %905, i64 %897
  %910 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %909, i32** %910, align 8
  %911 = bitcast i32** %906 to i64*
  %912 = icmp eq i32* %890, %894
  br i1 %912, label %1040, label %913

913:                                              ; preds = %903
  %914 = getelementptr i32, i32* %894, i64 -1
  %915 = ptrtoint i32* %914 to i64
  %916 = sub i64 %915, %892
  %917 = lshr i64 %916, 2
  %918 = add nuw nsw i64 %917, 1
  %919 = icmp ult i64 %918, 8
  br i1 %919, label %920, label %945

920:                                              ; preds = %1038, %945, %913
  %921 = phi i32* [ %905, %945 ], [ %905, %913 ], [ %961, %1038 ]
  %922 = phi i32* [ %890, %945 ], [ %890, %913 ], [ %962, %1038 ]
  %923 = ptrtoint i32* %922 to i64
  %924 = getelementptr i32, i32* %894, i64 -1
  %925 = ptrtoint i32* %924 to i64
  %926 = sub i64 %925, %923
  %927 = lshr i64 %926, 2
  %928 = add nuw nsw i64 %927, 1
  %929 = and i64 %928, 7
  %930 = icmp eq i64 %929, 0
  br i1 %930, label %940, label %931

931:                                              ; preds = %920, %931
  %932 = phi i32* [ %937, %931 ], [ %921, %920 ]
  %933 = phi i32* [ %936, %931 ], [ %922, %920 ]
  %934 = phi i64 [ %938, %931 ], [ %929, %920 ]
  %935 = load i32, i32* %933, align 4
  store i32 %935, i32* %932, align 4
  %936 = getelementptr inbounds i32, i32* %933, i64 1
  %937 = getelementptr inbounds i32, i32* %932, i64 1
  %938 = add i64 %934, -1
  %939 = icmp eq i64 %938, 0
  br i1 %939, label %940, label %931, !llvm.loop !78

940:                                              ; preds = %931, %920
  %941 = phi i32* [ undef, %920 ], [ %937, %931 ]
  %942 = phi i32* [ %921, %920 ], [ %937, %931 ]
  %943 = phi i32* [ %922, %920 ], [ %936, %931 ]
  %944 = icmp ult i64 %926, 28
  br i1 %944, label %1070, label %1042

945:                                              ; preds = %913
  %946 = getelementptr i32, i32* %894, i64 -1
  %947 = ptrtoint i32* %946 to i64
  %948 = sub i64 %947, %892
  %949 = lshr i64 %948, 2
  %950 = add i64 %948, 4
  %951 = and i64 %950, -4
  %952 = getelementptr i8, i8* %904, i64 %951
  %953 = add nuw nsw i64 %949, 1
  %954 = getelementptr i32, i32* %890, i64 %953
  %955 = bitcast i32* %954 to i8*
  %956 = icmp ult i8* %904, %955
  %957 = icmp ugt i8* %952, %891
  %958 = and i1 %956, %957
  br i1 %958, label %920, label %959

959:                                              ; preds = %945
  %960 = and i64 %918, 9223372036854775800
  %961 = getelementptr i32, i32* %905, i64 %960
  %962 = getelementptr i32, i32* %890, i64 %960
  %963 = add nsw i64 %960, -8
  %964 = lshr exact i64 %963, 3
  %965 = add nuw nsw i64 %964, 1
  %966 = and i64 %965, 3
  %967 = icmp ult i64 %963, 24
  br i1 %967, label %1019, label %968

968:                                              ; preds = %959
  %969 = sub nsw i64 %965, %966
  br label %970

970:                                              ; preds = %970, %968
  %971 = phi i64 [ 0, %968 ], [ %1016, %970 ]
  %972 = phi i64 [ %969, %968 ], [ %1017, %970 ]
  %973 = getelementptr i32, i32* %905, i64 %971
  %974 = getelementptr i32, i32* %890, i64 %971
  %975 = bitcast i32* %974 to <4 x i32>*
  %976 = load <4 x i32>, <4 x i32>* %975, align 4, !alias.scope !79
  %977 = getelementptr i32, i32* %974, i64 4
  %978 = bitcast i32* %977 to <4 x i32>*
  %979 = load <4 x i32>, <4 x i32>* %978, align 4, !alias.scope !79
  %980 = bitcast i32* %973 to <4 x i32>*
  store <4 x i32> %976, <4 x i32>* %980, align 4, !alias.scope !82, !noalias !79
  %981 = getelementptr i32, i32* %973, i64 4
  %982 = bitcast i32* %981 to <4 x i32>*
  store <4 x i32> %979, <4 x i32>* %982, align 4, !alias.scope !82, !noalias !79
  %983 = or i64 %971, 8
  %984 = getelementptr i32, i32* %905, i64 %983
  %985 = getelementptr i32, i32* %890, i64 %983
  %986 = bitcast i32* %985 to <4 x i32>*
  %987 = load <4 x i32>, <4 x i32>* %986, align 4, !alias.scope !79
  %988 = getelementptr i32, i32* %985, i64 4
  %989 = bitcast i32* %988 to <4 x i32>*
  %990 = load <4 x i32>, <4 x i32>* %989, align 4, !alias.scope !79
  %991 = bitcast i32* %984 to <4 x i32>*
  store <4 x i32> %987, <4 x i32>* %991, align 4, !alias.scope !82, !noalias !79
  %992 = getelementptr i32, i32* %984, i64 4
  %993 = bitcast i32* %992 to <4 x i32>*
  store <4 x i32> %990, <4 x i32>* %993, align 4, !alias.scope !82, !noalias !79
  %994 = or i64 %971, 16
  %995 = getelementptr i32, i32* %905, i64 %994
  %996 = getelementptr i32, i32* %890, i64 %994
  %997 = bitcast i32* %996 to <4 x i32>*
  %998 = load <4 x i32>, <4 x i32>* %997, align 4, !alias.scope !79
  %999 = getelementptr i32, i32* %996, i64 4
  %1000 = bitcast i32* %999 to <4 x i32>*
  %1001 = load <4 x i32>, <4 x i32>* %1000, align 4, !alias.scope !79
  %1002 = bitcast i32* %995 to <4 x i32>*
  store <4 x i32> %998, <4 x i32>* %1002, align 4, !alias.scope !82, !noalias !79
  %1003 = getelementptr i32, i32* %995, i64 4
  %1004 = bitcast i32* %1003 to <4 x i32>*
  store <4 x i32> %1001, <4 x i32>* %1004, align 4, !alias.scope !82, !noalias !79
  %1005 = or i64 %971, 24
  %1006 = getelementptr i32, i32* %905, i64 %1005
  %1007 = getelementptr i32, i32* %890, i64 %1005
  %1008 = bitcast i32* %1007 to <4 x i32>*
  %1009 = load <4 x i32>, <4 x i32>* %1008, align 4, !alias.scope !79
  %1010 = getelementptr i32, i32* %1007, i64 4
  %1011 = bitcast i32* %1010 to <4 x i32>*
  %1012 = load <4 x i32>, <4 x i32>* %1011, align 4, !alias.scope !79
  %1013 = bitcast i32* %1006 to <4 x i32>*
  store <4 x i32> %1009, <4 x i32>* %1013, align 4, !alias.scope !82, !noalias !79
  %1014 = getelementptr i32, i32* %1006, i64 4
  %1015 = bitcast i32* %1014 to <4 x i32>*
  store <4 x i32> %1012, <4 x i32>* %1015, align 4, !alias.scope !82, !noalias !79
  %1016 = add i64 %971, 32
  %1017 = add i64 %972, -4
  %1018 = icmp eq i64 %1017, 0
  br i1 %1018, label %1019, label %970, !llvm.loop !84

1019:                                             ; preds = %970, %959
  %1020 = phi i64 [ 0, %959 ], [ %1016, %970 ]
  %1021 = icmp eq i64 %966, 0
  br i1 %1021, label %1038, label %1022

1022:                                             ; preds = %1019, %1022
  %1023 = phi i64 [ %1035, %1022 ], [ %1020, %1019 ]
  %1024 = phi i64 [ %1036, %1022 ], [ %966, %1019 ]
  %1025 = getelementptr i32, i32* %905, i64 %1023
  %1026 = getelementptr i32, i32* %890, i64 %1023
  %1027 = bitcast i32* %1026 to <4 x i32>*
  %1028 = load <4 x i32>, <4 x i32>* %1027, align 4, !alias.scope !79
  %1029 = getelementptr i32, i32* %1026, i64 4
  %1030 = bitcast i32* %1029 to <4 x i32>*
  %1031 = load <4 x i32>, <4 x i32>* %1030, align 4, !alias.scope !79
  %1032 = bitcast i32* %1025 to <4 x i32>*
  store <4 x i32> %1028, <4 x i32>* %1032, align 4, !alias.scope !82, !noalias !79
  %1033 = getelementptr i32, i32* %1025, i64 4
  %1034 = bitcast i32* %1033 to <4 x i32>*
  store <4 x i32> %1031, <4 x i32>* %1034, align 4, !alias.scope !82, !noalias !79
  %1035 = add i64 %1023, 8
  %1036 = add i64 %1024, -1
  %1037 = icmp eq i64 %1036, 0
  br i1 %1037, label %1038, label %1022, !llvm.loop !85

1038:                                             ; preds = %1022, %1019
  %1039 = icmp eq i64 %918, %960
  br i1 %1039, label %1070, label %920

1040:                                             ; preds = %903
  %1041 = ptrtoint i8* %904 to i64
  store i64 %1041, i64* %911, align 8
  br label %1078

1042:                                             ; preds = %940, %1042
  %1043 = phi i32* [ %1068, %1042 ], [ %942, %940 ]
  %1044 = phi i32* [ %1067, %1042 ], [ %943, %940 ]
  %1045 = load i32, i32* %1044, align 4
  store i32 %1045, i32* %1043, align 4
  %1046 = getelementptr inbounds i32, i32* %1044, i64 1
  %1047 = getelementptr inbounds i32, i32* %1043, i64 1
  %1048 = load i32, i32* %1046, align 4
  store i32 %1048, i32* %1047, align 4
  %1049 = getelementptr inbounds i32, i32* %1044, i64 2
  %1050 = getelementptr inbounds i32, i32* %1043, i64 2
  %1051 = load i32, i32* %1049, align 4
  store i32 %1051, i32* %1050, align 4
  %1052 = getelementptr inbounds i32, i32* %1044, i64 3
  %1053 = getelementptr inbounds i32, i32* %1043, i64 3
  %1054 = load i32, i32* %1052, align 4
  store i32 %1054, i32* %1053, align 4
  %1055 = getelementptr inbounds i32, i32* %1044, i64 4
  %1056 = getelementptr inbounds i32, i32* %1043, i64 4
  %1057 = load i32, i32* %1055, align 4
  store i32 %1057, i32* %1056, align 4
  %1058 = getelementptr inbounds i32, i32* %1044, i64 5
  %1059 = getelementptr inbounds i32, i32* %1043, i64 5
  %1060 = load i32, i32* %1058, align 4
  store i32 %1060, i32* %1059, align 4
  %1061 = getelementptr inbounds i32, i32* %1044, i64 6
  %1062 = getelementptr inbounds i32, i32* %1043, i64 6
  %1063 = load i32, i32* %1061, align 4
  store i32 %1063, i32* %1062, align 4
  %1064 = getelementptr inbounds i32, i32* %1044, i64 7
  %1065 = getelementptr inbounds i32, i32* %1043, i64 7
  %1066 = load i32, i32* %1064, align 4
  store i32 %1066, i32* %1065, align 4
  %1067 = getelementptr inbounds i32, i32* %1044, i64 8
  %1068 = getelementptr inbounds i32, i32* %1043, i64 8
  %1069 = icmp eq i32* %1067, %894
  br i1 %1069, label %1070, label %1042, !llvm.loop !86

1070:                                             ; preds = %940, %1042, %1038
  %1071 = phi i32* [ %961, %1038 ], [ %941, %940 ], [ %1068, %1042 ]
  %1072 = ptrtoint i32* %1071 to i64
  %1073 = bitcast %"class.std::__1::vector.13"* %22 to i64*
  %1074 = load i64, i64* %1073, align 8, !noalias !87
  store i64 %1072, i64* %911, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %887, i8 0, i64 24, i1 false) #13, !alias.scope !87
  %1075 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %22, i64 0, i32 0, i32 1
  %1076 = bitcast i32** %1075 to i64*
  %1077 = icmp eq i64 %1074, %1072
  br i1 %1077, label %1081, label %1084

1078:                                             ; preds = %885, %1040
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %887, i8 0, i64 24, i1 false) #13, !alias.scope !87
  %1079 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %22, i64 0, i32 0, i32 1
  %1080 = bitcast i32** %1079 to i64*
  br label %1081

1081:                                             ; preds = %1078, %1070
  %1082 = phi i64* [ %1076, %1070 ], [ %1080, %1078 ]
  %1083 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %1169

1084:                                             ; preds = %1070
  %1085 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %1086 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %1087 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1088 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1087, i64 0, i32 1, i32 0
  %1089 = getelementptr inbounds i8, i8* %1086, i64 12
  %1090 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1091 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1092 = getelementptr inbounds i8, i8* %1086, i64 9
  %1093 = getelementptr inbounds i8, i8* %1086, i64 7
  %1094 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1095 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1094, i64 0, i32 1, i32 0
  %1096 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1097 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1098 = bitcast i64* %1091 to <2 x i64>*
  br label %1099

1099:                                             ; preds = %1154, %1084
  %1100 = phi i64 [ %1074, %1084 ], [ %1157, %1154 ]
  %1101 = phi i64 [ 0, %1084 ], [ %1155, %1154 ]
  %1102 = inttoptr i64 %1100 to i32*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1085) #13, !noalias !87
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1086) #13, !noalias !87
  %1103 = getelementptr inbounds i32, i32* %1102, i64 %1101
  %1104 = load i32, i32* %1103, align 4
  switch i32 %1104, label %1112 [
    i32 0, label %1105
    i32 1, label %1106
    i32 3, label %1107
    i32 4, label %1108
    i32 2, label %1111
  ]

1105:                                             ; preds = %1099
  store i8 9, i8* %1088, align 1, !alias.scope !90, !noalias !87
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1086, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0), i64 9, i1 false) #13
  store i8 0, i8* %1092, align 1, !alias.scope !90, !noalias !87
  br label %1113

1106:                                             ; preds = %1099
  store i8 7, i8* %1088, align 1, !alias.scope !90, !noalias !87
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1086, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i64 7, i1 false) #13
  store i8 0, i8* %1093, align 1, !alias.scope !90, !noalias !87
  br label %1113

1107:                                             ; preds = %1099
  store i8 9, i8* %1088, align 1, !alias.scope !90, !noalias !87
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1086, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i64 9, i1 false) #13
  store i8 0, i8* %1092, align 1, !alias.scope !90, !noalias !87
  br label %1113

1108:                                             ; preds = %1099
  %1109 = call i8* @_Znwm(i64 32) #14, !noalias !90
  store i8* %1109, i8** %1090, align 8, !alias.scope !90, !noalias !87
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %1098, align 8, !alias.scope !90, !noalias !87
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1109, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.33, i64 0, i64 0), i64 23, i1 false) #13, !noalias !90
  %1110 = getelementptr inbounds i8, i8* %1109, i64 23
  store i8 0, i8* %1110, align 1, !noalias !93
  br label %1113

1111:                                             ; preds = %1099
  store i8 12, i8* %1088, align 1, !alias.scope !90, !noalias !87
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1086, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i64 12, i1 false) #13
  store i8 0, i8* %1089, align 4, !alias.scope !90, !noalias !87
  br label %1113

1112:                                             ; preds = %1099
  store i8 0, i8* %1088, align 1, !alias.scope !90, !noalias !87
  store i8 0, i8* %1086, align 8, !alias.scope !90, !noalias !87
  br label %1113

1113:                                             ; preds = %1112, %1111, %1108, %1107, %1106, %1105
  %1114 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)) #13, !noalias !94
  %1115 = bitcast %"class.std::__1::basic_string"* %1114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1085, i8* align 8 %1115, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %1115, i8 0, i64 24, i1 false) #13, !noalias !94
  %1116 = load i8, i8* %1095, align 1, !noalias !87
  %1117 = icmp slt i8 %1116, 0
  %1118 = load i8*, i8** %1096, align 8, !noalias !87
  %1119 = load i64, i64* %1097, align 8, !noalias !87
  %1120 = zext i8 %1116 to i64
  %1121 = select i1 %1117, i8* %1118, i8* %1085
  %1122 = select i1 %1117, i64 %1119, i64 %1120
  %1123 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %21, i8* %1121, i64 %1122) #13
  %1124 = load i8, i8* %1095, align 1, !noalias !87
  %1125 = icmp slt i8 %1124, 0
  br i1 %1125, label %1126, label %1128

1126:                                             ; preds = %1113
  %1127 = load i8*, i8** %1096, align 8, !noalias !87
  call void @_ZdlPv(i8* %1127) #14
  br label %1128

1128:                                             ; preds = %1126, %1113
  %1129 = load i8, i8* %1088, align 1, !noalias !87
  %1130 = icmp slt i8 %1129, 0
  br i1 %1130, label %1131, label %1133

1131:                                             ; preds = %1128
  %1132 = load i8*, i8** %1090, align 8, !noalias !87
  call void @_ZdlPv(i8* %1132) #14
  br label %1133

1133:                                             ; preds = %1131, %1128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1086) #13, !noalias !87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1085) #13, !noalias !87
  %1134 = load i64, i64* %1076, align 8, !noalias !87
  %1135 = load i64, i64* %1073, align 8, !noalias !87
  %1136 = sub i64 %1134, %1135
  %1137 = ashr exact i64 %1136, 2
  %1138 = icmp ugt i64 %1137, 2
  br i1 %1138, label %1139, label %1148

1139:                                             ; preds = %1133
  %1140 = add nsw i64 %1137, -2
  %1141 = icmp ult i64 %1101, %1140
  br i1 %1141, label %1142, label %1144

1142:                                             ; preds = %1139
  %1143 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0)) #13
  br label %1154

1144:                                             ; preds = %1139
  %1145 = icmp eq i64 %1101, %1140
  br i1 %1145, label %1146, label %1154

1146:                                             ; preds = %1144
  %1147 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0)) #13
  br label %1154

1148:                                             ; preds = %1133
  %1149 = icmp eq i64 %1136, 8
  %1150 = icmp eq i64 %1101, 0
  %1151 = and i1 %1150, %1149
  br i1 %1151, label %1152, label %1154

1152:                                             ; preds = %1148
  %1153 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0)) #13
  br label %1154

1154:                                             ; preds = %1152, %1148, %1146, %1144, %1142
  %1155 = add nuw i64 %1101, 1
  %1156 = load i64, i64* %1076, align 8, !noalias !87
  %1157 = load i64, i64* %1073, align 8, !noalias !87
  %1158 = sub i64 %1156, %1157
  %1159 = ashr exact i64 %1158, 2
  %1160 = icmp ult i64 %1155, %1159
  br i1 %1160, label %1099, label %1161

1161:                                             ; preds = %1154
  %1162 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1162, i64 0, i32 1, i32 0
  %1164 = load i8, i8* %1163, align 1
  %1165 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1166 = load i8*, i8** %1165, align 8
  %1167 = icmp slt i8 %1164, 0
  %1168 = select i1 %1167, i8* %1166, i8* %887
  br label %1169

1169:                                             ; preds = %1081, %1161
  %1170 = phi i64* [ %1082, %1081 ], [ %1076, %1161 ]
  %1171 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %1083, %1081 ], [ %1162, %1161 ]
  %1172 = phi i8* [ %887, %1081 ], [ %1168, %1161 ]
  %1173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1171, i64 0, i32 1, i32 0
  %1174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1175 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1175) #13
  switch i32 %7, label %1192 [
    i32 0, label %1176
    i32 1, label %1180
    i32 3, label %1184
    i32 4, label %1198
    i32 2, label %1188
  ]

1176:                                             ; preds = %1169
  %1177 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1177, i64 0, i32 1, i32 0
  store i8 9, i8* %1178, align 1, !alias.scope !97
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1175, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0), i64 9, i1 false) #13
  %1179 = getelementptr inbounds i8, i8* %1175, i64 9
  store i8 0, i8* %1179, align 1, !alias.scope !97
  br label %1195

1180:                                             ; preds = %1169
  %1181 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1181, i64 0, i32 1, i32 0
  store i8 7, i8* %1182, align 1, !alias.scope !97
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1175, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i64 7, i1 false) #13
  %1183 = getelementptr inbounds i8, i8* %1175, i64 7
  store i8 0, i8* %1183, align 1, !alias.scope !97
  br label %1195

1184:                                             ; preds = %1169
  %1185 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1185, i64 0, i32 1, i32 0
  store i8 9, i8* %1186, align 1, !alias.scope !97
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1175, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i64 9, i1 false) #13
  %1187 = getelementptr inbounds i8, i8* %1175, i64 9
  store i8 0, i8* %1187, align 1, !alias.scope !97
  br label %1195

1188:                                             ; preds = %1169
  %1189 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1189, i64 0, i32 1, i32 0
  store i8 12, i8* %1190, align 1, !alias.scope !97
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1175, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i64 12, i1 false) #13
  %1191 = getelementptr inbounds i8, i8* %1175, i64 12
  store i8 0, i8* %1191, align 4, !alias.scope !97
  br label %1195

1192:                                             ; preds = %1169
  %1193 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1193, i64 0, i32 1, i32 0
  store i8 0, i8* %1194, align 1, !alias.scope !97
  store i8 0, i8* %1175, align 8, !alias.scope !97
  br label %1195

1195:                                             ; preds = %1176, %1180, %1184, %1188, %1192
  %1196 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %1193, %1192 ], [ %1189, %1188 ], [ %1185, %1184 ], [ %1181, %1180 ], [ %1177, %1176 ]
  %1197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %1207

1198:                                             ; preds = %1169
  %1199 = call i8* @_Znwm(i64 32) #14, !noalias !97
  %1200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1199, i8** %1200, align 8, !alias.scope !97
  %1201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1202 = bitcast i64* %1201 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %1202, align 8, !alias.scope !97
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1199, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.33, i64 0, i64 0), i64 23, i1 false) #13, !noalias !97
  %1203 = getelementptr inbounds i8, i8* %1199, i64 23
  store i8 0, i8* %1203, align 1, !noalias !97
  %1204 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1205 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1206 = load i8*, i8** %1205, align 8
  br label %1207

1207:                                             ; preds = %1195, %1198
  %1208 = phi i8** [ %1205, %1198 ], [ %1197, %1195 ]
  %1209 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %1204, %1198 ], [ %1196, %1195 ]
  %1210 = phi i8* [ %1206, %1198 ], [ %1175, %1195 ]
  %1211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1209, i64 0, i32 1, i32 0
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.8, i64 0, i64 0), i8* %886, i8* %1172, i8* %1210) #13
  %1212 = load i8, i8* %1211, align 1
  %1213 = icmp slt i8 %1212, 0
  br i1 %1213, label %1214, label %1216

1214:                                             ; preds = %1207
  %1215 = load i8*, i8** %1208, align 8
  call void @_ZdlPv(i8* %1215) #14
  br label %1216

1216:                                             ; preds = %1207, %1214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1175) #13
  %1217 = load i8, i8* %1173, align 1
  %1218 = icmp slt i8 %1217, 0
  br i1 %1218, label %1219, label %1221

1219:                                             ; preds = %1216
  %1220 = load i8*, i8** %1174, align 8
  call void @_ZdlPv(i8* %1220) #14
  br label %1221

1221:                                             ; preds = %1216, %1219
  %1222 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %22, i64 0, i32 0, i32 0
  %1223 = load i32*, i32** %1222, align 8
  %1224 = icmp eq i32* %1223, null
  br i1 %1224, label %1228, label %1225

1225:                                             ; preds = %1221
  %1226 = ptrtoint i32* %1223 to i64
  store i64 %1226, i64* %1170, align 8
  %1227 = bitcast i32* %1223 to i8*
  call void @_ZdlPv(i8* %1227) #14
  br label %1228

1228:                                             ; preds = %1221, %1225
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %888) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %887) #13
  br label %1386

1229:                                             ; preds = %8
  %1230 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %1231 = bitcast %"class.std::__1::basic_string"* %1230 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1231, i64 0, i32 1, i32 0
  %1233 = load i8, i8* %1232, align 1
  %1234 = icmp slt i8 %1233, 0
  br i1 %1234, label %1235, label %1238

1235:                                             ; preds = %1229
  %1236 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1230, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1237 = load i8*, i8** %1236, align 8
  br label %1240

1238:                                             ; preds = %1229
  %1239 = bitcast %"class.std::__1::basic_string"* %1230 to i8*
  br label %1240

1240:                                             ; preds = %1235, %1238
  %1241 = phi i8* [ %1237, %1235 ], [ %1239, %1238 ]
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i8* %1241) #13
  br label %1386

1242:                                             ; preds = %8
  %1243 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %1244 = bitcast %"class.std::__1::basic_string"* %1243 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1245 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1244, i64 0, i32 1, i32 0
  %1246 = load i8, i8* %1245, align 1
  %1247 = icmp slt i8 %1246, 0
  br i1 %1247, label %1248, label %1251

1248:                                             ; preds = %1242
  %1249 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1243, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1250 = load i8*, i8** %1249, align 8
  br label %1253

1251:                                             ; preds = %1242
  %1252 = bitcast %"class.std::__1::basic_string"* %1243 to i8*
  br label %1253

1253:                                             ; preds = %1248, %1251
  %1254 = phi i8* [ %1250, %1248 ], [ %1252, %1251 ]
  %1255 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1255) #13
  switch i32 %6, label %1277 [
    i32 0, label %1256
    i32 1, label %1260
    i32 2, label %1264
    i32 3, label %1268
    i32 4, label %1273
  ]

1256:                                             ; preds = %1253
  %1257 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1258 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1257, i64 0, i32 1, i32 0
  store i8 5, i8* %1258, align 1, !alias.scope !100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1255, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0), i64 5, i1 false) #13
  %1259 = getelementptr inbounds i8, i8* %1255, i64 5
  store i8 0, i8* %1259, align 1, !alias.scope !100
  br label %1280

1260:                                             ; preds = %1253
  %1261 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1262 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1261, i64 0, i32 1, i32 0
  store i8 6, i8* %1262, align 1, !alias.scope !100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1255, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0), i64 6, i1 false) #13
  %1263 = getelementptr inbounds i8, i8* %1255, i64 6
  store i8 0, i8* %1263, align 2, !alias.scope !100
  br label %1280

1264:                                             ; preds = %1253
  %1265 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1266 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1265, i64 0, i32 1, i32 0
  store i8 3, i8* %1266, align 1, !alias.scope !100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1255, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 3, i1 false) #13
  %1267 = getelementptr inbounds i8, i8* %1255, i64 3
  store i8 0, i8* %1267, align 1, !alias.scope !100
  br label %1280

1268:                                             ; preds = %1253
  %1269 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1270 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1269, i64 0, i32 1, i32 0
  store i8 4, i8* %1270, align 1, !alias.scope !100
  %1271 = bitcast %"class.std::__1::basic_string"* %24 to i32*
  store i32 1635018082, i32* %1271, align 8, !alias.scope !100
  %1272 = getelementptr inbounds i8, i8* %1255, i64 4
  store i8 0, i8* %1272, align 4, !alias.scope !100
  br label %1280

1273:                                             ; preds = %1253
  %1274 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1275 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1274, i64 0, i32 1, i32 0
  store i8 6, i8* %1275, align 1, !alias.scope !100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1255, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0), i64 6, i1 false) #13
  %1276 = getelementptr inbounds i8, i8* %1255, i64 6
  store i8 0, i8* %1276, align 2, !alias.scope !100
  br label %1280

1277:                                             ; preds = %1253
  %1278 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1279 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1278, i64 0, i32 1, i32 0
  store i8 0, i8* %1279, align 1, !alias.scope !100
  store i8 0, i8* %1255, align 8, !alias.scope !100
  br label %1280

1280:                                             ; preds = %1256, %1260, %1264, %1268, %1273, %1277
  %1281 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %1257, %1256 ], [ %1261, %1260 ], [ %1265, %1264 ], [ %1269, %1268 ], [ %1274, %1273 ], [ %1278, %1277 ]
  %1282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1281, i64 0, i32 1, i32 0
  %1283 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1284 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1284) #13
  %1285 = tail call i32 @_ZN10extensions17GetCurrentChannelEv() #13
  switch i32 %1285, label %1307 [
    i32 0, label %1286
    i32 1, label %1290
    i32 2, label %1294
    i32 3, label %1298
    i32 4, label %1303
  ]

1286:                                             ; preds = %1280
  %1287 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1288 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1287, i64 0, i32 1, i32 0
  store i8 5, i8* %1288, align 1, !alias.scope !103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1284, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0), i64 5, i1 false) #13
  %1289 = getelementptr inbounds i8, i8* %1284, i64 5
  store i8 0, i8* %1289, align 1, !alias.scope !103
  br label %1310

1290:                                             ; preds = %1280
  %1291 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1292 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1291, i64 0, i32 1, i32 0
  store i8 6, i8* %1292, align 1, !alias.scope !103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1284, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0), i64 6, i1 false) #13
  %1293 = getelementptr inbounds i8, i8* %1284, i64 6
  store i8 0, i8* %1293, align 2, !alias.scope !103
  br label %1310

1294:                                             ; preds = %1280
  %1295 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1296 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1295, i64 0, i32 1, i32 0
  store i8 3, i8* %1296, align 1, !alias.scope !103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1284, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 3, i1 false) #13
  %1297 = getelementptr inbounds i8, i8* %1284, i64 3
  store i8 0, i8* %1297, align 1, !alias.scope !103
  br label %1310

1298:                                             ; preds = %1280
  %1299 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1300 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1299, i64 0, i32 1, i32 0
  store i8 4, i8* %1300, align 1, !alias.scope !103
  %1301 = bitcast %"class.std::__1::basic_string"* %25 to i32*
  store i32 1635018082, i32* %1301, align 8, !alias.scope !103
  %1302 = getelementptr inbounds i8, i8* %1284, i64 4
  store i8 0, i8* %1302, align 4, !alias.scope !103
  br label %1310

1303:                                             ; preds = %1280
  %1304 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1305 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1304, i64 0, i32 1, i32 0
  store i8 6, i8* %1305, align 1, !alias.scope !103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1284, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0), i64 6, i1 false) #13
  %1306 = getelementptr inbounds i8, i8* %1284, i64 6
  store i8 0, i8* %1306, align 2, !alias.scope !103
  br label %1310

1307:                                             ; preds = %1280
  %1308 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1309 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1308, i64 0, i32 1, i32 0
  store i8 0, i8* %1309, align 1, !alias.scope !103
  store i8 0, i8* %1284, align 8, !alias.scope !103
  br label %1310

1310:                                             ; preds = %1286, %1290, %1294, %1298, %1303, %1307
  %1311 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %1287, %1286 ], [ %1291, %1290 ], [ %1295, %1294 ], [ %1299, %1298 ], [ %1304, %1303 ], [ %1308, %1307 ]
  %1312 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1311, i64 0, i32 1, i32 0
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.10, i64 0, i64 0), i8* %1254, %"class.std::__1::basic_string"* nonnull %24, %"class.std::__1::basic_string"* nonnull %25) #13
  %1313 = load i8, i8* %1312, align 1
  %1314 = icmp slt i8 %1313, 0
  br i1 %1314, label %1315, label %1318

1315:                                             ; preds = %1310
  %1316 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1317 = load i8*, i8** %1316, align 8
  call void @_ZdlPv(i8* %1317) #14
  br label %1318

1318:                                             ; preds = %1310, %1315
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1284) #13
  %1319 = load i8, i8* %1282, align 1
  %1320 = icmp slt i8 %1319, 0
  br i1 %1320, label %1321, label %1323

1321:                                             ; preds = %1318
  %1322 = load i8*, i8** %1283, align 8
  call void @_ZdlPv(i8* %1322) #14
  br label %1323

1323:                                             ; preds = %1318, %1321
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1255) #13
  br label %1386

1324:                                             ; preds = %8
  %1325 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %1326 = bitcast %"class.std::__1::basic_string"* %1325 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1327 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1326, i64 0, i32 1, i32 0
  %1328 = load i8, i8* %1327, align 1
  %1329 = icmp slt i8 %1328, 0
  br i1 %1329, label %1330, label %1333

1330:                                             ; preds = %1324
  %1331 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1325, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1332 = load i8*, i8** %1331, align 8
  br label %1335

1333:                                             ; preds = %1324
  %1334 = bitcast %"class.std::__1::basic_string"* %1325 to i8*
  br label %1335

1335:                                             ; preds = %1330, %1333
  %1336 = phi i8* [ %1332, %1330 ], [ %1334, %1333 ]
  %1337 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %1338 = load i8, i8* %1337, align 8, !range !2
  %1339 = icmp eq i8 %1338, 0
  br i1 %1339, label %1340, label %1341, !prof !8

1340:                                             ; preds = %1335
  tail call void @llvm.trap() #13
  unreachable

1341:                                             ; preds = %1335
  %1342 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %1343 = bitcast %"class.std::__1::basic_string"* %1342 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1344 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1343, i64 0, i32 1, i32 0
  %1345 = load i8, i8* %1344, align 1
  %1346 = icmp slt i8 %1345, 0
  br i1 %1346, label %1347, label %1350

1347:                                             ; preds = %1341
  %1348 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1342, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1349 = load i8*, i8** %1348, align 8
  br label %1352

1350:                                             ; preds = %1341
  %1351 = bitcast %"class.std::__1::basic_string"* %1342 to i8*
  br label %1352

1352:                                             ; preds = %1347, %1350
  %1353 = phi i8* [ %1349, %1347 ], [ %1351, %1350 ]
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.11, i64 0, i64 0), i8* %1336, i8* %1353) #13
  br label %1386

1354:                                             ; preds = %8
  %1355 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 0, i32 1
  %1356 = bitcast %"class.std::__1::basic_string"* %1355 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1357 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1356, i64 0, i32 1, i32 0
  %1358 = load i8, i8* %1357, align 1
  %1359 = icmp slt i8 %1358, 0
  br i1 %1359, label %1360, label %1363

1360:                                             ; preds = %1354
  %1361 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1355, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1362 = load i8*, i8** %1361, align 8
  br label %1365

1363:                                             ; preds = %1354
  %1364 = bitcast %"class.std::__1::basic_string"* %1355 to i8*
  br label %1365

1365:                                             ; preds = %1360, %1363
  %1366 = phi i8* [ %1362, %1360 ], [ %1364, %1363 ]
  %1367 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %1368 = load i8, i8* %1367, align 8, !range !2
  %1369 = icmp eq i8 %1368, 0
  br i1 %1369, label %1370, label %1371, !prof !8

1370:                                             ; preds = %1365
  tail call void @llvm.trap() #13
  unreachable

1371:                                             ; preds = %1365
  %1372 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %1373 = bitcast %"class.std::__1::basic_string"* %1372 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1374 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1373, i64 0, i32 1, i32 0
  %1375 = load i8, i8* %1374, align 1
  %1376 = icmp slt i8 %1375, 0
  br i1 %1376, label %1377, label %1380

1377:                                             ; preds = %1371
  %1378 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1372, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1379 = load i8*, i8** %1378, align 8
  br label %1382

1380:                                             ; preds = %1371
  %1381 = bitcast %"class.std::__1::basic_string"* %1372 to i8*
  br label %1382

1382:                                             ; preds = %1377, %1380
  %1383 = phi i8* [ %1379, %1377 ], [ %1381, %1380 ]
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.12, i64 0, i64 0), i8* %1366, i8* %1383) #13
  br label %1386

1384:                                             ; preds = %8
  %1385 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1385, i8 0, i64 24, i1 false) #13
  br label %1386

1386:                                             ; preds = %1384, %1382, %1352, %1323, %1240, %1228, %871, %851, %832, %819, %807, %430, %52, %39, %26
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultE(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::SimpleFeature"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %class.GURL, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = bitcast %class.GURL* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %7) #13
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %5) #13
  call void @_ZNK10extensions13SimpleFeature22GetAvailabilityMessageENS_7Feature18AvailabilityResultENS_8Manifest4TypeERK4GURLNS1_7ContextEN12version_info7ChannelENS_5mojom18FeatureSessionTypeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.extensions::SimpleFeature"* %1, i32 %2, i32 0, %class.GURL* nonnull dereferenceable(120) %5, i32 0, i32 0, i32 1)
  %8 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* nonnull align 8 %6, i64 24, i1 false) #13
  br label %25

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %9, i8* %18, i64 %20) #13
  %21 = load i8, i8* %11, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %14, %16, %23
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultENS_8Manifest4TypeE(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::SimpleFeature"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %class.GURL, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = bitcast %class.GURL* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %8) #13
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %6) #13
  call void @_ZNK10extensions13SimpleFeature22GetAvailabilityMessageENS_7Feature18AvailabilityResultENS_8Manifest4TypeERK4GURLNS1_7ContextEN12version_info7ChannelENS_5mojom18FeatureSessionTypeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.extensions::SimpleFeature"* %1, i32 %2, i32 %3, %class.GURL* nonnull dereferenceable(120) %6, i32 0, i32 0, i32 1)
  %9 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %7, i64 24, i1 false) #13
  br label %26

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %10, i8* %19, i64 %21) #13
  %22 = load i8, i8* %12, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %17
  %25 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %15, %17, %24
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultERK4GURL(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::SimpleFeature"*, i32, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  call void @_ZNK10extensions13SimpleFeature22GetAvailabilityMessageENS_7Feature18AvailabilityResultENS_8Manifest4TypeERK4GURLNS1_7ContextEN12version_info7ChannelENS_5mojom18FeatureSessionTypeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.extensions::SimpleFeature"* %1, i32 %2, i32 0, %class.GURL* dereferenceable(120) %3, i32 0, i32 0, i32 1)
  %7 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* nonnull align 8 %6, i64 24, i1 false) #13
  br label %24

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %8, i8* %17, i64 %19) #13
  %20 = load i8, i8* %10, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %15
  %23 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %13, %15, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultENS1_7ContextE(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::SimpleFeature"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %class.GURL, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = bitcast %class.GURL* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %8) #13
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %6) #13
  call void @_ZNK10extensions13SimpleFeature22GetAvailabilityMessageENS_7Feature18AvailabilityResultENS_8Manifest4TypeERK4GURLNS1_7ContextEN12version_info7ChannelENS_5mojom18FeatureSessionTypeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.extensions::SimpleFeature"* %1, i32 %2, i32 0, %class.GURL* nonnull dereferenceable(120) %6, i32 %3, i32 0, i32 1)
  %9 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %7, i64 24, i1 false) #13
  br label %26

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %10, i8* %19, i64 %21) #13
  %22 = load i8, i8* %12, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %17
  %25 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %15, %17, %24
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultEN12version_info7ChannelE(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::SimpleFeature"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %class.GURL, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = bitcast %class.GURL* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %8) #13
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %6) #13
  call void @_ZNK10extensions13SimpleFeature22GetAvailabilityMessageENS_7Feature18AvailabilityResultENS_8Manifest4TypeERK4GURLNS1_7ContextEN12version_info7ChannelENS_5mojom18FeatureSessionTypeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.extensions::SimpleFeature"* %1, i32 %2, i32 0, %class.GURL* nonnull dereferenceable(120) %6, i32 0, i32 %3, i32 1)
  %9 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %7, i64 24, i1 false) #13
  br label %26

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %10, i8* %19, i64 %21) #13
  %22 = load i8, i8* %12, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %17
  %25 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %15, %17, %24
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultENS_5mojom18FeatureSessionTypeE(%"class.extensions::Feature::Availability"* noalias sret, %"class.extensions::SimpleFeature"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %class.GURL, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = bitcast %class.GURL* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %8) #13
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %6) #13
  call void @_ZNK10extensions13SimpleFeature22GetAvailabilityMessageENS_7Feature18AvailabilityResultENS_8Manifest4TypeERK4GURLNS1_7ContextEN12version_info7ChannelENS_5mojom18FeatureSessionTypeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.extensions::SimpleFeature"* %1, i32 %2, i32 0, %class.GURL* nonnull dereferenceable(120) %6, i32 0, i32 0, i32 %3)
  %9 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 0
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.extensions::Feature::Availability", %"class.extensions::Feature::Availability"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %7, i64 24, i1 false) #13
  br label %26

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %10, i8* %19, i64 %21) #13
  %22 = load i8, i8* %12, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %17
  %25 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %15, %17, %24
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13SimpleFeature10IsInternalEv(%"class.extensions::SimpleFeature"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 18
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13SimpleFeature15IsIdInBlocklistERKNS_17HashedExtensionIdE(%"class.extensions::SimpleFeature"* nocapture readonly, %"class.extensions::HashedExtensionId"* nocapture readonly dereferenceable(24)) unnamed_addr #6 align 2 {
  %3 = bitcast %"class.extensions::HashedExtensionId"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.extensions::HashedExtensionId", %"class.extensions::HashedExtensionId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 40
  br i1 %11, label %12, label %65

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = icmp eq %"class.std::__1::basic_string"* %14, %16
  br i1 %17, label %62, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.extensions::HashedExtensionId", %"class.extensions::HashedExtensionId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.extensions::HashedExtensionId"* %1 to i8*
  %22 = select i1 %6, i8* %20, i8* %21
  br label %23

23:                                               ; preds = %59, %18
  %24 = phi %"class.std::__1::basic_string"* [ %14, %18 ], [ %60, %59 ]
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %32, 40
  br i1 %33, label %34, label %59

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  br i1 %28, label %56, label %37

37:                                               ; preds = %34
  %38 = ptrtoint i8* %36 to i64
  %39 = trunc i64 %38 to i8
  %40 = load i8, i8* %22, align 1
  %41 = icmp eq i8 %40, %39
  br i1 %41, label %42, label %59

42:                                               ; preds = %37
  %43 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  br label %44

44:                                               ; preds = %42, %51
  %45 = phi i64 [ %48, %51 ], [ %31, %42 ]
  %46 = phi i8* [ %49, %51 ], [ %43, %42 ]
  %47 = phi i8* [ %52, %51 ], [ %22, %42 ]
  %48 = add i64 %45, -1
  %49 = getelementptr inbounds i8, i8* %46, i64 1
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = load i8, i8* %49, align 1
  %54 = load i8, i8* %52, align 1
  %55 = icmp eq i8 %53, %54
  br i1 %55, label %44, label %59

56:                                               ; preds = %34
  %57 = tail call i32 @bcmp(i8* %36, i8* %22, i64 40) #13
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %51, %56, %37, %23
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 1
  %61 = icmp eq %"class.std::__1::basic_string"* %60, %16
  br i1 %61, label %62, label %23

62:                                               ; preds = %59, %56, %44, %12
  %63 = phi %"class.std::__1::basic_string"* [ %14, %12 ], [ %24, %44 ], [ %16, %59 ], [ %24, %56 ]
  %64 = icmp ne %"class.std::__1::basic_string"* %63, %16
  br label %65

65:                                               ; preds = %2, %62
  %66 = phi i1 [ %64, %62 ], [ false, %2 ]
  ret i1 %66
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10extensions13SimpleFeature10IsIdInListERKNS_17HashedExtensionIdERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(%"class.extensions::HashedExtensionId"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %3 = bitcast %"class.extensions::HashedExtensionId"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.extensions::HashedExtensionId", %"class.extensions::HashedExtensionId"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 40
  br i1 %11, label %12, label %65

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = icmp eq %"class.std::__1::basic_string"* %14, %16
  br i1 %17, label %62, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.extensions::HashedExtensionId", %"class.extensions::HashedExtensionId"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.extensions::HashedExtensionId"* %0 to i8*
  %22 = select i1 %6, i8* %20, i8* %21
  br label %23

23:                                               ; preds = %59, %18
  %24 = phi %"class.std::__1::basic_string"* [ %14, %18 ], [ %60, %59 ]
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %32, 40
  br i1 %33, label %34, label %59

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  br i1 %28, label %56, label %37

37:                                               ; preds = %34
  %38 = ptrtoint i8* %36 to i64
  %39 = trunc i64 %38 to i8
  %40 = load i8, i8* %22, align 1
  %41 = icmp eq i8 %40, %39
  br i1 %41, label %42, label %59

42:                                               ; preds = %37
  %43 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  br label %44

44:                                               ; preds = %42, %51
  %45 = phi i64 [ %48, %51 ], [ %31, %42 ]
  %46 = phi i8* [ %49, %51 ], [ %43, %42 ]
  %47 = phi i8* [ %52, %51 ], [ %22, %42 ]
  %48 = add i64 %45, -1
  %49 = getelementptr inbounds i8, i8* %46, i64 1
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = load i8, i8* %49, align 1
  %54 = load i8, i8* %52, align 1
  %55 = icmp eq i8 %53, %54
  br i1 %55, label %44, label %59

56:                                               ; preds = %34
  %57 = tail call i32 @bcmp(i8* %36, i8* %22, i64 40) #13
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %51, %56, %37, %23
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 1
  %61 = icmp eq %"class.std::__1::basic_string"* %60, %16
  br i1 %61, label %62, label %23

62:                                               ; preds = %56, %59, %44, %12
  %63 = phi %"class.std::__1::basic_string"* [ %14, %12 ], [ %24, %44 ], [ %24, %56 ], [ %16, %59 ]
  %64 = icmp ne %"class.std::__1::basic_string"* %63, %16
  br label %65

65:                                               ; preds = %2, %62
  %66 = phi i1 [ %64, %62 ], [ false, %2 ]
  ret i1 %66
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13SimpleFeature15IsIdInAllowlistERKNS_17HashedExtensionIdE(%"class.extensions::SimpleFeature"* nocapture readonly, %"class.extensions::HashedExtensionId"* nocapture readonly dereferenceable(24)) unnamed_addr #6 align 2 {
  %3 = bitcast %"class.extensions::HashedExtensionId"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.extensions::HashedExtensionId", %"class.extensions::HashedExtensionId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 40
  br i1 %11, label %12, label %65

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 3, i32 0, i32 1
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = icmp eq %"class.std::__1::basic_string"* %14, %16
  br i1 %17, label %62, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.extensions::HashedExtensionId", %"class.extensions::HashedExtensionId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.extensions::HashedExtensionId"* %1 to i8*
  %22 = select i1 %6, i8* %20, i8* %21
  br label %23

23:                                               ; preds = %59, %18
  %24 = phi %"class.std::__1::basic_string"* [ %14, %18 ], [ %60, %59 ]
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %32, 40
  br i1 %33, label %34, label %59

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  br i1 %28, label %56, label %37

37:                                               ; preds = %34
  %38 = ptrtoint i8* %36 to i64
  %39 = trunc i64 %38 to i8
  %40 = load i8, i8* %22, align 1
  %41 = icmp eq i8 %40, %39
  br i1 %41, label %42, label %59

42:                                               ; preds = %37
  %43 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  br label %44

44:                                               ; preds = %42, %51
  %45 = phi i64 [ %48, %51 ], [ %31, %42 ]
  %46 = phi i8* [ %49, %51 ], [ %43, %42 ]
  %47 = phi i8* [ %52, %51 ], [ %22, %42 ]
  %48 = add i64 %45, -1
  %49 = getelementptr inbounds i8, i8* %46, i64 1
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = load i8, i8* %49, align 1
  %54 = load i8, i8* %52, align 1
  %55 = icmp eq i8 %53, %54
  br i1 %55, label %44, label %59

56:                                               ; preds = %34
  %57 = tail call i32 @bcmp(i8* %36, i8* %22, i64 40) #13
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %51, %56, %37, %23
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 1
  %61 = icmp eq %"class.std::__1::basic_string"* %60, %16
  br i1 %61, label %62, label %23

62:                                               ; preds = %59, %56, %44, %12
  %63 = phi %"class.std::__1::basic_string"* [ %14, %12 ], [ %24, %44 ], [ %16, %59 ], [ %24, %56 ]
  %64 = icmp ne %"class.std::__1::basic_string"* %63, %16
  br label %65

65:                                               ; preds = %2, %62
  %66 = phi i1 [ %64, %62 ], [ false, %2 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions13SimpleFeature11IsIdInArrayERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKPKcm(%"class.std::__1::basic_string"* dereferenceable(24), i8** readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = icmp eq i64 %12, 32
  br i1 %13, label %14, label %71

14:                                               ; preds = %3
  %15 = getelementptr inbounds i8*, i8** %1, i64 %2
  %16 = icmp eq i64 %2, 0
  br i1 %16, label %36, label %17

17:                                               ; preds = %14, %33
  %18 = phi i64 [ %35, %33 ], [ %10, %14 ]
  %19 = phi i8 [ %34, %33 ], [ %7, %14 ]
  %20 = phi i8** [ %31, %33 ], [ %1, %14 ]
  %21 = load i8*, i8** %20, align 8
  %22 = tail call i64 @strlen(i8* %21) #13
  %23 = icmp slt i8 %19, 0
  %24 = zext i8 %19 to i64
  %25 = select i1 %23, i64 %18, i64 %24
  %26 = icmp eq i64 %22, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %17
  %28 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* %21, i64 %22) #13
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %27, %17
  %31 = getelementptr inbounds i8*, i8** %20, i64 1
  %32 = icmp eq i8** %31, %15
  br i1 %32, label %39, label %33

33:                                               ; preds = %30
  %34 = load i8, i8* %6, align 1
  %35 = load i64, i64* %9, align 8
  br label %17

36:                                               ; preds = %27, %14
  %37 = phi i8** [ %1, %14 ], [ %20, %27 ]
  %38 = icmp eq i8** %37, %15
  br i1 %38, label %39, label %71

39:                                               ; preds = %30, %36
  %40 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13
  call void @_ZN8crx_file7id_util13HashedIdInHexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_string"* dereferenceable(24) %0) #13
  %41 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %16, label %61, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %45

45:                                               ; preds = %58, %42
  %46 = phi i8** [ %1, %42 ], [ %59, %58 ]
  %47 = load i8*, i8** %46, align 8
  %48 = call i64 @strlen(i8* %47) #13
  %49 = load i8, i8* %43, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i64, i64* %44, align 8
  %52 = zext i8 %49 to i64
  %53 = select i1 %50, i64 %51, i64 %52
  %54 = icmp eq i64 %48, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %45
  %56 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* %47, i64 %48) #13
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %55, %45
  %59 = getelementptr inbounds i8*, i8** %46, i64 1
  %60 = icmp eq i8** %59, %15
  br i1 %60, label %61, label %45

61:                                               ; preds = %58, %55, %39
  %62 = phi i8** [ %1, %39 ], [ %46, %55 ], [ %15, %58 ]
  %63 = icmp ne i8** %62, %15
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #14
  br label %70

70:                                               ; preds = %61, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13
  br label %71

71:                                               ; preds = %36, %70, %3
  %72 = phi i1 [ false, %3 ], [ %63, %70 ], [ true, %36 ]
  ret i1 %72
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10extensions13SimpleFeature18IsValidExtensionIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #5 align 2 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 32
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10extensions13SimpleFeature24IsValidHashedExtensionIdERKNS_17HashedExtensionIdE(%"class.extensions::HashedExtensionId"* nocapture readonly dereferenceable(24)) local_unnamed_addr #5 align 2 {
  %2 = bitcast %"class.extensions::HashedExtensionId"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.extensions::HashedExtensionId", %"class.extensions::HashedExtensionId"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 40
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13SimpleFeature23MatchesManifestLocationENS_5mojom16ManifestLocationE(%"class.extensions::SimpleFeature"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7, !prof !8

6:                                                ; preds = %2
  tail call void @llvm.trap() #13
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  switch i32 %9, label %22 [
    i32 0, label %10
    i32 1, label %12
    i32 2, label %14
    i32 3, label %18
  ]

10:                                               ; preds = %7
  %11 = icmp eq i32 %1, 5
  br label %22

12:                                               ; preds = %7
  %13 = icmp eq i32 %1, 10
  br label %22

14:                                               ; preds = %7
  %15 = icmp eq i32 %1, 9
  %16 = icmp eq i32 %1, 7
  %17 = or i1 %15, %16
  br label %22

18:                                               ; preds = %7
  %19 = icmp eq i32 %1, 4
  %20 = icmp eq i32 %1, 8
  %21 = or i1 %19, %20
  br label %22

22:                                               ; preds = %7, %18, %14, %12, %10
  %23 = phi i1 [ %21, %18 ], [ %17, %14 ], [ %13, %12 ], [ %11, %10 ], [ false, %7 ]
  ret i1 %23
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13SimpleFeature19MatchesSessionTypesENS_5mojom18FeatureSessionTypeE(%"class.extensions::SimpleFeature"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 6, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  br i1 %7, label %29, label %8

8:                                                ; preds = %2, %12
  %9 = phi i32* [ %13, %12 ], [ %4, %2 ]
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds i32, i32* %9, i64 1
  %14 = icmp eq i32* %13, %6
  br i1 %14, label %17, label %8

15:                                               ; preds = %8
  %16 = icmp eq i32* %9, %6
  br i1 %16, label %17, label %29

17:                                               ; preds = %12, %15
  %18 = icmp eq i32 %1, 4
  br i1 %18, label %19, label %29

19:                                               ; preds = %17, %23
  %20 = phi i32* [ %24, %23 ], [ %4, %17 ]
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds i32, i32* %20, i64 1
  %25 = icmp eq i32* %24, %6
  br i1 %25, label %26, label %19

26:                                               ; preds = %19, %23
  %27 = phi i32* [ %20, %19 ], [ %6, %23 ]
  %28 = icmp ne i32* %27, %6
  br label %29

29:                                               ; preds = %15, %17, %26, %2
  %30 = phi i1 [ true, %2 ], [ true, %15 ], [ false, %17 ], [ %28, %26 ]
  ret i1 %30
}

declare %"class.extensions::ExtensionAPI"* @_ZN10extensions12ExtensionAPI17GetSharedInstanceEv() local_unnamed_addr #2

declare %"class.extensions::Feature"* @_ZN10extensions12ExtensionAPI20GetFeatureDependencyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionAPI"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeature13set_blocklistESt16initializer_listIKPKcE(%"class.extensions::SimpleFeature"*, i8**, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 2
  %5 = getelementptr inbounds i8*, i8** %1, i64 %2
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPKPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueEvE4typeESF_SF_(%"class.std::__1::vector"* %4, i8** %1, i8** %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPKPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueEvE4typeESF_SF_(%"class.std::__1::vector"*, i8**, i8**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8** %2 to i64
  %5 = ptrtoint i8** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %121, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i8*, i8** %1, i64 %22
  %25 = select i1 %23, i8** %24, i8** %2
  %26 = icmp eq i8** %25, %1
  br i1 %26, label %62, label %27

27:                                               ; preds = %17, %58
  %28 = phi %"class.std::__1::basic_string"* [ %60, %58 ], [ %16, %17 ]
  %29 = phi i8** [ %59, %58 ], [ %1, %17 ]
  %30 = load i8*, i8** %29, align 8
  %31 = load i8, i8* %30, align 1
  %32 = tail call i1 @llvm.is.constant.i8(i8 %31) #13
  br i1 %32, label %33, label %56

33:                                               ; preds = %27
  %34 = tail call i64 @strlen(i8* %30) #13
  %35 = icmp ult i64 %34, 23
  br i1 %35, label %36, label %54

36:                                               ; preds = %33
  %37 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  br label %48

45:                                               ; preds = %36
  %46 = trunc i64 %34 to i8
  store i8 %46, i8* %38, align 1
  %47 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  br label %48

48:                                               ; preds = %45, %41
  %49 = phi i8* [ %44, %41 ], [ %47, %45 ]
  %50 = icmp eq i64 %34, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %30, i64 %34, i1 false) #13
  br label %52

52:                                               ; preds = %51, %48
  %53 = getelementptr inbounds i8, i8* %49, i64 %34
  store i8 0, i8* %53, align 1
  br label %58

54:                                               ; preds = %33
  %55 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %28, i8* %30, i64 %34) #13
  br label %58

56:                                               ; preds = %27
  %57 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %28, i8* %30) #13
  br label %58

58:                                               ; preds = %56, %54, %52
  %59 = getelementptr inbounds i8*, i8** %29, i64 1
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %61 = icmp eq i8** %59, %25
  br i1 %61, label %62, label %27

62:                                               ; preds = %58, %17
  %63 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %60, %58 ]
  br i1 %23, label %64, label %105

64:                                               ; preds = %62
  %65 = load i64, i64* %19, align 8
  %66 = icmp eq i8** %25, %2
  br i1 %66, label %103, label %67

67:                                               ; preds = %64
  %68 = inttoptr i64 %65 to %"class.std::__1::basic_string"*
  br label %69

69:                                               ; preds = %95, %67
  %70 = phi %"class.std::__1::basic_string"* [ %99, %95 ], [ %68, %67 ]
  %71 = phi i8** [ %98, %95 ], [ %24, %67 ]
  %72 = load i8*, i8** %71, align 8
  %73 = tail call i64 @strlen(i8* %72) #13
  %74 = icmp ugt i64 %73, -17
  br i1 %74, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.std::__1::basic_string"* %70 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %76) #15
  unreachable

77:                                               ; preds = %69
  %78 = icmp ult i64 %73, 23
  br i1 %78, label %87, label %79

79:                                               ; preds = %77
  %80 = add nuw i64 %73, 16
  %81 = and i64 %80, -16
  %82 = tail call i8* @_Znwm(i64 %81) #14
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %82, i8** %83, align 8
  %84 = or i64 %81, -9223372036854775808
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %73, i64* %86, align 8
  br label %93

87:                                               ; preds = %77
  %88 = trunc i64 %73 to i8
  %89 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  store i8 %88, i8* %90, align 1
  %91 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  %92 = icmp eq i64 %73, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %87, %79
  %94 = phi i8* [ %82, %79 ], [ %91, %87 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %94, i8* align 1 %72, i64 %73, i1 false) #13
  br label %95

95:                                               ; preds = %93, %87
  %96 = phi i8* [ %91, %87 ], [ %94, %93 ]
  %97 = getelementptr inbounds i8, i8* %96, i64 %73
  store i8 0, i8* %97, align 1
  %98 = getelementptr inbounds i8*, i8** %71, i64 1
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 1
  %100 = icmp eq i8** %98, %2
  br i1 %100, label %101, label %69

101:                                              ; preds = %95
  %102 = ptrtoint %"class.std::__1::basic_string"* %99 to i64
  br label %103

103:                                              ; preds = %64, %101
  %104 = phi i64 [ %65, %64 ], [ %102, %101 ]
  store i64 %104, i64* %19, align 8
  br label %206

105:                                              ; preds = %62
  %106 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %107 = icmp eq %"class.std::__1::basic_string"* %106, %63
  br i1 %107, label %120, label %108

108:                                              ; preds = %105, %118
  %109 = phi %"class.std::__1::basic_string"* [ %110, %118 ], [ %106, %105 ]
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 -1
  %111 = bitcast %"class.std::__1::basic_string"* %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  tail call void @_ZdlPv(i8* %117) #14
  br label %118

118:                                              ; preds = %115, %108
  %119 = icmp eq %"class.std::__1::basic_string"* %110, %63
  br i1 %119, label %120, label %108

120:                                              ; preds = %118, %105
  store %"class.std::__1::basic_string"* %63, %"class.std::__1::basic_string"** %18, align 8
  br label %206

121:                                              ; preds = %3
  %122 = icmp eq i64 %12, 0
  br i1 %122, label %146, label %123

123:                                              ; preds = %121
  %124 = inttoptr i64 %12 to i8*
  %125 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %126 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %125, align 8
  %127 = icmp eq %"class.std::__1::basic_string"* %126, %16
  br i1 %127, label %143, label %128

128:                                              ; preds = %123, %138
  %129 = phi %"class.std::__1::basic_string"* [ %130, %138 ], [ %126, %123 ]
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %129, i64 -1
  %131 = bitcast %"class.std::__1::basic_string"* %130 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  tail call void @_ZdlPv(i8* %137) #14
  br label %138

138:                                              ; preds = %135, %128
  %139 = icmp eq %"class.std::__1::basic_string"* %130, %16
  br i1 %139, label %140, label %128

140:                                              ; preds = %138
  %141 = bitcast %"class.std::__1::vector"* %0 to i8**
  %142 = load i8*, i8** %141, align 8
  br label %143

143:                                              ; preds = %140, %123
  %144 = phi i8* [ %142, %140 ], [ %124, %123 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %125, align 8
  tail call void @_ZdlPv(i8* %144) #14
  %145 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 24, i1 false) #13
  br label %146

146:                                              ; preds = %121, %143
  %147 = phi i64 [ %10, %121 ], [ 0, %143 ]
  %148 = icmp ugt i64 %7, 768614336404564650
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  %150 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %150) #15
  unreachable

151:                                              ; preds = %146
  %152 = sdiv exact i64 %147, 24
  %153 = icmp ult i64 %152, 384307168202282325
  br i1 %153, label %154, label %158

154:                                              ; preds = %151
  %155 = shl nsw i64 %152, 1
  %156 = icmp ult i64 %155, %7
  %157 = select i1 %156, i64 %7, i64 %155
  br label %158

158:                                              ; preds = %154, %151
  %159 = phi i64 [ %157, %154 ], [ 768614336404564650, %151 ]
  %160 = mul i64 %159, 24
  %161 = tail call i8* @_Znwm(i64 %160) #14
  %162 = bitcast i8* %161 to %"class.std::__1::basic_string"*
  %163 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %164 = bitcast %"class.std::__1::basic_string"** %163 to i8**
  store i8* %161, i8** %164, align 8
  %165 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %161, i8** %165, align 8
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %162, i64 %159
  store %"class.std::__1::basic_string"* %166, %"class.std::__1::basic_string"** %8, align 8
  %167 = bitcast %"class.std::__1::basic_string"** %163 to i64*
  %168 = ptrtoint i8* %161 to i64
  %169 = icmp eq i8** %1, %2
  br i1 %169, label %204, label %170

170:                                              ; preds = %158, %196
  %171 = phi %"class.std::__1::basic_string"* [ %200, %196 ], [ %162, %158 ]
  %172 = phi i8** [ %199, %196 ], [ %1, %158 ]
  %173 = load i8*, i8** %172, align 8
  %174 = tail call i64 @strlen(i8* %173) #13
  %175 = icmp ugt i64 %174, -17
  br i1 %175, label %176, label %178

176:                                              ; preds = %170
  %177 = bitcast %"class.std::__1::basic_string"* %171 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %177) #15
  unreachable

178:                                              ; preds = %170
  %179 = icmp ult i64 %174, 23
  br i1 %179, label %188, label %180

180:                                              ; preds = %178
  %181 = add nuw i64 %174, 16
  %182 = and i64 %181, -16
  %183 = tail call i8* @_Znwm(i64 %182) #14
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %183, i8** %184, align 8
  %185 = or i64 %182, -9223372036854775808
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %174, i64* %187, align 8
  br label %194

188:                                              ; preds = %178
  %189 = trunc i64 %174 to i8
  %190 = bitcast %"class.std::__1::basic_string"* %171 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %190, i64 0, i32 1, i32 0
  store i8 %189, i8* %191, align 1
  %192 = bitcast %"class.std::__1::basic_string"* %171 to i8*
  %193 = icmp eq i64 %174, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %188, %180
  %195 = phi i8* [ %183, %180 ], [ %192, %188 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %195, i8* align 1 %173, i64 %174, i1 false) #13
  br label %196

196:                                              ; preds = %194, %188
  %197 = phi i8* [ %192, %188 ], [ %195, %194 ]
  %198 = getelementptr inbounds i8, i8* %197, i64 %174
  store i8 0, i8* %198, align 1
  %199 = getelementptr inbounds i8*, i8** %172, i64 1
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %171, i64 1
  %201 = icmp eq i8** %199, %2
  br i1 %201, label %202, label %170

202:                                              ; preds = %196
  %203 = ptrtoint %"class.std::__1::basic_string"* %200 to i64
  br label %204

204:                                              ; preds = %158, %202
  %205 = phi i64 [ %168, %158 ], [ %203, %202 ]
  store i64 %205, i64* %167, align 8
  br label %206

206:                                              ; preds = %103, %120, %204
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeature23set_command_line_switchEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.extensions::SimpleFeature"* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = icmp ugt i64 %2, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #15
  unreachable

9:                                                ; preds = %3
  %10 = icmp ult i64 %2, 23
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %2, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #14
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8, !alias.scope !106
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8, !alias.scope !106
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %18, align 8, !alias.scope !106
  br label %24

19:                                               ; preds = %9
  %20 = trunc i64 %2 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 %20, i8* %22, align 1, !alias.scope !106
  %23 = icmp eq i64 %2, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %19, %11
  %25 = phi i8* [ %14, %11 ], [ %5, %19 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %25, i8* align 1 %1, i64 %2, i1 false) #13
  br label %26

26:                                               ; preds = %19, %24
  %27 = phi i8* [ %5, %19 ], [ %25, %24 ]
  %28 = getelementptr inbounds i8, i8* %27, i64 %2
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %31, label %45, label %33

33:                                               ; preds = %26
  %34 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  tail call void @_ZdlPv(i8* %40) #14
  br label %41

41:                                               ; preds = %38, %33
  %42 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %5, i64 24, i1 false) #13
  %43 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  store i8 0, i8* %44, align 1
  store i8 0, i8* %5, align 8
  br label %47

45:                                               ; preds = %26
  %46 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* nonnull align 8 %5, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %29, align 8
  br label %47

47:                                               ; preds = %45, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeature12set_contextsESt16initializer_listINS_7Feature7ContextEE(%"class.extensions::SimpleFeature"*, i32*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %6, label %10, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds i32, i32* %1, i64 %2
  tail call void @_ZNSt3__16vectorIN10extensions7Feature7ContextENS_9allocatorIS3_EEE6assignIPKS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.21"* %7, i32* %1, i32* %9) #13
  br label %35

10:                                               ; preds = %3
  %11 = bitcast i32* %1 to i8*
  %12 = bitcast %"class.std::__1::vector.21"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #13
  %13 = icmp eq i64 %2, 0
  br i1 %13, label %34, label %14

14:                                               ; preds = %10
  %15 = icmp ugt i64 %2, 4611686018427387903
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = bitcast %"class.std::__1::vector.21"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %17) #15
  unreachable

18:                                               ; preds = %14
  %19 = shl i64 %2, 2
  %20 = tail call i8* @_Znwm(i64 %19) #14
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %23 = bitcast i32** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = bitcast %"class.std::__1::vector.21"* %7 to i8**
  store i8* %20, i8** %24, align 8
  %25 = getelementptr inbounds i32, i32* %21, i64 %2
  %26 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %25, i32** %26, align 8
  %27 = bitcast i32** %22 to i64*
  %28 = ptrtoint i8* %20 to i64
  %29 = icmp sgt i64 %19, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %18
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 %11, i64 %19, i1 false) #13
  %31 = ptrtoint i32* %25 to i64
  br label %32

32:                                               ; preds = %30, %18
  %33 = phi i64 [ %31, %30 ], [ %28, %18 ]
  store i64 %33, i64* %27, align 8
  br label %34

34:                                               ; preds = %32, %10
  store i8 1, i8* %4, align 8
  br label %35

35:                                               ; preds = %8, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeature16set_dependenciesESt16initializer_listIKPKcE(%"class.extensions::SimpleFeature"*, i8**, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 4
  %5 = getelementptr inbounds i8*, i8** %1, i64 %2
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPKPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueEvE4typeESF_SF_(%"class.std::__1::vector"* %4, i8** %1, i8** %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeature19set_extension_typesESt16initializer_listINS_8Manifest4TypeEE(%"class.extensions::SimpleFeature"*, i32*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 5
  %5 = getelementptr inbounds i32, i32* %1, i64 %2
  tail call void @_ZNSt3__16vectorIN10extensions8Manifest4TypeENS_9allocatorIS3_EEE6assignIPKS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.6"* %4, i32* %1, i32* %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeature16set_feature_flagEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.extensions::SimpleFeature"* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = icmp ugt i64 %2, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #15
  unreachable

9:                                                ; preds = %3
  %10 = icmp ult i64 %2, 23
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %2, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #14
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8, !alias.scope !109
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8, !alias.scope !109
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %18, align 8, !alias.scope !109
  br label %24

19:                                               ; preds = %9
  %20 = trunc i64 %2 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 %20, i8* %22, align 1, !alias.scope !109
  %23 = icmp eq i64 %2, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %19, %11
  %25 = phi i8* [ %14, %11 ], [ %5, %19 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %25, i8* align 1 %1, i64 %2, i1 false) #13
  br label %26

26:                                               ; preds = %19, %24
  %27 = phi i8* [ %5, %19 ], [ %25, %24 ]
  %28 = getelementptr inbounds i8, i8* %27, i64 %2
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %31, label %45, label %33

33:                                               ; preds = %26
  %34 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  tail call void @_ZdlPv(i8* %40) #14
  br label %41

41:                                               ; preds = %38, %33
  %42 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %5, i64 24, i1 false) #13
  %43 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  store i8 0, i8* %44, align 1
  store i8 0, i8* %5, align 8
  br label %47

45:                                               ; preds = %26
  %46 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* nonnull align 8 %5, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %29, align 8
  br label %47

47:                                               ; preds = %45, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeature17set_session_typesESt16initializer_listINS_5mojom18FeatureSessionTypeEE(%"class.extensions::SimpleFeature"*, i32*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 6
  %5 = getelementptr inbounds i32, i32* %1, i64 %2
  tail call void @_ZNSt3__16vectorIN10extensions5mojom18FeatureSessionTypeENS_9allocatorIS3_EEE6assignIPKS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.13"* %4, i32* %1, i32* %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeature11set_matchesESt16initializer_listIKPKcE(%"class.extensions::SimpleFeature"*, i8**, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %class.URLPattern, align 8
  %6 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 9
  tail call void @_ZN10extensions13URLPatternSet13ClearPatternsEv(%"class.extensions::URLPatternSet"* %6) #13
  %7 = getelementptr inbounds i8*, i8** %1, i64 %2
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %class.URLPattern* %5 to i8*
  %11 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %13

12:                                               ; preds = %21, %3
  ret void

13:                                               ; preds = %9, %21
  %14 = phi i8** [ %1, %9 ], [ %24, %21 ]
  %15 = load i8*, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #13
  %16 = icmp eq i8* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = call i64 @strlen(i8* nonnull %15) #13
  br label %21

19:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.40, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)) #13
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  br label %21

21:                                               ; preds = %17, %19
  %22 = phi i64 [ 0, %19 ], [ %18, %17 ]
  call void @_ZN10URLPatternC1EiN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.URLPattern* nonnull %5, i32 -1, i8* %15, i64 %22) #13
  %23 = call zeroext i1 @_ZN10extensions13URLPatternSet10AddPatternERK10URLPattern(%"class.extensions::URLPatternSet"* %6, %class.URLPattern* nonnull dereferenceable(160) %5) #13
  call void @_ZN10URLPatternD1Ev(%class.URLPattern* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %10) #13
  %24 = getelementptr inbounds i8*, i8** %14, i64 1
  %25 = icmp eq i8** %24, %7
  br i1 %25, label %12, label %13
}

declare void @_ZN10extensions13URLPatternSet13ClearPatternsEv(%"class.extensions::URLPatternSet"*) local_unnamed_addr #2

declare zeroext i1 @_ZN10extensions13URLPatternSet10AddPatternERK10URLPattern(%"class.extensions::URLPatternSet"*, %class.URLPattern* dereferenceable(160)) local_unnamed_addr #2

declare void @_ZN10URLPatternC1EiN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.URLPattern*, i32, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10URLPatternD1Ev(%class.URLPattern*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeature13set_platformsESt16initializer_listINS_7Feature8PlatformEE(%"class.extensions::SimpleFeature"*, i32*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 8
  %5 = getelementptr inbounds i32, i32* %1, i64 %2
  tail call void @_ZNSt3__16vectorIN10extensions7Feature8PlatformENS_9allocatorIS3_EEE6assignIPKS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.28"* %4, i32* %1, i32* %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13SimpleFeature13set_allowlistESt16initializer_listIKPKcE(%"class.extensions::SimpleFeature"*, i8**, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.extensions::SimpleFeature", %"class.extensions::SimpleFeature"* %0, i64 0, i32 3
  %5 = getelementptr inbounds i8*, i8** %1, i64 %2
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPKPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueEvE4typeESF_SF_(%"class.std::__1::vector"* %4, i8** %1, i8** %5)
  ret void
}

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN10extensions20IsFeatureFlagEnabledERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK10extensions13URLPatternSet10MatchesURLERK4GURL(%"class.extensions::URLPatternSet"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZN10extensions9Extension14GetResourceURLERK4GURLRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%class.GURL* sret, %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10extensions9ExtensionD1Ev(%"class.extensions::Extension"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityERKNS3_17HashedExtensionIdENS3_8Manifest4TypeENS3_5mojom16ManifestLocationEiNS4_8PlatformEPKS4_EJS6_SA_SC_iSD_EEEFS5_SF_EE3RunEPNS0_13BindStateBaseESF_(%"class.extensions::Feature::Availability"* noalias sret, %"class.base::internal::BindStateBase"*, %"class.extensions::Feature"*) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.extensions::Feature::Availability"*, %"class.extensions::HashedExtensionId"*, i32, i32, i32, i32, %"class.extensions::Feature"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.std::__1::tuple"*
  %8 = bitcast void ()** %6 to %"class.extensions::HashedExtensionId"*
  %9 = getelementptr inbounds void ()*, void ()** %6, i64 3
  %10 = bitcast void ()** %9 to i32*
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 2, i32 0
  %12 = getelementptr inbounds void ()*, void ()** %6, i64 4
  %13 = bitcast void ()** %12 to i32*
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 4, i32 0
  %15 = load void (%"class.extensions::Feature::Availability"*, %"class.extensions::HashedExtensionId"*, i32, i32, i32, i32, %"class.extensions::Feature"*)*, void (%"class.extensions::Feature::Availability"*, %"class.extensions::HashedExtensionId"*, i32, i32, i32, i32, %"class.extensions::Feature"*)** %5, align 8, !noalias !112
  %16 = load i32, i32* %10, align 4, !noalias !112
  %17 = load i32, i32* %11, align 4, !noalias !112
  %18 = load i32, i32* %13, align 4, !noalias !112
  %19 = load i32, i32* %14, align 4, !noalias !112
  tail call void %15(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::HashedExtensionId"* dereferenceable(24) %8, i32 %16, i32 %17, i32 %18, i32 %19, %"class.extensions::Feature"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFN10extensions7Feature12AvailabilityERKNS2_17HashedExtensionIdENS2_8Manifest4TypeENS2_5mojom16ManifestLocationEiNS3_8PlatformEPKS3_EJS5_S9_SB_iSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast void ()** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %3, %9
  %13 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %12, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

declare void @_ZN10extensions17HashedExtensionIdC1ERKS0_(%"class.extensions::HashedExtensionId"*, %"class.extensions::HashedExtensionId"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityEPKNS3_9ExtensionENS4_7ContextERK4GURLNS4_8PlatformEPKS4_EJNS0_18RetainedRefWrapperIS7_EES9_SA_SD_EEEFS5_SF_EE3RunEPNS0_13BindStateBaseESF_(%"class.extensions::Feature::Availability"* noalias sret, %"class.base::internal::BindStateBase"*, %"class.extensions::Feature"*) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.extensions::Feature::Availability"*, %"class.extensions::Extension"*, i32, %class.GURL*, i32, %"class.extensions::Feature"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.extensions::Extension"**
  %8 = load %"class.extensions::Extension"*, %"class.extensions::Extension"** %7, align 8, !noalias !119
  %9 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %10 = bitcast void ()** %9 to i32*
  %11 = getelementptr inbounds void ()*, void ()** %6, i64 2
  %12 = bitcast void ()** %11 to %class.GURL*
  %13 = getelementptr inbounds void ()*, void ()** %6, i64 17
  %14 = bitcast void ()** %13 to i32*
  %15 = load void (%"class.extensions::Feature::Availability"*, %"class.extensions::Extension"*, i32, %class.GURL*, i32, %"class.extensions::Feature"*)*, void (%"class.extensions::Feature::Availability"*, %"class.extensions::Extension"*, i32, %class.GURL*, i32, %"class.extensions::Feature"*)** %5, align 8, !noalias !122
  %16 = load i32, i32* %10, align 4, !noalias !122
  %17 = load i32, i32* %14, align 4, !noalias !122
  tail call void %15(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::Extension"* %8, i32 %16, %class.GURL* dereferenceable(120) %12, i32 %17, %"class.extensions::Feature"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFN10extensions7Feature12AvailabilityEPKNS2_9ExtensionENS3_7ContextERK4GURLNS3_8PlatformEPKS3_EJNS0_18RetainedRefWrapperIS6_EES8_S9_SC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %class.GURL*
  tail call void @_ZN4GURLD1Ev(%class.GURL* %5) #13
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.extensions::Extension"**
  %8 = load %"class.extensions::Extension"*, %"class.extensions::Extension"** %7, align 8
  %9 = icmp eq %"class.extensions::Extension"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  tail call void @_ZN10extensions9ExtensionD1Ev(%"class.extensions::Extension"* nonnull %8) #13
  %15 = bitcast %"class.extensions::Extension"* %8 to i8*
  tail call void @_ZdlPv(i8* %15) #14
  br label %16

16:                                               ; preds = %3, %10, %14
  %17 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %16, %1
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityEPKS4_EJEEES8_E3RunEPNS0_13BindStateBaseES7_(%"class.extensions::Feature::Availability"* noalias sret, %"class.base::internal::BindStateBase"*, %"class.extensions::Feature"*) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*)**
  %6 = load void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*)*, void (%"class.extensions::Feature::Availability"*, %"class.extensions::Feature"*)** %5, align 8, !noalias !127
  tail call void %6(%"class.extensions::Feature::Availability"* sret %0, %"class.extensions::Feature"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFN10extensions7Feature12AvailabilityEPKS3_EJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #11

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10extensions7Feature7ContextENS_9allocatorIS3_EEE6assignIPKS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.21"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.21"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.21"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.21"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.21"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #15
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.21"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10extensions8Manifest4TypeENS_9allocatorIS3_EEE6assignIPKS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.6"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #15
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.6"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10extensions5mojom18FeatureSessionTypeENS_9allocatorIS3_EEE6assignIPKS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.13"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.13"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.13"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.13"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.13"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #15
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.13"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10extensions7Feature8PlatformENS_9allocatorIS3_EEE6assignIPKS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.28"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.28"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.28"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.28"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.28"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #15
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.28"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind readnone }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFN10extensions7Feature12AvailabilityERKNS3_17HashedExtensionIdENS3_8Manifest4TypeENS3_5mojom16ManifestLocationEiNS4_8PlatformEPKS4_EJS8_RSA_RSC_RiRSD_EEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFN10extensions7Feature12AvailabilityERKNS3_17HashedExtensionIdENS3_8Manifest4TypeENS3_5mojom16ManifestLocationEiNS4_8PlatformEPKS4_EJS8_RSA_RSC_RiRSD_EEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIPFN10extensions7Feature12AvailabilityERKNS1_17HashedExtensionIdENS1_8Manifest4TypeENS1_5mojom16ManifestLocationEiNS2_8PlatformEPKS2_EJS6_RS8_RSA_RiRSB_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIPFN10extensions7Feature12AvailabilityERKNS1_17HashedExtensionIdENS1_8Manifest4TypeENS1_5mojom16ManifestLocationEiNS2_8PlatformEPKS2_EJS6_RS8_RSA_RiRSB_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNKR4base17RepeatingCallbackIFN10extensions7Feature12AvailabilityEPKS2_EE3RunES5_: argument 0"}
!17 = distinct !{!17, !"_ZNKR4base17RepeatingCallbackIFN10extensions7Feature12AvailabilityEPKS2_EE3RunES5_"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFN10extensions7Feature12AvailabilityEPKNS3_9ExtensionENS4_7ContextERK4GURLNS4_8PlatformEPKS4_EJNS0_18RetainedRefWrapperIS7_EERS9_SC_RSD_EEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFN10extensions7Feature12AvailabilityEPKNS3_9ExtensionENS4_7ContextERK4GURLNS4_8PlatformEPKS4_EJNS0_18RetainedRefWrapperIS7_EERS9_SC_RSD_EEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base13BindRepeatingIPFN10extensions7Feature12AvailabilityEPKNS1_9ExtensionENS2_7ContextERK4GURLNS2_8PlatformEPKS2_EJNS_8internal18RetainedRefWrapperIS5_EERS7_SA_RSB_EEENS_17RepeatingCallbackINSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!22 = distinct !{!22, !"_ZN4base13BindRepeatingIPFN10extensions7Feature12AvailabilityEPKNS1_9ExtensionENS2_7ContextERK4GURLNS2_8PlatformEPKS2_EJNS_8internal18RetainedRefWrapperIS5_EERS7_SA_RSB_EEENS_17RepeatingCallbackINSG_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultERK4GURL: argument 0"}
!25 = distinct !{!25, !"_ZNK10extensions13SimpleFeature18CreateAvailabilityENS_7Feature18AvailabilityResultERK4GURL"}
!26 = !{!24, !27}
!27 = distinct !{!27, !28, !"_ZNK10extensions13SimpleFeature22GetAvailabilityMessageENS_7Feature18AvailabilityResultENS_8Manifest4TypeERK4GURLNS1_7ContextEN12version_info7ChannelENS_5mojom18FeatureSessionTypeE: argument 0"}
!28 = distinct !{!28, !"_ZNK10extensions13SimpleFeature22GetAvailabilityMessageENS_7Feature18AvailabilityResultENS_8Manifest4TypeERK4GURLNS1_7ContextEN12version_info7ChannelENS_5mojom18FeatureSessionTypeE"}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFN10extensions7Feature12AvailabilityEPKS4_EJEEEDcOT0_DpOT1_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFN10extensions7Feature12AvailabilityEPKS4_EJEEEDcOT0_DpOT1_"}
!32 = distinct !{!32, !33, !"_ZN4base13BindRepeatingIPFN10extensions7Feature12AvailabilityEPKS2_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!33 = distinct !{!33, !"_ZN4base13BindRepeatingIPFN10extensions7Feature12AvailabilityEPKS2_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!34 = distinct !{!34, !35}
!35 = !{!"llvm.loop.unroll.disable"}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !42}
!42 = !{!"llvm.loop.isvectorized", i32 1}
!43 = distinct !{!43, !35}
!44 = distinct !{!44, !42}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN10extensions12_GLOBAL__N_116ListDisplayNamesINS_8Manifest4TypeEEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKNS4_6vectorIT_NS8_ISC_EEEE: argument 0"}
!47 = distinct !{!47, !"_ZN10extensions12_GLOBAL__N_116ListDisplayNamesINS_8Manifest4TypeEEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKNS4_6vectorIT_NS8_ISC_EEEE"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameENS_8Manifest4TypeE: argument 0"}
!50 = distinct !{!50, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameENS_8Manifest4TypeE"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameENS_8Manifest4TypeE: argument 0"}
!56 = distinct !{!56, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameENS_8Manifest4TypeE"}
!57 = distinct !{!57, !35}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !42}
!64 = distinct !{!64, !35}
!65 = distinct !{!65, !42}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN10extensions12_GLOBAL__N_116ListDisplayNamesINS_7Feature7ContextEEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKNS4_6vectorIT_NS8_ISC_EEEE: argument 0"}
!68 = distinct !{!68, !"_ZN10extensions12_GLOBAL__N_116ListDisplayNamesINS_7Feature7ContextEEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKNS4_6vectorIT_NS8_ISC_EEEE"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameENS_7Feature7ContextE: argument 0"}
!71 = distinct !{!71, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameENS_7Feature7ContextE"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!74 = distinct !{!74, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameENS_7Feature7ContextE: argument 0"}
!77 = distinct !{!77, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameENS_7Feature7ContextE"}
!78 = distinct !{!78, !35}
!79 = !{!80}
!80 = distinct !{!80, !81}
!81 = distinct !{!81, !"LVerDomain"}
!82 = !{!83}
!83 = distinct !{!83, !81}
!84 = distinct !{!84, !42}
!85 = distinct !{!85, !35}
!86 = distinct !{!86, !42}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZN10extensions12_GLOBAL__N_116ListDisplayNamesINS_5mojom18FeatureSessionTypeEEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKNS4_6vectorIT_NS8_ISC_EEEE: argument 0"}
!89 = distinct !{!89, !"_ZN10extensions12_GLOBAL__N_116ListDisplayNamesINS_5mojom18FeatureSessionTypeEEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKNS4_6vectorIT_NS8_ISC_EEEE"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameENS_5mojom18FeatureSessionTypeE: argument 0"}
!92 = distinct !{!92, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameENS_5mojom18FeatureSessionTypeE"}
!93 = !{!91, !88}
!94 = !{!95}
!95 = distinct !{!95, !96, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!96 = distinct !{!96, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameENS_5mojom18FeatureSessionTypeE: argument 0"}
!99 = distinct !{!99, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameENS_5mojom18FeatureSessionTypeE"}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameEN12version_info7ChannelE: argument 0"}
!102 = distinct !{!102, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameEN12version_info7ChannelE"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameEN12version_info7ChannelE: argument 0"}
!105 = distinct !{!105, !"_ZN10extensions12_GLOBAL__N_114GetDisplayNameEN12version_info7ChannelE"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!108 = distinct !{!108, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!111 = distinct !{!111, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!112 = !{!113, !115, !117}
!113 = distinct !{!113, !114, !"_ZN4base8internal13FunctorTraitsIPFN10extensions7Feature12AvailabilityERKNS2_17HashedExtensionIdENS2_8Manifest4TypeENS2_5mojom16ManifestLocationEiNS3_8PlatformEPKS3_EvE6InvokeIRKSG_JS7_RKS9_RKSB_RKiRKSC_SE_EEES4_OT_DpOT0_: argument 0"}
!114 = distinct !{!114, !"_ZN4base8internal13FunctorTraitsIPFN10extensions7Feature12AvailabilityERKNS2_17HashedExtensionIdENS2_8Manifest4TypeENS2_5mojom16ManifestLocationEiNS3_8PlatformEPKS3_EvE6InvokeIRKSG_JS7_RKS9_RKSB_RKiRKSC_SE_EEES4_OT_DpOT0_"}
!115 = distinct !{!115, !116, !"_ZN4base8internal12InvokeHelperILb0EN10extensions7Feature12AvailabilityEE8MakeItSoIRKPFS4_RKNS2_17HashedExtensionIdENS2_8Manifest4TypeENS2_5mojom16ManifestLocationEiNS3_8PlatformEPKS3_EJS9_RKSB_RKSD_RKiRKSE_SG_EEES4_OT_DpOT0_: argument 0"}
!116 = distinct !{!116, !"_ZN4base8internal12InvokeHelperILb0EN10extensions7Feature12AvailabilityEE8MakeItSoIRKPFS4_RKNS2_17HashedExtensionIdENS2_8Manifest4TypeENS2_5mojom16ManifestLocationEiNS3_8PlatformEPKS3_EJS9_RKSB_RKSD_RKiRKSE_SG_EEES4_OT_DpOT0_"}
!117 = distinct !{!117, !118, !"_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityERKNS3_17HashedExtensionIdENS3_8Manifest4TypeENS3_5mojom16ManifestLocationEiNS4_8PlatformEPKS4_EJS6_SA_SC_iSD_EEEFS5_SF_EE7RunImplIRKSH_RKNSt3__15tupleIJS6_SA_SC_iSD_EEEJLm0ELm1ELm2ELm3ELm4EEEES5_OT_OT0_NSO_16integer_sequenceImJXspT1_EEEEOSF_: argument 0"}
!118 = distinct !{!118, !"_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityERKNS3_17HashedExtensionIdENS3_8Manifest4TypeENS3_5mojom16ManifestLocationEiNS4_8PlatformEPKS4_EJS6_SA_SC_iSD_EEEFS5_SF_EE7RunImplIRKSH_RKNSt3__15tupleIJS6_SA_SC_iSD_EEEJLm0ELm1ELm2ELm3ELm4EEEES5_OT_OT0_NSO_16integer_sequenceImJXspT1_EEEEOSF_"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityEPKNS3_9ExtensionENS4_7ContextERK4GURLNS4_8PlatformEPKS4_EJNS0_18RetainedRefWrapperIS7_EES9_SA_SD_EEEFS5_SF_EE7RunImplIRKSH_RKNSt3__15tupleIJSJ_S9_SA_SD_EEEJLm0ELm1ELm2ELm3EEEES5_OT_OT0_NSQ_16integer_sequenceImJXspT1_EEEEOSF_: argument 0"}
!121 = distinct !{!121, !"_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityEPKNS3_9ExtensionENS4_7ContextERK4GURLNS4_8PlatformEPKS4_EJNS0_18RetainedRefWrapperIS7_EES9_SA_SD_EEEFS5_SF_EE7RunImplIRKSH_RKNSt3__15tupleIJSJ_S9_SA_SD_EEEJLm0ELm1ELm2ELm3EEEES5_OT_OT0_NSQ_16integer_sequenceImJXspT1_EEEEOSF_"}
!122 = !{!123, !125, !120}
!123 = distinct !{!123, !124, !"_ZN4base8internal13FunctorTraitsIPFN10extensions7Feature12AvailabilityEPKNS2_9ExtensionENS3_7ContextERK4GURLNS3_8PlatformEPKS3_EvE6InvokeIRKSG_JS7_RKS8_SB_RKSC_SE_EEES4_OT_DpOT0_: argument 0"}
!124 = distinct !{!124, !"_ZN4base8internal13FunctorTraitsIPFN10extensions7Feature12AvailabilityEPKNS2_9ExtensionENS3_7ContextERK4GURLNS3_8PlatformEPKS3_EvE6InvokeIRKSG_JS7_RKS8_SB_RKSC_SE_EEES4_OT_DpOT0_"}
!125 = distinct !{!125, !126, !"_ZN4base8internal12InvokeHelperILb0EN10extensions7Feature12AvailabilityEE8MakeItSoIRKPFS4_PKNS2_9ExtensionENS3_7ContextERK4GURLNS3_8PlatformEPKS3_EJS9_RKSA_SD_RKSE_SG_EEES4_OT_DpOT0_: argument 0"}
!126 = distinct !{!126, !"_ZN4base8internal12InvokeHelperILb0EN10extensions7Feature12AvailabilityEE8MakeItSoIRKPFS4_PKNS2_9ExtensionENS3_7ContextERK4GURLNS3_8PlatformEPKS3_EJS9_RKSA_SD_RKSE_SG_EEES4_OT_DpOT0_"}
!127 = !{!128, !130, !132}
!128 = distinct !{!128, !129, !"_ZN4base8internal13FunctorTraitsIPFN10extensions7Feature12AvailabilityEPKS3_EvE6InvokeIRKS8_JS6_EEES4_OT_DpOT0_: argument 0"}
!129 = distinct !{!129, !"_ZN4base8internal13FunctorTraitsIPFN10extensions7Feature12AvailabilityEPKS3_EvE6InvokeIRKS8_JS6_EEES4_OT_DpOT0_"}
!130 = distinct !{!130, !131, !"_ZN4base8internal12InvokeHelperILb0EN10extensions7Feature12AvailabilityEE8MakeItSoIRKPFS4_PKS3_EJS8_EEES4_OT_DpOT0_: argument 0"}
!131 = distinct !{!131, !"_ZN4base8internal12InvokeHelperILb0EN10extensions7Feature12AvailabilityEE8MakeItSoIRKPFS4_PKS3_EJS8_EEES4_OT_DpOT0_"}
!132 = distinct !{!132, !133, !"_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityEPKS4_EJEEES8_E7RunImplIRKS9_RKNSt3__15tupleIJEEEJEEES5_OT_OT0_NSF_16integer_sequenceImJXspT1_EEEEOS7_: argument 0"}
!133 = distinct !{!133, !"_ZN4base8internal7InvokerINS0_9BindStateIPFN10extensions7Feature12AvailabilityEPKS4_EJEEES8_E7RunImplIRKS9_RKNSt3__15tupleIJEEEJEEES5_OT_OT0_NSF_16integer_sequenceImJXspT1_EEEEOS7_"}
