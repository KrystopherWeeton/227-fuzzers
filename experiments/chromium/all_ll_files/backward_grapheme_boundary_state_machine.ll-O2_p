; ModuleID = '../../third_party/blink/renderer/core/editing/state_machines/backward_grapheme_boundary_state_machine.cc'
source_filename = "../../third_party/blink/renderer/core/editing/state_machines/backward_grapheme_boundary_state_machine.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::BackwardGraphemeBoundaryStateMachine" = type { i16, i32, i32, i32, i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_36BackwardGraphemeBoundaryStateMachine13InternalStateEE6kTexts = internal unnamed_addr constant [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [7 x i8] c"kStart\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"kStartWaitLeadSurrogate\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"kSearch\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"kSearchWaitLeadSurrogate\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"kCountRIS\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"kCountRISWaitLeadSurrogate\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"kFinished\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN5blink36BackwardGraphemeBoundaryStateMachineC1Ev = hidden unnamed_addr alias void (%"class.blink::BackwardGraphemeBoundaryStateMachine"*), void (%"class.blink::BackwardGraphemeBoundaryStateMachine"*)* @_ZN5blink36BackwardGraphemeBoundaryStateMachineC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_36BackwardGraphemeBoundaryStateMachine13InternalStateE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #0 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds [7 x i8*], [7 x i8*]* @_ZZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_36BackwardGraphemeBoundaryStateMachine13InternalStateEE6kTexts, i64 0, i64 %3
  %5 = load i8*, i8** %4, align 8
  %6 = tail call i64 @strlen(i8* %5) #10
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %5, i64 %6) #10
  ret %"class.std::__1::basic_ostream"* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink36BackwardGraphemeBoundaryStateMachineC2Ev(%"class.blink::BackwardGraphemeBoundaryStateMachine"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 0
  store i16 0, i16* %2, align 4
  %3 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 1
  %4 = bitcast i32* %3 to <4 x i32>*
  store <4 x i32> <i32 1114112, i32 0, i32 0, i32 0>, <4 x i32>* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine21FeedPrecedingCodeUnitEDs(%"class.blink::BackwardGraphemeBoundaryStateMachine"*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %115 [
    i32 0, label %5
    i32 1, label %17
    i32 2, label %32
    i32 3, label %47
    i32 4, label %74
    i32 5, label %89
  ]

5:                                                ; preds = %2
  %6 = and i16 %1, -1024
  switch i16 %6, label %11 [
    i16 -9216, label %7
    i16 -10240, label %9
  ]

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 0
  store i16 %1, i16* %8, align 4
  store i32 1, i32* %3, align 4
  br label %116

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 2
  store i32 -1, i32* %10, align 4
  store i32 6, i32* %3, align 4
  br label %116

11:                                               ; preds = %5
  %12 = zext i16 %1 to i32
  %13 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 1
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, -1
  store i32 %16, i32* %14, align 4
  store i32 2, i32* %3, align 4
  br label %116

17:                                               ; preds = %2
  %18 = zext i16 %1 to i32
  %19 = and i32 %18, 64512
  %20 = icmp eq i32 %19, 55296
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 2
  store i32 -1, i32* %22, align 4
  store i32 6, i32* %3, align 4
  br label %116

23:                                               ; preds = %17
  %24 = shl nuw nsw i32 %18, 10
  %25 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 0
  %26 = load i16, i16* %25, align 4
  %27 = zext i16 %26 to i32
  %28 = add nsw i32 %24, -56613888
  %29 = add nsw i32 %28, %27
  %30 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 1
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 2
  store i32 -2, i32* %31, align 4
  store i16 0, i16* %25, align 4
  store i32 2, i32* %3, align 4
  br label %116

32:                                               ; preds = %2
  %33 = zext i16 %1 to i32
  %34 = and i16 %1, -1024
  switch i16 %34, label %38 [
    i16 -9216, label %35
    i16 -10240, label %37
  ]

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 0
  store i16 %1, i16* %36, align 4
  store i32 3, i32* %3, align 4
  br label %116

37:                                               ; preds = %32
  store i32 6, i32* %3, align 4
  br label %116

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = tail call zeroext i1 @_ZN5blink15IsGraphemeBreakEii(i32 %33, i32 %40) #10
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  store i32 6, i32* %3, align 4
  br label %116

43:                                               ; preds = %38
  store i32 %33, i32* %39, align 4
  %44 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* %44, align 4
  br label %116

47:                                               ; preds = %2
  %48 = zext i16 %1 to i32
  %49 = and i32 %48, 64512
  %50 = icmp eq i32 %49, 55296
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  store i32 6, i32* %3, align 4
  br label %116

52:                                               ; preds = %47
  %53 = shl nuw nsw i32 %48, 10
  %54 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 0
  %55 = load i16, i16* %54, align 4
  %56 = zext i16 %55 to i32
  %57 = add nsw i32 %53, -56613888
  %58 = add nsw i32 %57, %56
  store i16 0, i16* %54, align 4
  %59 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = tail call zeroext i1 @_ZN5blink9Character19IsRegionalIndicatorEi(i32 %60) #10
  br i1 %61, label %62, label %66

62:                                               ; preds = %52
  %63 = tail call zeroext i1 @_ZN5blink9Character19IsRegionalIndicatorEi(i32 %58) #10
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 3
  store i32 1, i32* %65, align 4
  store i32 4, i32* %3, align 4
  br label %116

66:                                               ; preds = %62, %52
  %67 = load i32, i32* %59, align 4
  %68 = tail call zeroext i1 @_ZN5blink15IsGraphemeBreakEii(i32 %58, i32 %67) #10
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  store i32 6, i32* %3, align 4
  br label %116

70:                                               ; preds = %66
  store i32 %58, i32* %59, align 4
  %71 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = add nsw i32 %72, -2
  store i32 %73, i32* %71, align 4
  store i32 2, i32* %3, align 4
  br label %116

74:                                               ; preds = %2
  %75 = and i16 %1, -1024
  %76 = icmp eq i16 %75, -9216
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 0
  store i16 %1, i16* %78, align 4
  store i32 5, i32* %3, align 4
  br label %116

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = add nsw i32 %86, -2
  store i32 %87, i32* %85, align 4
  br label %88

88:                                               ; preds = %79, %84
  store i32 6, i32* %3, align 4
  br label %116

89:                                               ; preds = %2
  %90 = zext i16 %1 to i32
  %91 = and i32 %90, 64512
  %92 = icmp eq i32 %91, 55296
  br i1 %92, label %93, label %105

93:                                               ; preds = %89
  %94 = shl nuw nsw i32 %90, 10
  %95 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 0
  %96 = load i16, i16* %95, align 4
  %97 = zext i16 %96 to i32
  %98 = add nsw i32 %94, -56613888
  %99 = add nsw i32 %98, %97
  store i16 0, i16* %95, align 4
  %100 = tail call zeroext i1 @_ZN5blink9Character19IsRegionalIndicatorEi(i32 %99) #10
  br i1 %100, label %101, label %105

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %102, align 4
  store i32 4, i32* %3, align 4
  br label %116

105:                                              ; preds = %93, %89
  %106 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 3
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = add nsw i32 %112, -2
  store i32 %113, i32* %111, align 4
  br label %114

114:                                              ; preds = %105, %110
  store i32 6, i32* %3, align 4
  br label %116

115:                                              ; preds = %2
  store i32 6, i32* %3, align 4
  br label %116

116:                                              ; preds = %101, %64, %69, %70, %115, %114, %88, %77, %51, %43, %42, %37, %35, %23, %21, %11, %9, %7
  %117 = phi i32 [ 3, %115 ], [ 3, %114 ], [ 1, %77 ], [ 3, %88 ], [ 3, %51 ], [ 1, %35 ], [ 3, %37 ], [ 3, %42 ], [ 1, %43 ], [ 1, %23 ], [ 3, %21 ], [ 1, %7 ], [ 3, %9 ], [ 1, %11 ], [ 1, %64 ], [ 3, %69 ], [ 1, %70 ], [ 1, %101 ]
  ret i32 %117
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine15MoveToNextStateENS0_13InternalStateE(%"class.blink::BackwardGraphemeBoundaryStateMachine"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 4
  store i32 %1, i32* %3, align 4
  ret i32 1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine6FinishEv(%"class.blink::BackwardGraphemeBoundaryStateMachine"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 4
  store i32 6, i32* %2, align 4
  ret i32 3
}

declare zeroext i1 @_ZN5blink15IsGraphemeBreakEii(i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine13StaySameStateEv(%"class.blink::BackwardGraphemeBoundaryStateMachine"* nocapture readnone) local_unnamed_addr #4 align 2 {
  ret i32 1
}

declare zeroext i1 @_ZN5blink9Character19IsRegionalIndicatorEi(i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine22TellEndOfPrecedingTextEv(%"class.blink::BackwardGraphemeBoundaryStateMachine"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %15 [
    i32 5, label %6
    i32 1, label %4
    i32 4, label %6
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 2
  store i32 -1, i32* %5, align 4
  br label %15

6:                                                ; preds = %1, %1
  %7 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, -2
  store i32 %14, i32* %12, align 4
  br label %15

15:                                               ; preds = %1, %11, %6, %4
  store i32 6, i32* %2, align 4
  ret i32 3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine21FeedFollowingCodeUnitEDs(%"class.blink::BackwardGraphemeBoundaryStateMachine"* nocapture readnone, i16 zeroext) local_unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5blink36BackwardGraphemeBoundaryStateMachine28FinalizeAndGetBoundaryOffsetEv(%"class.blink::BackwardGraphemeBoundaryStateMachine"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %15 [
    i32 6, label %16
    i32 5, label %6
    i32 1, label %4
    i32 4, label %6
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 2
  store i32 -1, i32* %5, align 4
  br label %15

6:                                                ; preds = %1, %1
  %7 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, -2
  store i32 %14, i32* %12, align 4
  br label %15

15:                                               ; preds = %1, %6, %11, %4
  store i32 6, i32* %2, align 4
  br label %16

16:                                               ; preds = %15, %1
  %17 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  ret i32 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink36BackwardGraphemeBoundaryStateMachine5ResetEv(%"class.blink::BackwardGraphemeBoundaryStateMachine"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 0
  store i16 0, i16* %2, align 4
  %3 = getelementptr inbounds %"class.blink::BackwardGraphemeBoundaryStateMachine", %"class.blink::BackwardGraphemeBoundaryStateMachine"* %0, i64 0, i32 1
  %4 = bitcast i32* %3 to <4 x i32>*
  store <4 x i32> <i32 1114112, i32 0, i32 0, i32 0>, <4 x i32>* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
