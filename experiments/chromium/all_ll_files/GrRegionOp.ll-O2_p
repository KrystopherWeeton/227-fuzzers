; ModuleID = '../../third_party/skia/src/gpu/ops/GrRegionOp.cpp'
source_filename = "../../third_party/skia/src/gpu/ops/GrRegionOp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__atomic_base.155" }
%"struct.std::__1::__atomic_base.155" = type { %"struct.std::__1::__cxx_atomic_impl.156" }
%"struct.std::__1::__cxx_atomic_impl.156" = type { %"struct.std::__1::__cxx_atomic_base_impl.157" }
%"struct.std::__1::__cxx_atomic_base_impl.157" = type { i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrOp* }
%struct.SkRect = type { float, float, float, float }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.2", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.12, %class.SkTArray.21, %class.SkTArray.23, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.5"*, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.23, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.24 }
%class.sk_sp.24 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.12 = type { %class.SkTHashTable.13 }
%class.SkTHashTable.13 = type { i32, i32, %class.SkAutoTArray.14 }
%class.SkAutoTArray.14 = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.65" }
%"struct.std::__1::pair.65" = type { i32, %class.SkTArray.66* }
%class.SkTArray.66 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.21 = type { %"class.std::__1::unique_ptr.22"*, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.66, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.23 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.37 }
%class.SkFibBlockSizes.37 = type { i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.56 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.56 = type { %"class.std::__1::unique_ptr.53"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.SkMatrix = type { [9 x float], i32 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrProcessorSet = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"union.GrProcessorSet::XP", i8, [7 x i8] }>
%"union.GrProcessorSet::XP" = type { %class.GrXPFactory* }
%"class.(anonymous namespace)::RegionOp" = type { %class.GrMeshDrawOp, %class.GrSimpleMeshDrawOpHelperWithStencil, %class.SkMatrix, %class.SkSTArray.72, i8, %struct.GrSimpleMesh*, %class.GrProgramInfo* }
%class.GrMeshDrawOp = type { %class.GrDrawOp }
%class.GrDrawOp = type { %class.GrOp }
%class.GrSimpleMeshDrawOpHelperWithStencil = type { %class.GrSimpleMeshDrawOpHelper.base, %struct.GrUserStencilSettings* }
%class.GrSimpleMeshDrawOpHelper.base = type <{ %class.GrProcessorSet*, i8, i8 }>
%class.SkSTArray.72 = type { %class.SkAlignedSTStorage.73, %class.SkTArray.74 }
%class.SkAlignedSTStorage.73 = type { [40 x i8] }
%class.SkTArray.74 = type { %"struct.(anonymous namespace)::RegionOp::RegionInfo"*, i64 }
%"struct.(anonymous namespace)::RegionOp::RegionInfo" = type { %struct.SkRGBA4f, %class.SkRegion }
%struct.GrSimpleMesh = type { %class.sk_sp.75, i32, i32, i32, i32, i16, i16, i8, %class.sk_sp.75, i32, i32 }
%class.sk_sp.75 = type { %class.GrBuffer* }
%class.GrBuffer = type { i32 (...)** }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.127, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.77, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.77 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.78, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.120" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.78 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.82 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.79, [4 x i8] }>
%union.anon.79 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.80, i8* }
%class.sk_sp.80 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.81, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.81 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.82 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.83, void (i8*)*, i8* }
%class.SkNVRefCnt.83 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.78, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.117, %class.sk_sp.119, %class.sk_sp.119 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.92, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.108, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.84 }
%class.SkTHashTable.84 = type { i32, i32, %class.SkAutoTArray.85 }
%class.SkAutoTArray.85 = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.92 = type { %class.SkTHashTable.93 }
%class.SkTHashTable.93 = type { i32, i32, %class.SkAutoTArray.94 }
%class.SkAutoTArray.94 = type { %"class.std::__1::unique_ptr.95" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.101, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.101 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.102" }
%"struct.std::__1::atomic.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl.105" }
%"struct.std::__1::__cxx_atomic_impl.105" = type { %"struct.std::__1::__cxx_atomic_base_impl.106" }
%"struct.std::__1::__cxx_atomic_base_impl.106" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.107, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.107 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.108 = type { %class.SkTHashTable.109 }
%class.SkTHashTable.109 = type { i32, i32, %class.SkAutoTArray.110 }
%class.SkAutoTArray.110 = type { %"class.std::__1::unique_ptr.111" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.117 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.118, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.118 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.119 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__cxx_atomic_impl.123" }
%"struct.std::__1::__cxx_atomic_impl.123" = type { %"struct.std::__1::__cxx_atomic_base_impl.124" }
%"struct.std::__1::__cxx_atomic_base_impl.124" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.125 }
%union.anon.125 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.126, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.126 = type { i32 }
%class.sk_sp.127 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.128"*, [24 x i8] }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.GrFragmentProcessor* }
%class.GrSwizzle = type { i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.134, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.134 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.GrSimpleMeshDrawOpHelper = type <{ %class.GrProcessorSet*, i8, i8, [6 x i8] }>
%"class.std::__1::function.135" = type opaque
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.53" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.148, %class.SkArenaAllocList.149, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.152*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.136, %class.sk_sp.138, %class.sk_sp.143, %class.GrGpu*, i32, i8* }
%class.SkTArray.136 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.137 }
%class.sk_sp.137 = type { %class.GrBuffer* }
%class.sk_sp.138 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef.139, [4 x i8], %"class.std::__1::unique_ptr.140", i32, [4 x i8] }>
%class.GrNonAtomicRef.139 = type { i32 }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.143, i8, [7 x i8] }>
%class.sk_sp.143 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.144, i8*, i64 }
%class.GrNonAtomicRef.144 = type { i32 }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.148 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.149 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%class.GrDeferredUploadToken = type { i64 }
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.150, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.sk_sp.150 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.151, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.151 = type { %"struct.std::__1::atomic" }
%class.SkTArray.152 = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.75, %class.sk_sp.75, %class.sk_sp.75, i32, i32 }
%class.GrRenderTarget = type opaque
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.GrDefaultGeoProcFactory::Color" = type { i32, %struct.SkRGBA4f }
%"struct.GrDefaultGeoProcFactory::Coverage" = type <{ i32, i8, [3 x i8] }>
%"struct.GrDefaultGeoProcFactory::LocalCoords" = type { i32, %class.SkMatrix* }
%"class.GrMeshDrawOp::QuadHelper" = type { %"class.GrMeshDrawOp::PatternHelper.base", [7 x i8] }
%"class.GrMeshDrawOp::PatternHelper.base" = type <{ i8*, %struct.GrSimpleMesh*, i8 }>
%"class.SkRegion::Iterator" = type <{ %class.SkRegion*, i32*, %struct.SkIRect, i8, [7 x i8] }>

$_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN4GrOpD2Ev = comdat any

$_ZN4GrOpD0Ev = comdat any

$_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps = comdat any

$_ZTV4GrOp = comdat any

@_ZTVN12_GLOBAL__N_18RegionOpE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::RegionOp"*)* @_ZN12_GLOBAL__N_18RegionOpD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::RegionOp"*)* @_ZN12_GLOBAL__N_18RegionOpD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::RegionOp"*)* @_ZNK12_GLOBAL__N_18RegionOp4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::RegionOp"*, %"class.std::__1::function.135"*)* @_ZNK12_GLOBAL__N_18RegionOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::RegionOp"*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN12_GLOBAL__N_18RegionOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%"class.(anonymous namespace)::RegionOp"*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN12_GLOBAL__N_18RegionOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::RegionOp"*)* @_ZNK12_GLOBAL__N_18RegionOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::RegionOp"*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN12_GLOBAL__N_18RegionOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%"class.(anonymous namespace)::RegionOp"*)* @_ZN12_GLOBAL__N_18RegionOp11programInfoEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::RegionOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_18RegionOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%"class.(anonymous namespace)::RegionOp"*, %"class.GrMeshDrawOp::Target"*)* @_ZN12_GLOBAL__N_18RegionOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZZN12_GLOBAL__N_18RegionOp7ClassIDEvE8kClassID = internal unnamed_addr global i32 0, align 4
@_ZGVZN12_GLOBAL__N_18RegionOp7ClassIDEvE8kClassID = internal global i64 0, align 8
@_ZN4GrOp14gCurrOpClassIDE = external global %"struct.std::__1::atomic.153", align 4
@.str = private unnamed_addr constant [42 x i8] c"../../third_party/skia/src/gpu/ops/GrOp.h\00", align 1
@.str.1 = private unnamed_addr constant [80 x i8] c"This should never wrap as it should only be called once for each GrOp subclass.\00", align 1
@_ZTV4GrOp = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD2Ev to i8*), i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOp*, %"class.std::__1::function.135"*)* @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"GrRegionOp\00", align 1
@.str.3 = private unnamed_addr constant [50 x i8] c"../../third_party/skia/src/gpu/ops/GrRegionOp.cpp\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"Couldn't create GrGeometryProcessor\0A\00", align 1
@_ZL19SK_PMColor4fILLEGAL = internal unnamed_addr constant %struct.SkRGBA4f { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000 }, align 4
@.str.5 = private unnamed_addr constant [29 x i8] c"Could not allocate vertices\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrOp* @_ZN10GrRegionOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrixRK8SkRegion8GrAATypePK21GrUserStencilSettings(%class.GrRecordingContext* nocapture readnone, %class.GrPaint* dereferenceable(48), %class.SkMatrix* nocapture readonly dereferenceable(40), %class.SkRegion* dereferenceable(24), i32, %struct.GrUserStencilSettings*) local_unnamed_addr #0 {
  %7 = alloca %struct.SkRGBA4f, align 4
  %8 = alloca %class.SkMatrix, align 8
  %9 = alloca %class.SkMatrix, align 8
  %10 = alloca %class.SkRegion, align 8
  %11 = and i32 %4, -3
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %35

13:                                               ; preds = %6
  %14 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14)
  %15 = bitcast %class.SkRegion* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15)
  %16 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 4 %16, i64 40, i1 false) #12
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* nonnull %10, %class.SkRegion* dereferenceable(24) %3) #12
  %17 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %14, i64 40, i1 false) #12
  %18 = bitcast %struct.SkRGBA4f* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #12
  %19 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %20 = bitcast %struct.SkRGBA4f* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 %20, i64 16, i1 false) #12
  %21 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %13
  %25 = call i8* @_Znwm(i64 192) #13
  br label %30

26:                                               ; preds = %13
  %27 = call i8* @_Znwm(i64 224) #12
  %28 = getelementptr inbounds i8, i8* %27, i64 192
  %29 = bitcast i8* %28 to %class.GrProcessorSet*
  call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %29, %class.GrPaint* dereferenceable(48) %1) #12
  br label %30

30:                                               ; preds = %24, %26
  %31 = phi i8* [ %25, %24 ], [ %27, %26 ]
  %32 = phi %class.GrProcessorSet* [ null, %24 ], [ %29, %26 ]
  %33 = bitcast i8* %31 to %"class.(anonymous namespace)::RegionOp"*
  call fastcc void @_ZN12_GLOBAL__N_18RegionOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK8SkRegion8GrAATypePK21GrUserStencilSettings(%"class.(anonymous namespace)::RegionOp"* nonnull %33, %class.GrProcessorSet* %32, %struct.SkRGBA4f* nonnull dereferenceable(16) %7, %class.SkMatrix* nonnull dereferenceable(40) %8, %class.SkRegion* nonnull dereferenceable(24) %10, i32 %4, %struct.GrUserStencilSettings* %5) #12
  %34 = bitcast i8* %31 to %class.GrOp*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #12
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15)
  br label %35

35:                                               ; preds = %6, %30
  %36 = phi %class.GrOp* [ %34, %30 ], [ null, %6 ]
  ret %class.GrOp* %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8SkRegionC1ERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_18RegionOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK8SkRegion8GrAATypePK21GrUserStencilSettings(%"class.(anonymous namespace)::RegionOp"*, %class.GrProcessorSet*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40), %class.SkRegion* dereferenceable(24), i32, %struct.GrUserStencilSettings*) unnamed_addr #0 align 2 {
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %10 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_18RegionOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %21, !prof !3

13:                                               ; preds = %7
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_18RegionOp7ClassIDEvE8kClassID) #12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.153", %"struct.std::__1::atomic.153"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #14
  unreachable

20:                                               ; preds = %16
  store i32 %17, i32* @_ZZN12_GLOBAL__N_18RegionOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_18RegionOp7ClassIDEvE8kClassID) #12
  br label %21

21:                                               ; preds = %7, %13, %20
  %22 = load i32, i32* @_ZZN12_GLOBAL__N_18RegionOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %10, i32 %22) #12
  %23 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_18RegionOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 1
  tail call void @_ZN35GrSimpleMeshDrawOpHelperWithStencilC1EP14GrProcessorSet8GrAATypePK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrSimpleMeshDrawOpHelperWithStencil* %24, %class.GrProcessorSet* %1, i32 %5, %struct.GrUserStencilSettings* %6, i8 zeroext 0) #12
  %25 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 2
  %26 = bitcast %class.SkMatrix* %25 to i8*
  %27 = bitcast %class.SkMatrix* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 4 %27, i64 40, i1 false)
  %28 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 3, i32 0, i32 0, i64 40
  %29 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 3, i32 0, i32 0, i64 0
  %30 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 3, i32 0, i32 0, i64 48
  %31 = bitcast i8* %30 to i64*
  %32 = bitcast i8* %28 to i8**
  store i8* %29, i8** %32, align 8
  store i64 8589934592, i64* %31, align 8
  %33 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 5
  %34 = bitcast i8* %28 to %class.SkTArray.74*
  %35 = bitcast %struct.GrSimpleMesh** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false)
  tail call fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_18RegionOp10RegionInfoELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.74* %34, i32 1) #12
  %36 = bitcast i8* %28 to %"struct.(anonymous namespace)::RegionOp::RegionInfo"**
  %37 = load %"struct.(anonymous namespace)::RegionOp::RegionInfo"*, %"struct.(anonymous namespace)::RegionOp::RegionInfo"** %36, align 8
  %38 = load i64, i64* %31, align 8
  %39 = lshr i64 %38, 1
  %40 = and i64 %39, 2147483647
  %41 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %37, i64 %40
  %42 = add i64 %38, 2
  %43 = and i64 %42, 4294967294
  %44 = and i64 %38, -4294967295
  %45 = or i64 %43, %44
  store i64 %45, i64* %31, align 8
  %46 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %37, i64 %40, i32 1
  tail call void @_ZN8SkRegionC1Ev(%class.SkRegion* %46) #12
  %47 = bitcast %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %41 to i8*
  %48 = bitcast %struct.SkRGBA4f* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 4 %48, i64 16, i1 false)
  %49 = tail call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %46, %class.SkRegion* dereferenceable(24) %4) #12
  %50 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #12
  %51 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %4, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = sitofp i32 %52 to float
  %54 = insertelement <2 x float> undef, float %53, i32 0
  %55 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %4, i64 0, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = sitofp i32 %56 to float
  %58 = insertelement <2 x float> %54, float %57, i32 1
  %59 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %4, i64 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = sitofp i32 %60 to float
  %62 = insertelement <2 x float> undef, float %61, i32 0
  %63 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %4, i64 0, i32 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = sitofp i32 %64 to float
  %66 = insertelement <2 x float> %62, float %65, i32 1
  %67 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> %58, <2 x float>* %67, align 8
  %68 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %66, <2 x float>* %68, align 8
  %69 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %70 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %3, %struct.SkRect* %69, %struct.SkRect* nonnull dereferenceable(16) %9, i32 1) #12
  %71 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  store i16 0, i16* %71, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #12
  ret void
}

declare void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp*, i32) unnamed_addr #2

declare void @_ZN35GrSimpleMeshDrawOpHelperWithStencilC1EP14GrProcessorSet8GrAATypePK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrProcessorSet*, i32, %struct.GrUserStencilSettings*, i8 zeroext) unnamed_addr #2

declare dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_18RegionOpD2Ev(%"class.(anonymous namespace)::RegionOp"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_18RegionOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 3, i32 0, i32 0, i64 40
  %4 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 3, i32 0, i32 0, i64 48
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"struct.(anonymous namespace)::RegionOp::RegionInfo"**
  br label %15

11:                                               ; preds = %15, %1
  %12 = phi i64 [ %6, %1 ], [ %20, %15 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %27, label %24

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %19, %15 ]
  %17 = load %"struct.(anonymous namespace)::RegionOp::RegionInfo"*, %"struct.(anonymous namespace)::RegionOp::RegionInfo"** %10, align 8
  %18 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %17, i64 %16, i32 1
  tail call void @_ZN8SkRegionD1Ev(%class.SkRegion* %18) #12
  %19 = add nuw nsw i64 %16, 1
  %20 = load i64, i64* %5, align 8
  %21 = lshr i64 %20, 1
  %22 = and i64 %21, 2147483647
  %23 = icmp ult i64 %19, %22
  br i1 %23, label %15, label %11

24:                                               ; preds = %11
  %25 = bitcast i8* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_Z7sk_freePv(i8* %26) #12
  br label %27

27:                                               ; preds = %11, %24
  %28 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 1
  %29 = bitcast %class.GrSimpleMeshDrawOpHelperWithStencil* %28 to %class.GrSimpleMeshDrawOpHelper*
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD2Ev(%class.GrSimpleMeshDrawOpHelper* %29) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %30 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %class.GrOp*, %class.GrOp** %30, align 8
  store %class.GrOp* null, %class.GrOp** %30, align 8
  %32 = icmp eq %class.GrOp* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = bitcast %class.GrOp* %31 to void (%class.GrOp*)***
  %35 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %35, i64 1
  %37 = load void (%class.GrOp*)*, void (%class.GrOp*)** %36, align 8
  tail call void %37(%class.GrOp* nonnull %31) #12
  br label %38

38:                                               ; preds = %27, %33
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_18RegionOpD0Ev(%"class.(anonymous namespace)::RegionOp"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_18RegionOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 3, i32 0, i32 0, i64 40
  %4 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 3, i32 0, i32 0, i64 48
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"struct.(anonymous namespace)::RegionOp::RegionInfo"**
  br label %15

11:                                               ; preds = %15, %1
  %12 = phi i64 [ %6, %1 ], [ %20, %15 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %27, label %24

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %19, %15 ]
  %17 = load %"struct.(anonymous namespace)::RegionOp::RegionInfo"*, %"struct.(anonymous namespace)::RegionOp::RegionInfo"** %10, align 8
  %18 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %17, i64 %16, i32 1
  tail call void @_ZN8SkRegionD1Ev(%class.SkRegion* %18) #12
  %19 = add nuw nsw i64 %16, 1
  %20 = load i64, i64* %5, align 8
  %21 = lshr i64 %20, 1
  %22 = and i64 %21, 2147483647
  %23 = icmp ult i64 %19, %22
  br i1 %23, label %15, label %11

24:                                               ; preds = %11
  %25 = bitcast i8* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_Z7sk_freePv(i8* %26) #12
  br label %27

27:                                               ; preds = %24, %11
  %28 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 1
  %29 = bitcast %class.GrSimpleMeshDrawOpHelperWithStencil* %28 to %class.GrSimpleMeshDrawOpHelper*
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD2Ev(%class.GrSimpleMeshDrawOpHelper* %29) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %30 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %class.GrOp*, %class.GrOp** %30, align 8
  store %class.GrOp* null, %class.GrOp** %30, align 8
  %32 = icmp eq %class.GrOp* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = bitcast %class.GrOp* %31 to void (%class.GrOp*)***
  %35 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %35, i64 1
  %37 = load void (%class.GrOp*)*, void (%class.GrOp*)** %36, align 8
  tail call void %37(%class.GrOp* nonnull %31) #12
  br label %38

38:                                               ; preds = %27, %33
  %39 = bitcast %"class.(anonymous namespace)::RegionOp"* %0 to i8*
  tail call void @_ZdlPv(i8* %39) #12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_18RegionOp4nameEv(%"class.(anonymous namespace)::RegionOp"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_18RegionOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%"class.(anonymous namespace)::RegionOp"* nocapture readonly, %"class.std::__1::function.135"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 6
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.135"* %1) #12
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.135"* %1) #12
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_18RegionOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%"class.(anonymous namespace)::RegionOp"*, %class.GrOp*, %class.SkArenaAlloc* nocapture readnone, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %7 = bitcast %class.GrOp* %6 to %class.GrSimpleMeshDrawOpHelperWithStencil*
  %8 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %9 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %10 = tail call zeroext i1 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelperWithStencil* %5, %class.GrSimpleMeshDrawOpHelperWithStencil* dereferenceable(24) %7, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %8, %struct.SkRect* dereferenceable(16) %9, i1 zeroext false) #12
  br i1 %10, label %11, label %64

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 3
  %14 = bitcast i16* %13 to %class.SkMatrix*
  %15 = tail call zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40) %12, %class.SkMatrix* dereferenceable(40) %14) #12
  br i1 %15, label %16, label %64

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 3, i32 0, i32 0, i64 40
  %18 = bitcast i8* %17 to %class.SkTArray.74*
  %19 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 1
  %21 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = lshr i64 %22, 1
  %24 = trunc i64 %23 to i32
  %25 = and i32 %24, 2147483647
  %26 = bitcast %"class.std::__1::unique_ptr"* %19 to %"struct.(anonymous namespace)::RegionOp::RegionInfo"**
  %27 = load %"struct.(anonymous namespace)::RegionOp::RegionInfo"*, %"struct.(anonymous namespace)::RegionOp::RegionInfo"** %26, align 8
  tail call fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_18RegionOp10RegionInfoELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.74* %18, i32 %25) #12
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %49, label %29

29:                                               ; preds = %16
  %30 = bitcast i8* %17 to %"struct.(anonymous namespace)::RegionOp::RegionInfo"**
  %31 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 3, i32 0, i32 0, i64 48
  %32 = bitcast i8* %31 to i64*
  %33 = zext i32 %25 to i64
  br label %34

34:                                               ; preds = %34, %29
  %35 = phi i64 [ 0, %29 ], [ %47, %34 ]
  %36 = load %"struct.(anonymous namespace)::RegionOp::RegionInfo"*, %"struct.(anonymous namespace)::RegionOp::RegionInfo"** %30, align 8
  %37 = load i64, i64* %32, align 8
  %38 = lshr i64 %37, 1
  %39 = and i64 %38, 2147483647
  %40 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %36, i64 %39
  %41 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %40, i64 %35
  %42 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %27, i64 %35
  %43 = bitcast %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %41 to i8*
  %44 = bitcast %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false) #12
  %45 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %41, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %27, i64 %35, i32 1
  tail call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %45, %class.SkRegion* dereferenceable(24) %46) #12
  %47 = add nuw nsw i64 %35, 1
  %48 = icmp eq i64 %47, %33
  br i1 %48, label %49, label %34

49:                                               ; preds = %34, %16
  %50 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 3, i32 0, i32 0, i64 48
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %22, 4294967294
  %54 = add i64 %52, %53
  %55 = and i64 %54, 4294967294
  %56 = and i64 %52, -4294967295
  %57 = or i64 %55, %56
  store i64 %57, i64* %51, align 8
  %58 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 3
  %59 = bitcast i16* %58 to i8*
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 4
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = or i8 %62, %60
  store i8 %63, i8* %61, align 8
  br label %64

64:                                               ; preds = %11, %4, %49
  %65 = phi i32 [ 0, %49 ], [ 2, %4 ], [ 2, %11 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 comdat align 2 {
  %8 = bitcast %class.GrMeshDrawOp* %0 to void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)***
  %9 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)**, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %9, i64 10
  %11 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %10, align 8
  tail call void %11(%class.GrMeshDrawOp* %0, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #12
  ret void
}

declare void @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState(%class.GrMeshDrawOp*, %class.GrOpFlushState*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_18RegionOp9onExecuteEP14GrOpFlushStateRK6SkRect(%"class.(anonymous namespace)::RegionOp"* nocapture readonly, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 6
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 5
  %9 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  %10 = icmp eq %struct.GrSimpleMesh* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %13 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %13, %class.GrProgramInfo* nonnull dereferenceable(128) %5, %struct.SkRect* dereferenceable(16) %2) #12
  %14 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %5, i64 0, i32 5
  %15 = load %class.GrPipeline*, %class.GrPipeline** %14, align 8
  %16 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %15, i64 0, i32 5
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 32
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %22 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %21, align 8
  %23 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %22, i64 0, i32 4
  %24 = load %class.GrAppliedClip*, %class.GrAppliedClip** %23, align 8
  %25 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %24, i64 0, i32 0, i32 0, i32 1
  %26 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %26, %struct.SkIRect* dereferenceable(16) %25) #12
  br label %27

27:                                               ; preds = %11, %20
  %28 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %29 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 7
  %30 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %29, align 8
  %31 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 5
  %32 = load %class.GrPipeline*, %class.GrPipeline** %31, align 8
  %33 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %33, %class.GrGeometryProcessor* dereferenceable(80) %30, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %32) #12
  %34 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  tail call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %34) #12
  br label %35

35:                                               ; preds = %7, %3, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_18RegionOp18fixedFunctionFlagsEv(%"class.(anonymous namespace)::RegionOp"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelperWithStencil* %2) #12
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_18RegionOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%"class.(anonymous namespace)::RegionOp"*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 3, i32 0, i32 0, i64 40
  %7 = bitcast i8* %6 to %"struct.(anonymous namespace)::RegionOp::RegionInfo"**
  %8 = load %"struct.(anonymous namespace)::RegionOp::RegionInfo"*, %"struct.(anonymous namespace)::RegionOp::RegionInfo"** %7, align 8
  %9 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 4
  %11 = tail call i32 @_ZN35GrSimpleMeshDrawOpHelperWithStencil18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelperWithStencil* %5, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, i32 %3, i32 0, %struct.SkRGBA4f* %9, i8* %10) #12
  ret i32 %11
}

declare void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.GrProgramInfo* @_ZN12_GLOBAL__N_18RegionOp11programInfoEv(%"class.(anonymous namespace)::RegionOp"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 6
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_18RegionOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::RegionOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 align 2 {
  %9 = alloca %"struct.GrDefaultGeoProcFactory::Color", align 4
  %10 = alloca %"struct.GrDefaultGeoProcFactory::Coverage", align 4
  %11 = alloca %"struct.GrDefaultGeoProcFactory::LocalCoords", align 8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = select i1 %15, i32 1, i32 2
  %17 = bitcast %"struct.GrDefaultGeoProcFactory::Color"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Color", %"struct.GrDefaultGeoProcFactory::Color"* %9, i64 0, i32 0
  store i32 %16, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Color", %"struct.GrDefaultGeoProcFactory::Color"* %9, i64 0, i32 1
  %20 = bitcast %struct.SkRGBA4f* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 bitcast (%struct.SkRGBA4f* @_ZL19SK_PMColor4fILLEGAL to i8*), i64 16, i1 false) #12
  %21 = bitcast %"struct.GrDefaultGeoProcFactory::Coverage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %10, i64 0, i32 0
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %10, i64 0, i32 1
  store i8 -1, i8* %23, align 4
  %24 = bitcast %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11, i64 0, i32 0
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11, i64 0, i32 1
  store %class.SkMatrix* null, %class.SkMatrix** %26, align 8
  %27 = call %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory4MakeEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc* %2, %"struct.GrDefaultGeoProcFactory::Color"* nonnull dereferenceable(20) %9, %"struct.GrDefaultGeoProcFactory::Coverage"* nonnull dereferenceable(8) %10, %"struct.GrDefaultGeoProcFactory::LocalCoords"* nonnull dereferenceable(16) %11, %class.SkMatrix* dereferenceable(40) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %17) #12
  %28 = icmp eq %class.GrGeometryProcessor* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %8
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 95, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0)) #12
  br label %34

30:                                               ; preds = %8
  %31 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 1
  %32 = call %class.GrProgramInfo* @_ZN35GrSimpleMeshDrawOpHelperWithStencil28createProgramInfoWithStencilEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelperWithStencil* %31, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* nonnull %27, i8 zeroext 0, i32 %6, i32 %7) #12
  %33 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 6
  store %class.GrProgramInfo* %32, %class.GrProgramInfo** %33, align 8
  br label %34

34:                                               ; preds = %30, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_18RegionOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::RegionOp"*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.GrMeshDrawOp::QuadHelper", align 8
  %4 = alloca %"class.SkRegion::Iterator", align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 6
  %6 = load %class.GrProgramInfo*, %class.GrProgramInfo** %5, align 8
  %7 = icmp eq %class.GrProgramInfo* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 0
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %9, %"class.GrMeshDrawOp::Target"* %1) #12
  %10 = load %class.GrProgramInfo*, %class.GrProgramInfo** %5, align 8
  %11 = icmp eq %class.GrProgramInfo* %10, null
  br i1 %11, label %182, label %12

12:                                               ; preds = %8, %2
  %13 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 3, i32 0, i32 0, i64 40
  %14 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 3, i32 0, i32 0, i64 48
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = lshr i64 %16, 1
  %18 = trunc i64 %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %182, label %21

21:                                               ; preds = %12
  %22 = bitcast i8* %13 to %"struct.(anonymous namespace)::RegionOp::RegionInfo"**
  %23 = zext i32 %19 to i64
  br label %26

24:                                               ; preds = %26
  %25 = icmp eq i32 %32, 0
  br i1 %25, label %182, label %35

26:                                               ; preds = %26, %21
  %27 = phi i64 [ 0, %21 ], [ %33, %26 ]
  %28 = phi i32 [ 0, %21 ], [ %32, %26 ]
  %29 = load %"struct.(anonymous namespace)::RegionOp::RegionInfo"*, %"struct.(anonymous namespace)::RegionOp::RegionInfo"** %22, align 8
  %30 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %29, i64 %27, i32 1
  %31 = tail call i32 @_ZNK8SkRegion23computeRegionComplexityEv(%class.SkRegion* %30) #12
  %32 = add nsw i32 %31, %28
  %33 = add nuw nsw i64 %27, 1
  %34 = icmp eq i64 %33, %23
  br i1 %34, label %24, label %26

35:                                               ; preds = %24
  %36 = bitcast %"class.GrMeshDrawOp::QuadHelper"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #12
  %37 = getelementptr inbounds %"class.GrMeshDrawOp::QuadHelper", %"class.GrMeshDrawOp::QuadHelper"* %3, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.GrMeshDrawOp::QuadHelper", %"class.GrMeshDrawOp::QuadHelper"* %3, i64 0, i32 0, i32 1
  %39 = bitcast %"class.GrMeshDrawOp::QuadHelper"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  %40 = load %class.GrProgramInfo*, %class.GrProgramInfo** %5, align 8
  %41 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %40, i64 0, i32 7
  %42 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %41, align 8
  %43 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %42, i64 0, i32 3, i32 3
  %44 = load i64, i64* %43, align 8
  call void @_ZN12GrMeshDrawOp10QuadHelperC1EPNS_6TargetEmi(%"class.GrMeshDrawOp::QuadHelper"* nonnull %3, %"class.GrMeshDrawOp::Target"* %1, i64 %44, i32 %32) #12
  %45 = load i8*, i8** %37, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %35
  br i1 %20, label %59, label %48

48:                                               ; preds = %47
  %49 = bitcast i8* %13 to %"struct.(anonymous namespace)::RegionOp::RegionInfo"**
  %50 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 4
  %51 = bitcast %"class.SkRegion::Iterator"* %4 to i8*
  %52 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %4, i64 0, i32 3
  %53 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %4, i64 0, i32 2, i32 0
  %54 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %4, i64 0, i32 2, i32 1
  %55 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %4, i64 0, i32 2, i32 2
  %56 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %4, i64 0, i32 2, i32 3
  %57 = zext i32 %19 to i64
  br label %64

58:                                               ; preds = %35
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0)) #12
  br label %181

59:                                               ; preds = %177, %47
  %60 = bitcast %struct.GrSimpleMesh** %38 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.(anonymous namespace)::RegionOp", %"class.(anonymous namespace)::RegionOp"* %0, i64 0, i32 5
  %63 = bitcast %struct.GrSimpleMesh** %62 to i64*
  store i64 %61, i64* %63, align 8
  br label %181

64:                                               ; preds = %177, %48
  %65 = phi i64 [ 0, %48 ], [ %179, %177 ]
  %66 = phi i8* [ %45, %48 ], [ %178, %177 ]
  %67 = load %"struct.(anonymous namespace)::RegionOp::RegionInfo"*, %"struct.(anonymous namespace)::RegionOp::RegionInfo"** %49, align 8
  %68 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %67, i64 %65
  %69 = load i8, i8* %50, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %83, label %71

71:                                               ; preds = %64
  %72 = bitcast %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %68 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %67, i64 %65, i32 0, i32 1
  %75 = bitcast float* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %67, i64 %65, i32 0, i32 2
  %78 = bitcast float* %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %67, i64 %65, i32 0, i32 3
  %81 = bitcast float* %80 to i32*
  %82 = load i32, i32* %81, align 4
  br label %87

83:                                               ; preds = %64
  %84 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %68, i64 0, i32 0
  %85 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %84) #12
  %86 = load %"struct.(anonymous namespace)::RegionOp::RegionInfo"*, %"struct.(anonymous namespace)::RegionOp::RegionInfo"** %49, align 8
  br label %87

87:                                               ; preds = %71, %83
  %88 = phi %"struct.(anonymous namespace)::RegionOp::RegionInfo"* [ %67, %71 ], [ %86, %83 ]
  %89 = phi i32 [ %82, %71 ], [ -1431655766, %83 ]
  %90 = phi i32 [ %79, %71 ], [ -1431655766, %83 ]
  %91 = phi i32 [ %76, %71 ], [ -1431655766, %83 ]
  %92 = phi i32 [ %73, %71 ], [ %85, %83 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %51) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 40, i1 false)
  %93 = getelementptr inbounds %"struct.(anonymous namespace)::RegionOp::RegionInfo", %"struct.(anonymous namespace)::RegionOp::RegionInfo"* %88, i64 %65, i32 1
  call void @_ZN8SkRegion8IteratorC1ERKS_(%"class.SkRegion::Iterator"* nonnull %4, %class.SkRegion* dereferenceable(24) %93) #12
  %94 = load i8, i8* %52, align 8, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %177

96:                                               ; preds = %87, %168
  %97 = phi i8* [ %174, %168 ], [ %66, %87 ]
  %98 = load i32, i32* %53, align 8
  %99 = sitofp i32 %98 to float
  %100 = load i32, i32* %54, align 4
  %101 = sitofp i32 %100 to float
  %102 = load i32, i32* %55, align 8
  %103 = sitofp i32 %102 to float
  %104 = load i32, i32* %56, align 4
  %105 = sitofp i32 %104 to float
  %106 = bitcast i8* %97 to float*
  store float %99, float* %106, align 1
  %107 = getelementptr inbounds i8, i8* %97, i64 4
  %108 = bitcast i8* %107 to float*
  store float %101, float* %108, align 1
  %109 = getelementptr inbounds i8, i8* %97, i64 8
  %110 = bitcast i8* %109 to i32*
  store i32 %92, i32* %110, align 1
  %111 = getelementptr inbounds i8, i8* %97, i64 12
  br i1 %70, label %112, label %128

112:                                              ; preds = %96
  %113 = bitcast i8* %111 to float*
  store float %99, float* %113, align 1
  %114 = getelementptr inbounds i8, i8* %97, i64 16
  %115 = bitcast i8* %114 to float*
  store float %105, float* %115, align 1
  %116 = getelementptr inbounds i8, i8* %97, i64 20
  %117 = bitcast i8* %116 to i32*
  store i32 %92, i32* %117, align 1
  %118 = getelementptr inbounds i8, i8* %97, i64 24
  %119 = bitcast i8* %118 to float*
  store float %103, float* %119, align 1
  %120 = getelementptr inbounds i8, i8* %97, i64 28
  %121 = bitcast i8* %120 to float*
  store float %101, float* %121, align 1
  %122 = getelementptr inbounds i8, i8* %97, i64 32
  %123 = bitcast i8* %122 to i32*
  store i32 %92, i32* %123, align 1
  %124 = getelementptr inbounds i8, i8* %97, i64 36
  %125 = bitcast i8* %124 to float*
  store float %103, float* %125, align 1
  %126 = getelementptr inbounds i8, i8* %97, i64 40
  %127 = bitcast i8* %126 to float*
  store float %105, float* %127, align 1
  br label %168

128:                                              ; preds = %96
  %129 = bitcast i8* %111 to i32*
  store i32 %91, i32* %129, align 1
  %130 = getelementptr inbounds i8, i8* %97, i64 16
  %131 = bitcast i8* %130 to i32*
  store i32 %90, i32* %131, align 1
  %132 = getelementptr inbounds i8, i8* %97, i64 20
  %133 = bitcast i8* %132 to i32*
  store i32 %89, i32* %133, align 1
  %134 = getelementptr inbounds i8, i8* %97, i64 24
  %135 = bitcast i8* %134 to float*
  store float %99, float* %135, align 1
  %136 = getelementptr inbounds i8, i8* %97, i64 28
  %137 = bitcast i8* %136 to float*
  store float %105, float* %137, align 1
  %138 = getelementptr inbounds i8, i8* %97, i64 32
  %139 = bitcast i8* %138 to i32*
  store i32 %92, i32* %139, align 1
  %140 = getelementptr inbounds i8, i8* %97, i64 36
  %141 = bitcast i8* %140 to i32*
  store i32 %91, i32* %141, align 1
  %142 = getelementptr inbounds i8, i8* %97, i64 40
  %143 = bitcast i8* %142 to i32*
  store i32 %90, i32* %143, align 1
  %144 = getelementptr inbounds i8, i8* %97, i64 44
  %145 = bitcast i8* %144 to i32*
  store i32 %89, i32* %145, align 1
  %146 = getelementptr inbounds i8, i8* %97, i64 48
  %147 = bitcast i8* %146 to float*
  store float %103, float* %147, align 1
  %148 = getelementptr inbounds i8, i8* %97, i64 52
  %149 = bitcast i8* %148 to float*
  store float %101, float* %149, align 1
  %150 = getelementptr inbounds i8, i8* %97, i64 56
  %151 = bitcast i8* %150 to i32*
  store i32 %92, i32* %151, align 1
  %152 = getelementptr inbounds i8, i8* %97, i64 60
  %153 = bitcast i8* %152 to i32*
  store i32 %91, i32* %153, align 1
  %154 = getelementptr inbounds i8, i8* %97, i64 64
  %155 = bitcast i8* %154 to i32*
  store i32 %90, i32* %155, align 1
  %156 = getelementptr inbounds i8, i8* %97, i64 68
  %157 = bitcast i8* %156 to i32*
  store i32 %89, i32* %157, align 1
  %158 = getelementptr inbounds i8, i8* %97, i64 72
  %159 = bitcast i8* %158 to float*
  store float %103, float* %159, align 1
  %160 = getelementptr inbounds i8, i8* %97, i64 76
  %161 = bitcast i8* %160 to float*
  store float %105, float* %161, align 1
  %162 = getelementptr inbounds i8, i8* %97, i64 80
  %163 = bitcast i8* %162 to i32*
  store i32 %92, i32* %163, align 1
  %164 = getelementptr inbounds i8, i8* %97, i64 84
  %165 = bitcast i8* %164 to i32*
  store i32 %91, i32* %165, align 1
  %166 = getelementptr inbounds i8, i8* %97, i64 88
  %167 = bitcast i8* %166 to i32*
  store i32 %90, i32* %167, align 1
  br label %168

168:                                              ; preds = %112, %128
  %169 = phi i64 [ 44, %112 ], [ 92, %128 ]
  %170 = phi i32 [ %92, %112 ], [ %89, %128 ]
  %171 = phi i64 [ 48, %112 ], [ 96, %128 ]
  %172 = getelementptr inbounds i8, i8* %97, i64 %169
  %173 = bitcast i8* %172 to i32*
  store i32 %170, i32* %173, align 1
  %174 = getelementptr inbounds i8, i8* %97, i64 %171
  call void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"* nonnull %4) #12
  %175 = load i8, i8* %52, align 8, !range !2
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %96, label %177

177:                                              ; preds = %168, %87
  %178 = phi i8* [ %66, %87 ], [ %174, %168 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51) #12
  %179 = add nuw nsw i64 %65, 1
  %180 = icmp eq i64 %179, %57
  br i1 %180, label %59, label %64

181:                                              ; preds = %59, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #12
  br label %182

182:                                              ; preds = %12, %181, %24, %8
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #9

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_18RegionOp10RegionInfoELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.74* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkTArray.74, %class.SkTArray.74* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 2147483647
  %8 = add nsw i32 %7, %1
  %9 = sext i32 %8 to i64
  %10 = lshr i64 %4, 33
  %11 = icmp slt i64 %10, %9
  %12 = mul nsw i64 %9, 3
  %13 = icmp sle i64 %10, %12
  %14 = and i64 %4, 1
  %15 = icmp eq i64 %14, 0
  %16 = or i1 %15, %13
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = and i64 %4, 4294967296
  %19 = icmp eq i64 %18, 0
  br label %20

20:                                               ; preds = %2, %17
  %21 = phi i1 [ false, %2 ], [ %19, %17 ]
  %22 = or i1 %11, %21
  br i1 %22, label %23, label %61

23:                                               ; preds = %20
  %24 = add nsw i64 %9, 1
  %25 = ashr i64 %24, 1
  %26 = add nsw i64 %9, 7
  %27 = add nsw i64 %26, %25
  %28 = and i64 %27, -8
  %29 = icmp eq i64 %28, %10
  br i1 %29, label %61, label %30

30:                                               ; preds = %23
  %31 = icmp slt i64 %28, 2147483647
  %32 = select i1 %31, i64 %28, i64 2147483647
  %33 = icmp sgt i64 %32, -2147483647
  %34 = select i1 %33, i64 %32, i64 -2147483647
  %35 = shl i64 %34, 33
  %36 = and i64 %4, 8589934591
  %37 = or i64 %35, %36
  store i64 %37, i64* %3, align 8
  %38 = and i64 %34, 2147483647
  %39 = tail call i8* @_Z15sk_malloc_throwmm(i64 %38, i64 40) #12
  %40 = load i64, i64* %3, align 8
  %41 = lshr i64 %40, 1
  %42 = and i64 %41, 2147483647
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %30
  %45 = mul nuw nsw i64 %42, 40
  %46 = bitcast %class.SkTArray.74* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %47, i64 %45, i1 false) #12
  %48 = load i64, i64* %3, align 8
  br label %49

49:                                               ; preds = %30, %44
  %50 = phi i64 [ %40, %30 ], [ %48, %44 ]
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  %53 = bitcast %class.SkTArray.74* %0 to i8**
  br i1 %52, label %57, label %54

54:                                               ; preds = %49
  %55 = load i8*, i8** %53, align 8
  tail call void @_Z7sk_freePv(i8* %55) #12
  %56 = load i64, i64* %3, align 8
  br label %57

57:                                               ; preds = %49, %54
  %58 = phi i64 [ %56, %54 ], [ %50, %49 ]
  store i8* %39, i8** %53, align 8
  %59 = and i64 %58, -4294967298
  %60 = or i64 %59, 1
  store i64 %60, i64* %3, align 8
  br label %61

61:                                               ; preds = %57, %23, %20
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare void @_ZN8SkRegionC1Ev(%class.SkRegion*) unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN24GrSimpleMeshDrawOpHelperD2Ev(%class.GrSimpleMeshDrawOpHelper*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD2Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.GrOp*, %class.GrOp** %3, align 8
  store %class.GrOp* null, %class.GrOp** %3, align 8
  %5 = icmp eq %class.GrOp* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrOp* %4 to void (%class.GrOp*)***
  %8 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %8, i64 1
  %10 = load void (%class.GrOp*)*, void (%class.GrOp*)** %9, align 8
  tail call void %10(%class.GrOp* nonnull %4) #12
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD0Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrOp*, %"class.std::__1::function.135"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps(%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline*, %"class.std::__1::function.135"*) local_unnamed_addr #2

declare void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet*, %"class.std::__1::function.135"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrSimpleMeshDrawOpHelperWithStencil* dereferenceable(24), %class.GrCaps* dereferenceable(232), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZeqRK8SkMatrixS1_(%class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState*, %struct.GrSimpleMesh* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass*, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #2

declare i32 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelperWithStencil*) local_unnamed_addr #2

declare i32 @_ZN35GrSimpleMeshDrawOpHelperWithStencil18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32, i32, %struct.SkRGBA4f*, i8*) local_unnamed_addr #2

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

declare %class.GrProgramInfo* @_ZN35GrSimpleMeshDrawOpHelperWithStencil28createProgramInfoWithStencilEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), %class.GrGeometryProcessor*, i8 zeroext, i32, i32) local_unnamed_addr #2

declare %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory4MakeEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc*, %"struct.GrDefaultGeoProcFactory::Color"* dereferenceable(20), %"struct.GrDefaultGeoProcFactory::Coverage"* dereferenceable(8), %"struct.GrDefaultGeoProcFactory::LocalCoords"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp*, %"class.GrMeshDrawOp::Target"*) local_unnamed_addr #2

declare i32 @_ZNK8SkRegion23computeRegionComplexityEv(%class.SkRegion*) local_unnamed_addr #2

declare void @_ZN12GrMeshDrawOp10QuadHelperC1EPNS_6TargetEmi(%"class.GrMeshDrawOp::QuadHelper"*, %"class.GrMeshDrawOp::Target"*, i64, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkRegion8IteratorC1ERKS_(%"class.SkRegion::Iterator"*, %class.SkRegion* dereferenceable(24)) unnamed_addr #2

declare void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"*) local_unnamed_addr #2

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f*) local_unnamed_addr #2

declare void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet*, %class.GrPaint* dereferenceable(48)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
