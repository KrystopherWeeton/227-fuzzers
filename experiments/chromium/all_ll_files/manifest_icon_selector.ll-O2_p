; ModuleID = '../../third_party/blink/common/manifest/manifest_icon_selector.cc'
source_filename = "../../third_party/blink/common/manifest/manifest_icon_selector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"*, %"class.std::__1::__compressed_pair.27" }
%"struct.blink::Manifest::ImageResource" = type { %class.GURL, %"class.std::__1::basic_string.4", %"class.std::__1::vector.13", %"class.std::__1::vector.20" }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.std::__1::__compressed_pair.15" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.gfx::Size"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { i32*, i32*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i32* }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.blink::Manifest::ImageResource"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.8 }
%struct.anon.8 = type { %"struct.std::__1::__padding.9", i8 }
%"struct.std::__1::__padding.9" = type { [1 x i8] }

@.str = private unnamed_addr constant [7 x i8] c"image/\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ManifestIconSelector26FindBestMatchingSquareIconERKNSt3__16vectorINS_8Manifest13ImageResourceENS1_9allocatorIS4_EEEEiiNS_5mojom29ManifestImageResource_PurposeE(%class.GURL* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i32, i32, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink20ManifestIconSelector20FindBestMatchingIconERKNSt3__16vectorINS_8Manifest13ImageResourceENS1_9allocatorIS4_EEEEiifNS_5mojom29ManifestImageResource_PurposeE(%class.GURL* sret %0, %"class.std::__1::vector"* dereferenceable(24) %1, i32 %2, i32 %3, float 1.000000e+00, i32 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ManifestIconSelector20FindBestMatchingIconERKNSt3__16vectorINS_8Manifest13ImageResourceENS1_9allocatorIS4_EEEEiifNS_5mojom29ManifestImageResource_PurposeE(%class.GURL* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i32, i32, float, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %12 = bitcast %"struct.blink::Manifest::ImageResource"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %13, %15
  br i1 %16, label %216, label %17

17:                                               ; preds = %6
  %18 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  br label %39

36:                                               ; preds = %193
  %37 = inttoptr i64 %199 to %"struct.blink::Manifest::ImageResource"*
  %38 = icmp eq i32 %194, 0
  br i1 %38, label %203, label %206

39:                                               ; preds = %17, %193
  %40 = phi i64 [ %15, %17 ], [ %199, %193 ]
  %41 = phi i32 [ -1, %17 ], [ %196, %193 ]
  %42 = phi i32 [ -1, %17 ], [ %195, %193 ]
  %43 = phi i32 [ -2147483648, %17 ], [ %194, %193 ]
  %44 = phi i64 [ 0, %17 ], [ %197, %193 ]
  %45 = inttoptr i64 %40 to %"struct.blink::Manifest::ImageResource"*
  %46 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %45, i64 %44, i32 1
  %47 = bitcast %"class.std::__1::basic_string.4"* %46 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %45, i64 %44, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  br label %56

54:                                               ; preds = %39
  %55 = zext i8 %49 to i64
  br label %56

56:                                               ; preds = %51, %54
  %57 = phi i64 [ %53, %51 ], [ %55, %54 ]
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %127, label %59

59:                                               ; preds = %56
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 24, i1 false)
  %60 = load i8, i8* %48, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i16*, i16** %62, align 8
  %64 = bitcast %"class.std::__1::basic_string.4"* %46 to i16*
  %65 = select i1 %61, i16* %63, i16* %64
  %66 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %45, i64 %44, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %60 to i64
  %69 = select i1 %61, i64 %67, i64 %68
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i16* %65, i64 %69) #4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #4
  %70 = load i8, i8* %48, align 1
  %71 = icmp slt i8 %70, 0
  %72 = load i16*, i16** %62, align 8
  %73 = select i1 %71, i16* %72, i16* %64
  %74 = load i64, i64* %66, align 8
  %75 = zext i8 %70 to i64
  %76 = select i1 %71, i64 %74, i64 %75
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %8, i16* %73, i64 %76) #4
  %77 = call zeroext i1 @_ZN5blink24IsSupportedImageMimeTypeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #4
  br i1 %77, label %115, label %78

78:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #4
  %79 = load i8, i8* %48, align 1
  %80 = icmp slt i8 %79, 0
  %81 = load i16*, i16** %62, align 8
  %82 = select i1 %80, i16* %81, i16* %64
  %83 = load i64, i64* %66, align 8
  %84 = zext i8 %79 to i64
  %85 = select i1 %80, i64 %83, i64 %84
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %9, i16* %82, i64 %85) #4
  %86 = load i8, i8* %23, align 1
  %87 = icmp slt i8 %86, 0
  %88 = load i8*, i8** %24, align 8
  %89 = select i1 %87, i8* %88, i8* %21
  %90 = load i64, i64* %25, align 8
  %91 = zext i8 %86 to i64
  %92 = select i1 %87, i64 %90, i64 %91
  %93 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %89, i64 %92, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6, i32 0) #4
  br i1 %93, label %94, label %108

94:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #4
  %95 = load i8, i8* %48, align 1
  %96 = icmp slt i8 %95, 0
  %97 = load i16*, i16** %62, align 8
  %98 = select i1 %96, i16* %97, i16* %64
  %99 = load i64, i64* %66, align 8
  %100 = zext i8 %95 to i64
  %101 = select i1 %96, i64 %99, i64 %100
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i16* %98, i64 %101) #4
  %102 = call zeroext i1 @_ZN5blink27IsSupportedNonImageMimeTypeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #4
  %103 = load i8, i8* %28, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %94
  %106 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %106) #5
  br label %107

107:                                              ; preds = %105, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #4
  br label %108

108:                                              ; preds = %78, %107
  %109 = phi i1 [ %102, %107 ], [ false, %78 ]
  %110 = load i8, i8* %23, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %113) #5
  br label %114

114:                                              ; preds = %108, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #4
  br label %115

115:                                              ; preds = %59, %114
  %116 = phi i1 [ %109, %114 ], [ true, %59 ]
  %117 = load i8, i8* %31, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %120) #5
  br label %121

121:                                              ; preds = %115, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #4
  %122 = load i8, i8* %34, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %125) #5
  br label %126

126:                                              ; preds = %121, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #4
  br i1 %116, label %127, label %193

127:                                              ; preds = %126, %56
  %128 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %45, i64 %44, i32 3, i32 0, i32 0
  %129 = load i32*, i32** %128, align 8
  %130 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %45, i64 %44, i32 3, i32 0, i32 1
  %131 = load i32*, i32** %130, align 8
  %132 = icmp eq i32* %129, %131
  br i1 %132, label %140, label %133

133:                                              ; preds = %127, %137
  %134 = phi i32* [ %138, %137 ], [ %129, %127 ]
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, %5
  br i1 %136, label %140, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds i32, i32* %134, i64 1
  %139 = icmp eq i32* %138, %131
  br i1 %139, label %193, label %133

140:                                              ; preds = %133, %127
  %141 = phi i32* [ %129, %127 ], [ %134, %133 ]
  %142 = icmp eq i32* %141, %131
  br i1 %142, label %193, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %45, i64 %44, i32 2, i32 0, i32 0
  %145 = load %"class.gfx::Size"*, %"class.gfx::Size"** %144, align 8
  %146 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %45, i64 %44, i32 2, i32 0, i32 1
  %147 = load %"class.gfx::Size"*, %"class.gfx::Size"** %146, align 8
  %148 = icmp eq %"class.gfx::Size"* %145, %147
  br i1 %148, label %193, label %149

149:                                              ; preds = %143
  %150 = trunc i64 %44 to i32
  br label %151

151:                                              ; preds = %149, %187
  %152 = phi i32 [ %41, %149 ], [ %190, %187 ]
  %153 = phi i32 [ %42, %149 ], [ %189, %187 ]
  %154 = phi i32 [ %43, %149 ], [ %188, %187 ]
  %155 = phi %"class.gfx::Size"* [ %145, %149 ], [ %191, %187 ]
  %156 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %155, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %187, label %159

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %155, i64 0, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %187, label %163

163:                                              ; preds = %159
  %164 = icmp slt i32 %161, %3
  br i1 %164, label %187, label %165

165:                                              ; preds = %163
  %166 = sitofp i32 %157 to float
  %167 = sitofp i32 %161 to float
  %168 = fdiv float %166, %167
  %169 = fcmp olt float %168, 1.000000e+00
  %170 = fcmp ogt float %168, %4
  %171 = or i1 %169, %170
  br i1 %171, label %187, label %172

172:                                              ; preds = %165
  %173 = icmp eq i32 %161, %2
  br i1 %173, label %187, label %174

174:                                              ; preds = %172
  %175 = sub nsw i32 %161, %2
  %176 = icmp sgt i32 %154, 0
  %177 = icmp slt i32 %175, 0
  %178 = and i1 %176, %177
  br i1 %178, label %187, label %179

179:                                              ; preds = %174
  %180 = icmp slt i32 %175, %154
  %181 = and i1 %176, %180
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = icmp slt i32 %154, 0
  %184 = icmp sgt i32 %175, %154
  %185 = and i1 %183, %184
  br i1 %185, label %186, label %187

186:                                              ; preds = %182, %179
  br label %187

187:                                              ; preds = %172, %159, %151, %165, %182, %186, %174, %163
  %188 = phi i32 [ %154, %163 ], [ %154, %165 ], [ %154, %174 ], [ %175, %186 ], [ %154, %182 ], [ %154, %151 ], [ %154, %159 ], [ 0, %172 ]
  %189 = phi i32 [ %153, %163 ], [ %153, %165 ], [ %153, %174 ], [ %150, %186 ], [ %153, %182 ], [ %153, %151 ], [ %153, %159 ], [ %150, %172 ]
  %190 = phi i32 [ %152, %163 ], [ %152, %165 ], [ %152, %174 ], [ %152, %186 ], [ %152, %182 ], [ %150, %151 ], [ %150, %159 ], [ %152, %172 ]
  %191 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %155, i64 1
  %192 = icmp eq %"class.gfx::Size"* %191, %147
  br i1 %192, label %193, label %151

193:                                              ; preds = %137, %187, %143, %140, %126
  %194 = phi i32 [ %43, %126 ], [ %43, %140 ], [ %43, %143 ], [ %188, %187 ], [ %43, %137 ]
  %195 = phi i32 [ %42, %126 ], [ %42, %140 ], [ %42, %143 ], [ %189, %187 ], [ %42, %137 ]
  %196 = phi i32 [ %41, %126 ], [ %41, %140 ], [ %41, %143 ], [ %190, %187 ], [ %41, %137 ]
  %197 = add nuw i64 %44, 1
  %198 = load i64, i64* %12, align 8
  %199 = load i64, i64* %14, align 8
  %200 = sub i64 %198, %199
  %201 = sdiv exact i64 %200, 192
  %202 = icmp ult i64 %197, %201
  br i1 %202, label %39, label %36

203:                                              ; preds = %36
  %204 = sext i32 %195 to i64
  %205 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %37, i64 %204, i32 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %205) #4
  br label %217

206:                                              ; preds = %36
  %207 = icmp eq i32 %196, -1
  br i1 %207, label %211, label %208

208:                                              ; preds = %206
  %209 = sext i32 %196 to i64
  %210 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %37, i64 %209, i32 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %210) #4
  br label %217

211:                                              ; preds = %206
  %212 = icmp eq i32 %195, -1
  br i1 %212, label %216, label %213

213:                                              ; preds = %211
  %214 = sext i32 %195 to i64
  %215 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %37, i64 %214, i32 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %215) #4
  br label %217

216:                                              ; preds = %6, %211
  call void @_ZN4GURLC1Ev(%class.GURL* %0) #4
  br label %217

217:                                              ; preds = %216, %213, %208, %203
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink24IsSupportedImageMimeTypeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink27IsSupportedNonImageMimeTypeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
