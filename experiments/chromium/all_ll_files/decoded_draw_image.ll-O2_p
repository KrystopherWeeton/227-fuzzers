; ModuleID = '../../cc/paint/decoded_draw_image.cc'
source_filename = "../../cc/paint/decoded_draw_image.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::DecodedDrawImage" = type <{ %class.sk_sp, %"struct.gpu::Mailbox", %"class.absl::optional", %class.sk_sp.7, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%class.sk_sp.7 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%struct.SkSize = type { float, float }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

@_ZN2cc16DecodedDrawImageC1E5sk_spIK7SkImageES1_I13SkColorFilterERK6SkSizeS9_15SkFilterQualityb = hidden unnamed_addr alias void (%"class.cc::DecodedDrawImage"*, %class.sk_sp*, %class.sk_sp.7*, %struct.SkSize*, %struct.SkSize*, i32, i1), void (%"class.cc::DecodedDrawImage"*, %class.sk_sp*, %class.sk_sp.7*, %struct.SkSize*, %struct.SkSize*, i32, i1)* @_ZN2cc16DecodedDrawImageC2E5sk_spIK7SkImageES1_I13SkColorFilterERK6SkSizeS9_15SkFilterQualityb
@_ZN2cc16DecodedDrawImageC1ERKN3gpu7MailboxE15SkFilterQuality = hidden unnamed_addr alias void (%"class.cc::DecodedDrawImage"*, %"struct.gpu::Mailbox"*, i32), void (%"class.cc::DecodedDrawImage"*, %"struct.gpu::Mailbox"*, i32)* @_ZN2cc16DecodedDrawImageC2ERKN3gpu7MailboxE15SkFilterQuality
@_ZN2cc16DecodedDrawImageC1EN4absl8optionalIjEE5sk_spI13SkColorFilterERK6SkSizeS9_15SkFilterQualitybb = hidden unnamed_addr alias void (%"class.cc::DecodedDrawImage"*, i64, %class.sk_sp.7*, %struct.SkSize*, %struct.SkSize*, i32, i1, i1), void (%"class.cc::DecodedDrawImage"*, i64, %class.sk_sp.7*, %struct.SkSize*, %struct.SkSize*, i32, i1, i1)* @_ZN2cc16DecodedDrawImageC2EN4absl8optionalIjEE5sk_spI13SkColorFilterERK6SkSizeS9_15SkFilterQualitybb
@_ZN2cc16DecodedDrawImageC1Ev = hidden unnamed_addr alias void (%"class.cc::DecodedDrawImage"*), void (%"class.cc::DecodedDrawImage"*)* @_ZN2cc16DecodedDrawImageC2Ev
@_ZN2cc16DecodedDrawImageC1ERKS0_ = hidden unnamed_addr alias void (%"class.cc::DecodedDrawImage"*, %"class.cc::DecodedDrawImage"*), void (%"class.cc::DecodedDrawImage"*, %"class.cc::DecodedDrawImage"*)* @_ZN2cc16DecodedDrawImageC2ERKS0_
@_ZN2cc16DecodedDrawImageC1EOS0_ = hidden unnamed_addr alias void (%"class.cc::DecodedDrawImage"*, %"class.cc::DecodedDrawImage"*), void (%"class.cc::DecodedDrawImage"*, %"class.cc::DecodedDrawImage"*)* @_ZN2cc16DecodedDrawImageC2EOS0_
@_ZN2cc16DecodedDrawImageD1Ev = hidden unnamed_addr alias void (%"class.cc::DecodedDrawImage"*), void (%"class.cc::DecodedDrawImage"*)* @_ZN2cc16DecodedDrawImageD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DecodedDrawImageC2E5sk_spIK7SkImageES1_I13SkColorFilterERK6SkSizeS9_15SkFilterQualityb(%"class.cc::DecodedDrawImage"*, %class.sk_sp* nocapture, %class.sk_sp.7* nocapture, %struct.SkSize* nocapture readonly dereferenceable(8), %struct.SkSize* nocapture readonly dereferenceable(8), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = zext i1 %6 to i8
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %10 = bitcast %class.sk_sp* %1 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.SkImage* null, %class.SkImage** %9, align 8
  %12 = bitcast %"class.cc::DecodedDrawImage"* %0 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 1
  tail call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* %13) #4
  %14 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %2, i64 0, i32 0
  %17 = bitcast %class.sk_sp.7* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %16, align 8
  %19 = bitcast %class.sk_sp.7* %15 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 4
  %21 = bitcast %struct.SkSize* %3 to i64*
  %22 = bitcast %struct.SkSize* %20 to i64*
  %23 = load i64, i64* %21, align 4
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 5
  %25 = bitcast %struct.SkSize* %4 to i64*
  %26 = bitcast %struct.SkSize* %24 to i64*
  %27 = load i64, i64* %25, align 4
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 6
  store i32 %5, i32* %28, align 8
  %29 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 7
  store i8 0, i8* %29, align 4
  %30 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 8
  store i8 %8, i8* %30, align 1
  ret void
}

declare void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DecodedDrawImageC2ERKN3gpu7MailboxE15SkFilterQuality(%"class.cc::DecodedDrawImage"* nocapture, %"struct.gpu::Mailbox"* nocapture readonly dereferenceable(16), i32) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 0, i32 0
  store %class.SkImage* null, %class.SkImage** %4, align 8
  %5 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 1, i32 0, i64 0
  %6 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 %6, i64 16, i1 false)
  %7 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 3, i32 0
  %9 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 5
  %10 = bitcast %struct.SkSize* %9 to <2 x float>*
  %11 = bitcast %class.SkColorFilter** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 1.000000e+00>, <2 x float>* %10, align 8
  %12 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 6
  store i32 %2, i32* %12, align 8
  %13 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 7
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 8
  store i8 1, i8* %14, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DecodedDrawImageC2EN4absl8optionalIjEE5sk_spI13SkColorFilterERK6SkSizeS9_15SkFilterQualitybb(%"class.cc::DecodedDrawImage"*, i64, %class.sk_sp.7* nocapture, %struct.SkSize* nocapture readonly dereferenceable(8), %struct.SkSize* nocapture readonly dereferenceable(8), i32, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %9 = zext i1 %6 to i8
  %10 = zext i1 %7 to i8
  %11 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 0, i32 0
  store %class.SkImage* null, %class.SkImage** %11, align 8
  %12 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 1
  tail call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* %12) #4
  %13 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 2
  %14 = bitcast %"class.absl::optional"* %13 to i64*
  store i64 %1, i64* %14, align 8
  %15 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %2, i64 0, i32 0
  %17 = bitcast %class.sk_sp.7* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %16, align 8
  %19 = bitcast %class.sk_sp.7* %15 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 4
  %21 = bitcast %struct.SkSize* %3 to i64*
  %22 = bitcast %struct.SkSize* %20 to i64*
  %23 = load i64, i64* %21, align 4
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 5
  %25 = bitcast %struct.SkSize* %4 to i64*
  %26 = bitcast %struct.SkSize* %24 to i64*
  %27 = load i64, i64* %25, align 4
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 6
  store i32 %5, i32* %28, align 8
  %29 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 7
  store i8 %9, i8* %29, align 4
  %30 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 8
  store i8 %10, i8* %30, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DecodedDrawImageC2Ev(%"class.cc::DecodedDrawImage"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.cc::DecodedDrawImage"* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 1
  tail call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* %3) #4
  %4 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 5
  %7 = bitcast %struct.SkSize* %6 to i64*
  %8 = bitcast %class.sk_sp.7* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  store i64 4575657222473777152, i64* %7, align 8
  %9 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 6
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 7
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 8
  store i8 1, i8* %11, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DecodedDrawImageC2ERKS0_(%"class.cc::DecodedDrawImage"* nocapture, %"class.cc::DecodedDrawImage"* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 0, i32 0
  %5 = load %class.SkImage*, %class.SkImage** %4, align 8
  %6 = icmp eq %class.SkImage* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkImage, %class.SkImage* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkImage* %5, %class.SkImage** %3, align 8
  %11 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 1, i32 0, i64 0
  %12 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 1, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  %13 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 3, i32 0
  %14 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 3, i32 0
  %15 = load %class.SkColorFilter*, %class.SkColorFilter** %14, align 8
  %16 = icmp eq %class.SkColorFilter* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  br label %20

20:                                               ; preds = %10, %17
  store %class.SkColorFilter* %15, %class.SkColorFilter** %13, align 8
  %21 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 4
  %23 = bitcast %struct.SkSize* %21 to i8*
  %24 = bitcast %struct.SkSize* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 22, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DecodedDrawImageC2EOS0_(%"class.cc::DecodedDrawImage"* nocapture, %"class.cc::DecodedDrawImage"* nocapture dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.cc::DecodedDrawImage"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %class.SkImage* null, %class.SkImage** %3, align 8
  %6 = bitcast %"class.cc::DecodedDrawImage"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 1, i32 0, i64 0
  %8 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 1, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 3
  %11 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %10, i64 0, i32 0
  %12 = bitcast %class.sk_sp.7* %10 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %11, align 8
  %14 = bitcast %class.sk_sp.7* %9 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 4
  %17 = bitcast %struct.SkSize* %15 to i8*
  %18 = bitcast %struct.SkSize* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 22, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.cc::DecodedDrawImage"* @_ZN2cc16DecodedDrawImageaSERKS0_(%"class.cc::DecodedDrawImage"* returned, %"class.cc::DecodedDrawImage"* readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.cc::DecodedDrawImage"* %0, %1
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 0, i32 0
  %6 = load %class.SkImage*, %class.SkImage** %5, align 8
  %7 = icmp eq %class.SkImage* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkImage, %class.SkImage* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %8, %4
  %12 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 0, i32 0
  %13 = load %class.SkImage*, %class.SkImage** %12, align 8
  store %class.SkImage* %6, %class.SkImage** %12, align 8
  %14 = icmp eq %class.SkImage* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkImage, %class.SkImage* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %28

19:                                               ; preds = %15
  %20 = bitcast %class.SkImage* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkImage* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #4
  br label %28

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 1, i32 0, i64 0
  %27 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 1, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false)
  br label %51

28:                                               ; preds = %11, %15, %19
  %29 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 1, i32 0, i64 0
  %30 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 1, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false)
  %31 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 3, i32 0
  %32 = load %class.SkColorFilter*, %class.SkColorFilter** %31, align 8
  %33 = icmp eq %class.SkColorFilter* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  br label %37

37:                                               ; preds = %34, %28
  %38 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 3, i32 0
  %39 = load %class.SkColorFilter*, %class.SkColorFilter** %38, align 8
  store %class.SkColorFilter* %32, %class.SkColorFilter** %38, align 8
  %40 = icmp eq %class.SkColorFilter* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %39, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %class.SkColorFilter* %39 to %class.SkRefCntBase*
  %47 = bitcast %class.SkColorFilter* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  tail call void %50(%class.SkRefCntBase* nonnull %46) #4
  br label %51

51:                                               ; preds = %25, %37, %41, %45
  %52 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 4
  %53 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 4
  %54 = bitcast %struct.SkSize* %52 to i8*
  %55 = bitcast %struct.SkSize* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 22, i1 false)
  ret %"class.cc::DecodedDrawImage"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.cc::DecodedDrawImage"* @_ZN2cc16DecodedDrawImageaSEOS0_(%"class.cc::DecodedDrawImage"* returned, %"class.cc::DecodedDrawImage"* nocapture dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.cc::DecodedDrawImage"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %class.SkImage* null, %class.SkImage** %3, align 8
  %6 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 0, i32 0
  %7 = load %class.SkImage*, %class.SkImage** %6, align 8
  %8 = bitcast %"class.cc::DecodedDrawImage"* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq %class.SkImage* %7, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkImage, %class.SkImage* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 -1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = bitcast %class.SkImage* %7 to %class.SkRefCntBase*
  %16 = bitcast %class.SkImage* %7 to void (%class.SkRefCntBase*)***
  %17 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %17, i64 2
  %19 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, align 8
  tail call void %19(%class.SkRefCntBase* nonnull %15) #4
  br label %20

20:                                               ; preds = %2, %10, %14
  %21 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 1, i32 0, i64 0
  %22 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 1, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false)
  %23 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 3
  %25 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %24, i64 0, i32 0
  %26 = bitcast %class.sk_sp.7* %24 to i64*
  %27 = load i64, i64* %26, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %25, align 8
  %28 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %23, i64 0, i32 0
  %29 = load %class.SkColorFilter*, %class.SkColorFilter** %28, align 8
  %30 = bitcast %class.sk_sp.7* %23 to i64*
  store i64 %27, i64* %30, align 8
  %31 = icmp eq %class.SkColorFilter* %29, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %20
  %33 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %class.SkColorFilter* %29 to %class.SkRefCntBase*
  %38 = bitcast %class.SkColorFilter* %29 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #4
  br label %42

42:                                               ; preds = %20, %32, %36
  %43 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 4
  %44 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %1, i64 0, i32 4
  %45 = bitcast %struct.SkSize* %43 to i8*
  %46 = bitcast %struct.SkSize* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 22, i1 false)
  ret %"class.cc::DecodedDrawImage"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DecodedDrawImageD2Ev(%"class.cc::DecodedDrawImage"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 3, i32 0
  %3 = load %class.SkColorFilter*, %class.SkColorFilter** %2, align 8
  %4 = icmp eq %class.SkColorFilter* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %class.SkColorFilter* %3 to %class.SkRefCntBase*
  %11 = bitcast %class.SkColorFilter* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #4
  br label %15

15:                                               ; preds = %1, %5, %9
  %16 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %0, i64 0, i32 0, i32 0
  %17 = load %class.SkImage*, %class.SkImage** %16, align 8
  %18 = icmp eq %class.SkImage* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.SkImage, %class.SkImage* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %class.SkImage* %17 to %class.SkRefCntBase*
  %25 = bitcast %class.SkImage* %17 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  tail call void %28(%class.SkRefCntBase* nonnull %24) #4
  br label %29

29:                                               ; preds = %15, %19, %23
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
