; ModuleID = '../../third_party/cld_3/src/src/script_span/utf8statetable.cc'
source_filename = "../../third_party/cld_3/src/src/script_span/utf8statetable.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj" = type { i32, i32, i32, i32, i32, i32, i32, i32, i8*, %"struct.chrome_lang_id::CLD2::RemapEntry"*, i8*, i8* }
%"struct.chrome_lang_id::CLD2::RemapEntry" = type { i8, i8, i16 }
%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2" = type { i32, i32, i32, i32, i32, i32, i32, i32, i16*, %"struct.chrome_lang_id::CLD2::RemapEntry"*, i8*, i8* }
%"class.chrome_lang_id::StringPiece" = type <{ i8*, i32, [4 x i8] }>
%"class.chrome_lang_id::CLD2::OffsetMap" = type { %"class.std::__1::basic_string", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

@_ZN14chrome_lang_id4CLD2L11kUTF8LenTblE = internal unnamed_addr constant [256 x i8] calign 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i8 @_ZN14chrome_lang_id4CLD219UTF8GenericPropertyEPKNS0_19UTF8StateMachineObjEPPKhPi(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* nocapture readonly, i8** nocapture, i32* nocapture) local_unnamed_addr #0 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %90, label %6

6:                                                ; preds = %3
  %7 = load i8*, i8** %1, align 8
  %8 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 8
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %9, i64 %12
  %14 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = load i8, i8* %7, align 1
  %17 = icmp sgt i8 %16, -1
  br i1 %17, label %75, label %18

18:                                               ; preds = %6
  %19 = zext i8 %16 to i32
  %20 = and i32 %19, 224
  %21 = icmp eq i32 %20, 192
  %22 = icmp sgt i32 %4, 1
  %23 = and i1 %22, %21
  br i1 %23, label %60, label %24

24:                                               ; preds = %18
  %25 = and i32 %19, 240
  %26 = icmp eq i32 %25, 224
  %27 = icmp sgt i32 %4, 2
  %28 = and i1 %27, %26
  br i1 %28, label %44, label %29

29:                                               ; preds = %24
  %30 = and i32 %19, 248
  %31 = icmp eq i32 %30, 240
  %32 = icmp sgt i32 %4, 3
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %83

34:                                               ; preds = %29
  %35 = zext i8 %16 to i64
  %36 = getelementptr inbounds i8, i8* %13, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = shl i32 %38, %15
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %13, i64 %40
  %42 = getelementptr inbounds i8, i8* %7, i64 1
  %43 = load i8, i8* %42, align 1
  br label %44

44:                                               ; preds = %24, %34
  %45 = phi i8 [ %43, %34 ], [ %16, %24 ]
  %46 = phi i8* [ %41, %34 ], [ %13, %24 ]
  %47 = phi i64 [ 2, %34 ], [ 1, %24 ]
  %48 = phi i64 [ 3, %34 ], [ 2, %24 ]
  %49 = phi i64 [ 4, %34 ], [ 3, %24 ]
  %50 = phi i32 [ -4, %34 ], [ -3, %24 ]
  %51 = zext i8 %45 to i64
  %52 = getelementptr inbounds i8, i8* %46, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = shl i32 %54, %15
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %13, i64 %56
  %58 = getelementptr inbounds i8, i8* %7, i64 %47
  %59 = load i8, i8* %58, align 1
  br label %60

60:                                               ; preds = %44, %18
  %61 = phi i8 [ %16, %18 ], [ %59, %44 ]
  %62 = phi i8* [ %13, %18 ], [ %57, %44 ]
  %63 = phi i64 [ 1, %18 ], [ %48, %44 ]
  %64 = phi i64 [ 2, %18 ], [ %49, %44 ]
  %65 = phi i32 [ -2, %18 ], [ %50, %44 ]
  %66 = zext i8 %61 to i64
  %67 = getelementptr inbounds i8, i8* %62, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = shl i32 %69, %15
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %13, i64 %71
  %73 = getelementptr inbounds i8, i8* %7, i64 %63
  %74 = load i8, i8* %73, align 1
  br label %75

75:                                               ; preds = %60, %6
  %76 = phi i8 [ %16, %6 ], [ %74, %60 ]
  %77 = phi i8* [ %13, %6 ], [ %72, %60 ]
  %78 = phi i64 [ 1, %6 ], [ %64, %60 ]
  %79 = phi i32 [ -1, %6 ], [ %65, %60 ]
  %80 = zext i8 %76 to i64
  %81 = getelementptr inbounds i8, i8* %77, i64 %80
  %82 = load i8, i8* %81, align 1
  br label %83

83:                                               ; preds = %75, %29
  %84 = phi i64 [ 1, %29 ], [ %78, %75 ]
  %85 = phi i32 [ -1, %29 ], [ %79, %75 ]
  %86 = phi i8 [ 0, %29 ], [ %82, %75 ]
  %87 = getelementptr inbounds i8, i8* %7, i64 %84
  store i8* %87, i8** %1, align 8
  %88 = load i32, i32* %2, align 4
  %89 = add nsw i32 %88, %85
  store i32 %89, i32* %2, align 4
  br label %90

90:                                               ; preds = %83, %3
  %91 = phi i8 [ 0, %3 ], [ %86, %83 ]
  ret i8 %91
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN14chrome_lang_id4CLD222UTF8HasGenericPropertyERKNS0_19UTF8StateMachineObjEPKc(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* nocapture readonly dereferenceable(64), i8* nocapture readonly) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 8
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds i8, i8* %4, i64 %7
  %9 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = load i8, i8* %1, align 1
  %12 = icmp sgt i8 %11, -1
  br i1 %12, label %55, label %13

13:                                               ; preds = %2
  %14 = zext i8 %11 to i32
  %15 = and i32 %14, 224
  %16 = icmp eq i32 %15, 192
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = zext i8 %11 to i64
  %19 = getelementptr inbounds i8, i8* %8, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  br label %47

22:                                               ; preds = %13
  %23 = and i32 %14, 240
  %24 = icmp eq i32 %23, 224
  %25 = zext i8 %11 to i64
  %26 = getelementptr inbounds i8, i8* %8, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl i32 %28, %10
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %8, i64 %30
  %32 = getelementptr inbounds i8, i8* %1, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i64
  %35 = getelementptr inbounds i8, i8* %31, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl i32 %37, %10
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %8, i64 %39
  %41 = getelementptr inbounds i8, i8* %1, i64 2
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds i8, i8* %40, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  br i1 %24, label %62, label %47

47:                                               ; preds = %22, %17
  %48 = phi i32 [ %21, %17 ], [ %46, %22 ]
  %49 = phi i64 [ 1, %17 ], [ 3, %22 ]
  %50 = shl i32 %48, %10
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %8, i64 %51
  %53 = getelementptr inbounds i8, i8* %1, i64 %49
  %54 = load i8, i8* %53, align 1
  br label %55

55:                                               ; preds = %47, %2
  %56 = phi i8 [ %11, %2 ], [ %54, %47 ]
  %57 = phi i8* [ %8, %2 ], [ %52, %47 ]
  %58 = zext i8 %56 to i64
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  br label %62

62:                                               ; preds = %55, %22
  %63 = phi i32 [ %46, %22 ], [ %61, %55 ]
  %64 = icmp ne i32 %63, 0
  ret i1 %64
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i8 @_ZN14chrome_lang_id4CLD229UTF8GenericPropertyBigOneByteEPKNS0_19UTF8StateMachineObjEPPKhPi(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* nocapture readonly, i8** nocapture, i32* nocapture) local_unnamed_addr #0 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %104, label %6

6:                                                ; preds = %3
  %7 = load i8*, i8** %1, align 8
  %8 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 8
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %9, i64 %12
  %14 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = load i8, i8* %7, align 1
  %17 = icmp sgt i8 %16, -1
  br i1 %17, label %89, label %18

18:                                               ; preds = %6
  %19 = zext i8 %16 to i32
  %20 = and i32 %19, 224
  %21 = icmp eq i32 %20, 192
  %22 = icmp sgt i32 %4, 1
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %29

24:                                               ; preds = %18
  %25 = zext i8 %16 to i64
  %26 = getelementptr inbounds i8, i8* %13, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  br label %78

29:                                               ; preds = %18
  %30 = and i32 %19, 240
  %31 = icmp eq i32 %30, 224
  %32 = icmp sgt i32 %4, 2
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %49

34:                                               ; preds = %29
  %35 = zext i8 %16 to i64
  %36 = getelementptr inbounds i8, i8* %13, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = add nsw i32 %15, 4
  %40 = shl i32 %38, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %13, i64 %41
  %43 = getelementptr inbounds i8, i8* %7, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = getelementptr inbounds i8, i8* %42, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  br label %78

49:                                               ; preds = %29
  %50 = and i32 %19, 248
  %51 = icmp eq i32 %50, 240
  %52 = icmp sgt i32 %4, 3
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %97

54:                                               ; preds = %49
  %55 = zext i8 %16 to i64
  %56 = getelementptr inbounds i8, i8* %13, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = shl i32 %58, %15
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %13, i64 %60
  %62 = getelementptr inbounds i8, i8* %7, i64 1
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i64
  %65 = getelementptr inbounds i8, i8* %61, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = add nsw i32 %15, 4
  %69 = shl i32 %67, %68
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %13, i64 %70
  %72 = getelementptr inbounds i8, i8* %7, i64 2
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i64
  %75 = getelementptr inbounds i8, i8* %71, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  br label %78

78:                                               ; preds = %24, %54, %34
  %79 = phi i32 [ %48, %34 ], [ %77, %54 ], [ %28, %24 ]
  %80 = phi i8* [ %42, %34 ], [ %71, %54 ], [ %13, %24 ]
  %81 = phi i64 [ 2, %34 ], [ 3, %54 ], [ 1, %24 ]
  %82 = phi i64 [ 3, %34 ], [ 4, %54 ], [ 2, %24 ]
  %83 = phi i32 [ -3, %34 ], [ -4, %54 ], [ -2, %24 ]
  %84 = shl i32 %79, %15
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  %87 = getelementptr inbounds i8, i8* %7, i64 %81
  %88 = load i8, i8* %87, align 1
  br label %89

89:                                               ; preds = %78, %6
  %90 = phi i8 [ %16, %6 ], [ %88, %78 ]
  %91 = phi i8* [ %13, %6 ], [ %86, %78 ]
  %92 = phi i64 [ 1, %6 ], [ %82, %78 ]
  %93 = phi i32 [ -1, %6 ], [ %83, %78 ]
  %94 = zext i8 %90 to i64
  %95 = getelementptr inbounds i8, i8* %91, i64 %94
  %96 = load i8, i8* %95, align 1
  br label %97

97:                                               ; preds = %89, %49
  %98 = phi i64 [ 1, %49 ], [ %92, %89 ]
  %99 = phi i32 [ -1, %49 ], [ %93, %89 ]
  %100 = phi i8 [ 0, %49 ], [ %96, %89 ]
  %101 = getelementptr inbounds i8, i8* %7, i64 %98
  store i8* %101, i8** %1, align 8
  %102 = load i32, i32* %2, align 4
  %103 = add nsw i32 %102, %99
  store i32 %103, i32* %2, align 4
  br label %104

104:                                              ; preds = %97, %3
  %105 = phi i8 [ 0, %3 ], [ %100, %97 ]
  ret i8 %105
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN14chrome_lang_id4CLD232UTF8HasGenericPropertyBigOneByteERKNS0_19UTF8StateMachineObjEPKc(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* nocapture readonly dereferenceable(64), i8* nocapture readonly) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 8
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds i8, i8* %4, i64 %7
  %9 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = load i8, i8* %1, align 1
  %12 = icmp sgt i8 %11, -1
  br i1 %12, label %69, label %13

13:                                               ; preds = %2
  %14 = zext i8 %11 to i32
  %15 = and i32 %14, 224
  %16 = icmp eq i32 %15, 192
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = zext i8 %11 to i64
  %19 = getelementptr inbounds i8, i8* %8, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  br label %60

22:                                               ; preds = %13
  %23 = and i32 %14, 240
  %24 = icmp eq i32 %23, 224
  %25 = zext i8 %11 to i64
  %26 = getelementptr inbounds i8, i8* %8, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  br i1 %24, label %29, label %40

29:                                               ; preds = %22
  %30 = add nsw i32 %10, 4
  %31 = shl i32 %28, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %8, i64 %32
  %34 = getelementptr inbounds i8, i8* %1, i64 1
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i64
  %37 = getelementptr inbounds i8, i8* %33, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  br label %60

40:                                               ; preds = %22
  %41 = shl i32 %28, %10
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %8, i64 %42
  %44 = getelementptr inbounds i8, i8* %1, i64 1
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i64
  %47 = getelementptr inbounds i8, i8* %43, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = add nsw i32 %10, 4
  %51 = shl i32 %49, %50
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %8, i64 %52
  %54 = getelementptr inbounds i8, i8* %1, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds i8, i8* %53, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  br label %60

60:                                               ; preds = %29, %40, %17
  %61 = phi i32 [ %21, %17 ], [ %59, %40 ], [ %39, %29 ]
  %62 = phi i8* [ %8, %17 ], [ %53, %40 ], [ %33, %29 ]
  %63 = phi i64 [ 1, %17 ], [ 3, %40 ], [ 2, %29 ]
  %64 = shl i32 %61, %10
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %62, i64 %65
  %67 = getelementptr inbounds i8, i8* %1, i64 %63
  %68 = load i8, i8* %67, align 1
  br label %69

69:                                               ; preds = %60, %2
  %70 = phi i8 [ %11, %2 ], [ %68, %60 ]
  %71 = phi i8* [ %8, %2 ], [ %66, %60 ]
  %72 = zext i8 %70 to i64
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = icmp ne i8 %74, 0
  ret i1 %75
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i8 @_ZN14chrome_lang_id4CLD226UTF8GenericPropertyTwoByteEPKNS0_21UTF8StateMachineObj_2EPPKhPi(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* nocapture readonly, i8** nocapture, i32* nocapture) local_unnamed_addr #0 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %91, label %6

6:                                                ; preds = %3
  %7 = load i8*, i8** %1, align 8
  %8 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, i64 0, i32 8
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i16, i16* %9, i64 %12
  %14 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = load i8, i8* %7, align 1
  %17 = icmp sgt i8 %16, -1
  br i1 %17, label %75, label %18

18:                                               ; preds = %6
  %19 = zext i8 %16 to i32
  %20 = and i32 %19, 224
  %21 = icmp eq i32 %20, 192
  %22 = icmp sgt i32 %4, 1
  %23 = and i1 %22, %21
  br i1 %23, label %60, label %24

24:                                               ; preds = %18
  %25 = and i32 %19, 240
  %26 = icmp eq i32 %25, 224
  %27 = icmp sgt i32 %4, 2
  %28 = and i1 %27, %26
  br i1 %28, label %44, label %29

29:                                               ; preds = %24
  %30 = and i32 %19, 248
  %31 = icmp eq i32 %30, 240
  %32 = icmp sgt i32 %4, 3
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %84

34:                                               ; preds = %29
  %35 = zext i8 %16 to i64
  %36 = getelementptr inbounds i16, i16* %13, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = shl i32 %38, %15
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %13, i64 %40
  %42 = getelementptr inbounds i8, i8* %7, i64 1
  %43 = load i8, i8* %42, align 1
  br label %44

44:                                               ; preds = %24, %34
  %45 = phi i8 [ %43, %34 ], [ %16, %24 ]
  %46 = phi i16* [ %41, %34 ], [ %13, %24 ]
  %47 = phi i64 [ 2, %34 ], [ 1, %24 ]
  %48 = phi i64 [ 3, %34 ], [ 2, %24 ]
  %49 = phi i64 [ 4, %34 ], [ 3, %24 ]
  %50 = phi i32 [ -4, %34 ], [ -3, %24 ]
  %51 = zext i8 %45 to i64
  %52 = getelementptr inbounds i16, i16* %46, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i32
  %55 = shl i32 %54, %15
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %13, i64 %56
  %58 = getelementptr inbounds i8, i8* %7, i64 %47
  %59 = load i8, i8* %58, align 1
  br label %60

60:                                               ; preds = %44, %18
  %61 = phi i8 [ %16, %18 ], [ %59, %44 ]
  %62 = phi i16* [ %13, %18 ], [ %57, %44 ]
  %63 = phi i64 [ 1, %18 ], [ %48, %44 ]
  %64 = phi i64 [ 2, %18 ], [ %49, %44 ]
  %65 = phi i32 [ -2, %18 ], [ %50, %44 ]
  %66 = zext i8 %61 to i64
  %67 = getelementptr inbounds i16, i16* %62, i64 %66
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = shl i32 %69, %15
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i16, i16* %13, i64 %71
  %73 = getelementptr inbounds i8, i8* %7, i64 %63
  %74 = load i8, i8* %73, align 1
  br label %75

75:                                               ; preds = %60, %6
  %76 = phi i8 [ %16, %6 ], [ %74, %60 ]
  %77 = phi i16* [ %13, %6 ], [ %72, %60 ]
  %78 = phi i64 [ 1, %6 ], [ %64, %60 ]
  %79 = phi i32 [ -1, %6 ], [ %65, %60 ]
  %80 = zext i8 %76 to i64
  %81 = getelementptr inbounds i16, i16* %77, i64 %80
  %82 = load i16, i16* %81, align 2
  %83 = trunc i16 %82 to i8
  br label %84

84:                                               ; preds = %75, %29
  %85 = phi i64 [ 1, %29 ], [ %78, %75 ]
  %86 = phi i32 [ -1, %29 ], [ %79, %75 ]
  %87 = phi i8 [ 0, %29 ], [ %83, %75 ]
  %88 = getelementptr inbounds i8, i8* %7, i64 %85
  store i8* %88, i8** %1, align 8
  %89 = load i32, i32* %2, align 4
  %90 = add nsw i32 %89, %86
  store i32 %90, i32* %2, align 4
  br label %91

91:                                               ; preds = %3, %84
  %92 = phi i8 [ %87, %84 ], [ 0, %3 ]
  ret i8 %92
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN14chrome_lang_id4CLD229UTF8HasGenericPropertyTwoByteERKNS0_21UTF8StateMachineObj_2EPKc(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* nocapture readonly dereferenceable(64), i8* nocapture readonly) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, i64 0, i32 8
  %4 = load i16*, i16** %3, align 8
  %5 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds i16, i16* %4, i64 %7
  %9 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = load i8, i8* %1, align 1
  %12 = icmp sgt i8 %11, -1
  br i1 %12, label %55, label %13

13:                                               ; preds = %2
  %14 = zext i8 %11 to i32
  %15 = and i32 %14, 224
  %16 = icmp eq i32 %15, 192
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = zext i8 %11 to i64
  %19 = getelementptr inbounds i16, i16* %8, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  br label %47

22:                                               ; preds = %13
  %23 = and i32 %14, 240
  %24 = icmp eq i32 %23, 224
  %25 = zext i8 %11 to i64
  %26 = getelementptr inbounds i16, i16* %8, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = shl i32 %28, %10
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i16, i16* %8, i64 %30
  %32 = getelementptr inbounds i8, i8* %1, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i64
  %35 = getelementptr inbounds i16, i16* %31, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  %38 = shl i32 %37, %10
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %8, i64 %39
  %41 = getelementptr inbounds i8, i8* %1, i64 2
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds i16, i16* %40, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  br i1 %24, label %62, label %47

47:                                               ; preds = %22, %17
  %48 = phi i32 [ %21, %17 ], [ %46, %22 ]
  %49 = phi i64 [ 1, %17 ], [ 3, %22 ]
  %50 = shl i32 %48, %10
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %8, i64 %51
  %53 = getelementptr inbounds i8, i8* %1, i64 %49
  %54 = load i8, i8* %53, align 1
  br label %55

55:                                               ; preds = %47, %2
  %56 = phi i8 [ %11, %2 ], [ %54, %47 ]
  %57 = phi i16* [ %8, %2 ], [ %52, %47 ]
  %58 = zext i8 %56 to i64
  %59 = getelementptr inbounds i16, i16* %57, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  br label %62

62:                                               ; preds = %55, %22
  %63 = phi i32 [ %46, %22 ], [ %61, %55 ]
  %64 = icmp ne i32 %63, 0
  ret i1 %64
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN14chrome_lang_id4CLD215UTF8GenericScanEPKNS0_19UTF8StateMachineObjERKNS_11StringPieceEPi(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* nocapture readonly, %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), i32* nocapture) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %1, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = getelementptr inbounds i8, i8* %11, i64 -7
  store i32 0, i32* %2, align 4
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %160, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 8
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  %21 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 11
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 7
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 1
  %28 = ptrtoint i8* %20 to i64
  br label %29

29:                                               ; preds = %148, %14
  %30 = phi i8* [ %7, %14 ], [ %149, %148 ]
  %31 = icmp ult i8* %30, %12
  br i1 %31, label %32, label %99

32:                                               ; preds = %29, %97
  %33 = phi i8* [ %39, %97 ], [ %30, %29 ]
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 1
  %36 = getelementptr inbounds i8, i8* %33, i64 4
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 1
  %39 = getelementptr inbounds i8, i8* %33, i64 8
  %40 = sub i32 %35, %24
  %41 = add i32 %35, %26
  %42 = or i32 %40, %41
  %43 = sub i32 %38, %24
  %44 = or i32 %42, %43
  %45 = add i32 %38, %26
  %46 = or i32 %44, %45
  %47 = and i32 %46, -2139062144
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %97, label %49

49:                                               ; preds = %32
  %50 = and i32 %35, 255
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %22, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = getelementptr inbounds i8, i8* %33, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds i8, i8* %22, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = getelementptr inbounds i8, i8* %33, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i64
  %62 = getelementptr inbounds i8, i8* %22, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = getelementptr inbounds i8, i8* %33, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i64
  %67 = getelementptr inbounds i8, i8* %22, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = or i8 %58, %53
  %70 = or i8 %69, %63
  %71 = or i8 %70, %68
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %99

73:                                               ; preds = %49
  %74 = and i32 %38, 255
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %22, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = getelementptr inbounds i8, i8* %33, i64 5
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i64
  %81 = getelementptr inbounds i8, i8* %22, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = getelementptr inbounds i8, i8* %33, i64 6
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds i8, i8* %22, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = getelementptr inbounds i8, i8* %33, i64 7
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds i8, i8* %22, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = or i8 %82, %77
  %94 = or i8 %93, %87
  %95 = or i8 %94, %92
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %32, %73
  %98 = icmp ult i8* %39, %12
  br i1 %98, label %32, label %99

99:                                               ; preds = %97, %73, %49, %29
  %100 = phi i8* [ %30, %29 ], [ %33, %49 ], [ %36, %73 ], [ %39, %97 ]
  %101 = icmp ult i8* %100, %11
  br i1 %101, label %102, label %131

102:                                              ; preds = %99, %111
  %103 = phi i8* [ %115, %111 ], [ %20, %99 ]
  %104 = phi i8* [ %109, %111 ], [ %100, %99 ]
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i64
  %107 = getelementptr inbounds i8, i8* %103, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = getelementptr inbounds i8, i8* %104, i64 1
  %110 = icmp ugt i8 %108, -17
  br i1 %110, label %117, label %111

111:                                              ; preds = %102
  %112 = zext i8 %108 to i32
  %113 = shl i32 %112, %5
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* %20, i64 %114
  %116 = icmp eq i8* %109, %11
  br i1 %116, label %131, label %102

117:                                              ; preds = %102
  %118 = ptrtoint i8* %103 to i64
  %119 = sub i64 %118, %28
  %120 = trunc i64 %119 to i32
  %121 = load i32, i32* %27, align 4
  %122 = icmp ugt i32 %121, %120
  br i1 %122, label %148, label %123

123:                                              ; preds = %117, %127
  %124 = phi i8* [ %125, %127 ], [ %104, %117 ]
  %125 = getelementptr inbounds i8, i8* %124, i64 -1
  %126 = icmp ugt i8* %125, %7
  br i1 %126, label %127, label %148

127:                                              ; preds = %123
  %128 = load i8, i8* %125, align 1
  %129 = and i8 %128, -64
  %130 = icmp eq i8 %129, -128
  br i1 %130, label %123, label %148

131:                                              ; preds = %99, %111
  %132 = phi i8* [ %115, %111 ], [ %20, %99 ]
  %133 = phi i8* [ %11, %111 ], [ %100, %99 ]
  %134 = ptrtoint i8* %132 to i64
  %135 = ptrtoint i8* %20 to i64
  %136 = sub i64 %134, %135
  %137 = trunc i64 %136 to i32
  %138 = load i32, i32* %27, align 4
  %139 = icmp ugt i32 %138, %137
  br i1 %139, label %153, label %140

140:                                              ; preds = %131, %144
  %141 = phi i8* [ %142, %144 ], [ %133, %131 ]
  %142 = getelementptr inbounds i8, i8* %141, i64 -1
  %143 = icmp ugt i8* %142, %7
  br i1 %143, label %144, label %153

144:                                              ; preds = %140
  %145 = load i8, i8* %142, align 1
  %146 = and i8 %145, -64
  %147 = icmp eq i8 %146, -128
  br i1 %147, label %140, label %153

148:                                              ; preds = %123, %127, %117
  %149 = phi i8* [ %104, %117 ], [ %125, %127 ], [ %125, %123 ]
  %150 = icmp eq i8 %108, -3
  br i1 %150, label %29, label %151

151:                                              ; preds = %148
  %152 = zext i8 %108 to i32
  br label %153

153:                                              ; preds = %144, %140, %151, %131
  %154 = phi i8* [ %133, %131 ], [ %149, %151 ], [ %142, %140 ], [ %142, %144 ]
  %155 = phi i32 [ 241, %131 ], [ %152, %151 ], [ 240, %140 ], [ 240, %144 ]
  %156 = ptrtoint i8* %154 to i64
  %157 = ptrtoint i8* %7 to i64
  %158 = sub i64 %156, %157
  %159 = trunc i64 %158 to i32
  store i32 %159, i32* %2, align 4
  br label %160

160:                                              ; preds = %153, %3
  %161 = phi i32 [ 241, %3 ], [ %155, %153 ]
  ret i32 %161
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14chrome_lang_id4CLD224UTF8GenericScanFastAsciiEPKNS0_19UTF8StateMachineObjERKNS_11StringPieceEPi(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* nocapture readonly, %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), i32* nocapture) local_unnamed_addr #3 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.chrome_lang_id::StringPiece", align 8
  %6 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %1, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = getelementptr inbounds i8, i8* %11, i64 -7
  store i32 0, i32* %2, align 4
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %57, label %14

14:                                               ; preds = %3
  %15 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #5
  store i32 -1431655766, i32* %4, align 4
  %16 = ptrtoint i8* %7 to i64
  %17 = bitcast %"class.chrome_lang_id::StringPiece"* %5 to i8*
  %18 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %5, i64 0, i32 0
  %19 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %5, i64 0, i32 1
  %20 = bitcast %"class.chrome_lang_id::StringPiece"* %5 to i8*
  br label %21

21:                                               ; preds = %37, %14
  %22 = phi i8* [ %7, %14 ], [ %51, %37 ]
  %23 = icmp ult i8* %22, %12
  br i1 %23, label %24, label %37

24:                                               ; preds = %21, %34
  %25 = phi i8* [ %35, %34 ], [ %22, %21 ]
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 1
  %28 = getelementptr inbounds i8, i8* %25, i64 4
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 1
  %31 = or i32 %30, %27
  %32 = and i32 %31, -2139062144
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %24
  %35 = getelementptr inbounds i8, i8* %25, i64 8
  %36 = icmp ult i8* %35, %12
  br i1 %36, label %24, label %37

37:                                               ; preds = %24, %34, %21
  %38 = phi i8* [ %22, %21 ], [ %35, %34 ], [ %25, %24 ]
  %39 = ptrtoint i8* %38 to i64
  %40 = sub i64 %39, %16
  %41 = trunc i64 %40 to i32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %42 = load i8*, i8** %6, align 8
  %43 = shl i64 %40, 32
  %44 = ashr exact i64 %43, 32
  %45 = getelementptr inbounds i8, i8* %42, i64 %44
  %46 = load i32, i32* %8, align 8
  %47 = sub nsw i32 %46, %41
  store i8* %45, i8** %18, align 8
  store i32 %47, i32* %19, align 8
  %48 = call i32 @_ZN14chrome_lang_id4CLD215UTF8GenericScanEPKNS0_19UTF8StateMachineObjERKNS_11StringPieceEPi(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, %"class.chrome_lang_id::StringPiece"* nonnull dereferenceable(16) %5, i32* nonnull %4)
  %49 = load i32, i32* %4, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %38, i64 %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #5
  %52 = icmp eq i32 %48, 253
  br i1 %52, label %21, label %53

53:                                               ; preds = %37
  %54 = ptrtoint i8* %51 to i64
  %55 = sub i64 %54, %16
  %56 = trunc i64 %55 to i32
  store i32 %56, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #5
  br label %57

57:                                               ; preds = %3, %53
  %58 = phi i32 [ %48, %53 ], [ 241, %3 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14chrome_lang_id4CLD218UTF8GenericReplaceEPKNS0_19UTF8StateMachineObjERKNS_11StringPieceERS4_bPiS8_S8_PNS0_9OffsetMapE(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* nocapture readonly, %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), i1 zeroext, i32* nocapture, i32* nocapture, i32* nocapture, %"class.chrome_lang_id::CLD2::OffsetMap"*) local_unnamed_addr #3 {
  %9 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %1, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %2, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 8
  %19 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 9
  %22 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, i64 0, i32 10
  %23 = icmp eq %"class.chrome_lang_id::CLD2::OffsetMap"* %7, null
  %24 = icmp ne %"class.chrome_lang_id::CLD2::OffsetMap"* %7, null
  br label %25

25:                                               ; preds = %425, %8
  %26 = phi i8* [ %10, %8 ], [ %431, %425 ]
  %27 = phi i32 [ %12, %8 ], [ %432, %425 ]
  %28 = phi i32 [ %16, %8 ], [ %435, %425 ]
  %29 = phi i8* [ %14, %8 ], [ %434, %425 ]
  %30 = phi i32 [ 0, %8 ], [ %436, %425 ]
  %31 = phi i32 [ 0, %8 ], [ %437, %425 ]
  %32 = phi i32 [ 0, %8 ], [ %438, %425 ]
  %33 = load i32, i32* %17, align 8
  %34 = shl i32 1, %33
  %35 = ptrtoint i8* %26 to i64
  %36 = sext i32 %27 to i64
  %37 = getelementptr inbounds i8, i8* %26, i64 %36
  %38 = ptrtoint i8* %29 to i64
  %39 = sext i32 %28 to i64
  %40 = getelementptr inbounds i8, i8* %29, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = ptrtoint i8* %37 to i64
  %43 = icmp sgt i32 %27, %28
  br i1 %43, label %44, label %46

44:                                               ; preds = %25
  br i1 %23, label %425, label %45

45:                                               ; preds = %44
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 0) #5
  br label %425

46:                                               ; preds = %25
  %47 = load i8*, i8** %18, align 8
  %48 = load i32, i32* %19, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %47, i64 %49
  %51 = icmp eq i32 %33, 8
  %52 = shl i32 %34, 1
  %53 = shl i32 3, %33
  br label %54

54:                                               ; preds = %367, %46
  %55 = phi i64 [ %35, %46 ], [ %102, %367 ]
  %56 = phi i64 [ %38, %46 ], [ %368, %367 ]
  %57 = phi i8* [ %26, %46 ], [ %369, %367 ]
  %58 = phi i32 [ 0, %46 ], [ %370, %367 ]
  %59 = phi i8* [ %50, %46 ], [ %371, %367 ]
  %60 = phi i32 [ 0, %46 ], [ %372, %367 ]
  %61 = phi i8 [ 0, %46 ], [ %373, %367 ]
  br label %62

62:                                               ; preds = %203, %54
  %63 = phi i64 [ %55, %54 ], [ %102, %203 ]
  %64 = phi i64 [ %56, %54 ], [ %101, %203 ]
  %65 = phi i32 [ %58, %54 ], [ %204, %203 ]
  %66 = phi i8* [ %59, %54 ], [ %50, %203 ]
  %67 = phi i32 [ %60, %54 ], [ 0, %203 ]
  %68 = phi i8 [ %61, %54 ], [ 0, %203 ]
  %69 = inttoptr i64 %63 to i8*
  %70 = icmp ugt i8* %37, %69
  br i1 %70, label %71, label %96

71:                                               ; preds = %62
  %72 = inttoptr i64 %64 to i8*
  br label %73

73:                                               ; preds = %85, %71
  %74 = phi i8* [ %81, %85 ], [ %69, %71 ]
  %75 = phi i8* [ %88, %85 ], [ %66, %71 ]
  %76 = phi i8* [ %82, %85 ], [ %72, %71 ]
  %77 = load i8, i8* %74, align 1
  %78 = zext i8 %77 to i64
  %79 = getelementptr inbounds i8, i8* %75, i64 %78
  %80 = load i8, i8* %79, align 1
  store i8 %77, i8* %76, align 1
  %81 = getelementptr inbounds i8, i8* %74, i64 1
  %82 = getelementptr inbounds i8, i8* %76, i64 1
  %83 = icmp ugt i8 %80, -17
  %84 = zext i8 %80 to i32
  br i1 %83, label %90, label %85

85:                                               ; preds = %73
  %86 = shl i32 %84, %33
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %50, i64 %87
  %89 = icmp eq i8* %81, %37
  br i1 %89, label %94, label %73

90:                                               ; preds = %73
  %91 = zext i8 %80 to i32
  %92 = ptrtoint i8* %81 to i64
  %93 = ptrtoint i8* %82 to i64
  br label %98

94:                                               ; preds = %85
  %95 = ptrtoint i8* %82 to i64
  br label %374

96:                                               ; preds = %62
  %97 = icmp ugt i32 %67, 239
  br i1 %97, label %98, label %374

98:                                               ; preds = %96, %90
  %99 = phi i8 [ %77, %90 ], [ %68, %96 ]
  %100 = phi i32 [ %91, %90 ], [ %67, %96 ]
  %101 = phi i64 [ %93, %90 ], [ %64, %96 ]
  %102 = phi i64 [ %92, %90 ], [ %63, %96 ]
  %103 = phi i8* [ %75, %90 ], [ %66, %96 ]
  switch i32 %100, label %329 [
    i32 247, label %104
    i32 248, label %123
    i32 246, label %147
    i32 245, label %166
    i32 244, label %174
    i32 243, label %185
    i32 251, label %196
    i32 250, label %205
    i32 252, label %232
    i32 249, label %232
  ]

104:                                              ; preds = %98
  %105 = inttoptr i64 %101 to i8*
  %106 = getelementptr inbounds i8, i8* %105, i64 -2
  %107 = ptrtoint i8* %106 to i64
  br i1 %23, label %114, label %108

108:                                              ; preds = %104
  %109 = ptrtoint i8* %57 to i64
  %110 = sub i64 %102, %109
  %111 = trunc i64 %110 to i32
  %112 = add i32 %111, -2
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %112) #5
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap6DeleteEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 2) #5
  %113 = inttoptr i64 %102 to i8*
  br label %114

114:                                              ; preds = %108, %104
  %115 = phi i8* [ %113, %108 ], [ %57, %104 ]
  %116 = zext i8 %99 to i32
  %117 = add nsw i32 %34, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* %103, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = getelementptr inbounds i8, i8* %105, i64 -3
  store i8 %120, i8* %121, align 1
  %122 = add nsw i32 %65, 1
  br label %367

123:                                              ; preds = %98
  %124 = inttoptr i64 %101 to i8*
  %125 = getelementptr inbounds i8, i8* %124, i64 -1
  %126 = ptrtoint i8* %125 to i64
  br i1 %23, label %133, label %127

127:                                              ; preds = %123
  %128 = ptrtoint i8* %57 to i64
  %129 = xor i64 %128, 4294967295
  %130 = add i64 %102, %129
  %131 = trunc i64 %130 to i32
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %131) #5
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap6DeleteEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 1) #5
  %132 = inttoptr i64 %102 to i8*
  br label %133

133:                                              ; preds = %127, %123
  %134 = phi i8* [ %132, %127 ], [ %57, %123 ]
  %135 = zext i8 %99 to i32
  %136 = add nsw i32 %52, %135
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %103, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = getelementptr inbounds i8, i8* %124, i64 -3
  store i8 %139, i8* %140, align 1
  %141 = add nsw i32 %34, %135
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %103, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = getelementptr inbounds i8, i8* %124, i64 -2
  store i8 %144, i8* %145, align 1
  %146 = add nsw i32 %65, 1
  br label %367

147:                                              ; preds = %98
  %148 = inttoptr i64 %101 to i8*
  %149 = getelementptr inbounds i8, i8* %148, i64 -1
  %150 = ptrtoint i8* %149 to i64
  br i1 %23, label %157, label %151

151:                                              ; preds = %147
  %152 = ptrtoint i8* %57 to i64
  %153 = xor i64 %152, 4294967295
  %154 = add i64 %102, %153
  %155 = trunc i64 %154 to i32
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %155) #5
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap6DeleteEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 1) #5
  %156 = inttoptr i64 %102 to i8*
  br label %157

157:                                              ; preds = %151, %147
  %158 = phi i8* [ %156, %151 ], [ %57, %147 ]
  %159 = zext i8 %99 to i32
  %160 = add nsw i32 %34, %159
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %103, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = getelementptr inbounds i8, i8* %148, i64 -2
  store i8 %163, i8* %164, align 1
  %165 = add nsw i32 %65, 1
  br label %367

166:                                              ; preds = %98
  %167 = zext i8 %99 to i32
  %168 = add nsw i32 %53, %167
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i8, i8* %103, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = inttoptr i64 %101 to i8*
  %173 = getelementptr inbounds i8, i8* %172, i64 -3
  store i8 %171, i8* %173, align 1
  br label %177

174:                                              ; preds = %98
  %175 = zext i8 %99 to i32
  %176 = inttoptr i64 %101 to i8*
  br label %177

177:                                              ; preds = %174, %166
  %178 = phi i8* [ %176, %174 ], [ %172, %166 ]
  %179 = phi i32 [ %175, %174 ], [ %167, %166 ]
  %180 = add nsw i32 %179, %52
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds i8, i8* %103, i64 %181
  %183 = load i8, i8* %182, align 1
  %184 = getelementptr inbounds i8, i8* %178, i64 -2
  store i8 %183, i8* %184, align 1
  br label %188

185:                                              ; preds = %98
  %186 = zext i8 %99 to i32
  %187 = inttoptr i64 %101 to i8*
  br label %188

188:                                              ; preds = %185, %177
  %189 = phi i8* [ %187, %185 ], [ %178, %177 ]
  %190 = phi i32 [ %186, %185 ], [ %179, %177 ]
  %191 = add nsw i32 %190, %34
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i8, i8* %103, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = getelementptr inbounds i8, i8* %189, i64 -1
  store i8 %194, i8* %195, align 1
  br label %203

196:                                              ; preds = %98
  %197 = zext i8 %99 to i64
  %198 = or i64 %197, 256
  %199 = getelementptr inbounds i8, i8* %103, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = inttoptr i64 %101 to i8*
  %202 = getelementptr inbounds i8, i8* %201, i64 -1
  store i8 %200, i8* %202, align 1
  br label %203

203:                                              ; preds = %196, %188
  %204 = add nsw i32 %65, 1
  br label %62

205:                                              ; preds = %98
  br i1 %51, label %224, label %206

206:                                              ; preds = %205
  %207 = load i8*, i8** %18, align 8
  %208 = load i32, i32* %19, align 8
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds i8, i8* %207, i64 %209
  %211 = ptrtoint i8* %103 to i64
  %212 = ptrtoint i8* %210 to i64
  %213 = sub i64 %211, %212
  %214 = trunc i64 %213 to i32
  %215 = load i32, i32* %20, align 4
  %216 = icmp ugt i32 %215, %214
  br i1 %216, label %217, label %224

217:                                              ; preds = %206
  %218 = zext i8 %99 to i64
  %219 = or i64 %218, 512
  %220 = getelementptr inbounds i8, i8* %103, i64 %219
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i32
  %223 = shl nuw nsw i32 %222, 8
  br label %240

224:                                              ; preds = %206, %205
  %225 = zext i8 %99 to i32
  %226 = add nsw i32 %52, %225
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i8, i8* %103, i64 %227
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = shl nuw nsw i32 %230, 8
  br label %232

232:                                              ; preds = %98, %98, %224
  %233 = phi i32 [ %231, %224 ], [ 0, %98 ], [ 0, %98 ]
  br i1 %51, label %254, label %234

234:                                              ; preds = %232
  %235 = load i8*, i8** %18, align 8
  %236 = load i32, i32* %19, align 8
  %237 = load i32, i32* %20, align 4
  %238 = zext i32 %236 to i64
  %239 = ptrtoint i8* %103 to i64
  br label %240

240:                                              ; preds = %234, %217
  %241 = phi i64 [ %239, %234 ], [ %211, %217 ]
  %242 = phi i64 [ %238, %234 ], [ %209, %217 ]
  %243 = phi i32 [ %237, %234 ], [ %215, %217 ]
  %244 = phi i8* [ %235, %234 ], [ %207, %217 ]
  %245 = phi i32 [ %233, %234 ], [ %223, %217 ]
  %246 = getelementptr inbounds i8, i8* %244, i64 %242
  %247 = ptrtoint i8* %246 to i64
  %248 = sub i64 %241, %247
  %249 = trunc i64 %248 to i32
  %250 = icmp ugt i32 %243, %249
  br i1 %250, label %251, label %254

251:                                              ; preds = %240
  %252 = zext i8 %99 to i64
  %253 = or i64 %252, 256
  br label %259

254:                                              ; preds = %240, %232
  %255 = phi i32 [ %233, %232 ], [ %245, %240 ]
  %256 = zext i8 %99 to i32
  %257 = add nsw i32 %34, %256
  %258 = sext i32 %257 to i64
  br label %259

259:                                              ; preds = %254, %251
  %260 = phi i32 [ %245, %251 ], [ %255, %254 ]
  %261 = phi i64 [ %253, %251 ], [ %258, %254 ]
  %262 = getelementptr inbounds i8, i8* %103, i64 %261
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i32
  %265 = or i32 %260, %264
  %266 = load %"struct.chrome_lang_id::CLD2::RemapEntry"*, %"struct.chrome_lang_id::CLD2::RemapEntry"** %21, align 8
  %267 = sext i32 %265 to i64
  %268 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %266, i64 %267
  %269 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %268, i64 0, i32 0
  %270 = load i8, i8* %269, align 2
  %271 = and i8 %270, 127
  %272 = zext i8 %271 to i32
  %273 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %266, i64 %267, i32 1
  %274 = load i8, i8* %273, align 1
  %275 = icmp sgt i8 %274, -1
  %276 = or i1 %275, %3
  br i1 %276, label %283, label %277

277:                                              ; preds = %259
  %278 = add nsw i32 %265, 1
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %266, i64 %279
  %281 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %266, i64 %279, i32 1
  %282 = load i8, i8* %281, align 1
  br label %283

283:                                              ; preds = %277, %259
  %284 = phi %"struct.chrome_lang_id::CLD2::RemapEntry"* [ %280, %277 ], [ %268, %259 ]
  %285 = phi i8 [ %282, %277 ], [ %274, %259 ]
  %286 = and i8 %285, 127
  %287 = zext i8 %286 to i32
  %288 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %284, i64 0, i32 2
  %289 = load i16, i16* %288, align 2
  %290 = zext i16 %289 to i32
  %291 = inttoptr i64 %101 to i8*
  %292 = zext i8 %271 to i64
  %293 = sub nsw i64 0, %292
  %294 = getelementptr inbounds i8, i8* %291, i64 %293
  %295 = zext i8 %286 to i64
  %296 = getelementptr inbounds i8, i8* %294, i64 %295
  %297 = ptrtoint i8* %296 to i64
  %298 = sub i64 %41, %297
  %299 = sub i64 %42, %102
  %300 = icmp slt i64 %298, %299
  br i1 %300, label %329, label %301

301:                                              ; preds = %283
  %302 = load i8*, i8** %22, align 8
  %303 = zext i16 %289 to i64
  %304 = getelementptr inbounds i8, i8* %302, i64 %303
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %304, i64 %295, i1 false) #5
  %305 = add nsw i32 %65, 1
  br i1 %23, label %324, label %306

306:                                              ; preds = %301
  %307 = icmp ugt i8 %286, %271
  br i1 %307, label %308, label %314

308:                                              ; preds = %306
  %309 = ptrtoint i8* %57 to i64
  %310 = sub i64 %102, %309
  %311 = trunc i64 %310 to i32
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %311) #5
  %312 = sub nsw i32 %287, %272
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap6InsertEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %312) #5
  %313 = inttoptr i64 %102 to i8*
  br label %324

314:                                              ; preds = %306
  %315 = icmp ult i8 %286, %271
  br i1 %315, label %316, label %324

316:                                              ; preds = %314
  %317 = ptrtoint i8* %57 to i64
  %318 = sub i64 %102, %317
  %319 = sub i64 %318, %292
  %320 = add i64 %319, %295
  %321 = trunc i64 %320 to i32
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %321) #5
  %322 = sub nsw i32 %272, %287
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap6DeleteEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %322) #5
  %323 = inttoptr i64 %102 to i8*
  br label %324

324:                                              ; preds = %316, %314, %308, %301
  %325 = phi i8* [ %313, %308 ], [ %323, %316 ], [ %57, %314 ], [ %57, %301 ]
  %326 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %284, i64 0, i32 0
  %327 = load i8, i8* %326, align 2
  %328 = icmp slt i8 %327, 0
  br i1 %328, label %357, label %423

329:                                              ; preds = %283, %98
  %330 = phi i32 [ %100, %98 ], [ 239, %283 ]
  %331 = inttoptr i64 %101 to i8*
  %332 = inttoptr i64 %102 to i8*
  %333 = getelementptr inbounds i8, i8* %332, i64 -1
  %334 = ptrtoint i8* %333 to i64
  %335 = getelementptr inbounds i8, i8* %331, i64 -1
  %336 = ptrtoint i8* %335 to i64
  %337 = load i8*, i8** %18, align 8
  %338 = load i32, i32* %19, align 8
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds i8, i8* %337, i64 %339
  %341 = ptrtoint i8* %103 to i64
  %342 = ptrtoint i8* %340 to i64
  %343 = sub i64 %341, %342
  %344 = trunc i64 %343 to i32
  %345 = load i32, i32* %20, align 4
  %346 = icmp ugt i32 %345, %344
  br i1 %346, label %407, label %347

347:                                              ; preds = %329, %353
  %348 = phi i8* [ %350, %353 ], [ %333, %329 ]
  %349 = phi i8* [ %351, %353 ], [ %335, %329 ]
  %350 = getelementptr inbounds i8, i8* %348, i64 -1
  %351 = getelementptr inbounds i8, i8* %349, i64 -1
  %352 = icmp ugt i8* %350, %26
  br i1 %352, label %353, label %401

353:                                              ; preds = %347
  %354 = load i8, i8* %350, align 1
  %355 = and i8 %354, -64
  %356 = icmp eq i8 %355, -128
  br i1 %356, label %347, label %401

357:                                              ; preds = %324
  %358 = load i8*, i8** %22, align 8
  %359 = add nuw nsw i32 %287, %290
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds i8, i8* %358, i64 %360
  %362 = load i8, i8* %361, align 1
  %363 = zext i8 %362 to i32
  %364 = shl i32 %363, %33
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds i8, i8* %50, i64 %365
  br label %367

367:                                              ; preds = %357, %423, %157, %133, %114
  %368 = phi i64 [ %107, %114 ], [ %126, %133 ], [ %150, %157 ], [ %424, %423 ], [ %297, %357 ]
  %369 = phi i8* [ %115, %114 ], [ %134, %133 ], [ %158, %157 ], [ %325, %423 ], [ %325, %357 ]
  %370 = phi i32 [ %122, %114 ], [ %146, %133 ], [ %165, %157 ], [ %305, %423 ], [ %305, %357 ]
  %371 = phi i8* [ %50, %114 ], [ %50, %133 ], [ %50, %157 ], [ %50, %423 ], [ %366, %357 ]
  %372 = phi i32 [ 0, %114 ], [ 0, %133 ], [ 0, %157 ], [ 0, %423 ], [ %363, %357 ]
  %373 = phi i8 [ 0, %114 ], [ 0, %133 ], [ 0, %157 ], [ 0, %423 ], [ %99, %357 ]
  br label %54

374:                                              ; preds = %96, %94
  %375 = phi i64 [ %95, %94 ], [ %64, %96 ]
  %376 = phi i64 [ %42, %94 ], [ %63, %96 ]
  %377 = phi i8* [ %88, %94 ], [ %66, %96 ]
  %378 = load i8*, i8** %18, align 8
  %379 = load i32, i32* %19, align 8
  %380 = zext i32 %379 to i64
  %381 = getelementptr inbounds i8, i8* %378, i64 %380
  %382 = ptrtoint i8* %377 to i64
  %383 = ptrtoint i8* %381 to i64
  %384 = sub i64 %382, %383
  %385 = trunc i64 %384 to i32
  %386 = load i32, i32* %20, align 4
  %387 = icmp ugt i32 %386, %385
  br i1 %387, label %407, label %388

388:                                              ; preds = %374
  %389 = inttoptr i64 %376 to i8*
  %390 = inttoptr i64 %375 to i8*
  br label %391

391:                                              ; preds = %397, %388
  %392 = phi i8* [ %394, %397 ], [ %389, %388 ]
  %393 = phi i8* [ %395, %397 ], [ %390, %388 ]
  %394 = getelementptr inbounds i8, i8* %392, i64 -1
  %395 = getelementptr inbounds i8, i8* %393, i64 -1
  %396 = icmp ugt i8* %394, %26
  br i1 %396, label %397, label %404

397:                                              ; preds = %391
  %398 = load i8, i8* %394, align 1
  %399 = and i8 %398, -64
  %400 = icmp eq i8 %399, -128
  br i1 %400, label %391, label %404

401:                                              ; preds = %353, %347
  %402 = ptrtoint i8* %350 to i64
  %403 = ptrtoint i8* %351 to i64
  br label %407

404:                                              ; preds = %397, %391
  %405 = ptrtoint i8* %394 to i64
  %406 = ptrtoint i8* %395 to i64
  br label %407

407:                                              ; preds = %404, %401, %374, %329
  %408 = phi i64 [ %376, %374 ], [ %334, %329 ], [ %402, %401 ], [ %405, %404 ]
  %409 = phi i64 [ %375, %374 ], [ %336, %329 ], [ %403, %401 ], [ %406, %404 ]
  %410 = phi i32 [ 241, %374 ], [ %330, %329 ], [ %330, %401 ], [ 240, %404 ]
  %411 = inttoptr i64 %408 to i8*
  %412 = icmp ult i8* %57, %411
  %413 = and i1 %24, %412
  br i1 %413, label %414, label %418

414:                                              ; preds = %407
  %415 = ptrtoint i8* %57 to i64
  %416 = sub i64 %408, %415
  %417 = trunc i64 %416 to i32
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %417) #5
  br label %418

418:                                              ; preds = %414, %407
  %419 = sub i64 %408, %35
  %420 = trunc i64 %419 to i32
  %421 = sub i64 %409, %38
  %422 = trunc i64 %421 to i32
  br label %425

423:                                              ; preds = %324
  %424 = ptrtoint i8* %296 to i64
  br label %367

425:                                              ; preds = %44, %45, %418
  %426 = phi i32 [ 0, %44 ], [ 0, %45 ], [ %420, %418 ]
  %427 = phi i32 [ 0, %44 ], [ 0, %45 ], [ %422, %418 ]
  %428 = phi i32 [ 0, %44 ], [ 0, %45 ], [ %65, %418 ]
  %429 = phi i32 [ 239, %44 ], [ 239, %45 ], [ %410, %418 ]
  %430 = sext i32 %426 to i64
  %431 = getelementptr inbounds i8, i8* %26, i64 %430
  %432 = sub nsw i32 %27, %426
  %433 = sext i32 %427 to i64
  %434 = getelementptr inbounds i8, i8* %29, i64 %433
  %435 = sub nsw i32 %28, %427
  %436 = add nsw i32 %426, %30
  %437 = add nsw i32 %427, %31
  %438 = add nsw i32 %428, %32
  %439 = icmp eq i32 %429, 253
  br i1 %439, label %25, label %440

440:                                              ; preds = %425
  store i32 %436, i32* %4, align 4
  store i32 %437, i32* %5, align 4
  store i32 %438, i32* %6, align 4
  ret i32 %429
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14chrome_lang_id4CLD218UTF8GenericReplaceEPKNS0_19UTF8StateMachineObjERKNS_11StringPieceERS4_bPiS8_S8_(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* nocapture readonly, %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), i1 zeroext, i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3 {
  %8 = tail call i32 @_ZN14chrome_lang_id4CLD218UTF8GenericReplaceEPKNS0_19UTF8StateMachineObjERKNS_11StringPieceERS4_bPiS8_S8_PNS0_9OffsetMapE(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, %"class.chrome_lang_id::StringPiece"* dereferenceable(16) %1, %"class.chrome_lang_id::StringPiece"* dereferenceable(16) %2, i1 zeroext %3, i32* %4, i32* %5, i32* %6, %"class.chrome_lang_id::CLD2::OffsetMap"* null)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14chrome_lang_id4CLD218UTF8GenericReplaceEPKNS0_19UTF8StateMachineObjERKNS_11StringPieceERS4_PiS8_S8_(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* nocapture readonly, %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3 {
  %7 = tail call i32 @_ZN14chrome_lang_id4CLD218UTF8GenericReplaceEPKNS0_19UTF8StateMachineObjERKNS_11StringPieceERS4_bPiS8_S8_PNS0_9OffsetMapE(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj"* %0, %"class.chrome_lang_id::StringPiece"* dereferenceable(16) %1, %"class.chrome_lang_id::StringPiece"* dereferenceable(16) %2, i1 zeroext false, i32* %3, i32* %4, i32* %5, %"class.chrome_lang_id::CLD2::OffsetMap"* null)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14chrome_lang_id4CLD225UTF8GenericReplaceTwoByteEPKNS0_21UTF8StateMachineObj_2ERKNS_11StringPieceERS4_bPiS8_S8_PNS0_9OffsetMapE(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* nocapture readonly, %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), i1 zeroext, i32* nocapture, i32* nocapture, i32* nocapture, %"class.chrome_lang_id::CLD2::OffsetMap"*) local_unnamed_addr #3 {
  %9 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %1, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %2, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, i64 0, i32 8
  %19 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, i64 0, i32 9
  %22 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2", %"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, i64 0, i32 10
  %23 = icmp eq %"class.chrome_lang_id::CLD2::OffsetMap"* %7, null
  %24 = icmp ne %"class.chrome_lang_id::CLD2::OffsetMap"* %7, null
  br label %25

25:                                               ; preds = %384, %8
  %26 = phi i8* [ %10, %8 ], [ %390, %384 ]
  %27 = phi i32 [ %12, %8 ], [ %391, %384 ]
  %28 = phi i32 [ %16, %8 ], [ %394, %384 ]
  %29 = phi i8* [ %14, %8 ], [ %393, %384 ]
  %30 = phi i32 [ 0, %8 ], [ %395, %384 ]
  %31 = phi i32 [ 0, %8 ], [ %396, %384 ]
  %32 = phi i32 [ 0, %8 ], [ %397, %384 ]
  %33 = load i32, i32* %17, align 8
  %34 = shl i32 1, %33
  %35 = sext i32 %27 to i64
  %36 = getelementptr inbounds i8, i8* %26, i64 %35
  %37 = sext i32 %28 to i64
  %38 = getelementptr inbounds i8, i8* %29, i64 %37
  %39 = ptrtoint i8* %38 to i64
  %40 = ptrtoint i8* %29 to i64
  %41 = ptrtoint i8* %36 to i64
  %42 = ptrtoint i8* %26 to i64
  %43 = icmp slt i32 %28, %27
  br i1 %43, label %44, label %46

44:                                               ; preds = %25
  br i1 %23, label %384, label %45

45:                                               ; preds = %44
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 0) #5
  br label %384

46:                                               ; preds = %25
  %47 = load i16*, i16** %18, align 8
  %48 = load i32, i32* %19, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i16, i16* %47, i64 %49
  %51 = icmp eq i32 %33, 8
  %52 = shl i32 %34, 1
  br label %53

53:                                               ; preds = %327, %46
  %54 = phi i8* [ %26, %46 ], [ %328, %327 ]
  %55 = phi i8* [ %26, %46 ], [ %87, %327 ]
  %56 = phi i8* [ %29, %46 ], [ %329, %327 ]
  %57 = phi i32 [ 0, %46 ], [ %333, %327 ]
  %58 = phi i16* [ %50, %46 ], [ %330, %327 ]
  %59 = phi i32 [ 0, %46 ], [ %331, %327 ]
  %60 = phi i8 [ 0, %46 ], [ %332, %327 ]
  %61 = icmp ult i8* %55, %36
  br i1 %61, label %62, label %79

62:                                               ; preds = %53, %74
  %63 = phi i16* [ %77, %74 ], [ %58, %53 ]
  %64 = phi i8* [ %71, %74 ], [ %56, %53 ]
  %65 = phi i8* [ %70, %74 ], [ %55, %53 ]
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = getelementptr inbounds i16, i16* %63, i64 %67
  %69 = load i16, i16* %68, align 2
  store i8 %66, i8* %64, align 1
  %70 = getelementptr inbounds i8, i8* %65, i64 1
  %71 = getelementptr inbounds i8, i8* %64, i64 1
  %72 = icmp slt i16 %69, 0
  %73 = zext i16 %69 to i32
  br i1 %72, label %81, label %74

74:                                               ; preds = %62
  %75 = shl i32 %73, %33
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i16, i16* %50, i64 %76
  %78 = icmp eq i8* %70, %36
  br i1 %78, label %334, label %62

79:                                               ; preds = %53
  %80 = icmp sgt i32 %59, 32767
  br i1 %80, label %83, label %334

81:                                               ; preds = %62
  %82 = zext i16 %69 to i32
  br label %83

83:                                               ; preds = %81, %79
  %84 = phi i8 [ %60, %79 ], [ %66, %81 ]
  %85 = phi i32 [ %59, %79 ], [ %82, %81 ]
  %86 = phi i8* [ %56, %79 ], [ %71, %81 ]
  %87 = phi i8* [ %55, %79 ], [ %70, %81 ]
  %88 = phi i16* [ %58, %79 ], [ %63, %81 ]
  switch i32 %85, label %285 [
    i32 32775, label %89
    i32 32776, label %103
    i32 32774, label %121
    i32 32773, label %135
    i32 32772, label %143
    i32 32771, label %154
    i32 32779, label %161
    i32 32778, label %165
    i32 32777, label %191
  ]

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %86, i64 -2
  br i1 %23, label %97, label %91

91:                                               ; preds = %89
  %92 = ptrtoint i8* %87 to i64
  %93 = ptrtoint i8* %54 to i64
  %94 = sub i64 %92, %93
  %95 = trunc i64 %94 to i32
  %96 = add i32 %95, -2
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %96) #5
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap6DeleteEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 2) #5
  br label %97

97:                                               ; preds = %91, %89
  %98 = phi i8* [ %87, %91 ], [ %54, %89 ]
  %99 = zext i8 %84 to i32
  %100 = add nsw i32 %34, %99
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i16, i16* %88, i64 %101
  br label %376

103:                                              ; preds = %83
  %104 = getelementptr inbounds i8, i8* %86, i64 -1
  br i1 %23, label %111, label %105

105:                                              ; preds = %103
  %106 = ptrtoint i8* %87 to i64
  %107 = ptrtoint i8* %54 to i64
  %108 = xor i64 %107, 4294967295
  %109 = add i64 %108, %106
  %110 = trunc i64 %109 to i32
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %110) #5
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap6DeleteEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 1) #5
  br label %111

111:                                              ; preds = %105, %103
  %112 = phi i8* [ %87, %105 ], [ %54, %103 ]
  %113 = zext i8 %84 to i32
  %114 = add nsw i32 %34, %113
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i16, i16* %88, i64 %115
  %117 = load i16, i16* %116, align 2
  %118 = lshr i16 %117, 8
  %119 = trunc i16 %118 to i8
  %120 = getelementptr inbounds i8, i8* %86, i64 -3
  store i8 %119, i8* %120, align 1
  br label %376

121:                                              ; preds = %83
  %122 = getelementptr inbounds i8, i8* %86, i64 -1
  br i1 %23, label %129, label %123

123:                                              ; preds = %121
  %124 = ptrtoint i8* %87 to i64
  %125 = ptrtoint i8* %54 to i64
  %126 = xor i64 %125, 4294967295
  %127 = add i64 %126, %124
  %128 = trunc i64 %127 to i32
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %128) #5
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap6DeleteEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 1) #5
  br label %129

129:                                              ; preds = %123, %121
  %130 = phi i8* [ %87, %123 ], [ %54, %121 ]
  %131 = zext i8 %84 to i32
  %132 = add nsw i32 %34, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i16, i16* %88, i64 %133
  br label %376

135:                                              ; preds = %83
  %136 = zext i8 %84 to i32
  %137 = add nsw i32 %52, %136
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i16, i16* %88, i64 %138
  %140 = load i16, i16* %139, align 2
  %141 = trunc i16 %140 to i8
  %142 = getelementptr inbounds i8, i8* %86, i64 -3
  store i8 %141, i8* %142, align 1
  br label %145

143:                                              ; preds = %83
  %144 = zext i8 %84 to i32
  br label %145

145:                                              ; preds = %143, %135
  %146 = phi i32 [ %144, %143 ], [ %136, %135 ]
  %147 = add nsw i32 %146, %34
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i16, i16* %88, i64 %148
  %150 = load i16, i16* %149, align 2
  %151 = lshr i16 %150, 8
  %152 = trunc i16 %151 to i8
  %153 = getelementptr inbounds i8, i8* %86, i64 -2
  store i8 %152, i8* %153, align 1
  br label %158

154:                                              ; preds = %83
  %155 = zext i8 %84 to i32
  %156 = add nsw i32 %34, %155
  %157 = sext i32 %156 to i64
  br label %158

158:                                              ; preds = %154, %145
  %159 = phi i64 [ %157, %154 ], [ %148, %145 ]
  %160 = getelementptr inbounds i16, i16* %88, i64 %159
  br label %376

161:                                              ; preds = %83
  %162 = zext i8 %84 to i64
  %163 = or i64 %162, 256
  %164 = getelementptr inbounds i16, i16* %88, i64 %163
  br label %376

165:                                              ; preds = %83
  br i1 %51, label %184, label %166

166:                                              ; preds = %165
  %167 = load i16*, i16** %18, align 8
  %168 = load i32, i32* %19, align 8
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds i16, i16* %167, i64 %169
  %171 = ptrtoint i16* %88 to i64
  %172 = ptrtoint i16* %170 to i64
  %173 = sub i64 %171, %172
  %174 = lshr exact i64 %173, 1
  %175 = trunc i64 %174 to i32
  %176 = load i32, i32* %20, align 4
  %177 = icmp ugt i32 %176, %175
  br i1 %177, label %178, label %184

178:                                              ; preds = %166
  %179 = zext i8 %84 to i64
  %180 = or i64 %179, 256
  %181 = getelementptr inbounds i16, i16* %88, i64 %180
  %182 = load i16, i16* %181, align 2
  %183 = and i16 %182, -256
  br label %199

184:                                              ; preds = %166, %165
  %185 = zext i8 %84 to i32
  %186 = add nsw i32 %34, %185
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds i16, i16* %88, i64 %187
  %189 = load i16, i16* %188, align 2
  %190 = and i16 %189, -256
  br label %191

191:                                              ; preds = %184, %83
  %192 = phi i16 [ 0, %83 ], [ %190, %184 ]
  br i1 %51, label %214, label %193

193:                                              ; preds = %191
  %194 = load i16*, i16** %18, align 8
  %195 = load i32, i32* %19, align 8
  %196 = load i32, i32* %20, align 4
  %197 = zext i32 %195 to i64
  %198 = ptrtoint i16* %88 to i64
  br label %199

199:                                              ; preds = %193, %178
  %200 = phi i64 [ %198, %193 ], [ %171, %178 ]
  %201 = phi i64 [ %197, %193 ], [ %169, %178 ]
  %202 = phi i32 [ %196, %193 ], [ %176, %178 ]
  %203 = phi i16* [ %194, %193 ], [ %167, %178 ]
  %204 = phi i16 [ %192, %193 ], [ %183, %178 ]
  %205 = getelementptr inbounds i16, i16* %203, i64 %201
  %206 = ptrtoint i16* %205 to i64
  %207 = sub i64 %200, %206
  %208 = lshr exact i64 %207, 1
  %209 = trunc i64 %208 to i32
  %210 = icmp ugt i32 %202, %209
  br i1 %210, label %211, label %214

211:                                              ; preds = %199
  %212 = zext i8 %84 to i64
  %213 = or i64 %212, 256
  br label %219

214:                                              ; preds = %199, %191
  %215 = phi i16 [ %192, %191 ], [ %204, %199 ]
  %216 = zext i8 %84 to i32
  %217 = add nsw i32 %34, %216
  %218 = sext i32 %217 to i64
  br label %219

219:                                              ; preds = %214, %211
  %220 = phi i16 [ %204, %211 ], [ %215, %214 ]
  %221 = phi i64 [ %213, %211 ], [ %218, %214 ]
  %222 = getelementptr inbounds i16, i16* %88, i64 %221
  %223 = load i16, i16* %222, align 2
  %224 = and i16 %223, 255
  %225 = or i16 %224, %220
  %226 = zext i16 %225 to i64
  %227 = load %"struct.chrome_lang_id::CLD2::RemapEntry"*, %"struct.chrome_lang_id::CLD2::RemapEntry"** %21, align 8
  %228 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %227, i64 %226
  %229 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %228, i64 0, i32 0
  %230 = load i8, i8* %229, align 2
  %231 = and i8 %230, 127
  %232 = zext i8 %231 to i32
  %233 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %227, i64 %226, i32 1
  %234 = load i8, i8* %233, align 1
  %235 = icmp sgt i8 %234, -1
  %236 = or i1 %235, %3
  br i1 %236, label %242, label %237

237:                                              ; preds = %219
  %238 = add nuw nsw i64 %226, 1
  %239 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %227, i64 %238
  %240 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %227, i64 %238, i32 1
  %241 = load i8, i8* %240, align 1
  br label %242

242:                                              ; preds = %237, %219
  %243 = phi %"struct.chrome_lang_id::CLD2::RemapEntry"* [ %239, %237 ], [ %228, %219 ]
  %244 = phi i8 [ %241, %237 ], [ %234, %219 ]
  %245 = and i8 %244, 127
  %246 = zext i8 %245 to i32
  %247 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %243, i64 0, i32 2
  %248 = load i16, i16* %247, align 2
  %249 = zext i16 %248 to i32
  %250 = zext i8 %231 to i64
  %251 = sub nsw i64 0, %250
  %252 = getelementptr inbounds i8, i8* %86, i64 %251
  %253 = zext i8 %245 to i64
  %254 = getelementptr inbounds i8, i8* %252, i64 %253
  %255 = ptrtoint i8* %254 to i64
  %256 = sub i64 %39, %255
  %257 = ptrtoint i8* %87 to i64
  %258 = sub i64 %41, %257
  %259 = icmp slt i64 %256, %258
  br i1 %259, label %285, label %260

260:                                              ; preds = %242
  %261 = load i8*, i8** %22, align 8
  %262 = zext i16 %248 to i64
  %263 = getelementptr inbounds i8, i8* %261, i64 %262
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %252, i8* align 1 %263, i64 %253, i1 false) #5
  br i1 %23, label %280, label %264

264:                                              ; preds = %260
  %265 = icmp ugt i8 %245, %231
  br i1 %265, label %266, label %271

266:                                              ; preds = %264
  %267 = ptrtoint i8* %54 to i64
  %268 = sub i64 %257, %267
  %269 = trunc i64 %268 to i32
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %269) #5
  %270 = sub nsw i32 %246, %232
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap6InsertEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %270) #5
  br label %280

271:                                              ; preds = %264
  %272 = icmp ult i8 %245, %231
  br i1 %272, label %273, label %280

273:                                              ; preds = %271
  %274 = ptrtoint i8* %54 to i64
  %275 = sub i64 %257, %274
  %276 = sub i64 %275, %250
  %277 = add i64 %276, %253
  %278 = trunc i64 %277 to i32
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %278) #5
  %279 = sub nsw i32 %232, %246
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap6DeleteEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %279) #5
  br label %280

280:                                              ; preds = %273, %271, %266, %260
  %281 = phi i8* [ %87, %266 ], [ %87, %273 ], [ %54, %271 ], [ %54, %260 ]
  %282 = getelementptr inbounds %"struct.chrome_lang_id::CLD2::RemapEntry", %"struct.chrome_lang_id::CLD2::RemapEntry"* %243, i64 0, i32 0
  %283 = load i8, i8* %282, align 2
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %310, label %327

285:                                              ; preds = %242, %83
  %286 = phi i32 [ %85, %83 ], [ 32767, %242 ]
  %287 = getelementptr inbounds i8, i8* %87, i64 -1
  %288 = getelementptr inbounds i8, i8* %86, i64 -1
  %289 = load i16*, i16** %18, align 8
  %290 = load i32, i32* %19, align 8
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds i16, i16* %289, i64 %291
  %293 = ptrtoint i16* %88 to i64
  %294 = ptrtoint i16* %292 to i64
  %295 = sub i64 %293, %294
  %296 = lshr exact i64 %295, 1
  %297 = trunc i64 %296 to i32
  %298 = load i32, i32* %20, align 4
  %299 = icmp ugt i32 %298, %297
  br i1 %299, label %359, label %300

300:                                              ; preds = %285, %306
  %301 = phi i8* [ %303, %306 ], [ %287, %285 ]
  %302 = phi i8* [ %304, %306 ], [ %288, %285 ]
  %303 = getelementptr inbounds i8, i8* %301, i64 -1
  %304 = getelementptr inbounds i8, i8* %302, i64 -1
  %305 = icmp ugt i8* %303, %26
  br i1 %305, label %306, label %359

306:                                              ; preds = %300
  %307 = load i8, i8* %303, align 1
  %308 = and i8 %307, -64
  %309 = icmp eq i8 %308, -128
  br i1 %309, label %300, label %359

310:                                              ; preds = %280
  %311 = load i8*, i8** %22, align 8
  %312 = add nuw nsw i32 %246, %249
  %313 = zext i32 %312 to i64
  %314 = getelementptr inbounds i8, i8* %311, i64 %313
  %315 = load i8, i8* %314, align 1
  %316 = add nuw nsw i32 %312, 1
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds i8, i8* %311, i64 %317
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %315 to i32
  %321 = shl nuw nsw i32 %320, 8
  %322 = zext i8 %319 to i32
  %323 = or i32 %321, %322
  %324 = shl i32 %323, %33
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i16, i16* %50, i64 %325
  br label %327

327:                                              ; preds = %280, %376, %310
  %328 = phi i8* [ %281, %310 ], [ %281, %280 ], [ %379, %376 ]
  %329 = phi i8* [ %254, %310 ], [ %254, %280 ], [ %380, %376 ]
  %330 = phi i16* [ %326, %310 ], [ %50, %376 ], [ %50, %280 ]
  %331 = phi i32 [ %323, %310 ], [ 0, %376 ], [ 0, %280 ]
  %332 = phi i8 [ %84, %310 ], [ 0, %376 ], [ 0, %280 ]
  %333 = add nuw nsw i32 %57, 1
  br label %53

334:                                              ; preds = %79, %74
  %335 = phi i8* [ %71, %74 ], [ %56, %79 ]
  %336 = phi i8* [ %36, %74 ], [ %55, %79 ]
  %337 = phi i16* [ %77, %74 ], [ %58, %79 ]
  %338 = load i16*, i16** %18, align 8
  %339 = load i32, i32* %19, align 8
  %340 = zext i32 %339 to i64
  %341 = getelementptr inbounds i16, i16* %338, i64 %340
  %342 = ptrtoint i16* %337 to i64
  %343 = ptrtoint i16* %341 to i64
  %344 = sub i64 %342, %343
  %345 = lshr exact i64 %344, 1
  %346 = trunc i64 %345 to i32
  %347 = load i32, i32* %20, align 4
  %348 = icmp ugt i32 %347, %346
  br i1 %348, label %359, label %349

349:                                              ; preds = %334, %355
  %350 = phi i8* [ %352, %355 ], [ %336, %334 ]
  %351 = phi i8* [ %353, %355 ], [ %335, %334 ]
  %352 = getelementptr inbounds i8, i8* %350, i64 -1
  %353 = getelementptr inbounds i8, i8* %351, i64 -1
  %354 = icmp ugt i8* %352, %26
  br i1 %354, label %355, label %359

355:                                              ; preds = %349
  %356 = load i8, i8* %352, align 1
  %357 = and i8 %356, -64
  %358 = icmp eq i8 %357, -128
  br i1 %358, label %349, label %359

359:                                              ; preds = %355, %349, %306, %300, %334, %285
  %360 = phi i8* [ %336, %334 ], [ %287, %285 ], [ %303, %300 ], [ %303, %306 ], [ %352, %349 ], [ %352, %355 ]
  %361 = phi i8* [ %335, %334 ], [ %288, %285 ], [ %304, %300 ], [ %304, %306 ], [ %353, %349 ], [ %353, %355 ]
  %362 = phi i32 [ 32769, %334 ], [ %286, %285 ], [ %286, %300 ], [ %286, %306 ], [ 32768, %349 ], [ 32768, %355 ]
  %363 = icmp ugt i8* %360, %54
  %364 = and i1 %24, %363
  %365 = ptrtoint i8* %360 to i64
  br i1 %364, label %366, label %370

366:                                              ; preds = %359
  %367 = ptrtoint i8* %54 to i64
  %368 = sub i64 %365, %367
  %369 = trunc i64 %368 to i32
  tail call void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"* nonnull %7, i32 %369) #5
  br label %370

370:                                              ; preds = %366, %359
  %371 = sub i64 %365, %42
  %372 = trunc i64 %371 to i32
  %373 = ptrtoint i8* %361 to i64
  %374 = sub i64 %373, %40
  %375 = trunc i64 %374 to i32
  br label %384

376:                                              ; preds = %97, %111, %129, %158, %161
  %377 = phi i16* [ %164, %161 ], [ %160, %158 ], [ %134, %129 ], [ %116, %111 ], [ %102, %97 ]
  %378 = phi i64 [ -1, %161 ], [ -1, %158 ], [ -2, %129 ], [ -2, %111 ], [ -3, %97 ]
  %379 = phi i8* [ %54, %161 ], [ %54, %158 ], [ %130, %129 ], [ %112, %111 ], [ %98, %97 ]
  %380 = phi i8* [ %86, %161 ], [ %86, %158 ], [ %122, %129 ], [ %104, %111 ], [ %90, %97 ]
  %381 = load i16, i16* %377, align 2
  %382 = trunc i16 %381 to i8
  %383 = getelementptr inbounds i8, i8* %86, i64 %378
  store i8 %382, i8* %383, align 1
  br label %327

384:                                              ; preds = %44, %45, %370
  %385 = phi i32 [ 0, %44 ], [ 0, %45 ], [ %372, %370 ]
  %386 = phi i32 [ 0, %44 ], [ 0, %45 ], [ %375, %370 ]
  %387 = phi i32 [ 0, %44 ], [ 0, %45 ], [ %57, %370 ]
  %388 = phi i32 [ 32767, %44 ], [ 32767, %45 ], [ %362, %370 ]
  %389 = sext i32 %385 to i64
  %390 = getelementptr inbounds i8, i8* %26, i64 %389
  %391 = sub nsw i32 %27, %385
  %392 = sext i32 %386 to i64
  %393 = getelementptr inbounds i8, i8* %29, i64 %392
  %394 = sub nsw i32 %28, %386
  %395 = add nsw i32 %385, %30
  %396 = add nsw i32 %386, %31
  %397 = add nuw nsw i32 %387, %32
  %398 = icmp eq i32 %388, 32781
  br i1 %398, label %25, label %399

399:                                              ; preds = %384
  store i32 %395, i32* %4, align 4
  store i32 %396, i32* %5, align 4
  store i32 %397, i32* %6, align 4
  %400 = add nsw i32 %388, -32528
  ret i32 %400
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14chrome_lang_id4CLD225UTF8GenericReplaceTwoByteEPKNS0_21UTF8StateMachineObj_2ERKNS_11StringPieceERS4_bPiS8_S8_(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* nocapture readonly, %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), i1 zeroext, i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3 {
  %8 = tail call i32 @_ZN14chrome_lang_id4CLD225UTF8GenericReplaceTwoByteEPKNS0_21UTF8StateMachineObj_2ERKNS_11StringPieceERS4_bPiS8_S8_PNS0_9OffsetMapE(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, %"class.chrome_lang_id::StringPiece"* dereferenceable(16) %1, %"class.chrome_lang_id::StringPiece"* dereferenceable(16) %2, i1 zeroext %3, i32* %4, i32* %5, i32* %6, %"class.chrome_lang_id::CLD2::OffsetMap"* null)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14chrome_lang_id4CLD225UTF8GenericReplaceTwoByteEPKNS0_21UTF8StateMachineObj_2ERKNS_11StringPieceERS4_PiS8_S8_(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* nocapture readonly, %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), %"class.chrome_lang_id::StringPiece"* nocapture readonly dereferenceable(16), i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #3 {
  %7 = tail call i32 @_ZN14chrome_lang_id4CLD225UTF8GenericReplaceTwoByteEPKNS0_21UTF8StateMachineObj_2ERKNS_11StringPieceERS4_bPiS8_S8_PNS0_9OffsetMapE(%"struct.chrome_lang_id::CLD2::UTF8StateMachineObj_2"* %0, %"class.chrome_lang_id::StringPiece"* dereferenceable(16) %1, %"class.chrome_lang_id::StringPiece"* dereferenceable(16) %2, i1 zeroext false, i32* %3, i32* %4, i32* %5, %"class.chrome_lang_id::CLD2::OffsetMap"* null)
  ret i32 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14chrome_lang_id4CLD215UTF8TrimToCharsEPNS_11StringPieceE(%"class.chrome_lang_id::StringPiece"* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.chrome_lang_id::StringPiece", %"class.chrome_lang_id::StringPiece"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %1
  %8 = load i8, i8* %3, align 1
  %9 = and i8 %8, -64
  %10 = icmp eq i8 %9, -128
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = add nsw i32 %5, -1
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %3, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = icmp sgt i8 %15, -1
  br i1 %16, label %73, label %17

17:                                               ; preds = %7, %11
  %18 = sext i32 %5 to i64
  %19 = getelementptr inbounds i8, i8* %3, i64 %18
  br label %20

20:                                               ; preds = %24, %17
  %21 = phi i8* [ %19, %17 ], [ %22, %24 ]
  %22 = getelementptr inbounds i8, i8* %21, i64 -1
  %23 = icmp ugt i8* %3, %22
  br i1 %23, label %36, label %24

24:                                               ; preds = %20
  %25 = load i8, i8* %22, align 1
  %26 = and i8 %25, -64
  %27 = icmp eq i8 %26, -128
  br i1 %27, label %20, label %28

28:                                               ; preds = %24
  %29 = zext i8 %25 to i64
  %30 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN14chrome_lang_id4CLD2L11kUTF8LenTblE, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds i8, i8* %22, i64 %32
  %34 = icmp ugt i8* %33, %19
  %35 = select i1 %34, i8* %22, i8* %33
  br label %36

36:                                               ; preds = %20, %28
  %37 = phi i8* [ %35, %28 ], [ %22, %20 ]
  %38 = icmp eq i8* %37, %19
  br i1 %38, label %48, label %39

39:                                               ; preds = %36
  %40 = ptrtoint i8* %19 to i64
  %41 = ptrtoint i8* %37 to i64
  %42 = sub i64 %40, %41
  %43 = trunc i64 %42 to i32
  %44 = sub nsw i32 %5, %43
  store i32 %44, i32* %4, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %39
  %47 = sext i32 %44 to i64
  br label %48

48:                                               ; preds = %46, %36
  %49 = phi i64 [ %47, %46 ], [ %18, %36 ]
  %50 = phi i32 [ %44, %46 ], [ %5, %36 ]
  %51 = getelementptr inbounds i8, i8* %3, i64 %49
  %52 = icmp sgt i32 %50, 0
  br i1 %52, label %53, label %73

53:                                               ; preds = %48, %58
  %54 = phi i8* [ %59, %58 ], [ %3, %48 ]
  %55 = load i8, i8* %54, align 1
  %56 = and i8 %55, -64
  %57 = icmp eq i8 %56, -128
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %54, i64 1
  %60 = icmp ult i8* %59, %51
  br i1 %60, label %53, label %61

61:                                               ; preds = %53, %58
  %62 = phi i8* [ %54, %53 ], [ %59, %58 ]
  %63 = icmp eq i8* %62, %3
  br i1 %63, label %73, label %64

64:                                               ; preds = %61
  %65 = ptrtoint i8* %62 to i64
  %66 = ptrtoint i8* %3 to i64
  %67 = sub i64 %65, %66
  %68 = trunc i64 %67 to i32
  %69 = shl i64 %67, 32
  %70 = ashr exact i64 %69, 32
  %71 = getelementptr inbounds i8, i8* %3, i64 %70
  store i8* %71, i8** %2, align 8
  %72 = sub nsw i32 %50, %68
  store i32 %72, i32* %4, align 8
  br label %73

73:                                               ; preds = %48, %39, %61, %64, %11, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN14chrome_lang_id4CLD29OffsetMap4CopyEi(%"class.chrome_lang_id::CLD2::OffsetMap"*, i32) local_unnamed_addr #4

declare void @_ZN14chrome_lang_id4CLD29OffsetMap6DeleteEi(%"class.chrome_lang_id::CLD2::OffsetMap"*, i32) local_unnamed_addr #4

declare void @_ZN14chrome_lang_id4CLD29OffsetMap6InsertEi(%"class.chrome_lang_id::CLD2::OffsetMap"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
