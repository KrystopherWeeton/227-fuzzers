; ModuleID = '../../third_party/blink/renderer/platform/text/bidi_text_run.cc'
source_filename = "../../third_party/blink/renderer/platform/text/bidi_text_run.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i32 }
%"class.blink::TextRun" = type <{ %union.anon, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon = type { i8* }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::BidiResolver" = type { %"class.blink::TextRunIterator", %"class.blink::TextRunIterator", %"class.blink::TextRunIterator", %"class.blink::TextRunIterator", %"struct.blink::BidiStatus", i32, %"class.blink::TextRunIterator", %"class.blink::TextRunIterator", i8, %"class.blink::TextRunIterator", i8, [7 x i8], %"class.blink::BidiRunList", %"class.blink::MidpointState", i32, %"class.WTF::Vector.0", %"struct.blink::BidiCharacterRun"*, i8, i8, %"class.WTF::Vector.5", %"class.WTF::HashMap" }
%"struct.blink::BidiStatus" = type { i32, i32, i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted", i16, %class.scoped_refptr }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::TextRunIterator" = type { %"class.blink::TextRun"*, i32, i32 }
%"class.blink::BidiRunList" = type <{ %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"*, i32, [4 x i8] }>
%"class.blink::MidpointState" = type <{ %"class.WTF::Vector", i32, i32, i8, [7 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::TextRunIterator"*, i32, i32 }
%"class.WTF::Vector.0" = type { %"class.WTF::VectorBuffer.1" }
%"class.WTF::VectorBuffer.1" = type { %"class.WTF::VectorBufferBase.2" }
%"class.WTF::VectorBufferBase.2" = type { %"class.blink::NoIsolatedRun"*, i32, i32 }
%"class.blink::NoIsolatedRun" = type { i8 }
%"struct.blink::BidiCharacterRun" = type { i8, i8, %"struct.blink::BidiCharacterRun"*, i32, i32 }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7", [64 x i8] }
%"class.WTF::VectorBufferBase.7" = type { %"class.blink::BidiEmbedding"*, i32, i32 }
%"class.blink::BidiEmbedding" = type { i32, i32 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"struct.blink::BidiCharacterRun"*, %"class.blink::MidpointState" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.19 }
%union.anon.19 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.WTF::StringImpl"* }

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9SetStatusENS_10BidiStatusE = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEED2Ev = comdat any

$_ZN5blink11BidiContextD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE31DetermineDirectionalityInternalEbPb = comdat any

@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN5blink15DirectionForRunERNS_7TextRunEPb(%"class.blink::TextRun"* dereferenceable(40), i8*) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::BidiResolver", align 8
  %4 = alloca %"struct.blink::BidiStatus", align 8
  %5 = icmp eq i8* %1, null
  %6 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 5
  %7 = load i16, i16* %6, align 8
  br i1 %5, label %8, label %25

8:                                                ; preds = %2
  %9 = and i16 %7, 4
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %11, label %70

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %25

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::TextRun"* %0 to i16**
  %17 = load i16*, i16** %16, align 8
  %18 = load i16, i16* %17, align 2
  %19 = and i16 %18, -2048
  %20 = icmp eq i16 %19, -10240
  br i1 %20, label %25, label %21

21:                                               ; preds = %15
  %22 = zext i16 %18 to i32
  %23 = tail call i32 @u_charDirection_69(i32 %22) #6
  switch i32 %23, label %24 [
    i32 13, label %70
    i32 1, label %70
  ]

24:                                               ; preds = %21
  br label %70

25:                                               ; preds = %2, %15, %11
  %26 = bitcast %"class.blink::BidiResolver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %26) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 368, i1 false)
  %27 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 4, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 64, i1 false) #6
  store i32 10, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 4, i32 1
  store i32 10, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 4, i32 2
  store i32 10, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 4, i32 3, i32 0
  store %"class.blink::BidiContext"* null, %"class.blink::BidiContext"** %30, align 8
  %31 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 5
  store i32 10, i32* %31, align 8
  %32 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 6
  %33 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 9
  %34 = bitcast %"class.blink::TextRunIterator"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #6
  %35 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 10
  %36 = bitcast %"class.blink::TextRunIterator"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 33, i1 false) #6
  store i8 1, i8* %35, align 8
  %37 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 12
  %38 = bitcast %"class.blink::BidiRunList"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 28, i1 false) #6
  %39 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 13
  %40 = bitcast %"class.blink::MidpointState"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 25, i1 false) #6
  %41 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 14
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 15
  %43 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 19
  %44 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 19, i32 0, i32 1, i64 0
  %45 = bitcast %"class.WTF::Vector.5"* %43 to i8**
  %46 = bitcast %"class.WTF::Vector.0"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 25, i1 false) #6
  store i8* %44, i8** %45, align 8
  %47 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 19, i32 0, i32 0, i32 1
  store i32 8, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 19, i32 0, i32 0, i32 2
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 20
  %50 = bitcast %"class.WTF::HashMap"* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 20, i1 false) #6
  %51 = and i16 %7, 32
  %52 = icmp ne i16 %51, 0
  %53 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %4, i64 0, i32 3
  %54 = lshr i16 %7, 4
  %55 = and i16 %54, 1
  %56 = zext i16 %55 to i32
  %57 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %4, i64 0, i32 2
  store i32 %56, i32* %57, align 8
  %58 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %4, i64 0, i32 1
  store i32 %56, i32* %58, align 4
  %59 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %4, i64 0, i32 0
  store i32 %56, i32* %59, align 8
  %60 = trunc i16 %55 to i8
  %61 = call %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext %60, i32 %56, i1 zeroext %52, i32 0, %"class.blink::BidiContext"* null) #6
  %62 = ptrtoint %"class.blink::BidiContext"* %61 to i64
  %63 = bitcast %class.scoped_refptr* %53 to i64*
  store i64 %62, i64* %63, align 8
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9SetStatusENS_10BidiStatusE(%"class.blink::BidiResolver"* nonnull %3, %"struct.blink::BidiStatus"* nonnull byval(%"struct.blink::BidiStatus") align 8 %4)
  %64 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 0, i32 0
  store %"class.blink::TextRun"* %0, %"class.blink::TextRun"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 0, i32 2
  store i32 %65, i32* %68, align 4
  %69 = call zeroext i8 @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE31DetermineDirectionalityInternalEbPb(%"class.blink::BidiResolver"* nonnull %3, i1 zeroext false, i8* %1) #6
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEED2Ev(%"class.blink::BidiResolver"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %26) #6
  br label %70

70:                                               ; preds = %8, %24, %21, %21, %25
  %71 = phi i8 [ %69, %25 ], [ 0, %8 ], [ 0, %24 ], [ 1, %21 ], [ 1, %21 ]
  ret i8 %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9SetStatusENS_10BidiStatusE(%"class.blink::BidiResolver"*, %"struct.blink::BidiStatus"* byval(%"struct.blink::BidiStatus") align 8) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4
  %5 = bitcast %"struct.blink::BidiStatus"* %4 to i8*
  %6 = bitcast %"struct.blink::BidiStatus"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* nonnull align 8 %6, i64 12, i1 false) #6
  %7 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3
  %8 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %1, i64 0, i32 3, i32 0
  %9 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %8, align 8
  %10 = icmp eq %"class.blink::BidiContext"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #6
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %18

18:                                               ; preds = %15, %11, %2
  %19 = ptrtoint %"class.blink::BidiContext"* %9 to i64
  %20 = bitcast %class.scoped_refptr* %7 to i64*
  %21 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 0, i32 0
  %22 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %21, align 8
  store i64 %19, i64* %20, align 8
  %23 = icmp eq %"class.blink::BidiContext"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %22) #6
  %29 = bitcast %"class.blink::BidiContext"* %22 to i8*
  call void @free(i8* %29) #6
  br label %30

30:                                               ; preds = %18, %24, %28
  %31 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %8, align 8
  %32 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %31, i64 0, i32 1
  %33 = load i16, i16* %32, align 4
  %34 = and i16 %33, 3968
  %35 = icmp ne i16 %34, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 18
  store i8 %36, i8* %37, align 1
  %38 = icmp eq %"class.blink::BidiContext"* %31, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %31) #6
  %44 = bitcast %"class.blink::BidiContext"* %31 to i8*
  call void @free(i8* %44) #6
  br label %45

45:                                               ; preds = %30, %39, %43
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEED2Ev(%"class.blink::BidiResolver"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 20, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair"* %3, null
  br i1 %4, label %32, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 20, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %27, %9
  %12 = phi i64 [ 0, %9 ], [ %28, %27 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 0
  %14 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %13, align 8
  %15 = icmp eq %"struct.blink::BidiCharacterRun"* %14, inttoptr (i64 -1 to %"struct.blink::BidiCharacterRun"*)
  br i1 %15, label %27, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::TextRunIterator"*, %"class.blink::TextRunIterator"** %17, align 8
  %19 = icmp eq %"class.blink::TextRunIterator"* %18, null
  %20 = bitcast %"class.blink::TextRunIterator"* %18 to i8*
  br i1 %19, label %27, label %21, !prof !2

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !3

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #6
  store %"class.blink::TextRunIterator"* null, %"class.blink::TextRunIterator"** %17, align 8
  br label %27

27:                                               ; preds = %26, %16, %11
  %28 = add nuw nsw i64 %12, 1
  %29 = icmp eq i64 %28, %10
  br i1 %29, label %30, label %11

30:                                               ; preds = %27, %5
  %31 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #6
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %2, align 8
  br label %32

32:                                               ; preds = %1, %30
  %33 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19
  %34 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %32
  store i32 0, i32* %34, align 4
  br label %38

38:                                               ; preds = %37, %32
  %39 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %33, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 1, i64 0
  %42 = bitcast i8* %41 to %"class.blink::BidiEmbedding"*
  %43 = icmp eq %"class.blink::BidiEmbedding"* %40, %42
  br i1 %43, label %46, label %44, !prof !2

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %33, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.6"* %45, %"class.blink::BidiEmbedding"* %40) #6
  br label %46

46:                                               ; preds = %38, %44
  store %"class.blink::BidiEmbedding"* null, %"class.blink::BidiEmbedding"** %39, align 8
  %47 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %48 = load %"class.blink::NoIsolatedRun"*, %"class.blink::NoIsolatedRun"** %47, align 8
  %49 = icmp eq %"class.blink::NoIsolatedRun"* %48, null
  br i1 %49, label %57, label %50, !prof !2

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 15, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54, !prof !3

54:                                               ; preds = %50
  store i32 0, i32* %51, align 4
  br label %55

55:                                               ; preds = %54, %50
  %56 = getelementptr inbounds %"class.blink::NoIsolatedRun", %"class.blink::NoIsolatedRun"* %48, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #6
  store %"class.blink::NoIsolatedRun"* null, %"class.blink::NoIsolatedRun"** %47, align 8
  br label %57

57:                                               ; preds = %46, %55
  %58 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::TextRunIterator"*, %"class.blink::TextRunIterator"** %58, align 8
  %60 = icmp eq %"class.blink::TextRunIterator"* %59, null
  %61 = bitcast %"class.blink::TextRunIterator"* %59 to i8*
  br i1 %60, label %68, label %62, !prof !2

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %66, !prof !3

66:                                               ; preds = %62
  store i32 0, i32* %63, align 4
  br label %67

67:                                               ; preds = %66, %62
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #6
  store %"class.blink::TextRunIterator"* null, %"class.blink::TextRunIterator"** %58, align 8
  br label %68

68:                                               ; preds = %57, %67
  %69 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3, i32 0
  %70 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %69, align 8
  %71 = icmp eq %"class.blink::BidiContext"* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw sub i32* %73, i32 1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  tail call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %70) #6
  %77 = bitcast %"class.blink::BidiContext"* %70 to i8*
  tail call void @free(i8* %77) #6
  br label %78

78:                                               ; preds = %68, %72, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN5blink23DetermineDirectionalityERKN3WTF6StringEPb(%"class.WTF::String"* nocapture readonly dereferenceable(8), i8*) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::TextRun", align 8
  %4 = bitcast %"class.blink::TextRun"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 3
  %9 = bitcast %"class.blink::TextRun"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %8, align 8
  %10 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %10, align 4
  %11 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 5
  store i16 -21846, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 6, i64 0
  store i8 -86, i8* %12, align 2
  %13 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 6, i64 1
  store i8 -86, i8* %13, align 1
  %14 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %14, align 4
  %15 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %3, i64 0, i32 7, i32 1
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %17 = bitcast i8* %15 to i64*
  store i64 -6148914691236517206, i64* %17, align 4
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %27

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1
  %26 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  br label %27

27:                                               ; preds = %20, %22
  %28 = phi i64 [ 0, %20 ], [ %26, %22 ]
  %29 = phi %"class.WTF::StringImpl"* [ %21, %20 ], [ %18, %22 ]
  %30 = phi i32 [ 0, %20 ], [ %24, %22 ]
  store i32 %30, i32* %6, align 8
  store i32 %30, i32* %7, align 4
  store float 0.000000e+00, float* %8, align 8
  store float 0.000000e+00, float* %10, align 4
  store i16 -22527, i16* %11, align 8
  store float 0.000000e+00, float* %14, align 4
  store i8 -85, i8* %15, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %27
  store i16 -22523, i16* %11, align 8
  store i8* null, i8** %5, align 8
  br label %41

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = bitcast %"class.blink::TextRun"* %3 to i64*
  store i64 %28, i64* %38, align 8
  br i1 %37, label %40, label %39

39:                                               ; preds = %33
  store i16 -22523, i16* %11, align 8
  br label %41

40:                                               ; preds = %33
  store i16 -22527, i16* %11, align 8
  br label %41

41:                                               ; preds = %32, %39, %40
  %42 = call zeroext i8 @_ZN5blink15DirectionForRunERNS_7TextRunEPb(%"class.blink::TextRun"* nonnull dereferenceable(40) %3, i8* %1)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #6
  ret i8 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25TextRunWithDirectionalityERKN3WTF6StringEPb(%"class.blink::TextRun"* noalias sret, %"class.WTF::String"* nocapture readonly dereferenceable(8), i8*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 3
  %8 = bitcast %"class.blink::TextRun"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %7, align 8
  %9 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  %10 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 5
  store i16 -21846, i16* %10, align 8
  %11 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 6, i64 0
  store i8 -86, i8* %11, align 2
  %12 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 6, i64 1
  store i8 -86, i8* %12, align 1
  %13 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %13, align 4
  %14 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 7, i32 1
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %16 = bitcast i8* %14 to i64*
  store i64 -6148914691236517206, i64* %16, align 4
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %3
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %26

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  %25 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  br label %26

26:                                               ; preds = %19, %21
  %27 = phi i64 [ 0, %19 ], [ %25, %21 ]
  %28 = phi %"class.WTF::StringImpl"* [ %20, %19 ], [ %17, %21 ]
  %29 = phi i32 [ 0, %19 ], [ %23, %21 ]
  store i32 %29, i32* %5, align 8
  store i32 %29, i32* %6, align 4
  store float 0.000000e+00, float* %7, align 8
  store float 0.000000e+00, float* %9, align 4
  store i16 -22527, i16* %10, align 8
  store float 0.000000e+00, float* %13, align 4
  store i8 -85, i8* %14, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  store i16 -22523, i16* %10, align 8
  store i8* null, i8** %4, align 8
  br label %40

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = bitcast %"class.blink::TextRun"* %0 to i64*
  store i64 %27, i64* %37, align 8
  br i1 %36, label %39, label %38

38:                                               ; preds = %32
  store i16 -22523, i16* %10, align 8
  br label %40

39:                                               ; preds = %32
  store i16 -22527, i16* %10, align 8
  br label %40

40:                                               ; preds = %31, %38, %39
  %41 = tail call zeroext i8 @_ZN5blink15DirectionForRunERNS_7TextRunEPb(%"class.blink::TextRun"* dereferenceable(40) %0, i8* %2)
  %42 = icmp eq i8* %2, null
  br i1 %42, label %50, label %43

43:                                               ; preds = %40
  %44 = load i16, i16* %10, align 8
  %45 = shl i8 %41, 4
  %46 = and i8 %45, 16
  %47 = zext i8 %46 to i16
  %48 = and i16 %44, -17
  %49 = or i16 %48, %47
  store i16 %49, i16* %10, align 8
  br label %50

50:                                               ; preds = %40, %43
  ret void
}

declare i32 @u_charDirection_69(i32) local_unnamed_addr #3

declare %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext, i32, i1 zeroext, i32, %"class.blink::BidiContext"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %2, align 8
  %4 = icmp eq %"class.blink::BidiContext"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %3) #6
  %10 = bitcast %"class.blink::BidiContext"* %3 to i8*
  tail call void @free(i8* %10) #6
  ret void

11:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.6"*, %"class.blink::BidiEmbedding"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::BidiEmbedding"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE31DetermineDirectionalityInternalEbPb(%"class.blink::BidiResolver"*, i1 zeroext, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %5, %7
  br i1 %8, label %9, label %113

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 14
  %11 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %9, %19
  %13 = phi i32 [ %7, %9 ], [ %20, %19 ]
  %14 = phi i32 [ %5, %9 ], [ %21, %19 ]
  %15 = load i32, i32* %10, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = add nuw i32 %14, 1
  store i32 %18, i32* %4, align 8
  br label %19

19:                                               ; preds = %68, %109, %91, %17
  %20 = phi i32 [ %13, %68 ], [ %112, %109 ], [ %13, %91 ], [ %13, %17 ]
  %21 = phi i32 [ %69, %68 ], [ %111, %109 ], [ %69, %91 ], [ %18, %17 ]
  %22 = icmp ult i32 %21, %20
  br i1 %22, label %12, label %113

23:                                               ; preds = %12
  %24 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %11, align 8
  %25 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %24, i64 0, i32 5
  %26 = load i16, i16* %25, align 8
  br i1 %1, label %27, label %46

27:                                               ; preds = %23
  %28 = and i16 %26, 4
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %24, i64 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = zext i32 %14 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  br label %43

37:                                               ; preds = %27
  %38 = bitcast %"class.blink::TextRun"* %24 to i16**
  %39 = load i16*, i16** %38, align 8
  %40 = zext i32 %14 to i64
  %41 = getelementptr inbounds i16, i16* %39, i64 %40
  %42 = load i16, i16* %41, align 2
  br label %43

43:                                               ; preds = %30, %37
  %44 = phi i16 [ %36, %30 ], [ %42, %37 ]
  %45 = icmp eq i16 %44, 10
  br i1 %45, label %113, label %46

46:                                               ; preds = %23, %43
  %47 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %24, i64 0, i32 5
  %48 = and i16 %26, 4
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %57, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %24, i64 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = zext i32 %14 to i64
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i16
  br label %63

57:                                               ; preds = %46
  %58 = bitcast %"class.blink::TextRun"* %24 to i16**
  %59 = load i16*, i16** %58, align 8
  %60 = zext i32 %14 to i64
  %61 = getelementptr inbounds i16, i16* %59, i64 %60
  %62 = load i16, i16* %61, align 2
  br label %63

63:                                               ; preds = %50, %57
  %64 = phi i16 [ %56, %50 ], [ %62, %57 ]
  %65 = zext i16 %64 to i32
  %66 = and i32 %65, 63488
  %67 = icmp eq i32 %66, 55296
  br i1 %67, label %68, label %100, !prof !3

68:                                               ; preds = %63
  %69 = add nuw i32 %14, 1
  store i32 %69, i32* %4, align 8
  %70 = and i32 %65, 1024
  %71 = icmp eq i32 %70, 0
  %72 = icmp ult i32 %69, %13
  %73 = and i1 %71, %72
  br i1 %73, label %74, label %19

74:                                               ; preds = %68
  %75 = load i16, i16* %47, align 8
  %76 = and i16 %75, 4
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %24, i64 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = zext i32 %69 to i64
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  br label %91

85:                                               ; preds = %74
  %86 = bitcast %"class.blink::TextRun"* %24 to i16**
  %87 = load i16*, i16** %86, align 8
  %88 = zext i32 %69 to i64
  %89 = getelementptr inbounds i16, i16* %87, i64 %88
  %90 = load i16, i16* %89, align 2
  br label %91

91:                                               ; preds = %78, %85
  %92 = phi i16 [ %84, %78 ], [ %90, %85 ]
  %93 = zext i16 %92 to i32
  %94 = and i32 %93, 64512
  %95 = icmp eq i32 %94, 56320
  br i1 %95, label %96, label %19

96:                                               ; preds = %91
  %97 = shl nuw nsw i32 %65, 10
  %98 = add nsw i32 %97, -56613888
  %99 = add nsw i32 %98, %93
  br label %100

100:                                              ; preds = %96, %63
  %101 = phi i32 [ %99, %96 ], [ %65, %63 ]
  %102 = tail call i32 @u_charDirection_69(i32 %101) #6
  switch i32 %102, label %109 [
    i32 0, label %103
    i32 13, label %106
    i32 1, label %106
  ]

103:                                              ; preds = %100
  %104 = icmp eq i8* %2, null
  br i1 %104, label %116, label %105

105:                                              ; preds = %103
  store i8 1, i8* %2, align 1
  br label %116

106:                                              ; preds = %100, %100
  %107 = icmp eq i8* %2, null
  br i1 %107, label %116, label %108

108:                                              ; preds = %106
  store i8 1, i8* %2, align 1
  br label %116

109:                                              ; preds = %100
  %110 = load i32, i32* %4, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %4, align 8
  %112 = load i32, i32* %6, align 4
  br label %19

113:                                              ; preds = %43, %19, %3
  %114 = icmp eq i8* %2, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %113
  store i8 0, i8* %2, align 1
  br label %116

116:                                              ; preds = %108, %106, %105, %103, %115, %113
  %117 = phi i8 [ 0, %113 ], [ 0, %115 ], [ 1, %108 ], [ 1, %106 ], [ 0, %105 ], [ 0, %103 ]
  ret i8 %117
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
