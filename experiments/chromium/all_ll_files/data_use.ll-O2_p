; ModuleID = '../../components/data_use_measurement/core/data_use.cc'
source_filename = "../../components/data_use_measurement/core/data_use.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.data_use_measurement::DataUse" = type { %"class.base::SupportsUserData.base", %class.GURL, %"class.std::__1::basic_string", i32, i64, i64 }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.GURL* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::SupportsUserData" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN20data_use_measurement7DataUseE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.data_use_measurement::DataUse"*)* @_ZN20data_use_measurement7DataUseD2Ev to i8*), i8* bitcast (void (%"class.data_use_measurement::DataUse"*)* @_ZN20data_use_measurement7DataUseD0Ev to i8*)] }, align 8

@_ZN20data_use_measurement7DataUseC1ENS0_11TrafficTypeE = hidden unnamed_addr alias void (%"class.data_use_measurement::DataUse"*, i32), void (%"class.data_use_measurement::DataUse"*, i32)* @_ZN20data_use_measurement7DataUseC2ENS0_11TrafficTypeE
@_ZN20data_use_measurement7DataUseD1Ev = hidden unnamed_addr alias void (%"class.data_use_measurement::DataUse"*), void (%"class.data_use_measurement::DataUse"*)* @_ZN20data_use_measurement7DataUseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20data_use_measurement7DataUseC2ENS0_11TrafficTypeE(%"class.data_use_measurement::DataUse"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.data_use_measurement::DataUse"* %0 to %"class.base::SupportsUserData"*
  tail call void @_ZN4base16SupportsUserDataC2Ev(%"class.base::SupportsUserData"* %3) #6
  %4 = getelementptr inbounds %"class.data_use_measurement::DataUse", %"class.data_use_measurement::DataUse"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN20data_use_measurement7DataUseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.data_use_measurement::DataUse", %"class.data_use_measurement::DataUse"* %0, i64 0, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %5) #6
  %6 = getelementptr inbounds %"class.data_use_measurement::DataUse", %"class.data_use_measurement::DataUse"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #6
  %8 = getelementptr inbounds %"class.data_use_measurement::DataUse", %"class.data_use_measurement::DataUse"* %0, i64 0, i32 3
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.data_use_measurement::DataUse", %"class.data_use_measurement::DataUse"* %0, i64 0, i32 4
  %10 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN4base16SupportsUserDataC2Ev(%"class.base::SupportsUserData"*) unnamed_addr #1

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20data_use_measurement7DataUseD2Ev(%"class.data_use_measurement::DataUse"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.data_use_measurement::DataUse", %"class.data_use_measurement::DataUse"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN20data_use_measurement7DataUseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.data_use_measurement::DataUse", %"class.data_use_measurement::DataUse"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #7
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.data_use_measurement::DataUse", %"class.data_use_measurement::DataUse"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %12) #6
  %13 = bitcast %"class.data_use_measurement::DataUse"* %0 to %"class.base::SupportsUserData"*
  tail call void @_ZN4base16SupportsUserDataD2Ev(%"class.base::SupportsUserData"* %13) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base16SupportsUserDataD2Ev(%"class.base::SupportsUserData"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20data_use_measurement7DataUseD0Ev(%"class.data_use_measurement::DataUse"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.data_use_measurement::DataUse", %"class.data_use_measurement::DataUse"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN20data_use_measurement7DataUseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.data_use_measurement::DataUse", %"class.data_use_measurement::DataUse"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #7
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.data_use_measurement::DataUse", %"class.data_use_measurement::DataUse"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %12) #6
  %13 = bitcast %"class.data_use_measurement::DataUse"* %0 to %"class.base::SupportsUserData"*
  tail call void @_ZN4base16SupportsUserDataD2Ev(%"class.base::SupportsUserData"* %13) #6
  %14 = bitcast %"class.data_use_measurement::DataUse"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN20data_use_measurement7DataUse19IncrementTotalBytesEll(%"class.data_use_measurement::DataUse"* nocapture, i64, i64) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.data_use_measurement::DataUse", %"class.data_use_measurement::DataUse"* %0, i64 0, i32 4
  %5 = bitcast i64* %4 to <2 x i64>*
  %6 = load <2 x i64>, <2 x i64>* %5, align 8
  %7 = insertelement <2 x i64> undef, i64 %2, i32 0
  %8 = insertelement <2 x i64> %7, i64 %1, i32 1
  %9 = add nsw <2 x i64> %6, %8
  %10 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %10, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
