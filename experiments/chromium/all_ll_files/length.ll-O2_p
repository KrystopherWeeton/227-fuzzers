; ModuleID = '../../third_party/blink/renderer/platform/geometry/length.cc'
source_filename = "../../third_party/blink/renderer/platform/geometry/length.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::CalculationValueHandleMap>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::CalculationValueHandleMap>::InstanceStorage" = type { [32 x i8] }
%"class.blink::Length" = type <{ %union.anon, i8, i8, i8, i8 }>
%union.anon = type { i32 }
%"class.blink::CalculationValue" = type <{ %"class.WTF::RefCounted", [4 x i8], %"union.blink::CalculationValue::DataUnion", i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"union.blink::CalculationValue::DataUnion" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::CalculationExpressionNode"* }
%"class.blink::CalculationExpressionNode" = type opaque
%"class.blink::CalculationValueHandleMap" = type { i32, [4 x i8], %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::CalculationValue"* }
%"struct.blink::PixelsAndPercent" = type { float, float }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.3 }
%union.anon.3 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink25CalculationValueHandleMap6insertE13scoped_refptrIKNS_16CalculationValueEE = comdat any

$_ZN5blink25CalculationValueHandleMap12DecrementRefEi = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERiS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERiDnEENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE5eraseEPKS7_ = comdat any

@_ZZN5blinkL11CalcHandlesEvE12s_handle_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map = internal global i64 0, align 8
@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEEEEPKcv = private unnamed_addr constant [117 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, scoped_refptr<const blink::CalculationValue> >]\00", align 1

@_ZN5blink6LengthC1E13scoped_refptrIKNS_16CalculationValueEE = hidden unnamed_addr alias void (%"class.blink::Length"*, %"class.blink::CalculationValue"*), void (%"class.blink::Length"*, %"class.blink::CalculationValue"*)* @_ZN5blink6LengthC2E13scoped_refptrIKNS_16CalculationValueEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6LengthC2E13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::Length"* nocapture, %"class.blink::CalculationValue"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 8, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %5, align 2
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %12, !prof !2

8:                                                ; preds = %2
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map) #8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 32, i1 false) #8
  store i32 1, i32* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 8), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map) #8
  br label %12

12:                                               ; preds = %11, %8, %2
  %13 = tail call i32 @_ZN5blink25CalculationValueHandleMap6insertE13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::CalculationValueHandleMap"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map to %"class.blink::CalculationValueHandleMap"*), %"class.blink::CalculationValue"* %1)
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 %13, i32* %14, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink25CalculationValueHandleMap6insertE13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::CalculationValueHandleMap"*, %"class.blink::CalculationValue"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.scoped_refptr, align 8
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  store %"class.blink::CalculationValue"* %1, %"class.blink::CalculationValue"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::CalculationValueHandleMap", %"class.blink::CalculationValueHandleMap"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::CalculationValueHandleMap", %"class.blink::CalculationValueHandleMap"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = icmp eq %"struct.WTF::KeyValuePair"* %8, null
  br i1 %9, label %70, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::CalculationValueHandleMap", %"class.blink::CalculationValueHandleMap"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = load i32, i32* %6, align 4
  %14 = add i32 %12, -1
  %15 = zext i32 %14 to i64
  br label %16

16:                                               ; preds = %68, %10
  %17 = phi i32 [ %13, %10 ], [ %69, %68 ]
  %18 = shl i32 %17, 15
  %19 = xor i32 %18, -1
  %20 = add i32 %17, %19
  %21 = lshr i32 %20, 10
  %22 = xor i32 %21, %20
  %23 = mul i32 %22, 9
  %24 = lshr i32 %23, 6
  %25 = xor i32 %24, %23
  %26 = shl i32 %25, 11
  %27 = xor i32 %26, -1
  %28 = add i32 %25, %27
  %29 = lshr i32 %28, 16
  %30 = xor i32 %29, %28
  %31 = and i32 %30, %14
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, %17
  br i1 %36, label %65, label %37

37:                                               ; preds = %16
  %38 = xor i32 %30, -1
  %39 = lshr i32 %28, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i32 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i32 %52, 0
  br i1 %55, label %70, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %15
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %17
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %16
  %66 = phi %"struct.WTF::KeyValuePair"* [ %33, %16 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = add nsw i32 %17, 1
  store i32 %69, i32* %6, align 8
  br label %16

70:                                               ; preds = %65, %51, %2
  %71 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0
  %72 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERiS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable"* %71, i32* dereferenceable(4) %6, %class.scoped_refptr* nonnull dereferenceable(8) %3) #8
  %73 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %72, 1
  %74 = and i8 %73, 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %92

76:                                               ; preds = %70
  %77 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %72, 0
  %78 = bitcast %class.scoped_refptr* %3 to i64*
  %79 = load i64, i64* %78, align 8
  store %"class.blink::CalculationValue"* null, %"class.blink::CalculationValue"** %4, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 1
  %81 = bitcast %class.scoped_refptr* %80 to i64*
  %82 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %80, i64 0, i32 0
  %83 = load %"class.blink::CalculationValue"*, %"class.blink::CalculationValue"** %82, align 8
  store i64 %79, i64* %81, align 8
  %84 = icmp eq %"class.blink::CalculationValue"* %83, null
  br i1 %84, label %92, label %85

85:                                               ; preds = %76
  %86 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %83, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %86) #8
  %87 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %85
  call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %83) #8
  %91 = bitcast %"class.blink::CalculationValue"* %83 to i8*
  call void @free(i8* %91) #8
  br label %92

92:                                               ; preds = %70, %76, %85, %90
  %93 = load i32, i32* %6, align 8
  %94 = load %"class.blink::CalculationValue"*, %"class.blink::CalculationValue"** %4, align 8
  %95 = icmp eq %"class.blink::CalculationValue"* %94, null
  br i1 %95, label %103, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %94, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %97) #8
  %98 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %94, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %96
  call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %94) #8
  %102 = bitcast %"class.blink::CalculationValue"* %94 to i8*
  call void @free(i8* %102) #8
  br label %103

103:                                              ; preds = %92, %96, %101
  ret i32 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink6Length15BlendMixedTypesERKS0_dNS_10ValueRangeE(%"class.blink::Length"* noalias nocapture sret, %"class.blink::Length"* nocapture readonly, %"class.blink::Length"* nocapture readonly dereferenceable(8), double, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  switch i8 %7, label %39 [
    i8 8, label %8
    i8 2, label %11
    i8 1, label %25
  ]

8:                                                ; preds = %5
  %9 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %1) #8
  %10 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %10) #8
  br label %47

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %13 = load i8, i8* %12, align 2, !range !3
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::Length"* %1 to float*
  %17 = load float, float* %16, align 4
  br label %22

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sitofp i32 %20 to float
  br label %22

22:                                               ; preds = %18, %15
  %23 = phi float [ %17, %15 ], [ %21, %18 ]
  %24 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %23, i32 0
  br label %39

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %27 = load i8, i8* %26, align 2, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.blink::Length"* %1 to float*
  %31 = load float, float* %30, align 4
  br label %36

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sitofp i32 %34 to float
  br label %36

36:                                               ; preds = %32, %29
  %37 = phi float [ %31, %29 ], [ %35, %32 ]
  %38 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %37, i32 1
  br label %39

39:                                               ; preds = %36, %22, %5
  %40 = phi <2 x float> [ %38, %36 ], [ %24, %22 ], [ zeroinitializer, %5 ]
  %41 = tail call noalias i8* @malloc(i64 24) #8
  %42 = bitcast i8* %41 to %"class.blink::CalculationValue"*
  %43 = bitcast i8* %41 to i32*
  store i32 1, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %41, i64 8
  %45 = bitcast i8* %44 to <2 x float>*
  store <2 x float> %40, <2 x float>* %45, align 8
  %46 = getelementptr inbounds i8, i8* %41, i64 16
  store i8 0, i8* %46, align 8
  br label %47

47:                                               ; preds = %8, %39
  %48 = phi %"class.blink::CalculationValue"* [ %42, %39 ], [ %9, %8 ]
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %50 = load i8, i8* %49, align 1
  switch i8 %50, label %82 [
    i8 8, label %51
    i8 2, label %54
    i8 1, label %68
  ]

51:                                               ; preds = %47
  %52 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %2) #8
  %53 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %53) #8
  br label %90

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 3
  %56 = load i8, i8* %55, align 2, !range !3
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.blink::Length"* %2 to float*
  %60 = load float, float* %59, align 4
  br label %65

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = sitofp i32 %63 to float
  br label %65

65:                                               ; preds = %61, %58
  %66 = phi float [ %60, %58 ], [ %64, %61 ]
  %67 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %66, i32 0
  br label %82

68:                                               ; preds = %47
  %69 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 3
  %70 = load i8, i8* %69, align 2, !range !3
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %68
  %73 = bitcast %"class.blink::Length"* %2 to float*
  %74 = load float, float* %73, align 4
  br label %79

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = sitofp i32 %77 to float
  br label %79

79:                                               ; preds = %75, %72
  %80 = phi float [ %74, %72 ], [ %78, %75 ]
  %81 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %80, i32 1
  br label %82

82:                                               ; preds = %79, %65, %47
  %83 = phi <2 x float> [ %81, %79 ], [ %67, %65 ], [ zeroinitializer, %47 ]
  %84 = tail call noalias i8* @malloc(i64 24) #8
  %85 = bitcast i8* %84 to %"class.blink::CalculationValue"*
  %86 = bitcast i8* %84 to i32*
  store i32 1, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %84, i64 8
  %88 = bitcast i8* %87 to <2 x float>*
  store <2 x float> %83, <2 x float>* %88, align 8
  %89 = getelementptr inbounds i8, i8* %84, i64 16
  store i8 0, i8* %89, align 8
  br label %90

90:                                               ; preds = %51, %82
  %91 = phi %"class.blink::CalculationValue"* [ %85, %82 ], [ %52, %51 ]
  %92 = tail call %"class.blink::CalculationValue"* @_ZNK5blink16CalculationValue5BlendERKS0_dNS_10ValueRangeE(%"class.blink::CalculationValue"* %48, %"class.blink::CalculationValue"* dereferenceable(24) %91, double %3, i32 %4) #8
  %93 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %93, align 4
  %94 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 8, i8* %94, align 1
  %95 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %95, align 2
  %96 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map to i8*) acquire, align 8
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %102, !prof !2

98:                                               ; preds = %90
  %99 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map) #8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %102, label %101

101:                                              ; preds = %98
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 32, i1 false) #8
  store i32 1, i32* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 8), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map) #8
  br label %102

102:                                              ; preds = %90, %98, %101
  %103 = tail call i32 @_ZN5blink25CalculationValueHandleMap6insertE13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::CalculationValueHandleMap"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map to %"class.blink::CalculationValueHandleMap"*), %"class.blink::CalculationValue"* %92) #8
  %104 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 %103, i32* %104, align 4
  %105 = icmp eq %"class.blink::CalculationValue"* %91, null
  br i1 %105, label %113, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %91, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %107) #8
  %108 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %106
  tail call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %91) #8
  %112 = bitcast %"class.blink::CalculationValue"* %91 to i8*
  tail call void @free(i8* %112) #8
  br label %113

113:                                              ; preds = %102, %106, %111
  %114 = icmp eq %"class.blink::CalculationValue"* %48, null
  br i1 %114, label %122, label %115

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %48, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %116) #8
  %117 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %115
  tail call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %48) #8
  %121 = bitcast %"class.blink::CalculationValue"* %48 to i8*
  tail call void @free(i8* %121) #8
  br label %122

122:                                              ; preds = %113, %115, %120
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CalculationValue"* @_ZNK5blink6Length18AsCalculationValueEv(%"class.blink::Length"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1
  switch i8 %3, label %37 [
    i8 8, label %4
    i8 2, label %9
    i8 1, label %23
  ]

4:                                                ; preds = %1
  %5 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %0)
  %6 = icmp eq %"class.blink::CalculationValue"* %5, null
  br i1 %6, label %45, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %5, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #8
  br label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  %11 = load i8, i8* %10, align 2, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::Length"* %0 to float*
  %15 = load float, float* %14, align 4
  br label %20

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  br label %20

20:                                               ; preds = %16, %13
  %21 = phi float [ %15, %13 ], [ %19, %16 ]
  %22 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %21, i32 0
  br label %37

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  %25 = load i8, i8* %24, align 2, !range !3
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::Length"* %0 to float*
  %29 = load float, float* %28, align 4
  br label %34

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sitofp i32 %32 to float
  br label %34

34:                                               ; preds = %30, %27
  %35 = phi float [ %29, %27 ], [ %33, %30 ]
  %36 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %35, i32 1
  br label %37

37:                                               ; preds = %1, %20, %34
  %38 = phi <2 x float> [ %36, %34 ], [ %22, %20 ], [ zeroinitializer, %1 ]
  %39 = tail call noalias i8* @malloc(i64 24) #8
  %40 = bitcast i8* %39 to %"class.blink::CalculationValue"*
  %41 = bitcast i8* %39 to i32*
  store i32 1, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %39, i64 8
  %43 = bitcast i8* %42 to <2 x float>*
  store <2 x float> %38, <2 x float>* %43, align 8
  %44 = getelementptr inbounds i8, i8* %39, i64 16
  store i8 0, i8* %44, align 8
  br label %45

45:                                               ; preds = %7, %4, %37
  %46 = phi %"class.blink::CalculationValue"* [ %40, %37 ], [ null, %4 ], [ %5, %7 ]
  ret %"class.blink::CalculationValue"* %46
}

declare %"class.blink::CalculationValue"* @_ZNK5blink16CalculationValue5BlendERKS0_dNS_10ValueRangeE(%"class.blink::CalculationValue"*, %"class.blink::CalculationValue"* dereferenceable(24), double, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5blink6Length14BlendSameTypesERKS0_dNS_10ValueRangeE(%"class.blink::Length"* noalias nocapture sret, %"class.blink::Length"* nocapture readonly, %"class.blink::Length"* nocapture readonly dereferenceable(8), double, i32) local_unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 8
  br i1 %8, label %24, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %11 = load i8, i8* %10, align 2, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::Length"* %1 to float*
  %15 = load float, float* %14, align 4
  %16 = fcmp oeq float %15, 0.000000e+00
  br i1 %16, label %21, label %24

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %13, %17
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %23 = load i8, i8* %22, align 1
  br label %24

24:                                               ; preds = %5, %13, %21, %17
  %25 = phi i8 [ %23, %21 ], [ %7, %17 ], [ %7, %13 ], [ 8, %5 ]
  %26 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 3
  %27 = load i8, i8* %26, align 2, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %2 to float*
  %31 = load float, float* %30, align 4
  br label %36

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sitofp i32 %34 to float
  br label %36

36:                                               ; preds = %29, %32
  %37 = phi float [ %31, %29 ], [ %35, %32 ]
  %38 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %39 = load i8, i8* %38, align 2, !range !3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::Length"* %1 to float*
  %43 = load float, float* %42, align 4
  br label %48

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sitofp i32 %46 to float
  br label %48

48:                                               ; preds = %41, %44
  %49 = phi float [ %43, %41 ], [ %47, %44 ]
  %50 = fpext float %37 to double
  %51 = fsub float %49, %37
  %52 = fpext float %51 to double
  %53 = fmul double %52, %3
  %54 = fadd double %53, %50
  %55 = fptrunc double %54 to float
  %56 = icmp eq i32 %4, 1
  br i1 %56, label %57, label %62

57:                                               ; preds = %48
  %58 = fcmp ult float %55, 0x47EFFFFFE0000000
  %59 = fcmp ole float %55, 0.000000e+00
  %60 = select i1 %59, float 0.000000e+00, float %55
  %61 = select i1 %58, float %60, float 0x47EFFFFFE0000000
  br label %62

62:                                               ; preds = %57, %48
  %63 = phi float [ %61, %57 ], [ %55, %48 ]
  %64 = bitcast %"class.blink::Length"* %0 to float*
  store float %63, float* %64, align 4
  %65 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %65, align 4
  %66 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 %25, i8* %66, align 1
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 1, i8* %67, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink6Length19GetPixelsAndPercentEv(%"class.blink::Length"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1
  switch i8 %3, label %37 [
    i8 2, label %4
    i8 1, label %18
    i8 8, label %32
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 2, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.blink::Length"* %0 to float*
  %10 = load float, float* %9, align 4
  br label %15

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  br label %15

15:                                               ; preds = %8, %11
  %16 = phi float [ %10, %8 ], [ %14, %11 ]
  %17 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %16, i32 0
  br label %37

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  %20 = load i8, i8* %19, align 2, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::Length"* %0 to float*
  %24 = load float, float* %23, align 4
  br label %29

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  br label %29

29:                                               ; preds = %22, %25
  %30 = phi float [ %24, %22 ], [ %28, %25 ]
  %31 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %30, i32 1
  br label %37

32:                                               ; preds = %1
  %33 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %0)
  %34 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %33, i64 0, i32 2
  %35 = bitcast %"union.blink::CalculationValue::DataUnion"* %34 to <2 x float>*
  %36 = load <2 x float>, <2 x float>* %35, align 8
  br label %37

37:                                               ; preds = %1, %32, %29, %15
  %38 = phi <2 x float> [ %36, %32 ], [ %31, %29 ], [ %17, %15 ], [ zeroinitializer, %1 ]
  ret <2 x float> %38
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 32, i1 false) #8
  store i32 1, i32* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 8), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map) #8
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 2, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::Length"* %0 to float*
  %14 = load float, float* %13, align 4
  %15 = fptosi float %14 to i32
  br label %19

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  br label %19

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %15, %12 ], [ %18, %16 ]
  %21 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 8) to %"struct.WTF::KeyValuePair"**), align 8
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %21, null
  br i1 %22, label %80, label %23

23:                                               ; preds = %19
  %24 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %25 = add i32 %24, -1
  %26 = zext i32 %25 to i64
  %27 = shl i32 %20, 15
  %28 = xor i32 %27, -1
  %29 = add i32 %20, %28
  %30 = lshr i32 %29, 10
  %31 = xor i32 %30, %29
  %32 = mul i32 %31, 9
  %33 = lshr i32 %32, 6
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 11
  %36 = xor i32 %35, -1
  %37 = add i32 %34, %36
  %38 = lshr i32 %37, 16
  %39 = xor i32 %38, %37
  %40 = and i32 %25, %39
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %20
  br i1 %45, label %74, label %46

46:                                               ; preds = %23
  %47 = xor i32 %39, -1
  %48 = lshr i32 %37, 23
  %49 = add i32 %48, %47
  %50 = shl i32 %49, 12
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 7
  %53 = xor i32 %52, %51
  %54 = shl i32 %53, 2
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 20
  %57 = xor i32 %56, %55
  %58 = or i32 %57, 1
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %65, %46
  %61 = phi i32 [ %44, %46 ], [ %72, %65 ]
  %62 = phi i64 [ %41, %46 ], [ %69, %65 ]
  %63 = phi i64 [ 0, %46 ], [ %67, %65 ]
  %64 = icmp eq i32 %61, 0
  br i1 %64, label %80, label %65

65:                                               ; preds = %60
  %66 = icmp eq i64 %63, 0
  %67 = select i1 %66, i64 %59, i64 %63
  %68 = add i64 %67, %62
  %69 = and i64 %68, %26
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %20
  br i1 %73, label %74, label %60

74:                                               ; preds = %65, %23
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %23 ], [ %70, %65 ]
  %76 = icmp eq %"struct.WTF::KeyValuePair"* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1, i32 0
  %79 = load %"class.blink::CalculationValue"*, %"class.blink::CalculationValue"** %78, align 8
  br label %80

80:                                               ; preds = %60, %19, %74, %77
  %81 = phi %"class.blink::CalculationValue"* [ %79, %77 ], [ null, %74 ], [ null, %19 ], [ null, %60 ]
  ret %"class.blink::CalculationValue"* %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink6Length29SubtractFromOneHundredPercentEv(%"class.blink::Length"* noalias nocapture sret, %"class.blink::Length"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %40 [
    i8 1, label %5
    i8 8, label %23
    i8 2, label %26
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %7 = load i8, i8* %6, align 2, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::Length"* %1 to float*
  %11 = load float, float* %10, align 4
  br label %16

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  br label %16

16:                                               ; preds = %9, %12
  %17 = phi float [ %11, %9 ], [ %15, %12 ]
  %18 = fsub float 1.000000e+02, %17
  %19 = bitcast %"class.blink::Length"* %0 to float*
  store float %18, float* %19, align 4, !alias.scope !4
  %20 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %20, align 4, !alias.scope !4
  %21 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 1, i8* %21, align 1, !alias.scope !4
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 1, i8* %22, align 2, !alias.scope !4
  br label %103

23:                                               ; preds = %2
  %24 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %1) #8
  %25 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %24, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %25) #8
  br label %48

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %28 = load i8, i8* %27, align 2, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.blink::Length"* %1 to float*
  %32 = load float, float* %31, align 4
  br label %37

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = sitofp i32 %35 to float
  br label %37

37:                                               ; preds = %33, %30
  %38 = phi float [ %32, %30 ], [ %36, %33 ]
  %39 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %38, i32 0
  br label %40

40:                                               ; preds = %2, %37
  %41 = phi <2 x float> [ %39, %37 ], [ zeroinitializer, %2 ]
  %42 = tail call noalias i8* @malloc(i64 24) #8
  %43 = bitcast i8* %42 to %"class.blink::CalculationValue"*
  %44 = bitcast i8* %42 to i32*
  store i32 1, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %42, i64 8
  %46 = bitcast i8* %45 to <2 x float>*
  store <2 x float> %41, <2 x float>* %46, align 8
  %47 = getelementptr inbounds i8, i8* %42, i64 16
  store i8 0, i8* %47, align 8
  br label %48

48:                                               ; preds = %23, %40
  %49 = phi %"class.blink::CalculationValue"* [ %43, %40 ], [ %24, %23 ]
  %50 = tail call %"class.blink::CalculationValue"* @_ZNK5blink16CalculationValue29SubtractFromOneHundredPercentEv(%"class.blink::CalculationValue"* %49) #8
  %51 = icmp eq %"class.blink::CalculationValue"* %49, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %49, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %53) #8
  %54 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  tail call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %49) #8
  %58 = bitcast %"class.blink::CalculationValue"* %49 to i8*
  tail call void @free(i8* %58) #8
  br label %59

59:                                               ; preds = %48, %52, %57
  %60 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %50, i64 0, i32 3
  %61 = load i8, i8* %60, align 8
  %62 = and i8 %61, 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %74

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %50, i64 0, i32 2
  %66 = bitcast %"union.blink::CalculationValue::DataUnion"* %65 to float*
  %67 = load float, float* %66, align 8
  %68 = fcmp une float %67, 0.000000e+00
  %69 = bitcast %"union.blink::CalculationValue::DataUnion"* %65 to %"struct.blink::PixelsAndPercent"*
  %70 = getelementptr inbounds %"struct.blink::PixelsAndPercent", %"struct.blink::PixelsAndPercent"* %69, i64 0, i32 1
  %71 = load float, float* %70, align 4
  %72 = fcmp une float %71, 0.000000e+00
  %73 = and i1 %68, %72
  br i1 %73, label %74, label %87

74:                                               ; preds = %64, %59
  %75 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %75, align 4
  %76 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 8, i8* %76, align 1
  %77 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %77, align 2
  %78 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map to i8*) acquire, align 8
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %84, !prof !2

80:                                               ; preds = %74
  %81 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map) #8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83

83:                                               ; preds = %80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 32, i1 false) #8
  store i32 1, i32* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 8), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map) #8
  br label %84

84:                                               ; preds = %83, %80, %74
  %85 = tail call i32 @_ZN5blink25CalculationValueHandleMap6insertE13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::CalculationValueHandleMap"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map to %"class.blink::CalculationValueHandleMap"*), %"class.blink::CalculationValue"* %50) #8
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 %85, i32* %86, align 4
  br label %103

87:                                               ; preds = %64
  %88 = fcmp une float %71, 0.000000e+00
  %89 = bitcast %"class.blink::Length"* %0 to float*
  %90 = select i1 %88, float %71, float %67
  %91 = select i1 %88, i8 1, i8 2
  store float %90, float* %89, align 4, !alias.scope !7
  %92 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %92, align 4
  %93 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 %91, i8* %93, align 1
  %94 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 1, i8* %94, align 2
  %95 = icmp eq %"class.blink::CalculationValue"* %50, null
  br i1 %95, label %103, label %96

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %50, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %97) #8
  %98 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %96
  tail call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %50) #8
  %102 = bitcast %"class.blink::CalculationValue"* %50 to i8*
  tail call void @free(i8* %102) #8
  br label %103

103:                                              ; preds = %101, %96, %87, %84, %16
  ret void
}

declare %"class.blink::CalculationValue"* @_ZNK5blink16CalculationValue29SubtractFromOneHundredPercentEv(%"class.blink::CalculationValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink6Length4ZoomEd(%"class.blink::Length"* noalias nocapture sret, %"class.blink::Length"* nocapture readonly, double) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  switch i8 %5, label %47 [
    i8 2, label %6
    i8 8, label %32
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %8 = load i8, i8* %7, align 2, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Length"* %1 to float*
  %12 = load float, float* %11, align 4
  br label %17

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  br label %17

17:                                               ; preds = %10, %13
  %18 = phi float [ %12, %10 ], [ %16, %13 ]
  %19 = fpext float %18 to double
  %20 = fmul double %19, %2
  %21 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %21, align 4, !alias.scope !12
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 2, i8* %22, align 1, !alias.scope !12
  %23 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 1, i8* %23, align 2, !alias.scope !12
  %24 = fcmp ult double %20, 0x47EFFFFFE0000000
  br i1 %24, label %25, label %29

25:                                               ; preds = %17
  %26 = fcmp ole double %20, 0xC7EFFFFFE0000000
  %27 = select i1 %26, double 0xC7EFFFFFE0000000, double %20
  %28 = fptrunc double %27 to float
  br label %29

29:                                               ; preds = %17, %25
  %30 = phi float [ %28, %25 ], [ 0x47EFFFFFE0000000, %17 ]
  %31 = bitcast %"class.blink::Length"* %0 to float*
  store float %30, float* %31, align 4, !alias.scope !12
  br label %56

32:                                               ; preds = %3
  %33 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %1)
  %34 = tail call %"class.blink::CalculationValue"* @_ZNK5blink16CalculationValue4ZoomEd(%"class.blink::CalculationValue"* %33, double %2) #8
  %35 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 8, i8* %36, align 1
  %37 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 0, i8* %37, align 2
  %38 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map to i8*) acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %44, !prof !2

40:                                               ; preds = %32
  %41 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map) #8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 32, i1 false) #8
  store i32 1, i32* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 8), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map) #8
  br label %44

44:                                               ; preds = %32, %40, %43
  %45 = tail call i32 @_ZN5blink25CalculationValueHandleMap6insertE13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::CalculationValueHandleMap"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map to %"class.blink::CalculationValueHandleMap"*), %"class.blink::CalculationValue"* %34) #8
  %46 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  store i32 %45, i32* %46, align 4
  br label %56

47:                                               ; preds = %3
  %48 = bitcast %"class.blink::Length"* %1 to i64*
  %49 = bitcast %"class.blink::Length"* %0 to i64*
  %50 = load i64, i64* %48, align 4
  store i64 %50, i64* %49, align 4
  %51 = and i64 %50, 280375465082880
  %52 = icmp eq i64 %51, 8796093022208
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %0) #8
  %55 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %54, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %55) #8
  br label %56

56:                                               ; preds = %53, %47, %44, %29
  ret void
}

declare %"class.blink::CalculationValue"* @_ZNK5blink16CalculationValue4ZoomEd(%"class.blink::CalculationValue"*, double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %0)
  %3 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %2, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 32, i1 false) #8
  store i32 1, i32* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map, i64 0, i32 0, i32 0, i64 8), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL11CalcHandlesEvE12s_handle_map) #8
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 2, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::Length"* %0 to float*
  %14 = load float, float* %13, align 4
  %15 = fptosi float %14 to i32
  br label %19

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  br label %19

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %15, %12 ], [ %18, %16 ]
  tail call void @_ZN5blink25CalculationValueHandleMap12DecrementRefEi(%"class.blink::CalculationValueHandleMap"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL11CalcHandlesEvE12s_handle_map to %"class.blink::CalculationValueHandleMap"*), i32 %20)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25CalculationValueHandleMap12DecrementRefEi(%"class.blink::CalculationValueHandleMap"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %1, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::CalculationValueHandleMap", %"class.blink::CalculationValueHandleMap"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %68, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::CalculationValueHandleMap", %"class.blink::CalculationValueHandleMap"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, -1
  %13 = zext i32 %12 to i64
  %14 = shl i32 %1, 15
  %15 = xor i32 %14, -1
  %16 = add i32 %15, %1
  %17 = lshr i32 %16, 10
  %18 = xor i32 %17, %16
  %19 = mul i32 %18, 9
  %20 = lshr i32 %19, 6
  %21 = xor i32 %20, %19
  %22 = shl i32 %21, 11
  %23 = xor i32 %22, -1
  %24 = add i32 %21, %23
  %25 = lshr i32 %24, 16
  %26 = xor i32 %25, %24
  %27 = and i32 %12, %26
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %28
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, %1
  br i1 %32, label %61, label %33

33:                                               ; preds = %9
  %34 = xor i32 %26, -1
  %35 = lshr i32 %24, 23
  %36 = add i32 %35, %34
  %37 = shl i32 %36, 12
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 7
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 2
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 20
  %44 = xor i32 %43, %42
  %45 = or i32 %44, 1
  %46 = zext i32 %45 to i64
  br label %47

47:                                               ; preds = %52, %33
  %48 = phi i32 [ %31, %33 ], [ %59, %52 ]
  %49 = phi i64 [ %28, %33 ], [ %56, %52 ]
  %50 = phi i64 [ 0, %33 ], [ %54, %52 ]
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %47
  %53 = icmp eq i64 %50, 0
  %54 = select i1 %53, i64 %46, i64 %50
  %55 = add i64 %54, %49
  %56 = and i64 %55, %13
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %61, label %47

61:                                               ; preds = %52, %9
  %62 = phi %"struct.WTF::KeyValuePair"* [ %29, %9 ], [ %57, %52 ]
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 1, i32 0
  %66 = load %"class.blink::CalculationValue"*, %"class.blink::CalculationValue"** %65, align 8
  %67 = bitcast %"class.blink::CalculationValue"* %66 to i8*
  br label %68

68:                                               ; preds = %47, %2, %61, %64
  %69 = phi i8* [ %67, %64 ], [ null, %61 ], [ null, %2 ], [ null, %47 ]
  %70 = phi %"class.blink::CalculationValue"* [ %66, %64 ], [ null, %61 ], [ null, %2 ], [ null, %47 ]
  %71 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %165

74:                                               ; preds = %68
  %75 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #8
  store i8* null, i8** %4, align 8
  %76 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0
  %77 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERiDnEENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable"* %76, i32* nonnull dereferenceable(4) %3, i8** nonnull dereferenceable(8) %4) #8
  %78 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %77, 1
  %79 = and i8 %78, 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %95

81:                                               ; preds = %74
  %82 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %77, 0
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 1
  %84 = bitcast %class.scoped_refptr* %83 to i64*
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %83, i64 0, i32 0
  %86 = load %"class.blink::CalculationValue"*, %"class.blink::CalculationValue"** %85, align 8
  store i64 0, i64* %84, align 8
  %87 = icmp eq %"class.blink::CalculationValue"* %86, null
  br i1 %87, label %95, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %86, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %89) #8
  %90 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %86) #8
  %94 = bitcast %"class.blink::CalculationValue"* %86 to i8*
  call void @free(i8* %94) #8
  br label %95

95:                                               ; preds = %74, %81, %88, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #8
  %96 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %97 = icmp eq %"struct.WTF::KeyValuePair"* %96, null
  %98 = getelementptr inbounds %"class.blink::CalculationValueHandleMap", %"class.blink::CalculationValueHandleMap"* %0, i64 0, i32 2, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  br i1 %97, label %156, label %100

100:                                              ; preds = %95
  %101 = add i32 %99, -1
  %102 = zext i32 %101 to i64
  %103 = load i32, i32* %3, align 4
  %104 = shl i32 %103, 15
  %105 = xor i32 %104, -1
  %106 = add i32 %103, %105
  %107 = lshr i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = mul i32 %108, 9
  %110 = lshr i32 %109, 6
  %111 = xor i32 %110, %109
  %112 = shl i32 %111, 11
  %113 = xor i32 %112, -1
  %114 = add i32 %111, %113
  %115 = lshr i32 %114, 16
  %116 = xor i32 %115, %114
  %117 = and i32 %116, %101
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 %118
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %119, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, %103
  br i1 %122, label %151, label %123

123:                                              ; preds = %100
  %124 = xor i32 %116, -1
  %125 = lshr i32 %114, 23
  %126 = add i32 %125, %124
  %127 = shl i32 %126, 12
  %128 = xor i32 %127, %126
  %129 = lshr i32 %128, 7
  %130 = xor i32 %129, %128
  %131 = shl i32 %130, 2
  %132 = xor i32 %131, %130
  %133 = lshr i32 %132, 20
  %134 = xor i32 %133, %132
  %135 = or i32 %134, 1
  %136 = zext i32 %135 to i64
  br label %137

137:                                              ; preds = %142, %123
  %138 = phi i32 [ %121, %123 ], [ %149, %142 ]
  %139 = phi i64 [ %118, %123 ], [ %146, %142 ]
  %140 = phi i64 [ 0, %123 ], [ %144, %142 ]
  %141 = icmp eq i32 %138, 0
  br i1 %141, label %156, label %142

142:                                              ; preds = %137
  %143 = icmp eq i64 %140, 0
  %144 = select i1 %143, i64 %136, i64 %140
  %145 = add i64 %144, %139
  %146 = and i64 %145, %102
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 %146
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %147, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, %103
  br i1 %150, label %151, label %137

151:                                              ; preds = %142, %100
  %152 = phi %"struct.WTF::KeyValuePair"* [ %119, %100 ], [ %147, %142 ]
  %153 = icmp eq %"struct.WTF::KeyValuePair"* %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %151
  %155 = zext i32 %99 to i64
  br label %159

156:                                              ; preds = %137, %151, %95
  %157 = zext i32 %99 to i64
  %158 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 %157
  br label %159

159:                                              ; preds = %156, %154
  %160 = phi i64 [ %155, %154 ], [ %157, %156 ]
  %161 = phi %"struct.WTF::KeyValuePair"* [ %152, %154 ], [ %158, %156 ]
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 %160
  %163 = icmp eq %"struct.WTF::KeyValuePair"* %162, %161
  br i1 %163, label %172, label %164

164:                                              ; preds = %159
  call void @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable"* %76, %"struct.WTF::KeyValuePair"* %161) #8
  br label %172

165:                                              ; preds = %68
  %166 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %70, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %166) #8
  %167 = load i32, i32* %71, align 4
  %168 = icmp ne i32 %167, 0
  %169 = icmp eq %"class.blink::CalculationValue"* %70, null
  %170 = or i1 %169, %168
  br i1 %170, label %172, label %171

171:                                              ; preds = %165
  tail call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %70) #8
  tail call void @free(i8* %69) #8
  br label %172

172:                                              ; preds = %171, %165, %164, %159
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink6Length21NonNanCalculatedValueENS_10LayoutUnitE(%"class.blink::Length"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %0)
  %4 = sitofp i32 %1 to float
  %5 = fmul float %4, 1.562500e-02
  %6 = tail call float @_ZNK5blink16CalculationValue8EvaluateEf(%"class.blink::CalculationValue"* %3, float %5) #8
  %7 = fcmp ord float %6, 0.000000e+00
  %8 = select i1 %7, float %6, float 0.000000e+00
  ret float %8
}

declare float @_ZNK5blink16CalculationValue8EvaluateEf(%"class.blink::CalculationValue"*, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* nocapture readonly, %"class.blink::Length"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 8
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %0)
  %8 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %1)
  %9 = icmp eq %"class.blink::CalculationValue"* %7, %8
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %0)
  %12 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %1)
  %13 = tail call zeroext i1 @_ZNK5blink16CalculationValueeqERKS0_(%"class.blink::CalculationValue"* %11, %"class.blink::CalculationValue"* dereferenceable(24) %12) #8
  br label %14

14:                                               ; preds = %6, %10, %2
  %15 = phi i1 [ false, %2 ], [ true, %6 ], [ %13, %10 ]
  ret i1 %15
}

declare zeroext i1 @_ZNK5blink16CalculationValueeqERKS0_(%"class.blink::CalculationValue"*, %"class.blink::CalculationValue"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERiS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %110, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #8
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %84 = bitcast %class.scoped_refptr* %2 to i64*
  %85 = load i64, i64* %84, align 8
  store %"class.blink::CalculationValue"* null, %"class.blink::CalculationValue"** %83, align 8
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %87 = bitcast %class.scoped_refptr* %86 to i64*
  %88 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %86, i64 0, i32 0
  %89 = load %"class.blink::CalculationValue"*, %"class.blink::CalculationValue"** %88, align 8
  store i64 %85, i64* %87, align 8
  %90 = icmp eq %"class.blink::CalculationValue"* %89, null
  br i1 %90, label %98, label %91

91:                                               ; preds = %79
  %92 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %89, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %92) #8
  %93 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %89, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %91
  tail call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %89) #8
  %97 = bitcast %"class.blink::CalculationValue"* %89 to i8*
  tail call void @free(i8* %97) #8
  br label %98

98:                                               ; preds = %79, %91, %96
  %99 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = add i32 %103, %101
  %105 = shl i32 %104, 1
  %106 = load i32, i32* %12, align 8
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %110, label %108

108:                                              ; preds = %98
  %109 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %110

110:                                              ; preds = %50, %98, %108
  %111 = phi i8 [ 1, %98 ], [ 1, %108 ], [ 0, %50 ]
  %112 = phi %"struct.WTF::KeyValuePair"* [ %81, %98 ], [ %109, %108 ], [ %52, %50 ]
  %113 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %112, 0
  %114 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %113, i8 %111, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #8
  ret %"struct.WTF::KeyValuePair"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %56

18:                                               ; preds = %158
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %159, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %162, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %160, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %52, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %50, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %47, %29
  %32 = phi i64 [ 0, %29 ], [ %48, %47 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %47, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 1, i32 0
  %38 = load %"class.blink::CalculationValue"*, %"class.blink::CalculationValue"** %37, align 8
  %39 = icmp eq %"class.blink::CalculationValue"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #8
  %42 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  tail call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %38) #8
  %46 = bitcast %"class.blink::CalculationValue"* %38 to i8*
  tail call void @free(i8* %46) #8
  br label %47

47:                                               ; preds = %45, %40, %36, %31
  %48 = add nuw nsw i64 %32, 1
  %49 = icmp eq i64 %48, %30
  br i1 %49, label %50, label %31

50:                                               ; preds = %47, %27
  %51 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %51) #8
  br label %52

52:                                               ; preds = %20, %50
  %53 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, -2147483648
  store i32 %55, i32* %53, align 8
  ret %"struct.WTF::KeyValuePair"* %23

56:                                               ; preds = %13, %158
  %57 = phi i64 [ %17, %13 ], [ %159, %158 ]
  %58 = phi i32 [ %7, %13 ], [ %160, %158 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %161, %158 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %162, %158 ]
  %61 = phi i32 [ 0, %13 ], [ %163, %158 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %62, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = add i32 %64, 1
  %66 = icmp ult i32 %65, 2
  br i1 %66, label %158, label %67

67:                                               ; preds = %56
  %68 = shl i32 %64, 15
  %69 = xor i32 %68, -1
  %70 = add i32 %64, %69
  %71 = lshr i32 %70, 10
  %72 = xor i32 %71, %70
  %73 = mul i32 %72, 9
  %74 = lshr i32 %73, 6
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 11
  %77 = xor i32 %76, -1
  %78 = add i32 %75, %77
  %79 = lshr i32 %78, 16
  %80 = xor i32 %79, %78
  %81 = and i32 %80, %14
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %82
  %84 = ptrtoint %"struct.WTF::KeyValuePair"* %83 to i64
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %105, label %88

88:                                               ; preds = %67
  %89 = xor i32 %80, -1
  %90 = lshr i32 %78, 23
  %91 = add i32 %90, %89
  %92 = shl i32 %91, 12
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 7
  %95 = xor i32 %94, %93
  %96 = shl i32 %95, 2
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 20
  %99 = xor i32 %98, %97
  %100 = or i32 %99, 1
  %101 = zext i32 %100 to i64
  br label %111

102:                                              ; preds = %118
  %103 = ptrtoint %"struct.WTF::KeyValuePair"* %125 to i64
  %104 = inttoptr i64 %120 to %"struct.WTF::KeyValuePair"*
  br label %105

105:                                              ; preds = %102, %67
  %106 = phi i64 [ %103, %102 ], [ %84, %67 ]
  %107 = phi %"struct.WTF::KeyValuePair"* [ %104, %102 ], [ null, %67 ]
  %108 = icmp eq %"struct.WTF::KeyValuePair"* %107, null
  %109 = ptrtoint %"struct.WTF::KeyValuePair"* %107 to i64
  %110 = select i1 %108, i64 %106, i64 %109
  br label %130

111:                                              ; preds = %118, %88
  %112 = phi i64 [ 0, %88 ], [ %120, %118 ]
  %113 = phi i32 [ %86, %88 ], [ %128, %118 ]
  %114 = phi i64 [ %84, %88 ], [ %126, %118 ]
  %115 = phi i64 [ %82, %88 ], [ %124, %118 ]
  %116 = phi i64 [ 0, %88 ], [ %122, %118 ]
  %117 = icmp eq i32 %113, %64
  br i1 %117, label %130, label %118

118:                                              ; preds = %111
  %119 = icmp eq i32 %113, -1
  %120 = select i1 %119, i64 %114, i64 %112
  %121 = icmp eq i64 %116, 0
  %122 = select i1 %121, i64 %101, i64 %116
  %123 = add i64 %122, %115
  %124 = and i64 %123, %15
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %124
  %126 = ptrtoint %"struct.WTF::KeyValuePair"* %125 to i64
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %102, label %111

130:                                              ; preds = %111, %105
  %131 = phi i64 [ %110, %105 ], [ %114, %111 ]
  %132 = inttoptr i64 %131 to %"struct.WTF::KeyValuePair"*
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %132, i64 0, i32 1, i32 0
  %134 = load %"class.blink::CalculationValue"*, %"class.blink::CalculationValue"** %133, align 8
  %135 = icmp eq %"class.blink::CalculationValue"* %134, null
  br i1 %135, label %143, label %136

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %134, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %137) #8
  %138 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %136
  tail call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %134) #8
  %142 = bitcast %"class.blink::CalculationValue"* %134 to i8*
  tail call void @free(i8* %142) #8
  br label %143

143:                                              ; preds = %130, %136, %141
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %132, i64 0, i32 0
  %145 = load i32, i32* %63, align 8
  store i32 %145, i32* %144, align 8
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %132, i64 0, i32 1
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %62, i32 1
  %148 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %147, i64 0, i32 0
  %149 = bitcast %class.scoped_refptr* %147 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %class.scoped_refptr* %146 to i64*
  store i64 %150, i64* %151, align 8
  store %"class.blink::CalculationValue"* null, %"class.blink::CalculationValue"** %148, align 8
  %152 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %153 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %152, i64 %62
  %154 = icmp eq %"struct.WTF::KeyValuePair"* %153, %3
  %155 = select i1 %154, %"struct.WTF::KeyValuePair"* %132, %"struct.WTF::KeyValuePair"* %60
  %156 = load i32, i32* %6, align 8
  %157 = ptrtoint %"struct.WTF::KeyValuePair"* %152 to i64
  br label %158

158:                                              ; preds = %56, %143
  %159 = phi i64 [ %57, %56 ], [ %157, %143 ]
  %160 = phi i32 [ %58, %56 ], [ %156, %143 ]
  %161 = phi %"struct.WTF::KeyValuePair"* [ %59, %56 ], [ %152, %143 ]
  %162 = phi %"struct.WTF::KeyValuePair"* [ %60, %56 ], [ %155, %143 ]
  %163 = add i32 %61, 1
  %164 = icmp eq i32 %163, %160
  br i1 %164, label %18, label %56
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERiDnEENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %107, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #8
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %84 = bitcast %class.scoped_refptr* %83 to i64*
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %83, i64 0, i32 0
  %86 = load %"class.blink::CalculationValue"*, %"class.blink::CalculationValue"** %85, align 8
  store i64 0, i64* %84, align 8
  %87 = icmp eq %"class.blink::CalculationValue"* %86, null
  br i1 %87, label %95, label %88

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %86, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %89) #8
  %90 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  tail call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %86) #8
  %94 = bitcast %"class.blink::CalculationValue"* %86 to i8*
  tail call void @free(i8* %94) #8
  br label %95

95:                                               ; preds = %79, %88, %93
  %96 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = add i32 %100, %98
  %102 = shl i32 %101, 1
  %103 = load i32, i32* %12, align 8
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %107, label %105

105:                                              ; preds = %95
  %106 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %107

107:                                              ; preds = %50, %95, %105
  %108 = phi i8 [ 1, %95 ], [ 1, %105 ], [ 0, %50 ]
  %109 = phi %"struct.WTF::KeyValuePair"* [ %81, %95 ], [ %106, %105 ], [ %52, %50 ]
  %110 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %109, 0
  %111 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %110, i8 %108, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %111
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.blink::CalculationValue"*, %"class.blink::CalculationValue"** %3, align 8
  %5 = icmp eq %"class.blink::CalculationValue"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #8
  %8 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %4) #8
  %12 = bitcast %"class.blink::CalculationValue"* %4 to i8*
  tail call void @free(i8* %12) #8
  br label %13

13:                                               ; preds = %2, %6, %11
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  %18 = and i32 %17, 2147483647
  %19 = and i32 %16, -2147483648
  %20 = or i32 %18, %19
  store i32 %20, i32* %15, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -1
  store i32 %23, i32* %21, align 4
  %24 = mul i32 %23, 6
  %25 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ult i32 %24, %26
  %28 = icmp ugt i32 %26, 8
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %37

30:                                               ; preds = %13
  %31 = lshr i32 %26, 1
  %32 = zext i32 %31 to i64
  %33 = shl nuw nsw i64 %32, 4
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %34, i8 0, i64 %33, i1 false) #8
  %35 = bitcast i8* %34 to %"struct.WTF::KeyValuePair"*
  %36 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIi13scoped_refptrIKN5blink16CalculationValueEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %35, i32 %31, %"struct.WTF::KeyValuePair"* null) #8
  br label %37

37:                                               ; preds = %30, %13
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink6Length7PercentIfEES0_T_: argument 0"}
!6 = distinct !{!6, !"_ZN5blink6Length7PercentIfEES0_T_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN5blink6Length5FixedIfEES0_T_: argument 0"}
!9 = distinct !{!9, !"_ZN5blink6Length5FixedIfEES0_T_"}
!10 = distinct !{!10, !11, !"_ZN5blink6Length7PercentIfEES0_T_: argument 0"}
!11 = distinct !{!11, !"_ZN5blink6Length7PercentIfEES0_T_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5blink6Length5FixedIdEES0_T_: argument 0"}
!14 = distinct !{!14, !"_ZN5blink6Length5FixedIdEES0_T_"}
