; ModuleID = '../../third_party/blink/renderer/core/layout/layout_counter.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_counter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1610", i64 }
%"class.std::__1::vector.1610" = type { %"class.std::__1::__vector_base.1611" }
%"class.std::__1::__vector_base.1611" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1612" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1612" = type { %"struct.std::__1::__compressed_pair_elem.1613" }
%"struct.std::__1::__compressed_pair_elem.1613" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<const blink::LayoutObject *, std::__1::unique_ptr<WTF::HashMap<WTF::AtomicString, scoped_refptr<blink::CounterNode>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<scoped_refptr<blink::CounterNode> >, WTF::PartitionAllocator>, std::__1::default_delete<WTF::HashMap<WTF::AtomicString, scoped_refptr<blink::CounterNode>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<scoped_refptr<blink::CounterNode> >, WTF::PartitionAllocator> > >, WTF::PtrHash<const blink::LayoutObject>, WTF::HashTraits<const blink::LayoutObject *>, WTF::HashTraits<std::__1::unique_ptr<WTF::HashMap<WTF::AtomicString, scoped_refptr<blink::CounterNode>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<scoped_refptr<blink::CounterNode> >, WTF::PartitionAllocator>, std::__1::default_delete<WTF::HashMap<WTF::AtomicString, scoped_refptr<blink::CounterNode>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<scoped_refptr<blink::CounterNode> >, WTF::PartitionAllocator> > > >, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<const blink::LayoutObject *, std::__1::unique_ptr<WTF::HashMap<WTF::AtomicString, scoped_refptr<blink::CounterNode>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<scoped_refptr<blink::CounterNode> >, WTF::PartitionAllocator>, std::__1::default_delete<WTF::HashMap<WTF::AtomicString, scoped_refptr<blink::CounterNode>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<scoped_refptr<blink::CounterNode> >, WTF::PartitionAllocator> > >, WTF::PtrHash<const blink::LayoutObject>, WTF::HashTraits<const blink::LayoutObject *>, WTF::HashTraits<std::__1::unique_ptr<WTF::HashMap<WTF::AtomicString, scoped_refptr<blink::CounterNode>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<scoped_refptr<blink::CounterNode> >, WTF::PartitionAllocator>, std::__1::default_delete<WTF::HashMap<WTF::AtomicString, scoped_refptr<blink::CounterNode>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<scoped_refptr<blink::CounterNode> >, WTF::PartitionAllocator> > > >, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.blink::LayoutCounter" = type { %"class.blink::LayoutText", %"class.blink::Persistent.2000", %"class.blink::CounterNode"*, %"class.blink::LayoutCounter"* }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.1998 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.754", %"class.std::__1::unique_ptr.756" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.471", %"class.blink::DataRef.475", %"class.blink::DataRef.670", %"class.blink::DataRef.737", %"class.blink::DataRef.741", %"class.blink::DataRef.745", %"class.blink::DataRef.749", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1617", [4 x i8] }>
%"class.WTF::RefCounted.1617" = type { %"class.base::RefCounted.1618" }
%"class.base::RefCounted.1618" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2050 }
%class.scoped_refptr.2050 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2051", %"class.WTF::Vector.455", %"class.WTF::Vector.2053", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2051" = type { %"class.base::RefCounted.2052" }
%"class.base::RefCounted.2052" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.455" = type { %"class.WTF::VectorBuffer.456" }
%"class.WTF::VectorBuffer.456" = type { %"class.WTF::VectorBufferBase.457" }
%"class.WTF::VectorBufferBase.457" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2053" = type { %"class.WTF::VectorBuffer.2054" }
%"class.WTF::VectorBuffer.2054" = type { %"class.WTF::VectorBufferBase.2055" }
%"class.WTF::VectorBufferBase.2055" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2056 }
%union.anon.2056 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.929", %"class.WTF::Vector.929", i8, i32, %"class.blink::Member.936", %"class.blink::Member.938", %"class.blink::Member.940", %"class.blink::Member.942", %"class.blink::Member.944", %"class.blink::Member.946", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.954", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.960", %"class.blink::Member.962", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.965", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.990", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.999", double, double, i64, i64, %"class.blink::HeapHashSet.1001", %"class.blink::HeapHashSet.1008", i16, i8, %"class.blink::Member.1015", %"class.blink::Member.1017", %"class.blink::Member.1334", %"class.blink::Member.1336", %"class.blink::TextLinkColors", %"class.blink::Member.1338", i8, [7 x i8], %"class.blink::HeapHashMap.1340", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1347", %"class.blink::Member.1352", %"class.blink::Member.1354", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1356", %"class.blink::HeapVector.1358", %"class.std::__1::unique_ptr.1366", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1372", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1385", %"class.WTF::Vector.1387", i8, i8, %"class.std::__1::unique_ptr.1392", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1398", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1406", i8, i32, %"class.blink::Member.1408", %"class.blink::Member.1410", %"class.blink::Member.1412", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1414", %"class.WTF::HashMap.1416", %"class.blink::Member.1421", %"class.blink::Member.1423", %"class.blink::Member.1425", %"class.blink::Member.1427", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1429", i8, i32, %"class.blink::Member.1436", %"class.blink::Member.1438", i32, %"class.blink::Member.1440", %"class.blink::Member.1442", %"class.blink::Member.1444", %"class.std::__1::unique_ptr.1446", i64, %"class.std::__1::unique_ptr.1452", i32, i32, %"class.blink::Member.1463", %"class.blink::Member.1465", %"class.blink::Member.1467", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1469", %"class.WTF::Vector.1471", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1476", %"class.blink::Member.1483", %"class.std::__1::unique_ptr.1485", %"class.blink::Member.1491", i8, i8, %"class.WTF::String", %"class.blink::Member.1493", i8, [7 x i8], %"class.blink::HeapHashMap.1495", %"class.blink::HeapObserverSet", %"class.blink::Member.1509", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1511", i32, i8, i8, %"class.blink::WeakMember.1513", %"class.blink::Member.1514" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.922" }
%"class.blink::HeapHashMap.922" = type { %"class.WTF::HashMap.925" }
%"class.WTF::HashMap.925" = type { %"class.WTF::HashTable.926" }
%"class.WTF::HashTable.926" = type <{ %"struct.WTF::KeyValuePair.928"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.928" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.929" = type { %"class.WTF::VectorBuffer.930" }
%"class.WTF::VectorBuffer.930" = type { %"class.WTF::VectorBufferBase.931" }
%"class.WTF::VectorBufferBase.931" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.932 }
%class.scoped_refptr.932 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.933", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.933" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1538", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1579", i32, i8, [3 x i8], %"class.blink::HeapVector.1581", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1589", %"class.blink::Member.1591", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1600", %"class.blink::Member.1606", %"class.blink::Member.1608", i8, [7 x i8] }>
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1554" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1546" }
%"class.blink::HeapObserverSet.1546" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1547" }
%"class.blink::HeapHashSet.1547" = type { %"class.WTF::HashSet.1550" }
%"class.WTF::HashSet.1550" = type { %"class.WTF::HashTable.1551" }
%"class.WTF::HashTable.1551" = type <{ %"class.blink::WeakMember.1553"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1553" = type opaque
%"class.blink::Supplementable.1554" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1555" }
%"class.blink::HeapHashMap.1555" = type { %"class.WTF::HashMap.1558" }
%"class.WTF::HashMap.1558" = type { %"class.WTF::HashTable.1559" }
%"class.WTF::HashTable.1559" = type <{ %"struct.WTF::KeyValuePair.1561"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1561" = type { i8*, %"class.blink::Member.2041" }
%"class.blink::Member.2041" = type { %"class.blink::MemberBase.2042" }
%"class.blink::MemberBase.2042" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2043" }
%"class.blink::Member.2043" = type { %"class.blink::MemberBase.2044" }
%"class.blink::MemberBase.2044" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1562, %"class.std::__1::unique_ptr.1563", %"class.std::__1::unique_ptr.1563", %"class.std::__1::unique_ptr.1569", %"class.std::__1::unique_ptr.1569", %"class.blink::Member.938", i32, [4 x i8], %"class.WTF::HashSet.1575", i32, i32 }
%class.scoped_refptr.1562 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1563" = type { %"class.std::__1::__compressed_pair.1564" }
%"class.std::__1::__compressed_pair.1564" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"struct.std::__1::__compressed_pair_elem.1565" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1569" = type { %"class.std::__1::__compressed_pair.1570" }
%"class.std::__1::__compressed_pair.1570" = type { %"struct.std::__1::__compressed_pair_elem.1571" }
%"struct.std::__1::__compressed_pair_elem.1571" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1575" = type { %"class.WTF::HashTable.1576" }
%"class.WTF::HashTable.1576" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1579" = type { %"class.blink::MemberBase.1580" }
%"class.blink::MemberBase.1580" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1581" = type { %"class.WTF::Vector.1584" }
%"class.WTF::Vector.1584" = type { %"class.WTF::VectorBuffer.1585" }
%"class.WTF::VectorBuffer.1585" = type { %"class.WTF::VectorBufferBase.1586" }
%"class.WTF::VectorBufferBase.1586" = type { %"class.blink::Member.1587"*, i32, i32 }
%"class.blink::Member.1587" = type opaque
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1593", i32, i32 }
%"class.blink::HeapHashMap.1593" = type { %"class.WTF::HashMap.1596" }
%"class.WTF::HashMap.1596" = type { %"class.WTF::HashTable.1597" }
%"class.WTF::HashTable.1597" = type <{ %"struct.WTF::KeyValuePair.1599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1599" = type opaque
%"class.std::__1::unique_ptr.1600" = type { %"class.std::__1::__compressed_pair.1601" }
%"class.std::__1::__compressed_pair.1601" = type { %"struct.std::__1::__compressed_pair_elem.1602" }
%"struct.std::__1::__compressed_pair_elem.1602" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1606" = type { %"class.blink::MemberBase.1607" }
%"class.blink::MemberBase.1607" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1608" = type { %"class.blink::MemberBase.1609" }
%"class.blink::MemberBase.1609" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.948" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.blink::KURL"* }
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.964 }
%class.scoped_refptr.964 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.965" = type { %"class.WTF::VectorBuffer.966" }
%"class.WTF::VectorBuffer.966" = type { %"class.WTF::VectorBufferBase.967" }
%"class.WTF::VectorBufferBase.967" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.968 }
%class.scoped_refptr.968 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.969", i32, i32, %"class.blink::Persistent.971" }
%"class.WTF::RefCounted.969" = type { %"class.base::RefCounted.970" }
%"class.base::RefCounted.970" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.971" = type { %"class.blink::PersistentBase.972" }
%"class.blink::PersistentBase.972" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.975" }
%"class.blink::HeapHashMap.975" = type { %"class.WTF::HashMap.978" }
%"class.WTF::HashMap.978" = type { %"class.WTF::HashTable.979" }
%"class.WTF::HashTable.979" = type <{ %"struct.WTF::KeyValuePair.981"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.981" = type { %"class.blink::WeakMember.982", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.992" }
%"class.blink::HeapHashMap.992" = type { %"class.WTF::HashMap.995" }
%"class.WTF::HashMap.995" = type { %"class.WTF::HashTable.996" }
%"class.WTF::HashTable.996" = type <{ %"struct.WTF::KeyValuePair.998"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.998" = type opaque
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1001" = type { %"class.WTF::HashSet.1004" }
%"class.WTF::HashSet.1004" = type { %"class.WTF::HashTable.1005" }
%"class.WTF::HashTable.1005" = type <{ %"class.blink::WeakMember.1007"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1007" = type opaque
%"class.blink::HeapHashSet.1008" = type { %"class.WTF::HashSet.1011" }
%"class.WTF::HashSet.1011" = type { %"class.WTF::HashTable.1012" }
%"class.WTF::HashTable.1012" = type <{ %"class.blink::WeakMember.1014"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1014" = type opaque
%"class.blink::Member.1015" = type { %"class.blink::MemberBase.1016" }
%"class.blink::MemberBase.1016" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1017" = type { %"class.blink::MemberBase.1018" }
%"class.blink::MemberBase.1018" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.1021", %"class.blink::Member.1048", %"class.blink::HeapHashMap.1050", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1057", %"class.blink::HeapHashSet.1057", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1063", %"class.blink::Member.1075", %"class.blink::Member.1103", %"class.blink::Member.1105", %"class.blink::Member.1111", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1267", %"class.blink::Member.1273", %"class.blink::HeapHashMap.1275", %"class.blink::HeapHashMap.1282", %"class.std::__1::unique_ptr.1289", i32, %"class.blink::HeapVector.1295", %"class.blink::HeapVector.1295", %"class.blink::HeapVector.1033", %"class.blink::HeapHashSet.1303", %"class.blink::HeapHashMap.1310", %"class.blink::Member.1317", %"class.blink::HeapHashMap.1319", %class.scoped_refptr.1326, %class.scoped_refptr.259, %"class.blink::Member.449", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1327", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1021" = type { %"class.blink::MemberBase.1022" }
%"class.blink::MemberBase.1022" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1025", %"class.blink::HeapVector.1033", i8 }>
%"class.blink::HeapVector.1025" = type { %"class.WTF::Vector.1028" }
%"class.WTF::Vector.1028" = type { %"class.WTF::VectorBuffer.1029" }
%"class.WTF::VectorBuffer.1029" = type { %"class.WTF::VectorBufferBase.1030" }
%"class.WTF::VectorBufferBase.1030" = type { %"class.blink::Member.1031"*, i32, i32 }
%"class.blink::Member.1031" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1044", %"class.blink::Member.1046", %"class.blink::Member.1046", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1044" = type <{ %"class.blink::Member.1046"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1046" = type { %"class.blink::MemberBase.1047" }
%"class.blink::MemberBase.1047" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1046", %"class.blink::Member.1046" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1050" = type { %"class.WTF::HashMap.1053" }
%"class.WTF::HashMap.1053" = type { %"class.WTF::HashTable.1054" }
%"class.WTF::HashTable.1054" = type <{ %"struct.WTF::KeyValuePair.1056"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1056" = type opaque
%"class.blink::HeapHashSet.1057" = type { %"class.WTF::HashSet.1060" }
%"class.WTF::HashSet.1060" = type { %"class.WTF::HashTable.1061" }
%"class.WTF::HashTable.1061" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1065", %"class.blink::Member.1067" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.710" }
%"class.blink::HeapHashMap.710" = type { %"class.WTF::HashMap.713" }
%"class.WTF::HashMap.713" = type { %"class.WTF::HashTable.714" }
%"class.WTF::HashTable.714" = type <{ %"struct.WTF::KeyValuePair.716"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.716" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1071", %"class.blink::Member.1073" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1529", %"class.blink::Member.1067", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.840] }
%"class.blink::HeapVector.1529" = type { %"class.WTF::Vector.1532" }
%"class.WTF::Vector.1532" = type { %"class.WTF::VectorBuffer.1533" }
%"class.WTF::VectorBuffer.1533" = type { %"class.WTF::VectorBufferBase.1534" }
%"class.WTF::VectorBufferBase.1534" = type { %"class.blink::Member.1073"*, i32, i32 }
%class.sk_sp.840 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.841, i32, %"class.absl::optional.842", i8, i32 }
%class.sk_sp.841 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.842" = type { %"class.absl::optional_internal::optional_data.843" }
%"class.absl::optional_internal::optional_data.843" = type { %"class.absl::optional_internal::optional_data_base.844" }
%"class.absl::optional_internal::optional_data_base.844" = type { %"class.absl::optional_internal::optional_data_dtor_base.845" }
%"class.absl::optional_internal::optional_data_dtor_base.845" = type { i8, %union.anon.846 }
%union.anon.846 = type { %struct.SkRect }
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1048", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1079" }
%"class.blink::HeapHashMap.1079" = type { %"class.WTF::HashMap.1082" }
%"class.WTF::HashMap.1082" = type { %"class.WTF::HashTable.1083" }
%"class.WTF::HashTable.1083" = type <{ %"struct.WTF::KeyValuePair.1085"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1085" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1086", %"class.std::__1::unique_ptr.1097" }
%"class.blink::HeapVector.1086" = type { %"class.WTF::Vector.1089" }
%"class.WTF::Vector.1089" = type { %"class.WTF::VectorBuffer.1090" }
%"class.WTF::VectorBuffer.1090" = type { %"class.WTF::VectorBufferBase.1091" }
%"class.WTF::VectorBufferBase.1091" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1092" }
%"class.WTF::Vector.1092" = type { %"class.WTF::VectorBuffer.1093" }
%"class.WTF::VectorBuffer.1093" = type { %"class.WTF::VectorBufferBase.462", [16 x i8] }
%"class.WTF::VectorBufferBase.462" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1109", i8, [7 x i8] }>
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1133", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1115", %"class.WTF::HashMap.1115", %"class.WTF::HashMap.1115", %"class.WTF::HashMap.1120", %class.scoped_refptr.1125, %class.scoped_refptr.1132, %class.scoped_refptr.1131, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1115" = type { %"class.WTF::HashTable.1116" }
%"class.WTF::HashTable.1116" = type <{ %"struct.WTF::KeyValuePair.1119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1119" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2064 }
%class.scoped_refptr.2064 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1126", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1128", %"union.blink::InvalidationSet::Backing.1129", %"union.blink::InvalidationSet::Backing.1130", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1126" = type { %"class.base::RefCounted.1127" }
%"class.base::RefCounted.1127" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1128" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1129" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1130" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1120" = type { %"class.WTF::HashTable.1121" }
%"class.WTF::HashTable.1121" = type <{ %"struct.WTF::KeyValuePair.1124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1124" = type opaque
%class.scoped_refptr.1125 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1131, %class.scoped_refptr.1131 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1126", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1128", %"union.blink::InvalidationSet::Backing.1129", %"union.blink::InvalidationSet::Backing.1130", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1132 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1131 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1137", %"class.blink::HeapHashMap.1137", %"class.blink::HeapHashMap.1137", %"class.blink::HeapHashMap.1137", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1178", %"class.blink::HeapVector.1186", %"class.blink::HeapVector.1194", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1219", %"class.blink::HeapVector.1227", %"class.blink::HeapVector.1236", %"class.WTF::Vector.1243", i32, %"class.blink::Member.1249" }
%"class.blink::HeapHashMap.1137" = type { %"class.WTF::HashMap.1140" }
%"class.WTF::HashMap.1140" = type { %"class.WTF::HashTable.1141" }
%"class.WTF::HashTable.1141" = type <{ %"struct.WTF::KeyValuePair.1143"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1143" = type { %"class.WTF::AtomicString", %"class.blink::Member.2074" }
%"class.blink::Member.2074" = type { %"class.blink::MemberBase.2075" }
%"class.blink::MemberBase.2075" = type { %"class.blink::HeapVector.1144"* }
%"class.blink::HeapVector.1144" = type { %"class.WTF::Vector.1147" }
%"class.WTF::Vector.1147" = type { %"class.WTF::VectorBuffer.1148" }
%"class.WTF::VectorBuffer.1148" = type { %"class.WTF::VectorBufferBase.1149" }
%"class.WTF::VectorBufferBase.1149" = type { %"class.blink::Member.1150"*, i32, i32 }
%"class.blink::Member.1150" = type { %"class.blink::MemberBase.1151" }
%"class.blink::MemberBase.1151" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1154", i64, [4 x i32] }
%"class.blink::Member.1154" = type { %"class.blink::MemberBase.1155" }
%"class.blink::MemberBase.1155" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1173" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1178" = type { %"class.WTF::Vector.1181" }
%"class.WTF::Vector.1181" = type { %"class.WTF::VectorBuffer.1182" }
%"class.WTF::VectorBuffer.1182" = type { %"class.WTF::VectorBufferBase.1183" }
%"class.WTF::VectorBufferBase.1183" = type { %"class.blink::Member.1184"*, i32, i32 }
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.2070" }
%"class.blink::MemberBase.2070" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1186" = type { %"class.WTF::Vector.1189" }
%"class.WTF::Vector.1189" = type { %"class.WTF::VectorBuffer.1190" }
%"class.WTF::VectorBuffer.1190" = type { %"class.WTF::VectorBufferBase.1191" }
%"class.WTF::VectorBufferBase.1191" = type { %"class.blink::Member.1192"*, i32, i32 }
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.2071" }
%"class.blink::MemberBase.2071" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1194" = type { %"class.WTF::Vector.1197" }
%"class.WTF::Vector.1197" = type { %"class.WTF::VectorBuffer.1198" }
%"class.WTF::VectorBuffer.1198" = type { %"class.WTF::VectorBufferBase.1199" }
%"class.WTF::VectorBufferBase.1199" = type { %"class.blink::Member.1200"*, i32, i32 }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1202", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1202" = type { %"class.WTF::Vector.1205" }
%"class.WTF::Vector.1205" = type { %"class.WTF::VectorBuffer.1206" }
%"class.WTF::VectorBuffer.1206" = type { %"class.WTF::VectorBufferBase.1207" }
%"class.WTF::VectorBufferBase.1207" = type { %"class.blink::Member.1208"*, i32, i32 }
%"class.blink::Member.1208" = type opaque
%"class.blink::HeapVector.1211" = type { %"class.WTF::Vector.1214" }
%"class.WTF::Vector.1214" = type { %"class.WTF::VectorBuffer.1215" }
%"class.WTF::VectorBuffer.1215" = type { %"class.WTF::VectorBufferBase.1216" }
%"class.WTF::VectorBufferBase.1216" = type { %"class.blink::Member.1217"*, i32, i32 }
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.2072" }
%"class.blink::MemberBase.2072" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1219" = type { %"class.WTF::Vector.1222" }
%"class.WTF::Vector.1222" = type { %"class.WTF::VectorBuffer.1223" }
%"class.WTF::VectorBuffer.1223" = type { %"class.WTF::VectorBufferBase.1224" }
%"class.WTF::VectorBufferBase.1224" = type { %"class.blink::Member.1225"*, i32, i32 }
%"class.blink::Member.1225" = type { %"class.blink::MemberBase.2073" }
%"class.blink::MemberBase.2073" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", i32, [4 x i8] }>
%"class.blink::HeapVector.1227" = type { %"class.WTF::Vector.1230" }
%"class.WTF::Vector.1230" = type { %"class.WTF::VectorBuffer.1231" }
%"class.WTF::VectorBuffer.1231" = type { %"class.WTF::VectorBufferBase.1232" }
%"class.WTF::VectorBufferBase.1232" = type { %"class.blink::Member.1233"*, i32, i32 }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449" }
%"class.blink::HeapVector.1236" = type { %"class.WTF::Vector.1239" }
%"class.WTF::Vector.1239" = type { %"class.WTF::VectorBuffer.1240" }
%"class.WTF::VectorBuffer.1240" = type { %"class.WTF::VectorBufferBase.1241" }
%"class.WTF::VectorBufferBase.1241" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1154", i32, i32 }
%"class.WTF::Vector.1243" = type { %"class.WTF::VectorBuffer.1244" }
%"class.WTF::VectorBuffer.1244" = type { %"class.WTF::VectorBufferBase.1245" }
%"class.WTF::VectorBufferBase.1245" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1246, i8, [7 x i8] }>
%class.scoped_refptr.1246 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1253", %"class.blink::HeapHashMap.1253", %"class.blink::HeapHashMap.1253", %"class.blink::HeapHashMap.1253" }
%"class.blink::HeapHashMap.1253" = type { %"class.WTF::HashMap.1256" }
%"class.WTF::HashMap.1256" = type { %"class.WTF::HashTable.1257" }
%"class.WTF::HashTable.1257" = type <{ %"struct.WTF::KeyValuePair.1259"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1259" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1260" }
%"class.blink::HeapHashMap.1260" = type { %"class.WTF::HashMap.1263" }
%"class.WTF::HashMap.1263" = type { %"class.WTF::HashTable.1264" }
%"class.WTF::HashTable.1264" = type <{ %"struct.WTF::KeyValuePair.1266"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1266" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2065", %"class.WTF::Vector.2065" }
%"class.WTF::Vector.2065" = type { %"class.WTF::VectorBuffer.2066" }
%"class.WTF::VectorBuffer.2066" = type { %"class.WTF::VectorBufferBase.2067" }
%"class.WTF::VectorBufferBase.2067" = type { %class.scoped_refptr.2064*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1267" = type { %"class.WTF::HashSet.1270" }
%"class.WTF::HashSet.1270" = type { %"class.WTF::HashTable.1271" }
%"class.WTF::HashTable.1271" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1275" = type { %"class.WTF::HashMap.1278" }
%"class.WTF::HashMap.1278" = type { %"class.WTF::HashTable.1279" }
%"class.WTF::HashTable.1279" = type <{ %"struct.WTF::KeyValuePair.1281"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1281" = type opaque
%"class.blink::HeapHashMap.1282" = type { %"class.WTF::HashMap.1285" }
%"class.WTF::HashMap.1285" = type { %"class.WTF::HashTable.1286" }
%"class.WTF::HashTable.1286" = type <{ %"struct.WTF::KeyValuePair.1288"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1288" = type opaque
%"class.std::__1::unique_ptr.1289" = type { %"class.std::__1::__compressed_pair.1290" }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.1291" }
%"struct.std::__1::__compressed_pair_elem.1291" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1295" = type { %"class.WTF::Vector.1298" }
%"class.WTF::Vector.1298" = type { %"class.WTF::VectorBuffer.1299" }
%"class.WTF::VectorBuffer.1299" = type { %"class.WTF::VectorBufferBase.1300" }
%"class.WTF::VectorBufferBase.1300" = type { %"struct.std::__1::pair.1301"*, i32, i32 }
%"struct.std::__1::pair.1301" = type opaque
%"class.blink::HeapVector.1033" = type { %"class.WTF::Vector.1036" }
%"class.WTF::Vector.1036" = type { %"class.WTF::VectorBuffer.1037" }
%"class.WTF::VectorBuffer.1037" = type { %"class.WTF::VectorBufferBase.1038" }
%"class.WTF::VectorBufferBase.1038" = type { %"struct.std::__1::pair.1039"*, i32, i32 }
%"struct.std::__1::pair.1039" = type opaque
%"class.blink::HeapHashSet.1303" = type { %"class.WTF::HashSet.1306" }
%"class.WTF::HashSet.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"class.blink::WeakMember.1309"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1309" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1310" = type { %"class.WTF::HashMap.1313" }
%"class.WTF::HashMap.1313" = type { %"class.WTF::HashTable.1314" }
%"class.WTF::HashTable.1314" = type <{ %"struct.WTF::KeyValuePair.1316"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1316" = type { %"class.WTF::AtomicString", %"class.blink::Member.1200" }
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1319" = type { %"class.WTF::HashMap.1322" }
%"class.WTF::HashMap.1322" = type { %"class.WTF::HashTable.1323" }
%"class.WTF::HashTable.1323" = type <{ %"struct.WTF::KeyValuePair.1325"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1325" = type opaque
%class.scoped_refptr.1326 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1327" = type { %"class.WTF::HashSet.1330" }
%"class.WTF::HashSet.1330" = type { %"class.WTF::HashTable.1331" }
%"class.WTF::HashTable.1331" = type <{ %"class.blink::Member.1333"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1333" = type opaque
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1340" = type { %"class.WTF::HashMap.1343" }
%"class.WTF::HashMap.1343" = type { %"class.WTF::HashTable.1344" }
%"class.WTF::HashTable.1344" = type <{ %"struct.WTF::KeyValuePair.1346"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1346" = type opaque
%"class.WTF::Vector.1347" = type { %"class.WTF::VectorBuffer.1348" }
%"class.WTF::VectorBuffer.1348" = type { %"class.WTF::VectorBufferBase.1349" }
%"class.WTF::VectorBufferBase.1349" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1352" = type { %"class.blink::MemberBase.1353" }
%"class.blink::MemberBase.1353" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1358" = type { %"class.WTF::Vector.1361" }
%"class.WTF::Vector.1361" = type { %"class.WTF::VectorBuffer.1362" }
%"class.WTF::VectorBuffer.1362" = type { %"class.WTF::VectorBufferBase.1363" }
%"class.WTF::VectorBufferBase.1363" = type { %"class.blink::Member.1364"*, i32, i32 }
%"class.blink::Member.1364" = type opaque
%"class.std::__1::unique_ptr.1366" = type { %"class.std::__1::__compressed_pair.1367" }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.1368" }
%"struct.std::__1::__compressed_pair_elem.1368" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1372" = type { %"class.WTF::HashSet.1375" }
%"class.WTF::HashSet.1375" = type { %"class.WTF::HashTable.1376" }
%"class.WTF::HashTable.1376" = type <{ %"class.blink::WeakMember.1378"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1378" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1379", i32, [4 x i8] }>
%"class.WTF::Vector.1379" = type { %"class.WTF::VectorBuffer.1380" }
%"class.WTF::VectorBuffer.1380" = type { %"class.WTF::VectorBufferBase.1381" }
%"class.WTF::VectorBufferBase.1381" = type { %"struct.std::__1::pair.1382"*, i32, i32 }
%"struct.std::__1::pair.1382" = type opaque
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1387" = type { %"class.WTF::VectorBuffer.1388" }
%"class.WTF::VectorBuffer.1388" = type { %"class.WTF::VectorBufferBase.1389" }
%"class.WTF::VectorBufferBase.1389" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1392" = type { %"class.std::__1::__compressed_pair.1393" }
%"class.std::__1::__compressed_pair.1393" = type { %"struct.std::__1::__compressed_pair_elem.1394" }
%"struct.std::__1::__compressed_pair_elem.1394" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1724", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.1944", %"class.std::__1::unique_ptr.1950", %"class.std::__1::unique_ptr.1956", %class.scoped_refptr.1720, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.1962", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1683", %"class.std::__1::unique_ptr.1693" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1639, %"class.WTF::Vector.1640", %"class.std::__1::unique_ptr.1645", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1666, %"class.blink::Persistent.1667" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1639 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1640" = type { %"class.WTF::VectorBuffer.1641" }
%"class.WTF::VectorBuffer.1641" = type { %"class.WTF::VectorBufferBase.1642", [8 x i8] }
%"class.WTF::VectorBufferBase.1642" = type { %class.scoped_refptr.1639*, i32, i32 }
%"class.std::__1::unique_ptr.1645" = type { %"class.std::__1::__compressed_pair.1646" }
%"class.std::__1::__compressed_pair.1646" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"struct.std::__1::__compressed_pair_elem.1647" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1648", %"class.absl::optional.1653", %"class.absl::optional.1658" }
%"class.absl::optional.1648" = type { %"class.absl::optional_internal::optional_data.1649" }
%"class.absl::optional_internal::optional_data.1649" = type { %"class.absl::optional_internal::optional_data_base.1650" }
%"class.absl::optional_internal::optional_data_base.1650" = type { %"class.absl::optional_internal::optional_data_dtor_base.1651" }
%"class.absl::optional_internal::optional_data_dtor_base.1651" = type { i8, %union.anon.1652 }
%union.anon.1652 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1653" = type { %"class.absl::optional_internal::optional_data.1654" }
%"class.absl::optional_internal::optional_data.1654" = type { %"class.absl::optional_internal::optional_data_base.1655" }
%"class.absl::optional_internal::optional_data_base.1655" = type { %"class.absl::optional_internal::optional_data_dtor_base.1656" }
%"class.absl::optional_internal::optional_data_dtor_base.1656" = type { i8, [3 x i8], %union.anon.1657 }
%union.anon.1657 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1658" = type { %"class.absl::optional_internal::optional_data.1659" }
%"class.absl::optional_internal::optional_data.1659" = type { %"class.absl::optional_internal::optional_data_base.1660" }
%"class.absl::optional_internal::optional_data_base.1660" = type { %"class.absl::optional_internal::optional_data_dtor_base.1661" }
%"class.absl::optional_internal::optional_data_dtor_base.1661" = type { i8, %union.anon.1662 }
%union.anon.1662 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1666 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1619", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1619" = type { %"class.std::__1::__compressed_pair.1620" }
%"class.std::__1::__compressed_pair.1620" = type { %"struct.std::__1::__compressed_pair_elem.1621" }
%"struct.std::__1::__compressed_pair_elem.1621" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1622", %"class.absl::optional.1631" }
%"class.absl::optional.1622" = type { %"class.absl::optional_internal::optional_data.1623" }
%"class.absl::optional_internal::optional_data.1623" = type { %"class.absl::optional_internal::optional_data_base.1624" }
%"class.absl::optional_internal::optional_data_base.1624" = type { %"class.absl::optional_internal::optional_data_dtor_base.1625" }
%"class.absl::optional_internal::optional_data_dtor_base.1625" = type { i8, %union.anon.1626 }
%union.anon.1626 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1631" = type { %"class.absl::optional_internal::optional_data.1632" }
%"class.absl::optional_internal::optional_data.1632" = type { %"class.absl::optional_internal::optional_data_base.1633" }
%"class.absl::optional_internal::optional_data_base.1633" = type { %"class.absl::optional_internal::optional_data_dtor_base.1634" }
%"class.absl::optional_internal::optional_data_dtor_base.1634" = type { i8, %union.anon.1635 }
%union.anon.1635 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1667" = type { %"class.blink::PersistentBase.1668" }
%"class.blink::PersistentBase.1668" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1671", %"struct.blink::PhysicalRect", %"class.blink::Member.1681" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.WTF::HashSet.1674"* }
%"class.WTF::HashSet.1674" = type { %"class.WTF::HashTable.1675" }
%"class.WTF::HashTable.1675" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1683" = type { %"class.blink::PersistentBase.1684" }
%"class.blink::PersistentBase.1684" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1687", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1687" = type { %"class.std::__1::__compressed_pair.1688" }
%"class.std::__1::__compressed_pair.1688" = type { %"struct.std::__1::__compressed_pair_elem.1689" }
%"struct.std::__1::__compressed_pair_elem.1689" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1693" = type { %"class.std::__1::__compressed_pair.1694" }
%"class.std::__1::__compressed_pair.1694" = type { %"struct.std::__1::__compressed_pair_elem.1695" }
%"struct.std::__1::__compressed_pair_elem.1695" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1696", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1696" = type { %"class.WTF::HashTable.1699", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1699" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1702", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1702" = type { %"class.std::__1::__compressed_pair.1703" }
%"class.std::__1::__compressed_pair.1703" = type { %"struct.std::__1::__compressed_pair_elem.1704" }
%"struct.std::__1::__compressed_pair_elem.1704" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1705, %"class.std::__1::unique_ptr.1706", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1619", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1705 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1991", i16, %class.scoped_refptr.1705 }
%"class.WTF::ThreadSafeRefCounted.1991" = type { %"class.base::RefCountedThreadSafe.1992" }
%"class.base::RefCountedThreadSafe.1992" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1706" = type { %"class.std::__1::__compressed_pair.1707" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.1708" }
%"struct.std::__1::__compressed_pair_elem.1708" = type { %"class.WTF::Vector.1709"* }
%"class.WTF::Vector.1709" = type { %"class.WTF::VectorBuffer.1710" }
%"class.WTF::VectorBuffer.1710" = type { %"class.WTF::VectorBufferBase.1711" }
%"class.WTF::VectorBufferBase.1711" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1720, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1724" = type { %"class.blink::MemberBase.1725" }
%"class.blink::MemberBase.1725" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1728", %"class.blink::Member.1733", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1735", i8, i32, %"class.blink::Color", %"class.absl::optional.1738", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1743", %"class.blink::Member.1745", %"class.blink::Member.1745", %"class.std::__1::unique_ptr.1748", i32, [4 x i8], %"class.WTF::HashSet.1751", %"class.blink::Member.1758", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1760", %"class.blink::HeapHashSet.1767", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1775", i8, %"class.blink::Member.1781", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1793", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1807", i8, %"class.std::__1::unique_ptr.1813", %"class.std::__1::unique_ptr.1894", %"class.WTF::Vector.1900", i32, %class.scoped_refptr.1905, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1906", %"class.blink::Member.1908", %"class.blink::Member.1910", %"class.blink::HeapHashSet.1912", %"class.blink::HeapHashSet.1919", %"class.std::__1::unique_ptr.1926", %"class.std::__1::unique_ptr.1933", %"class.WTF::Vector.929" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1728" = type { %"class.WTF::HashTable.1729" }
%"class.WTF::HashTable.1729" = type <{ %class.scoped_refptr.1732*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1732 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1733" = type { %"class.blink::MemberBase.1734" }
%"class.blink::MemberBase.1734" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1735" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1736", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.986, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.986 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.987" }>
%"class.base::RefCountedThreadSafe.987" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.988 }
%class.scoped_refptr.988 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1736" = type { %"class.blink::MemberBase.1737" }
%"class.blink::MemberBase.1737" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1738" = type { %"class.absl::optional_internal::optional_data.1739" }
%"class.absl::optional_internal::optional_data.1739" = type { %"class.absl::optional_internal::optional_data_base.1740" }
%"class.absl::optional_internal::optional_data_base.1740" = type { %"class.absl::optional_internal::optional_data_dtor_base.1741" }
%"class.absl::optional_internal::optional_data_dtor_base.1741" = type { i8, %union.anon.1742 }
%union.anon.1742 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1743" = type { %"class.blink::MemberBase.1744" }
%"class.blink::MemberBase.1744" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1745" = type { %"class.blink::MemberBase.1746" }
%"class.blink::MemberBase.1746" = type { %"class.blink::HeapHashSet.1747"* }
%"class.blink::HeapHashSet.1747" = type opaque
%"class.std::__1::unique_ptr.1748" = type { %"class.std::__1::__compressed_pair.1749" }
%"class.std::__1::__compressed_pair.1749" = type { %"struct.std::__1::__compressed_pair_elem.1750" }
%"struct.std::__1::__compressed_pair_elem.1750" = type { %"class.WTF::HashSet.1751"* }
%"class.WTF::HashSet.1751" = type { %"class.WTF::HashTable.1752" }
%"class.WTF::HashTable.1752" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1758" = type { %"class.blink::MemberBase.1759" }
%"class.blink::MemberBase.1759" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1760" = type { %"class.WTF::HashSet.1763" }
%"class.WTF::HashSet.1763" = type { %"class.WTF::HashTable.1764" }
%"class.WTF::HashTable.1764" = type <{ %"class.blink::Member.1766"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1766" = type opaque
%"class.blink::HeapHashSet.1767" = type { %"class.WTF::HashSet.1770" }
%"class.WTF::HashSet.1770" = type { %"class.WTF::HashTable.1771" }
%"class.WTF::HashTable.1771" = type <{ %"class.blink::Member.1773"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1773" = type { %"class.blink::MemberBase.1774" }
%"class.blink::MemberBase.1774" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1979", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1989", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1979" = type { %"class.blink::MemberBase.1980" }
%"class.blink::MemberBase.1980" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1981", %"class.blink::Member.1983", %"class.blink::Member.1985", %"class.blink::Member.1987", %"class.WTF::Vector.929", i16, %class.scoped_refptr.986 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1981" = type { %"class.blink::MemberBase.1982" }
%"class.blink::MemberBase.1982" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1983" = type { %"class.blink::MemberBase.1984" }
%"class.blink::MemberBase.1984" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1985" = type { %"class.blink::MemberBase.1986" }
%"class.blink::MemberBase.1986" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1987" = type { %"class.blink::MemberBase.1988" }
%"class.blink::MemberBase.1988" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1989" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1990", { i64, i64 } }
%"class.blink::WeakMember.1990" = type { %"class.blink::MemberBase.1774" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1781" = type { %"class.blink::MemberBase.1782" }
%"class.blink::MemberBase.1782" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1785", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1785" = type { %"class.WTF::HashTable.1786" }
%"class.WTF::HashTable.1786" = type <{ %"struct.WTF::KeyValuePair.1788"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1788" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1789", i32, i32 }
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.1791" }
%"class.WTF::VectorBufferBase.1791" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1793" = type { %"class.WTF::LinkedHashSet.1796" }
%"class.WTF::LinkedHashSet.1796" = type { %"class.WTF::HashMap.1797", %"class.WTF::VectorBackedLinkedList.1801" }
%"class.WTF::HashMap.1797" = type { %"class.WTF::HashTable.1798" }
%"class.WTF::HashTable.1798" = type <{ %"struct.WTF::KeyValuePair.1800"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1800" = type opaque
%"class.WTF::VectorBackedLinkedList.1801" = type { %"class.WTF::Vector.1802", i32, i32 }
%"class.WTF::Vector.1802" = type { %"class.WTF::VectorBuffer.1803" }
%"class.WTF::VectorBuffer.1803" = type { %"class.WTF::VectorBufferBase.1804" }
%"class.WTF::VectorBufferBase.1804" = type { %"class.WTF::VectorBackedLinkedListNode.1805"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1805" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1807" = type { %"class.std::__1::__compressed_pair.1808" }
%"class.std::__1::__compressed_pair.1808" = type { %"struct.std::__1::__compressed_pair_elem.1809" }
%"struct.std::__1::__compressed_pair_elem.1809" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1816, %class.scoped_refptr.1816, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1871", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1876", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1816 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1817", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1824" }
%"class.WTF::RefCounted.1817" = type { %"class.base::RefCounted.1818" }
%"class.base::RefCounted.1818" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1819", i32, [4 x i8] }>
%"class.WTF::Vector.1819" = type { %"class.WTF::VectorBuffer.1820" }
%"class.WTF::VectorBuffer.1820" = type { %"class.WTF::VectorBufferBase.1821" }
%"class.WTF::VectorBufferBase.1821" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1824" = type { %"class.WTF::VectorBuffer.1825" }
%"class.WTF::VectorBuffer.1825" = type { %"class.WTF::VectorBufferBase.1826" }
%"class.WTF::VectorBufferBase.1826" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1827", %"class.std::__1::unique_ptr.1843", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.785, %class.scoped_refptr.837, %class.scoped_refptr.836 }
%class.scoped_refptr.785 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.783", i8, i8, %class.scoped_refptr.785, i32, i32 }
%"class.WTF::RefCounted.783" = type { %"class.base::RefCounted.784" }
%"class.base::RefCounted.784" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.837 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.874" }
%"class.blink::PaintPropertyNode.874" = type { %"class.WTF::RefCounted.875", i8, i8, %class.scoped_refptr.837, i32, i32 }
%"class.WTF::RefCounted.875" = type { %"class.base::RefCounted.876" }
%"class.base::RefCounted.876" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.836 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.833" }
%"class.blink::PaintPropertyNode.833" = type { %"class.WTF::RefCounted.834", i8, i8, %class.scoped_refptr.836, i32, i32 }
%"class.WTF::RefCounted.834" = type { %"class.base::RefCounted.835" }
%"class.base::RefCounted.835" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1830", %"class.WTF::Vector.1835", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1830" = type { %"class.WTF::VectorBuffer.1831" }
%"class.WTF::VectorBuffer.1831" = type { %"class.WTF::VectorBufferBase.1832" }
%"class.WTF::VectorBufferBase.1832" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1835" = type { %"class.WTF::VectorBuffer.1836" }
%"class.WTF::VectorBuffer.1836" = type { %"class.WTF::VectorBufferBase.1837" }
%"class.WTF::VectorBufferBase.1837" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.799" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.792, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.793", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.786" }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.792 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.818", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.818" = type { %"class.WTF::RefCounted.819", i8, i8, %class.scoped_refptr.792, i32, i32 }
%"class.WTF::RefCounted.819" = type { %"class.base::RefCounted.820" }
%"class.base::RefCounted.820" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.821" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.821" = type { %"class.absl::optional_internal::optional_data.822" }
%"class.absl::optional_internal::optional_data.822" = type { %"class.absl::optional_internal::optional_data_base.823" }
%"class.absl::optional_internal::optional_data_base.823" = type { %"class.absl::optional_internal::optional_data_dtor_base.824" }
%"class.absl::optional_internal::optional_data_dtor_base.824" = type { i8, %union.anon.825 }
%union.anon.825 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.826" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.793" = type { %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.802", %"class.std::__1::unique_ptr.808", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1843" = type { %"class.std::__1::__compressed_pair.1844" }
%"class.std::__1::__compressed_pair.1844" = type { %"struct.std::__1::__compressed_pair_elem.1845" }
%"struct.std::__1::__compressed_pair_elem.1845" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1846", %"class.absl::optional.1846" }
%"class.absl::optional.1846" = type { %"class.absl::optional_internal::optional_data.1847" }
%"class.absl::optional_internal::optional_data.1847" = type { %"class.absl::optional_internal::optional_data_base.1848" }
%"class.absl::optional_internal::optional_data_base.1848" = type { %"class.absl::optional_internal::optional_data_dtor_base.1849" }
%"class.absl::optional_internal::optional_data_dtor_base.1849" = type { i8, [3 x i8], %union.anon.1850 }
%union.anon.1850 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1824"*, %"class.absl::optional.1856", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1856" = type { %"class.absl::optional_internal::optional_data.1857" }
%"class.absl::optional_internal::optional_data.1857" = type { %"class.absl::optional_internal::optional_data_base.1858" }
%"class.absl::optional_internal::optional_data_base.1858" = type { %"class.absl::optional_internal::optional_data_dtor_base.1859" }
%"class.absl::optional_internal::optional_data_dtor_base.1859" = type { i8, %union.anon.1860 }
%union.anon.1860 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1861", %"class.WTF::Vector.1866" }
%"class.WTF::Vector.1861" = type { %"class.WTF::VectorBuffer.1862" }
%"class.WTF::VectorBuffer.1862" = type { %"class.WTF::VectorBufferBase.1863", [128 x i8] }
%"class.WTF::VectorBufferBase.1863" = type { i32*, i32, i32 }
%"class.WTF::Vector.1866" = type { %"class.WTF::VectorBuffer.1867" }
%"class.WTF::VectorBuffer.1867" = type { %"class.WTF::VectorBufferBase.1868", [128 x i8] }
%"class.WTF::VectorBufferBase.1868" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1871" = type { %"class.WTF::VectorBuffer.1872" }
%"class.WTF::VectorBuffer.1872" = type { %"class.WTF::VectorBufferBase.1873" }
%"class.WTF::VectorBufferBase.1873" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1876" = type { %"class.WTF::HashTable.1877" }
%"class.WTF::HashTable.1877" = type <{ %"struct.WTF::KeyValuePair.1880"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1880" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1881", %"class.WTF::Vector.1886" }
%"class.WTF::HashMap.1881" = type { %"class.WTF::HashTable.1882" }
%"class.WTF::HashTable.1882" = type <{ %"struct.WTF::KeyValuePair.1885"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1885" = type opaque
%"class.WTF::Vector.1886" = type { %"class.WTF::VectorBuffer.1887" }
%"class.WTF::VectorBuffer.1887" = type { %"class.WTF::VectorBufferBase.1888" }
%"class.WTF::VectorBufferBase.1888" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1894" = type { %"class.std::__1::__compressed_pair.1895" }
%"class.std::__1::__compressed_pair.1895" = type { %"struct.std::__1::__compressed_pair_elem.1896" }
%"struct.std::__1::__compressed_pair_elem.1896" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1900" = type { %"class.WTF::VectorBuffer.1901" }
%"class.WTF::VectorBuffer.1901" = type { %"class.WTF::VectorBufferBase.1902" }
%"class.WTF::VectorBufferBase.1902" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1905 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1906" = type { %"class.blink::MemberBase.1907" }
%"class.blink::MemberBase.1907" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1908" = type { %"class.blink::MemberBase.1909" }
%"class.blink::MemberBase.1909" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1910" = type { %"class.blink::MemberBase.1911" }
%"class.blink::MemberBase.1911" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1912" = type { %"class.WTF::HashSet.1915" }
%"class.WTF::HashSet.1915" = type { %"class.WTF::HashTable.1916" }
%"class.WTF::HashTable.1916" = type <{ %"class.blink::WeakMember.1918"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1918" = type opaque
%"class.blink::HeapHashSet.1919" = type { %"class.WTF::HashSet.1922" }
%"class.WTF::HashSet.1922" = type { %"class.WTF::HashTable.1923" }
%"class.WTF::HashTable.1923" = type <{ %"class.blink::WeakMember.1925"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1925" = type opaque
%"class.std::__1::unique_ptr.1926" = type { %"class.std::__1::__compressed_pair.1927" }
%"class.std::__1::__compressed_pair.1927" = type { %"struct.std::__1::__compressed_pair_elem.1928" }
%"struct.std::__1::__compressed_pair_elem.1928" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1929" }
%"class.base::time_internal::TimeBase.1929" = type { i64 }
%"class.std::__1::unique_ptr.1933" = type { %"class.std::__1::__compressed_pair.1934" }
%"class.std::__1::__compressed_pair.1934" = type { %"struct.std::__1::__compressed_pair_elem.1935" }
%"struct.std::__1::__compressed_pair_elem.1935" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1936", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1936" = type { %"class.absl::optional_internal::optional_data.1937" }
%"class.absl::optional_internal::optional_data.1937" = type { %"class.absl::optional_internal::optional_data_base.1938" }
%"class.absl::optional_internal::optional_data_base.1938" = type { %"class.absl::optional_internal::optional_data_dtor_base.1939" }
%"class.absl::optional_internal::optional_data_dtor_base.1939" = type { i8, %union.anon.1940 }
%union.anon.1940 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.1944" = type { %"class.std::__1::__compressed_pair.1945" }
%"class.std::__1::__compressed_pair.1945" = type { %"struct.std::__1::__compressed_pair_elem.1946" }
%"struct.std::__1::__compressed_pair_elem.1946" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.1950" = type { %"class.std::__1::__compressed_pair.1951" }
%"class.std::__1::__compressed_pair.1951" = type { %"struct.std::__1::__compressed_pair_elem.1952" }
%"struct.std::__1::__compressed_pair_elem.1952" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.1956" = type { %"class.std::__1::__compressed_pair.1957" }
%"class.std::__1::__compressed_pair.1957" = type { %"struct.std::__1::__compressed_pair_elem.1958" }
%"struct.std::__1::__compressed_pair_elem.1958" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1720 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.1962" = type { %"class.blink::PersistentBase.1963" }
%"class.blink::PersistentBase.1963" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.1966", i64 }
%"class.blink::HeapVector.1966" = type { %"class.WTF::Vector.1969" }
%"class.WTF::Vector.1969" = type { %"class.WTF::VectorBuffer.1970" }
%"class.WTF::VectorBuffer.1970" = type { %"class.WTF::VectorBufferBase.1971", [368 x i8] }
%"class.WTF::VectorBufferBase.1971" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1773", i8, %"class.blink::Member.1972", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1972" = type { %"class.blink::MemberBase.1973" }
%"class.blink::MemberBase.1973" = type { %"class.blink::HeapLinkedHashSet.1974"* }
%"class.blink::HeapLinkedHashSet.1974" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1398" = type { %"class.WTF::Vector.1401" }
%"class.WTF::Vector.1401" = type { %"class.WTF::VectorBuffer.1402" }
%"class.WTF::VectorBuffer.1402" = type { %"class.WTF::VectorBufferBase.1403" }
%"class.WTF::VectorBufferBase.1403" = type { %"class.blink::Member.1404"*, i32, i32 }
%"class.blink::Member.1404" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1406" = type { %"class.blink::MemberBase.1407" }
%"class.blink::MemberBase.1407" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1408" = type { %"class.blink::MemberBase.1409" }
%"class.blink::MemberBase.1409" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1410" = type { %"class.blink::MemberBase.1411" }
%"class.blink::MemberBase.1411" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"struct.WTF::KeyValuePair.1420"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1420" = type opaque
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.989", { i64, i64 } }
%"class.blink::WeakMember.989" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1429" = type { %"class.WTF::HashSet.1432" }
%"class.WTF::HashSet.1432" = type { %"class.WTF::HashTable.1433" }
%"class.WTF::HashTable.1433" = type <{ %"class.blink::Member.1435"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1435" = type opaque
%"class.blink::Member.1436" = type { %"class.blink::MemberBase.1437" }
%"class.blink::MemberBase.1437" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1440" = type { %"class.blink::MemberBase.1441" }
%"class.blink::MemberBase.1441" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1442" = type { %"class.blink::MemberBase.1443" }
%"class.blink::MemberBase.1443" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1444" = type { %"class.blink::MemberBase.1445" }
%"class.blink::MemberBase.1445" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1446" = type { %"class.std::__1::__compressed_pair.1447" }
%"class.std::__1::__compressed_pair.1447" = type { %"struct.std::__1::__compressed_pair_elem.1448" }
%"struct.std::__1::__compressed_pair_elem.1448" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1452" = type { %"class.std::__1::__compressed_pair.1453" }
%"class.std::__1::__compressed_pair.1453" = type { %"struct.std::__1::__compressed_pair_elem.1454" }
%"struct.std::__1::__compressed_pair_elem.1454" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1455", %"class.WTF::HashMap.1455", %"class.WTF::HashMap.1455", %"class.WTF::HashMap.1455", %"class.WTF::HashMap.1455", %"class.WTF::HashMap.1455", %"class.WTF::HashMap.1455", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1455" = type { %"class.WTF::HashTable.1456" }
%"class.WTF::HashTable.1456" = type <{ %"struct.WTF::KeyValuePair.1459"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1459" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1471" = type { %"class.WTF::VectorBuffer.1472" }
%"class.WTF::VectorBuffer.1472" = type { %"class.WTF::VectorBufferBase.1473" }
%"class.WTF::VectorBufferBase.1473" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1476" = type { %"class.WTF::HashMap.1479" }
%"class.WTF::HashMap.1479" = type { %"class.WTF::HashTable.1480" }
%"class.WTF::HashTable.1480" = type <{ %"struct.WTF::KeyValuePair.1482"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1482" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1485" = type { %"class.std::__1::__compressed_pair.1486" }
%"class.std::__1::__compressed_pair.1486" = type { %"struct.std::__1::__compressed_pair_elem.1487" }
%"struct.std::__1::__compressed_pair_elem.1487" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1491" = type { %"class.blink::MemberBase.1492" }
%"class.blink::MemberBase.1492" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1495" = type { %"class.WTF::HashMap.1498" }
%"class.WTF::HashMap.1498" = type { %"class.WTF::HashTable.1499" }
%"class.WTF::HashTable.1499" = type <{ %"struct.WTF::KeyValuePair.1501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1501" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1502" }
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::WeakMember.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1508" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1518", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1525", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1518" = type { %"class.WTF::HashSet.1521" }
%"class.WTF::HashSet.1521" = type { %"class.WTF::HashTable.1522" }
%"class.WTF::HashTable.1522" = type <{ %"class.blink::Member.1524"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1524" = type opaque
%"class.blink::HeapTaskRunnerTimer.1525" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1526", { i64, i64 } }
%"class.blink::WeakMember.1526" = type { %"class.blink::MemberBase.1512" }
%"class.blink::WeakMember.1513" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type <{ %"class.blink::Member.445", i32, i32, %"class.WTF::AtomicString", %"class.blink::Member.453", %"class.WTF::AtomicString", %"class.blink::Member.453", i8, [7 x i8], %"class.WTF::Vector.455", %"class.WTF::Vector.460", %"class.WTF::Vector.465", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::CounterStyle"* }
%"class.WTF::Vector.460" = type { %"class.WTF::VectorBuffer.461" }
%"class.WTF::VectorBuffer.461" = type { %"class.WTF::VectorBufferBase.462" }
%"class.WTF::Vector.465" = type { %"class.WTF::VectorBuffer.466" }
%"class.WTF::VectorBuffer.466" = type { %"class.WTF::VectorBufferBase.467" }
%"class.WTF::VectorBufferBase.467" = type { %"struct.std::__1::pair.468"*, i32, i32 }
%"struct.std::__1::pair.468" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.471" = type { %class.scoped_refptr.472 }
%class.scoped_refptr.472 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.473", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.473" = type { %"class.base::RefCounted.474" }
%"class.base::RefCounted.474" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.475" = type { %class.scoped_refptr.476 }
%class.scoped_refptr.476 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.477", [4 x i8], %"class.blink::DataRef.479", %"class.blink::DataRef.545", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.664", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.477" = type { %"class.base::RefCounted.478" }
%"class.base::RefCounted.478" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.479" = type { %class.scoped_refptr.480 }
%class.scoped_refptr.480 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.481", [4 x i8], %"class.blink::DataRef.483", %"class.blink::Persistent.521", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.481" = type { %"class.base::RefCounted.482" }
%"class.base::RefCounted.482" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.483" = type { %class.scoped_refptr.484 }
%class.scoped_refptr.484 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.485", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.503, %class.scoped_refptr.506, %class.scoped_refptr.509, %class.scoped_refptr.512, %class.scoped_refptr.513, %class.scoped_refptr.514, %"class.blink::Persistent.521", %"class.blink::Persistent.536", %"class.absl::optional.540", %"class.absl::optional.540", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.485" = type { %"class.base::RefCounted.486" }
%"class.base::RefCounted.486" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.487", %"class.std::__1::unique_ptr.492" }
%"class.WTF::Vector.487" = type { %"class.WTF::VectorBuffer.488" }
%"class.WTF::VectorBuffer.488" = type { %"class.WTF::VectorBufferBase.489" }
%"class.WTF::VectorBufferBase.489" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.495", %"class.WTF::Vector.487", i32, i32 }
%"class.WTF::Vector.495" = type { %"class.WTF::VectorBuffer.496" }
%"class.WTF::VectorBuffer.496" = type { %"class.WTF::VectorBufferBase.497" }
%"class.WTF::VectorBufferBase.497" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.503 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.504", [4 x i8] }>
%"class.WTF::RefCounted.504" = type { %"class.base::RefCounted.505" }
%"class.base::RefCounted.505" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.506 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.507", [4 x i8] }>
%"class.WTF::RefCounted.507" = type { %"class.base::RefCounted.508" }
%"class.base::RefCounted.508" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.509 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.510" }>
%"class.WTF::RefCounted.510" = type { %"class.base::RefCounted.511" }
%"class.base::RefCounted.511" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.512 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.513 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.514 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.515", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.515" = type { %"class.base::RefCounted.516" }
%"class.base::RefCounted.516" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.517" }
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.519" }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.536" = type { %"class.blink::PersistentBase.537" }
%"class.blink::PersistentBase.537" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.506, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.540" = type { %"class.absl::optional_internal::optional_data.541" }
%"class.absl::optional_internal::optional_data.541" = type { %"class.absl::optional_internal::optional_data_base.542" }
%"class.absl::optional_internal::optional_data_base.542" = type { %"class.absl::optional_internal::optional_data_dtor_base.543" }
%"class.absl::optional_internal::optional_data_dtor_base.543" = type { i8, [3 x i8], %union.anon.544 }
%union.anon.544 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.521" = type { %"class.blink::PersistentBase.522" }
%"class.blink::PersistentBase.522" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.525" }
%"class.blink::HeapVector.525" = type { %"class.WTF::Vector.528" }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { %"class.blink::Member.531"*, i32, i32 }
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.545" = type { %class.scoped_refptr.546 }
%class.scoped_refptr.546 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.547", %"class.blink::DataRef.549", %"class.blink::DataRef.553", %"class.blink::DataRef.562", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.581", %"class.std::__1::unique_ptr.592", %"class.std::__1::unique_ptr.630", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.652", %"class.WTF::Vector.455", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.547" = type { %"class.base::RefCounted.548" }
%"class.base::RefCounted.548" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.549" = type { %class.scoped_refptr.550 }
%class.scoped_refptr.550 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.551", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.551" = type { %"class.base::RefCounted.552" }
%"class.base::RefCounted.552" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.553" = type { %class.scoped_refptr.554 }
%class.scoped_refptr.554 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.555", [4 x i8], %"class.WTF::Vector.557", i8, [7 x i8] }>
%"class.WTF::RefCounted.555" = type { %"class.base::RefCounted.556" }
%"class.base::RefCounted.556" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.557" = type { %"class.WTF::VectorBuffer.558" }
%"class.WTF::VectorBuffer.558" = type { %"class.WTF::VectorBufferBase.559" }
%"class.WTF::VectorBufferBase.559" = type { i32*, i32, i32 }
%"class.blink::DataRef.562" = type { %class.scoped_refptr.563 }
%class.scoped_refptr.563 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.564", [4 x i8], %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.576", %"class.WTF::Vector.487", %"class.WTF::Vector.487", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.564" = type { %"class.base::RefCounted.565" }
%"class.base::RefCounted.565" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.566" = type { %"class.WTF::HashTable.567" }
%"class.WTF::HashTable.567" = type <{ %"struct.WTF::KeyValuePair.570"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.570" = type { %"class.WTF::String", %"class.WTF::Vector.2045" }
%"class.WTF::Vector.2045" = type { %"class.WTF::VectorBuffer.2046" }
%"class.WTF::VectorBuffer.2046" = type { %"class.WTF::VectorBufferBase.2047" }
%"class.WTF::VectorBufferBase.2047" = type { i64*, i32, i32 }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.575"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.575" = type { i64, %"class.WTF::Vector.455" }
%"class.WTF::HashMap.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"struct.WTF::KeyValuePair.580"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.580" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.581" = type { %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.584" }
%"class.WTF::HashMap.584" = type { %"class.WTF::HashTable.585" }
%"class.WTF::HashTable.585" = type <{ %"struct.WTF::KeyValuePair.588"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.588" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1993", %"class.absl::optional.1993", %"class.absl::optional.1993" }
%"class.absl::optional.1993" = type { %"class.absl::optional_internal::optional_data.1994" }
%"class.absl::optional_internal::optional_data.1994" = type { %"class.absl::optional_internal::optional_data_base.1995" }
%"class.absl::optional_internal::optional_data_base.1995" = type { %"class.absl::optional_internal::optional_data_dtor_base.1996" }
%"class.absl::optional_internal::optional_data_dtor_base.1996" = type { i8, %union.anon.1997 }
%union.anon.1997 = type { i32 }
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.607", %"class.WTF::Vector.595", %"class.WTF::Vector.612", %"class.WTF::Vector.617", %"class.WTF::Vector.622" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.595", %"class.WTF::Vector.595", %"class.WTF::Vector.600" }
%"class.WTF::Vector.600" = type { %"class.WTF::VectorBuffer.601" }
%"class.WTF::VectorBuffer.601" = type { %"class.WTF::VectorBufferBase.602" }
%"class.WTF::VectorBufferBase.602" = type { %class.scoped_refptr.603*, i32, i32 }
%class.scoped_refptr.603 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.604" }
%"class.base::RefCountedThreadSafe.604" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.607" = type { %"class.WTF::VectorBuffer.608" }
%"class.WTF::VectorBuffer.608" = type { %"class.WTF::VectorBufferBase.609" }
%"class.WTF::VectorBufferBase.609" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.595" = type { %"class.WTF::VectorBuffer.596" }
%"class.WTF::VectorBuffer.596" = type { %"class.WTF::VectorBufferBase.597" }
%"class.WTF::VectorBufferBase.597" = type { double*, i32, i32 }
%"class.WTF::Vector.612" = type { %"class.WTF::VectorBuffer.613" }
%"class.WTF::VectorBuffer.613" = type { %"class.WTF::VectorBufferBase.614" }
%"class.WTF::VectorBufferBase.614" = type { i32*, i32, i32 }
%"class.WTF::Vector.617" = type { %"class.WTF::VectorBuffer.618" }
%"class.WTF::VectorBuffer.618" = type { %"class.WTF::VectorBufferBase.619" }
%"class.WTF::VectorBufferBase.619" = type { i32*, i32, i32 }
%"class.WTF::Vector.622" = type { %"class.WTF::VectorBuffer.623" }
%"class.WTF::VectorBuffer.623" = type { %"class.WTF::VectorBufferBase.624" }
%"class.WTF::VectorBufferBase.624" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.633" }
%"class.WTF::Vector.633" = type { %"class.WTF::VectorBuffer.634" }
%"class.WTF::VectorBuffer.634" = type { %"class.WTF::VectorBufferBase.635" }
%"class.WTF::VectorBufferBase.635" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.644" }
%"class.WTF::Vector.644" = type { %"class.WTF::VectorBuffer.645" }
%"class.WTF::VectorBuffer.645" = type { %"class.WTF::VectorBufferBase.646" }
%"class.WTF::VectorBufferBase.646" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.658" }
%"class.WTF::Vector.658" = type { %"class.WTF::VectorBuffer.659" }
%"class.WTF::VectorBuffer.659" = type { %"class.WTF::VectorBufferBase.660" }
%"class.WTF::VectorBufferBase.660" = type { %class.scoped_refptr.661*, i32, i32 }
%class.scoped_refptr.661 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.510", [4 x i8] }>
%"class.blink::Persistent.664" = type { %"class.blink::PersistentBase.665" }
%"class.blink::PersistentBase.665" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.668" }
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.670" = type { %class.scoped_refptr.671 }
%class.scoped_refptr.671 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.672", [4 x i8], %"class.blink::DataRef.674", %"class.blink::DataRef.678", %"class.blink::DataRef.699", %"class.blink::DataRef.717", %"class.blink::DataRef.729", %"class.blink::DataRef.733", %class.scoped_refptr.703, i32, [4 x i8] }>
%"class.WTF::RefCounted.672" = type { %"class.base::RefCounted.673" }
%"class.base::RefCounted.673" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.674" = type { %class.scoped_refptr.675 }
%class.scoped_refptr.675 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.676", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.676" = type { %"class.base::RefCounted.677" }
%"class.base::RefCounted.677" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.678" = type { %class.scoped_refptr.679 }
%class.scoped_refptr.679 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.680", %class.scoped_refptr.682, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.680" = type { %"class.base::RefCounted.681" }
%"class.base::RefCounted.681" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.682 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.683", %"class.std::__1::unique_ptr.689", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.507" }>
%"class.std::__1::unique_ptr.683" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.692, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.692 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.693, %class.SkTDArray.694, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.693 = type { i8*, i32, i32 }
%class.SkTDArray.694 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.695 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.695 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.699" = type { %class.scoped_refptr.700 }
%class.scoped_refptr.700 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.701", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.701" = type { %"class.base::RefCounted.702" }
%"class.base::RefCounted.702" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.703, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.717" = type { %class.scoped_refptr.718 }
%class.scoped_refptr.718 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.719", [4 x i8], %class.scoped_refptr.721, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.719" = type { %"class.base::RefCounted.720" }
%"class.base::RefCounted.720" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.721 = type { %"class.base::RefCountedData.722"* }
%"class.base::RefCountedData.722" = type { %"class.base::RefCountedThreadSafe.723", %"class.WTF::Vector.724" }
%"class.base::RefCountedThreadSafe.723" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.724" = type { %"class.WTF::VectorBuffer.725" }
%"class.WTF::VectorBuffer.725" = type { %"class.WTF::VectorBufferBase.726" }
%"class.WTF::VectorBufferBase.726" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.729" = type { %class.scoped_refptr.730 }
%class.scoped_refptr.730 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.731", %class.scoped_refptr.703, %class.scoped_refptr.703, %class.scoped_refptr.703 }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.733" = type { %class.scoped_refptr.734 }
%class.scoped_refptr.734 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.735", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.735" = type { %"class.base::RefCounted.736" }
%"class.base::RefCounted.736" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.703 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.704", %"class.blink::Persistent.706", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.704" = type { %"class.base::RefCounted.705" }
%"class.base::RefCounted.705" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.706" = type { %"class.blink::PersistentBase.707" }
%"class.blink::PersistentBase.707" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.737" = type { %class.scoped_refptr.738 }
%class.scoped_refptr.738 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.739", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.739" = type { %"class.base::RefCounted.740" }
%"class.base::RefCounted.740" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.741" = type { %class.scoped_refptr.742 }
%class.scoped_refptr.742 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.743", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.743" = type { %"class.base::RefCounted.744" }
%"class.base::RefCounted.744" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.745" = type { %class.scoped_refptr.746 }
%class.scoped_refptr.746 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.747", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.747" = type { %"class.base::RefCounted.748" }
%"class.base::RefCounted.748" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.749" = type { %class.scoped_refptr.750 }
%class.scoped_refptr.750 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.751", %class.scoped_refptr.753 }
%"class.WTF::RefCounted.751" = type { %"class.base::RefCounted.752" }
%"class.base::RefCounted.752" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.753 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.920", %"class.blink::StyleVariables", %class.scoped_refptr.753 }
%"class.WTF::RefCounted.920" = type { %"class.base::RefCounted.921" }
%"class.base::RefCounted.921" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.754" = type { %"class.base::RefCounted.755" }
%"class.base::RefCounted.755" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.759" }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.WTF::Vector.762"* }
%"class.WTF::Vector.762" = type { %"class.WTF::VectorBuffer.2060" }
%"class.WTF::VectorBuffer.2060" = type { %"class.WTF::VectorBufferBase.2061", [32 x i8] }
%"class.WTF::VectorBufferBase.2061" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.770" }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.773", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.900", i8, %"class.absl::optional.906", %class.scoped_refptr.882, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.911" }
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.817, %class.scoped_refptr.831, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.872, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.896 }
%class.scoped_refptr.782 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.817 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.831 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.832 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.785, %class.scoped_refptr.837, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.859", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.838" }
%"class.std::__1::vector.838" = type { %"class.std::__1::__vector_base.839" }
%"class.std::__1::__vector_base.839" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.854" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.840, [20 x float], i32, [4 x i8], %"class.std::__1::vector.847", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.847" = type { %"class.std::__1::__vector_base.848" }
%"class.std::__1::__vector_base.848" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.849" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.865" }
%"class.std::__1::vector.865" = type { %"class.std::__1::__vector_base.866" }
%"class.std::__1::__vector_base.866" = type { i32*, i32*, %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { i32* }
%class.scoped_refptr.872 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.885" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.785, %"class.absl::optional.877", %class.scoped_refptr.882, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.877" = type { %"class.absl::optional_internal::optional_data.878" }
%"class.absl::optional_internal::optional_data.878" = type { %"class.absl::optional_internal::optional_data_base.879" }
%"class.absl::optional_internal::optional_data_base.879" = type { %"class.absl::optional_internal::optional_data_dtor_base.880" }
%"class.absl::optional_internal::optional_data_dtor_base.880" = type { i8, [3 x i8], %union.anon.881 }
%union.anon.881 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.888", i32, [4 x i8] }>
%"class.WTF::Vector.888" = type { %"class.WTF::VectorBuffer.889" }
%"class.WTF::VectorBuffer.889" = type { %"class.WTF::VectorBufferBase.890" }
%"class.WTF::VectorBufferBase.890" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.896 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.906" = type { %"class.absl::optional_internal::optional_data.907" }
%"class.absl::optional_internal::optional_data.907" = type { %"class.absl::optional_internal::optional_data_base.908" }
%"class.absl::optional_internal::optional_data_base.908" = type { %"class.absl::optional_internal::optional_data_dtor_base.909" }
%"class.absl::optional_internal::optional_data_dtor_base.909" = type { i8, %union.anon.910 }
%union.anon.910 = type { %"class.blink::IntRect" }
%class.scoped_refptr.882 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.883", [4 x i8] }
%"class.WTF::RefCounted.883" = type { %"class.base::RefCounted.884" }
%"class.base::RefCounted.884" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.blink::FragmentData"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1998 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.1999" }
%"class.blink::InlineBoxList.1999" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type opaque
%"class.blink::Persistent.2000" = type { %"class.blink::PersistentBase.2001" }
%"class.blink::PersistentBase.2001" = type { %"class.blink::CounterContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::CounterNode" = type { %"class.WTF::RefCounted.2002", i32, i32, i32, %"class.blink::LayoutObject"*, %"class.blink::LayoutCounter"*, %"class.blink::CounterNode"*, %"class.blink::CounterNode"*, %"class.blink::CounterNode"*, %"class.blink::CounterNode"*, %"class.blink::CounterNode"* }
%"class.WTF::RefCounted.2002" = type { %"class.base::RefCounted.2003" }
%"class.base::RefCounted.2003" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::PseudoElement" = type <{ %"class.blink::Element", i8, [7 x i8] }>
%"class.blink::CounterContentData" = type { %"class.blink::ContentData", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.312" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2004", %"class.WTF::String" }
%"class.WTF::StringAppend.2004" = type { %"class.WTF::String", %"class.WTF::AtomicString" }
%class.scoped_refptr.2018 = type { %"class.blink::CounterNode"* }
%"class.std::__1::unique_ptr.2010" = type { %"class.std::__1::__compressed_pair.2011" }
%"class.std::__1::__compressed_pair.2011" = type { %"struct.std::__1::__compressed_pair_elem.2012" }
%"struct.std::__1::__compressed_pair_elem.2012" = type { %"class.WTF::HashMap.2013"* }
%"class.WTF::HashMap.2013" = type { %"class.WTF::HashTable.2014" }
%"class.WTF::HashTable.2014" = type <{ %"struct.WTF::KeyValuePair.2017"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2017" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2018 }
%"class.WTF::HashMap.2005" = type { %"class.WTF::HashTable.2006" }
%"class.WTF::HashTable.2006" = type <{ %"struct.WTF::KeyValuePair.2009"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2009" = type { %"class.blink::LayoutObject"*, %"class.std::__1::unique_ptr.2010" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2077", %"class.blink::Member.2079", %"class.blink::Member.2081", %"class.blink::Member.2100", %"class.blink::Member.2102" }
%"class.blink::Member.2077" = type { %"class.blink::MemberBase.2078" }
%"class.blink::MemberBase.2078" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.2079" = type { %"class.blink::MemberBase.2080" }
%"class.blink::MemberBase.2080" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2081" = type { %"class.blink::MemberBase.2082" }
%"class.blink::MemberBase.2082" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2085", %"class.blink::HeapHashSet.2094" }
%"class.blink::HeapVector.2085" = type { %"class.WTF::Vector.2088" }
%"class.WTF::Vector.2088" = type { %"class.WTF::VectorBuffer.2089" }
%"class.WTF::VectorBuffer.2089" = type { %"class.WTF::VectorBufferBase.2090" }
%"class.WTF::VectorBufferBase.2090" = type { %"class.blink::Member.2091"*, i32, i32 }
%"class.blink::Member.2091" = type { %"class.blink::MemberBase.2092" }
%"class.blink::MemberBase.2092" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2094" = type { %"class.WTF::HashSet.2097" }
%"class.WTF::HashSet.2097" = type { %"class.WTF::HashTable.2098" }
%"class.WTF::HashTable.2098" = type <{ %"class.blink::Member.2091"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2100" = type { %"class.blink::MemberBase.2101" }
%"class.blink::MemberBase.2101" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2102" = type { %"class.blink::MemberBase.2103" }
%"class.blink::MemberBase.2103" = type { %"class.blink::HeapHashSet.2104"* }
%"class.blink::HeapHashSet.2104" = type opaque
%"class.blink::ListItemOrdinal" = type <{ i32, i8, [3 x i8] }>
%"class.blink::HTMLOListElement" = type <{ %"class.blink::HTMLElement", i32, i32, i8, [7 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.WTF::ConditionalDestructor.2015" = type { i8 }
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGTableInterface" = type opaque
%"class.blink::LayoutNGTableSectionInterface" = type opaque
%"class.blink::LayoutNGTableRowInterface" = type opaque
%"class.blink::LayoutNGTableCellInterface" = type opaque
%"class.blink::LayoutNGGridInterface" = type opaque
%"class.blink::AffineTransform" = type { [6 x double] }
%"struct.blink::PaintInfo" = type opaque
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.WTF::Vector.2027" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.2028", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.std::__1::unique_ptr.2028" = type { %"class.std::__1::__compressed_pair.2029" }
%"class.std::__1::__compressed_pair.2029" = type { %"struct.std::__1::__compressed_pair_elem.2030" }
%"struct.std::__1::__compressed_pair_elem.2030" = type { %"class.blink::TransformationMatrix"* }
%"class.WTF::Vector.2034" = type opaque
%"struct.blink::PaintInvalidatorContext" = type opaque
%"class.WTF::HashSet.2035" = type opaque
%"class.base::span" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.anon.2123 = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2137" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2137" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2124", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2124" = type { %"class.std::__1::__vector_base.2125" }
%"class.std::__1::__vector_base.2125" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2132" }
%"class.std::__1::__compressed_pair.2132" = type { %"struct.std::__1::__compressed_pair_elem.2133" }
%"struct.std::__1::__compressed_pair_elem.2133" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2126", i64, i64 }
%"class.std::__1::unique_ptr.2126" = type { %"class.std::__1::__compressed_pair.2127" }
%"class.std::__1::__compressed_pair.2127" = type { %"struct.std::__1::__compressed_pair_elem.2128" }
%"struct.std::__1::__compressed_pair_elem.2128" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.WTF::StringTypeAdapter.2153" = type { %"class.WTF::StringTypeAdapter.2154" }
%"class.WTF::StringTypeAdapter.2154" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.2155" = type { %"class.WTF::StringTypeAdapter.2154" }

$_ZN3WTFplINS_6StringENS_12AtomicStringES1_EENS_12StringAppendINS3_IT_T0_EET1_EERKS6_S7_ = comdat any

$_ZN3WTFplINS_12AtomicStringEEENS_12StringAppendINS_6StringET_EERKS3_S4_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_EcvS1_Ev = comdat any

$_ZNK3WTF7HashMapIPKN5blink12LayoutObjectENSt3__110unique_ptrINS0_INS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEENS5_14default_deleteISG_EEEENS_7PtrHashIS3_EENSC_IS4_EENSC_ISJ_EESF_E2atERKS4_ = comdat any

$_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv = comdat any

$_ZN5blink12LayoutObject12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE = comdat any

$_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv = comdat any

$_ZNK5blink13LayoutCounter7GetNameEv = comdat any

$_ZN5blink12LayoutObject15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink12LayoutObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink12LayoutObject13IsLayoutBlockEv = comdat any

$_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink12LayoutObject19VirtualContinuationEv = comdat any

$_ZNK5blink12LayoutObject18SpannerPlaceholderEv = comdat any

$_ZNK5blink12LayoutObject13HoverAncestorEv = comdat any

$_ZNK5blink10LayoutText28FirstInlineFragmentItemIndexEv = comdat any

$_ZNK5blink10LayoutText5PaintERKNS_9PaintInfoE = comdat any

$_ZN5blink10LayoutText12UpdateLayoutEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZN5blink10LayoutText11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE = comdat any

$_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink10LayoutText6lengthEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink13LayoutCounter8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE = comdat any

$_ZN5blink10LayoutText15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink10LayoutText26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink10LayoutText15TextStartOffsetEv = comdat any

$_ZNK5blink10LayoutText18GetFirstLetterPartEv = comdat any

$_ZNK5blink10LayoutText16GetNGInlineItemsEv = comdat any

$_ZN5blink10LayoutText16GetNGInlineItemsEv = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E6insertINS_17HashMapTranslatorIST_SP_SH_EEPS2_SL_EENS_18HashTableAddResultISU_SM_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E6ExpandEPSM_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E8RehashToEPSM_jSV_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E16LookupForWritingERKS4_ = comdat any

$_ZN3WTF21ConditionalDestructorINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS2_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_I13scoped_refptrIN5blink11CounterNodeEEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKS3_RS8_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_ = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_18CounterContentDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink10TraceTraitINS_18CounterContentDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF12StringAppendINS_6StringENS_12AtomicStringEEC2ES1_S2_ = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_EC2ES3_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_6StringENS_12AtomicStringEE6lengthEv = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E4findERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E5eraseEPKSM_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS7_ = comdat any

@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink13LayoutCounterE = hidden unnamed_addr constant { [126 x i8*], [7 x i8*] } { [126 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutCounter"*)* @_ZN5blink13LayoutCounterD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutCounter"*)* @_ZN5blink13LayoutCounterD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i8*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::ImageResourceObserver"*)* @_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutCounter"*)* @_ZNK5blink13LayoutCounter7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject8AddChildEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject11RemoveChildEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i32)* @_ZN5blink10LayoutText31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink10LayoutText5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1387"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink12LayoutObject16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutText"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink10LayoutText11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutText"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink10LayoutText16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, %"class.WTF::Vector.2027"*, i32)* @_ZNK5blink10LayoutText13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink12LayoutObject38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutText"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink10LayoutText14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink12LayoutObject18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink12LayoutObject18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2034"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink12LayoutObject15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink10LayoutText15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i8)* @_ZNK5blink10LayoutText28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutCounter"*, i32)* @_ZNK5blink13LayoutCounter8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink10LayoutText15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink10LayoutText14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i1)* @_ZN5blink10LayoutText43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutCounter"*)* @_ZN5blink13LayoutCounter15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink12LayoutObject27OffsetFromContainerInternalEPKS0_b to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink12LayoutObject26FlipForWritingModeInternalENS_10LayoutUnitES1_PKNS_9LayoutBoxE to i8*), i8* bitcast (i1 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText11IsWordBreakEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutCounter"*)* @_ZNK5blink13LayoutCounter12OriginalTextEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText15TextStartOffsetEv to i8*), i8* bitcast (%"class.blink::LayoutText"* (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText18GetFirstLetterPartEv to i8*), i8* bitcast (float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.2035"*, %"class.blink::FloatRect"*, float)* @_ZNK5blink10LayoutText5WidthEjjRKNS_4FontENS_10LayoutUnitENS_13TextDirectionEPN3WTF7HashSetIPKNS_14SimpleFontDataENS6_7PtrHashIS9_EENS6_10HashTraitsISA_EENS6_18PartitionAllocatorEEEPNS_9FloatRectEf to i8*), i8* bitcast (float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2035"*, %"class.blink::FloatRect"*, float)* @_ZNK5blink10LayoutText5WidthEjjNS_10LayoutUnitENS_13TextDirectionEbPN3WTF7HashSetIPKNS_14SimpleFontDataENS3_7PtrHashIS6_EENS3_10HashTraitsIS7_EENS3_18PartitionAllocatorEEEPNS_9FloatRectEf to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText24PhysicalLinesBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText13TransformTextEv to i8*), i8* bitcast (void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)* @_ZNK5blink10LayoutText22PositionForCaretOffsetEj to i8*), i8* bitcast (i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)* @_ZNK5blink10LayoutText22CaretOffsetForPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText14CaretMinOffsetEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText14CaretMaxOffsetEv to i8*), i8* bitcast (i16 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText17PreviousCharacterEv to i8*), i8* bitcast (%"class.base::span"* (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText16GetNGInlineItemsEv to i8*), i8* bitcast (%"class.base::span"* (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText16GetNGInlineItemsEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText13TextDidChangeEv to i8*), i8* bitcast (%"class.blink::InlineTextBox"* (%"class.blink::LayoutText"*, i32, i16)* @_ZN5blink10LayoutText13CreateTextBoxEit to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutCounter"*)* @_ZThn8_N5blink13LayoutCounterD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutCounter"*)* @_ZThn8_N5blink13LayoutCounterD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::DisplayItemClient"*)* @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"none\00", align 1
@_ZN5blink26layout_invalidation_reason16kCountersChangedE = external constant [0 x i8], align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"list-item\00", align 1
@_ZN5blink10html_names6kOlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kUlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMenuTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kDirTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_12AtomicStringE13scoped_refptrIN5blink11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS2_EENS8_IS6_EENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [251 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<WTF::AtomicString, scoped_refptr<blink::CounterNode>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<scoped_refptr<blink::CounterNode> >, WTF::PartitionAllocator>]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectENSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS2_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEEEEPKcv = private unnamed_addr constant [555 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::LayoutObject *, std::__1::unique_ptr<WTF::HashMap<WTF::AtomicString, scoped_refptr<blink::CounterNode>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<scoped_refptr<blink::CounterNode> >, WTF::PartitionAllocator>, std::__1::default_delete<WTF::HashMap<WTF::AtomicString, scoped_refptr<blink::CounterNode>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<scoped_refptr<blink::CounterNode> >, WTF::PartitionAllocator> > > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringE13scoped_refptrIN5blink11CounterNodeEEEEEEPKcv = private unnamed_addr constant [120 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, scoped_refptr<blink::CounterNode> >]\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.4 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps = internal global i64 0, align 8
@.str.7 = private unnamed_addr constant [14 x i8] c"LayoutCounter\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.9 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

@_ZN5blink13LayoutCounterC1ERNS_13PseudoElementERKNS_18CounterContentDataE = hidden unnamed_addr alias void (%"class.blink::LayoutCounter"*, %"class.blink::PseudoElement"*, %"class.blink::CounterContentData"*), void (%"class.blink::LayoutCounter"*, %"class.blink::PseudoElement"*, %"class.blink::CounterContentData"*)* @_ZN5blink13LayoutCounterC2ERNS_13PseudoElementERKNS_18CounterContentDataE
@_ZN5blink13LayoutCounterD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutCounter"*), void (%"class.blink::LayoutCounter"*)* @_ZN5blink13LayoutCounterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13LayoutCounterC2ERNS_13PseudoElementERKNS_18CounterContentDataE(%"class.blink::LayoutCounter"*, %"class.blink::PseudoElement"* nocapture readonly dereferenceable(112), %"class.blink::CounterContentData"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  tail call void @_ZN5blink10LayoutTextC2EPNS_4NodeE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"* %4, %"class.blink::Node"* null, %"class.WTF::StringImpl"* %5) #10
  %25 = bitcast %"class.blink::LayoutCounter"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink13LayoutCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink13LayoutCounterE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %25, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.blink::Persistent.2000", %"class.blink::Persistent.2000"* %26, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::Persistent.2000", %"class.blink::Persistent.2000"* %26, i64 0, i32 0, i32 0
  store %"class.blink::CounterContentData"* %2, %"class.blink::CounterContentData"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %29, align 8
  %30 = ptrtoint %"class.blink::CounterContentData"* %2 to i64
  switch i64 %30, label %31 [
    i64 0, label %57
    i64 -1, label %57
  ]

31:                                               ; preds = %24
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #10
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !2

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #10
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %44, align 8
  %46 = icmp eq %"class.blink::PersistentNode"* %45, null
  br i1 %46, label %47, label %50, !prof !2

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %48) #10
  %49 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %44, align 8
  br label %50

50:                                               ; preds = %47, %38
  %51 = phi %"class.blink::PersistentNode"* [ %49, %47 ], [ %45, %38 ]
  %52 = bitcast %"class.blink::PersistentNode"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  store i64 %53, i64* %54, align 8
  %55 = bitcast %"class.blink::PersistentNode"* %51 to %"class.blink::PersistentBase.2001"**
  store %"class.blink::PersistentBase.2001"* %27, %"class.blink::PersistentBase.2001"** %55, align 8
  %56 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %51, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_18CounterContentDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %56, align 8
  store %"class.blink::PersistentNode"* %51, %"class.blink::PersistentNode"** %29, align 8
  br label %57

57:                                               ; preds = %24, %24, %50
  %58 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 2
  %59 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %60 = bitcast %"class.blink::CounterNode"** %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false)
  %61 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %59, align 8
  %62 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::Document"*, %"class.blink::Document"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %63, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  store %"class.blink::Node"* %64, %"class.blink::Node"** %65, align 8
  %66 = icmp eq %"class.blink::Document"* %63, null
  br i1 %66, label %67, label %76

67:                                               ; preds = %57
  %68 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0, i32 0
  br label %69

69:                                               ; preds = %67, %69
  %70 = phi %"class.blink::LayoutObject"* [ %72, %69 ], [ %68, %67 ]
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %70, i64 0, i32 7
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 6, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %69, label %76

76:                                               ; preds = %69, %57
  %77 = phi %"class.blink::Node"* [ %64, %57 ], [ %74, %69 ]
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %77, i64 0, i32 3, i32 0, i32 0
  %79 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::Document"*, %"class.blink::Document"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %81, i64 0, i32 113
  %83 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %83, i64 0, i32 9
  %85 = load i32, i32* %84, align 8
  %86 = add i32 %85, 1
  store i32 %86, i32* %84, align 8
  %87 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %83, i64 0, i32 11
  store i8 1, i8* %87, align 8
  ret void
}

declare void @_ZN5blink10LayoutTextC2EPNS_4NodeE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"*, %"class.blink::Node"*, %"class.WTF::StringImpl"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13LayoutCounterD2Ev(%"class.blink::LayoutCounter"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutCounter"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink13LayoutCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink13LayoutCounterE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  %26 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0
  tail call void @_ZN5blink10LayoutTextD2Ev(%"class.blink::LayoutText"* %26) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink10LayoutTextD2Ev(%"class.blink::LayoutText"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink13LayoutCounterD1Ev(%"class.blink::LayoutCounter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 -1, i32 3
  %3 = bitcast %"class.blink::LayoutCounter"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink13LayoutCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink13LayoutCounterE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutCounter"*, %"class.blink::LayoutCounter"** %2, i64 19
  %5 = bitcast %"class.blink::LayoutCounter"** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %1
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #10
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #10
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %5, align 8
  br label %27

27:                                               ; preds = %1, %15
  %28 = bitcast %"class.blink::LayoutCounter"** %2 to %"class.blink::LayoutText"*
  tail call void @_ZN5blink10LayoutTextD2Ev(%"class.blink::LayoutText"* %28) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13LayoutCounterD0Ev(%"class.blink::LayoutCounter"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutCounter"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink13LayoutCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink13LayoutCounterE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  %26 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0
  tail call void @_ZN5blink10LayoutTextD2Ev(%"class.blink::LayoutText"* %26) #10
  %27 = bitcast %"class.blink::LayoutCounter"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %27) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink13LayoutCounterD0Ev(%"class.blink::LayoutCounter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 -1, i32 3
  %3 = bitcast %"class.blink::LayoutCounter"** %2 to %"class.blink::LayoutCounter"*
  tail call void @_ZN5blink13LayoutCounterD0Ev(%"class.blink::LayoutCounter"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13LayoutCounter15WillBeDestroyedEv(%"class.blink::LayoutCounter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 2
  %4 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %3, align 8
  %5 = icmp eq %"class.blink::CounterNode"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink11CounterNode18RemoveLayoutObjectEPNS_13LayoutCounterE(%"class.blink::CounterNode"* nonnull %4, %"class.blink::LayoutCounter"* %0) #10
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %7, %11
  %12 = phi %"class.blink::LayoutObject"* [ %14, %11 ], [ %2, %7 ]
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 7
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 6, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %11, label %18

18:                                               ; preds = %11, %7
  %19 = phi %"class.blink::Node"* [ %9, %7 ], [ %16, %11 ]
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 0, i32 113
  %25 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutView"* %25, null
  br i1 %26, label %46, label %27

27:                                               ; preds = %18
  br i1 %10, label %28, label %35

28:                                               ; preds = %27, %28
  %29 = phi %"class.blink::LayoutObject"* [ %31, %28 ], [ %2, %27 ]
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 7
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 6, i32 0, i32 0
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %28, label %35

35:                                               ; preds = %28, %27
  %36 = phi %"class.blink::Node"* [ %9, %27 ], [ %33, %28 ]
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::Document"*, %"class.blink::Document"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %40, i64 0, i32 113
  %42 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %42, i64 0, i32 9
  %44 = load i32, i32* %43, align 8
  %45 = add i32 %44, -1
  store i32 %45, i32* %43, align 8
  br label %46

46:                                               ; preds = %18, %35
  %47 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0
  tail call void @_ZN5blink10LayoutText15WillBeDestroyedEv(%"class.blink::LayoutText"* %47) #10
  ret void
}

declare void @_ZN5blink11CounterNode18RemoveLayoutObjectEPNS_13LayoutCounterE(%"class.blink::CounterNode"*, %"class.blink::LayoutCounter"*) local_unnamed_addr #1

declare void @_ZN5blink10LayoutText15WillBeDestroyedEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13LayoutCounter12OriginalTextEv(%"class.blink::LayoutCounter"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.blink::CounterDirectives", align 4
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.WTF::StringAppend.2004", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0, i32 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::CounterContentData"*, %"class.blink::CounterContentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CounterContentData", %"class.blink::CounterContentData"* %12, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 2
  %18 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %17, align 8
  %19 = icmp eq %"class.blink::CounterNode"* %18, null
  br i1 %19, label %20, label %103

20:                                               ; preds = %16, %1
  %21 = icmp eq %"class.blink::LayoutObject"* %10, null
  br i1 %21, label %462, label %22

22:                                               ; preds = %20, %51
  %23 = phi %"class.blink::LayoutObject"* [ %53, %51 ], [ %10, %20 ]
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 16777216
  %28 = icmp eq i96 %27, 0
  br i1 %28, label %29, label %40

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 6, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %462, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::Node"* %31 to i8 (%"class.blink::Node"*)***
  %35 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %34, align 8
  %36 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %35, i64 34
  %37 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %36, align 8
  %38 = tail call zeroext i8 %37(%"class.blink::Node"* nonnull %31) #10
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %462, label %40

40:                                               ; preds = %33, %22
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 5, i32 0
  %42 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %42, i64 0, i32 0, i32 9
  %44 = bitcast [20 x i8]* %43 to i160*
  %45 = load i160, i160* %44, align 8
  %46 = lshr i160 %45, 25
  %47 = trunc i160 %46 to i8
  %48 = and i8 %47, 63
  %49 = add nsw i8 %48, -3
  %50 = icmp ult i8 %49, 3
  br i1 %50, label %55, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 7
  %53 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %52, align 8
  %54 = icmp eq %"class.blink::LayoutObject"* %53, null
  br i1 %54, label %462, label %22

55:                                               ; preds = %40
  br i1 %15, label %103, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.blink::CounterDirectives", %"class.blink::CounterDirectives"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::CounterDirectives", %"class.blink::CounterDirectives"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::CounterDirectives", %"class.blink::CounterDirectives"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %42, i64 0, i32 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %63, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %65, i64 0, i32 45
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %98

70:                                               ; preds = %56, %85
  %71 = phi %"class.blink::LayoutObject"* [ %83, %85 ], [ %23, %56 ]
  %72 = phi %"class.blink::ComputedStyle"* [ %87, %85 ], [ %42, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %57, i8 -86, i64 24, i1 false)
  %73 = load %"class.blink::CounterContentData"*, %"class.blink::CounterContentData"** %11, align 8
  %74 = getelementptr inbounds %"class.blink::CounterContentData", %"class.blink::CounterContentData"* %73, i64 0, i32 1
  call void @_ZNK5blink13ComputedStyle20GetCounterDirectivesERKN3WTF12AtomicStringE(%"class.blink::CounterDirectives"* nonnull sret %4, %"class.blink::ComputedStyle"* %72, %"class.WTF::AtomicString"* dereferenceable(8) %74) #10
  %75 = load i8, i8* %57, align 4, !range !3
  %76 = load i8, i8* %58, align 4
  %77 = or i8 %75, %76
  %78 = load i8, i8* %59, align 4
  %79 = or i8 %77, %78
  %80 = icmp eq i8 %79, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #10
  br i1 %80, label %81, label %103

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 7
  %83 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %82, align 8
  %84 = icmp eq %"class.blink::LayoutObject"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %83, i64 0, i32 5, i32 0
  %87 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %87, i64 0, i32 0, i32 3, i32 0, i32 0
  %89 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %89, i64 0, i32 2, i32 0, i32 0
  %91 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %91, i64 0, i32 2, i32 0, i32 0
  %93 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %93, i64 0, i32 45
  %95 = load i32, i32* %94, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %70, label %98

98:                                               ; preds = %81, %85, %56
  %99 = load %"class.blink::CounterContentData"*, %"class.blink::CounterContentData"** %11, align 8
  %100 = getelementptr inbounds %"class.blink::CounterContentData", %"class.blink::CounterContentData"* %99, i64 0, i32 1
  %101 = call %"class.blink::CounterNode"* @_ZN5blink11CounterNode34AncestorNodeAcrossStyleContainmentERKNS_12LayoutObjectERKN3WTF12AtomicStringE(%"class.blink::LayoutObject"* dereferenceable(88) %8, %"class.WTF::AtomicString"* dereferenceable(8) %100) #10
  %102 = icmp eq %"class.blink::CounterNode"* %101, null
  br i1 %102, label %103, label %113

103:                                              ; preds = %70, %98, %55, %16
  %104 = phi %"class.blink::LayoutObject"* [ %23, %98 ], [ %23, %55 ], [ %10, %16 ], [ %23, %70 ]
  %105 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 2
  %106 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %105, align 8
  %107 = icmp eq %"class.blink::CounterNode"* %106, null
  br i1 %107, label %108, label %113

108:                                              ; preds = %103
  %109 = load %"class.blink::CounterContentData"*, %"class.blink::CounterContentData"** %11, align 8
  %110 = getelementptr inbounds %"class.blink::CounterContentData", %"class.blink::CounterContentData"* %109, i64 0, i32 1
  %111 = call fastcc %"class.blink::CounterNode"* @_ZN5blink12_GLOBAL__N_123MakeCounterNodeIfNeededERNS_12LayoutObjectERKN3WTF12AtomicStringEb(%"class.blink::LayoutObject"* dereferenceable(88) %104, %"class.WTF::AtomicString"* dereferenceable(8) %110, i1 zeroext true)
  call void @_ZN5blink11CounterNode15AddLayoutObjectEPNS_13LayoutCounterE(%"class.blink::CounterNode"* %111, %"class.blink::LayoutCounter"* %0) #10
  %112 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %105, align 8
  br label %113

113:                                              ; preds = %108, %103, %98
  %114 = phi %"class.blink::CounterNode"* [ %101, %98 ], [ %106, %103 ], [ %112, %108 ]
  %115 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %114, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %123

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %114, i64 0, i32 6
  %121 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %120, align 8
  %122 = icmp eq %"class.blink::CounterNode"* %121, null
  br i1 %122, label %123, label %125

123:                                              ; preds = %119, %113
  %124 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %114, i64 0, i32 2
  br label %127

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %114, i64 0, i32 3
  br label %127

127:                                              ; preds = %123, %125
  %128 = phi i32* [ %124, %123 ], [ %126, %125 ]
  %129 = load i32, i32* %128, align 4
  %130 = load %"class.blink::CounterContentData"*, %"class.blink::CounterContentData"** %11, align 8
  %131 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #10
  %132 = getelementptr inbounds %"class.blink::CounterContentData", %"class.blink::CounterContentData"* %130, i64 0, i32 2, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %135, label %139

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %136, align 8
  %137 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %138 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %137, i64* %138, align 8
  br label %147

139:                                              ; preds = %127
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %133, %"class.WTF::StringImpl"** %140, align 8
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 1
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %145 = bitcast i8** %144 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %143, %"class.WTF::StringImpl"** %145, align 8
  %146 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %147

147:                                              ; preds = %139, %135
  %148 = phi i64 [ %146, %139 ], [ %137, %135 ]
  %149 = phi i32 [ %142, %139 ], [ 0, %135 ]
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %149, i32* %150, align 8
  %151 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151) #10
  %152 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %148, i64* %152, align 8
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %153, align 8
  %154 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %154, align 8
  %155 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #10
  br i1 %155, label %181, label %156

156:                                              ; preds = %147
  %157 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %158 = load %"class.blink::Node"*, %"class.blink::Node"** %157, align 8
  %159 = icmp eq %"class.blink::Node"* %158, null
  br i1 %159, label %160, label %167

160:                                              ; preds = %156, %160
  %161 = phi %"class.blink::LayoutObject"* [ %163, %160 ], [ %8, %156 ]
  %162 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %161, i64 0, i32 7
  %163 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %163, i64 0, i32 6, i32 0, i32 0
  %165 = load %"class.blink::Node"*, %"class.blink::Node"** %164, align 8
  %166 = icmp eq %"class.blink::Node"* %165, null
  br i1 %166, label %160, label %167

167:                                              ; preds = %160, %156
  %168 = phi %"class.blink::Node"* [ %158, %156 ], [ %165, %160 ]
  %169 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 0, i32 3, i32 0, i32 0
  %170 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %170, i64 0, i32 2, i32 0, i32 0
  %172 = load %"class.blink::Document"*, %"class.blink::Document"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %172, i64 0, i32 59, i32 0, i32 0
  %174 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %173, align 8
  %175 = load %"class.blink::CounterContentData"*, %"class.blink::CounterContentData"** %11, align 8
  %176 = getelementptr inbounds %"class.blink::CounterContentData", %"class.blink::CounterContentData"* %175, i64 0, i32 2
  %177 = getelementptr inbounds %"class.blink::CounterContentData", %"class.blink::CounterContentData"* %175, i64 0, i32 4, i32 0, i32 0
  %178 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %177, align 8
  %179 = call dereferenceable(160) %"class.blink::CounterStyle"* @_ZNK5blink11StyleEngine28FindCounterStyleAcrossScopesERKN3WTF12AtomicStringEPKNS_9TreeScopeE(%"class.blink::StyleEngine"* %174, %"class.WTF::AtomicString"* dereferenceable(8) %176, %"class.blink::TreeScope"* %178) #10
  %180 = icmp eq %"class.blink::CounterStyle"* %179, null
  br i1 %180, label %181, label %203

181:                                              ; preds = %147, %167
  %182 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %183 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %182, i64 0, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %205, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %205

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i33
  %195 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %194, i33 1) #10
  %196 = extractvalue { i33, i1 } %195, 1
  %197 = extractvalue { i33, i1 } %195, 0
  %198 = icmp slt i33 %197, 0
  %199 = or i1 %196, %198
  br i1 %199, label %200, label %201, !prof !2

200:                                              ; preds = %191
  call void @llvm.trap() #10
  unreachable

201:                                              ; preds = %191
  %202 = trunc i33 %197 to i32
  store i32 %202, i32* %192, align 4
  br label %205

203:                                              ; preds = %167
  %204 = call %"class.WTF::StringImpl"* @_ZNK5blink12CounterStyle22GenerateRepresentationEi(%"class.blink::CounterStyle"* nonnull %179, i32 %129) #10
  br label %205

205:                                              ; preds = %181, %186, %201, %203
  %206 = phi i1 [ false, %203 ], [ true, %181 ], [ true, %186 ], [ true, %201 ]
  %207 = phi %"class.blink::CounterStyle"* [ %179, %203 ], [ null, %181 ], [ null, %186 ], [ null, %201 ]
  %208 = phi %"class.WTF::StringImpl"* [ %204, %203 ], [ null, %181 ], [ %184, %186 ], [ %184, %201 ]
  %209 = ptrtoint %"class.WTF::StringImpl"* %208 to i64
  %210 = load %"class.blink::CounterContentData"*, %"class.blink::CounterContentData"** %11, align 8
  %211 = getelementptr inbounds %"class.blink::CounterContentData", %"class.blink::CounterContentData"* %210, i64 0, i32 3, i32 0, i32 0, i32 0
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %459, label %214

214:                                              ; preds = %205
  %215 = load i32, i32* %115, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %226

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %114, i64 0, i32 6
  %220 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %219, align 8
  %221 = icmp eq %"class.blink::CounterNode"* %220, null
  br i1 %221, label %226, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.blink::CounterContentData", %"class.blink::CounterContentData"* %210, i64 0, i32 1
  %224 = call %"class.blink::CounterNode"* @_ZNK5blink11CounterNode30ParentCrossingStyleContainmentERKN3WTF12AtomicStringE(%"class.blink::CounterNode"* %114, %"class.WTF::AtomicString"* dereferenceable(8) %223) #10
  %225 = load %"class.blink::CounterContentData"*, %"class.blink::CounterContentData"** %11, align 8
  br label %226

226:                                              ; preds = %214, %222, %218
  %227 = phi %"class.blink::CounterContentData"* [ %210, %218 ], [ %225, %222 ], [ %210, %214 ]
  %228 = phi %"class.blink::CounterNode"* [ %114, %218 ], [ %224, %222 ], [ %114, %214 ]
  %229 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %228, i64 0, i32 6
  %230 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %229, align 8
  %231 = getelementptr inbounds %"class.blink::CounterContentData", %"class.blink::CounterContentData"* %227, i64 0, i32 1
  %232 = call %"class.blink::CounterNode"* @_ZNK5blink11CounterNode30ParentCrossingStyleContainmentERKN3WTF12AtomicStringE(%"class.blink::CounterNode"* %228, %"class.WTF::AtomicString"* dereferenceable(8) %231) #10
  %233 = icmp eq %"class.blink::CounterNode"* %232, null
  br i1 %233, label %459, label %234

234:                                              ; preds = %226
  %235 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  %236 = bitcast %"class.WTF::StringAppend.2004"* %6 to i8*
  %237 = bitcast %"class.WTF::String"* %7 to i8*
  %238 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %239 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %238, i64 0, i32 0, i32 0
  %240 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %241 = getelementptr inbounds %"class.WTF::StringAppend.2004", %"class.WTF::StringAppend.2004"* %6, i64 0, i32 0, i32 0, i32 0
  %242 = getelementptr inbounds %"class.WTF::StringAppend.2004", %"class.WTF::StringAppend.2004"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %243 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1, i32 0, i32 0
  %244 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %245 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %246

246:                                              ; preds = %234, %450
  %247 = phi %"class.blink::CounterNode"* [ %232, %234 ], [ %455, %450 ]
  %248 = phi %"class.blink::CounterNode"* [ %230, %234 ], [ %452, %450 ]
  %249 = phi %"class.blink::CounterNode"* [ %228, %234 ], [ %247, %450 ]
  %250 = phi i64 [ %209, %234 ], [ %340, %450 ]
  %251 = icmp eq %"class.blink::CounterNode"* %248, null
  br i1 %251, label %252, label %265

252:                                              ; preds = %246
  %253 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %247, i64 0, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %261

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %247, i64 0, i32 6
  %259 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %258, align 8
  %260 = icmp eq %"class.blink::CounterNode"* %259, null
  br i1 %260, label %261, label %263

261:                                              ; preds = %257, %252
  %262 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %247, i64 0, i32 2
  br label %267

263:                                              ; preds = %257
  %264 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %247, i64 0, i32 3
  br label %267

265:                                              ; preds = %246
  %266 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %249, i64 0, i32 3
  br label %267

267:                                              ; preds = %263, %261, %265
  %268 = phi i32* [ %266, %265 ], [ %262, %261 ], [ %264, %263 ]
  %269 = load i32, i32* %268, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %235) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %236) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %237) #10
  br i1 %206, label %270, label %290

270:                                              ; preds = %267
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %239, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %271, null
  br i1 %272, label %292, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %292

278:                                              ; preds = %273
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 0
  %280 = load i32, i32* %279, align 4
  %281 = zext i32 %280 to i33
  %282 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %281, i33 1) #10
  %283 = extractvalue { i33, i1 } %282, 1
  %284 = extractvalue { i33, i1 } %282, 0
  %285 = icmp slt i33 %284, 0
  %286 = or i1 %283, %285
  br i1 %286, label %287, label %288, !prof !2

287:                                              ; preds = %278
  call void @llvm.trap() #10
  unreachable

288:                                              ; preds = %278
  %289 = trunc i33 %284 to i32
  store i32 %289, i32* %279, align 4
  br label %292

290:                                              ; preds = %267
  %291 = call %"class.WTF::StringImpl"* @_ZNK5blink12CounterStyle22GenerateRepresentationEi(%"class.blink::CounterStyle"* nonnull %207, i32 %269) #10
  br label %292

292:                                              ; preds = %270, %273, %288, %290
  %293 = phi %"class.WTF::StringImpl"* [ %291, %290 ], [ null, %270 ], [ %271, %273 ], [ %271, %288 ]
  store %"class.WTF::StringImpl"* %293, %"class.WTF::StringImpl"** %240, align 8
  %294 = load %"class.blink::CounterContentData"*, %"class.blink::CounterContentData"** %11, align 8
  %295 = getelementptr inbounds %"class.blink::CounterContentData", %"class.blink::CounterContentData"* %294, i64 0, i32 3, i32 0, i32 0, i32 0
  %296 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %295, align 8
  %297 = icmp eq %"class.WTF::StringImpl"* %296, null
  br i1 %297, label %315, label %298

298:                                              ; preds = %292
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = load atomic i32, i32* %299 monotonic, align 4
  %301 = and i32 %300, 2
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %315

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 0
  %305 = load i32, i32* %304, align 4
  %306 = zext i32 %305 to i33
  %307 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %306, i33 1) #10
  %308 = extractvalue { i33, i1 } %307, 1
  %309 = extractvalue { i33, i1 } %307, 0
  %310 = icmp slt i33 %309, 0
  %311 = or i1 %308, %310
  br i1 %311, label %312, label %313, !prof !2

312:                                              ; preds = %303
  call void @llvm.trap() #10
  unreachable

313:                                              ; preds = %303
  %314 = trunc i33 %309 to i32
  store i32 %314, i32* %304, align 4
  br label %315

315:                                              ; preds = %292, %298, %313
  %316 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_12AtomicStringEEENS_12StringAppendINS_6StringET_EERKS3_S4_(%"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::StringImpl"* %296)
  %317 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %316, 0
  store %"class.WTF::StringImpl"* %317, %"class.WTF::StringImpl"** %241, align 8
  %318 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %316, 1
  store %"class.WTF::StringImpl"* %318, %"class.WTF::StringImpl"** %242, align 8
  %319 = inttoptr i64 %250 to %"class.WTF::StringImpl"*
  %320 = icmp eq i64 %250, 0
  br i1 %320, label %338, label %321

321:                                              ; preds = %315
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %338

326:                                              ; preds = %321
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  %329 = zext i32 %328 to i33
  %330 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %329, i33 1) #10
  %331 = extractvalue { i33, i1 } %330, 1
  %332 = extractvalue { i33, i1 } %330, 0
  %333 = icmp slt i33 %332, 0
  %334 = or i1 %331, %333
  br i1 %334, label %335, label %336, !prof !2

335:                                              ; preds = %326
  call void @llvm.trap() #10
  unreachable

336:                                              ; preds = %326
  %337 = trunc i33 %332 to i32
  store i32 %337, i32* %327, align 4
  br label %338

338:                                              ; preds = %315, %321, %336
  call void @_ZN3WTFplINS_6StringENS_12AtomicStringES1_EENS_12StringAppendINS3_IT_T0_EET1_EERKS6_S7_(%"class.WTF::StringAppend"* nonnull sret %5, %"class.WTF::StringAppend.2004"* nonnull dereferenceable(16) %6, %"class.WTF::StringImpl"* %319)
  %339 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %340 = ptrtoint %"class.WTF::StringImpl"* %339 to i64
  br i1 %320, label %354, label %341

341:                                              ; preds = %338
  %342 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load atomic i32, i32* %342 monotonic, align 4
  %344 = and i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %347 = load i32, i32* %346, align 4
  br i1 %345, label %348, label %350

348:                                              ; preds = %341
  %349 = add i32 %347, -1
  store i32 %349, i32* %346, align 4
  br label %350

350:                                              ; preds = %348, %341
  %351 = phi i32 [ %349, %348 ], [ %347, %341 ]
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %354

353:                                              ; preds = %350
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #10
  br label %354

354:                                              ; preds = %353, %350, %338
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %356 = icmp eq %"class.WTF::StringImpl"* %355, null
  br i1 %356, label %370, label %357

357:                                              ; preds = %354
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load atomic i32, i32* %358 monotonic, align 4
  %360 = and i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 0
  %363 = load i32, i32* %362, align 4
  br i1 %361, label %364, label %366

364:                                              ; preds = %357
  %365 = add i32 %363, -1
  store i32 %365, i32* %362, align 4
  br label %366

366:                                              ; preds = %364, %357
  %367 = phi i32 [ %365, %364 ], [ %363, %357 ]
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %370

369:                                              ; preds = %366
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %355) #10
  br label %370

370:                                              ; preds = %369, %366, %354
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %244, align 8
  %372 = icmp eq %"class.WTF::StringImpl"* %371, null
  br i1 %372, label %386, label %373

373:                                              ; preds = %370
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  br i1 %377, label %380, label %382

380:                                              ; preds = %373
  %381 = add i32 %379, -1
  store i32 %381, i32* %378, align 4
  br label %382

382:                                              ; preds = %380, %373
  %383 = phi i32 [ %381, %380 ], [ %379, %373 ]
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %386

385:                                              ; preds = %382
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %371) #10
  br label %386

386:                                              ; preds = %385, %382, %370
  %387 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %388 = icmp eq %"class.WTF::StringImpl"* %387, null
  br i1 %388, label %402, label %389

389:                                              ; preds = %386
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load atomic i32, i32* %390 monotonic, align 4
  %392 = and i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 0
  %395 = load i32, i32* %394, align 4
  br i1 %393, label %396, label %398

396:                                              ; preds = %389
  %397 = add i32 %395, -1
  store i32 %397, i32* %394, align 4
  br label %398

398:                                              ; preds = %396, %389
  %399 = phi i32 [ %397, %396 ], [ %395, %389 ]
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %402

401:                                              ; preds = %398
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %387) #10
  br label %402

402:                                              ; preds = %386, %398, %401
  %403 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %404 = icmp eq %"class.WTF::StringImpl"* %403, null
  br i1 %404, label %418, label %405

405:                                              ; preds = %402
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %403, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %407 = load atomic i32, i32* %406 monotonic, align 4
  %408 = and i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %403, i64 0, i32 0
  %411 = load i32, i32* %410, align 4
  br i1 %409, label %412, label %414

412:                                              ; preds = %405
  %413 = add i32 %411, -1
  store i32 %413, i32* %410, align 4
  br label %414

414:                                              ; preds = %412, %405
  %415 = phi i32 [ %413, %412 ], [ %411, %405 ]
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %417, label %418

417:                                              ; preds = %414
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %403) #10
  br label %418

418:                                              ; preds = %417, %414, %402
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %420 = icmp eq %"class.WTF::StringImpl"* %419, null
  br i1 %420, label %434, label %421

421:                                              ; preds = %418
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = load atomic i32, i32* %422 monotonic, align 4
  %424 = and i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 0
  %427 = load i32, i32* %426, align 4
  br i1 %425, label %428, label %430

428:                                              ; preds = %421
  %429 = add i32 %427, -1
  store i32 %429, i32* %426, align 4
  br label %430

430:                                              ; preds = %428, %421
  %431 = phi i32 [ %429, %428 ], [ %427, %421 ]
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %434

433:                                              ; preds = %430
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %419) #10
  br label %434

434:                                              ; preds = %418, %430, %433
  %435 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %436 = icmp eq %"class.WTF::StringImpl"* %435, null
  br i1 %436, label %450, label %437

437:                                              ; preds = %434
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %435, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %439 = load atomic i32, i32* %438 monotonic, align 4
  %440 = and i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %435, i64 0, i32 0
  %443 = load i32, i32* %442, align 4
  br i1 %441, label %444, label %446

444:                                              ; preds = %437
  %445 = add i32 %443, -1
  store i32 %445, i32* %442, align 4
  br label %446

446:                                              ; preds = %444, %437
  %447 = phi i32 [ %445, %444 ], [ %443, %437 ]
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %449, label %450

449:                                              ; preds = %446
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %435) #10
  br label %450

450:                                              ; preds = %449, %446, %434
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %237) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %236) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %235) #10
  %451 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %247, i64 0, i32 6
  %452 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %451, align 8
  %453 = load %"class.blink::CounterContentData"*, %"class.blink::CounterContentData"** %11, align 8
  %454 = getelementptr inbounds %"class.blink::CounterContentData", %"class.blink::CounterContentData"* %453, i64 0, i32 1
  %455 = call %"class.blink::CounterNode"* @_ZNK5blink11CounterNode30ParentCrossingStyleContainmentERKN3WTF12AtomicStringE(%"class.blink::CounterNode"* nonnull %247, %"class.WTF::AtomicString"* dereferenceable(8) %454) #10
  %456 = icmp eq %"class.blink::CounterNode"* %455, null
  br i1 %456, label %457, label %246

457:                                              ; preds = %450
  %458 = ptrtoint %"class.WTF::StringImpl"* %339 to i64
  br label %459

459:                                              ; preds = %457, %226, %205
  %460 = phi i64 [ %209, %205 ], [ %209, %226 ], [ %458, %457 ]
  %461 = inttoptr i64 %460 to %"class.WTF::StringImpl"*
  br label %462

462:                                              ; preds = %51, %29, %33, %20, %459
  %463 = phi %"class.WTF::StringImpl"* [ %461, %459 ], [ null, %20 ], [ null, %33 ], [ null, %29 ], [ null, %51 ]
  ret %"class.WTF::StringImpl"* %463
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNK5blink13ComputedStyle20GetCounterDirectivesERKN3WTF12AtomicStringE(%"class.blink::CounterDirectives"* sret, %"class.blink::ComputedStyle"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::CounterNode"* @_ZN5blink11CounterNode34AncestorNodeAcrossStyleContainmentERKNS_12LayoutObjectERKN3WTF12AtomicStringE(%"class.blink::LayoutObject"* dereferenceable(88), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::CounterNode"* @_ZN5blink12_GLOBAL__N_123MakeCounterNodeIfNeededERNS_12LayoutObjectERKN3WTF12AtomicStringEb(%"class.blink::LayoutObject"* dereferenceable(88), %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) unnamed_addr #0 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::CounterDirectives", align 4
  %7 = alloca %"class.blink::LayoutObject"*, align 8
  %8 = alloca %class.scoped_refptr.2018, align 8
  %9 = alloca %class.scoped_refptr.2018, align 8
  %10 = alloca %class.scoped_refptr.2018, align 8
  %11 = alloca %class.scoped_refptr.2018, align 8
  %12 = alloca %class.scoped_refptr.2018, align 8
  %13 = alloca %"class.blink::LayoutObject"*, align 8
  %14 = alloca %"class.blink::LayoutObject"*, align 8
  %15 = alloca %"class.std::__1::unique_ptr.2010", align 8
  %16 = alloca %"class.blink::LayoutObject"*, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = and i96 %19, 137438953472
  %21 = icmp eq i96 %20, 0
  br i1 %21, label %92, label %22

22:                                               ; preds = %3
  %23 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to i8*) acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %29, !prof !4

25:                                               ; preds = %22
  %26 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  br label %29

29:                                               ; preds = %22, %25, %28
  %30 = bitcast %"class.blink::LayoutObject"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %7, align 8
  %31 = call %"class.WTF::HashMap.2013"* @_ZNK3WTF7HashMapIPKN5blink12LayoutObjectENSt3__110unique_ptrINS0_INS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEENS5_14default_deleteISG_EEEENS_7PtrHashIS3_EENSC_IS4_EENSC_ISJ_EESF_E2atERKS4_(%"class.WTF::HashMap.2005"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to %"class.WTF::HashMap.2005"*), %"class.blink::LayoutObject"** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  %32 = icmp eq %"class.WTF::HashMap.2013"* %31, null
  br i1 %32, label %92, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %31, i64 0, i32 0, i32 0
  %35 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %34, align 8
  %36 = icmp eq %"struct.WTF::KeyValuePair.2017"* %35, null
  br i1 %36, label %92, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %31, i64 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, -1
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = lshr i32 %45, 8
  %47 = and i32 %46, %40
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %35, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %92, label %53

53:                                               ; preds = %37
  %54 = xor i32 %46, -1
  %55 = lshr i32 %45, 31
  %56 = add nsw i32 %55, %54
  %57 = shl i32 %56, 12
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 7
  %60 = xor i32 %59, %58
  %61 = shl i32 %60, 2
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 20
  %64 = xor i32 %63, %62
  %65 = or i32 %64, 1
  %66 = zext i32 %65 to i64
  br label %67

67:                                               ; preds = %77, %53
  %68 = phi %"struct.WTF::KeyValuePair.2017"* [ %49, %53 ], [ %82, %77 ]
  %69 = phi i64 [ %48, %53 ], [ %81, %77 ]
  %70 = phi i64 [ 0, %53 ], [ %79, %77 ]
  %71 = bitcast %"struct.WTF::KeyValuePair.2017"* %68 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = icmp ne i8* %72, inttoptr (i64 -1 to i8*)
  %74 = bitcast i8* %72 to %"class.WTF::StringImpl"*
  %75 = icmp eq %"class.WTF::StringImpl"* %43, %74
  %76 = and i1 %73, %75
  br i1 %76, label %86, label %77

77:                                               ; preds = %67
  %78 = icmp eq i64 %70, 0
  %79 = select i1 %78, i64 %66, i64 %70
  %80 = add i64 %79, %69
  %81 = and i64 %80, %41
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %35, i64 %81
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %82, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %92, label %67

86:                                               ; preds = %67
  %87 = icmp eq %"struct.WTF::KeyValuePair.2017"* %68, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %68, i64 0, i32 1, i32 0
  %90 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %89, align 8
  %91 = icmp eq %"class.blink::CounterNode"* %90, null
  br i1 %91, label %92, label %671

92:                                               ; preds = %77, %3, %37, %33, %86, %29, %88
  %93 = load i96, i96* %18, align 4
  %94 = and i96 %93, 33554432
  %95 = icmp eq i96 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %92
  %97 = bitcast %"class.blink::LayoutObject"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %98 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %97, align 8
  %99 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %98, i64 92
  %100 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %99, align 8
  %101 = call zeroext i1 %100(%"class.blink::LayoutObject"* %0, i32 0) #10
  br i1 %101, label %102, label %327

102:                                              ; preds = %96
  %103 = load i96, i96* %18, align 4
  br label %104

104:                                              ; preds = %102, %92
  %105 = phi i96 [ %103, %102 ], [ %93, %92 ]
  %106 = and i96 %105, 16777216
  %107 = icmp eq i96 %106, 0
  br i1 %107, label %108, label %327

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %110 = load %"class.blink::Node"*, %"class.blink::Node"** %109, align 8
  %111 = icmp eq %"class.blink::Node"* %110, null
  br i1 %111, label %327, label %112

112:                                              ; preds = %108
  %113 = bitcast %"class.blink::Node"* %110 to i8 (%"class.blink::Node"*)***
  %114 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %113, align 8
  %115 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %114, i64 34
  %116 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %115, align 8
  %117 = call zeroext i8 %116(%"class.blink::Node"* nonnull %110) #10
  %118 = icmp ne i8 %117, 0
  %119 = load i96, i96* %18, align 4
  %120 = and i96 %119, 16777216
  %121 = icmp eq i96 %120, 0
  %122 = load %"class.blink::Node"*, %"class.blink::Node"** %109, align 8
  br i1 %121, label %123, label %124

123:                                              ; preds = %112
  br i1 %118, label %125, label %131

124:                                              ; preds = %112
  br i1 %118, label %125, label %327

125:                                              ; preds = %124, %123
  %126 = phi %"class.blink::Node"* [ %122, %123 ], [ null, %124 ]
  %127 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %126, i64 0, i32 2, i32 0, i32 0
  %128 = bitcast %"class.blink::Node"** %127 to %"class.blink::ContainerNode"**
  %129 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %129, i64 0, i32 0
  br label %131

131:                                              ; preds = %125, %123
  %132 = phi %"class.blink::Node"* [ %130, %125 ], [ %122, %123 ]
  %133 = icmp eq %"class.blink::Node"* %132, null
  br i1 %133, label %327, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %136 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %136, i64 0, i32 0, i32 9
  %138 = bitcast [20 x i8]* %137 to i160*
  %139 = load i160, i160* %138, align 8
  %140 = lshr i160 %139, 25
  %141 = trunc i160 %140 to i8
  %142 = and i8 %141, 63
  switch i8 %142, label %327 [
    i8 0, label %143
    i8 3, label %161
    i8 4, label %161
    i8 5, label %161
  ]

143:                                              ; preds = %134
  %144 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %132, i64 0, i32 1
  %145 = load i32, i32* %144, align 8
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %132, i64 0, i32 6, i32 0, i32 0
  br i1 %147, label %153, label %149

149:                                              ; preds = %143
  %150 = bitcast %"class.blink::NodeData"** %148 to %"class.blink::NodeRareData"**
  %151 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %151, i64 0, i32 1, i32 0, i32 0
  br label %155

153:                                              ; preds = %143
  %154 = bitcast %"class.blink::NodeData"** %148 to %"class.blink::NodeRenderingData"**
  br label %155

155:                                              ; preds = %153, %149
  %156 = phi %"class.blink::NodeRenderingData"** [ %152, %149 ], [ %154, %153 ]
  %157 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %157, i64 0, i32 1
  %159 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %158, align 8
  %160 = icmp eq %"class.blink::LayoutObject"* %159, %0
  br i1 %160, label %161, label %327

161:                                              ; preds = %155, %134, %134, %134
  %162 = getelementptr inbounds %"class.blink::CounterDirectives", %"class.blink::CounterDirectives"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %162, i8 -86, i64 24, i1 false) #10
  call void @_ZNK5blink13ComputedStyle20GetCounterDirectivesERKN3WTF12AtomicStringE(%"class.blink::CounterDirectives"* nonnull sret %6, %"class.blink::ComputedStyle"* %136, %"class.WTF::AtomicString"* dereferenceable(8) %1) #10
  %163 = load i8, i8* %162, align 4, !range !3
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %165, label %173

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.blink::CounterDirectives", %"class.blink::CounterDirectives"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %167 = load i8, i8* %166, align 4, !range !3
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %173

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.blink::CounterDirectives", %"class.blink::CounterDirectives"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %171 = load i8, i8* %170, align 4, !range !3
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %204, label %173

173:                                              ; preds = %169, %165, %161
  %174 = getelementptr inbounds %"class.blink::CounterDirectives", %"class.blink::CounterDirectives"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %175 = load i8, i8* %174, align 4, !range !3
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %182, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::CounterDirectives", %"class.blink::CounterDirectives"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %"class.blink::CounterDirectives", %"class.blink::CounterDirectives"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %181 = load i8, i8* %180, align 4, !range !3
  br label %196

182:                                              ; preds = %173
  %183 = getelementptr inbounds %"class.blink::CounterDirectives", %"class.blink::CounterDirectives"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = select i1 %164, i32 0, i32 %184
  %186 = getelementptr inbounds %"class.blink::CounterDirectives", %"class.blink::CounterDirectives"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %187 = load i8, i8* %186, align 4, !range !3
  %188 = icmp eq i8 %187, 0
  %189 = getelementptr inbounds %"class.blink::CounterDirectives", %"class.blink::CounterDirectives"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = select i1 %188, i32 0, i32 %190
  %192 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %185, i32 %191) #10
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %185, i32 %194, !prof !2
  br label %196

196:                                              ; preds = %182, %177
  %197 = phi i8 [ %181, %177 ], [ %187, %182 ]
  %198 = phi i32 [ %179, %177 ], [ %195, %182 ]
  %199 = zext i8 %197 to i32
  %200 = select i1 %164, i32 0, i32 2
  %201 = select i1 %176, i32 0, i32 4
  %202 = or i32 %201, %200
  %203 = or i32 %202, %199
  br label %323

204:                                              ; preds = %169
  %205 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205) #10
  %206 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %209, label %213

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %210, align 8
  %211 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %212 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %211, i64* %212, align 8
  br label %221

213:                                              ; preds = %204
  %214 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %207, %"class.WTF::StringImpl"** %214, align 8
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 1
  %218 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %219 = bitcast i8** %218 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %217, %"class.WTF::StringImpl"** %219, align 8
  %220 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %221

221:                                              ; preds = %213, %209
  %222 = phi i64 [ %220, %213 ], [ %211, %209 ]
  %223 = phi i32 [ %216, %213 ], [ 0, %209 ]
  %224 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %223, i32* %224, align 8
  %225 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %225) #10
  %226 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %222, i64* %226, align 8
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8** %227, align 8
  %228 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 9, i32* %228, align 8
  %229 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %225) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #10
  br i1 %229, label %230, label %323

230:                                              ; preds = %221
  %231 = load i96, i96* %18, align 4
  %232 = and i96 %231, 16777216
  %233 = icmp eq i96 %232, 0
  br i1 %233, label %234, label %323

234:                                              ; preds = %230
  %235 = load %"class.blink::Node"*, %"class.blink::Node"** %109, align 8
  %236 = icmp eq %"class.blink::Node"* %235, null
  br i1 %236, label %323, label %237

237:                                              ; preds = %234
  %238 = call %"class.blink::ListItemOrdinal"* @_ZN5blink15ListItemOrdinal3GetERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %235) #10
  %239 = icmp eq %"class.blink::ListItemOrdinal"* %238, null
  br i1 %239, label %250, label %240

240:                                              ; preds = %237
  %241 = call i64 @_ZNK5blink15ListItemOrdinal13ExplicitValueEv(%"class.blink::ListItemOrdinal"* nonnull %238) #10
  %242 = trunc i64 %241 to i8
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %247, label %244

244:                                              ; preds = %240
  %245 = lshr i64 %241, 32
  %246 = trunc i64 %245 to i32
  br label %323

247:                                              ; preds = %240
  %248 = call zeroext i1 @_ZN5blink15ListItemOrdinal23IsInReversedOrderedListERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %235) #10
  %249 = select i1 %248, i32 -1, i32 1
  br label %323

250:                                              ; preds = %237
  %251 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %235, i64 0, i32 1
  %252 = load i32, i32* %251, align 8
  %253 = and i32 %252, 48
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %323

255:                                              ; preds = %250
  %256 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE, align 8
  %257 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %256, i64 0, i32 0, i32 0, i32 0
  %258 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %257, align 8
  %259 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %235, i64 1, i32 2
  %260 = bitcast %"class.blink::Member.318"* %259 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %261 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %260, align 8
  %262 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %261, i64 0, i32 3, i32 0, i32 0, i32 0
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %258, i64 0, i32 3, i32 0, i32 0, i32 0
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %263, %265
  %267 = bitcast %"class.blink::Node"* %235 to %"class.blink::HTMLOListElement"*
  br i1 %266, label %268, label %301

268:                                              ; preds = %255
  %269 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %235, i64 1, i32 5
  %270 = bitcast %"class.blink::Member.318"* %269 to i8*
  %271 = load i8, i8* %270, align 8
  %272 = and i8 %271, 1
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %278, label %274

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %235, i64 1, i32 4
  %276 = bitcast %"class.blink::Member.318"* %275 to i32*
  %277 = load i32, i32* %276, align 8
  br label %290

278:                                              ; preds = %268
  %279 = and i8 %271, 2
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %290, label %281

281:                                              ; preds = %278
  %282 = and i8 %271, 4
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %286, label %284

284:                                              ; preds = %281
  call void @_ZN5blink16HTMLOListElement20RecalculateItemCountEv(%"class.blink::HTMLOListElement"* nonnull %267) #10
  %285 = load i8, i8* %270, align 8
  br label %286

286:                                              ; preds = %284, %281
  %287 = phi i8 [ %285, %284 ], [ %271, %281 ]
  %288 = getelementptr inbounds %"class.blink::HTMLOListElement", %"class.blink::HTMLOListElement"* %267, i64 0, i32 2
  %289 = load i32, i32* %288, align 4
  br label %290

290:                                              ; preds = %286, %278, %274
  %291 = phi i8 [ %271, %274 ], [ %287, %286 ], [ %271, %278 ]
  %292 = phi i32 [ %277, %274 ], [ %289, %286 ], [ 1, %278 ]
  %293 = and i8 %291, 2
  %294 = icmp eq i8 %293, 0
  %295 = select i1 %294, i32 -1, i32 1
  %296 = select i1 %294, i32 -2147483648, i32 2147483647
  %297 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %292, i32 %295) #10
  %298 = extractvalue { i32, i1 } %297, 1
  %299 = extractvalue { i32, i1 } %297, 0
  %300 = select i1 %298, i32 %296, i32 %299, !prof !2
  br label %323

301:                                              ; preds = %255
  %302 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE, align 8
  %303 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %302, i64 0, i32 0, i32 0, i32 0
  %304 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %303, align 8
  %305 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %304, i64 0, i32 3, i32 0, i32 0, i32 0
  %306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  %307 = icmp eq %"class.WTF::StringImpl"* %263, %306
  br i1 %307, label %322, label %308

308:                                              ; preds = %301
  %309 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMenuTagE, align 8
  %310 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %309, i64 0, i32 0, i32 0, i32 0
  %311 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %310, align 8
  %312 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %311, i64 0, i32 3, i32 0, i32 0, i32 0
  %313 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %312, align 8
  %314 = icmp eq %"class.WTF::StringImpl"* %263, %313
  br i1 %314, label %322, label %315

315:                                              ; preds = %308
  %316 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDirTagE, align 8
  %317 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %316, i64 0, i32 0, i32 0, i32 0
  %318 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %317, align 8
  %319 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %318, i64 0, i32 3, i32 0, i32 0, i32 0
  %320 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %319, align 8
  %321 = icmp eq %"class.WTF::StringImpl"* %263, %320
  br i1 %321, label %322, label %323

322:                                              ; preds = %315, %308, %301
  br label %323

323:                                              ; preds = %322, %315, %290, %250, %247, %244, %234, %230, %221, %196
  %324 = phi i32 [ 0, %234 ], [ 2, %290 ], [ 2, %322 ], [ 0, %315 ], [ 0, %250 ], [ 1, %247 ], [ 2, %244 ], [ 0, %230 ], [ 0, %221 ], [ %203, %196 ]
  %325 = phi i32 [ 0, %234 ], [ %300, %290 ], [ 0, %322 ], [ 0, %315 ], [ 0, %250 ], [ %249, %247 ], [ %246, %244 ], [ 0, %230 ], [ 0, %221 ], [ %198, %196 ]
  %326 = phi i1 [ false, %234 ], [ true, %290 ], [ true, %322 ], [ false, %315 ], [ false, %250 ], [ true, %247 ], [ true, %244 ], [ false, %230 ], [ false, %221 ], [ true, %196 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #10
  br label %327

327:                                              ; preds = %108, %96, %104, %124, %131, %134, %155, %323
  %328 = phi i32 [ 0, %131 ], [ 0, %134 ], [ %324, %323 ], [ 0, %155 ], [ 0, %124 ], [ 0, %104 ], [ 0, %96 ], [ 0, %108 ]
  %329 = phi i32 [ 0, %131 ], [ 0, %134 ], [ %325, %323 ], [ 0, %155 ], [ 0, %124 ], [ 0, %104 ], [ 0, %96 ], [ 0, %108 ]
  %330 = phi i1 [ false, %131 ], [ false, %134 ], [ %326, %323 ], [ false, %155 ], [ false, %124 ], [ false, %104 ], [ false, %96 ], [ false, %108 ]
  %331 = or i1 %330, %2
  br i1 %331, label %332, label %671

332:                                              ; preds = %327
  %333 = bitcast %class.scoped_refptr.2018* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %333) #10
  %334 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %8, i64 0, i32 0
  store %"class.blink::CounterNode"* null, %"class.blink::CounterNode"** %334, align 8
  %335 = bitcast %class.scoped_refptr.2018* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %335) #10
  %336 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %9, i64 0, i32 0
  store %"class.blink::CounterNode"* null, %"class.blink::CounterNode"** %336, align 8
  %337 = bitcast %class.scoped_refptr.2018* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %337) #10
  %338 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %10, i64 0, i32 0
  store %"class.blink::CounterNode"* inttoptr (i64 -6148914691236517206 to %"class.blink::CounterNode"*), %"class.blink::CounterNode"** %338, align 8
  %339 = call %"class.blink::CounterNode"* @_ZN5blink11CounterNode6CreateERNS_12LayoutObjectEji(%"class.blink::LayoutObject"* dereferenceable(88) %0, i32 %328, i32 %329) #10
  store %"class.blink::CounterNode"* %339, %"class.blink::CounterNode"** %338, align 8
  %340 = and i32 %328, 2
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %382, label %342

342:                                              ; preds = %332
  %343 = bitcast %class.scoped_refptr.2018* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %343) #10
  %344 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %11, i64 0, i32 0
  store %"class.blink::CounterNode"* null, %"class.blink::CounterNode"** %344, align 8
  %345 = bitcast %class.scoped_refptr.2018* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %345) #10
  %346 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %12, i64 0, i32 0
  store %"class.blink::CounterNode"* null, %"class.blink::CounterNode"** %346, align 8
  %347 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_119FindPlaceForCounterERNS_12LayoutObjectERKN3WTF12AtomicStringEbR13scoped_refptrINS_11CounterNodeEESA_(%"class.blink::LayoutObject"* dereferenceable(88) %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, i1 zeroext false, %class.scoped_refptr.2018* nonnull dereferenceable(8) %11, %class.scoped_refptr.2018* nonnull dereferenceable(8) %12)
  br i1 %347, label %348, label %361

348:                                              ; preds = %342
  %349 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %344, align 8
  %350 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %349, i64 0, i32 4
  %351 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %350, align 8
  %352 = call zeroext i1 @_ZNK5blink12LayoutObject14IsDescendantOfEPKS0_(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %351) #10
  br i1 %352, label %361, label %353

353:                                              ; preds = %348
  %354 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %346, align 8
  %355 = icmp eq %"class.blink::CounterNode"* %354, null
  %356 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %354, i64 0, i32 8
  %357 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %349, i64 0, i32 9
  %358 = select i1 %355, %"class.blink::CounterNode"** %357, %"class.blink::CounterNode"** %356
  %359 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %358, align 8
  %360 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %338, align 8
  call void @_ZN5blink11CounterNode29MoveNonResetSiblingsToChildOfEPS0_RS0_RKN3WTF12AtomicStringE(%"class.blink::CounterNode"* %359, %"class.blink::CounterNode"* dereferenceable(72) %360, %"class.WTF::AtomicString"* dereferenceable(8) %1) #10
  br label %361

361:                                              ; preds = %348, %353, %342
  %362 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %346, align 8
  %363 = icmp eq %"class.blink::CounterNode"* %362, null
  br i1 %363, label %371, label %364

364:                                              ; preds = %361
  %365 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %362, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %365) #10
  %366 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %362, i64 0, i32 0, i32 0, i32 0, i32 0
  %367 = load i32, i32* %366, align 4
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %371

369:                                              ; preds = %364
  call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %362) #10
  %370 = bitcast %"class.blink::CounterNode"* %362 to i8*
  call void @free(i8* %370) #10
  br label %371

371:                                              ; preds = %361, %364, %369
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %345) #10
  %372 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %344, align 8
  %373 = icmp eq %"class.blink::CounterNode"* %372, null
  br i1 %373, label %381, label %374

374:                                              ; preds = %371
  %375 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %372, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %375) #10
  %376 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %372, i64 0, i32 0, i32 0, i32 0, i32 0
  %377 = load i32, i32* %376, align 4
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %381

379:                                              ; preds = %374
  call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %372) #10
  %380 = bitcast %"class.blink::CounterNode"* %372 to i8*
  call void @free(i8* %380) #10
  br label %381

381:                                              ; preds = %371, %374, %379
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %343) #10
  br label %382

382:                                              ; preds = %332, %381
  %383 = icmp ne i32 %340, 0
  %384 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_119FindPlaceForCounterERNS_12LayoutObjectERKN3WTF12AtomicStringEbR13scoped_refptrINS_11CounterNodeEESA_(%"class.blink::LayoutObject"* dereferenceable(88) %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, i1 zeroext %383, %class.scoped_refptr.2018* nonnull dereferenceable(8) %8, %class.scoped_refptr.2018* nonnull dereferenceable(8) %9)
  br i1 %384, label %385, label %389

385:                                              ; preds = %382
  %386 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %334, align 8
  %387 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %338, align 8
  %388 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %336, align 8
  call void @_ZN5blink11CounterNode11InsertAfterEPS0_S1_RKN3WTF12AtomicStringE(%"class.blink::CounterNode"* %386, %"class.blink::CounterNode"* %387, %"class.blink::CounterNode"* %388, %"class.WTF::AtomicString"* dereferenceable(8) %1) #10
  br label %389

389:                                              ; preds = %385, %382
  %390 = load i96, i96* %18, align 4
  %391 = and i96 %390, 137438953472
  %392 = icmp eq i96 %391, 0
  br i1 %392, label %403, label %393

393:                                              ; preds = %389
  %394 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to i8*) acquire, align 8
  %395 = icmp eq i8 %394, 0
  br i1 %395, label %396, label %400, !prof !4

396:                                              ; preds = %393
  %397 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %400, label %399

399:                                              ; preds = %396
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  br label %400

400:                                              ; preds = %393, %396, %399
  %401 = bitcast %"class.blink::LayoutObject"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %401) #10
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %13, align 8
  %402 = call %"class.WTF::HashMap.2013"* @_ZNK3WTF7HashMapIPKN5blink12LayoutObjectENSt3__110unique_ptrINS0_INS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEENS5_14default_deleteISG_EEEENS_7PtrHashIS3_EENSC_IS4_EENSC_ISJ_EESF_E2atERKS4_(%"class.WTF::HashMap.2005"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to %"class.WTF::HashMap.2005"*), %"class.blink::LayoutObject"** nonnull dereferenceable(8) %13)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %401) #10
  br label %442

403:                                              ; preds = %389
  %404 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([251 x i8], [251 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_12AtomicStringE13scoped_refptrIN5blink11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS2_EENS8_IS6_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %405 = bitcast i8* %404 to %"class.WTF::HashMap.2013"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %404, i8 0, i64 20, i1 false) #10
  %406 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to i8*) acquire, align 8
  %407 = icmp eq i8 %406, 0
  br i1 %407, label %408, label %412, !prof !4

408:                                              ; preds = %403
  %409 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %412, label %411

411:                                              ; preds = %408
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  br label %412

412:                                              ; preds = %403, %408, %411
  %413 = bitcast %"class.blink::LayoutObject"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %413) #10
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %14, align 8
  %414 = bitcast %"class.std::__1::unique_ptr.2010"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %414) #10
  %415 = getelementptr inbounds %"class.std::__1::unique_ptr.2010", %"class.std::__1::unique_ptr.2010"* %15, i64 0, i32 0, i32 0, i32 0
  %416 = bitcast %"class.std::__1::unique_ptr.2010"* %15 to i8**
  store i8* %404, i8** %416, align 8
  %417 = call { %"struct.WTF::KeyValuePair.2009"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E6insertINS_17HashMapTranslatorIST_SP_SH_EEPS2_SL_EENS_18HashTableAddResultISU_SM_EEOT0_OT1_(%"class.WTF::HashTable.2006"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to %"class.WTF::HashTable.2006"*), %"class.blink::LayoutObject"** nonnull dereferenceable(8) %14, %"class.std::__1::unique_ptr.2010"* nonnull dereferenceable(8) %15) #10
  %418 = extractvalue { %"struct.WTF::KeyValuePair.2009"*, i8 } %417, 1
  %419 = and i8 %418, 1
  %420 = icmp eq i8 %419, 0
  br i1 %420, label %421, label %433

421:                                              ; preds = %412
  %422 = extractvalue { %"struct.WTF::KeyValuePair.2009"*, i8 } %417, 0
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %422, i64 0, i32 1
  %424 = bitcast %"class.std::__1::unique_ptr.2010"* %15 to i64*
  %425 = load i64, i64* %424, align 8
  store %"class.WTF::HashMap.2013"* null, %"class.WTF::HashMap.2013"** %415, align 8
  %426 = getelementptr inbounds %"class.std::__1::unique_ptr.2010", %"class.std::__1::unique_ptr.2010"* %423, i64 0, i32 0, i32 0, i32 0
  %427 = load %"class.WTF::HashMap.2013"*, %"class.WTF::HashMap.2013"** %426, align 8
  %428 = bitcast %"class.std::__1::unique_ptr.2010"* %423 to i64*
  store i64 %425, i64* %428, align 8
  %429 = icmp eq %"class.WTF::HashMap.2013"* %427, null
  br i1 %429, label %433, label %430

430:                                              ; preds = %421
  %431 = bitcast %"class.WTF::HashMap.2013"* %427 to %"class.WTF::ConditionalDestructor.2015"*
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS2_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.2015"* nonnull %431) #10
  %432 = bitcast %"class.WTF::HashMap.2013"* %427 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %432) #10
  br label %433

433:                                              ; preds = %412, %421, %430
  %434 = load %"class.WTF::HashMap.2013"*, %"class.WTF::HashMap.2013"** %415, align 8
  store %"class.WTF::HashMap.2013"* null, %"class.WTF::HashMap.2013"** %415, align 8
  %435 = icmp eq %"class.WTF::HashMap.2013"* %434, null
  br i1 %435, label %439, label %436

436:                                              ; preds = %433
  %437 = bitcast %"class.WTF::HashMap.2013"* %434 to %"class.WTF::ConditionalDestructor.2015"*
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS2_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.2015"* nonnull %437) #10
  %438 = bitcast %"class.WTF::HashMap.2013"* %434 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %438) #10
  br label %439

439:                                              ; preds = %433, %436
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %414) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %413) #10
  %440 = load i96, i96* %18, align 4
  %441 = or i96 %440, 137438953472
  store i96 %441, i96* %18, align 4
  br label %442

442:                                              ; preds = %439, %400
  %443 = phi %"class.WTF::HashMap.2013"* [ %402, %400 ], [ %405, %439 ]
  %444 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %443, i64 0, i32 0
  %445 = call { %"struct.WTF::KeyValuePair.2017"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.2014"* %444, %"class.WTF::AtomicString"* dereferenceable(8) %1, %class.scoped_refptr.2018* nonnull dereferenceable(8) %10) #10
  %446 = extractvalue { %"struct.WTF::KeyValuePair.2017"*, i8 } %445, 1
  %447 = and i8 %446, 1
  %448 = icmp eq i8 %447, 0
  br i1 %448, label %449, label %469

449:                                              ; preds = %442
  %450 = extractvalue { %"struct.WTF::KeyValuePair.2017"*, i8 } %445, 0
  %451 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %338, align 8
  %452 = icmp eq %"class.blink::CounterNode"* %451, null
  br i1 %452, label %455, label %453

453:                                              ; preds = %449
  %454 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %451, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %454) #10
  br label %455

455:                                              ; preds = %453, %449
  %456 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %450, i64 0, i32 1
  %457 = ptrtoint %"class.blink::CounterNode"* %451 to i64
  %458 = bitcast %class.scoped_refptr.2018* %456 to i64*
  %459 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %456, i64 0, i32 0
  %460 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %459, align 8
  store i64 %457, i64* %458, align 8
  %461 = icmp eq %"class.blink::CounterNode"* %460, null
  br i1 %461, label %469, label %462

462:                                              ; preds = %455
  %463 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %460, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %463) #10
  %464 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %460, i64 0, i32 0, i32 0, i32 0, i32 0
  %465 = load i32, i32* %464, align 4
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %467, label %469

467:                                              ; preds = %462
  call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %460) #10
  %468 = bitcast %"class.blink::CounterNode"* %460 to i8*
  call void @free(i8* %468) #10
  br label %469

469:                                              ; preds = %442, %455, %462, %467
  %470 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %338, align 8
  %471 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %470, i64 0, i32 6
  %472 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %471, align 8
  %473 = icmp eq %"class.blink::CounterNode"* %472, null
  br i1 %473, label %474, label %640

474:                                              ; preds = %469
  %475 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %476 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %475, align 8
  %477 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %476, i64 0, i32 0, i32 3, i32 0, i32 0
  %478 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %477, align 8
  %479 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %478, i64 0, i32 2, i32 0, i32 0
  %480 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %479, align 8
  %481 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %480, i64 0, i32 2, i32 0, i32 0
  %482 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %481, align 8
  %483 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %482, i64 0, i32 45
  %484 = load i32, i32* %483, align 4
  %485 = and i32 %484, 2
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %487, label %640

487:                                              ; preds = %474
  %488 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to i8*) acquire, align 8
  %489 = icmp eq i8 %488, 0
  br i1 %489, label %490, label %494, !prof !4

490:                                              ; preds = %487
  %491 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %494, label %493

493:                                              ; preds = %490
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  br label %494

494:                                              ; preds = %487, %490, %493
  %495 = load i96, i96* %18, align 4
  %496 = and i96 %495, 16777216
  %497 = icmp eq i96 %496, 0
  %498 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %499 = bitcast %"class.blink::Node"** %498 to %"class.blink::Element"**
  %500 = load %"class.blink::Element"*, %"class.blink::Element"** %499, align 8
  %501 = select i1 %497, %"class.blink::Element"* %500, %"class.blink::Element"* null
  %502 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %501, i64 0, i32 0, i32 0
  %503 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %502) #10
  %504 = icmp eq %"class.blink::ContainerNode"* %503, null
  br i1 %504, label %512, label %505

505:                                              ; preds = %494
  %506 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %503, i64 0, i32 0, i32 1
  %507 = load i32, i32* %506, align 8
  %508 = and i32 %507, 12
  %509 = icmp eq i32 %508, 0
  %510 = bitcast %"class.blink::ContainerNode"* %503 to %"class.blink::Element"*
  %511 = select i1 %509, %"class.blink::Element"* %510, %"class.blink::Element"* null
  br label %512

512:                                              ; preds = %494, %505
  %513 = phi %"class.blink::Element"* [ %511, %505 ], [ null, %494 ]
  %514 = call fastcc %"class.blink::LayoutObject"* @_ZN5blink12_GLOBAL__N_114NextInPreOrderERKNS_12LayoutObjectEPKNS_7ElementEb(%"class.blink::LayoutObject"* dereferenceable(88) %0, %"class.blink::Element"* %513, i1 zeroext false)
  %515 = icmp eq %"class.blink::LayoutObject"* %514, null
  br i1 %515, label %638, label %516

516:                                              ; preds = %512
  %517 = bitcast %"class.blink::LayoutObject"** %16 to i8*
  %518 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  br label %519

519:                                              ; preds = %516, %633
  %520 = phi %"class.blink::LayoutObject"* [ %514, %516 ], [ %636, %633 ]
  %521 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %520, i64 0, i32 5, i32 0
  %522 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %521, align 8
  %523 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %522, i64 0, i32 0, i32 3, i32 0, i32 0
  %524 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %523, align 8
  %525 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %524, i64 0, i32 2, i32 0, i32 0
  %526 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %525, align 8
  %527 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %526, i64 0, i32 2, i32 0, i32 0
  %528 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %527, align 8
  %529 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %528, i64 0, i32 45
  %530 = load i32, i32* %529, align 4
  %531 = lshr i32 %530, 1
  %532 = trunc i32 %531 to i8
  %533 = and i8 %532, 1
  %534 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %520, i64 0, i32 4
  %535 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %534 to i96*
  %536 = load i96, i96* %535, align 4
  %537 = and i96 %536, 137438953472
  %538 = icmp eq i96 %537, 0
  br i1 %538, label %633, label %539

539:                                              ; preds = %519
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %517) #10
  store %"class.blink::LayoutObject"* %520, %"class.blink::LayoutObject"** %16, align 8
  %540 = call %"class.WTF::HashMap.2013"* @_ZNK3WTF7HashMapIPKN5blink12LayoutObjectENSt3__110unique_ptrINS0_INS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEENS5_14default_deleteISG_EEEENS_7PtrHashIS3_EENSC_IS4_EENSC_ISJ_EESF_E2atERKS4_(%"class.WTF::HashMap.2005"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to %"class.WTF::HashMap.2005"*), %"class.blink::LayoutObject"** nonnull dereferenceable(8) %16)
  %541 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %540, i64 0, i32 0, i32 0
  %542 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %541, align 8
  %543 = icmp eq %"struct.WTF::KeyValuePair.2017"* %542, null
  br i1 %543, label %594, label %544

544:                                              ; preds = %539
  %545 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %540, i64 0, i32 0, i32 1
  %546 = load i32, i32* %545, align 8
  %547 = add i32 %546, -1
  %548 = zext i32 %547 to i64
  %549 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %518, align 8
  %550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %549, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %551 = load atomic i32, i32* %550 monotonic, align 4
  %552 = lshr i32 %551, 8
  %553 = and i32 %552, %547
  %554 = zext i32 %553 to i64
  %555 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %542, i64 %554
  %556 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %555, i64 0, i32 0, i32 0, i32 0, i32 0
  %557 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %556, align 8
  %558 = icmp eq %"class.WTF::StringImpl"* %557, null
  br i1 %558, label %594, label %559

559:                                              ; preds = %544
  %560 = xor i32 %552, -1
  %561 = lshr i32 %551, 31
  %562 = add nsw i32 %561, %560
  %563 = shl i32 %562, 12
  %564 = xor i32 %563, %562
  %565 = lshr i32 %564, 7
  %566 = xor i32 %565, %564
  %567 = shl i32 %566, 2
  %568 = xor i32 %567, %566
  %569 = lshr i32 %568, 20
  %570 = xor i32 %569, %568
  %571 = or i32 %570, 1
  %572 = zext i32 %571 to i64
  br label %573

573:                                              ; preds = %583, %559
  %574 = phi %"struct.WTF::KeyValuePair.2017"* [ %555, %559 ], [ %588, %583 ]
  %575 = phi i64 [ %554, %559 ], [ %587, %583 ]
  %576 = phi i64 [ 0, %559 ], [ %585, %583 ]
  %577 = bitcast %"struct.WTF::KeyValuePair.2017"* %574 to i8**
  %578 = load i8*, i8** %577, align 8
  %579 = icmp ne i8* %578, inttoptr (i64 -1 to i8*)
  %580 = bitcast i8* %578 to %"class.WTF::StringImpl"*
  %581 = icmp eq %"class.WTF::StringImpl"* %549, %580
  %582 = and i1 %579, %581
  br i1 %582, label %592, label %583

583:                                              ; preds = %573
  %584 = icmp eq i64 %576, 0
  %585 = select i1 %584, i64 %572, i64 %576
  %586 = add i64 %585, %575
  %587 = and i64 %586, %548
  %588 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %542, i64 %587
  %589 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %588, i64 0, i32 0, i32 0, i32 0, i32 0
  %590 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %589, align 8
  %591 = icmp eq %"class.WTF::StringImpl"* %590, null
  br i1 %591, label %594, label %573

592:                                              ; preds = %573
  %593 = icmp eq %"struct.WTF::KeyValuePair.2017"* %574, null
  br i1 %593, label %594, label %595

594:                                              ; preds = %583, %592, %539, %544
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %517) #10
  br label %633

595:                                              ; preds = %592
  %596 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %574, i64 0, i32 1, i32 0
  %597 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %596, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %517) #10
  %598 = icmp eq %"class.blink::CounterNode"* %597, null
  br i1 %598, label %633, label %599

599:                                              ; preds = %595
  %600 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %597, i64 0, i32 6
  %601 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %600, align 8
  %602 = icmp eq %"class.blink::CounterNode"* %601, null
  br i1 %602, label %603, label %633

603:                                              ; preds = %599
  %604 = load i96, i96* %535, align 4
  %605 = and i96 %604, 16777216
  %606 = icmp eq i96 %605, 0
  %607 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %520, i64 0, i32 6, i32 0, i32 0
  %608 = bitcast %"class.blink::Node"** %607 to %"class.blink::Element"**
  %609 = load %"class.blink::Element"*, %"class.blink::Element"** %608, align 8
  %610 = select i1 %606, %"class.blink::Element"* %609, %"class.blink::Element"* null
  %611 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %610, i64 0, i32 0, i32 0
  %612 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %611) #10
  %613 = icmp eq %"class.blink::ContainerNode"* %612, null
  br i1 %613, label %621, label %614

614:                                              ; preds = %603
  %615 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %612, i64 0, i32 0, i32 1
  %616 = load i32, i32* %615, align 8
  %617 = and i32 %616, 12
  %618 = icmp eq i32 %617, 0
  %619 = bitcast %"class.blink::ContainerNode"* %612 to %"class.blink::Element"*
  %620 = select i1 %618, %"class.blink::Element"* %619, %"class.blink::Element"* null
  br label %621

621:                                              ; preds = %603, %614
  %622 = phi %"class.blink::Element"* [ %620, %614 ], [ null, %603 ]
  %623 = icmp eq %"class.blink::Element"* %513, %622
  br i1 %623, label %624, label %629

624:                                              ; preds = %621
  %625 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %597, i64 0, i32 1
  %626 = load i32, i32* %625, align 4
  %627 = and i32 %626, 2
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %629, label %638

629:                                              ; preds = %624, %621
  %630 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %338, align 8
  %631 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %630, i64 0, i32 10
  %632 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %631, align 8
  call void @_ZN5blink11CounterNode11InsertAfterEPS0_S1_RKN3WTF12AtomicStringE(%"class.blink::CounterNode"* %630, %"class.blink::CounterNode"* nonnull %597, %"class.blink::CounterNode"* %632, %"class.WTF::AtomicString"* dereferenceable(8) %1) #10
  br label %633

633:                                              ; preds = %519, %594, %599, %595, %629
  %634 = phi i8 [ %533, %519 ], [ %533, %594 ], [ 1, %599 ], [ %533, %595 ], [ 1, %629 ]
  %635 = icmp ne i8 %634, 0
  %636 = call fastcc %"class.blink::LayoutObject"* @_ZN5blink12_GLOBAL__N_114NextInPreOrderERKNS_12LayoutObjectEPKNS_7ElementEb(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %520, %"class.blink::Element"* %513, i1 zeroext %635)
  %637 = icmp eq %"class.blink::LayoutObject"* %636, null
  br i1 %637, label %638, label %519

638:                                              ; preds = %633, %624, %512
  %639 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %338, align 8
  br label %640

640:                                              ; preds = %474, %469, %638
  %641 = phi %"class.blink::CounterNode"* [ %470, %469 ], [ %639, %638 ], [ %470, %474 ]
  %642 = icmp eq %"class.blink::CounterNode"* %641, null
  br i1 %642, label %650, label %643

643:                                              ; preds = %640
  %644 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %641, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %644) #10
  %645 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %641, i64 0, i32 0, i32 0, i32 0, i32 0
  %646 = load i32, i32* %645, align 4
  %647 = icmp eq i32 %646, 0
  br i1 %647, label %648, label %650

648:                                              ; preds = %643
  call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %641) #10
  %649 = bitcast %"class.blink::CounterNode"* %641 to i8*
  call void @free(i8* %649) #10
  br label %650

650:                                              ; preds = %640, %643, %648
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %337) #10
  %651 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %336, align 8
  %652 = icmp eq %"class.blink::CounterNode"* %651, null
  br i1 %652, label %660, label %653

653:                                              ; preds = %650
  %654 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %651, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %654) #10
  %655 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %651, i64 0, i32 0, i32 0, i32 0, i32 0
  %656 = load i32, i32* %655, align 4
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %658, label %660

658:                                              ; preds = %653
  call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %651) #10
  %659 = bitcast %"class.blink::CounterNode"* %651 to i8*
  call void @free(i8* %659) #10
  br label %660

660:                                              ; preds = %650, %653, %658
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %335) #10
  %661 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %334, align 8
  %662 = icmp eq %"class.blink::CounterNode"* %661, null
  br i1 %662, label %670, label %663

663:                                              ; preds = %660
  %664 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %661, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %664) #10
  %665 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %661, i64 0, i32 0, i32 0, i32 0, i32 0
  %666 = load i32, i32* %665, align 4
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %668, label %670

668:                                              ; preds = %663
  call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %661) #10
  %669 = bitcast %"class.blink::CounterNode"* %661 to i8*
  call void @free(i8* %669) #10
  br label %670

670:                                              ; preds = %660, %663, %668
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %333) #10
  br label %671

671:                                              ; preds = %88, %670, %327
  %672 = phi %"class.blink::CounterNode"* [ %641, %670 ], [ null, %327 ], [ %90, %88 ]
  ret %"class.blink::CounterNode"* %672
}

declare void @_ZN5blink11CounterNode15AddLayoutObjectEPNS_13LayoutCounterE(%"class.blink::CounterNode"*, %"class.blink::LayoutCounter"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.blink::CounterStyle"* @_ZNK5blink11StyleEngine28FindCounterStyleAcrossScopesERKN3WTF12AtomicStringEPKNS_9TreeScopeE(%"class.blink::StyleEngine"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::TreeScope"*) local_unnamed_addr #1

declare %"class.blink::CounterNode"* @_ZNK5blink11CounterNode30ParentCrossingStyleContainmentERKN3WTF12AtomicStringE(%"class.blink::CounterNode"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringENS_12AtomicStringES1_EENS_12StringAppendINS3_IT_T0_EET1_EERKS6_S7_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.2004"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2004", %"class.WTF::StringAppend.2004"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = getelementptr inbounds %"class.WTF::StringAppend.2004", %"class.WTF::StringAppend.2004"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #10
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %33
  tail call void @llvm.trap() #10
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %45

45:                                               ; preds = %24, %28, %43
  %46 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %65

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #10
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #10
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %65

64:                                               ; preds = %45
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_EC2ES3_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"* null)
  br label %77

65:                                               ; preds = %47, %62
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_EC2ES3_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"* nonnull %2)
  %66 = load atomic i32, i32* %48 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %65
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %65
  %74 = phi i32 [ %72, %71 ], [ %70, %65 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %77

77:                                               ; preds = %64, %73, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_12AtomicStringEEENS_12StringAppendINS_6StringET_EERKS3_S4_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend.2004", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #10
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #10
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringENS_12AtomicStringEEC2ES1_S2_(%"class.WTF::StringAppend.2004"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringENS_12AtomicStringEEC2ES1_S2_(%"class.WTF::StringAppend.2004"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.2004", %"class.WTF::StringAppend.2004"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.2004", %"class.WTF::StringAppend.2004"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i16*, align 8
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = select i1 %6, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %5
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = select i1 %11, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %10
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %67, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %67, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %67, label %31

31:                                               ; preds = %26
  %32 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %33 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %34 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %33, i8** nonnull dereferenceable(8) %2) #10
  %35 = load i8*, i8** %2, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %35)
  %36 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %36, label %103, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %54

44:                                               ; preds = %37
  %45 = zext i32 %43 to i33
  %46 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #10
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %44
  call void @llvm.trap() #10
  unreachable

52:                                               ; preds = %44
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %42, align 4
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi i32 [ %53, %52 ], [ %43, %37 ]
  %56 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %57 = load atomic i32, i32* %38 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %62 = add i32 %55, -1
  store i32 %62, i32* %61, align 4
  br label %63

63:                                               ; preds = %60, %54
  %64 = phi i32 [ %62, %60 ], [ %55, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %103

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #10
  br label %103

67:                                               ; preds = %26, %1, %19
  %68 = bitcast i16** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %3, align 8
  %69 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %70 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %69, i16** nonnull dereferenceable(8) %3) #10
  %71 = load i16*, i16** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %71)
  %72 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %72, label %103, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #10
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %80
  call void @llvm.trap() #10
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #10
  br label %103

103:                                              ; preds = %102, %99, %67, %66, %63, %31
  %104 = phi i8* [ %32, %31 ], [ %32, %63 ], [ %32, %66 ], [ %68, %67 ], [ %68, %99 ], [ %68, %102 ]
  %105 = phi i64 [ 0, %31 ], [ %56, %63 ], [ %56, %66 ], [ 0, %67 ], [ %92, %99 ], [ %92, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #10
  %106 = inttoptr i64 %105 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %106
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13LayoutCounter13UpdateCounterEv(%"class.blink::LayoutCounter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0
  %3 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13LayoutCounter12OriginalTextEv(%"class.blink::LayoutCounter"* %0)
  tail call void @_ZN5blink10LayoutText15SetTextIfNeededE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"* %2, %"class.WTF::StringImpl"* %3) #10
  ret void
}

declare void @_ZN5blink10LayoutText15SetTextIfNeededE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13LayoutCounter10InvalidateEv(%"class.blink::LayoutCounter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 2
  %4 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %3, align 8
  tail call void @_ZN5blink11CounterNode18RemoveLayoutObjectEPNS_13LayoutCounterE(%"class.blink::CounterNode"* %4, %"class.blink::LayoutCounter"* %0) #10
  %5 = getelementptr inbounds %"class.blink::LayoutCounter", %"class.blink::LayoutCounter"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %1, %8
  %9 = phi %"class.blink::LayoutObject"* [ %11, %8 ], [ %2, %1 ]
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 7
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %1
  %16 = phi %"class.blink::Node"* [ %6, %1 ], [ %13, %8 ]
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 5, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 19
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason16kCountersChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #10
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %2, i8 zeroext 3) #10
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %2, i32 1) #10
  br label %25

25:                                               ; preds = %15, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13LayoutCounter19DestroyCounterNodesERNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutObject"*, align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !4

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  br label %9

9:                                                ; preds = %1, %5, %8
  %10 = bitcast %"class.blink::LayoutObject"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %2, align 8
  %11 = call { %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"* } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E4findERKS4_(%"class.WTF::HashTable.2006"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to %"class.WTF::HashTable.2006"*), %"class.blink::LayoutObject"** nonnull dereferenceable(8) %2) #10
  %12 = extractvalue { %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"* } %11, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %13 = load %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to %"struct.WTF::KeyValuePair.2009"**), align 8
  %14 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %13, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair.2009"* %12, %16
  br i1 %17, label %109, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::HashMap.2013"*, %"class.WTF::HashMap.2013"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %20, i64 0, i32 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %20, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %22, i64 %25
  %27 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %20, i64 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %46, label %30

30:                                               ; preds = %18
  %31 = icmp eq i32 %24, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %30, %36
  %33 = phi %"struct.WTF::KeyValuePair.2017"* [ %37, %36 ], [ %22, %30 ]
  %34 = bitcast %"struct.WTF::KeyValuePair.2017"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  switch i64 %35, label %39 [
    i64 -1, label %36
    i64 0, label %36
  ]

36:                                               ; preds = %32, %32
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %33, i64 1
  %38 = icmp eq %"struct.WTF::KeyValuePair.2017"* %37, %26
  br i1 %38, label %46, label %32

39:                                               ; preds = %32, %30
  %40 = phi %"struct.WTF::KeyValuePair.2017"* [ %22, %30 ], [ %33, %32 ]
  %41 = icmp eq %"struct.WTF::KeyValuePair.2017"* %40, %26
  br i1 %41, label %46, label %76

42:                                               ; preds = %76, %90, %87
  %43 = load %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to %"struct.WTF::KeyValuePair.2009"**), align 8
  %44 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %36, %18, %42, %39
  %47 = phi i64 [ %45, %42 ], [ %15, %39 ], [ %15, %18 ], [ %15, %36 ]
  %48 = phi %"struct.WTF::KeyValuePair.2009"* [ %43, %42 ], [ %13, %39 ], [ %13, %18 ], [ %13, %36 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %48, i64 %47
  %50 = icmp eq %"struct.WTF::KeyValuePair.2009"* %49, %12
  br i1 %50, label %52, label %51

51:                                               ; preds = %46
  call void @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E5eraseEPKSM_(%"class.WTF::HashTable.2006"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to %"class.WTF::HashTable.2006"*), %"struct.WTF::KeyValuePair.2009"* %12) #10
  br label %52

52:                                               ; preds = %46, %51
  %53 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = and i96 %55, -137438953473
  store i96 %56, i96* %54, align 4
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %58 = load %"class.blink::Node"*, %"class.blink::Node"** %57, align 8
  %59 = icmp eq %"class.blink::Node"* %58, null
  br i1 %59, label %60, label %67

60:                                               ; preds = %52, %60
  %61 = phi %"class.blink::LayoutObject"* [ %63, %60 ], [ %0, %52 ]
  %62 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 7
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %63, i64 0, i32 6, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %60, label %67

67:                                               ; preds = %60, %52
  %68 = phi %"class.blink::Node"* [ %58, %52 ], [ %65, %60 ]
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 0, i32 3, i32 0, i32 0
  %70 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %70, i64 0, i32 2, i32 0, i32 0
  %72 = load %"class.blink::Document"*, %"class.blink::Document"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %72, i64 0, i32 113
  %74 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutView"* %74, null
  br i1 %75, label %109, label %92

76:                                               ; preds = %39, %90
  %77 = phi %"struct.WTF::KeyValuePair.2017"* [ %84, %90 ], [ %40, %39 ]
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %77, i64 0, i32 0
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %77, i64 0, i32 1, i32 0
  %80 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %79, align 8
  call fastcc void @_ZN5blinkL35DestroyCounterNodeWithoutMapRemovalERKN3WTF12AtomicStringEPNS_11CounterNodeE(%"class.WTF::AtomicString"* dereferenceable(8) %78, %"class.blink::CounterNode"* %80)
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %77, i64 1
  %82 = icmp eq %"struct.WTF::KeyValuePair.2017"* %81, %26
  br i1 %82, label %42, label %83

83:                                               ; preds = %76, %87
  %84 = phi %"struct.WTF::KeyValuePair.2017"* [ %88, %87 ], [ %81, %76 ]
  %85 = bitcast %"struct.WTF::KeyValuePair.2017"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  switch i64 %86, label %90 [
    i64 -1, label %87
    i64 0, label %87
  ]

87:                                               ; preds = %83, %83
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %84, i64 1
  %89 = icmp eq %"struct.WTF::KeyValuePair.2017"* %88, %26
  br i1 %89, label %42, label %83

90:                                               ; preds = %83
  %91 = icmp eq %"struct.WTF::KeyValuePair.2017"* %84, %26
  br i1 %91, label %42, label %76

92:                                               ; preds = %67
  br i1 %59, label %93, label %100

93:                                               ; preds = %92, %93
  %94 = phi %"class.blink::LayoutObject"* [ %96, %93 ], [ %0, %92 ]
  %95 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %94, i64 0, i32 7
  %96 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %96, i64 0, i32 6, i32 0, i32 0
  %98 = load %"class.blink::Node"*, %"class.blink::Node"** %97, align 8
  %99 = icmp eq %"class.blink::Node"* %98, null
  br i1 %99, label %93, label %100

100:                                              ; preds = %93, %92
  %101 = phi %"class.blink::Node"* [ %58, %92 ], [ %98, %93 ]
  %102 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %101, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %103, i64 0, i32 2, i32 0, i32 0
  %105 = load %"class.blink::Document"*, %"class.blink::Document"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %105, i64 0, i32 113
  %107 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %107, i64 0, i32 11
  store i8 1, i8* %108, align 8
  br label %109

109:                                              ; preds = %100, %67, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL35DestroyCounterNodeWithoutMapRemovalERKN3WTF12AtomicStringEPNS_11CounterNodeE(%"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::CounterNode"*) unnamed_addr #0 {
  %3 = alloca %"class.blink::LayoutObject"*, align 8
  %4 = tail call %"class.blink::CounterNode"* @_ZNK5blink11CounterNode14LastDescendantEv(%"class.blink::CounterNode"* %1) #10
  %5 = icmp eq %"class.blink::CounterNode"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %7) #10
  %8 = bitcast %"class.blink::LayoutObject"** %3 to i8*
  %9 = bitcast %"class.blink::LayoutObject"** %3 to i64*
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %6, %116
  %12 = phi %"class.blink::CounterNode"* [ %4, %6 ], [ %26, %116 ]
  %13 = icmp eq %"class.blink::CounterNode"* %12, %1
  br i1 %13, label %14, label %25

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %15) #10
  %16 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %1) #10
  %20 = bitcast %"class.blink::CounterNode"* %1 to i8*
  call void @free(i8* %20) #10
  br label %21

21:                                               ; preds = %116, %2, %14, %19
  %22 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %1, i64 0, i32 6
  %23 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %22, align 8
  %24 = icmp eq %"class.blink::CounterNode"* %23, null
  br i1 %24, label %118, label %117

25:                                               ; preds = %11
  %26 = call %"class.blink::CounterNode"* @_ZNK5blink11CounterNode18PreviousInPreOrderEv(%"class.blink::CounterNode"* nonnull %12) #10
  %27 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %12, i64 0, i32 6
  %28 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %27, align 8
  call void @_ZN5blink11CounterNode11RemoveChildEPS0_(%"class.blink::CounterNode"* %28, %"class.blink::CounterNode"* nonnull %12) #10
  %29 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to i8*) acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %35, !prof !4

31:                                               ; preds = %25
  %32 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  br label %35

35:                                               ; preds = %25, %31, %34
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %36 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %12, i64 0, i32 4
  %37 = bitcast %"class.blink::LayoutObject"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %9, align 8
  %39 = call %"class.WTF::HashMap.2013"* @_ZNK3WTF7HashMapIPKN5blink12LayoutObjectENSt3__110unique_ptrINS0_INS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEENS5_14default_deleteISG_EEEENS_7PtrHashIS3_EENSC_IS4_EENSC_ISJ_EESF_E2atERKS4_(%"class.WTF::HashMap.2005"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to %"class.WTF::HashMap.2005"*), %"class.blink::LayoutObject"** nonnull dereferenceable(8) %3)
  %40 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %39, i64 0, i32 0, i32 0
  %41 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %40, align 8
  %42 = icmp eq %"struct.WTF::KeyValuePair.2017"* %41, null
  %43 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %39, i64 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  br i1 %42, label %95, label %45

45:                                               ; preds = %35
  %46 = add i32 %44, -1
  %47 = zext i32 %46 to i64
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = lshr i32 %50, 8
  %52 = and i32 %51, %46
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %41, i64 %53
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %95, label %58

58:                                               ; preds = %45
  %59 = xor i32 %51, -1
  %60 = lshr i32 %50, 31
  %61 = add nsw i32 %60, %59
  %62 = shl i32 %61, 12
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 7
  %65 = xor i32 %64, %63
  %66 = shl i32 %65, 2
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 20
  %69 = xor i32 %68, %67
  %70 = or i32 %69, 1
  %71 = zext i32 %70 to i64
  br label %72

72:                                               ; preds = %82, %58
  %73 = phi %"struct.WTF::KeyValuePair.2017"* [ %54, %58 ], [ %87, %82 ]
  %74 = phi i64 [ %53, %58 ], [ %86, %82 ]
  %75 = phi i64 [ 0, %58 ], [ %84, %82 ]
  %76 = bitcast %"struct.WTF::KeyValuePair.2017"* %73 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = icmp ne i8* %77, inttoptr (i64 -1 to i8*)
  %79 = bitcast i8* %77 to %"class.WTF::StringImpl"*
  %80 = icmp eq %"class.WTF::StringImpl"* %48, %79
  %81 = and i1 %78, %80
  br i1 %81, label %91, label %82

82:                                               ; preds = %72
  %83 = icmp eq i64 %75, 0
  %84 = select i1 %83, i64 %71, i64 %75
  %85 = add i64 %84, %74
  %86 = and i64 %85, %47
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %41, i64 %86
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %95, label %72

91:                                               ; preds = %72
  %92 = icmp eq %"struct.WTF::KeyValuePair.2017"* %73, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = zext i32 %44 to i64
  br label %98

95:                                               ; preds = %82, %91, %45, %35
  %96 = zext i32 %44 to i64
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %41, i64 %96
  br label %98

98:                                               ; preds = %95, %93
  %99 = phi i64 [ %94, %93 ], [ %96, %95 ]
  %100 = phi %"struct.WTF::KeyValuePair.2017"* [ %73, %93 ], [ %97, %95 ]
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %41, i64 %99
  %102 = icmp eq %"struct.WTF::KeyValuePair.2017"* %101, %100
  br i1 %102, label %105, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %39, i64 0, i32 0
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.2014"* %104, %"struct.WTF::KeyValuePair.2017"* %100) #10
  br label %105

105:                                              ; preds = %98, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  %106 = icmp eq %"class.blink::CounterNode"* %26, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %26, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %108) #10
  br label %109

109:                                              ; preds = %105, %107
  %110 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %12, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %110) #10
  %111 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %109
  call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %12) #10
  %115 = bitcast %"class.blink::CounterNode"* %12 to i8*
  call void @free(i8* %115) #10
  br label %116

116:                                              ; preds = %109, %114
  br i1 %106, label %21, label %11

117:                                              ; preds = %21
  call void @_ZN5blink11CounterNode11RemoveChildEPS0_(%"class.blink::CounterNode"* nonnull %23, %"class.blink::CounterNode"* %1) #10
  br label %118

118:                                              ; preds = %21, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13LayoutCounter18DestroyCounterNodeERNS_12LayoutObjectERKN3WTF12AtomicStringE(%"class.blink::LayoutObject"* dereferenceable(88), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutObject"*, align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !4

6:                                                ; preds = %2
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  br label %10

10:                                               ; preds = %2, %6, %9
  %11 = bitcast %"class.blink::LayoutObject"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %3, align 8
  %12 = call %"class.WTF::HashMap.2013"* @_ZNK3WTF7HashMapIPKN5blink12LayoutObjectENSt3__110unique_ptrINS0_INS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEENS5_14default_deleteISG_EEEENS_7PtrHashIS3_EENSC_IS4_EENSC_ISJ_EESF_E2atERKS4_(%"class.WTF::HashMap.2005"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to %"class.WTF::HashMap.2005"*), %"class.blink::LayoutObject"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  %13 = icmp eq %"class.WTF::HashMap.2013"* %12, null
  br i1 %13, label %89, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %12, i64 0, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %15, align 8
  %17 = icmp eq %"struct.WTF::KeyValuePair.2017"* %16, null
  %18 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %12, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  br i1 %17, label %71, label %20

20:                                               ; preds = %14
  %21 = add i32 %19, -1
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = lshr i32 %26, 8
  %28 = and i32 %27, %21
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %16, i64 %29
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %71, label %34

34:                                               ; preds = %20
  %35 = xor i32 %27, -1
  %36 = lshr i32 %26, 31
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %48

48:                                               ; preds = %58, %34
  %49 = phi %"struct.WTF::KeyValuePair.2017"* [ %30, %34 ], [ %63, %58 ]
  %50 = phi i64 [ %29, %34 ], [ %62, %58 ]
  %51 = phi i64 [ 0, %34 ], [ %60, %58 ]
  %52 = bitcast %"struct.WTF::KeyValuePair.2017"* %49 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp ne i8* %53, inttoptr (i64 -1 to i8*)
  %55 = bitcast i8* %53 to %"class.WTF::StringImpl"*
  %56 = icmp eq %"class.WTF::StringImpl"* %24, %55
  %57 = and i1 %54, %56
  br i1 %57, label %67, label %58

58:                                               ; preds = %48
  %59 = icmp eq i64 %51, 0
  %60 = select i1 %59, i64 %47, i64 %51
  %61 = add i64 %60, %50
  %62 = and i64 %61, %22
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %16, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %71, label %48

67:                                               ; preds = %48
  %68 = icmp eq %"struct.WTF::KeyValuePair.2017"* %49, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = zext i32 %19 to i64
  br label %74

71:                                               ; preds = %58, %67, %20, %14
  %72 = zext i32 %19 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %16, i64 %72
  br label %74

74:                                               ; preds = %69, %71
  %75 = phi i64 [ %70, %69 ], [ %72, %71 ]
  %76 = phi %"struct.WTF::KeyValuePair.2017"* [ %49, %69 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %16, i64 %75
  %78 = icmp eq %"struct.WTF::KeyValuePair.2017"* %76, %77
  br i1 %78, label %89, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %76, i64 0, i32 1, i32 0
  %81 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %80, align 8
  call fastcc void @_ZN5blinkL35DestroyCounterNodeWithoutMapRemovalERKN3WTF12AtomicStringEPNS_11CounterNodeE(%"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::CounterNode"* %81)
  %82 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %15, align 8
  %83 = load i32, i32* %18, align 8
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %82, i64 %84
  %86 = icmp eq %"struct.WTF::KeyValuePair.2017"* %85, %76
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %12, i64 0, i32 0
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.2014"* %88, %"struct.WTF::KeyValuePair.2017"* %76) #10
  br label %89

89:                                               ; preds = %74, %79, %87, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::HashMap.2013"* @_ZNK3WTF7HashMapIPKN5blink12LayoutObjectENSt3__110unique_ptrINS0_INS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEENS5_14default_deleteISG_EEEENS_7PtrHashIS3_EENSC_IS4_EENSC_ISJ_EESF_E2atERKS4_(%"class.WTF::HashMap.2005"*, %"class.blink::LayoutObject"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.2005", %"class.WTF::HashMap.2005"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.2009"* %4, null
  br i1 %5, label %73, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap.2005", %"class.WTF::HashMap.2005"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutObject"*
  %38 = icmp eq %"class.blink::LayoutObject"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutObject"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutObject"* %54, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutObject"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %6
  %68 = phi %"struct.WTF::KeyValuePair.2009"* [ %34, %6 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.2009"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %68, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::HashMap.2013"*, %"class.WTF::HashMap.2013"** %71, align 8
  br label %73

73:                                               ; preds = %53, %2, %67, %70
  %74 = phi %"class.WTF::HashMap.2013"* [ %72, %70 ], [ null, %67 ], [ null, %2 ], [ null, %53 ]
  ret %"class.WTF::HashMap.2013"* %74
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13LayoutCounter33LayoutObjectSubtreeWillBeDetachedEPNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1, %5
  %6 = phi %"class.blink::LayoutObject"* [ %8, %5 ], [ %0, %1 ]
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 7
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %5, label %12

12:                                               ; preds = %5, %1
  %13 = phi %"class.blink::Node"* [ %3, %1 ], [ %10, %5 ]
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %17, i64 0, i32 113
  %19 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutView"* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %12
  br i1 %4, label %22, label %29

22:                                               ; preds = %21, %22
  %23 = phi %"class.blink::LayoutObject"* [ %25, %22 ], [ %0, %21 ]
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 7
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 6, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %22, label %29

29:                                               ; preds = %22, %21
  %30 = phi %"class.blink::Node"* [ %3, %21 ], [ %27, %22 ]
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %34, i64 0, i32 113
  %36 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %36, i64 0, i32 9
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %49, label %40

40:                                               ; preds = %29
  %41 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13LastLeafChildEv(%"class.blink::LayoutObject"* %0) #10
  %42 = icmp eq %"class.blink::LayoutObject"* %41, null
  %43 = select i1 %42, %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %41
  tail call void @_ZN5blink13LayoutCounter19DestroyCounterNodesERNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %43)
  %44 = icmp eq %"class.blink::LayoutObject"* %43, %0
  br i1 %44, label %49, label %45

45:                                               ; preds = %40, %45
  %46 = phi %"class.blink::LayoutObject"* [ %47, %45 ], [ %43, %40 ]
  %47 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEv(%"class.blink::LayoutObject"* %46) #10
  tail call void @_ZN5blink13LayoutCounter19DestroyCounterNodesERNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %47)
  %48 = icmp eq %"class.blink::LayoutObject"* %47, %0
  br i1 %48, label %49, label %45

49:                                               ; preds = %45, %40, %29, %12
  ret void
}

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13LastLeafChildEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13LayoutCounter27LayoutObjectSubtreeAttachedEPNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1, %5
  %6 = phi %"class.blink::LayoutObject"* [ %8, %5 ], [ %0, %1 ]
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 7
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %5, label %12

12:                                               ; preds = %5, %1
  %13 = phi %"class.blink::Node"* [ %3, %1 ], [ %10, %5 ]
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %17, i64 0, i32 113
  %19 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %19, i64 0, i32 9
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %74, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 16777216
  %28 = icmp ne i96 %27, 0
  %29 = or i1 %4, %28
  br i1 %29, label %33, label %30

30:                                               ; preds = %23
  %31 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %3) #10
  %32 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %31, i64 0, i32 0
  br label %35

33:                                               ; preds = %23
  %34 = icmp eq i96 %27, 0
  br i1 %34, label %35, label %43

35:                                               ; preds = %33, %30
  %36 = phi %"class.blink::Node"* [ %32, %30 ], [ %3, %33 ]
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 4194304
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %74

43:                                               ; preds = %38, %33, %35
  %44 = icmp eq %"class.blink::LayoutObject"* %0, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %49, %43
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  %48 = icmp eq %"class.blink::LayoutObject"* %47, null
  br i1 %48, label %74, label %53

49:                                               ; preds = %43, %49
  %50 = phi %"class.blink::LayoutObject"* [ %51, %49 ], [ %0, %43 ]
  tail call fastcc void @_ZN5blinkL14UpdateCountersERNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %50)
  %51 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %50, %"class.blink::LayoutObject"* nonnull %0) #10
  %52 = icmp eq %"class.blink::LayoutObject"* %51, null
  br i1 %52, label %45, label %49

53:                                               ; preds = %45, %70
  %54 = phi %"class.blink::LayoutObject"* [ %72, %70 ], [ %47, %45 ]
  %55 = phi i1 [ %68, %70 ], [ false, %45 ]
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 0, i32 5, i32 0
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 3, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %59, i64 0, i32 2, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %63, i64 0, i32 45
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 2
  %67 = icmp ne i32 %66, 0
  %68 = or i1 %55, %67
  br i1 %68, label %69, label %70

69:                                               ; preds = %53
  tail call fastcc void @_ZN5blinkL14UpdateCountersERNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %54)
  br label %70

70:                                               ; preds = %53, %69
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 0, i32 7
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutObject"* %72, null
  br i1 %73, label %74, label %53

74:                                               ; preds = %70, %45, %38, %12
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL14UpdateCountersERNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #0 {
  %2 = alloca %"class.blink::LayoutObject"*, align 8
  %3 = alloca %class.scoped_refptr.2018, align 8
  %4 = alloca %class.scoped_refptr.2018, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = tail call %"class.blink::CounterDirectiveMap"* @_ZNK5blink13ComputedStyle20GetCounterDirectivesEv(%"class.blink::ComputedStyle"* %6) #10
  %8 = icmp eq %"class.blink::CounterDirectiveMap"* %7, null
  br i1 %8, label %271, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.588"*, %"struct.WTF::KeyValuePair.588"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %7, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %11, i64 %14
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 137438953472
  %20 = icmp eq i96 %19, 0
  br i1 %20, label %21, label %52

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %7, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %271, label %25

25:                                               ; preds = %21
  %26 = icmp eq i32 %13, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %25, %31
  %28 = phi %"struct.WTF::KeyValuePair.588"* [ %32, %31 ], [ %11, %25 ]
  %29 = bitcast %"struct.WTF::KeyValuePair.588"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  switch i64 %30, label %34 [
    i64 -1, label %31
    i64 0, label %31
  ]

31:                                               ; preds = %27, %27
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %28, i64 1
  %33 = icmp eq %"struct.WTF::KeyValuePair.588"* %32, %15
  br i1 %33, label %271, label %27

34:                                               ; preds = %27, %25
  %35 = phi %"struct.WTF::KeyValuePair.588"* [ %11, %25 ], [ %28, %27 ]
  %36 = icmp eq %"struct.WTF::KeyValuePair.588"* %35, %15
  br i1 %36, label %271, label %37

37:                                               ; preds = %34, %50
  %38 = phi %"struct.WTF::KeyValuePair.588"* [ %44, %50 ], [ %35, %34 ]
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %38, i64 0, i32 0
  %40 = tail call fastcc %"class.blink::CounterNode"* @_ZN5blink12_GLOBAL__N_123MakeCounterNodeIfNeededERNS_12LayoutObjectERKN3WTF12AtomicStringEb(%"class.blink::LayoutObject"* dereferenceable(88) %0, %"class.WTF::AtomicString"* dereferenceable(8) %39, i1 zeroext false)
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %38, i64 1
  %42 = icmp eq %"struct.WTF::KeyValuePair.588"* %41, %15
  br i1 %42, label %271, label %43

43:                                               ; preds = %37, %47
  %44 = phi %"struct.WTF::KeyValuePair.588"* [ %48, %47 ], [ %41, %37 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.588"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  switch i64 %46, label %50 [
    i64 -1, label %47
    i64 0, label %47
  ]

47:                                               ; preds = %43, %43
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %44, i64 1
  %49 = icmp eq %"struct.WTF::KeyValuePair.588"* %48, %15
  br i1 %49, label %271, label %43

50:                                               ; preds = %43
  %51 = icmp eq %"struct.WTF::KeyValuePair.588"* %44, %15
  br i1 %51, label %271, label %37

52:                                               ; preds = %9
  %53 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to i8*) acquire, align 8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59, !prof !4

55:                                               ; preds = %52
  %56 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  br label %59

59:                                               ; preds = %52, %55, %58
  %60 = bitcast %"class.blink::LayoutObject"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #10
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %2, align 8
  %61 = call %"class.WTF::HashMap.2013"* @_ZNK3WTF7HashMapIPKN5blink12LayoutObjectENSt3__110unique_ptrINS0_INS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEENS5_14default_deleteISG_EEEENS_7PtrHashIS3_EENSC_IS4_EENSC_ISJ_EESF_E2atERKS4_(%"class.WTF::HashMap.2005"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to %"class.WTF::HashMap.2005"*), %"class.blink::LayoutObject"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #10
  %62 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %7, i64 0, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  %65 = load %"struct.WTF::KeyValuePair.588"*, %"struct.WTF::KeyValuePair.588"** %10, align 8
  %66 = load i32, i32* %12, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %65, i64 %67
  br i1 %64, label %78, label %69

69:                                               ; preds = %59
  %70 = icmp eq i32 %66, 0
  br i1 %70, label %78, label %71

71:                                               ; preds = %69, %75
  %72 = phi %"struct.WTF::KeyValuePair.588"* [ %76, %75 ], [ %65, %69 ]
  %73 = bitcast %"struct.WTF::KeyValuePair.588"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  switch i64 %74, label %78 [
    i64 -1, label %75
    i64 0, label %75
  ]

75:                                               ; preds = %71, %71
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %72, i64 1
  %77 = icmp eq %"struct.WTF::KeyValuePair.588"* %76, %68
  br i1 %77, label %78, label %71

78:                                               ; preds = %71, %75, %59, %69
  %79 = phi %"struct.WTF::KeyValuePair.588"* [ %68, %59 ], [ %65, %69 ], [ %72, %71 ], [ %68, %75 ]
  %80 = icmp eq %"struct.WTF::KeyValuePair.588"* %79, %15
  br i1 %80, label %271, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %61, i64 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.WTF::HashMap.2013", %"class.WTF::HashMap.2013"* %61, i64 0, i32 0, i32 1
  %84 = bitcast %class.scoped_refptr.2018* %3 to i8*
  %85 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %3, i64 0, i32 0
  %86 = bitcast %class.scoped_refptr.2018* %4 to i8*
  %87 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %4, i64 0, i32 0
  br label %88

88:                                               ; preds = %81, %268
  %89 = phi %"struct.WTF::KeyValuePair.588"* [ %79, %81 ], [ %269, %268 ]
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %89, i64 0, i32 0
  %91 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %82, align 8
  %92 = icmp eq %"struct.WTF::KeyValuePair.2017"* %91, null
  br i1 %92, label %147, label %93

93:                                               ; preds = %88
  %94 = load i32, i32* %83, align 8
  %95 = add i32 %94, -1
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %89, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = lshr i32 %100, 8
  %102 = and i32 %101, %95
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %91, i64 %103
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %147, label %108

108:                                              ; preds = %93
  %109 = xor i32 %101, -1
  %110 = lshr i32 %100, 31
  %111 = add nsw i32 %110, %109
  %112 = shl i32 %111, 12
  %113 = xor i32 %112, %111
  %114 = lshr i32 %113, 7
  %115 = xor i32 %114, %113
  %116 = shl i32 %115, 2
  %117 = xor i32 %116, %115
  %118 = lshr i32 %117, 20
  %119 = xor i32 %118, %117
  %120 = or i32 %119, 1
  %121 = zext i32 %120 to i64
  br label %122

122:                                              ; preds = %132, %108
  %123 = phi %"struct.WTF::KeyValuePair.2017"* [ %104, %108 ], [ %137, %132 ]
  %124 = phi i64 [ %103, %108 ], [ %136, %132 ]
  %125 = phi i64 [ 0, %108 ], [ %134, %132 ]
  %126 = bitcast %"struct.WTF::KeyValuePair.2017"* %123 to i8**
  %127 = load i8*, i8** %126, align 8
  %128 = icmp ne i8* %127, inttoptr (i64 -1 to i8*)
  %129 = bitcast i8* %127 to %"class.WTF::StringImpl"*
  %130 = icmp eq %"class.WTF::StringImpl"* %98, %129
  %131 = and i1 %128, %130
  br i1 %131, label %141, label %132

132:                                              ; preds = %122
  %133 = icmp eq i64 %125, 0
  %134 = select i1 %133, i64 %121, i64 %125
  %135 = add i64 %134, %124
  %136 = and i64 %135, %96
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %91, i64 %136
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %137, i64 0, i32 0, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %147, label %122

141:                                              ; preds = %122
  %142 = icmp eq %"struct.WTF::KeyValuePair.2017"* %123, null
  br i1 %142, label %147, label %143

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %123, i64 0, i32 1, i32 0
  %145 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %144, align 8
  %146 = icmp eq %"class.blink::CounterNode"* %145, null
  br i1 %146, label %147, label %149

147:                                              ; preds = %132, %143, %141, %88, %93
  %148 = call fastcc %"class.blink::CounterNode"* @_ZN5blink12_GLOBAL__N_123MakeCounterNodeIfNeededERNS_12LayoutObjectERKN3WTF12AtomicStringEb(%"class.blink::LayoutObject"* dereferenceable(88) %0, %"class.WTF::AtomicString"* dereferenceable(8) %90, i1 zeroext false)
  br label %258

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %145, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %150) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #10
  store %"class.blink::CounterNode"* null, %"class.blink::CounterNode"** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #10
  store %"class.blink::CounterNode"* null, %"class.blink::CounterNode"** %87, align 8
  %151 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %145, i64 0, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = and i32 %152, 2
  %154 = icmp ne i32 %153, 0
  %155 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_119FindPlaceForCounterERNS_12LayoutObjectERKN3WTF12AtomicStringEbR13scoped_refptrINS_11CounterNodeEESA_(%"class.blink::LayoutObject"* dereferenceable(88) %0, %"class.WTF::AtomicString"* dereferenceable(8) %90, i1 zeroext %154, %class.scoped_refptr.2018* nonnull dereferenceable(8) %3, %class.scoped_refptr.2018* nonnull dereferenceable(8) %4)
  %156 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %82, align 8
  %157 = icmp eq %"struct.WTF::KeyValuePair.2017"* %156, null
  br i1 %157, label %230, label %158

158:                                              ; preds = %149
  %159 = load i32, i32* %83, align 8
  %160 = add i32 %159, -1
  %161 = zext i32 %160 to i64
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = lshr i32 %164, 8
  %166 = and i32 %165, %160
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %156, i64 %167
  %169 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %168, i64 0, i32 0, i32 0, i32 0, i32 0
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %230, label %172

172:                                              ; preds = %158
  %173 = xor i32 %165, -1
  %174 = lshr i32 %164, 31
  %175 = add nsw i32 %174, %173
  %176 = shl i32 %175, 12
  %177 = xor i32 %176, %175
  %178 = lshr i32 %177, 7
  %179 = xor i32 %178, %177
  %180 = shl i32 %179, 2
  %181 = xor i32 %180, %179
  %182 = lshr i32 %181, 20
  %183 = xor i32 %182, %181
  %184 = or i32 %183, 1
  %185 = zext i32 %184 to i64
  br label %186

186:                                              ; preds = %196, %172
  %187 = phi %"struct.WTF::KeyValuePair.2017"* [ %168, %172 ], [ %201, %196 ]
  %188 = phi i64 [ %167, %172 ], [ %200, %196 ]
  %189 = phi i64 [ 0, %172 ], [ %198, %196 ]
  %190 = bitcast %"struct.WTF::KeyValuePair.2017"* %187 to i8**
  %191 = load i8*, i8** %190, align 8
  %192 = icmp ne i8* %191, inttoptr (i64 -1 to i8*)
  %193 = bitcast i8* %191 to %"class.WTF::StringImpl"*
  %194 = icmp eq %"class.WTF::StringImpl"* %162, %193
  %195 = and i1 %192, %194
  br i1 %195, label %205, label %196

196:                                              ; preds = %186
  %197 = icmp eq i64 %189, 0
  %198 = select i1 %197, i64 %185, i64 %189
  %199 = add i64 %198, %188
  %200 = and i64 %199, %161
  %201 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %156, i64 %200
  %202 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %201, i64 0, i32 0, i32 0, i32 0, i32 0
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %210, label %186

205:                                              ; preds = %186
  %206 = icmp eq %"struct.WTF::KeyValuePair.2017"* %187, null
  br i1 %206, label %210, label %207

207:                                              ; preds = %205
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %187, i64 0, i32 1, i32 0
  %209 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %208, align 8
  br label %210

210:                                              ; preds = %196, %205, %207
  %211 = phi %"class.blink::CounterNode"* [ %209, %207 ], [ null, %205 ], [ null, %196 ]
  %212 = icmp eq %"class.blink::CounterNode"* %145, %211
  br i1 %212, label %213, label %230

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %145, i64 0, i32 6
  %215 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %214, align 8
  %216 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %85, align 8
  %217 = icmp eq %"class.blink::CounterNode"* %216, %215
  br i1 %217, label %218, label %223

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %145, i64 0, i32 7
  %220 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %219, align 8
  %221 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %87, align 8
  %222 = icmp eq %"class.blink::CounterNode"* %221, %220
  br i1 %222, label %232, label %223

223:                                              ; preds = %218, %213
  %224 = icmp eq %"class.blink::CounterNode"* %215, null
  br i1 %224, label %226, label %225

225:                                              ; preds = %223
  call void @_ZN5blink11CounterNode11RemoveChildEPS0_(%"class.blink::CounterNode"* nonnull %215, %"class.blink::CounterNode"* nonnull %145) #10
  br label %226

226:                                              ; preds = %223, %225
  %227 = icmp eq %"class.blink::CounterNode"* %216, null
  br i1 %227, label %230, label %228

228:                                              ; preds = %226
  %229 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %87, align 8
  call void @_ZN5blink11CounterNode11InsertAfterEPS0_S1_RKN3WTF12AtomicStringE(%"class.blink::CounterNode"* nonnull %216, %"class.blink::CounterNode"* nonnull %145, %"class.blink::CounterNode"* %229, %"class.WTF::AtomicString"* dereferenceable(8) %90) #10
  br label %232

230:                                              ; preds = %226, %210, %158, %149
  %231 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %87, align 8
  br label %232

232:                                              ; preds = %230, %218, %228
  %233 = phi %"class.blink::CounterNode"* [ %231, %230 ], [ %220, %218 ], [ %229, %228 ]
  %234 = icmp eq %"class.blink::CounterNode"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %233, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #10
  %237 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %233) #10
  %241 = bitcast %"class.blink::CounterNode"* %233 to i8*
  call void @free(i8* %241) #10
  br label %242

242:                                              ; preds = %232, %235, %240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #10
  %243 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %85, align 8
  %244 = icmp eq %"class.blink::CounterNode"* %243, null
  br i1 %244, label %252, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %243, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %246) #10
  %247 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %243, i64 0, i32 0, i32 0, i32 0, i32 0
  %248 = load i32, i32* %247, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %252

250:                                              ; preds = %245
  call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %243) #10
  %251 = bitcast %"class.blink::CounterNode"* %243 to i8*
  call void @free(i8* %251) #10
  br label %252

252:                                              ; preds = %242, %245, %250
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #10
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %150) #10
  %253 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %145, i64 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %258

256:                                              ; preds = %252
  call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %145) #10
  %257 = bitcast %"class.blink::CounterNode"* %145 to i8*
  call void @free(i8* %257) #10
  br label %258

258:                                              ; preds = %147, %252, %256
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %89, i64 1
  %260 = icmp eq %"struct.WTF::KeyValuePair.588"* %259, %68
  br i1 %260, label %268, label %261

261:                                              ; preds = %258, %265
  %262 = phi %"struct.WTF::KeyValuePair.588"* [ %266, %265 ], [ %259, %258 ]
  %263 = bitcast %"struct.WTF::KeyValuePair.588"* %262 to i64*
  %264 = load i64, i64* %263, align 8
  switch i64 %264, label %268 [
    i64 -1, label %265
    i64 0, label %265
  ]

265:                                              ; preds = %261, %261
  %266 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %262, i64 1
  %267 = icmp eq %"struct.WTF::KeyValuePair.588"* %266, %68
  br i1 %267, label %268, label %261

268:                                              ; preds = %261, %265, %258
  %269 = phi %"struct.WTF::KeyValuePair.588"* [ %68, %258 ], [ %68, %265 ], [ %262, %261 ]
  %270 = icmp eq %"struct.WTF::KeyValuePair.588"* %269, %15
  br i1 %270, label %271, label %88

271:                                              ; preds = %268, %31, %37, %50, %47, %21, %78, %34, %1
  ret void
}

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13LayoutCounter24LayoutObjectStyleChangedERNS_12LayoutObjectEPKNS_13ComputedStyleERS4_(%"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %5 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %5, i64 92
  %7 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::LayoutObject"* %0, i32 14) #10
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %4, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, i64 92
  %12 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %0, i32 29) #10
  br i1 %13, label %14, label %15

14:                                               ; preds = %3, %9
  tail call void @_ZN5blink15ListItemOrdinal23ItemCounterStyleUpdatedERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %0) #10
  br label %15

15:                                               ; preds = %14, %9
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 16777216
  %20 = icmp eq i96 %19, 0
  br i1 %20, label %21, label %320

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  br label %48

28:                                               ; preds = %21
  %29 = bitcast %"class.blink::Node"* %23 to i8 (%"class.blink::Node"*)***
  %30 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %29, align 8
  %31 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %30, i64 34
  %32 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %31, align 8
  %33 = tail call zeroext i8 %32(%"class.blink::Node"* nonnull %23) #10
  %34 = icmp ne i8 %33, 0
  %35 = load i96, i96* %17, align 4
  %36 = and i96 %35, 16777216
  %37 = icmp eq i96 %36, 0
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  br i1 %37, label %40, label %41

40:                                               ; preds = %28
  br i1 %34, label %42, label %48

41:                                               ; preds = %28
  br i1 %34, label %42, label %320

42:                                               ; preds = %40, %41
  %43 = phi %"class.blink::Node"* [ %39, %40 ], [ null, %41 ]
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.blink::Node"** %44 to %"class.blink::ContainerNode"**
  %46 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %46, i64 0, i32 0
  br label %48

48:                                               ; preds = %25, %40, %42
  %49 = phi %"class.blink::Node"* [ %47, %42 ], [ %39, %40 ], [ %27, %25 ]
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %320, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 4194304
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %320

56:                                               ; preds = %51
  %57 = icmp eq %"class.blink::ComputedStyle"* %1, null
  br i1 %57, label %58, label %61

58:                                               ; preds = %56
  %59 = tail call %"class.blink::CounterDirectiveMap"* @_ZNK5blink13ComputedStyle20GetCounterDirectivesEv(%"class.blink::ComputedStyle"* %2) #10
  %60 = icmp eq %"class.blink::CounterDirectiveMap"* %59, null
  br i1 %60, label %320, label %277

61:                                               ; preds = %56
  %62 = tail call %"class.blink::CounterDirectiveMap"* @_ZNK5blink13ComputedStyle20GetCounterDirectivesEv(%"class.blink::ComputedStyle"* nonnull %1) #10
  %63 = tail call %"class.blink::CounterDirectiveMap"* @_ZNK5blink13ComputedStyle20GetCounterDirectivesEv(%"class.blink::ComputedStyle"* %2) #10
  %64 = icmp eq %"class.blink::CounterDirectiveMap"* %62, null
  %65 = icmp ne %"class.blink::CounterDirectiveMap"* %63, null
  br i1 %64, label %276, label %66

66:                                               ; preds = %61
  br i1 %65, label %67, label %271

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %63, i64 0, i32 0, i32 0, i32 0
  %69 = load %"struct.WTF::KeyValuePair.588"*, %"struct.WTF::KeyValuePair.588"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %63, i64 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %69, i64 %72
  %74 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %62, i64 0, i32 0, i32 0, i32 0
  %75 = load %"struct.WTF::KeyValuePair.588"*, %"struct.WTF::KeyValuePair.588"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %62, i64 0, i32 0, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %75, i64 %78
  %80 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %63, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %99, label %83

83:                                               ; preds = %67
  %84 = icmp eq i32 %71, 0
  br i1 %84, label %92, label %85

85:                                               ; preds = %83, %89
  %86 = phi %"struct.WTF::KeyValuePair.588"* [ %90, %89 ], [ %69, %83 ]
  %87 = bitcast %"struct.WTF::KeyValuePair.588"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  switch i64 %88, label %92 [
    i64 -1, label %89
    i64 0, label %89
  ]

89:                                               ; preds = %85, %85
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %86, i64 1
  %91 = icmp eq %"struct.WTF::KeyValuePair.588"* %90, %73
  br i1 %91, label %99, label %85

92:                                               ; preds = %85, %83
  %93 = phi %"struct.WTF::KeyValuePair.588"* [ %69, %83 ], [ %86, %85 ]
  %94 = icmp eq %"struct.WTF::KeyValuePair.588"* %93, %73
  br i1 %94, label %99, label %119

95:                                               ; preds = %187, %197, %194
  %96 = load %"struct.WTF::KeyValuePair.588"*, %"struct.WTF::KeyValuePair.588"** %74, align 8
  %97 = load i32, i32* %76, align 8
  %98 = zext i32 %97 to i64
  br label %99

99:                                               ; preds = %89, %67, %95, %92
  %100 = phi i64 [ %98, %95 ], [ %78, %92 ], [ %78, %67 ], [ %78, %89 ]
  %101 = phi i32 [ %97, %95 ], [ %77, %92 ], [ %77, %67 ], [ %77, %89 ]
  %102 = phi %"struct.WTF::KeyValuePair.588"* [ %96, %95 ], [ %75, %92 ], [ %75, %67 ], [ %75, %89 ]
  %103 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %62, i64 0, i32 0, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %102, i64 %100
  br i1 %105, label %116, label %107

107:                                              ; preds = %99
  %108 = icmp eq i32 %101, 0
  br i1 %108, label %116, label %109

109:                                              ; preds = %107, %113
  %110 = phi %"struct.WTF::KeyValuePair.588"* [ %114, %113 ], [ %102, %107 ]
  %111 = bitcast %"struct.WTF::KeyValuePair.588"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  switch i64 %112, label %116 [
    i64 -1, label %113
    i64 0, label %113
  ]

113:                                              ; preds = %109, %109
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %110, i64 1
  %115 = icmp eq %"struct.WTF::KeyValuePair.588"* %114, %106
  br i1 %115, label %116, label %109

116:                                              ; preds = %109, %113, %99, %107
  %117 = phi %"struct.WTF::KeyValuePair.588"* [ %106, %99 ], [ %102, %107 ], [ %110, %109 ], [ %106, %113 ]
  %118 = icmp eq %"struct.WTF::KeyValuePair.588"* %117, %79
  br i1 %118, label %320, label %202

119:                                              ; preds = %92, %199
  %120 = phi i32 [ %201, %199 ], [ %77, %92 ]
  %121 = phi %"struct.WTF::KeyValuePair.588"* [ %200, %199 ], [ %75, %92 ]
  %122 = phi %"struct.WTF::KeyValuePair.588"* [ %191, %199 ], [ %93, %92 ]
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %122, i64 0, i32 0
  %124 = icmp eq %"struct.WTF::KeyValuePair.588"* %121, null
  br i1 %124, label %174, label %125

125:                                              ; preds = %119
  %126 = add i32 %120, -1
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %122, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = lshr i32 %131, 8
  %133 = and i32 %132, %126
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %121, i64 %134
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %174, label %139

139:                                              ; preds = %125
  %140 = xor i32 %132, -1
  %141 = lshr i32 %131, 31
  %142 = add nsw i32 %141, %140
  %143 = shl i32 %142, 12
  %144 = xor i32 %143, %142
  %145 = lshr i32 %144, 7
  %146 = xor i32 %145, %144
  %147 = shl i32 %146, 2
  %148 = xor i32 %147, %146
  %149 = lshr i32 %148, 20
  %150 = xor i32 %149, %148
  %151 = or i32 %150, 1
  %152 = zext i32 %151 to i64
  br label %153

153:                                              ; preds = %163, %139
  %154 = phi %"struct.WTF::KeyValuePair.588"* [ %135, %139 ], [ %168, %163 ]
  %155 = phi i64 [ %134, %139 ], [ %167, %163 ]
  %156 = phi i64 [ 0, %139 ], [ %165, %163 ]
  %157 = bitcast %"struct.WTF::KeyValuePair.588"* %154 to i8**
  %158 = load i8*, i8** %157, align 8
  %159 = icmp ne i8* %158, inttoptr (i64 -1 to i8*)
  %160 = bitcast i8* %158 to %"class.WTF::StringImpl"*
  %161 = icmp eq %"class.WTF::StringImpl"* %129, %160
  %162 = and i1 %159, %161
  br i1 %162, label %172, label %163

163:                                              ; preds = %153
  %164 = icmp eq i64 %156, 0
  %165 = select i1 %164, i64 %152, i64 %156
  %166 = add i64 %165, %155
  %167 = and i64 %166, %127
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %121, i64 %167
  %169 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %168, i64 0, i32 0, i32 0, i32 0, i32 0
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %174, label %153

172:                                              ; preds = %153
  %173 = icmp eq %"struct.WTF::KeyValuePair.588"* %154, null
  br i1 %173, label %174, label %177

174:                                              ; preds = %163, %172, %125, %119
  %175 = zext i32 %120 to i64
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %121, i64 %175
  br label %177

177:                                              ; preds = %172, %174
  %178 = phi %"struct.WTF::KeyValuePair.588"* [ %176, %174 ], [ %154, %172 ]
  %179 = icmp eq %"struct.WTF::KeyValuePair.588"* %178, %79
  br i1 %179, label %185, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %178, i64 0, i32 1
  %182 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %122, i64 0, i32 1
  %183 = tail call zeroext i1 @_ZN5blinkeqERKNS_17CounterDirectivesES2_(%"class.blink::CounterDirectives"* dereferenceable(24) %181, %"class.blink::CounterDirectives"* dereferenceable(24) %182) #10
  br i1 %183, label %187, label %184

184:                                              ; preds = %180
  tail call void @_ZN5blink13LayoutCounter18DestroyCounterNodeERNS_12LayoutObjectERKN3WTF12AtomicStringE(%"class.blink::LayoutObject"* dereferenceable(88) %0, %"class.WTF::AtomicString"* dereferenceable(8) %123)
  br label %185

185:                                              ; preds = %177, %184
  %186 = tail call fastcc %"class.blink::CounterNode"* @_ZN5blink12_GLOBAL__N_123MakeCounterNodeIfNeededERNS_12LayoutObjectERKN3WTF12AtomicStringEb(%"class.blink::LayoutObject"* dereferenceable(88) %0, %"class.WTF::AtomicString"* dereferenceable(8) %123, i1 zeroext false)
  br label %187

187:                                              ; preds = %180, %185
  %188 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %122, i64 1
  %189 = icmp eq %"struct.WTF::KeyValuePair.588"* %188, %73
  br i1 %189, label %95, label %190

190:                                              ; preds = %187, %194
  %191 = phi %"struct.WTF::KeyValuePair.588"* [ %195, %194 ], [ %188, %187 ]
  %192 = bitcast %"struct.WTF::KeyValuePair.588"* %191 to i64*
  %193 = load i64, i64* %192, align 8
  switch i64 %193, label %197 [
    i64 -1, label %194
    i64 0, label %194
  ]

194:                                              ; preds = %190, %190
  %195 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %191, i64 1
  %196 = icmp eq %"struct.WTF::KeyValuePair.588"* %195, %73
  br i1 %196, label %95, label %190

197:                                              ; preds = %190
  %198 = icmp eq %"struct.WTF::KeyValuePair.588"* %191, %73
  br i1 %198, label %95, label %199

199:                                              ; preds = %197
  %200 = load %"struct.WTF::KeyValuePair.588"*, %"struct.WTF::KeyValuePair.588"** %74, align 8
  %201 = load i32, i32* %76, align 8
  br label %119

202:                                              ; preds = %116, %268
  %203 = phi %"struct.WTF::KeyValuePair.588"* [ %269, %268 ], [ %117, %116 ]
  %204 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %203, i64 0, i32 0
  %205 = load %"struct.WTF::KeyValuePair.588"*, %"struct.WTF::KeyValuePair.588"** %68, align 8
  %206 = icmp eq %"struct.WTF::KeyValuePair.588"* %205, null
  br i1 %206, label %257, label %207

207:                                              ; preds = %202
  %208 = load i32, i32* %70, align 8
  %209 = add i32 %208, -1
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %203, i64 0, i32 0, i32 0, i32 0, i32 0
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = lshr i32 %214, 8
  %216 = and i32 %215, %209
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %205, i64 %217
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %218, i64 0, i32 0, i32 0, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %257, label %222

222:                                              ; preds = %207
  %223 = xor i32 %215, -1
  %224 = lshr i32 %214, 31
  %225 = add nsw i32 %224, %223
  %226 = shl i32 %225, 12
  %227 = xor i32 %226, %225
  %228 = lshr i32 %227, 7
  %229 = xor i32 %228, %227
  %230 = shl i32 %229, 2
  %231 = xor i32 %230, %229
  %232 = lshr i32 %231, 20
  %233 = xor i32 %232, %231
  %234 = or i32 %233, 1
  %235 = zext i32 %234 to i64
  br label %236

236:                                              ; preds = %246, %222
  %237 = phi %"struct.WTF::KeyValuePair.588"* [ %218, %222 ], [ %251, %246 ]
  %238 = phi i64 [ %217, %222 ], [ %250, %246 ]
  %239 = phi i64 [ 0, %222 ], [ %248, %246 ]
  %240 = bitcast %"struct.WTF::KeyValuePair.588"* %237 to i8**
  %241 = load i8*, i8** %240, align 8
  %242 = icmp ne i8* %241, inttoptr (i64 -1 to i8*)
  %243 = bitcast i8* %241 to %"class.WTF::StringImpl"*
  %244 = icmp eq %"class.WTF::StringImpl"* %212, %243
  %245 = and i1 %242, %244
  br i1 %245, label %255, label %246

246:                                              ; preds = %236
  %247 = icmp eq i64 %239, 0
  %248 = select i1 %247, i64 %235, i64 %239
  %249 = add i64 %248, %238
  %250 = and i64 %249, %210
  %251 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %205, i64 %250
  %252 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %251, i64 0, i32 0, i32 0, i32 0, i32 0
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %253, null
  br i1 %254, label %257, label %236

255:                                              ; preds = %236
  %256 = icmp eq %"struct.WTF::KeyValuePair.588"* %237, null
  br i1 %256, label %257, label %258

257:                                              ; preds = %246, %255, %207, %202
  tail call void @_ZN5blink13LayoutCounter18DestroyCounterNodeERNS_12LayoutObjectERKN3WTF12AtomicStringE(%"class.blink::LayoutObject"* dereferenceable(88) %0, %"class.WTF::AtomicString"* dereferenceable(8) %204)
  br label %258

258:                                              ; preds = %255, %257
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %203, i64 1
  %260 = icmp eq %"struct.WTF::KeyValuePair.588"* %259, %106
  br i1 %260, label %268, label %261

261:                                              ; preds = %258, %265
  %262 = phi %"struct.WTF::KeyValuePair.588"* [ %266, %265 ], [ %259, %258 ]
  %263 = bitcast %"struct.WTF::KeyValuePair.588"* %262 to i64*
  %264 = load i64, i64* %263, align 8
  switch i64 %264, label %268 [
    i64 -1, label %265
    i64 0, label %265
  ]

265:                                              ; preds = %261, %261
  %266 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %262, i64 1
  %267 = icmp eq %"struct.WTF::KeyValuePair.588"* %266, %106
  br i1 %267, label %268, label %261

268:                                              ; preds = %261, %265, %258
  %269 = phi %"struct.WTF::KeyValuePair.588"* [ %106, %258 ], [ %106, %265 ], [ %262, %261 ]
  %270 = icmp eq %"struct.WTF::KeyValuePair.588"* %269, %79
  br i1 %270, label %320, label %202

271:                                              ; preds = %66
  %272 = load i96, i96* %17, align 4
  %273 = and i96 %272, 137438953472
  %274 = icmp eq i96 %273, 0
  br i1 %274, label %320, label %275

275:                                              ; preds = %271
  tail call void @_ZN5blink13LayoutCounter19DestroyCounterNodesERNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %0)
  br label %320

276:                                              ; preds = %61
  br i1 %65, label %277, label %320

277:                                              ; preds = %58, %276
  %278 = phi %"class.blink::CounterDirectiveMap"* [ %59, %58 ], [ %63, %276 ]
  %279 = load i96, i96* %17, align 4
  %280 = and i96 %279, 137438953472
  %281 = icmp eq i96 %280, 0
  br i1 %281, label %283, label %282

282:                                              ; preds = %277
  tail call void @_ZN5blink13LayoutCounter19DestroyCounterNodesERNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %0)
  br label %283

283:                                              ; preds = %277, %282
  %284 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %278, i64 0, i32 0, i32 0, i32 0
  %285 = load %"struct.WTF::KeyValuePair.588"*, %"struct.WTF::KeyValuePair.588"** %284, align 8
  %286 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %278, i64 0, i32 0, i32 0, i32 1
  %287 = load i32, i32* %286, align 8
  %288 = zext i32 %287 to i64
  %289 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %285, i64 %288
  %290 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %278, i64 0, i32 0, i32 0, i32 2
  %291 = load i32, i32* %290, align 4
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %320, label %293

293:                                              ; preds = %283
  %294 = icmp eq i32 %287, 0
  br i1 %294, label %302, label %295

295:                                              ; preds = %293, %299
  %296 = phi %"struct.WTF::KeyValuePair.588"* [ %300, %299 ], [ %285, %293 ]
  %297 = bitcast %"struct.WTF::KeyValuePair.588"* %296 to i64*
  %298 = load i64, i64* %297, align 8
  switch i64 %298, label %302 [
    i64 -1, label %299
    i64 0, label %299
  ]

299:                                              ; preds = %295, %295
  %300 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %296, i64 1
  %301 = icmp eq %"struct.WTF::KeyValuePair.588"* %300, %289
  br i1 %301, label %320, label %295

302:                                              ; preds = %295, %293
  %303 = phi %"struct.WTF::KeyValuePair.588"* [ %285, %293 ], [ %296, %295 ]
  %304 = icmp eq %"struct.WTF::KeyValuePair.588"* %303, %289
  br i1 %304, label %320, label %305

305:                                              ; preds = %302, %318
  %306 = phi %"struct.WTF::KeyValuePair.588"* [ %312, %318 ], [ %303, %302 ]
  %307 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %306, i64 0, i32 0
  %308 = tail call fastcc %"class.blink::CounterNode"* @_ZN5blink12_GLOBAL__N_123MakeCounterNodeIfNeededERNS_12LayoutObjectERKN3WTF12AtomicStringEb(%"class.blink::LayoutObject"* dereferenceable(88) %0, %"class.WTF::AtomicString"* dereferenceable(8) %307, i1 zeroext false)
  %309 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %306, i64 1
  %310 = icmp eq %"struct.WTF::KeyValuePair.588"* %309, %289
  br i1 %310, label %320, label %311

311:                                              ; preds = %305, %315
  %312 = phi %"struct.WTF::KeyValuePair.588"* [ %316, %315 ], [ %309, %305 ]
  %313 = bitcast %"struct.WTF::KeyValuePair.588"* %312 to i64*
  %314 = load i64, i64* %313, align 8
  switch i64 %314, label %318 [
    i64 -1, label %315
    i64 0, label %315
  ]

315:                                              ; preds = %311, %311
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.588", %"struct.WTF::KeyValuePair.588"* %312, i64 1
  %317 = icmp eq %"struct.WTF::KeyValuePair.588"* %316, %289
  br i1 %317, label %320, label %311

318:                                              ; preds = %311
  %319 = icmp eq %"struct.WTF::KeyValuePair.588"* %312, %289
  br i1 %319, label %320, label %305

320:                                              ; preds = %268, %299, %305, %318, %315, %283, %15, %41, %116, %302, %58, %271, %51, %275, %276, %48
  ret void
}

declare void @_ZN5blink15ListItemOrdinal23ItemCounterStyleUpdatedERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare %"class.blink::CounterDirectiveMap"* @_ZNK5blink13ComputedStyle20GetCounterDirectivesEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blinkeqERKNS_17CounterDirectivesES2_(%"class.blink::CounterDirectives"* dereferenceable(24), %"class.blink::CounterDirectives"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::HashMap.2013"* @_ZN5blink13LayoutCounter13GetCounterMapEPNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutObject"*, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 137438953472
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %1
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !4

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps) #10
  br label %15

15:                                               ; preds = %8, %11, %14
  %16 = bitcast %"class.blink::LayoutObject"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %2, align 8
  %17 = call %"class.WTF::HashMap.2013"* @_ZNK3WTF7HashMapIPKN5blink12LayoutObjectENSt3__110unique_ptrINS0_INS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS7_EENSC_ISA_EENS_18PartitionAllocatorEEENS5_14default_deleteISG_EEEENS_7PtrHashIS3_EENSC_IS4_EENSC_ISJ_EESF_E2atERKS4_(%"class.WTF::HashMap.2005"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_114GetCounterMapsEvE21s_static_counter_maps to %"class.WTF::HashMap.2005"*), %"class.blink::LayoutObject"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %18

18:                                               ; preds = %1, %15
  %19 = phi %"class.WTF::HashMap.2013"* [ %17, %15 ], [ null, %1 ]
  ret %"class.WTF::HashMap.2013"* %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv(%"class.blink::DisplayItemClient"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, i8*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv(%"class.blink::ImageResourceObserver"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink13LayoutCounter7GetNameEv(%"class.blink::LayoutCounter"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink12LayoutObject15VirtualChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutObjectChildList"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink12LayoutObject15VirtualChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutObjectChildList"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #10
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #10
  ret void
}

declare void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsBoxModelObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsLayoutBlockEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink12LayoutObject19VirtualContinuationEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutBoxModelObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink12LayoutObject18SpannerPlaceholderEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13HoverAncestorEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  ret %"class.blink::LayoutObject"* %3
}

declare void @_ZN5blink10LayoutText37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink10LayoutText18HasInlineFragmentsEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10LayoutText28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutText"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9
  %9 = bitcast %union.anon.1998* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink10LayoutText33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare void @_ZN5blink10LayoutText31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutText"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink10LayoutText5PaintERKNS_9PaintInfoE(%"class.blink::LayoutText"*, %"struct.blink::PaintInfo"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i16 @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject20RecalcVisualOverflowEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10LayoutText12UpdateLayoutEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1387"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink10LayoutText11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutText"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink10LayoutText16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutText"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare void @_ZNK5blink10LayoutText13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutText"*, %"class.WTF::Vector.2027"*, i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink10LayoutText36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10LayoutText6lengthEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  ret i32 %9
}

declare { i64, i64 } @_ZNK5blink10LayoutText24LocalSelectionVisualRectEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink10LayoutText14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutText"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink12LayoutObject18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.2034"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink10LayoutText15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutText"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #1

declare void @_ZNK5blink10LayoutText28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutText"*, i8 zeroext) unnamed_addr #1

declare %"class.blink::DisplayItemClient"* @_ZNK5blink10LayoutText29GetSelectionDisplayItemClientEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink10LayoutText9DebugRectEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13LayoutCounter8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE(%"class.blink::LayoutCounter"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 3
  ret i1 %3
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10LayoutText15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutText"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink10LayoutText14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutText"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10LayoutText43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutText"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink12LayoutObject16InsertedIntoTreeEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject21WillBeRemovedFromTreeEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject15ClearPaintFlagsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink10LayoutText33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10LayoutText26CanBeSelectionLeafInternalEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare i64 @_ZNK5blink12LayoutObject27OffsetFromContainerInternalEPKS0_b(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

declare i32 @_ZNK5blink12LayoutObject26FlipForWritingModeInternalENS_10LayoutUnitES1_PKNS_9LayoutBoxE(%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink10LayoutText11IsWordBreakEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10LayoutText15TextStartOffsetEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutText"* @_ZNK5blink10LayoutText18GetFirstLetterPartEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutText"* null
}

declare float @_ZNK5blink10LayoutText5WidthEjjRKNS_4FontENS_10LayoutUnitENS_13TextDirectionEPN3WTF7HashSetIPKNS_14SimpleFontDataENS6_7PtrHashIS9_EENS6_10HashTraitsISA_EENS6_18PartitionAllocatorEEEPNS_9FloatRectEf(%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"* dereferenceable(88), i32, i8 zeroext, %"class.WTF::HashSet.2035"*, %"class.blink::FloatRect"*, float) unnamed_addr #1

declare float @_ZNK5blink10LayoutText5WidthEjjNS_10LayoutUnitENS_13TextDirectionEbPN3WTF7HashSetIPKNS_14SimpleFontDataENS3_7PtrHashIS6_EENS3_10HashTraitsIS7_EENS3_18PartitionAllocatorEEEPNS_9FloatRectEf(%"class.blink::LayoutText"*, i32, i32, i32, i8 zeroext, i1 zeroext, %"class.WTF::HashSet.2035"*, %"class.blink::FloatRect"*, float) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink10LayoutText24PhysicalLinesBoundingBoxEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare void @_ZN5blink10LayoutText13TransformTextEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare void @_ZNK5blink10LayoutText22PositionForCaretOffsetEj(%"class.blink::PositionTemplate"* sret, %"class.blink::LayoutText"*, i32) unnamed_addr #1

declare i64 @_ZNK5blink10LayoutText22CaretOffsetForPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZNK5blink10LayoutText14CaretMinOffsetEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare i32 @_ZNK5blink10LayoutText14CaretMaxOffsetEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare zeroext i16 @_ZNK5blink10LayoutText17PreviousCharacterEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::span"* @_ZNK5blink10LayoutText16GetNGInlineItemsEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret %"class.base::span"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::span"* @_ZN5blink10LayoutText16GetNGInlineItemsEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret %"class.base::span"* null
}

declare void @_ZN5blink10LayoutText13TextDidChangeEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare %"class.blink::InlineTextBox"* @_ZN5blink10LayoutText13CreateTextBoxEit(%"class.blink::LayoutText"*, i32, i16 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare %"class.blink::CounterNode"* @_ZN5blink11CounterNode6CreateERNS_12LayoutObjectEji(%"class.blink::LayoutObject"* dereferenceable(88), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_119FindPlaceForCounterERNS_12LayoutObjectERKN3WTF12AtomicStringEbR13scoped_refptrINS_11CounterNodeEESA_(%"class.blink::LayoutObject"* nocapture readonly dereferenceable(88), %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, %class.scoped_refptr.2018* nocapture dereferenceable(8), %class.scoped_refptr.2018* nocapture dereferenceable(8)) unnamed_addr #0 {
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %12 = bitcast %"class.blink::Node"** %11 to %"class.blink::Element"**
  %13 = load %"class.blink::Element"*, %"class.blink::Element"** %12, align 8
  %14 = select i1 %10, %"class.blink::Element"* %13, %"class.blink::Element"* null
  %15 = tail call fastcc %"class.blink::Element"* @_ZN5blink12_GLOBAL__N_144PreviousSiblingOrParentRespectingContainmentERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %14)
  %16 = tail call fastcc %"class.blink::Element"* @_ZN5blink12_GLOBAL__N_139PreviousInPreOrderRespectingContainmentERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %14)
  %17 = bitcast %class.scoped_refptr.2018* %4 to i64*
  %18 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %4, i64 0, i32 0
  %19 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %18, align 8
  store i64 0, i64* %17, align 8
  %20 = icmp eq %"class.blink::CounterNode"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #10
  %23 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %19) #10
  %27 = bitcast %"class.blink::CounterNode"* %19 to i8*
  tail call void @free(i8* %27) #10
  br label %28

28:                                               ; preds = %5, %21, %26
  %29 = icmp eq %"class.blink::Element"* %16, null
  br i1 %29, label %452, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %14, i64 0, i32 0, i32 0
  br label %32

32:                                               ; preds = %30, %429
  %33 = phi %"class.blink::Element"* [ %16, %30 ], [ %432, %429 ]
  %34 = phi %"class.blink::Element"* [ %15, %30 ], [ %431, %429 ]
  %35 = phi i64 [ 0, %30 ], [ %430, %429 ]
  %36 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %33, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %33, i64 0, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %33, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %40, label %46, label %42

42:                                               ; preds = %32
  %43 = bitcast %"class.blink::NodeData"** %41 to %"class.blink::NodeRareData"**
  %44 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %44, i64 0, i32 1, i32 0, i32 0
  br label %48

46:                                               ; preds = %32
  %47 = bitcast %"class.blink::NodeData"** %41 to %"class.blink::NodeRenderingData"**
  br label %48

48:                                               ; preds = %42, %46
  %49 = phi %"class.blink::NodeRenderingData"** [ %45, %42 ], [ %47, %46 ]
  %50 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %50, i64 0, i32 1
  %52 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %51, align 8
  %53 = icmp eq %"class.blink::LayoutObject"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %48
  %55 = tail call fastcc %"class.blink::CounterNode"* @_ZN5blink12_GLOBAL__N_123MakeCounterNodeIfNeededERNS_12LayoutObjectERKN3WTF12AtomicStringEb(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %52, %"class.WTF::AtomicString"* dereferenceable(8) %1, i1 zeroext false)
  br label %56

56:                                               ; preds = %48, %54
  %57 = phi %"class.blink::CounterNode"* [ %55, %54 ], [ null, %48 ]
  %58 = icmp eq %"class.blink::Element"* %34, %33
  %59 = icmp ne %"class.blink::CounterNode"* %57, null
  br i1 %58, label %60, label %384

60:                                               ; preds = %56
  br i1 %59, label %61, label %381

61:                                               ; preds = %60
  %62 = icmp eq i64 %35, 0
  %63 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 6
  %69 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %68, align 8
  %70 = icmp eq %"class.blink::CounterNode"* %69, null
  br label %71

71:                                               ; preds = %61, %67
  %72 = phi i1 [ true, %61 ], [ %70, %67 ]
  br i1 %62, label %238, label %73

73:                                               ; preds = %71
  br i1 %72, label %74, label %178

74:                                               ; preds = %73
  %75 = inttoptr i64 %35 to %"class.blink::CounterNode"*
  br i1 %2, label %76, label %141

76:                                               ; preds = %74
  %77 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %36) #10
  %78 = icmp eq %"class.blink::ContainerNode"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %77, i64 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, 12
  %83 = icmp eq i32 %82, 0
  %84 = bitcast %"class.blink::ContainerNode"* %77 to %"class.blink::Element"*
  %85 = select i1 %83, %"class.blink::Element"* %84, %"class.blink::Element"* null
  br label %86

86:                                               ; preds = %79, %76
  %87 = phi %"class.blink::Element"* [ %85, %79 ], [ null, %76 ]
  %88 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %31) #10
  %89 = icmp eq %"class.blink::ContainerNode"* %88, null
  br i1 %89, label %97, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %88, i64 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = and i32 %92, 12
  %94 = icmp eq i32 %93, 0
  %95 = bitcast %"class.blink::ContainerNode"* %88 to %"class.blink::Element"*
  %96 = select i1 %94, %"class.blink::Element"* %95, %"class.blink::Element"* null
  br label %97

97:                                               ; preds = %86, %90
  %98 = phi %"class.blink::Element"* [ %96, %90 ], [ null, %86 ]
  %99 = icmp eq %"class.blink::Element"* %87, %98
  br i1 %99, label %100, label %141

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 6
  %102 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %101, align 8
  %103 = icmp eq %"class.blink::CounterNode"* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %102, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %105) #10
  br label %106

106:                                              ; preds = %104, %100
  %107 = ptrtoint %"class.blink::CounterNode"* %102 to i64
  %108 = bitcast %class.scoped_refptr.2018* %3 to i64*
  %109 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %3, i64 0, i32 0
  %110 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %109, align 8
  store i64 %107, i64* %108, align 8
  %111 = icmp eq %"class.blink::CounterNode"* %110, null
  br i1 %111, label %121, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %110, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %113) #10
  %114 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %110, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %112
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %110) #10
  %118 = bitcast %"class.blink::CounterNode"* %110 to i8*
  tail call void @free(i8* %118) #10
  br label %119

119:                                              ; preds = %117, %112
  %120 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %109, align 8
  br label %121

121:                                              ; preds = %119, %106
  %122 = phi %"class.blink::CounterNode"* [ %120, %119 ], [ %102, %106 ]
  %123 = icmp eq %"class.blink::CounterNode"* %122, null
  %124 = select i1 %123, %"class.blink::CounterNode"* null, %"class.blink::CounterNode"* %57
  br i1 %123, label %127, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %124, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %126) #10
  br label %127

127:                                              ; preds = %125, %121
  %128 = ptrtoint %"class.blink::CounterNode"* %124 to i64
  %129 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %18, align 8
  store i64 %128, i64* %17, align 8
  %130 = icmp eq %"class.blink::CounterNode"* %129, null
  br i1 %130, label %138, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %129, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %132) #10
  %133 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %129, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %131
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %129) #10
  %137 = bitcast %"class.blink::CounterNode"* %129 to i8*
  tail call void @free(i8* %137) #10
  br label %138

138:                                              ; preds = %127, %131, %136
  %139 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %109, align 8
  %140 = icmp ne %"class.blink::CounterNode"* %139, null
  br label %442

141:                                              ; preds = %97, %74
  %142 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %142) #10
  %143 = ptrtoint %"class.blink::CounterNode"* %57 to i64
  %144 = bitcast %class.scoped_refptr.2018* %3 to i64*
  %145 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %3, i64 0, i32 0
  %146 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %145, align 8
  store i64 %143, i64* %144, align 8
  %147 = icmp eq %"class.blink::CounterNode"* %146, null
  br i1 %147, label %155, label %148

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #10
  %150 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %146) #10
  %154 = bitcast %"class.blink::CounterNode"* %146 to i8*
  tail call void @free(i8* %154) #10
  br label %155

155:                                              ; preds = %141, %148, %153
  %156 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %75, i64 0, i32 6
  %157 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %156, align 8
  %158 = icmp eq %"class.blink::CounterNode"* %157, %57
  %159 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %75, i64 0, i32 0, i32 0, i32 0
  br i1 %158, label %166, label %160

160:                                              ; preds = %155
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %159) #10
  %161 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %160
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %75) #10
  %165 = inttoptr i64 %35 to i8*
  tail call void @free(i8* %165) #10
  br label %167

166:                                              ; preds = %155
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %159) #10
  br label %167

167:                                              ; preds = %164, %160, %166
  %168 = phi i64 [ %35, %166 ], [ 0, %160 ], [ 0, %164 ]
  %169 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %18, align 8
  store i64 %168, i64* %17, align 8
  %170 = icmp eq %"class.blink::CounterNode"* %169, null
  br i1 %170, label %438, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %169, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %172) #10
  %173 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %169, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %438

176:                                              ; preds = %171
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %169) #10
  %177 = bitcast %"class.blink::CounterNode"* %169 to i8*
  tail call void @free(i8* %177) #10
  br label %438

178:                                              ; preds = %73
  br i1 %2, label %179, label %203

179:                                              ; preds = %178
  %180 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %36) #10
  %181 = icmp eq %"class.blink::ContainerNode"* %180, null
  br i1 %181, label %189, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %180, i64 0, i32 0, i32 1
  %184 = load i32, i32* %183, align 8
  %185 = and i32 %184, 12
  %186 = icmp eq i32 %185, 0
  %187 = bitcast %"class.blink::ContainerNode"* %180 to %"class.blink::Element"*
  %188 = select i1 %186, %"class.blink::Element"* %187, %"class.blink::Element"* null
  br label %189

189:                                              ; preds = %182, %179
  %190 = phi %"class.blink::Element"* [ %188, %182 ], [ null, %179 ]
  %191 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %31) #10
  %192 = icmp eq %"class.blink::ContainerNode"* %191, null
  br i1 %192, label %200, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %191, i64 0, i32 0, i32 1
  %195 = load i32, i32* %194, align 8
  %196 = and i32 %195, 12
  %197 = icmp eq i32 %196, 0
  %198 = bitcast %"class.blink::ContainerNode"* %191 to %"class.blink::Element"*
  %199 = select i1 %197, %"class.blink::Element"* %198, %"class.blink::Element"* null
  br label %200

200:                                              ; preds = %189, %193
  %201 = phi %"class.blink::Element"* [ %199, %193 ], [ null, %189 ]
  %202 = icmp eq %"class.blink::Element"* %190, %201
  br i1 %202, label %381, label %203

203:                                              ; preds = %200, %178
  %204 = inttoptr i64 %35 to %"class.blink::CounterNode"*
  %205 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 6
  %206 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %205, align 8
  %207 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %204, i64 0, i32 6
  %208 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %207, align 8
  %209 = icmp eq %"class.blink::CounterNode"* %206, %208
  br i1 %209, label %210, label %442

210:                                              ; preds = %203
  %211 = icmp eq %"class.blink::CounterNode"* %206, null
  br i1 %211, label %214, label %212

212:                                              ; preds = %210
  %213 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %206, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %213) #10
  br label %214

214:                                              ; preds = %212, %210
  %215 = ptrtoint %"class.blink::CounterNode"* %206 to i64
  %216 = bitcast %class.scoped_refptr.2018* %3 to i64*
  %217 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %3, i64 0, i32 0
  %218 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %217, align 8
  store i64 %215, i64* %216, align 8
  %219 = icmp eq %"class.blink::CounterNode"* %218, null
  br i1 %219, label %227, label %220

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %218, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #10
  %222 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %218, i64 0, i32 0, i32 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %220
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %218) #10
  %226 = bitcast %"class.blink::CounterNode"* %218 to i8*
  tail call void @free(i8* %226) #10
  br label %227

227:                                              ; preds = %214, %220, %225
  %228 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %204, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %228) #10
  %229 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %18, align 8
  store i64 %35, i64* %17, align 8
  %230 = icmp eq %"class.blink::CounterNode"* %229, null
  br i1 %230, label %442, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %229, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %232) #10
  %233 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %229, i64 0, i32 0, i32 0, i32 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %442

236:                                              ; preds = %231
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %229) #10
  %237 = bitcast %"class.blink::CounterNode"* %229 to i8*
  tail call void @free(i8* %237) #10
  br label %442

238:                                              ; preds = %71
  br i1 %72, label %239, label %322

239:                                              ; preds = %238
  br i1 %2, label %240, label %298

240:                                              ; preds = %239
  %241 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %36) #10
  %242 = icmp eq %"class.blink::ContainerNode"* %241, null
  br i1 %242, label %250, label %243

243:                                              ; preds = %240
  %244 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %241, i64 0, i32 0, i32 1
  %245 = load i32, i32* %244, align 8
  %246 = and i32 %245, 12
  %247 = icmp eq i32 %246, 0
  %248 = bitcast %"class.blink::ContainerNode"* %241 to %"class.blink::Element"*
  %249 = select i1 %247, %"class.blink::Element"* %248, %"class.blink::Element"* null
  br label %250

250:                                              ; preds = %243, %240
  %251 = phi %"class.blink::Element"* [ %249, %243 ], [ null, %240 ]
  %252 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %31) #10
  %253 = icmp eq %"class.blink::ContainerNode"* %252, null
  br i1 %253, label %261, label %254

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %252, i64 0, i32 0, i32 1
  %256 = load i32, i32* %255, align 8
  %257 = and i32 %256, 12
  %258 = icmp eq i32 %257, 0
  %259 = bitcast %"class.blink::ContainerNode"* %252 to %"class.blink::Element"*
  %260 = select i1 %258, %"class.blink::Element"* %259, %"class.blink::Element"* null
  br label %261

261:                                              ; preds = %250, %254
  %262 = phi %"class.blink::Element"* [ %260, %254 ], [ null, %250 ]
  %263 = icmp eq %"class.blink::Element"* %251, %262
  br i1 %263, label %264, label %298

264:                                              ; preds = %261
  %265 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 6
  %266 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %265, align 8
  %267 = icmp eq %"class.blink::CounterNode"* %266, null
  br i1 %267, label %270, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %269) #10
  br label %270

270:                                              ; preds = %268, %264
  %271 = ptrtoint %"class.blink::CounterNode"* %266 to i64
  %272 = bitcast %class.scoped_refptr.2018* %3 to i64*
  %273 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %3, i64 0, i32 0
  %274 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %273, align 8
  store i64 %271, i64* %272, align 8
  %275 = icmp eq %"class.blink::CounterNode"* %274, null
  br i1 %275, label %283, label %276

276:                                              ; preds = %270
  %277 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %274, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %277) #10
  %278 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %274, i64 0, i32 0, i32 0, i32 0, i32 0
  %279 = load i32, i32* %278, align 4
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %283

281:                                              ; preds = %276
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %274) #10
  %282 = bitcast %"class.blink::CounterNode"* %274 to i8*
  tail call void @free(i8* %282) #10
  br label %283

283:                                              ; preds = %270, %276, %281
  %284 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %284) #10
  %285 = ptrtoint %"class.blink::CounterNode"* %57 to i64
  %286 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %18, align 8
  store i64 %285, i64* %17, align 8
  %287 = icmp eq %"class.blink::CounterNode"* %286, null
  br i1 %287, label %295, label %288

288:                                              ; preds = %283
  %289 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %286, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %289) #10
  %290 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %286, i64 0, i32 0, i32 0, i32 0, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %295

293:                                              ; preds = %288
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %286) #10
  %294 = bitcast %"class.blink::CounterNode"* %286 to i8*
  tail call void @free(i8* %294) #10
  br label %295

295:                                              ; preds = %283, %288, %293
  %296 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %273, align 8
  %297 = icmp ne %"class.blink::CounterNode"* %296, null
  br label %452

298:                                              ; preds = %261, %239
  %299 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %299) #10
  %300 = ptrtoint %"class.blink::CounterNode"* %57 to i64
  %301 = bitcast %class.scoped_refptr.2018* %3 to i64*
  %302 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %3, i64 0, i32 0
  %303 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %302, align 8
  store i64 %300, i64* %301, align 8
  %304 = icmp eq %"class.blink::CounterNode"* %303, null
  br i1 %304, label %312, label %305

305:                                              ; preds = %298
  %306 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %303, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %306) #10
  %307 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %303, i64 0, i32 0, i32 0, i32 0, i32 0
  %308 = load i32, i32* %307, align 4
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %312

310:                                              ; preds = %305
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %303) #10
  %311 = bitcast %"class.blink::CounterNode"* %303 to i8*
  tail call void @free(i8* %311) #10
  br label %312

312:                                              ; preds = %310, %305, %298
  %313 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %18, align 8
  store i64 0, i64* %17, align 8
  %314 = icmp eq %"class.blink::CounterNode"* %313, null
  br i1 %314, label %452, label %315

315:                                              ; preds = %312
  %316 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %313, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %316) #10
  %317 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %313, i64 0, i32 0, i32 0, i32 0, i32 0
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %452

320:                                              ; preds = %315
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %313) #10
  %321 = bitcast %"class.blink::CounterNode"* %313 to i8*
  tail call void @free(i8* %321) #10
  br label %452

322:                                              ; preds = %238
  br i1 %2, label %323, label %347

323:                                              ; preds = %322
  %324 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %36) #10
  %325 = icmp eq %"class.blink::ContainerNode"* %324, null
  br i1 %325, label %333, label %326

326:                                              ; preds = %323
  %327 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %324, i64 0, i32 0, i32 1
  %328 = load i32, i32* %327, align 8
  %329 = and i32 %328, 12
  %330 = icmp eq i32 %329, 0
  %331 = bitcast %"class.blink::ContainerNode"* %324 to %"class.blink::Element"*
  %332 = select i1 %330, %"class.blink::Element"* %331, %"class.blink::Element"* null
  br label %333

333:                                              ; preds = %326, %323
  %334 = phi %"class.blink::Element"* [ %332, %326 ], [ null, %323 ]
  %335 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %31) #10
  %336 = icmp eq %"class.blink::ContainerNode"* %335, null
  br i1 %336, label %344, label %337

337:                                              ; preds = %333
  %338 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %335, i64 0, i32 0, i32 1
  %339 = load i32, i32* %338, align 8
  %340 = and i32 %339, 12
  %341 = icmp eq i32 %340, 0
  %342 = bitcast %"class.blink::ContainerNode"* %335 to %"class.blink::Element"*
  %343 = select i1 %341, %"class.blink::Element"* %342, %"class.blink::Element"* null
  br label %344

344:                                              ; preds = %333, %337
  %345 = phi %"class.blink::Element"* [ %343, %337 ], [ null, %333 ]
  %346 = icmp eq %"class.blink::Element"* %334, %345
  br i1 %346, label %378, label %347

347:                                              ; preds = %344, %322
  %348 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 6
  %349 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %348, align 8
  %350 = icmp eq %"class.blink::CounterNode"* %349, null
  br i1 %350, label %353, label %351

351:                                              ; preds = %347
  %352 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %349, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %352) #10
  br label %353

353:                                              ; preds = %351, %347
  %354 = ptrtoint %"class.blink::CounterNode"* %349 to i64
  %355 = bitcast %class.scoped_refptr.2018* %3 to i64*
  %356 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %3, i64 0, i32 0
  %357 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %356, align 8
  store i64 %354, i64* %355, align 8
  %358 = icmp eq %"class.blink::CounterNode"* %357, null
  br i1 %358, label %366, label %359

359:                                              ; preds = %353
  %360 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %357, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %360) #10
  %361 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %357, i64 0, i32 0, i32 0, i32 0, i32 0
  %362 = load i32, i32* %361, align 4
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %366

364:                                              ; preds = %359
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %357) #10
  %365 = bitcast %"class.blink::CounterNode"* %357 to i8*
  tail call void @free(i8* %365) #10
  br label %366

366:                                              ; preds = %353, %359, %364
  %367 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %367) #10
  %368 = ptrtoint %"class.blink::CounterNode"* %57 to i64
  %369 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %18, align 8
  store i64 %368, i64* %17, align 8
  %370 = icmp eq %"class.blink::CounterNode"* %369, null
  br i1 %370, label %452, label %371

371:                                              ; preds = %366
  %372 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %369, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %372) #10
  %373 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %369, i64 0, i32 0, i32 0, i32 0, i32 0
  %374 = load i32, i32* %373, align 4
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %452

376:                                              ; preds = %371
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %369) #10
  %377 = bitcast %"class.blink::CounterNode"* %369 to i8*
  tail call void @free(i8* %377) #10
  br label %452

378:                                              ; preds = %344
  %379 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %379) #10
  %380 = ptrtoint %"class.blink::CounterNode"* %57 to i64
  br label %381

381:                                              ; preds = %378, %200, %60
  %382 = phi i64 [ %35, %200 ], [ %380, %378 ], [ %35, %60 ]
  %383 = tail call fastcc %"class.blink::Element"* @_ZN5blink12_GLOBAL__N_144PreviousSiblingOrParentRespectingContainmentERKNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %33)
  br label %421

384:                                              ; preds = %56
  br i1 %59, label %385, label %421

385:                                              ; preds = %384
  %386 = inttoptr i64 %35 to %"class.blink::CounterNode"*
  %387 = icmp eq i64 %35, 0
  br i1 %387, label %415, label %388

388:                                              ; preds = %385
  %389 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 1
  %390 = load i32, i32* %389, align 4
  %391 = and i32 %390, 2
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %397

393:                                              ; preds = %388
  %394 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 6
  %395 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %394, align 8
  %396 = icmp eq %"class.blink::CounterNode"* %395, null
  br i1 %396, label %397, label %418

397:                                              ; preds = %388, %393
  %398 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %398) #10
  %399 = ptrtoint %"class.blink::CounterNode"* %57 to i64
  %400 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %386, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %400) #10
  %401 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %386, i64 0, i32 0, i32 0, i32 0, i32 0
  %402 = load i32, i32* %401, align 4
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %406

404:                                              ; preds = %397
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %386) #10
  %405 = inttoptr i64 %35 to i8*
  tail call void @free(i8* %405) #10
  br label %406

406:                                              ; preds = %397, %404
  %407 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %36) #10
  %408 = icmp eq %"class.blink::ContainerNode"* %407, null
  br i1 %408, label %434, label %409

409:                                              ; preds = %406
  %410 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %407, i64 0, i32 0, i32 1
  %411 = load i32, i32* %410, align 8
  %412 = and i32 %411, 12
  %413 = icmp eq i32 %412, 0
  %414 = bitcast %"class.blink::ContainerNode"* %407 to %"class.blink::Element"*
  br i1 %413, label %429, label %436

415:                                              ; preds = %385
  %416 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %57, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %416) #10
  %417 = ptrtoint %"class.blink::CounterNode"* %57 to i64
  br label %418

418:                                              ; preds = %393, %415
  %419 = phi i64 [ %35, %393 ], [ %417, %415 ]
  %420 = tail call fastcc %"class.blink::Element"* @_ZN5blink12_GLOBAL__N_144PreviousSiblingOrParentRespectingContainmentERKNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %33)
  br label %429

421:                                              ; preds = %384, %381
  %422 = phi i64 [ %382, %381 ], [ %35, %384 ]
  %423 = phi %"class.blink::Element"* [ %383, %381 ], [ %34, %384 ]
  %424 = icmp eq i64 %422, 0
  br i1 %424, label %427, label %425

425:                                              ; preds = %421
  %426 = tail call fastcc %"class.blink::Element"* @_ZN5blink12_GLOBAL__N_144PreviousSiblingOrParentRespectingContainmentERKNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %33)
  br label %429

427:                                              ; preds = %421
  %428 = tail call fastcc %"class.blink::Element"* @_ZN5blink12_GLOBAL__N_139PreviousInPreOrderRespectingContainmentERKNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %33)
  br label %429

429:                                              ; preds = %409, %425, %427, %418
  %430 = phi i64 [ %422, %425 ], [ 0, %427 ], [ %419, %418 ], [ %399, %409 ]
  %431 = phi %"class.blink::Element"* [ %423, %425 ], [ %423, %427 ], [ %34, %418 ], [ %34, %409 ]
  %432 = phi %"class.blink::Element"* [ %426, %425 ], [ %428, %427 ], [ %420, %418 ], [ %414, %409 ]
  %433 = icmp eq %"class.blink::Element"* %432, null
  br i1 %433, label %438, label %32

434:                                              ; preds = %406
  %435 = ptrtoint %"class.blink::CounterNode"* %57 to i64
  br label %438

436:                                              ; preds = %409
  %437 = ptrtoint %"class.blink::CounterNode"* %57 to i64
  br label %438

438:                                              ; preds = %429, %434, %436, %176, %171, %167
  %439 = phi i64 [ %168, %176 ], [ %168, %171 ], [ %168, %167 ], [ %435, %434 ], [ %437, %436 ], [ %430, %429 ]
  %440 = phi i1 [ true, %176 ], [ true, %171 ], [ true, %167 ], [ false, %434 ], [ false, %436 ], [ false, %429 ]
  %441 = icmp eq i64 %439, 0
  br i1 %441, label %452, label %442

442:                                              ; preds = %138, %203, %227, %231, %236, %438
  %443 = phi i64 [ %439, %438 ], [ %35, %236 ], [ %35, %231 ], [ %35, %227 ], [ %35, %203 ], [ %35, %138 ]
  %444 = phi i1 [ %440, %438 ], [ true, %236 ], [ true, %231 ], [ true, %227 ], [ false, %203 ], [ %140, %138 ]
  %445 = inttoptr i64 %443 to %"class.blink::CounterNode"*
  %446 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %445, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %446) #10
  %447 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %445, i64 0, i32 0, i32 0, i32 0, i32 0
  %448 = load i32, i32* %447, align 4
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %452

450:                                              ; preds = %442
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %445) #10
  %451 = inttoptr i64 %443 to i8*
  tail call void @free(i8* %451) #10
  br label %452

452:                                              ; preds = %28, %295, %312, %315, %320, %366, %371, %376, %438, %442, %450
  %453 = phi i1 [ %440, %438 ], [ %444, %442 ], [ %444, %450 ], [ false, %28 ], [ %297, %295 ], [ true, %312 ], [ true, %315 ], [ true, %320 ], [ true, %366 ], [ true, %371 ], [ true, %376 ]
  ret i1 %453
}

declare zeroext i1 @_ZNK5blink12LayoutObject14IsDescendantOfEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink11CounterNode29MoveNonResetSiblingsToChildOfEPS0_RS0_RKN3WTF12AtomicStringE(%"class.blink::CounterNode"*, %"class.blink::CounterNode"* dereferenceable(72), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink11CounterNode11InsertAfterEPS0_S1_RKN3WTF12AtomicStringE(%"class.blink::CounterNode"*, %"class.blink::CounterNode"*, %"class.blink::CounterNode"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::LayoutObject"* @_ZN5blink12_GLOBAL__N_114NextInPreOrderERKNS_12LayoutObjectEPKNS_7ElementEb(%"class.blink::LayoutObject"* nocapture readonly dereferenceable(88), %"class.blink::Element"*, i1 zeroext) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 16777216
  %8 = icmp eq i96 %7, 0
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %10 = bitcast %"class.blink::Node"** %9 to %"class.blink::Element"**
  %11 = load %"class.blink::Element"*, %"class.blink::Element"** %10, align 8
  %12 = select i1 %8, %"class.blink::Element"* %11, %"class.blink::Element"* null
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %12, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  br i1 %2, label %15, label %29

15:                                               ; preds = %3
  %16 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal35NextIncludingPseudoSkippingChildrenERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %13, %"class.blink::Node"* %14) #10
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %99, label %18

18:                                               ; preds = %15, %26
  %19 = phi %"class.blink::Node"* [ %27, %26 ], [ %16, %15 ]
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %32, %18
  %25 = phi %"class.blink::Node"* [ %19, %18 ], [ %33, %32 ]
  br label %43

26:                                               ; preds = %18
  %27 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal35NextIncludingPseudoSkippingChildrenERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %19, %"class.blink::Node"* %14) #10
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %99, label %18

29:                                               ; preds = %3
  %30 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %13, %"class.blink::Node"* %14) #10
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %99, label %32

32:                                               ; preds = %29, %38
  %33 = phi %"class.blink::Node"* [ %39, %38 ], [ %30, %29 ]
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 12
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %24, label %38

38:                                               ; preds = %32
  %39 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %33, %"class.blink::Node"* %14) #10
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %99, label %32

41:                                               ; preds = %78, %66
  %42 = phi %"class.blink::Node"* [ %67, %66 ], [ %79, %78 ]
  br label %43

43:                                               ; preds = %41, %24
  %44 = phi %"class.blink::Node"* [ %25, %24 ], [ %42, %41 ]
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 0, i32 6, i32 0, i32 0
  br i1 %48, label %54, label %50

50:                                               ; preds = %43
  %51 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRareData"**
  %52 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %52, i64 0, i32 1, i32 0, i32 0
  br label %56

54:                                               ; preds = %43
  %55 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRenderingData"**
  br label %56

56:                                               ; preds = %50, %54
  %57 = phi %"class.blink::NodeRenderingData"** [ %53, %50 ], [ %55, %54 ]
  %58 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %58, i64 0, i32 1
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8
  %61 = icmp eq %"class.blink::LayoutObject"* %60, null
  br i1 %61, label %62, label %87

62:                                               ; preds = %56
  br i1 %2, label %63, label %75

63:                                               ; preds = %62
  %64 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal35NextIncludingPseudoSkippingChildrenERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %44, %"class.blink::Node"* %14) #10
  %65 = icmp eq %"class.blink::Node"* %64, null
  br i1 %65, label %99, label %66

66:                                               ; preds = %63, %72
  %67 = phi %"class.blink::Node"* [ %73, %72 ], [ %64, %63 ]
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %67, i64 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, 12
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %41, label %72

72:                                               ; preds = %66
  %73 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal35NextIncludingPseudoSkippingChildrenERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %67, %"class.blink::Node"* %14) #10
  %74 = icmp eq %"class.blink::Node"* %73, null
  br i1 %74, label %99, label %66

75:                                               ; preds = %62
  %76 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %44, %"class.blink::Node"* %14) #10
  %77 = icmp eq %"class.blink::Node"* %76, null
  br i1 %77, label %99, label %78

78:                                               ; preds = %75, %84
  %79 = phi %"class.blink::Node"* [ %85, %84 ], [ %76, %75 ]
  %80 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %79, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, 12
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %41, label %84

84:                                               ; preds = %78
  %85 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %79, %"class.blink::Node"* %14) #10
  %86 = icmp eq %"class.blink::Node"* %85, null
  br i1 %86, label %99, label %78

87:                                               ; preds = %56
  br i1 %48, label %92, label %88

88:                                               ; preds = %87
  %89 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRareData"**
  %90 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %90, i64 0, i32 1, i32 0, i32 0
  br label %94

92:                                               ; preds = %87
  %93 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRenderingData"**
  br label %94

94:                                               ; preds = %88, %92
  %95 = phi %"class.blink::NodeRenderingData"** [ %91, %88 ], [ %93, %92 ]
  %96 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %96, i64 0, i32 1
  %98 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, align 8
  br label %99

99:                                               ; preds = %38, %26, %75, %63, %84, %72, %29, %15, %94
  %100 = phi %"class.blink::LayoutObject"* [ %98, %94 ], [ null, %15 ], [ null, %29 ], [ null, %72 ], [ null, %84 ], [ null, %63 ], [ null, %75 ], [ null, %26 ], [ null, %38 ]
  ret %"class.blink::LayoutObject"* %100
}

declare %"class.blink::ListItemOrdinal"* @_ZN5blink15ListItemOrdinal3GetERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare i64 @_ZNK5blink15ListItemOrdinal13ExplicitValueEv(%"class.blink::ListItemOrdinal"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink15ListItemOrdinal23IsInReversedOrderedListERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #6

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink16HTMLOListElement20RecalculateItemCountEv(%"class.blink::HTMLOListElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::Element"* @_ZN5blink12_GLOBAL__N_144PreviousSiblingOrParentRespectingContainmentERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.blink::Node"* @_ZNK5blink4Node26PseudoAwarePreviousSiblingEv(%"class.blink::Node"* %2) #10
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %48, label %5

5:                                                ; preds = %1, %11
  %6 = phi %"class.blink::Node"* [ %12, %11 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 12
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  %12 = tail call %"class.blink::Node"* @_ZNK5blink4Node26PseudoAwarePreviousSiblingEv(%"class.blink::Node"* nonnull %6) #10
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %48, label %5

14:                                               ; preds = %39, %5
  %15 = phi %"class.blink::Node"* [ %6, %5 ], [ %40, %39 ]
  %16 = bitcast %"class.blink::Node"* %15 to %"class.blink::Element"*
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 6, i32 0, i32 0
  br i1 %20, label %26, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.blink::NodeData"** %21 to %"class.blink::NodeRareData"**
  %24 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %24, i64 0, i32 1, i32 0, i32 0
  br label %28

26:                                               ; preds = %14
  %27 = bitcast %"class.blink::NodeData"** %21 to %"class.blink::NodeRenderingData"**
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi %"class.blink::NodeRenderingData"** [ %25, %22 ], [ %27, %26 ]
  %30 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %30, i64 0, i32 1
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  %33 = icmp eq %"class.blink::LayoutObject"* %32, null
  br i1 %33, label %34, label %85

34:                                               ; preds = %28
  %35 = tail call zeroext i1 @_ZNK5blink7Element23HasDisplayContentsStyleEv(%"class.blink::Element"* nonnull %16) #10
  br i1 %35, label %85, label %36

36:                                               ; preds = %34
  %37 = tail call %"class.blink::Node"* @_ZNK5blink4Node26PseudoAwarePreviousSiblingEv(%"class.blink::Node"* nonnull %15) #10
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %36, %45
  %40 = phi %"class.blink::Node"* [ %46, %45 ], [ %37, %36 ]
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %14, label %45

45:                                               ; preds = %39
  %46 = tail call %"class.blink::Node"* @_ZNK5blink4Node26PseudoAwarePreviousSiblingEv(%"class.blink::Node"* nonnull %40) #10
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %48, label %39

48:                                               ; preds = %11, %36, %45, %1
  %49 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %2) #10
  %50 = icmp eq %"class.blink::ContainerNode"* %49, null
  br i1 %50, label %87, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %49, i64 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 12
  %55 = icmp eq i32 %54, 0
  %56 = bitcast %"class.blink::ContainerNode"* %49 to %"class.blink::Element"*
  br i1 %55, label %57, label %87

57:                                               ; preds = %51
  %58 = and i32 %53, 1
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %49, i64 0, i32 0, i32 6, i32 0, i32 0
  br i1 %59, label %65, label %61

61:                                               ; preds = %57
  %62 = bitcast %"class.blink::NodeData"** %60 to %"class.blink::NodeRareData"**
  %63 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %63, i64 0, i32 1, i32 0, i32 0
  br label %67

65:                                               ; preds = %57
  %66 = bitcast %"class.blink::NodeData"** %60 to %"class.blink::NodeRenderingData"**
  br label %67

67:                                               ; preds = %61, %65
  %68 = phi %"class.blink::NodeRenderingData"** [ %64, %61 ], [ %66, %65 ]
  %69 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %69, i64 0, i32 2, i32 0
  %71 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyle"* %71, null
  br i1 %72, label %84, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %71, i64 0, i32 0, i32 3, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %75, i64 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %77, i64 0, i32 2, i32 0, i32 0
  %79 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %79, i64 0, i32 45
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %73, %67
  br label %87

85:                                               ; preds = %28, %34
  %86 = bitcast %"class.blink::Node"* %15 to %"class.blink::Element"*
  br label %87

87:                                               ; preds = %85, %73, %51, %48, %84
  %88 = phi %"class.blink::Element"* [ null, %73 ], [ %56, %84 ], [ null, %51 ], [ null, %48 ], [ %86, %85 ]
  ret %"class.blink::Element"* %88
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::Element"* @_ZN5blink12_GLOBAL__N_139PreviousInPreOrderRespectingContainmentERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal23PreviousIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %2, %"class.blink::Node"* null) #10
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1, %11
  %6 = phi %"class.blink::Node"* [ %12, %11 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 12
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  %12 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal23PreviousIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %6, %"class.blink::Node"* null) #10
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %14, label %5

14:                                               ; preds = %5, %11, %1
  %15 = phi %"class.blink::Node"* [ null, %1 ], [ null, %11 ], [ %6, %5 ]
  %16 = bitcast %"class.blink::Node"* %15 to %"class.blink::Element"*
  %17 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %2) #10
  %18 = icmp eq %"class.blink::ContainerNode"* %17, null
  br i1 %18, label %84, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %17, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %84

24:                                               ; preds = %19, %77
  %25 = phi i32 [ %79, %77 ], [ %21, %19 ]
  %26 = phi %"class.blink::ContainerNode"* [ %75, %77 ], [ %17, %19 ]
  %27 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %26, i64 0, i32 0
  %28 = and i32 %25, 12
  %29 = icmp eq i32 %28, 0
  %30 = and i32 %25, 1
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %26, i64 0, i32 0, i32 6, i32 0, i32 0
  br i1 %29, label %33, label %44

33:                                               ; preds = %24
  br i1 %31, label %40, label %34

34:                                               ; preds = %33
  %35 = bitcast %"class.blink::NodeData"** %32 to %"class.blink::NodeRareData"**
  %36 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %38, i64 0, i32 2, i32 0
  br label %59

40:                                               ; preds = %33
  %41 = bitcast %"class.blink::NodeData"** %32 to %"class.blink::NodeRenderingData"**
  %42 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %42, i64 0, i32 2, i32 0
  br label %59

44:                                               ; preds = %24
  br i1 %31, label %49, label %45

45:                                               ; preds = %44
  %46 = bitcast %"class.blink::NodeData"** %32 to %"class.blink::NodeRareData"**
  %47 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %47, i64 0, i32 1, i32 0, i32 0
  br label %51

49:                                               ; preds = %44
  %50 = bitcast %"class.blink::NodeData"** %32 to %"class.blink::NodeRenderingData"**
  br label %51

51:                                               ; preds = %49, %45
  %52 = phi %"class.blink::NodeRenderingData"** [ %48, %45 ], [ %50, %49 ]
  %53 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %53, i64 0, i32 1
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = icmp eq %"class.blink::LayoutObject"* %55, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 5, i32 0
  br label %59

59:                                               ; preds = %34, %40, %57
  %60 = phi %"class.blink::ComputedStyle"** [ %58, %57 ], [ %39, %34 ], [ %43, %40 ]
  %61 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %60, align 8
  %62 = icmp eq %"class.blink::ComputedStyle"* %61, null
  br i1 %62, label %74, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %61, i64 0, i32 0, i32 3, i32 0, i32 0
  %65 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %65, i64 0, i32 2, i32 0, i32 0
  %67 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %67, i64 0, i32 2, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %69, i64 0, i32 45
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %82

74:                                               ; preds = %51, %63, %59
  %75 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %27) #10
  %76 = icmp eq %"class.blink::ContainerNode"* %75, null
  br i1 %76, label %84, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %75, i64 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 12
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %24, label %84

82:                                               ; preds = %63
  %83 = bitcast %"class.blink::ContainerNode"* %26 to %"class.blink::Element"*
  br label %84

84:                                               ; preds = %77, %74, %82, %14, %19
  %85 = phi %"class.blink::Element"* [ null, %19 ], [ null, %14 ], [ %83, %82 ], [ null, %74 ], [ null, %77 ]
  br label %86

86:                                               ; preds = %196, %84
  %87 = phi %"class.blink::Element"* [ %16, %84 ], [ %194, %196 ]
  %88 = icmp eq %"class.blink::Element"* %87, null
  br i1 %88, label %198, label %89

89:                                               ; preds = %86, %123
  %90 = phi %"class.blink::Element"* [ %124, %123 ], [ %87, %86 ]
  %91 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %90, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %90, i64 0, i32 0, i32 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %90, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %95, label %101, label %97

97:                                               ; preds = %89
  %98 = bitcast %"class.blink::NodeData"** %96 to %"class.blink::NodeRareData"**
  %99 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %99, i64 0, i32 1, i32 0, i32 0
  br label %103

101:                                              ; preds = %89
  %102 = bitcast %"class.blink::NodeData"** %96 to %"class.blink::NodeRenderingData"**
  br label %103

103:                                              ; preds = %97, %101
  %104 = phi %"class.blink::NodeRenderingData"** [ %100, %97 ], [ %102, %101 ]
  %105 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %105, i64 0, i32 1
  %107 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %106, align 8
  %108 = icmp eq %"class.blink::LayoutObject"* %107, null
  br i1 %108, label %109, label %125

109:                                              ; preds = %103
  %110 = tail call zeroext i1 @_ZNK5blink7Element23HasDisplayContentsStyleEv(%"class.blink::Element"* nonnull %90) #10
  br i1 %110, label %125, label %111

111:                                              ; preds = %109
  %112 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal23PreviousIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %91, %"class.blink::Node"* null) #10
  %113 = icmp eq %"class.blink::Node"* %112, null
  br i1 %113, label %198, label %114

114:                                              ; preds = %111, %120
  %115 = phi %"class.blink::Node"* [ %121, %120 ], [ %112, %111 ]
  %116 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %115, i64 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = and i32 %117, 12
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal23PreviousIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %115, %"class.blink::Node"* null) #10
  %122 = icmp eq %"class.blink::Node"* %121, null
  br i1 %122, label %198, label %114

123:                                              ; preds = %114
  %124 = bitcast %"class.blink::Node"* %115 to %"class.blink::Element"*
  br label %89

125:                                              ; preds = %109, %103
  %126 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %91) #10
  %127 = icmp eq %"class.blink::ContainerNode"* %126, null
  br i1 %127, label %193, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %126, i64 0, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = and i32 %130, 12
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %193

133:                                              ; preds = %128, %186
  %134 = phi i32 [ %188, %186 ], [ %130, %128 ]
  %135 = phi %"class.blink::ContainerNode"* [ %184, %186 ], [ %126, %128 ]
  %136 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %135, i64 0, i32 0
  %137 = and i32 %134, 12
  %138 = icmp eq i32 %137, 0
  %139 = and i32 %134, 1
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %135, i64 0, i32 0, i32 6, i32 0, i32 0
  br i1 %138, label %142, label %153

142:                                              ; preds = %133
  br i1 %140, label %149, label %143

143:                                              ; preds = %142
  %144 = bitcast %"class.blink::NodeData"** %141 to %"class.blink::NodeRareData"**
  %145 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %145, i64 0, i32 1, i32 0, i32 0
  %147 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %147, i64 0, i32 2, i32 0
  br label %168

149:                                              ; preds = %142
  %150 = bitcast %"class.blink::NodeData"** %141 to %"class.blink::NodeRenderingData"**
  %151 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %151, i64 0, i32 2, i32 0
  br label %168

153:                                              ; preds = %133
  br i1 %140, label %158, label %154

154:                                              ; preds = %153
  %155 = bitcast %"class.blink::NodeData"** %141 to %"class.blink::NodeRareData"**
  %156 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %156, i64 0, i32 1, i32 0, i32 0
  br label %160

158:                                              ; preds = %153
  %159 = bitcast %"class.blink::NodeData"** %141 to %"class.blink::NodeRenderingData"**
  br label %160

160:                                              ; preds = %158, %154
  %161 = phi %"class.blink::NodeRenderingData"** [ %157, %154 ], [ %159, %158 ]
  %162 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %162, i64 0, i32 1
  %164 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %163, align 8
  %165 = icmp eq %"class.blink::LayoutObject"* %164, null
  br i1 %165, label %183, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %164, i64 0, i32 5, i32 0
  br label %168

168:                                              ; preds = %143, %149, %166
  %169 = phi %"class.blink::ComputedStyle"** [ %167, %166 ], [ %148, %143 ], [ %152, %149 ]
  %170 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %169, align 8
  %171 = icmp eq %"class.blink::ComputedStyle"* %170, null
  br i1 %171, label %183, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %170, i64 0, i32 0, i32 3, i32 0, i32 0
  %174 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %174, i64 0, i32 2, i32 0, i32 0
  %176 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %176, i64 0, i32 2, i32 0, i32 0
  %178 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %178, i64 0, i32 45
  %180 = load i32, i32* %179, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %191

183:                                              ; preds = %160, %172, %168
  %184 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %136) #10
  %185 = icmp eq %"class.blink::ContainerNode"* %184, null
  br i1 %185, label %193, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %184, i64 0, i32 0, i32 1
  %188 = load i32, i32* %187, align 8
  %189 = and i32 %188, 12
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %133, label %193

191:                                              ; preds = %172
  %192 = bitcast %"class.blink::ContainerNode"* %135 to %"class.blink::Element"*
  br label %193

193:                                              ; preds = %186, %183, %191, %125, %128
  %194 = phi %"class.blink::Element"* [ null, %128 ], [ null, %125 ], [ %192, %191 ], [ null, %183 ], [ null, %186 ]
  %195 = icmp eq %"class.blink::Element"* %194, %85
  br i1 %195, label %198, label %196

196:                                              ; preds = %193
  %197 = icmp eq %"class.blink::Element"* %194, null
  br i1 %197, label %198, label %86

198:                                              ; preds = %196, %193, %86, %111, %120
  %199 = phi %"class.blink::Element"* [ null, %120 ], [ null, %111 ], [ null, %86 ], [ %90, %193 ], [ null, %196 ]
  ret %"class.blink::Element"* %199
}

declare zeroext i1 @_ZNK5blink7Element23HasDisplayContentsStyleEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink4Node26PseudoAwarePreviousSiblingEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal23PreviousIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2009"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E6insertINS_17HashMapTranslatorIST_SP_SH_EEPS2_SL_EENS_18HashTableAddResultISU_SM_EEOT0_OT1_(%"class.WTF::HashTable.2006"*, %"class.blink::LayoutObject"** dereferenceable(8), %"class.std::__1::unique_ptr.2010"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2009"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2009"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E6ExpandEPSM_(%"class.WTF::HashTable.2006"* %0, %"struct.WTF::KeyValuePair.2009"* null)
  %9 = load %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2009"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutObject"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutObject"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutObject"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.2009"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.2009"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutObject"* %59, %43
  br i1 %64, label %114, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutObject"* %59, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.2009"* %60, %"struct.WTF::KeyValuePair.2009"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutObject"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.2009"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.2009"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.2009"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.2009"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %89, i64 0, i32 1
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2010", %"class.std::__1::unique_ptr.2010"* %2, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.std::__1::unique_ptr.2010"* %2 to i64*
  %94 = load i64, i64* %93, align 8
  store %"class.WTF::HashMap.2013"* null, %"class.WTF::HashMap.2013"** %92, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.2010", %"class.std::__1::unique_ptr.2010"* %91, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::HashMap.2013"*, %"class.WTF::HashMap.2013"** %95, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.2010"* %91 to i64*
  store i64 %94, i64* %97, align 8
  %98 = icmp eq %"class.WTF::HashMap.2013"* %96, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %87
  %100 = bitcast %"class.WTF::HashMap.2013"* %96 to %"class.WTF::ConditionalDestructor.2015"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS2_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.2015"* nonnull %100) #10
  %101 = bitcast %"class.WTF::HashMap.2013"* %96 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %101) #10
  br label %102

102:                                              ; preds = %87, %99
  %103 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 4
  %106 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = add i32 %107, %105
  %109 = shl i32 %108, 1
  %110 = load i32, i32* %12, align 8
  %111 = icmp ult i32 %109, %110
  br i1 %111, label %114, label %112

112:                                              ; preds = %102
  %113 = tail call %"struct.WTF::KeyValuePair.2009"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E6ExpandEPSM_(%"class.WTF::HashTable.2006"* %0, %"struct.WTF::KeyValuePair.2009"* %89)
  br label %114

114:                                              ; preds = %58, %102, %112
  %115 = phi i8 [ 1, %102 ], [ 1, %112 ], [ 0, %58 ]
  %116 = phi %"struct.WTF::KeyValuePair.2009"* [ %89, %102 ], [ %113, %112 ], [ %60, %58 ]
  %117 = insertvalue { %"struct.WTF::KeyValuePair.2009"*, i8 } undef, %"struct.WTF::KeyValuePair.2009"* %116, 0
  %118 = insertvalue { %"struct.WTF::KeyValuePair.2009"*, i8 } %117, i8 %115, 1
  ret { %"struct.WTF::KeyValuePair.2009"*, i8 } %118
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2009"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E6ExpandEPSM_(%"class.WTF::HashTable.2006"*, %"struct.WTF::KeyValuePair.2009"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([555 x i8], [555 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectENSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS2_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.2009"*
  %37 = call %"struct.WTF::KeyValuePair.2009"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E8RehashToEPSM_jSV_(%"class.WTF::HashTable.2006"* %0, %"struct.WTF::KeyValuePair.2009"* %36, i32 %32, %"struct.WTF::KeyValuePair.2009"* %1) #10
  ret %"struct.WTF::KeyValuePair.2009"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2009"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E8RehashToEPSM_jSV_(%"class.WTF::HashTable.2006"*, %"struct.WTF::KeyValuePair.2009"*, i32, %"struct.WTF::KeyValuePair.2009"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2006", align 8
  %6 = bitcast %"class.WTF::HashTable.2006"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2006"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2009"* %1, %"struct.WTF::KeyValuePair.2009"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2009"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2006"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2006"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.2009"* %22 to i64
  br label %62

24:                                               ; preds = %97
  %25 = bitcast %"class.WTF::HashTable.2006"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2006"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %98, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.2009"* [ null, %16 ], [ %101, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %99, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.2009"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %58, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %56, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %53, %39
  %42 = phi i64 [ 0, %39 ], [ %54, %53 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %35, i64 %42, i32 0
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %45 = icmp eq %"class.blink::LayoutObject"* %44, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::HashMap.2013"*, %"class.WTF::HashMap.2013"** %47, align 8
  store %"class.WTF::HashMap.2013"* null, %"class.WTF::HashMap.2013"** %47, align 8
  %49 = icmp eq %"class.WTF::HashMap.2013"* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.WTF::HashMap.2013"* %48 to %"class.WTF::ConditionalDestructor.2015"*
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS2_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.2015"* nonnull %51) #10
  %52 = bitcast %"class.WTF::HashMap.2013"* %48 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %52) #10
  br label %53

53:                                               ; preds = %50, %46, %41
  %54 = add nuw nsw i64 %42, 1
  %55 = icmp eq i64 %54, %40
  br i1 %55, label %56, label %41

56:                                               ; preds = %53, %37
  %57 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %58

58:                                               ; preds = %28, %56
  %59 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %59, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair.2009"* %33

62:                                               ; preds = %21, %97
  %63 = phi i64 [ %98, %97 ], [ %23, %21 ]
  %64 = phi i32 [ %99, %97 ], [ %13, %21 ]
  %65 = phi %"struct.WTF::KeyValuePair.2009"* [ %100, %97 ], [ %22, %21 ]
  %66 = phi %"struct.WTF::KeyValuePair.2009"* [ %101, %97 ], [ null, %21 ]
  %67 = phi i32 [ %102, %97 ], [ 0, %21 ]
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %65, i64 %68
  %70 = bitcast %"struct.WTF::KeyValuePair.2009"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  switch i64 %71, label %72 [
    i64 -1, label %97
    i64 0, label %97
  ]

72:                                               ; preds = %62
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %69, i64 0, i32 0
  %74 = call { %"struct.WTF::KeyValuePair.2009"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E16LookupForWritingERKS4_(%"class.WTF::HashTable.2006"* nonnull %5, %"class.blink::LayoutObject"** dereferenceable(8) %73) #10
  %75 = extractvalue { %"struct.WTF::KeyValuePair.2009"*, i8 } %74, 0
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %75, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::HashMap.2013"*, %"class.WTF::HashMap.2013"** %76, align 8
  store %"class.WTF::HashMap.2013"* null, %"class.WTF::HashMap.2013"** %76, align 8
  %78 = icmp eq %"class.WTF::HashMap.2013"* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %72
  %80 = bitcast %"class.WTF::HashMap.2013"* %77 to %"class.WTF::ConditionalDestructor.2015"*
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS2_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.2015"* nonnull %80) #10
  %81 = bitcast %"class.WTF::HashMap.2013"* %77 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %81) #10
  br label %82

82:                                               ; preds = %72, %79
  %83 = load i64, i64* %70, align 8
  %84 = bitcast %"struct.WTF::KeyValuePair.2009"* %75 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %75, i64 0, i32 1
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %65, i64 %68, i32 1
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2010", %"class.std::__1::unique_ptr.2010"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2010"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.WTF::HashMap.2013"* null, %"class.WTF::HashMap.2013"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2010"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = load %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"** %15, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %91, i64 %68
  %93 = icmp eq %"struct.WTF::KeyValuePair.2009"* %92, %3
  %94 = select i1 %93, %"struct.WTF::KeyValuePair.2009"* %75, %"struct.WTF::KeyValuePair.2009"* %66
  %95 = load i32, i32* %12, align 8
  %96 = ptrtoint %"struct.WTF::KeyValuePair.2009"* %91 to i64
  br label %97

97:                                               ; preds = %62, %62, %82
  %98 = phi i64 [ %63, %62 ], [ %96, %82 ], [ %63, %62 ]
  %99 = phi i32 [ %64, %62 ], [ %95, %82 ], [ %64, %62 ]
  %100 = phi %"struct.WTF::KeyValuePair.2009"* [ %65, %62 ], [ %91, %82 ], [ %65, %62 ]
  %101 = phi %"struct.WTF::KeyValuePair.2009"* [ %66, %62 ], [ %94, %82 ], [ %66, %62 ]
  %102 = add i32 %67, 1
  %103 = icmp eq i32 %102, %99
  br i1 %103, label %24, label %62
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2009"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E16LookupForWritingERKS4_(%"class.WTF::HashTable.2006"*, %"class.blink::LayoutObject"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.2009"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutObject"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutObject"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.2009"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.2009"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.2009"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.2009"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.2009"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutObject"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutObject"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutObject"* %63, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.2009"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutObject"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.2009"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.2009"*, i8 } undef, %"struct.WTF::KeyValuePair.2009"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.2009"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.2009"*, i8 } %85
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS2_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.2015"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.2015"* %0 to %"struct.WTF::KeyValuePair.2017"**
  %3 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.2017"* %3, null
  br i1 %4, label %51, label %5, !prof !5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::ConditionalDestructor.2015", %"class.WTF::ConditionalDestructor.2015"* %0, i64 8
  %7 = bitcast %"class.WTF::ConditionalDestructor.2015"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %49, label %10

10:                                               ; preds = %5
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %46, %10
  %13 = phi i64 [ 0, %10 ], [ %47, %46 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %3, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.2017"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, inttoptr (i64 -1 to i8*)
  br i1 %17, label %46, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %3, i64 %13, i32 1, i32 0
  %20 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %19, align 8
  %21 = icmp eq %"class.blink::CounterNode"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #10
  %24 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %20) #10
  %28 = bitcast %"class.blink::CounterNode"* %20 to i8*
  tail call void @free(i8* %28) #10
  br label %29

29:                                               ; preds = %27, %22, %18
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %46

46:                                               ; preds = %45, %42, %29, %12
  %47 = add nuw nsw i64 %13, 1
  %48 = icmp eq i64 %47, %11
  br i1 %48, label %49, label %12

49:                                               ; preds = %46, %5
  %50 = bitcast %"struct.WTF::KeyValuePair.2017"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #10
  store %"struct.WTF::KeyValuePair.2017"* null, %"struct.WTF::KeyValuePair.2017"** %2, align 8
  br label %51

51:                                               ; preds = %1, %49
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2017"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.2014"*, %"class.WTF::AtomicString"* dereferenceable(8), %class.scoped_refptr.2018* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2017"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2017"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.2014"* %0, %"struct.WTF::KeyValuePair.2017"* null)
  %9 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2017"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.2017"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.2017"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.2017"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %85, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.2017"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.2017"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair.2017"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #10
  %66 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"struct.WTF::KeyValuePair.2017"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_I13scoped_refptrIN5blink11CounterNodeEEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKS3_RS8_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.2017"* dereferenceable(16) %73, %"class.WTF::AtomicString"* dereferenceable(8) %1, %class.scoped_refptr.2018* dereferenceable(8) %2)
  %74 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, %76
  %80 = shl i32 %79, 1
  %81 = load i32, i32* %12, align 8
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %72
  %84 = tail call %"struct.WTF::KeyValuePair.2017"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.2014"* %0, %"struct.WTF::KeyValuePair.2017"* %73)
  br label %85

85:                                               ; preds = %49, %72, %83
  %86 = phi i8 [ 1, %72 ], [ 1, %83 ], [ 0, %49 ]
  %87 = phi %"struct.WTF::KeyValuePair.2017"* [ %73, %72 ], [ %84, %83 ], [ %42, %49 ]
  %88 = insertvalue { %"struct.WTF::KeyValuePair.2017"*, i8 } undef, %"struct.WTF::KeyValuePair.2017"* %87, 0
  %89 = insertvalue { %"struct.WTF::KeyValuePair.2017"*, i8 } %88, i8 %86, 1
  ret { %"struct.WTF::KeyValuePair.2017"*, i8 } %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2017"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.2014"*, %"struct.WTF::KeyValuePair.2017"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringE13scoped_refptrIN5blink11CounterNodeEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.2017"*
  %37 = call %"struct.WTF::KeyValuePair.2017"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.2014"* %0, %"struct.WTF::KeyValuePair.2017"* %36, i32 %32, %"struct.WTF::KeyValuePair.2017"* %1) #10
  ret %"struct.WTF::KeyValuePair.2017"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_I13scoped_refptrIN5blink11CounterNodeEEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKS3_RS8_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.2017"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), %class.scoped_refptr.2018* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.2017"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #10
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %2, i64 0, i32 0
  %45 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %44, align 8
  %46 = icmp eq %"class.blink::CounterNode"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #10
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %0, i64 0, i32 1
  %51 = ptrtoint %"class.blink::CounterNode"* %45 to i64
  %52 = bitcast %class.scoped_refptr.2018* %50 to i64*
  %53 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %50, i64 0, i32 0
  %54 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %53, align 8
  store i64 %51, i64* %52, align 8
  %55 = icmp eq %"class.blink::CounterNode"* %54, null
  br i1 %55, label %63, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %54, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %57) #10
  %58 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %54) #10
  %62 = bitcast %"class.blink::CounterNode"* %54 to i8*
  tail call void @free(i8* %62) #10
  br label %63

63:                                               ; preds = %49, %56, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2017"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.2014"*, %"struct.WTF::KeyValuePair.2017"*, i32, %"struct.WTF::KeyValuePair.2017"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2014", align 8
  %6 = bitcast %"class.WTF::HashTable.2014"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2014"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2017"* %1, %"struct.WTF::KeyValuePair.2017"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2017"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2014"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2014"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.2017"* %22 to i64
  br label %85

24:                                               ; preds = %103
  %25 = bitcast %"class.WTF::HashTable.2014"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2014"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %104, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.2017"* [ null, %16 ], [ %107, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %105, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.2017"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %80, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %78, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %75, %39
  %42 = phi i64 [ 0, %39 ], [ %76, %75 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.2017"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %75, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %35, i64 %42, i32 1, i32 0
  %49 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %48, align 8
  %50 = icmp eq %"class.blink::CounterNode"* %49, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %49, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %52) #10
  %53 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %49) #10
  %57 = bitcast %"class.blink::CounterNode"* %49 to i8*
  call void @free(i8* %57) #10
  br label %58

58:                                               ; preds = %56, %51, %47
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %74, %71, %58, %41
  %76 = add nuw nsw i64 %42, 1
  %77 = icmp eq i64 %76, %40
  br i1 %77, label %78, label %41

78:                                               ; preds = %75, %37
  %79 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %80

80:                                               ; preds = %28, %78
  %81 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, -2147483648
  store i32 %83, i32* %81, align 8
  %84 = bitcast %"class.WTF::HashTable.2014"* %5 to %"class.WTF::ConditionalDestructor.2015"*
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS2_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.2015"* nonnull %84) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair.2017"* %33

85:                                               ; preds = %21, %103
  %86 = phi i64 [ %104, %103 ], [ %23, %21 ]
  %87 = phi i32 [ %105, %103 ], [ %13, %21 ]
  %88 = phi %"struct.WTF::KeyValuePair.2017"* [ %106, %103 ], [ %22, %21 ]
  %89 = phi %"struct.WTF::KeyValuePair.2017"* [ %107, %103 ], [ null, %21 ]
  %90 = phi i32 [ %108, %103 ], [ 0, %21 ]
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %88, i64 %91
  %93 = bitcast %"struct.WTF::KeyValuePair.2017"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  switch i64 %94, label %95 [
    i64 -1, label %103
    i64 0, label %103
  ]

95:                                               ; preds = %85
  %96 = call %"struct.WTF::KeyValuePair.2017"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_(%"class.WTF::HashTable.2014"* nonnull %5, %"struct.WTF::KeyValuePair.2017"* dereferenceable(16) %92)
  %97 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %15, align 8
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %97, i64 %91
  %99 = icmp eq %"struct.WTF::KeyValuePair.2017"* %98, %3
  %100 = select i1 %99, %"struct.WTF::KeyValuePair.2017"* %96, %"struct.WTF::KeyValuePair.2017"* %89
  %101 = load i32, i32* %12, align 8
  %102 = ptrtoint %"struct.WTF::KeyValuePair.2017"* %97 to i64
  br label %103

103:                                              ; preds = %85, %85, %95
  %104 = phi i64 [ %86, %85 ], [ %102, %95 ], [ %86, %85 ]
  %105 = phi i32 [ %87, %85 ], [ %101, %95 ], [ %87, %85 ]
  %106 = phi %"struct.WTF::KeyValuePair.2017"* [ %88, %85 ], [ %97, %95 ], [ %88, %85 ]
  %107 = phi %"struct.WTF::KeyValuePair.2017"* [ %89, %85 ], [ %100, %95 ], [ %89, %85 ]
  %108 = add i32 %90, 1
  %109 = icmp eq i32 %108, %105
  br i1 %109, label %24, label %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2017"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_(%"class.WTF::HashTable.2014"*, %"struct.WTF::KeyValuePair.2017"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2017"*, %"struct.WTF::KeyValuePair.2017"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = and i32 %13, %7
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %4, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2017"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %2
  %22 = xor i32 %13, -1
  %23 = lshr i32 %12, 31
  %24 = add nsw i32 %23, %22
  %25 = shl i32 %24, 12
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 7
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 2
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 20
  %32 = xor i32 %31, %30
  %33 = or i32 %32, 1
  %34 = zext i32 %33 to i64
  br label %43

35:                                               ; preds = %55
  %36 = ptrtoint %"struct.WTF::KeyValuePair.2017"* %61 to i64
  br label %37

37:                                               ; preds = %35, %2
  %38 = phi i64 [ %17, %2 ], [ %36, %35 ]
  %39 = phi %"struct.WTF::KeyValuePair.2017"* [ null, %2 ], [ %56, %35 ]
  %40 = icmp eq %"struct.WTF::KeyValuePair.2017"* %39, null
  %41 = ptrtoint %"struct.WTF::KeyValuePair.2017"* %39 to i64
  %42 = select i1 %40, i64 %38, i64 %41
  br label %66

43:                                               ; preds = %55, %21
  %44 = phi %"struct.WTF::KeyValuePair.2017"* [ null, %21 ], [ %56, %55 ]
  %45 = phi i64 [ %17, %21 ], [ %62, %55 ]
  %46 = phi %"struct.WTF::KeyValuePair.2017"* [ %16, %21 ], [ %61, %55 ]
  %47 = phi i64 [ %15, %21 ], [ %60, %55 ]
  %48 = phi i64 [ 0, %21 ], [ %58, %55 ]
  %49 = bitcast %"struct.WTF::KeyValuePair.2017"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = bitcast i8* %50 to %"class.WTF::StringImpl"*
  %54 = icmp eq %"class.WTF::StringImpl"* %10, %53
  br i1 %54, label %66, label %55

55:                                               ; preds = %52, %43
  %56 = phi %"struct.WTF::KeyValuePair.2017"* [ %44, %52 ], [ %46, %43 ]
  %57 = icmp eq i64 %48, 0
  %58 = select i1 %57, i64 %34, i64 %48
  %59 = add i64 %58, %47
  %60 = and i64 %59, %8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %4, i64 %60
  %62 = ptrtoint %"struct.WTF::KeyValuePair.2017"* %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %35, label %43

66:                                               ; preds = %52, %37
  %67 = phi i64 [ %42, %37 ], [ %45, %52 ]
  %68 = inttoptr i64 %67 to %"struct.WTF::KeyValuePair.2017"*
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %68, i64 0, i32 1, i32 0
  %70 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %69, align 8
  %71 = icmp eq %"class.blink::CounterNode"* %70, null
  br i1 %71, label %79, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %70, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %73) #10
  %74 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %72
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %70) #10
  %78 = bitcast %"class.blink::CounterNode"* %70 to i8*
  tail call void @free(i8* %78) #10
  br label %79

79:                                               ; preds = %77, %72, %66
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #10
  br label %96

96:                                               ; preds = %79, %92, %95
  %97 = bitcast %"struct.WTF::KeyValuePair.2017"* %1 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = inttoptr i64 %67 to i64*
  store i64 %98, i64* %99, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %68, i64 0, i32 1
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %1, i64 0, i32 1
  %102 = getelementptr inbounds %class.scoped_refptr.2018, %class.scoped_refptr.2018* %101, i64 0, i32 0
  %103 = bitcast %class.scoped_refptr.2018* %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %class.scoped_refptr.2018* %100 to i64*
  store i64 %104, i64* %105, align 8
  store %"class.blink::CounterNode"* null, %"class.blink::CounterNode"** %102, align 8
  ret %"struct.WTF::KeyValuePair.2017"* %68
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal35NextIncludingPseudoSkippingChildrenERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12CounterStyle22GenerateRepresentationEi(%"class.blink::CounterStyle"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon.2123, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #10
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !5

23:                                               ; preds = %19
  %24 = bitcast %class.anon.2123* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #10
  %25 = getelementptr inbounds %class.anon.2123, %class.anon.2123* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon.2123, %class.anon.2123* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), %class.anon.2123* nonnull dereferenceable(16) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #10
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #10
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #10
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.2123* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #10
  %20 = tail call i8* @_Znwm(i64 192) #11
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #10
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #10
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #10
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #10
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #10
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #10
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #10
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #10
  %38 = getelementptr inbounds %class.anon.2123, %class.anon.2123* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #10
  %40 = getelementptr inbounds %class.anon.2123, %class.anon.2123* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #10
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #10
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #10
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #10
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #10
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #10
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #10
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !6

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !8

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !9

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #11
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #11, !noalias !10
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !10
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #11
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

declare %"class.blink::CounterNode"* @_ZNK5blink11CounterNode14LastDescendantEv(%"class.blink::CounterNode"*) local_unnamed_addr #1

declare %"class.blink::CounterNode"* @_ZNK5blink11CounterNode18PreviousInPreOrderEv(%"class.blink::CounterNode"*) local_unnamed_addr #1

declare void @_ZN5blink11CounterNode11RemoveChildEPS0_(%"class.blink::CounterNode"*, %"class.blink::CounterNode"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_18CounterContentDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::CounterContentData"**
  %5 = load %"class.blink::CounterContentData"*, %"class.blink::CounterContentData"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::CounterContentData"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::CounterContentData"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18CounterContentDataEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18CounterContentDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CounterContentData"*
  tail call void @_ZNK5blink18CounterContentData5TraceEPNS_7VisitorE(%"class.blink::CounterContentData"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink18CounterContentData5TraceEPNS_7VisitorE(%"class.blink::CounterContentData"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringENS_12AtomicStringEEC2ES1_S2_(%"class.WTF::StringAppend.2004"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2004", %"class.WTF::StringAppend.2004"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #10
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.2004", %"class.WTF::StringAppend.2004"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #10
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %33
  tail call void @llvm.trap() #10
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_EC2ES3_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %4
  %25 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %25, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #10
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %32
  tail call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %24, %27, %42
  %45 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %46, label %76, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %64

54:                                               ; preds = %47
  %55 = zext i32 %53 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #10
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %54
  tail call void @llvm.trap() #10
  unreachable

62:                                               ; preds = %54
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %52, align 4
  br label %64

64:                                               ; preds = %47, %62
  %65 = phi i32 [ %63, %62 ], [ %53, %47 ]
  %66 = load atomic i32, i32* %48 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %71 = add i32 %65, -1
  store i32 %71, i32* %70, align 4
  br label %72

72:                                               ; preds = %69, %64
  %73 = phi i32 [ %71, %69 ], [ %65, %64 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %76

76:                                               ; preds = %44, %72, %75
  br i1 %26, label %90, label %77

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %90

90:                                               ; preds = %89, %86, %76
  br i1 %6, label %104, label %91

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %104

104:                                              ; preds = %90, %100, %103
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringENS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2004"* %8) #10
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringENS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2004"* %8) #10
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2153", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2155", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2153", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2153"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2153"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2153"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2153"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #10
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %35, %33
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2153"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2155"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #10
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2155", %"class.WTF::StringTypeAdapter.2155"* %4, i64 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2155", %"class.WTF::StringTypeAdapter.2155"* %4, i64 0, i32 0, i32 0, i32 2
  %49 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false) #10
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %41
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %60

54:                                               ; preds = %41
  %55 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 1
  %59 = bitcast %"class.WTF::StringImpl"* %58 to i8*
  br label %60

60:                                               ; preds = %52, %54
  %61 = phi i8* [ null, %52 ], [ %59, %54 ]
  %62 = phi i64 [ %53, %52 ], [ %55, %54 ]
  %63 = phi i32 [ 0, %52 ], [ %57, %54 ]
  %64 = bitcast %"class.WTF::StringTypeAdapter.2155"* %4 to i64*
  store i64 %62, i64* %64, align 8
  store i8* %61, i8** %47, align 8
  store i32 %63, i32* %48, align 8
  %65 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2154"* nonnull %65, i8* %1) #10
  %66 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2155", %"class.WTF::StringTypeAdapter.2155"* %4, i64 0, i32 0
  %67 = load i32, i32* %29, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %1, i64 %68
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2154"* nonnull %66, i8* %69) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %70 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %5, i64 0, i32 0
  %71 = call i32 @_ZNK3WTF12StringAppendINS_6StringENS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2004"* %6) #10
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %1, i64 %72
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2154"* nonnull %70, i8* %73) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringENS_12AtomicStringEEES1_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2153", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2155", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2153", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2153"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2153"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2153"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2153"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #10
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %35, %33
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2153"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2155"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #10
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2155", %"class.WTF::StringTypeAdapter.2155"* %4, i64 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2155", %"class.WTF::StringTypeAdapter.2155"* %4, i64 0, i32 0, i32 0, i32 2
  %49 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false) #10
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %41
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %60

54:                                               ; preds = %41
  %55 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 1
  %59 = bitcast %"class.WTF::StringImpl"* %58 to i8*
  br label %60

60:                                               ; preds = %52, %54
  %61 = phi i8* [ null, %52 ], [ %59, %54 ]
  %62 = phi i64 [ %53, %52 ], [ %55, %54 ]
  %63 = phi i32 [ 0, %52 ], [ %57, %54 ]
  %64 = bitcast %"class.WTF::StringTypeAdapter.2155"* %4 to i64*
  store i64 %62, i64* %64, align 8
  store i8* %61, i8** %47, align 8
  store i32 %63, i32* %48, align 8
  %65 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2154"* nonnull %65, i16* %1) #10
  %66 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2155", %"class.WTF::StringTypeAdapter.2155"* %4, i64 0, i32 0
  %67 = load i32, i32* %29, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i16, i16* %1, i64 %68
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2154"* nonnull %66, i16* %69) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %70 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %5, i64 0, i32 0
  %71 = call i32 @_ZNK3WTF12StringAppendINS_6StringENS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2004"* %6) #10
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i16, i16* %1, i64 %72
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2154"* nonnull %70, i16* %73) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringENS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2004"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2004", %"class.WTF::StringAppend.2004"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.2004", %"class.WTF::StringAppend.2004"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #10
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %31, i8* %32) #10
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #10
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #10
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* %46, i8* %47) #10
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #10
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  ret i32 %24
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2154"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2154"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"* } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E4findERKS4_(%"class.WTF::HashTable.2006"*, %"class.blink::LayoutObject"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.2009"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutObject"*
  %38 = icmp eq %"class.blink::LayoutObject"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutObject"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutObject"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutObject"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.2009"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.2009"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.2009"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.2009"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"* } undef, %"struct.WTF::KeyValuePair.2009"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"* } %79, %"struct.WTF::KeyValuePair.2009"* %78, 1
  ret { %"struct.WTF::KeyValuePair.2009"*, %"struct.WTF::KeyValuePair.2009"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E5eraseEPKSM_(%"class.WTF::HashTable.2006"*, %"struct.WTF::KeyValuePair.2009"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::HashMap.2013"*, %"class.WTF::HashMap.2013"** %3, align 8
  store %"class.WTF::HashMap.2013"* null, %"class.WTF::HashMap.2013"** %3, align 8
  %5 = icmp eq %"class.WTF::HashMap.2013"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.WTF::HashMap.2013"* %4 to %"class.WTF::ConditionalDestructor.2015"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS2_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.2015"* nonnull %7) #10
  %8 = bitcast %"class.WTF::HashMap.2013"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %8) #10
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.2009", %"struct.WTF::KeyValuePair.2009"* %1, i64 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -1 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %10, align 8
  %11 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, 1
  %14 = and i32 %13, 2147483647
  %15 = and i32 %12, -2147483648
  %16 = or i32 %14, %15
  store i32 %16, i32* %11, align 8
  %17 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, -1
  store i32 %19, i32* %17, align 4
  %20 = mul i32 %19, 6
  %21 = getelementptr inbounds %"class.WTF::HashTable.2006", %"class.WTF::HashTable.2006"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp ult i32 %20, %22
  %24 = icmp ugt i32 %22, 8
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %33

26:                                               ; preds = %9
  %27 = lshr i32 %22, 1
  %28 = zext i32 %27 to i64
  %29 = shl nuw nsw i64 %28, 4
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([555 x i8], [555 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectENSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS2_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEEEEPKcv, i64 0, i64 0)) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %30, i8 0, i64 %29, i1 false) #10
  %31 = bitcast i8* %30 to %"struct.WTF::KeyValuePair.2009"*
  %32 = tail call %"struct.WTF::KeyValuePair.2009"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_7HashMapINS_12AtomicStringE13scoped_refptrINS1_11CounterNodeEENS_16AtomicStringHashENS_10HashTraitsIS9_EENSE_ISC_EENS_18PartitionAllocatorEEENS6_14default_deleteISI_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINSE_IS4_EENSE_ISL_EEEESR_SH_E8RehashToEPSM_jSV_(%"class.WTF::HashTable.2006"* %0, %"struct.WTF::KeyValuePair.2009"* %31, i32 %27, %"struct.WTF::KeyValuePair.2009"* null) #10
  br label %33

33:                                               ; preds = %26, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.2014"*, %"struct.WTF::KeyValuePair.2017"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.blink::CounterNode"*, %"class.blink::CounterNode"** %3, align 8
  %5 = icmp eq %"class.blink::CounterNode"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #10
  %8 = getelementptr inbounds %"class.blink::CounterNode", %"class.blink::CounterNode"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN5blink11CounterNodeD1Ev(%"class.blink::CounterNode"* nonnull %4) #10
  %12 = bitcast %"class.blink::CounterNode"* %4 to i8*
  tail call void @free(i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6, %2
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.2017", %"struct.WTF::KeyValuePair.2017"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #10
  br label %30

30:                                               ; preds = %13, %26, %29
  %31 = bitcast %"struct.WTF::KeyValuePair.2017"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  %35 = and i32 %34, 2147483647
  %36 = and i32 %33, -2147483648
  %37 = or i32 %35, %36
  store i32 %37, i32* %32, align 8
  %38 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, -1
  store i32 %40, i32* %38, align 4
  %41 = mul i32 %40, 6
  %42 = getelementptr inbounds %"class.WTF::HashTable.2014", %"class.WTF::HashTable.2014"* %0, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp ult i32 %41, %43
  %45 = icmp ugt i32 %43, 8
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %54

47:                                               ; preds = %30
  %48 = lshr i32 %43, 1
  %49 = zext i32 %48 to i64
  %50 = shl nuw nsw i64 %49, 4
  %51 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %50, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringE13scoped_refptrIN5blink11CounterNodeEEEEEEPKcv, i64 0, i64 0)) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %51, i8 0, i64 %50, i1 false) #10
  %52 = bitcast i8* %51 to %"struct.WTF::KeyValuePair.2017"*
  %53 = tail call %"struct.WTF::KeyValuePair.2017"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink11CounterNodeEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.2014"* %0, %"struct.WTF::KeyValuePair.2017"* %52, i32 %48, %"struct.WTF::KeyValuePair.2017"* null) #10
  br label %54

54:                                               ; preds = %47, %30
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
