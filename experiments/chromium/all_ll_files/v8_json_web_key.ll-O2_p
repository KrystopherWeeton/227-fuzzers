; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_json_web_key.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_json_web_key.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.89", i32, [4 x i8], %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.241", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.259", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.266", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.205", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__cxx_atomic_impl.128" }
%"struct.std::__1::__cxx_atomic_impl.128" = type { %"struct.std::__1::__cxx_atomic_base_impl.129" }
%"struct.std::__1::__cxx_atomic_base_impl.129" = type { i64 }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::Worklist.136"* }
%"class.blink::Worklist.136" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::Worklist.143"* }
%"class.blink::Worklist.143" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::Worklist.150"* }
%"class.blink::Worklist.150" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::Worklist.157"* }
%"class.blink::Worklist.157" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::Worklist.164"* }
%"class.blink::Worklist.164" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::Worklist.171"* }
%"class.blink::Worklist.171" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::Worklist.178"* }
%"class.blink::Worklist.178" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.125" }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.185", %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.197", %"class.std::__1::__compressed_pair.199", [4 x i8] }>
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187", %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { i64 }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { float }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.208", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.217" }
%"class.WTF::Vector.217" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219" }
%"class.WTF::VectorBufferBase.219" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.233" }
%"class.WTF::VectorBuffer.233" = type { %"class.WTF::VectorBufferBase.234" }
%"class.WTF::VectorBufferBase.234" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.247" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.136"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.143"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.150"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.157"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.164"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.300" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.265 }
%class.scoped_refptr.265 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.266" = type { %"struct.std::__1::__atomic_base.267" }
%"struct.std::__1::__atomic_base.267" = type { %"struct.std::__1::__cxx_atomic_impl.268" }
%"struct.std::__1::__cxx_atomic_impl.268" = type { %"struct.std::__1::__cxx_atomic_base_impl.269" }
%"struct.std::__1::__cxx_atomic_base_impl.269" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.371" }
%"struct.std::__1::atomic.371" = type { %"struct.std::__1::__atomic_base.372" }
%"struct.std::__1::__atomic_base.372" = type { %"struct.std::__1::__atomic_base.373" }
%"struct.std::__1::__atomic_base.373" = type { %"struct.std::__1::__cxx_atomic_impl.374" }
%"struct.std::__1::__cxx_atomic_impl.374" = type { %"struct.std::__1::__cxx_atomic_base_impl.375" }
%"struct.std::__1::__cxx_atomic_base_impl.375" = type { i32 }
%"class.v8::Value" = type { i8 }
%"class.blink::JsonWebKey" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::String", %"class.WTF::Vector", %"class.WTF::String", %"class.WTF::String", %"class.blink::HeapVector", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.3" }
%"class.WTF::Vector.3" = type { %"class.WTF::VectorBuffer.4" }
%"class.WTF::VectorBuffer.4" = type { %"class.WTF::VectorBufferBase.5" }
%"class.WTF::VectorBufferBase.5" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::RsaOtherPrimesInfo"* }
%"class.blink::RsaOtherPrimesInfo" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.33", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.83", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.270", %"class.std::__1::unique_ptr.275", %"class.blink::Persistent.281", %"class.blink::Persistent.285", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.15", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", i32, i32 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.33" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ %"struct.WTF::KeyValuePair.37"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.37" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.46", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.41", i8* }
%"class.WTF::HashMap.41" = type { %"class.WTF::HashTable.42" }
%"class.WTF::HashTable.42" = type <{ %"struct.WTF::KeyValuePair.45"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.45" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.46" = type { %"class.v8::PersistentValueMapBase.47" }
%"class.v8::PersistentValueMapBase.47" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.48", i8* }
%"class.WTF::HashMap.48" = type { %"class.WTF::HashTable.49" }
%"class.WTF::HashTable.49" = type <{ %"struct.WTF::KeyValuePair.52"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.52" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.53" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.67", %"class.WTF::Vector.73", i8, i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.WTF::Vector.59"* }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.61", [32 x i8] }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.307, %"class.blink::Member.326", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.307 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.308", i32, i32, %"class.blink::Persistent.310" }
%"class.WTF::RefCounted.308" = type { %"class.base::RefCounted.309" }
%"class.base::RefCounted.309" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.310" = type { %"class.blink::PersistentBase.311" }
%"class.blink::PersistentBase.311" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.316" }
%"class.WTF::HashMap.316" = type { %"class.WTF::HashTable.317" }
%"class.WTF::HashTable.317" = type <{ %"struct.WTF::KeyValuePair.319"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.319" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.323" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.323" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.323" = type { %"class.v8::TracedReference.324" }
%"class.v8::TracedReference.324" = type { %"class.v8::BasicTracedReference.325" }
%"class.v8::BasicTracedReference.325" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.270" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272" }
%"class.WTF::VectorBufferBase.272" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.281" = type { %"class.blink::PersistentBase.282" }
%"class.blink::PersistentBase.282" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.285" = type { %"class.blink::PersistentBase.286" }
%"class.blink::PersistentBase.286" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.289", i64 }
%"class.blink::HeapVector.289" = type { %"class.WTF::Vector.292" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.blink::UntracedMember", %"class.blink::Member.297" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.296" }
%"class.blink::MemberBase.296" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.297" = type { %"class.blink::MemberBase.298" }
%"class.blink::MemberBase.298" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.328" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::String" = type { i8 }
%"class.v8::Boolean" = type { i8 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.7", %"class.v8::Local", %"class.v8::Local.12", %"class.v8::Local.12", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.7" = type { %"class.v8::Object"* }
%"class.v8::Local.12" = type { %"class.v8::String"* }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.376 }
%union.anon.376 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18RsaOtherPrimesInfoEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18RsaOtherPrimesInfoEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18RsaOtherPrimesInfoEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18RsaOtherPrimesInfoEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_18RsaOtherPrimesInfoEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18RsaOtherPrimesInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18RsaOtherPrimesInfoEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18RsaOtherPrimesInfoEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_18RsaOtherPrimesInfoEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blinkL23eternalV8JsonWebKeyKeysEPN2v87IsolateEE5kKeys = internal constant [18 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [4 x i8] c"alg\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"crv\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"dp\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"dq\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"ext\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"k\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"key_ops\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"kty\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"oth\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"qi\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"use\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 18, i8** getelementptr inbounds ([18 x i8*], [18 x i8*]* @_ZZN5blinkL23eternalV8JsonWebKeyKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.20 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.21 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.22 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.23 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.24 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.25 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.26 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.27 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.28 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.29 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.31 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18RsaOtherPrimesInfoEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [177 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::RsaOtherPrimesInfo>, WTF::VectorTraits<blink::Member<blink::RsaOtherPrimesInfo> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12V8JsonWebKey6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_10JsonWebKeyERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::JsonWebKey"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.blink::V8StringResource", align 8
  %7 = alloca %"class.blink::V8StringResource", align 8
  %8 = alloca %"class.blink::V8StringResource", align 8
  %9 = alloca %"class.blink::V8StringResource", align 8
  %10 = alloca %"class.blink::V8StringResource", align 8
  %11 = alloca %"class.blink::V8StringResource", align 8
  %12 = alloca %"class.blink::V8StringResource", align 8
  %13 = alloca %"class.WTF::Vector", align 8
  %14 = alloca %"class.blink::V8StringResource", align 8
  %15 = alloca %"class.blink::V8StringResource", align 8
  %16 = alloca %"class.blink::HeapVector", align 8
  %17 = alloca %"class.blink::V8StringResource", align 8
  %18 = alloca %"class.blink::V8StringResource", align 8
  %19 = alloca %"class.blink::V8StringResource", align 8
  %20 = alloca %"class.blink::V8StringResource", align 8
  %21 = alloca %"class.blink::V8StringResource", align 8
  %22 = alloca %"class.blink::V8StringResource", align 8
  %23 = icmp eq %"class.v8::Value"* %1, null
  br i1 %23, label %2875, label %24

24:                                               ; preds = %4
  %25 = bitcast %"class.v8::Value"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 3
  %28 = icmp eq i64 %27, 1
  br i1 %28, label %29, label %45

29:                                               ; preds = %24
  %30 = add i64 %26, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i64 %26, -4294967296
  %34 = zext i32 %32 to i64
  %35 = or i64 %33, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load i16, i16* %37, align 2
  %39 = icmp eq i16 %38, 67
  br i1 %39, label %40, label %45

40:                                               ; preds = %29
  %41 = add i64 %26, 23
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = ashr i32 %43, 1
  switch i32 %44, label %45 [
    i32 5, label %2875
    i32 3, label %2875
  ]

45:                                               ; preds = %40, %29, %24
  %46 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #8
  br i1 %46, label %48, label %47

47:                                               ; preds = %45
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #8
  br label %2875

48:                                               ; preds = %45
  %49 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %50 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to %"class.blink::V8PerIsolateData"**
  %53 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %52, align 8
  %54 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %53, i8* bitcast ([18 x i8*]* @_ZZN5blinkL23eternalV8JsonWebKeyKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.328"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.328"*)) #8
  %55 = extractvalue { i64, %"class.v8::Eternal"* } %54, 1
  %56 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %56) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #8
  %57 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #8
  %58 = bitcast %"class.v8::Eternal"* %55 to %"class.v8::Value"**
  %59 = load %"class.v8::Value"*, %"class.v8::Value"** %58, align 8
  %60 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %59) #8
  %61 = icmp eq %"class.v8::Value"* %60, null
  br i1 %61, label %62, label %68

62:                                               ; preds = %48
  %63 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %64 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %65 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %65, i64 5
  %67 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %66, align 8
  call void %67(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %63) #8
  br label %2874

68:                                               ; preds = %48
  %69 = bitcast %"class.v8::Value"* %60 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 1
  br i1 %72, label %73, label %90

73:                                               ; preds = %68
  %74 = add i64 %70, -1
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = and i64 %70, -4294967296
  %78 = zext i32 %76 to i64
  %79 = or i64 %77, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load i16, i16* %81, align 2
  %83 = icmp eq i16 %82, 67
  br i1 %83, label %84, label %90

84:                                               ; preds = %73
  %85 = add i64 %70, 23
  %86 = inttoptr i64 %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, -2
  %89 = icmp eq i32 %88, 10
  br i1 %89, label %230, label %90

90:                                               ; preds = %73, %68, %84
  %91 = bitcast %"class.blink::V8StringResource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %91) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 152, i1 false)
  %92 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %60, %"class.v8::Value"** %92, align 8
  %93 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 1
  store i32 0, i32* %93, align 8
  %94 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %94, align 8
  %95 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1
  %96 = bitcast %"class.std::__1::unique_ptr"* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %6, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %97, label %98, label %208

98:                                               ; preds = %90
  %99 = load %"class.v8::Value"*, %"class.v8::Value"** %92, align 8
  %100 = icmp eq %"class.v8::Value"* %99, null
  br i1 %100, label %101, label %125, !prof !2

101:                                              ; preds = %98
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 4
  br label %150

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %123

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i33
  %115 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %114, i33 1) #8
  %116 = extractvalue { i33, i1 } %115, 1
  %117 = extractvalue { i33, i1 } %115, 0
  %118 = icmp slt i33 %117, 0
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %121, !prof !2

120:                                              ; preds = %111
  call void @llvm.trap() #8
  unreachable

121:                                              ; preds = %111
  %122 = trunc i33 %117 to i32
  store i32 %122, i32* %112, align 4
  br label %123

123:                                              ; preds = %106, %121
  %124 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 4
  br label %131

125:                                              ; preds = %98
  %126 = bitcast %"class.v8::Value"* %99 to %"class.v8::String"*
  %127 = load i32, i32* %93, align 8
  %128 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %126, i32 %127) #8
  %129 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 4
  %130 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %130, label %150, label %131

131:                                              ; preds = %123, %125
  %132 = phi %"class.WTF::String"* [ %124, %123 ], [ %129, %125 ]
  %133 = phi %"class.WTF::StringImpl"* [ %102, %123 ], [ %128, %125 ]
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i33
  %142 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #8
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !2

147:                                              ; preds = %138
  call void @llvm.trap() #8
  unreachable

148:                                              ; preds = %138
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %139, align 4
  br label %150

150:                                              ; preds = %104, %148, %131, %125
  %151 = phi i1 [ false, %148 ], [ false, %131 ], [ true, %125 ], [ true, %104 ]
  %152 = phi %"class.WTF::String"* [ %132, %148 ], [ %132, %131 ], [ %129, %125 ], [ %105, %104 ]
  %153 = phi %"class.WTF::StringImpl"* [ %133, %148 ], [ %133, %131 ], [ null, %125 ], [ null, %104 ]
  %154 = ptrtoint %"class.WTF::StringImpl"* %153 to i64
  %155 = bitcast %"class.WTF::String"* %152 to i64*
  %156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %152, i64 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  store i64 %154, i64* %155, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %150
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #8
  br label %172

172:                                              ; preds = %150, %168, %171
  br i1 %151, label %186, label %173

173:                                              ; preds = %172
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #8
  br label %186

186:                                              ; preds = %172, %182, %185
  %187 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  store i8* null, i8** %187, align 8
  %189 = icmp eq i8* %188, null
  br i1 %189, label %191, label %190

190:                                              ; preds = %186
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %188) #8
  br label %191

191:                                              ; preds = %190, %186
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #8
  br label %207

207:                                              ; preds = %191, %203, %206
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %91) #8
  br label %230

208:                                              ; preds = %90
  %209 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %210 = load i8*, i8** %209, align 8
  store i8* null, i8** %209, align 8
  %211 = icmp eq i8* %210, null
  br i1 %211, label %213, label %212

212:                                              ; preds = %208
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %210) #8
  br label %213

213:                                              ; preds = %212, %208
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  br i1 %220, label %223, label %225

223:                                              ; preds = %216
  %224 = add i32 %222, -1
  store i32 %224, i32* %221, align 4
  br label %225

225:                                              ; preds = %223, %216
  %226 = phi i32 [ %224, %223 ], [ %222, %216 ]
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %225
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %214) #8
  br label %229

229:                                              ; preds = %213, %225, %228
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %91) #8
  br label %2874

230:                                              ; preds = %207, %84
  %231 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 1, i32 0
  %232 = bitcast %"class.v8::Name"** %231 to %"class.v8::Value"**
  %233 = load %"class.v8::Value"*, %"class.v8::Value"** %232, align 8
  %234 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %233) #8
  %235 = icmp eq %"class.v8::Value"* %234, null
  br i1 %235, label %236, label %242

236:                                              ; preds = %230
  %237 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %238 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %239 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %238, align 8
  %240 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %239, i64 5
  %241 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %240, align 8
  call void %241(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %237) #8
  br label %2874

242:                                              ; preds = %230
  %243 = bitcast %"class.v8::Value"* %234 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = and i64 %244, 3
  %246 = icmp eq i64 %245, 1
  br i1 %246, label %247, label %264

247:                                              ; preds = %242
  %248 = add i64 %244, -1
  %249 = inttoptr i64 %248 to i32*
  %250 = load i32, i32* %249, align 4
  %251 = and i64 %244, -4294967296
  %252 = zext i32 %250 to i64
  %253 = or i64 %251, %252
  %254 = add i64 %253, 7
  %255 = inttoptr i64 %254 to i16*
  %256 = load i16, i16* %255, align 2
  %257 = icmp eq i16 %256, 67
  br i1 %257, label %258, label %264

258:                                              ; preds = %247
  %259 = add i64 %244, 23
  %260 = inttoptr i64 %259 to i32*
  %261 = load i32, i32* %260, align 4
  %262 = and i32 %261, -2
  %263 = icmp eq i32 %262, 10
  br i1 %263, label %404, label %264

264:                                              ; preds = %247, %242, %258
  %265 = bitcast %"class.blink::V8StringResource"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %265) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %265, i8 -86, i64 152, i1 false)
  %266 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %234, %"class.v8::Value"** %266, align 8
  %267 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 1
  store i32 0, i32* %267, align 8
  %268 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %268, align 8
  %269 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1
  %270 = bitcast %"class.std::__1::unique_ptr"* %269 to i64*
  store i64 0, i64* %270, align 8
  %271 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %7, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %271, label %272, label %382

272:                                              ; preds = %264
  %273 = load %"class.v8::Value"*, %"class.v8::Value"** %266, align 8
  %274 = icmp eq %"class.v8::Value"* %273, null
  br i1 %274, label %275, label %299, !prof !2

275:                                              ; preds = %272
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %278, label %280

278:                                              ; preds = %275
  %279 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 5
  br label %324

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %297

285:                                              ; preds = %280
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  %288 = zext i32 %287 to i33
  %289 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %288, i33 1) #8
  %290 = extractvalue { i33, i1 } %289, 1
  %291 = extractvalue { i33, i1 } %289, 0
  %292 = icmp slt i33 %291, 0
  %293 = or i1 %290, %292
  br i1 %293, label %294, label %295, !prof !2

294:                                              ; preds = %285
  call void @llvm.trap() #8
  unreachable

295:                                              ; preds = %285
  %296 = trunc i33 %291 to i32
  store i32 %296, i32* %286, align 4
  br label %297

297:                                              ; preds = %280, %295
  %298 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 5
  br label %305

299:                                              ; preds = %272
  %300 = bitcast %"class.v8::Value"* %273 to %"class.v8::String"*
  %301 = load i32, i32* %267, align 8
  %302 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %300, i32 %301) #8
  %303 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 5
  %304 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %304, label %324, label %305

305:                                              ; preds = %297, %299
  %306 = phi %"class.WTF::String"* [ %298, %297 ], [ %303, %299 ]
  %307 = phi %"class.WTF::StringImpl"* [ %276, %297 ], [ %302, %299 ]
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load atomic i32, i32* %308 monotonic, align 4
  %310 = and i32 %309, 2
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %324

312:                                              ; preds = %305
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 0
  %314 = load i32, i32* %313, align 4
  %315 = zext i32 %314 to i33
  %316 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %315, i33 1) #8
  %317 = extractvalue { i33, i1 } %316, 1
  %318 = extractvalue { i33, i1 } %316, 0
  %319 = icmp slt i33 %318, 0
  %320 = or i1 %317, %319
  br i1 %320, label %321, label %322, !prof !2

321:                                              ; preds = %312
  call void @llvm.trap() #8
  unreachable

322:                                              ; preds = %312
  %323 = trunc i33 %318 to i32
  store i32 %323, i32* %313, align 4
  br label %324

324:                                              ; preds = %278, %322, %305, %299
  %325 = phi i1 [ false, %322 ], [ false, %305 ], [ true, %299 ], [ true, %278 ]
  %326 = phi %"class.WTF::String"* [ %306, %322 ], [ %306, %305 ], [ %303, %299 ], [ %279, %278 ]
  %327 = phi %"class.WTF::StringImpl"* [ %307, %322 ], [ %307, %305 ], [ null, %299 ], [ null, %278 ]
  %328 = ptrtoint %"class.WTF::StringImpl"* %327 to i64
  %329 = bitcast %"class.WTF::String"* %326 to i64*
  %330 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %326, i64 0, i32 0, i32 0
  %331 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %330, align 8
  store i64 %328, i64* %329, align 8
  %332 = icmp eq %"class.WTF::StringImpl"* %331, null
  br i1 %332, label %346, label %333

333:                                              ; preds = %324
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  br i1 %337, label %340, label %342

340:                                              ; preds = %333
  %341 = add i32 %339, -1
  store i32 %341, i32* %338, align 4
  br label %342

342:                                              ; preds = %340, %333
  %343 = phi i32 [ %341, %340 ], [ %339, %333 ]
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %342
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %331) #8
  br label %346

346:                                              ; preds = %324, %342, %345
  br i1 %325, label %360, label %347

347:                                              ; preds = %346
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load atomic i32, i32* %348 monotonic, align 4
  %350 = and i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 0
  %353 = load i32, i32* %352, align 4
  br i1 %351, label %354, label %356

354:                                              ; preds = %347
  %355 = add i32 %353, -1
  store i32 %355, i32* %352, align 4
  br label %356

356:                                              ; preds = %354, %347
  %357 = phi i32 [ %355, %354 ], [ %353, %347 ]
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %360

359:                                              ; preds = %356
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %327) #8
  br label %360

360:                                              ; preds = %346, %356, %359
  %361 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %362 = load i8*, i8** %361, align 8
  store i8* null, i8** %361, align 8
  %363 = icmp eq i8* %362, null
  br i1 %363, label %365, label %364

364:                                              ; preds = %360
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %362) #8
  br label %365

365:                                              ; preds = %364, %360
  %366 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %367 = icmp eq %"class.WTF::StringImpl"* %366, null
  br i1 %367, label %381, label %368

368:                                              ; preds = %365
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %366, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = load atomic i32, i32* %369 monotonic, align 4
  %371 = and i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %366, i64 0, i32 0
  %374 = load i32, i32* %373, align 4
  br i1 %372, label %375, label %377

375:                                              ; preds = %368
  %376 = add i32 %374, -1
  store i32 %376, i32* %373, align 4
  br label %377

377:                                              ; preds = %375, %368
  %378 = phi i32 [ %376, %375 ], [ %374, %368 ]
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %381

380:                                              ; preds = %377
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %366) #8
  br label %381

381:                                              ; preds = %365, %377, %380
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %265) #8
  br label %404

382:                                              ; preds = %264
  %383 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %384 = load i8*, i8** %383, align 8
  store i8* null, i8** %383, align 8
  %385 = icmp eq i8* %384, null
  br i1 %385, label %387, label %386

386:                                              ; preds = %382
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %384) #8
  br label %387

387:                                              ; preds = %386, %382
  %388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %389 = icmp eq %"class.WTF::StringImpl"* %388, null
  br i1 %389, label %403, label %390

390:                                              ; preds = %387
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = and i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  br i1 %394, label %397, label %399

397:                                              ; preds = %390
  %398 = add i32 %396, -1
  store i32 %398, i32* %395, align 4
  br label %399

399:                                              ; preds = %397, %390
  %400 = phi i32 [ %398, %397 ], [ %396, %390 ]
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %403

402:                                              ; preds = %399
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %388) #8
  br label %403

403:                                              ; preds = %387, %399, %402
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %265) #8
  br label %2874

404:                                              ; preds = %381, %258
  %405 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 2, i32 0
  %406 = bitcast %"class.v8::Name"** %405 to %"class.v8::Value"**
  %407 = load %"class.v8::Value"*, %"class.v8::Value"** %406, align 8
  %408 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %407) #8
  %409 = icmp eq %"class.v8::Value"* %408, null
  br i1 %409, label %410, label %416

410:                                              ; preds = %404
  %411 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %412 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %413 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %412, align 8
  %414 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %413, i64 5
  %415 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %414, align 8
  call void %415(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %411) #8
  br label %2874

416:                                              ; preds = %404
  %417 = bitcast %"class.v8::Value"* %408 to i64*
  %418 = load i64, i64* %417, align 8
  %419 = and i64 %418, 3
  %420 = icmp eq i64 %419, 1
  br i1 %420, label %421, label %438

421:                                              ; preds = %416
  %422 = add i64 %418, -1
  %423 = inttoptr i64 %422 to i32*
  %424 = load i32, i32* %423, align 4
  %425 = and i64 %418, -4294967296
  %426 = zext i32 %424 to i64
  %427 = or i64 %425, %426
  %428 = add i64 %427, 7
  %429 = inttoptr i64 %428 to i16*
  %430 = load i16, i16* %429, align 2
  %431 = icmp eq i16 %430, 67
  br i1 %431, label %432, label %438

432:                                              ; preds = %421
  %433 = add i64 %418, 23
  %434 = inttoptr i64 %433 to i32*
  %435 = load i32, i32* %434, align 4
  %436 = and i32 %435, -2
  %437 = icmp eq i32 %436, 10
  br i1 %437, label %578, label %438

438:                                              ; preds = %421, %416, %432
  %439 = bitcast %"class.blink::V8StringResource"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %439) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %439, i8 -86, i64 152, i1 false)
  %440 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %408, %"class.v8::Value"** %440, align 8
  %441 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 1
  store i32 0, i32* %441, align 8
  %442 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %442, align 8
  %443 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1
  %444 = bitcast %"class.std::__1::unique_ptr"* %443 to i64*
  store i64 0, i64* %444, align 8
  %445 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %445, label %446, label %556

446:                                              ; preds = %438
  %447 = load %"class.v8::Value"*, %"class.v8::Value"** %440, align 8
  %448 = icmp eq %"class.v8::Value"* %447, null
  br i1 %448, label %449, label %473, !prof !2

449:                                              ; preds = %446
  %450 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %442, align 8
  %451 = icmp eq %"class.WTF::StringImpl"* %450, null
  br i1 %451, label %452, label %454

452:                                              ; preds = %449
  %453 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 6
  br label %498

454:                                              ; preds = %449
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4
  %457 = and i32 %456, 2
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %471

459:                                              ; preds = %454
  %460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 0
  %461 = load i32, i32* %460, align 4
  %462 = zext i32 %461 to i33
  %463 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %462, i33 1) #8
  %464 = extractvalue { i33, i1 } %463, 1
  %465 = extractvalue { i33, i1 } %463, 0
  %466 = icmp slt i33 %465, 0
  %467 = or i1 %464, %466
  br i1 %467, label %468, label %469, !prof !2

468:                                              ; preds = %459
  call void @llvm.trap() #8
  unreachable

469:                                              ; preds = %459
  %470 = trunc i33 %465 to i32
  store i32 %470, i32* %460, align 4
  br label %471

471:                                              ; preds = %454, %469
  %472 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 6
  br label %479

473:                                              ; preds = %446
  %474 = bitcast %"class.v8::Value"* %447 to %"class.v8::String"*
  %475 = load i32, i32* %441, align 8
  %476 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %474, i32 %475) #8
  %477 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 6
  %478 = icmp eq %"class.WTF::StringImpl"* %476, null
  br i1 %478, label %498, label %479

479:                                              ; preds = %471, %473
  %480 = phi %"class.WTF::String"* [ %472, %471 ], [ %477, %473 ]
  %481 = phi %"class.WTF::StringImpl"* [ %450, %471 ], [ %476, %473 ]
  %482 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %483 = load atomic i32, i32* %482 monotonic, align 4
  %484 = and i32 %483, 2
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %486, label %498

486:                                              ; preds = %479
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %481, i64 0, i32 0
  %488 = load i32, i32* %487, align 4
  %489 = zext i32 %488 to i33
  %490 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %489, i33 1) #8
  %491 = extractvalue { i33, i1 } %490, 1
  %492 = extractvalue { i33, i1 } %490, 0
  %493 = icmp slt i33 %492, 0
  %494 = or i1 %491, %493
  br i1 %494, label %495, label %496, !prof !2

495:                                              ; preds = %486
  call void @llvm.trap() #8
  unreachable

496:                                              ; preds = %486
  %497 = trunc i33 %492 to i32
  store i32 %497, i32* %487, align 4
  br label %498

498:                                              ; preds = %452, %496, %479, %473
  %499 = phi i1 [ false, %496 ], [ false, %479 ], [ true, %473 ], [ true, %452 ]
  %500 = phi %"class.WTF::String"* [ %480, %496 ], [ %480, %479 ], [ %477, %473 ], [ %453, %452 ]
  %501 = phi %"class.WTF::StringImpl"* [ %481, %496 ], [ %481, %479 ], [ null, %473 ], [ null, %452 ]
  %502 = ptrtoint %"class.WTF::StringImpl"* %501 to i64
  %503 = bitcast %"class.WTF::String"* %500 to i64*
  %504 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %500, i64 0, i32 0, i32 0
  %505 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %504, align 8
  store i64 %502, i64* %503, align 8
  %506 = icmp eq %"class.WTF::StringImpl"* %505, null
  br i1 %506, label %520, label %507

507:                                              ; preds = %498
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %505, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = load atomic i32, i32* %508 monotonic, align 4
  %510 = and i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %505, i64 0, i32 0
  %513 = load i32, i32* %512, align 4
  br i1 %511, label %514, label %516

514:                                              ; preds = %507
  %515 = add i32 %513, -1
  store i32 %515, i32* %512, align 4
  br label %516

516:                                              ; preds = %514, %507
  %517 = phi i32 [ %515, %514 ], [ %513, %507 ]
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %519, label %520

519:                                              ; preds = %516
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %505) #8
  br label %520

520:                                              ; preds = %498, %516, %519
  br i1 %499, label %534, label %521

521:                                              ; preds = %520
  %522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %523 = load atomic i32, i32* %522 monotonic, align 4
  %524 = and i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 0
  %527 = load i32, i32* %526, align 4
  br i1 %525, label %528, label %530

528:                                              ; preds = %521
  %529 = add i32 %527, -1
  store i32 %529, i32* %526, align 4
  br label %530

530:                                              ; preds = %528, %521
  %531 = phi i32 [ %529, %528 ], [ %527, %521 ]
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %534

533:                                              ; preds = %530
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %501) #8
  br label %534

534:                                              ; preds = %520, %530, %533
  %535 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %536 = load i8*, i8** %535, align 8
  store i8* null, i8** %535, align 8
  %537 = icmp eq i8* %536, null
  br i1 %537, label %539, label %538

538:                                              ; preds = %534
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %536) #8
  br label %539

539:                                              ; preds = %538, %534
  %540 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %442, align 8
  %541 = icmp eq %"class.WTF::StringImpl"* %540, null
  br i1 %541, label %555, label %542

542:                                              ; preds = %539
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %540, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = load atomic i32, i32* %543 monotonic, align 4
  %545 = and i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %540, i64 0, i32 0
  %548 = load i32, i32* %547, align 4
  br i1 %546, label %549, label %551

549:                                              ; preds = %542
  %550 = add i32 %548, -1
  store i32 %550, i32* %547, align 4
  br label %551

551:                                              ; preds = %549, %542
  %552 = phi i32 [ %550, %549 ], [ %548, %542 ]
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %554, label %555

554:                                              ; preds = %551
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %540) #8
  br label %555

555:                                              ; preds = %539, %551, %554
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %439) #8
  br label %578

556:                                              ; preds = %438
  %557 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %558 = load i8*, i8** %557, align 8
  store i8* null, i8** %557, align 8
  %559 = icmp eq i8* %558, null
  br i1 %559, label %561, label %560

560:                                              ; preds = %556
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %558) #8
  br label %561

561:                                              ; preds = %560, %556
  %562 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %442, align 8
  %563 = icmp eq %"class.WTF::StringImpl"* %562, null
  br i1 %563, label %577, label %564

564:                                              ; preds = %561
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %562, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = load atomic i32, i32* %565 monotonic, align 4
  %567 = and i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %562, i64 0, i32 0
  %570 = load i32, i32* %569, align 4
  br i1 %568, label %571, label %573

571:                                              ; preds = %564
  %572 = add i32 %570, -1
  store i32 %572, i32* %569, align 4
  br label %573

573:                                              ; preds = %571, %564
  %574 = phi i32 [ %572, %571 ], [ %570, %564 ]
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %577

576:                                              ; preds = %573
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %562) #8
  br label %577

577:                                              ; preds = %561, %573, %576
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %439) #8
  br label %2874

578:                                              ; preds = %555, %432
  %579 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 3, i32 0
  %580 = bitcast %"class.v8::Name"** %579 to %"class.v8::Value"**
  %581 = load %"class.v8::Value"*, %"class.v8::Value"** %580, align 8
  %582 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %581) #8
  %583 = icmp eq %"class.v8::Value"* %582, null
  br i1 %583, label %584, label %590

584:                                              ; preds = %578
  %585 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %586 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %587 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %586, align 8
  %588 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %587, i64 5
  %589 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %588, align 8
  call void %589(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %585) #8
  br label %2874

590:                                              ; preds = %578
  %591 = bitcast %"class.v8::Value"* %582 to i64*
  %592 = load i64, i64* %591, align 8
  %593 = and i64 %592, 3
  %594 = icmp eq i64 %593, 1
  br i1 %594, label %595, label %612

595:                                              ; preds = %590
  %596 = add i64 %592, -1
  %597 = inttoptr i64 %596 to i32*
  %598 = load i32, i32* %597, align 4
  %599 = and i64 %592, -4294967296
  %600 = zext i32 %598 to i64
  %601 = or i64 %599, %600
  %602 = add i64 %601, 7
  %603 = inttoptr i64 %602 to i16*
  %604 = load i16, i16* %603, align 2
  %605 = icmp eq i16 %604, 67
  br i1 %605, label %606, label %612

606:                                              ; preds = %595
  %607 = add i64 %592, 23
  %608 = inttoptr i64 %607 to i32*
  %609 = load i32, i32* %608, align 4
  %610 = and i32 %609, -2
  %611 = icmp eq i32 %610, 10
  br i1 %611, label %752, label %612

612:                                              ; preds = %595, %590, %606
  %613 = bitcast %"class.blink::V8StringResource"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %613) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %613, i8 -86, i64 152, i1 false)
  %614 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %582, %"class.v8::Value"** %614, align 8
  %615 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 1
  store i32 0, i32* %615, align 8
  %616 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %616, align 8
  %617 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1
  %618 = bitcast %"class.std::__1::unique_ptr"* %617 to i64*
  store i64 0, i64* %618, align 8
  %619 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %9, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %619, label %620, label %730

620:                                              ; preds = %612
  %621 = load %"class.v8::Value"*, %"class.v8::Value"** %614, align 8
  %622 = icmp eq %"class.v8::Value"* %621, null
  br i1 %622, label %623, label %647, !prof !2

623:                                              ; preds = %620
  %624 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %616, align 8
  %625 = icmp eq %"class.WTF::StringImpl"* %624, null
  br i1 %625, label %626, label %628

626:                                              ; preds = %623
  %627 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 7
  br label %672

628:                                              ; preds = %623
  %629 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %624, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %630 = load atomic i32, i32* %629 monotonic, align 4
  %631 = and i32 %630, 2
  %632 = icmp eq i32 %631, 0
  br i1 %632, label %633, label %645

633:                                              ; preds = %628
  %634 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %624, i64 0, i32 0
  %635 = load i32, i32* %634, align 4
  %636 = zext i32 %635 to i33
  %637 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %636, i33 1) #8
  %638 = extractvalue { i33, i1 } %637, 1
  %639 = extractvalue { i33, i1 } %637, 0
  %640 = icmp slt i33 %639, 0
  %641 = or i1 %638, %640
  br i1 %641, label %642, label %643, !prof !2

642:                                              ; preds = %633
  call void @llvm.trap() #8
  unreachable

643:                                              ; preds = %633
  %644 = trunc i33 %639 to i32
  store i32 %644, i32* %634, align 4
  br label %645

645:                                              ; preds = %628, %643
  %646 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 7
  br label %653

647:                                              ; preds = %620
  %648 = bitcast %"class.v8::Value"* %621 to %"class.v8::String"*
  %649 = load i32, i32* %615, align 8
  %650 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %648, i32 %649) #8
  %651 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 7
  %652 = icmp eq %"class.WTF::StringImpl"* %650, null
  br i1 %652, label %672, label %653

653:                                              ; preds = %645, %647
  %654 = phi %"class.WTF::String"* [ %646, %645 ], [ %651, %647 ]
  %655 = phi %"class.WTF::StringImpl"* [ %624, %645 ], [ %650, %647 ]
  %656 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %655, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %657 = load atomic i32, i32* %656 monotonic, align 4
  %658 = and i32 %657, 2
  %659 = icmp eq i32 %658, 0
  br i1 %659, label %660, label %672

660:                                              ; preds = %653
  %661 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %655, i64 0, i32 0
  %662 = load i32, i32* %661, align 4
  %663 = zext i32 %662 to i33
  %664 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %663, i33 1) #8
  %665 = extractvalue { i33, i1 } %664, 1
  %666 = extractvalue { i33, i1 } %664, 0
  %667 = icmp slt i33 %666, 0
  %668 = or i1 %665, %667
  br i1 %668, label %669, label %670, !prof !2

669:                                              ; preds = %660
  call void @llvm.trap() #8
  unreachable

670:                                              ; preds = %660
  %671 = trunc i33 %666 to i32
  store i32 %671, i32* %661, align 4
  br label %672

672:                                              ; preds = %626, %670, %653, %647
  %673 = phi i1 [ false, %670 ], [ false, %653 ], [ true, %647 ], [ true, %626 ]
  %674 = phi %"class.WTF::String"* [ %654, %670 ], [ %654, %653 ], [ %651, %647 ], [ %627, %626 ]
  %675 = phi %"class.WTF::StringImpl"* [ %655, %670 ], [ %655, %653 ], [ null, %647 ], [ null, %626 ]
  %676 = ptrtoint %"class.WTF::StringImpl"* %675 to i64
  %677 = bitcast %"class.WTF::String"* %674 to i64*
  %678 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %674, i64 0, i32 0, i32 0
  %679 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %678, align 8
  store i64 %676, i64* %677, align 8
  %680 = icmp eq %"class.WTF::StringImpl"* %679, null
  br i1 %680, label %694, label %681

681:                                              ; preds = %672
  %682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %679, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %683 = load atomic i32, i32* %682 monotonic, align 4
  %684 = and i32 %683, 2
  %685 = icmp eq i32 %684, 0
  %686 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %679, i64 0, i32 0
  %687 = load i32, i32* %686, align 4
  br i1 %685, label %688, label %690

688:                                              ; preds = %681
  %689 = add i32 %687, -1
  store i32 %689, i32* %686, align 4
  br label %690

690:                                              ; preds = %688, %681
  %691 = phi i32 [ %689, %688 ], [ %687, %681 ]
  %692 = icmp eq i32 %691, 0
  br i1 %692, label %693, label %694

693:                                              ; preds = %690
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %679) #8
  br label %694

694:                                              ; preds = %672, %690, %693
  br i1 %673, label %708, label %695

695:                                              ; preds = %694
  %696 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %697 = load atomic i32, i32* %696 monotonic, align 4
  %698 = and i32 %697, 2
  %699 = icmp eq i32 %698, 0
  %700 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 0
  %701 = load i32, i32* %700, align 4
  br i1 %699, label %702, label %704

702:                                              ; preds = %695
  %703 = add i32 %701, -1
  store i32 %703, i32* %700, align 4
  br label %704

704:                                              ; preds = %702, %695
  %705 = phi i32 [ %703, %702 ], [ %701, %695 ]
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %707, label %708

707:                                              ; preds = %704
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %675) #8
  br label %708

708:                                              ; preds = %694, %704, %707
  %709 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %710 = load i8*, i8** %709, align 8
  store i8* null, i8** %709, align 8
  %711 = icmp eq i8* %710, null
  br i1 %711, label %713, label %712

712:                                              ; preds = %708
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %710) #8
  br label %713

713:                                              ; preds = %712, %708
  %714 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %616, align 8
  %715 = icmp eq %"class.WTF::StringImpl"* %714, null
  br i1 %715, label %729, label %716

716:                                              ; preds = %713
  %717 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %714, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %718 = load atomic i32, i32* %717 monotonic, align 4
  %719 = and i32 %718, 2
  %720 = icmp eq i32 %719, 0
  %721 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %714, i64 0, i32 0
  %722 = load i32, i32* %721, align 4
  br i1 %720, label %723, label %725

723:                                              ; preds = %716
  %724 = add i32 %722, -1
  store i32 %724, i32* %721, align 4
  br label %725

725:                                              ; preds = %723, %716
  %726 = phi i32 [ %724, %723 ], [ %722, %716 ]
  %727 = icmp eq i32 %726, 0
  br i1 %727, label %728, label %729

728:                                              ; preds = %725
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %714) #8
  br label %729

729:                                              ; preds = %713, %725, %728
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %613) #8
  br label %752

730:                                              ; preds = %612
  %731 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %732 = load i8*, i8** %731, align 8
  store i8* null, i8** %731, align 8
  %733 = icmp eq i8* %732, null
  br i1 %733, label %735, label %734

734:                                              ; preds = %730
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %732) #8
  br label %735

735:                                              ; preds = %734, %730
  %736 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %616, align 8
  %737 = icmp eq %"class.WTF::StringImpl"* %736, null
  br i1 %737, label %751, label %738

738:                                              ; preds = %735
  %739 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %736, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %740 = load atomic i32, i32* %739 monotonic, align 4
  %741 = and i32 %740, 2
  %742 = icmp eq i32 %741, 0
  %743 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %736, i64 0, i32 0
  %744 = load i32, i32* %743, align 4
  br i1 %742, label %745, label %747

745:                                              ; preds = %738
  %746 = add i32 %744, -1
  store i32 %746, i32* %743, align 4
  br label %747

747:                                              ; preds = %745, %738
  %748 = phi i32 [ %746, %745 ], [ %744, %738 ]
  %749 = icmp eq i32 %748, 0
  br i1 %749, label %750, label %751

750:                                              ; preds = %747
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %736) #8
  br label %751

751:                                              ; preds = %735, %747, %750
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %613) #8
  br label %2874

752:                                              ; preds = %729, %606
  %753 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 4, i32 0
  %754 = bitcast %"class.v8::Name"** %753 to %"class.v8::Value"**
  %755 = load %"class.v8::Value"*, %"class.v8::Value"** %754, align 8
  %756 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %755) #8
  %757 = icmp eq %"class.v8::Value"* %756, null
  br i1 %757, label %758, label %764

758:                                              ; preds = %752
  %759 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %760 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %761 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %760, align 8
  %762 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %761, i64 5
  %763 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %762, align 8
  call void %763(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %759) #8
  br label %2874

764:                                              ; preds = %752
  %765 = bitcast %"class.v8::Value"* %756 to i64*
  %766 = load i64, i64* %765, align 8
  %767 = and i64 %766, 3
  %768 = icmp eq i64 %767, 1
  br i1 %768, label %769, label %786

769:                                              ; preds = %764
  %770 = add i64 %766, -1
  %771 = inttoptr i64 %770 to i32*
  %772 = load i32, i32* %771, align 4
  %773 = and i64 %766, -4294967296
  %774 = zext i32 %772 to i64
  %775 = or i64 %773, %774
  %776 = add i64 %775, 7
  %777 = inttoptr i64 %776 to i16*
  %778 = load i16, i16* %777, align 2
  %779 = icmp eq i16 %778, 67
  br i1 %779, label %780, label %786

780:                                              ; preds = %769
  %781 = add i64 %766, 23
  %782 = inttoptr i64 %781 to i32*
  %783 = load i32, i32* %782, align 4
  %784 = and i32 %783, -2
  %785 = icmp eq i32 %784, 10
  br i1 %785, label %926, label %786

786:                                              ; preds = %769, %764, %780
  %787 = bitcast %"class.blink::V8StringResource"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %787) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %787, i8 -86, i64 152, i1 false)
  %788 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %756, %"class.v8::Value"** %788, align 8
  %789 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 1
  store i32 0, i32* %789, align 8
  %790 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %790, align 8
  %791 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1
  %792 = bitcast %"class.std::__1::unique_ptr"* %791 to i64*
  store i64 0, i64* %792, align 8
  %793 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %10, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %793, label %794, label %904

794:                                              ; preds = %786
  %795 = load %"class.v8::Value"*, %"class.v8::Value"** %788, align 8
  %796 = icmp eq %"class.v8::Value"* %795, null
  br i1 %796, label %797, label %821, !prof !2

797:                                              ; preds = %794
  %798 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %790, align 8
  %799 = icmp eq %"class.WTF::StringImpl"* %798, null
  br i1 %799, label %800, label %802

800:                                              ; preds = %797
  %801 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 8
  br label %846

802:                                              ; preds = %797
  %803 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %798, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %804 = load atomic i32, i32* %803 monotonic, align 4
  %805 = and i32 %804, 2
  %806 = icmp eq i32 %805, 0
  br i1 %806, label %807, label %819

807:                                              ; preds = %802
  %808 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %798, i64 0, i32 0
  %809 = load i32, i32* %808, align 4
  %810 = zext i32 %809 to i33
  %811 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %810, i33 1) #8
  %812 = extractvalue { i33, i1 } %811, 1
  %813 = extractvalue { i33, i1 } %811, 0
  %814 = icmp slt i33 %813, 0
  %815 = or i1 %812, %814
  br i1 %815, label %816, label %817, !prof !2

816:                                              ; preds = %807
  call void @llvm.trap() #8
  unreachable

817:                                              ; preds = %807
  %818 = trunc i33 %813 to i32
  store i32 %818, i32* %808, align 4
  br label %819

819:                                              ; preds = %802, %817
  %820 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 8
  br label %827

821:                                              ; preds = %794
  %822 = bitcast %"class.v8::Value"* %795 to %"class.v8::String"*
  %823 = load i32, i32* %789, align 8
  %824 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %822, i32 %823) #8
  %825 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 8
  %826 = icmp eq %"class.WTF::StringImpl"* %824, null
  br i1 %826, label %846, label %827

827:                                              ; preds = %819, %821
  %828 = phi %"class.WTF::String"* [ %820, %819 ], [ %825, %821 ]
  %829 = phi %"class.WTF::StringImpl"* [ %798, %819 ], [ %824, %821 ]
  %830 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %829, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %831 = load atomic i32, i32* %830 monotonic, align 4
  %832 = and i32 %831, 2
  %833 = icmp eq i32 %832, 0
  br i1 %833, label %834, label %846

834:                                              ; preds = %827
  %835 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %829, i64 0, i32 0
  %836 = load i32, i32* %835, align 4
  %837 = zext i32 %836 to i33
  %838 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %837, i33 1) #8
  %839 = extractvalue { i33, i1 } %838, 1
  %840 = extractvalue { i33, i1 } %838, 0
  %841 = icmp slt i33 %840, 0
  %842 = or i1 %839, %841
  br i1 %842, label %843, label %844, !prof !2

843:                                              ; preds = %834
  call void @llvm.trap() #8
  unreachable

844:                                              ; preds = %834
  %845 = trunc i33 %840 to i32
  store i32 %845, i32* %835, align 4
  br label %846

846:                                              ; preds = %800, %844, %827, %821
  %847 = phi i1 [ false, %844 ], [ false, %827 ], [ true, %821 ], [ true, %800 ]
  %848 = phi %"class.WTF::String"* [ %828, %844 ], [ %828, %827 ], [ %825, %821 ], [ %801, %800 ]
  %849 = phi %"class.WTF::StringImpl"* [ %829, %844 ], [ %829, %827 ], [ null, %821 ], [ null, %800 ]
  %850 = ptrtoint %"class.WTF::StringImpl"* %849 to i64
  %851 = bitcast %"class.WTF::String"* %848 to i64*
  %852 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %848, i64 0, i32 0, i32 0
  %853 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %852, align 8
  store i64 %850, i64* %851, align 8
  %854 = icmp eq %"class.WTF::StringImpl"* %853, null
  br i1 %854, label %868, label %855

855:                                              ; preds = %846
  %856 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %853, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %857 = load atomic i32, i32* %856 monotonic, align 4
  %858 = and i32 %857, 2
  %859 = icmp eq i32 %858, 0
  %860 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %853, i64 0, i32 0
  %861 = load i32, i32* %860, align 4
  br i1 %859, label %862, label %864

862:                                              ; preds = %855
  %863 = add i32 %861, -1
  store i32 %863, i32* %860, align 4
  br label %864

864:                                              ; preds = %862, %855
  %865 = phi i32 [ %863, %862 ], [ %861, %855 ]
  %866 = icmp eq i32 %865, 0
  br i1 %866, label %867, label %868

867:                                              ; preds = %864
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %853) #8
  br label %868

868:                                              ; preds = %846, %864, %867
  br i1 %847, label %882, label %869

869:                                              ; preds = %868
  %870 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %849, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %871 = load atomic i32, i32* %870 monotonic, align 4
  %872 = and i32 %871, 2
  %873 = icmp eq i32 %872, 0
  %874 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %849, i64 0, i32 0
  %875 = load i32, i32* %874, align 4
  br i1 %873, label %876, label %878

876:                                              ; preds = %869
  %877 = add i32 %875, -1
  store i32 %877, i32* %874, align 4
  br label %878

878:                                              ; preds = %876, %869
  %879 = phi i32 [ %877, %876 ], [ %875, %869 ]
  %880 = icmp eq i32 %879, 0
  br i1 %880, label %881, label %882

881:                                              ; preds = %878
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %849) #8
  br label %882

882:                                              ; preds = %868, %878, %881
  %883 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %884 = load i8*, i8** %883, align 8
  store i8* null, i8** %883, align 8
  %885 = icmp eq i8* %884, null
  br i1 %885, label %887, label %886

886:                                              ; preds = %882
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %884) #8
  br label %887

887:                                              ; preds = %886, %882
  %888 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %790, align 8
  %889 = icmp eq %"class.WTF::StringImpl"* %888, null
  br i1 %889, label %903, label %890

890:                                              ; preds = %887
  %891 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %888, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %892 = load atomic i32, i32* %891 monotonic, align 4
  %893 = and i32 %892, 2
  %894 = icmp eq i32 %893, 0
  %895 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %888, i64 0, i32 0
  %896 = load i32, i32* %895, align 4
  br i1 %894, label %897, label %899

897:                                              ; preds = %890
  %898 = add i32 %896, -1
  store i32 %898, i32* %895, align 4
  br label %899

899:                                              ; preds = %897, %890
  %900 = phi i32 [ %898, %897 ], [ %896, %890 ]
  %901 = icmp eq i32 %900, 0
  br i1 %901, label %902, label %903

902:                                              ; preds = %899
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %888) #8
  br label %903

903:                                              ; preds = %887, %899, %902
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %787) #8
  br label %926

904:                                              ; preds = %786
  %905 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %906 = load i8*, i8** %905, align 8
  store i8* null, i8** %905, align 8
  %907 = icmp eq i8* %906, null
  br i1 %907, label %909, label %908

908:                                              ; preds = %904
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %906) #8
  br label %909

909:                                              ; preds = %908, %904
  %910 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %790, align 8
  %911 = icmp eq %"class.WTF::StringImpl"* %910, null
  br i1 %911, label %925, label %912

912:                                              ; preds = %909
  %913 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %910, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %914 = load atomic i32, i32* %913 monotonic, align 4
  %915 = and i32 %914, 2
  %916 = icmp eq i32 %915, 0
  %917 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %910, i64 0, i32 0
  %918 = load i32, i32* %917, align 4
  br i1 %916, label %919, label %921

919:                                              ; preds = %912
  %920 = add i32 %918, -1
  store i32 %920, i32* %917, align 4
  br label %921

921:                                              ; preds = %919, %912
  %922 = phi i32 [ %920, %919 ], [ %918, %912 ]
  %923 = icmp eq i32 %922, 0
  br i1 %923, label %924, label %925

924:                                              ; preds = %921
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %910) #8
  br label %925

925:                                              ; preds = %909, %921, %924
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %787) #8
  br label %2874

926:                                              ; preds = %903, %780
  %927 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 5, i32 0
  %928 = bitcast %"class.v8::Name"** %927 to %"class.v8::Value"**
  %929 = load %"class.v8::Value"*, %"class.v8::Value"** %928, align 8
  %930 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %929) #8
  %931 = icmp eq %"class.v8::Value"* %930, null
  br i1 %931, label %932, label %938

932:                                              ; preds = %926
  %933 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %934 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %935 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %934, align 8
  %936 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %935, i64 5
  %937 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %936, align 8
  call void %937(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %933) #8
  br label %2874

938:                                              ; preds = %926
  %939 = bitcast %"class.v8::Value"* %930 to i64*
  %940 = load i64, i64* %939, align 8
  %941 = and i64 %940, 3
  %942 = icmp eq i64 %941, 1
  br i1 %942, label %943, label %960

943:                                              ; preds = %938
  %944 = add i64 %940, -1
  %945 = inttoptr i64 %944 to i32*
  %946 = load i32, i32* %945, align 4
  %947 = and i64 %940, -4294967296
  %948 = zext i32 %946 to i64
  %949 = or i64 %947, %948
  %950 = add i64 %949, 7
  %951 = inttoptr i64 %950 to i16*
  %952 = load i16, i16* %951, align 2
  %953 = icmp eq i16 %952, 67
  br i1 %953, label %954, label %960

954:                                              ; preds = %943
  %955 = add i64 %940, 23
  %956 = inttoptr i64 %955 to i32*
  %957 = load i32, i32* %956, align 4
  %958 = and i32 %957, -2
  %959 = icmp eq i32 %958, 10
  br i1 %959, label %1100, label %960

960:                                              ; preds = %943, %938, %954
  %961 = bitcast %"class.blink::V8StringResource"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %961) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %961, i8 -86, i64 152, i1 false)
  %962 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %930, %"class.v8::Value"** %962, align 8
  %963 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 1
  store i32 0, i32* %963, align 8
  %964 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %964, align 8
  %965 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1
  %966 = bitcast %"class.std::__1::unique_ptr"* %965 to i64*
  store i64 0, i64* %966, align 8
  %967 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %11, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %967, label %968, label %1078

968:                                              ; preds = %960
  %969 = load %"class.v8::Value"*, %"class.v8::Value"** %962, align 8
  %970 = icmp eq %"class.v8::Value"* %969, null
  br i1 %970, label %971, label %995, !prof !2

971:                                              ; preds = %968
  %972 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %964, align 8
  %973 = icmp eq %"class.WTF::StringImpl"* %972, null
  br i1 %973, label %974, label %976

974:                                              ; preds = %971
  %975 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 9
  br label %1020

976:                                              ; preds = %971
  %977 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %972, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %978 = load atomic i32, i32* %977 monotonic, align 4
  %979 = and i32 %978, 2
  %980 = icmp eq i32 %979, 0
  br i1 %980, label %981, label %993

981:                                              ; preds = %976
  %982 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %972, i64 0, i32 0
  %983 = load i32, i32* %982, align 4
  %984 = zext i32 %983 to i33
  %985 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %984, i33 1) #8
  %986 = extractvalue { i33, i1 } %985, 1
  %987 = extractvalue { i33, i1 } %985, 0
  %988 = icmp slt i33 %987, 0
  %989 = or i1 %986, %988
  br i1 %989, label %990, label %991, !prof !2

990:                                              ; preds = %981
  call void @llvm.trap() #8
  unreachable

991:                                              ; preds = %981
  %992 = trunc i33 %987 to i32
  store i32 %992, i32* %982, align 4
  br label %993

993:                                              ; preds = %976, %991
  %994 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 9
  br label %1001

995:                                              ; preds = %968
  %996 = bitcast %"class.v8::Value"* %969 to %"class.v8::String"*
  %997 = load i32, i32* %963, align 8
  %998 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %996, i32 %997) #8
  %999 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 9
  %1000 = icmp eq %"class.WTF::StringImpl"* %998, null
  br i1 %1000, label %1020, label %1001

1001:                                             ; preds = %993, %995
  %1002 = phi %"class.WTF::String"* [ %994, %993 ], [ %999, %995 ]
  %1003 = phi %"class.WTF::StringImpl"* [ %972, %993 ], [ %998, %995 ]
  %1004 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1003, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1005 = load atomic i32, i32* %1004 monotonic, align 4
  %1006 = and i32 %1005, 2
  %1007 = icmp eq i32 %1006, 0
  br i1 %1007, label %1008, label %1020

1008:                                             ; preds = %1001
  %1009 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1003, i64 0, i32 0
  %1010 = load i32, i32* %1009, align 4
  %1011 = zext i32 %1010 to i33
  %1012 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1011, i33 1) #8
  %1013 = extractvalue { i33, i1 } %1012, 1
  %1014 = extractvalue { i33, i1 } %1012, 0
  %1015 = icmp slt i33 %1014, 0
  %1016 = or i1 %1013, %1015
  br i1 %1016, label %1017, label %1018, !prof !2

1017:                                             ; preds = %1008
  call void @llvm.trap() #8
  unreachable

1018:                                             ; preds = %1008
  %1019 = trunc i33 %1014 to i32
  store i32 %1019, i32* %1009, align 4
  br label %1020

1020:                                             ; preds = %974, %1018, %1001, %995
  %1021 = phi i1 [ false, %1018 ], [ false, %1001 ], [ true, %995 ], [ true, %974 ]
  %1022 = phi %"class.WTF::String"* [ %1002, %1018 ], [ %1002, %1001 ], [ %999, %995 ], [ %975, %974 ]
  %1023 = phi %"class.WTF::StringImpl"* [ %1003, %1018 ], [ %1003, %1001 ], [ null, %995 ], [ null, %974 ]
  %1024 = ptrtoint %"class.WTF::StringImpl"* %1023 to i64
  %1025 = bitcast %"class.WTF::String"* %1022 to i64*
  %1026 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1022, i64 0, i32 0, i32 0
  %1027 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1026, align 8
  store i64 %1024, i64* %1025, align 8
  %1028 = icmp eq %"class.WTF::StringImpl"* %1027, null
  br i1 %1028, label %1042, label %1029

1029:                                             ; preds = %1020
  %1030 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1027, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1031 = load atomic i32, i32* %1030 monotonic, align 4
  %1032 = and i32 %1031, 2
  %1033 = icmp eq i32 %1032, 0
  %1034 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1027, i64 0, i32 0
  %1035 = load i32, i32* %1034, align 4
  br i1 %1033, label %1036, label %1038

1036:                                             ; preds = %1029
  %1037 = add i32 %1035, -1
  store i32 %1037, i32* %1034, align 4
  br label %1038

1038:                                             ; preds = %1036, %1029
  %1039 = phi i32 [ %1037, %1036 ], [ %1035, %1029 ]
  %1040 = icmp eq i32 %1039, 0
  br i1 %1040, label %1041, label %1042

1041:                                             ; preds = %1038
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1027) #8
  br label %1042

1042:                                             ; preds = %1020, %1038, %1041
  br i1 %1021, label %1056, label %1043

1043:                                             ; preds = %1042
  %1044 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1023, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1045 = load atomic i32, i32* %1044 monotonic, align 4
  %1046 = and i32 %1045, 2
  %1047 = icmp eq i32 %1046, 0
  %1048 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1023, i64 0, i32 0
  %1049 = load i32, i32* %1048, align 4
  br i1 %1047, label %1050, label %1052

1050:                                             ; preds = %1043
  %1051 = add i32 %1049, -1
  store i32 %1051, i32* %1048, align 4
  br label %1052

1052:                                             ; preds = %1050, %1043
  %1053 = phi i32 [ %1051, %1050 ], [ %1049, %1043 ]
  %1054 = icmp eq i32 %1053, 0
  br i1 %1054, label %1055, label %1056

1055:                                             ; preds = %1052
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1023) #8
  br label %1056

1056:                                             ; preds = %1042, %1052, %1055
  %1057 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1058 = load i8*, i8** %1057, align 8
  store i8* null, i8** %1057, align 8
  %1059 = icmp eq i8* %1058, null
  br i1 %1059, label %1061, label %1060

1060:                                             ; preds = %1056
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1058) #8
  br label %1061

1061:                                             ; preds = %1060, %1056
  %1062 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %964, align 8
  %1063 = icmp eq %"class.WTF::StringImpl"* %1062, null
  br i1 %1063, label %1077, label %1064

1064:                                             ; preds = %1061
  %1065 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1062, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1066 = load atomic i32, i32* %1065 monotonic, align 4
  %1067 = and i32 %1066, 2
  %1068 = icmp eq i32 %1067, 0
  %1069 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1062, i64 0, i32 0
  %1070 = load i32, i32* %1069, align 4
  br i1 %1068, label %1071, label %1073

1071:                                             ; preds = %1064
  %1072 = add i32 %1070, -1
  store i32 %1072, i32* %1069, align 4
  br label %1073

1073:                                             ; preds = %1071, %1064
  %1074 = phi i32 [ %1072, %1071 ], [ %1070, %1064 ]
  %1075 = icmp eq i32 %1074, 0
  br i1 %1075, label %1076, label %1077

1076:                                             ; preds = %1073
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1062) #8
  br label %1077

1077:                                             ; preds = %1061, %1073, %1076
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %961) #8
  br label %1100

1078:                                             ; preds = %960
  %1079 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1080 = load i8*, i8** %1079, align 8
  store i8* null, i8** %1079, align 8
  %1081 = icmp eq i8* %1080, null
  br i1 %1081, label %1083, label %1082

1082:                                             ; preds = %1078
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1080) #8
  br label %1083

1083:                                             ; preds = %1082, %1078
  %1084 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %964, align 8
  %1085 = icmp eq %"class.WTF::StringImpl"* %1084, null
  br i1 %1085, label %1099, label %1086

1086:                                             ; preds = %1083
  %1087 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1084, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1088 = load atomic i32, i32* %1087 monotonic, align 4
  %1089 = and i32 %1088, 2
  %1090 = icmp eq i32 %1089, 0
  %1091 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1084, i64 0, i32 0
  %1092 = load i32, i32* %1091, align 4
  br i1 %1090, label %1093, label %1095

1093:                                             ; preds = %1086
  %1094 = add i32 %1092, -1
  store i32 %1094, i32* %1091, align 4
  br label %1095

1095:                                             ; preds = %1093, %1086
  %1096 = phi i32 [ %1094, %1093 ], [ %1092, %1086 ]
  %1097 = icmp eq i32 %1096, 0
  br i1 %1097, label %1098, label %1099

1098:                                             ; preds = %1095
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1084) #8
  br label %1099

1099:                                             ; preds = %1083, %1095, %1098
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %961) #8
  br label %2874

1100:                                             ; preds = %1077, %954
  %1101 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 6, i32 0
  %1102 = bitcast %"class.v8::Name"** %1101 to %"class.v8::Value"**
  %1103 = load %"class.v8::Value"*, %"class.v8::Value"** %1102, align 8
  %1104 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1103) #8
  %1105 = icmp eq %"class.v8::Value"* %1104, null
  br i1 %1105, label %1106, label %1112

1106:                                             ; preds = %1100
  %1107 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1108 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1109 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1108, align 8
  %1110 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1109, i64 5
  %1111 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1110, align 8
  call void %1111(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1107) #8
  br label %2874

1112:                                             ; preds = %1100
  %1113 = bitcast %"class.v8::Value"* %1104 to i64*
  %1114 = load i64, i64* %1113, align 8
  %1115 = and i64 %1114, 3
  %1116 = icmp eq i64 %1115, 1
  br i1 %1116, label %1117, label %1134

1117:                                             ; preds = %1112
  %1118 = add i64 %1114, -1
  %1119 = inttoptr i64 %1118 to i32*
  %1120 = load i32, i32* %1119, align 4
  %1121 = and i64 %1114, -4294967296
  %1122 = zext i32 %1120 to i64
  %1123 = or i64 %1121, %1122
  %1124 = add i64 %1123, 7
  %1125 = inttoptr i64 %1124 to i16*
  %1126 = load i16, i16* %1125, align 2
  %1127 = icmp eq i16 %1126, 67
  br i1 %1127, label %1128, label %1134

1128:                                             ; preds = %1117
  %1129 = add i64 %1114, 23
  %1130 = inttoptr i64 %1129 to i32*
  %1131 = load i32, i32* %1130, align 4
  %1132 = and i32 %1131, -2
  %1133 = icmp eq i32 %1132, 10
  br i1 %1133, label %1150, label %1134

1134:                                             ; preds = %1117, %1112, %1128
  %1135 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %1104) #8
  br i1 %1135, label %1136, label %1139, !prof !3

1136:                                             ; preds = %1134
  %1137 = bitcast %"class.v8::Value"* %1104 to %"class.v8::Boolean"*
  %1138 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %1137) #8
  br label %1141

1139:                                             ; preds = %1134
  %1140 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %1104, %"class.v8::Isolate"* %0) #8
  br label %1141

1141:                                             ; preds = %1136, %1139
  %1142 = phi i1 [ %1138, %1136 ], [ %1140, %1139 ]
  %1143 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1144 = load i32, i32* %1143, align 8
  %1145 = icmp eq i32 %1144, 0
  br i1 %1145, label %1146, label %2874

1146:                                             ; preds = %1141
  %1147 = zext i1 %1142 to i8
  %1148 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 10
  store i8 %1147, i8* %1148, align 8
  %1149 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 1
  store i8 1, i8* %1149, align 8
  br label %1150

1150:                                             ; preds = %1146, %1128
  %1151 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 7, i32 0
  %1152 = bitcast %"class.v8::Name"** %1151 to %"class.v8::Value"**
  %1153 = load %"class.v8::Value"*, %"class.v8::Value"** %1152, align 8
  %1154 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1153) #8
  %1155 = icmp eq %"class.v8::Value"* %1154, null
  br i1 %1155, label %1156, label %1162

1156:                                             ; preds = %1150
  %1157 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1158 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1159 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1158, align 8
  %1160 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1159, i64 5
  %1161 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1160, align 8
  call void %1161(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1157) #8
  br label %2874

1162:                                             ; preds = %1150
  %1163 = bitcast %"class.v8::Value"* %1154 to i64*
  %1164 = load i64, i64* %1163, align 8
  %1165 = and i64 %1164, 3
  %1166 = icmp eq i64 %1165, 1
  br i1 %1166, label %1167, label %1184

1167:                                             ; preds = %1162
  %1168 = add i64 %1164, -1
  %1169 = inttoptr i64 %1168 to i32*
  %1170 = load i32, i32* %1169, align 4
  %1171 = and i64 %1164, -4294967296
  %1172 = zext i32 %1170 to i64
  %1173 = or i64 %1171, %1172
  %1174 = add i64 %1173, 7
  %1175 = inttoptr i64 %1174 to i16*
  %1176 = load i16, i16* %1175, align 2
  %1177 = icmp eq i16 %1176, 67
  br i1 %1177, label %1178, label %1184

1178:                                             ; preds = %1167
  %1179 = add i64 %1164, 23
  %1180 = inttoptr i64 %1179 to i32*
  %1181 = load i32, i32* %1180, align 4
  %1182 = and i32 %1181, -2
  %1183 = icmp eq i32 %1182, 10
  br i1 %1183, label %1324, label %1184

1184:                                             ; preds = %1167, %1162, %1178
  %1185 = bitcast %"class.blink::V8StringResource"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1185) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1185, i8 -86, i64 152, i1 false)
  %1186 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1154, %"class.v8::Value"** %1186, align 8
  %1187 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 1
  store i32 0, i32* %1187, align 8
  %1188 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1188, align 8
  %1189 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1
  %1190 = bitcast %"class.std::__1::unique_ptr"* %1189 to i64*
  store i64 0, i64* %1190, align 8
  %1191 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %12, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1191, label %1192, label %1302

1192:                                             ; preds = %1184
  %1193 = load %"class.v8::Value"*, %"class.v8::Value"** %1186, align 8
  %1194 = icmp eq %"class.v8::Value"* %1193, null
  br i1 %1194, label %1195, label %1219, !prof !2

1195:                                             ; preds = %1192
  %1196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1188, align 8
  %1197 = icmp eq %"class.WTF::StringImpl"* %1196, null
  br i1 %1197, label %1198, label %1200

1198:                                             ; preds = %1195
  %1199 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 11
  br label %1244

1200:                                             ; preds = %1195
  %1201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1202 = load atomic i32, i32* %1201 monotonic, align 4
  %1203 = and i32 %1202, 2
  %1204 = icmp eq i32 %1203, 0
  br i1 %1204, label %1205, label %1217

1205:                                             ; preds = %1200
  %1206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1196, i64 0, i32 0
  %1207 = load i32, i32* %1206, align 4
  %1208 = zext i32 %1207 to i33
  %1209 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1208, i33 1) #8
  %1210 = extractvalue { i33, i1 } %1209, 1
  %1211 = extractvalue { i33, i1 } %1209, 0
  %1212 = icmp slt i33 %1211, 0
  %1213 = or i1 %1210, %1212
  br i1 %1213, label %1214, label %1215, !prof !2

1214:                                             ; preds = %1205
  call void @llvm.trap() #8
  unreachable

1215:                                             ; preds = %1205
  %1216 = trunc i33 %1211 to i32
  store i32 %1216, i32* %1206, align 4
  br label %1217

1217:                                             ; preds = %1200, %1215
  %1218 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 11
  br label %1225

1219:                                             ; preds = %1192
  %1220 = bitcast %"class.v8::Value"* %1193 to %"class.v8::String"*
  %1221 = load i32, i32* %1187, align 8
  %1222 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1220, i32 %1221) #8
  %1223 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 11
  %1224 = icmp eq %"class.WTF::StringImpl"* %1222, null
  br i1 %1224, label %1244, label %1225

1225:                                             ; preds = %1217, %1219
  %1226 = phi %"class.WTF::String"* [ %1218, %1217 ], [ %1223, %1219 ]
  %1227 = phi %"class.WTF::StringImpl"* [ %1196, %1217 ], [ %1222, %1219 ]
  %1228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1229 = load atomic i32, i32* %1228 monotonic, align 4
  %1230 = and i32 %1229, 2
  %1231 = icmp eq i32 %1230, 0
  br i1 %1231, label %1232, label %1244

1232:                                             ; preds = %1225
  %1233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1227, i64 0, i32 0
  %1234 = load i32, i32* %1233, align 4
  %1235 = zext i32 %1234 to i33
  %1236 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1235, i33 1) #8
  %1237 = extractvalue { i33, i1 } %1236, 1
  %1238 = extractvalue { i33, i1 } %1236, 0
  %1239 = icmp slt i33 %1238, 0
  %1240 = or i1 %1237, %1239
  br i1 %1240, label %1241, label %1242, !prof !2

1241:                                             ; preds = %1232
  call void @llvm.trap() #8
  unreachable

1242:                                             ; preds = %1232
  %1243 = trunc i33 %1238 to i32
  store i32 %1243, i32* %1233, align 4
  br label %1244

1244:                                             ; preds = %1198, %1242, %1225, %1219
  %1245 = phi i1 [ false, %1242 ], [ false, %1225 ], [ true, %1219 ], [ true, %1198 ]
  %1246 = phi %"class.WTF::String"* [ %1226, %1242 ], [ %1226, %1225 ], [ %1223, %1219 ], [ %1199, %1198 ]
  %1247 = phi %"class.WTF::StringImpl"* [ %1227, %1242 ], [ %1227, %1225 ], [ null, %1219 ], [ null, %1198 ]
  %1248 = ptrtoint %"class.WTF::StringImpl"* %1247 to i64
  %1249 = bitcast %"class.WTF::String"* %1246 to i64*
  %1250 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1246, i64 0, i32 0, i32 0
  %1251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1250, align 8
  store i64 %1248, i64* %1249, align 8
  %1252 = icmp eq %"class.WTF::StringImpl"* %1251, null
  br i1 %1252, label %1266, label %1253

1253:                                             ; preds = %1244
  %1254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1251, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1255 = load atomic i32, i32* %1254 monotonic, align 4
  %1256 = and i32 %1255, 2
  %1257 = icmp eq i32 %1256, 0
  %1258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1251, i64 0, i32 0
  %1259 = load i32, i32* %1258, align 4
  br i1 %1257, label %1260, label %1262

1260:                                             ; preds = %1253
  %1261 = add i32 %1259, -1
  store i32 %1261, i32* %1258, align 4
  br label %1262

1262:                                             ; preds = %1260, %1253
  %1263 = phi i32 [ %1261, %1260 ], [ %1259, %1253 ]
  %1264 = icmp eq i32 %1263, 0
  br i1 %1264, label %1265, label %1266

1265:                                             ; preds = %1262
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1251) #8
  br label %1266

1266:                                             ; preds = %1244, %1262, %1265
  br i1 %1245, label %1280, label %1267

1267:                                             ; preds = %1266
  %1268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1269 = load atomic i32, i32* %1268 monotonic, align 4
  %1270 = and i32 %1269, 2
  %1271 = icmp eq i32 %1270, 0
  %1272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1247, i64 0, i32 0
  %1273 = load i32, i32* %1272, align 4
  br i1 %1271, label %1274, label %1276

1274:                                             ; preds = %1267
  %1275 = add i32 %1273, -1
  store i32 %1275, i32* %1272, align 4
  br label %1276

1276:                                             ; preds = %1274, %1267
  %1277 = phi i32 [ %1275, %1274 ], [ %1273, %1267 ]
  %1278 = icmp eq i32 %1277, 0
  br i1 %1278, label %1279, label %1280

1279:                                             ; preds = %1276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1247) #8
  br label %1280

1280:                                             ; preds = %1266, %1276, %1279
  %1281 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1282 = load i8*, i8** %1281, align 8
  store i8* null, i8** %1281, align 8
  %1283 = icmp eq i8* %1282, null
  br i1 %1283, label %1285, label %1284

1284:                                             ; preds = %1280
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1282) #8
  br label %1285

1285:                                             ; preds = %1284, %1280
  %1286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1188, align 8
  %1287 = icmp eq %"class.WTF::StringImpl"* %1286, null
  br i1 %1287, label %1301, label %1288

1288:                                             ; preds = %1285
  %1289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1286, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1290 = load atomic i32, i32* %1289 monotonic, align 4
  %1291 = and i32 %1290, 2
  %1292 = icmp eq i32 %1291, 0
  %1293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1286, i64 0, i32 0
  %1294 = load i32, i32* %1293, align 4
  br i1 %1292, label %1295, label %1297

1295:                                             ; preds = %1288
  %1296 = add i32 %1294, -1
  store i32 %1296, i32* %1293, align 4
  br label %1297

1297:                                             ; preds = %1295, %1288
  %1298 = phi i32 [ %1296, %1295 ], [ %1294, %1288 ]
  %1299 = icmp eq i32 %1298, 0
  br i1 %1299, label %1300, label %1301

1300:                                             ; preds = %1297
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1286) #8
  br label %1301

1301:                                             ; preds = %1285, %1297, %1300
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1185) #8
  br label %1324

1302:                                             ; preds = %1184
  %1303 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1304 = load i8*, i8** %1303, align 8
  store i8* null, i8** %1303, align 8
  %1305 = icmp eq i8* %1304, null
  br i1 %1305, label %1307, label %1306

1306:                                             ; preds = %1302
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1304) #8
  br label %1307

1307:                                             ; preds = %1306, %1302
  %1308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1188, align 8
  %1309 = icmp eq %"class.WTF::StringImpl"* %1308, null
  br i1 %1309, label %1323, label %1310

1310:                                             ; preds = %1307
  %1311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1308, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1312 = load atomic i32, i32* %1311 monotonic, align 4
  %1313 = and i32 %1312, 2
  %1314 = icmp eq i32 %1313, 0
  %1315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1308, i64 0, i32 0
  %1316 = load i32, i32* %1315, align 4
  br i1 %1314, label %1317, label %1319

1317:                                             ; preds = %1310
  %1318 = add i32 %1316, -1
  store i32 %1318, i32* %1315, align 4
  br label %1319

1319:                                             ; preds = %1317, %1310
  %1320 = phi i32 [ %1318, %1317 ], [ %1316, %1310 ]
  %1321 = icmp eq i32 %1320, 0
  br i1 %1321, label %1322, label %1323

1322:                                             ; preds = %1319
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1308) #8
  br label %1323

1323:                                             ; preds = %1307, %1319, %1322
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1185) #8
  br label %2874

1324:                                             ; preds = %1301, %1178
  %1325 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 8, i32 0
  %1326 = bitcast %"class.v8::Name"** %1325 to %"class.v8::Value"**
  %1327 = load %"class.v8::Value"*, %"class.v8::Value"** %1326, align 8
  %1328 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1327) #8
  %1329 = icmp eq %"class.v8::Value"* %1328, null
  br i1 %1329, label %1330, label %1336

1330:                                             ; preds = %1324
  %1331 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1332 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1333 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1332, align 8
  %1334 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1333, i64 5
  %1335 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1334, align 8
  call void %1335(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1331) #8
  br label %2874

1336:                                             ; preds = %1324
  %1337 = bitcast %"class.v8::Value"* %1328 to i64*
  %1338 = load i64, i64* %1337, align 8
  %1339 = and i64 %1338, 3
  %1340 = icmp eq i64 %1339, 1
  br i1 %1340, label %1341, label %1358

1341:                                             ; preds = %1336
  %1342 = add i64 %1338, -1
  %1343 = inttoptr i64 %1342 to i32*
  %1344 = load i32, i32* %1343, align 4
  %1345 = and i64 %1338, -4294967296
  %1346 = zext i32 %1344 to i64
  %1347 = or i64 %1345, %1346
  %1348 = add i64 %1347, 7
  %1349 = inttoptr i64 %1348 to i16*
  %1350 = load i16, i16* %1349, align 2
  %1351 = icmp eq i16 %1350, 67
  br i1 %1351, label %1352, label %1358

1352:                                             ; preds = %1341
  %1353 = add i64 %1338, 23
  %1354 = inttoptr i64 %1353 to i32*
  %1355 = load i32, i32* %1354, align 4
  %1356 = and i32 %1355, -2
  %1357 = icmp eq i32 %1356, 10
  br i1 %1357, label %1440, label %1358

1358:                                             ; preds = %1341, %1336, %1352
  %1359 = bitcast %"class.WTF::Vector"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1359) #8
  %1360 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %13, i64 0, i32 0, i32 0, i32 0
  %1361 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %13, i64 0, i32 0, i32 0, i32 2
  %1362 = bitcast %"class.WTF::Vector"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1362, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* nonnull sret %13, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1328, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %1363 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1364 = load i32, i32* %1363, align 8
  %1365 = icmp eq i32 %1364, 0
  br i1 %1365, label %1366, label %1403

1366:                                             ; preds = %1358
  call void @_ZN5blink10JsonWebKey9setKeyOpsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::JsonWebKey"* %2, %"class.WTF::Vector"* nonnull dereferenceable(16) %13) #8
  %1367 = load %"class.WTF::String"*, %"class.WTF::String"** %1360, align 8
  %1368 = icmp eq %"class.WTF::String"* %1367, null
  br i1 %1368, label %1402, label %1369, !prof !3

1369:                                             ; preds = %1366
  %1370 = bitcast %"class.WTF::String"* %1367 to i8*
  %1371 = load i32, i32* %1361, align 4
  %1372 = icmp eq i32 %1371, 0
  br i1 %1372, label %1400, label %1373, !prof !2

1373:                                             ; preds = %1369
  %1374 = zext i32 %1371 to i64
  %1375 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1367, i64 %1374
  br label %1376

1376:                                             ; preds = %1394, %1373
  %1377 = phi %"class.WTF::String"* [ %1395, %1394 ], [ %1367, %1373 ]
  %1378 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1377, i64 0, i32 0, i32 0
  %1379 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1378, align 8
  %1380 = icmp eq %"class.WTF::StringImpl"* %1379, null
  br i1 %1380, label %1394, label %1381

1381:                                             ; preds = %1376
  %1382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1379, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1383 = load atomic i32, i32* %1382 monotonic, align 4
  %1384 = and i32 %1383, 2
  %1385 = icmp eq i32 %1384, 0
  %1386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1379, i64 0, i32 0
  %1387 = load i32, i32* %1386, align 4
  br i1 %1385, label %1388, label %1390

1388:                                             ; preds = %1381
  %1389 = add i32 %1387, -1
  store i32 %1389, i32* %1386, align 4
  br label %1390

1390:                                             ; preds = %1388, %1381
  %1391 = phi i32 [ %1389, %1388 ], [ %1387, %1381 ]
  %1392 = icmp eq i32 %1391, 0
  br i1 %1392, label %1393, label %1394

1393:                                             ; preds = %1390
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1379) #8
  br label %1394

1394:                                             ; preds = %1393, %1390, %1376
  %1395 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1377, i64 1
  %1396 = icmp eq %"class.WTF::String"* %1395, %1375
  br i1 %1396, label %1397, label %1376

1397:                                             ; preds = %1394
  store i32 0, i32* %1361, align 4
  %1398 = bitcast %"class.WTF::Vector"* %13 to i8**
  %1399 = load i8*, i8** %1398, align 8
  br label %1400

1400:                                             ; preds = %1397, %1369
  %1401 = phi i8* [ %1399, %1397 ], [ %1370, %1369 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1401) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %1360, align 8
  br label %1402

1402:                                             ; preds = %1366, %1400
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1359) #8
  br label %1440

1403:                                             ; preds = %1358
  %1404 = load %"class.WTF::String"*, %"class.WTF::String"** %1360, align 8
  %1405 = icmp eq %"class.WTF::String"* %1404, null
  br i1 %1405, label %1439, label %1406, !prof !3

1406:                                             ; preds = %1403
  %1407 = bitcast %"class.WTF::String"* %1404 to i8*
  %1408 = load i32, i32* %1361, align 4
  %1409 = icmp eq i32 %1408, 0
  br i1 %1409, label %1437, label %1410, !prof !2

1410:                                             ; preds = %1406
  %1411 = zext i32 %1408 to i64
  %1412 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1404, i64 %1411
  br label %1413

1413:                                             ; preds = %1431, %1410
  %1414 = phi %"class.WTF::String"* [ %1432, %1431 ], [ %1404, %1410 ]
  %1415 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1414, i64 0, i32 0, i32 0
  %1416 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1415, align 8
  %1417 = icmp eq %"class.WTF::StringImpl"* %1416, null
  br i1 %1417, label %1431, label %1418

1418:                                             ; preds = %1413
  %1419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1416, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1420 = load atomic i32, i32* %1419 monotonic, align 4
  %1421 = and i32 %1420, 2
  %1422 = icmp eq i32 %1421, 0
  %1423 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1416, i64 0, i32 0
  %1424 = load i32, i32* %1423, align 4
  br i1 %1422, label %1425, label %1427

1425:                                             ; preds = %1418
  %1426 = add i32 %1424, -1
  store i32 %1426, i32* %1423, align 4
  br label %1427

1427:                                             ; preds = %1425, %1418
  %1428 = phi i32 [ %1426, %1425 ], [ %1424, %1418 ]
  %1429 = icmp eq i32 %1428, 0
  br i1 %1429, label %1430, label %1431

1430:                                             ; preds = %1427
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1416) #8
  br label %1431

1431:                                             ; preds = %1430, %1427, %1413
  %1432 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1414, i64 1
  %1433 = icmp eq %"class.WTF::String"* %1432, %1412
  br i1 %1433, label %1434, label %1413

1434:                                             ; preds = %1431
  store i32 0, i32* %1361, align 4
  %1435 = bitcast %"class.WTF::Vector"* %13 to i8**
  %1436 = load i8*, i8** %1435, align 8
  br label %1437

1437:                                             ; preds = %1434, %1406
  %1438 = phi i8* [ %1436, %1434 ], [ %1407, %1406 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1438) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %1360, align 8
  br label %1439

1439:                                             ; preds = %1403, %1437
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1359) #8
  br label %2874

1440:                                             ; preds = %1402, %1352
  %1441 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 9, i32 0
  %1442 = bitcast %"class.v8::Name"** %1441 to %"class.v8::Value"**
  %1443 = load %"class.v8::Value"*, %"class.v8::Value"** %1442, align 8
  %1444 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1443) #8
  %1445 = icmp eq %"class.v8::Value"* %1444, null
  br i1 %1445, label %1446, label %1452

1446:                                             ; preds = %1440
  %1447 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1448 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1449 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1448, align 8
  %1450 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1449, i64 5
  %1451 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1450, align 8
  call void %1451(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1447) #8
  br label %2874

1452:                                             ; preds = %1440
  %1453 = bitcast %"class.v8::Value"* %1444 to i64*
  %1454 = load i64, i64* %1453, align 8
  %1455 = and i64 %1454, 3
  %1456 = icmp eq i64 %1455, 1
  br i1 %1456, label %1457, label %1474

1457:                                             ; preds = %1452
  %1458 = add i64 %1454, -1
  %1459 = inttoptr i64 %1458 to i32*
  %1460 = load i32, i32* %1459, align 4
  %1461 = and i64 %1454, -4294967296
  %1462 = zext i32 %1460 to i64
  %1463 = or i64 %1461, %1462
  %1464 = add i64 %1463, 7
  %1465 = inttoptr i64 %1464 to i16*
  %1466 = load i16, i16* %1465, align 2
  %1467 = icmp eq i16 %1466, 67
  br i1 %1467, label %1468, label %1474

1468:                                             ; preds = %1457
  %1469 = add i64 %1454, 23
  %1470 = inttoptr i64 %1469 to i32*
  %1471 = load i32, i32* %1470, align 4
  %1472 = and i32 %1471, -2
  %1473 = icmp eq i32 %1472, 10
  br i1 %1473, label %1614, label %1474

1474:                                             ; preds = %1457, %1452, %1468
  %1475 = bitcast %"class.blink::V8StringResource"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1475) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1475, i8 -86, i64 152, i1 false)
  %1476 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1444, %"class.v8::Value"** %1476, align 8
  %1477 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 1
  store i32 0, i32* %1477, align 8
  %1478 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1478, align 8
  %1479 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1
  %1480 = bitcast %"class.std::__1::unique_ptr"* %1479 to i64*
  store i64 0, i64* %1480, align 8
  %1481 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %14, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1481, label %1482, label %1592

1482:                                             ; preds = %1474
  %1483 = load %"class.v8::Value"*, %"class.v8::Value"** %1476, align 8
  %1484 = icmp eq %"class.v8::Value"* %1483, null
  br i1 %1484, label %1485, label %1509, !prof !2

1485:                                             ; preds = %1482
  %1486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1478, align 8
  %1487 = icmp eq %"class.WTF::StringImpl"* %1486, null
  br i1 %1487, label %1488, label %1490

1488:                                             ; preds = %1485
  %1489 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 13
  br label %1534

1490:                                             ; preds = %1485
  %1491 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1486, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1492 = load atomic i32, i32* %1491 monotonic, align 4
  %1493 = and i32 %1492, 2
  %1494 = icmp eq i32 %1493, 0
  br i1 %1494, label %1495, label %1507

1495:                                             ; preds = %1490
  %1496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1486, i64 0, i32 0
  %1497 = load i32, i32* %1496, align 4
  %1498 = zext i32 %1497 to i33
  %1499 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1498, i33 1) #8
  %1500 = extractvalue { i33, i1 } %1499, 1
  %1501 = extractvalue { i33, i1 } %1499, 0
  %1502 = icmp slt i33 %1501, 0
  %1503 = or i1 %1500, %1502
  br i1 %1503, label %1504, label %1505, !prof !2

1504:                                             ; preds = %1495
  call void @llvm.trap() #8
  unreachable

1505:                                             ; preds = %1495
  %1506 = trunc i33 %1501 to i32
  store i32 %1506, i32* %1496, align 4
  br label %1507

1507:                                             ; preds = %1490, %1505
  %1508 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 13
  br label %1515

1509:                                             ; preds = %1482
  %1510 = bitcast %"class.v8::Value"* %1483 to %"class.v8::String"*
  %1511 = load i32, i32* %1477, align 8
  %1512 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1510, i32 %1511) #8
  %1513 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 13
  %1514 = icmp eq %"class.WTF::StringImpl"* %1512, null
  br i1 %1514, label %1534, label %1515

1515:                                             ; preds = %1507, %1509
  %1516 = phi %"class.WTF::String"* [ %1508, %1507 ], [ %1513, %1509 ]
  %1517 = phi %"class.WTF::StringImpl"* [ %1486, %1507 ], [ %1512, %1509 ]
  %1518 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1517, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1519 = load atomic i32, i32* %1518 monotonic, align 4
  %1520 = and i32 %1519, 2
  %1521 = icmp eq i32 %1520, 0
  br i1 %1521, label %1522, label %1534

1522:                                             ; preds = %1515
  %1523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1517, i64 0, i32 0
  %1524 = load i32, i32* %1523, align 4
  %1525 = zext i32 %1524 to i33
  %1526 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1525, i33 1) #8
  %1527 = extractvalue { i33, i1 } %1526, 1
  %1528 = extractvalue { i33, i1 } %1526, 0
  %1529 = icmp slt i33 %1528, 0
  %1530 = or i1 %1527, %1529
  br i1 %1530, label %1531, label %1532, !prof !2

1531:                                             ; preds = %1522
  call void @llvm.trap() #8
  unreachable

1532:                                             ; preds = %1522
  %1533 = trunc i33 %1528 to i32
  store i32 %1533, i32* %1523, align 4
  br label %1534

1534:                                             ; preds = %1488, %1532, %1515, %1509
  %1535 = phi i1 [ false, %1532 ], [ false, %1515 ], [ true, %1509 ], [ true, %1488 ]
  %1536 = phi %"class.WTF::String"* [ %1516, %1532 ], [ %1516, %1515 ], [ %1513, %1509 ], [ %1489, %1488 ]
  %1537 = phi %"class.WTF::StringImpl"* [ %1517, %1532 ], [ %1517, %1515 ], [ null, %1509 ], [ null, %1488 ]
  %1538 = ptrtoint %"class.WTF::StringImpl"* %1537 to i64
  %1539 = bitcast %"class.WTF::String"* %1536 to i64*
  %1540 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1536, i64 0, i32 0, i32 0
  %1541 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1540, align 8
  store i64 %1538, i64* %1539, align 8
  %1542 = icmp eq %"class.WTF::StringImpl"* %1541, null
  br i1 %1542, label %1556, label %1543

1543:                                             ; preds = %1534
  %1544 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1541, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1545 = load atomic i32, i32* %1544 monotonic, align 4
  %1546 = and i32 %1545, 2
  %1547 = icmp eq i32 %1546, 0
  %1548 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1541, i64 0, i32 0
  %1549 = load i32, i32* %1548, align 4
  br i1 %1547, label %1550, label %1552

1550:                                             ; preds = %1543
  %1551 = add i32 %1549, -1
  store i32 %1551, i32* %1548, align 4
  br label %1552

1552:                                             ; preds = %1550, %1543
  %1553 = phi i32 [ %1551, %1550 ], [ %1549, %1543 ]
  %1554 = icmp eq i32 %1553, 0
  br i1 %1554, label %1555, label %1556

1555:                                             ; preds = %1552
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1541) #8
  br label %1556

1556:                                             ; preds = %1534, %1552, %1555
  br i1 %1535, label %1570, label %1557

1557:                                             ; preds = %1556
  %1558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1537, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1559 = load atomic i32, i32* %1558 monotonic, align 4
  %1560 = and i32 %1559, 2
  %1561 = icmp eq i32 %1560, 0
  %1562 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1537, i64 0, i32 0
  %1563 = load i32, i32* %1562, align 4
  br i1 %1561, label %1564, label %1566

1564:                                             ; preds = %1557
  %1565 = add i32 %1563, -1
  store i32 %1565, i32* %1562, align 4
  br label %1566

1566:                                             ; preds = %1564, %1557
  %1567 = phi i32 [ %1565, %1564 ], [ %1563, %1557 ]
  %1568 = icmp eq i32 %1567, 0
  br i1 %1568, label %1569, label %1570

1569:                                             ; preds = %1566
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1537) #8
  br label %1570

1570:                                             ; preds = %1556, %1566, %1569
  %1571 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1572 = load i8*, i8** %1571, align 8
  store i8* null, i8** %1571, align 8
  %1573 = icmp eq i8* %1572, null
  br i1 %1573, label %1575, label %1574

1574:                                             ; preds = %1570
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1572) #8
  br label %1575

1575:                                             ; preds = %1574, %1570
  %1576 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1478, align 8
  %1577 = icmp eq %"class.WTF::StringImpl"* %1576, null
  br i1 %1577, label %1591, label %1578

1578:                                             ; preds = %1575
  %1579 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1576, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1580 = load atomic i32, i32* %1579 monotonic, align 4
  %1581 = and i32 %1580, 2
  %1582 = icmp eq i32 %1581, 0
  %1583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1576, i64 0, i32 0
  %1584 = load i32, i32* %1583, align 4
  br i1 %1582, label %1585, label %1587

1585:                                             ; preds = %1578
  %1586 = add i32 %1584, -1
  store i32 %1586, i32* %1583, align 4
  br label %1587

1587:                                             ; preds = %1585, %1578
  %1588 = phi i32 [ %1586, %1585 ], [ %1584, %1578 ]
  %1589 = icmp eq i32 %1588, 0
  br i1 %1589, label %1590, label %1591

1590:                                             ; preds = %1587
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1576) #8
  br label %1591

1591:                                             ; preds = %1575, %1587, %1590
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1475) #8
  br label %1614

1592:                                             ; preds = %1474
  %1593 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1594 = load i8*, i8** %1593, align 8
  store i8* null, i8** %1593, align 8
  %1595 = icmp eq i8* %1594, null
  br i1 %1595, label %1597, label %1596

1596:                                             ; preds = %1592
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1594) #8
  br label %1597

1597:                                             ; preds = %1596, %1592
  %1598 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1478, align 8
  %1599 = icmp eq %"class.WTF::StringImpl"* %1598, null
  br i1 %1599, label %1613, label %1600

1600:                                             ; preds = %1597
  %1601 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1598, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1602 = load atomic i32, i32* %1601 monotonic, align 4
  %1603 = and i32 %1602, 2
  %1604 = icmp eq i32 %1603, 0
  %1605 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1598, i64 0, i32 0
  %1606 = load i32, i32* %1605, align 4
  br i1 %1604, label %1607, label %1609

1607:                                             ; preds = %1600
  %1608 = add i32 %1606, -1
  store i32 %1608, i32* %1605, align 4
  br label %1609

1609:                                             ; preds = %1607, %1600
  %1610 = phi i32 [ %1608, %1607 ], [ %1606, %1600 ]
  %1611 = icmp eq i32 %1610, 0
  br i1 %1611, label %1612, label %1613

1612:                                             ; preds = %1609
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1598) #8
  br label %1613

1613:                                             ; preds = %1597, %1609, %1612
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1475) #8
  br label %2874

1614:                                             ; preds = %1591, %1468
  %1615 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 10, i32 0
  %1616 = bitcast %"class.v8::Name"** %1615 to %"class.v8::Value"**
  %1617 = load %"class.v8::Value"*, %"class.v8::Value"** %1616, align 8
  %1618 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1617) #8
  %1619 = icmp eq %"class.v8::Value"* %1618, null
  br i1 %1619, label %1620, label %1626

1620:                                             ; preds = %1614
  %1621 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1622 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1623 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1622, align 8
  %1624 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1623, i64 5
  %1625 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1624, align 8
  call void %1625(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1621) #8
  br label %2874

1626:                                             ; preds = %1614
  %1627 = bitcast %"class.v8::Value"* %1618 to i64*
  %1628 = load i64, i64* %1627, align 8
  %1629 = and i64 %1628, 3
  %1630 = icmp eq i64 %1629, 1
  br i1 %1630, label %1631, label %1648

1631:                                             ; preds = %1626
  %1632 = add i64 %1628, -1
  %1633 = inttoptr i64 %1632 to i32*
  %1634 = load i32, i32* %1633, align 4
  %1635 = and i64 %1628, -4294967296
  %1636 = zext i32 %1634 to i64
  %1637 = or i64 %1635, %1636
  %1638 = add i64 %1637, 7
  %1639 = inttoptr i64 %1638 to i16*
  %1640 = load i16, i16* %1639, align 2
  %1641 = icmp eq i16 %1640, 67
  br i1 %1641, label %1642, label %1648

1642:                                             ; preds = %1631
  %1643 = add i64 %1628, 23
  %1644 = inttoptr i64 %1643 to i32*
  %1645 = load i32, i32* %1644, align 4
  %1646 = and i32 %1645, -2
  %1647 = icmp eq i32 %1646, 10
  br i1 %1647, label %1788, label %1648

1648:                                             ; preds = %1631, %1626, %1642
  %1649 = bitcast %"class.blink::V8StringResource"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1649) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1649, i8 -86, i64 152, i1 false)
  %1650 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1618, %"class.v8::Value"** %1650, align 8
  %1651 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 1
  store i32 0, i32* %1651, align 8
  %1652 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1652, align 8
  %1653 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1
  %1654 = bitcast %"class.std::__1::unique_ptr"* %1653 to i64*
  store i64 0, i64* %1654, align 8
  %1655 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %15, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1655, label %1656, label %1766

1656:                                             ; preds = %1648
  %1657 = load %"class.v8::Value"*, %"class.v8::Value"** %1650, align 8
  %1658 = icmp eq %"class.v8::Value"* %1657, null
  br i1 %1658, label %1659, label %1683, !prof !2

1659:                                             ; preds = %1656
  %1660 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1652, align 8
  %1661 = icmp eq %"class.WTF::StringImpl"* %1660, null
  br i1 %1661, label %1662, label %1664

1662:                                             ; preds = %1659
  %1663 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 14
  br label %1708

1664:                                             ; preds = %1659
  %1665 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1660, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1666 = load atomic i32, i32* %1665 monotonic, align 4
  %1667 = and i32 %1666, 2
  %1668 = icmp eq i32 %1667, 0
  br i1 %1668, label %1669, label %1681

1669:                                             ; preds = %1664
  %1670 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1660, i64 0, i32 0
  %1671 = load i32, i32* %1670, align 4
  %1672 = zext i32 %1671 to i33
  %1673 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1672, i33 1) #8
  %1674 = extractvalue { i33, i1 } %1673, 1
  %1675 = extractvalue { i33, i1 } %1673, 0
  %1676 = icmp slt i33 %1675, 0
  %1677 = or i1 %1674, %1676
  br i1 %1677, label %1678, label %1679, !prof !2

1678:                                             ; preds = %1669
  call void @llvm.trap() #8
  unreachable

1679:                                             ; preds = %1669
  %1680 = trunc i33 %1675 to i32
  store i32 %1680, i32* %1670, align 4
  br label %1681

1681:                                             ; preds = %1664, %1679
  %1682 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 14
  br label %1689

1683:                                             ; preds = %1656
  %1684 = bitcast %"class.v8::Value"* %1657 to %"class.v8::String"*
  %1685 = load i32, i32* %1651, align 8
  %1686 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1684, i32 %1685) #8
  %1687 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 14
  %1688 = icmp eq %"class.WTF::StringImpl"* %1686, null
  br i1 %1688, label %1708, label %1689

1689:                                             ; preds = %1681, %1683
  %1690 = phi %"class.WTF::String"* [ %1682, %1681 ], [ %1687, %1683 ]
  %1691 = phi %"class.WTF::StringImpl"* [ %1660, %1681 ], [ %1686, %1683 ]
  %1692 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1691, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1693 = load atomic i32, i32* %1692 monotonic, align 4
  %1694 = and i32 %1693, 2
  %1695 = icmp eq i32 %1694, 0
  br i1 %1695, label %1696, label %1708

1696:                                             ; preds = %1689
  %1697 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1691, i64 0, i32 0
  %1698 = load i32, i32* %1697, align 4
  %1699 = zext i32 %1698 to i33
  %1700 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1699, i33 1) #8
  %1701 = extractvalue { i33, i1 } %1700, 1
  %1702 = extractvalue { i33, i1 } %1700, 0
  %1703 = icmp slt i33 %1702, 0
  %1704 = or i1 %1701, %1703
  br i1 %1704, label %1705, label %1706, !prof !2

1705:                                             ; preds = %1696
  call void @llvm.trap() #8
  unreachable

1706:                                             ; preds = %1696
  %1707 = trunc i33 %1702 to i32
  store i32 %1707, i32* %1697, align 4
  br label %1708

1708:                                             ; preds = %1662, %1706, %1689, %1683
  %1709 = phi i1 [ false, %1706 ], [ false, %1689 ], [ true, %1683 ], [ true, %1662 ]
  %1710 = phi %"class.WTF::String"* [ %1690, %1706 ], [ %1690, %1689 ], [ %1687, %1683 ], [ %1663, %1662 ]
  %1711 = phi %"class.WTF::StringImpl"* [ %1691, %1706 ], [ %1691, %1689 ], [ null, %1683 ], [ null, %1662 ]
  %1712 = ptrtoint %"class.WTF::StringImpl"* %1711 to i64
  %1713 = bitcast %"class.WTF::String"* %1710 to i64*
  %1714 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1710, i64 0, i32 0, i32 0
  %1715 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1714, align 8
  store i64 %1712, i64* %1713, align 8
  %1716 = icmp eq %"class.WTF::StringImpl"* %1715, null
  br i1 %1716, label %1730, label %1717

1717:                                             ; preds = %1708
  %1718 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1715, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1719 = load atomic i32, i32* %1718 monotonic, align 4
  %1720 = and i32 %1719, 2
  %1721 = icmp eq i32 %1720, 0
  %1722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1715, i64 0, i32 0
  %1723 = load i32, i32* %1722, align 4
  br i1 %1721, label %1724, label %1726

1724:                                             ; preds = %1717
  %1725 = add i32 %1723, -1
  store i32 %1725, i32* %1722, align 4
  br label %1726

1726:                                             ; preds = %1724, %1717
  %1727 = phi i32 [ %1725, %1724 ], [ %1723, %1717 ]
  %1728 = icmp eq i32 %1727, 0
  br i1 %1728, label %1729, label %1730

1729:                                             ; preds = %1726
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1715) #8
  br label %1730

1730:                                             ; preds = %1708, %1726, %1729
  br i1 %1709, label %1744, label %1731

1731:                                             ; preds = %1730
  %1732 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1711, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1733 = load atomic i32, i32* %1732 monotonic, align 4
  %1734 = and i32 %1733, 2
  %1735 = icmp eq i32 %1734, 0
  %1736 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1711, i64 0, i32 0
  %1737 = load i32, i32* %1736, align 4
  br i1 %1735, label %1738, label %1740

1738:                                             ; preds = %1731
  %1739 = add i32 %1737, -1
  store i32 %1739, i32* %1736, align 4
  br label %1740

1740:                                             ; preds = %1738, %1731
  %1741 = phi i32 [ %1739, %1738 ], [ %1737, %1731 ]
  %1742 = icmp eq i32 %1741, 0
  br i1 %1742, label %1743, label %1744

1743:                                             ; preds = %1740
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1711) #8
  br label %1744

1744:                                             ; preds = %1730, %1740, %1743
  %1745 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1746 = load i8*, i8** %1745, align 8
  store i8* null, i8** %1745, align 8
  %1747 = icmp eq i8* %1746, null
  br i1 %1747, label %1749, label %1748

1748:                                             ; preds = %1744
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1746) #8
  br label %1749

1749:                                             ; preds = %1748, %1744
  %1750 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1652, align 8
  %1751 = icmp eq %"class.WTF::StringImpl"* %1750, null
  br i1 %1751, label %1765, label %1752

1752:                                             ; preds = %1749
  %1753 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1750, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1754 = load atomic i32, i32* %1753 monotonic, align 4
  %1755 = and i32 %1754, 2
  %1756 = icmp eq i32 %1755, 0
  %1757 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1750, i64 0, i32 0
  %1758 = load i32, i32* %1757, align 4
  br i1 %1756, label %1759, label %1761

1759:                                             ; preds = %1752
  %1760 = add i32 %1758, -1
  store i32 %1760, i32* %1757, align 4
  br label %1761

1761:                                             ; preds = %1759, %1752
  %1762 = phi i32 [ %1760, %1759 ], [ %1758, %1752 ]
  %1763 = icmp eq i32 %1762, 0
  br i1 %1763, label %1764, label %1765

1764:                                             ; preds = %1761
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1750) #8
  br label %1765

1765:                                             ; preds = %1749, %1761, %1764
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1649) #8
  br label %1788

1766:                                             ; preds = %1648
  %1767 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1768 = load i8*, i8** %1767, align 8
  store i8* null, i8** %1767, align 8
  %1769 = icmp eq i8* %1768, null
  br i1 %1769, label %1771, label %1770

1770:                                             ; preds = %1766
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1768) #8
  br label %1771

1771:                                             ; preds = %1770, %1766
  %1772 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1652, align 8
  %1773 = icmp eq %"class.WTF::StringImpl"* %1772, null
  br i1 %1773, label %1787, label %1774

1774:                                             ; preds = %1771
  %1775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1772, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1776 = load atomic i32, i32* %1775 monotonic, align 4
  %1777 = and i32 %1776, 2
  %1778 = icmp eq i32 %1777, 0
  %1779 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1772, i64 0, i32 0
  %1780 = load i32, i32* %1779, align 4
  br i1 %1778, label %1781, label %1783

1781:                                             ; preds = %1774
  %1782 = add i32 %1780, -1
  store i32 %1782, i32* %1779, align 4
  br label %1783

1783:                                             ; preds = %1781, %1774
  %1784 = phi i32 [ %1782, %1781 ], [ %1780, %1774 ]
  %1785 = icmp eq i32 %1784, 0
  br i1 %1785, label %1786, label %1787

1786:                                             ; preds = %1783
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1772) #8
  br label %1787

1787:                                             ; preds = %1771, %1783, %1786
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1649) #8
  br label %2874

1788:                                             ; preds = %1765, %1642
  %1789 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 11, i32 0
  %1790 = bitcast %"class.v8::Name"** %1789 to %"class.v8::Value"**
  %1791 = load %"class.v8::Value"*, %"class.v8::Value"** %1790, align 8
  %1792 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1791) #8
  %1793 = icmp eq %"class.v8::Value"* %1792, null
  br i1 %1793, label %1794, label %1800

1794:                                             ; preds = %1788
  %1795 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1796 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1797 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1796, align 8
  %1798 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1797, i64 5
  %1799 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1798, align 8
  call void %1799(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1795) #8
  br label %2874

1800:                                             ; preds = %1788
  %1801 = bitcast %"class.v8::Value"* %1792 to i64*
  %1802 = load i64, i64* %1801, align 8
  %1803 = and i64 %1802, 3
  %1804 = icmp eq i64 %1803, 1
  br i1 %1804, label %1805, label %1822

1805:                                             ; preds = %1800
  %1806 = add i64 %1802, -1
  %1807 = inttoptr i64 %1806 to i32*
  %1808 = load i32, i32* %1807, align 4
  %1809 = and i64 %1802, -4294967296
  %1810 = zext i32 %1808 to i64
  %1811 = or i64 %1809, %1810
  %1812 = add i64 %1811, 7
  %1813 = inttoptr i64 %1812 to i16*
  %1814 = load i16, i16* %1813, align 2
  %1815 = icmp eq i16 %1814, 67
  br i1 %1815, label %1816, label %1822

1816:                                             ; preds = %1805
  %1817 = add i64 %1802, 23
  %1818 = inttoptr i64 %1817 to i32*
  %1819 = load i32, i32* %1818, align 4
  %1820 = and i32 %1819, -2
  %1821 = icmp eq i32 %1820, 10
  br i1 %1821, label %1830, label %1822

1822:                                             ; preds = %1805, %1800, %1816
  %1823 = bitcast %"class.blink::HeapVector"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1823) #8
  %1824 = bitcast %"class.blink::HeapVector"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1824, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18RsaOtherPrimesInfoEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* nonnull sret %16, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1792, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %1825 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1826 = load i32, i32* %1825, align 8
  %1827 = icmp eq i32 %1826, 0
  br i1 %1827, label %1828, label %1829

1828:                                             ; preds = %1822
  call void @_ZN5blink10JsonWebKey6setOthERKNS_10HeapVectorINS_6MemberINS_18RsaOtherPrimesInfoEEELj0EEE(%"class.blink::JsonWebKey"* %2, %"class.blink::HeapVector"* nonnull dereferenceable(16) %16) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1823) #8
  br label %1830

1829:                                             ; preds = %1822
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1823) #8
  br label %2874

1830:                                             ; preds = %1828, %1816
  %1831 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 12, i32 0
  %1832 = bitcast %"class.v8::Name"** %1831 to %"class.v8::Value"**
  %1833 = load %"class.v8::Value"*, %"class.v8::Value"** %1832, align 8
  %1834 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1833) #8
  %1835 = icmp eq %"class.v8::Value"* %1834, null
  br i1 %1835, label %1836, label %1842

1836:                                             ; preds = %1830
  %1837 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1838 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1839 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1838, align 8
  %1840 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1839, i64 5
  %1841 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1840, align 8
  call void %1841(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1837) #8
  br label %2874

1842:                                             ; preds = %1830
  %1843 = bitcast %"class.v8::Value"* %1834 to i64*
  %1844 = load i64, i64* %1843, align 8
  %1845 = and i64 %1844, 3
  %1846 = icmp eq i64 %1845, 1
  br i1 %1846, label %1847, label %1864

1847:                                             ; preds = %1842
  %1848 = add i64 %1844, -1
  %1849 = inttoptr i64 %1848 to i32*
  %1850 = load i32, i32* %1849, align 4
  %1851 = and i64 %1844, -4294967296
  %1852 = zext i32 %1850 to i64
  %1853 = or i64 %1851, %1852
  %1854 = add i64 %1853, 7
  %1855 = inttoptr i64 %1854 to i16*
  %1856 = load i16, i16* %1855, align 2
  %1857 = icmp eq i16 %1856, 67
  br i1 %1857, label %1858, label %1864

1858:                                             ; preds = %1847
  %1859 = add i64 %1844, 23
  %1860 = inttoptr i64 %1859 to i32*
  %1861 = load i32, i32* %1860, align 4
  %1862 = and i32 %1861, -2
  %1863 = icmp eq i32 %1862, 10
  br i1 %1863, label %2004, label %1864

1864:                                             ; preds = %1847, %1842, %1858
  %1865 = bitcast %"class.blink::V8StringResource"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1865) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1865, i8 -86, i64 152, i1 false)
  %1866 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %17, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1834, %"class.v8::Value"** %1866, align 8
  %1867 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %17, i64 0, i32 1
  store i32 0, i32* %1867, align 8
  %1868 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %17, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1868, align 8
  %1869 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %17, i64 0, i32 3, i32 1
  %1870 = bitcast %"class.std::__1::unique_ptr"* %1869 to i64*
  store i64 0, i64* %1870, align 8
  %1871 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %17, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1871, label %1872, label %1982

1872:                                             ; preds = %1864
  %1873 = load %"class.v8::Value"*, %"class.v8::Value"** %1866, align 8
  %1874 = icmp eq %"class.v8::Value"* %1873, null
  br i1 %1874, label %1875, label %1899, !prof !2

1875:                                             ; preds = %1872
  %1876 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1868, align 8
  %1877 = icmp eq %"class.WTF::StringImpl"* %1876, null
  br i1 %1877, label %1878, label %1880

1878:                                             ; preds = %1875
  %1879 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 16
  br label %1924

1880:                                             ; preds = %1875
  %1881 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1876, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1882 = load atomic i32, i32* %1881 monotonic, align 4
  %1883 = and i32 %1882, 2
  %1884 = icmp eq i32 %1883, 0
  br i1 %1884, label %1885, label %1897

1885:                                             ; preds = %1880
  %1886 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1876, i64 0, i32 0
  %1887 = load i32, i32* %1886, align 4
  %1888 = zext i32 %1887 to i33
  %1889 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1888, i33 1) #8
  %1890 = extractvalue { i33, i1 } %1889, 1
  %1891 = extractvalue { i33, i1 } %1889, 0
  %1892 = icmp slt i33 %1891, 0
  %1893 = or i1 %1890, %1892
  br i1 %1893, label %1894, label %1895, !prof !2

1894:                                             ; preds = %1885
  call void @llvm.trap() #8
  unreachable

1895:                                             ; preds = %1885
  %1896 = trunc i33 %1891 to i32
  store i32 %1896, i32* %1886, align 4
  br label %1897

1897:                                             ; preds = %1880, %1895
  %1898 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 16
  br label %1905

1899:                                             ; preds = %1872
  %1900 = bitcast %"class.v8::Value"* %1873 to %"class.v8::String"*
  %1901 = load i32, i32* %1867, align 8
  %1902 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1900, i32 %1901) #8
  %1903 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 16
  %1904 = icmp eq %"class.WTF::StringImpl"* %1902, null
  br i1 %1904, label %1924, label %1905

1905:                                             ; preds = %1897, %1899
  %1906 = phi %"class.WTF::String"* [ %1898, %1897 ], [ %1903, %1899 ]
  %1907 = phi %"class.WTF::StringImpl"* [ %1876, %1897 ], [ %1902, %1899 ]
  %1908 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1907, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1909 = load atomic i32, i32* %1908 monotonic, align 4
  %1910 = and i32 %1909, 2
  %1911 = icmp eq i32 %1910, 0
  br i1 %1911, label %1912, label %1924

1912:                                             ; preds = %1905
  %1913 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1907, i64 0, i32 0
  %1914 = load i32, i32* %1913, align 4
  %1915 = zext i32 %1914 to i33
  %1916 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1915, i33 1) #8
  %1917 = extractvalue { i33, i1 } %1916, 1
  %1918 = extractvalue { i33, i1 } %1916, 0
  %1919 = icmp slt i33 %1918, 0
  %1920 = or i1 %1917, %1919
  br i1 %1920, label %1921, label %1922, !prof !2

1921:                                             ; preds = %1912
  call void @llvm.trap() #8
  unreachable

1922:                                             ; preds = %1912
  %1923 = trunc i33 %1918 to i32
  store i32 %1923, i32* %1913, align 4
  br label %1924

1924:                                             ; preds = %1878, %1922, %1905, %1899
  %1925 = phi i1 [ false, %1922 ], [ false, %1905 ], [ true, %1899 ], [ true, %1878 ]
  %1926 = phi %"class.WTF::String"* [ %1906, %1922 ], [ %1906, %1905 ], [ %1903, %1899 ], [ %1879, %1878 ]
  %1927 = phi %"class.WTF::StringImpl"* [ %1907, %1922 ], [ %1907, %1905 ], [ null, %1899 ], [ null, %1878 ]
  %1928 = ptrtoint %"class.WTF::StringImpl"* %1927 to i64
  %1929 = bitcast %"class.WTF::String"* %1926 to i64*
  %1930 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1926, i64 0, i32 0, i32 0
  %1931 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1930, align 8
  store i64 %1928, i64* %1929, align 8
  %1932 = icmp eq %"class.WTF::StringImpl"* %1931, null
  br i1 %1932, label %1946, label %1933

1933:                                             ; preds = %1924
  %1934 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1931, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1935 = load atomic i32, i32* %1934 monotonic, align 4
  %1936 = and i32 %1935, 2
  %1937 = icmp eq i32 %1936, 0
  %1938 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1931, i64 0, i32 0
  %1939 = load i32, i32* %1938, align 4
  br i1 %1937, label %1940, label %1942

1940:                                             ; preds = %1933
  %1941 = add i32 %1939, -1
  store i32 %1941, i32* %1938, align 4
  br label %1942

1942:                                             ; preds = %1940, %1933
  %1943 = phi i32 [ %1941, %1940 ], [ %1939, %1933 ]
  %1944 = icmp eq i32 %1943, 0
  br i1 %1944, label %1945, label %1946

1945:                                             ; preds = %1942
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1931) #8
  br label %1946

1946:                                             ; preds = %1924, %1942, %1945
  br i1 %1925, label %1960, label %1947

1947:                                             ; preds = %1946
  %1948 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1927, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1949 = load atomic i32, i32* %1948 monotonic, align 4
  %1950 = and i32 %1949, 2
  %1951 = icmp eq i32 %1950, 0
  %1952 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1927, i64 0, i32 0
  %1953 = load i32, i32* %1952, align 4
  br i1 %1951, label %1954, label %1956

1954:                                             ; preds = %1947
  %1955 = add i32 %1953, -1
  store i32 %1955, i32* %1952, align 4
  br label %1956

1956:                                             ; preds = %1954, %1947
  %1957 = phi i32 [ %1955, %1954 ], [ %1953, %1947 ]
  %1958 = icmp eq i32 %1957, 0
  br i1 %1958, label %1959, label %1960

1959:                                             ; preds = %1956
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1927) #8
  br label %1960

1960:                                             ; preds = %1946, %1956, %1959
  %1961 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %17, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1962 = load i8*, i8** %1961, align 8
  store i8* null, i8** %1961, align 8
  %1963 = icmp eq i8* %1962, null
  br i1 %1963, label %1965, label %1964

1964:                                             ; preds = %1960
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1962) #8
  br label %1965

1965:                                             ; preds = %1964, %1960
  %1966 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1868, align 8
  %1967 = icmp eq %"class.WTF::StringImpl"* %1966, null
  br i1 %1967, label %1981, label %1968

1968:                                             ; preds = %1965
  %1969 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1966, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1970 = load atomic i32, i32* %1969 monotonic, align 4
  %1971 = and i32 %1970, 2
  %1972 = icmp eq i32 %1971, 0
  %1973 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1966, i64 0, i32 0
  %1974 = load i32, i32* %1973, align 4
  br i1 %1972, label %1975, label %1977

1975:                                             ; preds = %1968
  %1976 = add i32 %1974, -1
  store i32 %1976, i32* %1973, align 4
  br label %1977

1977:                                             ; preds = %1975, %1968
  %1978 = phi i32 [ %1976, %1975 ], [ %1974, %1968 ]
  %1979 = icmp eq i32 %1978, 0
  br i1 %1979, label %1980, label %1981

1980:                                             ; preds = %1977
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1966) #8
  br label %1981

1981:                                             ; preds = %1965, %1977, %1980
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1865) #8
  br label %2004

1982:                                             ; preds = %1864
  %1983 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %17, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1984 = load i8*, i8** %1983, align 8
  store i8* null, i8** %1983, align 8
  %1985 = icmp eq i8* %1984, null
  br i1 %1985, label %1987, label %1986

1986:                                             ; preds = %1982
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1984) #8
  br label %1987

1987:                                             ; preds = %1986, %1982
  %1988 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1868, align 8
  %1989 = icmp eq %"class.WTF::StringImpl"* %1988, null
  br i1 %1989, label %2003, label %1990

1990:                                             ; preds = %1987
  %1991 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1988, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1992 = load atomic i32, i32* %1991 monotonic, align 4
  %1993 = and i32 %1992, 2
  %1994 = icmp eq i32 %1993, 0
  %1995 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1988, i64 0, i32 0
  %1996 = load i32, i32* %1995, align 4
  br i1 %1994, label %1997, label %1999

1997:                                             ; preds = %1990
  %1998 = add i32 %1996, -1
  store i32 %1998, i32* %1995, align 4
  br label %1999

1999:                                             ; preds = %1997, %1990
  %2000 = phi i32 [ %1998, %1997 ], [ %1996, %1990 ]
  %2001 = icmp eq i32 %2000, 0
  br i1 %2001, label %2002, label %2003

2002:                                             ; preds = %1999
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1988) #8
  br label %2003

2003:                                             ; preds = %1987, %1999, %2002
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1865) #8
  br label %2874

2004:                                             ; preds = %1981, %1858
  %2005 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 13, i32 0
  %2006 = bitcast %"class.v8::Name"** %2005 to %"class.v8::Value"**
  %2007 = load %"class.v8::Value"*, %"class.v8::Value"** %2006, align 8
  %2008 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %2007) #8
  %2009 = icmp eq %"class.v8::Value"* %2008, null
  br i1 %2009, label %2010, label %2016

2010:                                             ; preds = %2004
  %2011 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2012 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2013 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2012, align 8
  %2014 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2013, i64 5
  %2015 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2014, align 8
  call void %2015(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2011) #8
  br label %2874

2016:                                             ; preds = %2004
  %2017 = bitcast %"class.v8::Value"* %2008 to i64*
  %2018 = load i64, i64* %2017, align 8
  %2019 = and i64 %2018, 3
  %2020 = icmp eq i64 %2019, 1
  br i1 %2020, label %2021, label %2038

2021:                                             ; preds = %2016
  %2022 = add i64 %2018, -1
  %2023 = inttoptr i64 %2022 to i32*
  %2024 = load i32, i32* %2023, align 4
  %2025 = and i64 %2018, -4294967296
  %2026 = zext i32 %2024 to i64
  %2027 = or i64 %2025, %2026
  %2028 = add i64 %2027, 7
  %2029 = inttoptr i64 %2028 to i16*
  %2030 = load i16, i16* %2029, align 2
  %2031 = icmp eq i16 %2030, 67
  br i1 %2031, label %2032, label %2038

2032:                                             ; preds = %2021
  %2033 = add i64 %2018, 23
  %2034 = inttoptr i64 %2033 to i32*
  %2035 = load i32, i32* %2034, align 4
  %2036 = and i32 %2035, -2
  %2037 = icmp eq i32 %2036, 10
  br i1 %2037, label %2178, label %2038

2038:                                             ; preds = %2021, %2016, %2032
  %2039 = bitcast %"class.blink::V8StringResource"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %2039) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2039, i8 -86, i64 152, i1 false)
  %2040 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %18, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %2008, %"class.v8::Value"** %2040, align 8
  %2041 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %18, i64 0, i32 1
  store i32 0, i32* %2041, align 8
  %2042 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %18, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2042, align 8
  %2043 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %18, i64 0, i32 3, i32 1
  %2044 = bitcast %"class.std::__1::unique_ptr"* %2043 to i64*
  store i64 0, i64* %2044, align 8
  %2045 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %18, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %2045, label %2046, label %2156

2046:                                             ; preds = %2038
  %2047 = load %"class.v8::Value"*, %"class.v8::Value"** %2040, align 8
  %2048 = icmp eq %"class.v8::Value"* %2047, null
  br i1 %2048, label %2049, label %2073, !prof !2

2049:                                             ; preds = %2046
  %2050 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2042, align 8
  %2051 = icmp eq %"class.WTF::StringImpl"* %2050, null
  br i1 %2051, label %2052, label %2054

2052:                                             ; preds = %2049
  %2053 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 17
  br label %2098

2054:                                             ; preds = %2049
  %2055 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2050, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2056 = load atomic i32, i32* %2055 monotonic, align 4
  %2057 = and i32 %2056, 2
  %2058 = icmp eq i32 %2057, 0
  br i1 %2058, label %2059, label %2071

2059:                                             ; preds = %2054
  %2060 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2050, i64 0, i32 0
  %2061 = load i32, i32* %2060, align 4
  %2062 = zext i32 %2061 to i33
  %2063 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2062, i33 1) #8
  %2064 = extractvalue { i33, i1 } %2063, 1
  %2065 = extractvalue { i33, i1 } %2063, 0
  %2066 = icmp slt i33 %2065, 0
  %2067 = or i1 %2064, %2066
  br i1 %2067, label %2068, label %2069, !prof !2

2068:                                             ; preds = %2059
  call void @llvm.trap() #8
  unreachable

2069:                                             ; preds = %2059
  %2070 = trunc i33 %2065 to i32
  store i32 %2070, i32* %2060, align 4
  br label %2071

2071:                                             ; preds = %2054, %2069
  %2072 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 17
  br label %2079

2073:                                             ; preds = %2046
  %2074 = bitcast %"class.v8::Value"* %2047 to %"class.v8::String"*
  %2075 = load i32, i32* %2041, align 8
  %2076 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %2074, i32 %2075) #8
  %2077 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 17
  %2078 = icmp eq %"class.WTF::StringImpl"* %2076, null
  br i1 %2078, label %2098, label %2079

2079:                                             ; preds = %2071, %2073
  %2080 = phi %"class.WTF::String"* [ %2072, %2071 ], [ %2077, %2073 ]
  %2081 = phi %"class.WTF::StringImpl"* [ %2050, %2071 ], [ %2076, %2073 ]
  %2082 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2081, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2083 = load atomic i32, i32* %2082 monotonic, align 4
  %2084 = and i32 %2083, 2
  %2085 = icmp eq i32 %2084, 0
  br i1 %2085, label %2086, label %2098

2086:                                             ; preds = %2079
  %2087 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2081, i64 0, i32 0
  %2088 = load i32, i32* %2087, align 4
  %2089 = zext i32 %2088 to i33
  %2090 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2089, i33 1) #8
  %2091 = extractvalue { i33, i1 } %2090, 1
  %2092 = extractvalue { i33, i1 } %2090, 0
  %2093 = icmp slt i33 %2092, 0
  %2094 = or i1 %2091, %2093
  br i1 %2094, label %2095, label %2096, !prof !2

2095:                                             ; preds = %2086
  call void @llvm.trap() #8
  unreachable

2096:                                             ; preds = %2086
  %2097 = trunc i33 %2092 to i32
  store i32 %2097, i32* %2087, align 4
  br label %2098

2098:                                             ; preds = %2052, %2096, %2079, %2073
  %2099 = phi i1 [ false, %2096 ], [ false, %2079 ], [ true, %2073 ], [ true, %2052 ]
  %2100 = phi %"class.WTF::String"* [ %2080, %2096 ], [ %2080, %2079 ], [ %2077, %2073 ], [ %2053, %2052 ]
  %2101 = phi %"class.WTF::StringImpl"* [ %2081, %2096 ], [ %2081, %2079 ], [ null, %2073 ], [ null, %2052 ]
  %2102 = ptrtoint %"class.WTF::StringImpl"* %2101 to i64
  %2103 = bitcast %"class.WTF::String"* %2100 to i64*
  %2104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2100, i64 0, i32 0, i32 0
  %2105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2104, align 8
  store i64 %2102, i64* %2103, align 8
  %2106 = icmp eq %"class.WTF::StringImpl"* %2105, null
  br i1 %2106, label %2120, label %2107

2107:                                             ; preds = %2098
  %2108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2109 = load atomic i32, i32* %2108 monotonic, align 4
  %2110 = and i32 %2109, 2
  %2111 = icmp eq i32 %2110, 0
  %2112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2105, i64 0, i32 0
  %2113 = load i32, i32* %2112, align 4
  br i1 %2111, label %2114, label %2116

2114:                                             ; preds = %2107
  %2115 = add i32 %2113, -1
  store i32 %2115, i32* %2112, align 4
  br label %2116

2116:                                             ; preds = %2114, %2107
  %2117 = phi i32 [ %2115, %2114 ], [ %2113, %2107 ]
  %2118 = icmp eq i32 %2117, 0
  br i1 %2118, label %2119, label %2120

2119:                                             ; preds = %2116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2105) #8
  br label %2120

2120:                                             ; preds = %2098, %2116, %2119
  br i1 %2099, label %2134, label %2121

2121:                                             ; preds = %2120
  %2122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2123 = load atomic i32, i32* %2122 monotonic, align 4
  %2124 = and i32 %2123, 2
  %2125 = icmp eq i32 %2124, 0
  %2126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2101, i64 0, i32 0
  %2127 = load i32, i32* %2126, align 4
  br i1 %2125, label %2128, label %2130

2128:                                             ; preds = %2121
  %2129 = add i32 %2127, -1
  store i32 %2129, i32* %2126, align 4
  br label %2130

2130:                                             ; preds = %2128, %2121
  %2131 = phi i32 [ %2129, %2128 ], [ %2127, %2121 ]
  %2132 = icmp eq i32 %2131, 0
  br i1 %2132, label %2133, label %2134

2133:                                             ; preds = %2130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2101) #8
  br label %2134

2134:                                             ; preds = %2120, %2130, %2133
  %2135 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %18, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2136 = load i8*, i8** %2135, align 8
  store i8* null, i8** %2135, align 8
  %2137 = icmp eq i8* %2136, null
  br i1 %2137, label %2139, label %2138

2138:                                             ; preds = %2134
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2136) #8
  br label %2139

2139:                                             ; preds = %2138, %2134
  %2140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2042, align 8
  %2141 = icmp eq %"class.WTF::StringImpl"* %2140, null
  br i1 %2141, label %2155, label %2142

2142:                                             ; preds = %2139
  %2143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2144 = load atomic i32, i32* %2143 monotonic, align 4
  %2145 = and i32 %2144, 2
  %2146 = icmp eq i32 %2145, 0
  %2147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2140, i64 0, i32 0
  %2148 = load i32, i32* %2147, align 4
  br i1 %2146, label %2149, label %2151

2149:                                             ; preds = %2142
  %2150 = add i32 %2148, -1
  store i32 %2150, i32* %2147, align 4
  br label %2151

2151:                                             ; preds = %2149, %2142
  %2152 = phi i32 [ %2150, %2149 ], [ %2148, %2142 ]
  %2153 = icmp eq i32 %2152, 0
  br i1 %2153, label %2154, label %2155

2154:                                             ; preds = %2151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2140) #8
  br label %2155

2155:                                             ; preds = %2139, %2151, %2154
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2039) #8
  br label %2178

2156:                                             ; preds = %2038
  %2157 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %18, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2158 = load i8*, i8** %2157, align 8
  store i8* null, i8** %2157, align 8
  %2159 = icmp eq i8* %2158, null
  br i1 %2159, label %2161, label %2160

2160:                                             ; preds = %2156
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2158) #8
  br label %2161

2161:                                             ; preds = %2160, %2156
  %2162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2042, align 8
  %2163 = icmp eq %"class.WTF::StringImpl"* %2162, null
  br i1 %2163, label %2177, label %2164

2164:                                             ; preds = %2161
  %2165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2166 = load atomic i32, i32* %2165 monotonic, align 4
  %2167 = and i32 %2166, 2
  %2168 = icmp eq i32 %2167, 0
  %2169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2162, i64 0, i32 0
  %2170 = load i32, i32* %2169, align 4
  br i1 %2168, label %2171, label %2173

2171:                                             ; preds = %2164
  %2172 = add i32 %2170, -1
  store i32 %2172, i32* %2169, align 4
  br label %2173

2173:                                             ; preds = %2171, %2164
  %2174 = phi i32 [ %2172, %2171 ], [ %2170, %2164 ]
  %2175 = icmp eq i32 %2174, 0
  br i1 %2175, label %2176, label %2177

2176:                                             ; preds = %2173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2162) #8
  br label %2177

2177:                                             ; preds = %2161, %2173, %2176
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2039) #8
  br label %2874

2178:                                             ; preds = %2155, %2032
  %2179 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 14, i32 0
  %2180 = bitcast %"class.v8::Name"** %2179 to %"class.v8::Value"**
  %2181 = load %"class.v8::Value"*, %"class.v8::Value"** %2180, align 8
  %2182 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %2181) #8
  %2183 = icmp eq %"class.v8::Value"* %2182, null
  br i1 %2183, label %2184, label %2190

2184:                                             ; preds = %2178
  %2185 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2186 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2187 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2186, align 8
  %2188 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2187, i64 5
  %2189 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2188, align 8
  call void %2189(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2185) #8
  br label %2874

2190:                                             ; preds = %2178
  %2191 = bitcast %"class.v8::Value"* %2182 to i64*
  %2192 = load i64, i64* %2191, align 8
  %2193 = and i64 %2192, 3
  %2194 = icmp eq i64 %2193, 1
  br i1 %2194, label %2195, label %2212

2195:                                             ; preds = %2190
  %2196 = add i64 %2192, -1
  %2197 = inttoptr i64 %2196 to i32*
  %2198 = load i32, i32* %2197, align 4
  %2199 = and i64 %2192, -4294967296
  %2200 = zext i32 %2198 to i64
  %2201 = or i64 %2199, %2200
  %2202 = add i64 %2201, 7
  %2203 = inttoptr i64 %2202 to i16*
  %2204 = load i16, i16* %2203, align 2
  %2205 = icmp eq i16 %2204, 67
  br i1 %2205, label %2206, label %2212

2206:                                             ; preds = %2195
  %2207 = add i64 %2192, 23
  %2208 = inttoptr i64 %2207 to i32*
  %2209 = load i32, i32* %2208, align 4
  %2210 = and i32 %2209, -2
  %2211 = icmp eq i32 %2210, 10
  br i1 %2211, label %2352, label %2212

2212:                                             ; preds = %2195, %2190, %2206
  %2213 = bitcast %"class.blink::V8StringResource"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %2213) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2213, i8 -86, i64 152, i1 false)
  %2214 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %19, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %2182, %"class.v8::Value"** %2214, align 8
  %2215 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %19, i64 0, i32 1
  store i32 0, i32* %2215, align 8
  %2216 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %19, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2216, align 8
  %2217 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %19, i64 0, i32 3, i32 1
  %2218 = bitcast %"class.std::__1::unique_ptr"* %2217 to i64*
  store i64 0, i64* %2218, align 8
  %2219 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %19, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %2219, label %2220, label %2330

2220:                                             ; preds = %2212
  %2221 = load %"class.v8::Value"*, %"class.v8::Value"** %2214, align 8
  %2222 = icmp eq %"class.v8::Value"* %2221, null
  br i1 %2222, label %2223, label %2247, !prof !2

2223:                                             ; preds = %2220
  %2224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2216, align 8
  %2225 = icmp eq %"class.WTF::StringImpl"* %2224, null
  br i1 %2225, label %2226, label %2228

2226:                                             ; preds = %2223
  %2227 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 18
  br label %2272

2228:                                             ; preds = %2223
  %2229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2230 = load atomic i32, i32* %2229 monotonic, align 4
  %2231 = and i32 %2230, 2
  %2232 = icmp eq i32 %2231, 0
  br i1 %2232, label %2233, label %2245

2233:                                             ; preds = %2228
  %2234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2224, i64 0, i32 0
  %2235 = load i32, i32* %2234, align 4
  %2236 = zext i32 %2235 to i33
  %2237 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2236, i33 1) #8
  %2238 = extractvalue { i33, i1 } %2237, 1
  %2239 = extractvalue { i33, i1 } %2237, 0
  %2240 = icmp slt i33 %2239, 0
  %2241 = or i1 %2238, %2240
  br i1 %2241, label %2242, label %2243, !prof !2

2242:                                             ; preds = %2233
  call void @llvm.trap() #8
  unreachable

2243:                                             ; preds = %2233
  %2244 = trunc i33 %2239 to i32
  store i32 %2244, i32* %2234, align 4
  br label %2245

2245:                                             ; preds = %2228, %2243
  %2246 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 18
  br label %2253

2247:                                             ; preds = %2220
  %2248 = bitcast %"class.v8::Value"* %2221 to %"class.v8::String"*
  %2249 = load i32, i32* %2215, align 8
  %2250 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %2248, i32 %2249) #8
  %2251 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 18
  %2252 = icmp eq %"class.WTF::StringImpl"* %2250, null
  br i1 %2252, label %2272, label %2253

2253:                                             ; preds = %2245, %2247
  %2254 = phi %"class.WTF::String"* [ %2246, %2245 ], [ %2251, %2247 ]
  %2255 = phi %"class.WTF::StringImpl"* [ %2224, %2245 ], [ %2250, %2247 ]
  %2256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2257 = load atomic i32, i32* %2256 monotonic, align 4
  %2258 = and i32 %2257, 2
  %2259 = icmp eq i32 %2258, 0
  br i1 %2259, label %2260, label %2272

2260:                                             ; preds = %2253
  %2261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2255, i64 0, i32 0
  %2262 = load i32, i32* %2261, align 4
  %2263 = zext i32 %2262 to i33
  %2264 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2263, i33 1) #8
  %2265 = extractvalue { i33, i1 } %2264, 1
  %2266 = extractvalue { i33, i1 } %2264, 0
  %2267 = icmp slt i33 %2266, 0
  %2268 = or i1 %2265, %2267
  br i1 %2268, label %2269, label %2270, !prof !2

2269:                                             ; preds = %2260
  call void @llvm.trap() #8
  unreachable

2270:                                             ; preds = %2260
  %2271 = trunc i33 %2266 to i32
  store i32 %2271, i32* %2261, align 4
  br label %2272

2272:                                             ; preds = %2226, %2270, %2253, %2247
  %2273 = phi i1 [ false, %2270 ], [ false, %2253 ], [ true, %2247 ], [ true, %2226 ]
  %2274 = phi %"class.WTF::String"* [ %2254, %2270 ], [ %2254, %2253 ], [ %2251, %2247 ], [ %2227, %2226 ]
  %2275 = phi %"class.WTF::StringImpl"* [ %2255, %2270 ], [ %2255, %2253 ], [ null, %2247 ], [ null, %2226 ]
  %2276 = ptrtoint %"class.WTF::StringImpl"* %2275 to i64
  %2277 = bitcast %"class.WTF::String"* %2274 to i64*
  %2278 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2274, i64 0, i32 0, i32 0
  %2279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2278, align 8
  store i64 %2276, i64* %2277, align 8
  %2280 = icmp eq %"class.WTF::StringImpl"* %2279, null
  br i1 %2280, label %2294, label %2281

2281:                                             ; preds = %2272
  %2282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2283 = load atomic i32, i32* %2282 monotonic, align 4
  %2284 = and i32 %2283, 2
  %2285 = icmp eq i32 %2284, 0
  %2286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2279, i64 0, i32 0
  %2287 = load i32, i32* %2286, align 4
  br i1 %2285, label %2288, label %2290

2288:                                             ; preds = %2281
  %2289 = add i32 %2287, -1
  store i32 %2289, i32* %2286, align 4
  br label %2290

2290:                                             ; preds = %2288, %2281
  %2291 = phi i32 [ %2289, %2288 ], [ %2287, %2281 ]
  %2292 = icmp eq i32 %2291, 0
  br i1 %2292, label %2293, label %2294

2293:                                             ; preds = %2290
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2279) #8
  br label %2294

2294:                                             ; preds = %2272, %2290, %2293
  br i1 %2273, label %2308, label %2295

2295:                                             ; preds = %2294
  %2296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2297 = load atomic i32, i32* %2296 monotonic, align 4
  %2298 = and i32 %2297, 2
  %2299 = icmp eq i32 %2298, 0
  %2300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2275, i64 0, i32 0
  %2301 = load i32, i32* %2300, align 4
  br i1 %2299, label %2302, label %2304

2302:                                             ; preds = %2295
  %2303 = add i32 %2301, -1
  store i32 %2303, i32* %2300, align 4
  br label %2304

2304:                                             ; preds = %2302, %2295
  %2305 = phi i32 [ %2303, %2302 ], [ %2301, %2295 ]
  %2306 = icmp eq i32 %2305, 0
  br i1 %2306, label %2307, label %2308

2307:                                             ; preds = %2304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2275) #8
  br label %2308

2308:                                             ; preds = %2294, %2304, %2307
  %2309 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %19, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2310 = load i8*, i8** %2309, align 8
  store i8* null, i8** %2309, align 8
  %2311 = icmp eq i8* %2310, null
  br i1 %2311, label %2313, label %2312

2312:                                             ; preds = %2308
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2310) #8
  br label %2313

2313:                                             ; preds = %2312, %2308
  %2314 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2216, align 8
  %2315 = icmp eq %"class.WTF::StringImpl"* %2314, null
  br i1 %2315, label %2329, label %2316

2316:                                             ; preds = %2313
  %2317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2314, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2318 = load atomic i32, i32* %2317 monotonic, align 4
  %2319 = and i32 %2318, 2
  %2320 = icmp eq i32 %2319, 0
  %2321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2314, i64 0, i32 0
  %2322 = load i32, i32* %2321, align 4
  br i1 %2320, label %2323, label %2325

2323:                                             ; preds = %2316
  %2324 = add i32 %2322, -1
  store i32 %2324, i32* %2321, align 4
  br label %2325

2325:                                             ; preds = %2323, %2316
  %2326 = phi i32 [ %2324, %2323 ], [ %2322, %2316 ]
  %2327 = icmp eq i32 %2326, 0
  br i1 %2327, label %2328, label %2329

2328:                                             ; preds = %2325
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2314) #8
  br label %2329

2329:                                             ; preds = %2313, %2325, %2328
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2213) #8
  br label %2352

2330:                                             ; preds = %2212
  %2331 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %19, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2332 = load i8*, i8** %2331, align 8
  store i8* null, i8** %2331, align 8
  %2333 = icmp eq i8* %2332, null
  br i1 %2333, label %2335, label %2334

2334:                                             ; preds = %2330
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2332) #8
  br label %2335

2335:                                             ; preds = %2334, %2330
  %2336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2216, align 8
  %2337 = icmp eq %"class.WTF::StringImpl"* %2336, null
  br i1 %2337, label %2351, label %2338

2338:                                             ; preds = %2335
  %2339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2340 = load atomic i32, i32* %2339 monotonic, align 4
  %2341 = and i32 %2340, 2
  %2342 = icmp eq i32 %2341, 0
  %2343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2336, i64 0, i32 0
  %2344 = load i32, i32* %2343, align 4
  br i1 %2342, label %2345, label %2347

2345:                                             ; preds = %2338
  %2346 = add i32 %2344, -1
  store i32 %2346, i32* %2343, align 4
  br label %2347

2347:                                             ; preds = %2345, %2338
  %2348 = phi i32 [ %2346, %2345 ], [ %2344, %2338 ]
  %2349 = icmp eq i32 %2348, 0
  br i1 %2349, label %2350, label %2351

2350:                                             ; preds = %2347
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2336) #8
  br label %2351

2351:                                             ; preds = %2335, %2347, %2350
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2213) #8
  br label %2874

2352:                                             ; preds = %2329, %2206
  %2353 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 15, i32 0
  %2354 = bitcast %"class.v8::Name"** %2353 to %"class.v8::Value"**
  %2355 = load %"class.v8::Value"*, %"class.v8::Value"** %2354, align 8
  %2356 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %2355) #8
  %2357 = icmp eq %"class.v8::Value"* %2356, null
  br i1 %2357, label %2358, label %2364

2358:                                             ; preds = %2352
  %2359 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2360 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2361 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2360, align 8
  %2362 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2361, i64 5
  %2363 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2362, align 8
  call void %2363(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2359) #8
  br label %2874

2364:                                             ; preds = %2352
  %2365 = bitcast %"class.v8::Value"* %2356 to i64*
  %2366 = load i64, i64* %2365, align 8
  %2367 = and i64 %2366, 3
  %2368 = icmp eq i64 %2367, 1
  br i1 %2368, label %2369, label %2386

2369:                                             ; preds = %2364
  %2370 = add i64 %2366, -1
  %2371 = inttoptr i64 %2370 to i32*
  %2372 = load i32, i32* %2371, align 4
  %2373 = and i64 %2366, -4294967296
  %2374 = zext i32 %2372 to i64
  %2375 = or i64 %2373, %2374
  %2376 = add i64 %2375, 7
  %2377 = inttoptr i64 %2376 to i16*
  %2378 = load i16, i16* %2377, align 2
  %2379 = icmp eq i16 %2378, 67
  br i1 %2379, label %2380, label %2386

2380:                                             ; preds = %2369
  %2381 = add i64 %2366, 23
  %2382 = inttoptr i64 %2381 to i32*
  %2383 = load i32, i32* %2382, align 4
  %2384 = and i32 %2383, -2
  %2385 = icmp eq i32 %2384, 10
  br i1 %2385, label %2526, label %2386

2386:                                             ; preds = %2369, %2364, %2380
  %2387 = bitcast %"class.blink::V8StringResource"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %2387) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2387, i8 -86, i64 152, i1 false)
  %2388 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %20, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %2356, %"class.v8::Value"** %2388, align 8
  %2389 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %20, i64 0, i32 1
  store i32 0, i32* %2389, align 8
  %2390 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %20, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2390, align 8
  %2391 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %20, i64 0, i32 3, i32 1
  %2392 = bitcast %"class.std::__1::unique_ptr"* %2391 to i64*
  store i64 0, i64* %2392, align 8
  %2393 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %20, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %2393, label %2394, label %2504

2394:                                             ; preds = %2386
  %2395 = load %"class.v8::Value"*, %"class.v8::Value"** %2388, align 8
  %2396 = icmp eq %"class.v8::Value"* %2395, null
  br i1 %2396, label %2397, label %2421, !prof !2

2397:                                             ; preds = %2394
  %2398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2390, align 8
  %2399 = icmp eq %"class.WTF::StringImpl"* %2398, null
  br i1 %2399, label %2400, label %2402

2400:                                             ; preds = %2397
  %2401 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 19
  br label %2446

2402:                                             ; preds = %2397
  %2403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2398, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2404 = load atomic i32, i32* %2403 monotonic, align 4
  %2405 = and i32 %2404, 2
  %2406 = icmp eq i32 %2405, 0
  br i1 %2406, label %2407, label %2419

2407:                                             ; preds = %2402
  %2408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2398, i64 0, i32 0
  %2409 = load i32, i32* %2408, align 4
  %2410 = zext i32 %2409 to i33
  %2411 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2410, i33 1) #8
  %2412 = extractvalue { i33, i1 } %2411, 1
  %2413 = extractvalue { i33, i1 } %2411, 0
  %2414 = icmp slt i33 %2413, 0
  %2415 = or i1 %2412, %2414
  br i1 %2415, label %2416, label %2417, !prof !2

2416:                                             ; preds = %2407
  call void @llvm.trap() #8
  unreachable

2417:                                             ; preds = %2407
  %2418 = trunc i33 %2413 to i32
  store i32 %2418, i32* %2408, align 4
  br label %2419

2419:                                             ; preds = %2402, %2417
  %2420 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 19
  br label %2427

2421:                                             ; preds = %2394
  %2422 = bitcast %"class.v8::Value"* %2395 to %"class.v8::String"*
  %2423 = load i32, i32* %2389, align 8
  %2424 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %2422, i32 %2423) #8
  %2425 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 19
  %2426 = icmp eq %"class.WTF::StringImpl"* %2424, null
  br i1 %2426, label %2446, label %2427

2427:                                             ; preds = %2419, %2421
  %2428 = phi %"class.WTF::String"* [ %2420, %2419 ], [ %2425, %2421 ]
  %2429 = phi %"class.WTF::StringImpl"* [ %2398, %2419 ], [ %2424, %2421 ]
  %2430 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2431 = load atomic i32, i32* %2430 monotonic, align 4
  %2432 = and i32 %2431, 2
  %2433 = icmp eq i32 %2432, 0
  br i1 %2433, label %2434, label %2446

2434:                                             ; preds = %2427
  %2435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2429, i64 0, i32 0
  %2436 = load i32, i32* %2435, align 4
  %2437 = zext i32 %2436 to i33
  %2438 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2437, i33 1) #8
  %2439 = extractvalue { i33, i1 } %2438, 1
  %2440 = extractvalue { i33, i1 } %2438, 0
  %2441 = icmp slt i33 %2440, 0
  %2442 = or i1 %2439, %2441
  br i1 %2442, label %2443, label %2444, !prof !2

2443:                                             ; preds = %2434
  call void @llvm.trap() #8
  unreachable

2444:                                             ; preds = %2434
  %2445 = trunc i33 %2440 to i32
  store i32 %2445, i32* %2435, align 4
  br label %2446

2446:                                             ; preds = %2400, %2444, %2427, %2421
  %2447 = phi i1 [ false, %2444 ], [ false, %2427 ], [ true, %2421 ], [ true, %2400 ]
  %2448 = phi %"class.WTF::String"* [ %2428, %2444 ], [ %2428, %2427 ], [ %2425, %2421 ], [ %2401, %2400 ]
  %2449 = phi %"class.WTF::StringImpl"* [ %2429, %2444 ], [ %2429, %2427 ], [ null, %2421 ], [ null, %2400 ]
  %2450 = ptrtoint %"class.WTF::StringImpl"* %2449 to i64
  %2451 = bitcast %"class.WTF::String"* %2448 to i64*
  %2452 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2448, i64 0, i32 0, i32 0
  %2453 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2452, align 8
  store i64 %2450, i64* %2451, align 8
  %2454 = icmp eq %"class.WTF::StringImpl"* %2453, null
  br i1 %2454, label %2468, label %2455

2455:                                             ; preds = %2446
  %2456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2453, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2457 = load atomic i32, i32* %2456 monotonic, align 4
  %2458 = and i32 %2457, 2
  %2459 = icmp eq i32 %2458, 0
  %2460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2453, i64 0, i32 0
  %2461 = load i32, i32* %2460, align 4
  br i1 %2459, label %2462, label %2464

2462:                                             ; preds = %2455
  %2463 = add i32 %2461, -1
  store i32 %2463, i32* %2460, align 4
  br label %2464

2464:                                             ; preds = %2462, %2455
  %2465 = phi i32 [ %2463, %2462 ], [ %2461, %2455 ]
  %2466 = icmp eq i32 %2465, 0
  br i1 %2466, label %2467, label %2468

2467:                                             ; preds = %2464
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2453) #8
  br label %2468

2468:                                             ; preds = %2446, %2464, %2467
  br i1 %2447, label %2482, label %2469

2469:                                             ; preds = %2468
  %2470 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2449, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2471 = load atomic i32, i32* %2470 monotonic, align 4
  %2472 = and i32 %2471, 2
  %2473 = icmp eq i32 %2472, 0
  %2474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2449, i64 0, i32 0
  %2475 = load i32, i32* %2474, align 4
  br i1 %2473, label %2476, label %2478

2476:                                             ; preds = %2469
  %2477 = add i32 %2475, -1
  store i32 %2477, i32* %2474, align 4
  br label %2478

2478:                                             ; preds = %2476, %2469
  %2479 = phi i32 [ %2477, %2476 ], [ %2475, %2469 ]
  %2480 = icmp eq i32 %2479, 0
  br i1 %2480, label %2481, label %2482

2481:                                             ; preds = %2478
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2449) #8
  br label %2482

2482:                                             ; preds = %2468, %2478, %2481
  %2483 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %20, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2484 = load i8*, i8** %2483, align 8
  store i8* null, i8** %2483, align 8
  %2485 = icmp eq i8* %2484, null
  br i1 %2485, label %2487, label %2486

2486:                                             ; preds = %2482
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2484) #8
  br label %2487

2487:                                             ; preds = %2486, %2482
  %2488 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2390, align 8
  %2489 = icmp eq %"class.WTF::StringImpl"* %2488, null
  br i1 %2489, label %2503, label %2490

2490:                                             ; preds = %2487
  %2491 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2488, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2492 = load atomic i32, i32* %2491 monotonic, align 4
  %2493 = and i32 %2492, 2
  %2494 = icmp eq i32 %2493, 0
  %2495 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2488, i64 0, i32 0
  %2496 = load i32, i32* %2495, align 4
  br i1 %2494, label %2497, label %2499

2497:                                             ; preds = %2490
  %2498 = add i32 %2496, -1
  store i32 %2498, i32* %2495, align 4
  br label %2499

2499:                                             ; preds = %2497, %2490
  %2500 = phi i32 [ %2498, %2497 ], [ %2496, %2490 ]
  %2501 = icmp eq i32 %2500, 0
  br i1 %2501, label %2502, label %2503

2502:                                             ; preds = %2499
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2488) #8
  br label %2503

2503:                                             ; preds = %2487, %2499, %2502
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2387) #8
  br label %2526

2504:                                             ; preds = %2386
  %2505 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %20, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2506 = load i8*, i8** %2505, align 8
  store i8* null, i8** %2505, align 8
  %2507 = icmp eq i8* %2506, null
  br i1 %2507, label %2509, label %2508

2508:                                             ; preds = %2504
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2506) #8
  br label %2509

2509:                                             ; preds = %2508, %2504
  %2510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2390, align 8
  %2511 = icmp eq %"class.WTF::StringImpl"* %2510, null
  br i1 %2511, label %2525, label %2512

2512:                                             ; preds = %2509
  %2513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2510, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2514 = load atomic i32, i32* %2513 monotonic, align 4
  %2515 = and i32 %2514, 2
  %2516 = icmp eq i32 %2515, 0
  %2517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2510, i64 0, i32 0
  %2518 = load i32, i32* %2517, align 4
  br i1 %2516, label %2519, label %2521

2519:                                             ; preds = %2512
  %2520 = add i32 %2518, -1
  store i32 %2520, i32* %2517, align 4
  br label %2521

2521:                                             ; preds = %2519, %2512
  %2522 = phi i32 [ %2520, %2519 ], [ %2518, %2512 ]
  %2523 = icmp eq i32 %2522, 0
  br i1 %2523, label %2524, label %2525

2524:                                             ; preds = %2521
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2510) #8
  br label %2525

2525:                                             ; preds = %2509, %2521, %2524
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2387) #8
  br label %2874

2526:                                             ; preds = %2503, %2380
  %2527 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 16, i32 0
  %2528 = bitcast %"class.v8::Name"** %2527 to %"class.v8::Value"**
  %2529 = load %"class.v8::Value"*, %"class.v8::Value"** %2528, align 8
  %2530 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %2529) #8
  %2531 = icmp eq %"class.v8::Value"* %2530, null
  br i1 %2531, label %2532, label %2538

2532:                                             ; preds = %2526
  %2533 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2534 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2535 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2534, align 8
  %2536 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2535, i64 5
  %2537 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2536, align 8
  call void %2537(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2533) #8
  br label %2874

2538:                                             ; preds = %2526
  %2539 = bitcast %"class.v8::Value"* %2530 to i64*
  %2540 = load i64, i64* %2539, align 8
  %2541 = and i64 %2540, 3
  %2542 = icmp eq i64 %2541, 1
  br i1 %2542, label %2543, label %2560

2543:                                             ; preds = %2538
  %2544 = add i64 %2540, -1
  %2545 = inttoptr i64 %2544 to i32*
  %2546 = load i32, i32* %2545, align 4
  %2547 = and i64 %2540, -4294967296
  %2548 = zext i32 %2546 to i64
  %2549 = or i64 %2547, %2548
  %2550 = add i64 %2549, 7
  %2551 = inttoptr i64 %2550 to i16*
  %2552 = load i16, i16* %2551, align 2
  %2553 = icmp eq i16 %2552, 67
  br i1 %2553, label %2554, label %2560

2554:                                             ; preds = %2543
  %2555 = add i64 %2540, 23
  %2556 = inttoptr i64 %2555 to i32*
  %2557 = load i32, i32* %2556, align 4
  %2558 = and i32 %2557, -2
  %2559 = icmp eq i32 %2558, 10
  br i1 %2559, label %2700, label %2560

2560:                                             ; preds = %2543, %2538, %2554
  %2561 = bitcast %"class.blink::V8StringResource"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %2561) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2561, i8 -86, i64 152, i1 false)
  %2562 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %21, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %2530, %"class.v8::Value"** %2562, align 8
  %2563 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %21, i64 0, i32 1
  store i32 0, i32* %2563, align 8
  %2564 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %21, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2564, align 8
  %2565 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %21, i64 0, i32 3, i32 1
  %2566 = bitcast %"class.std::__1::unique_ptr"* %2565 to i64*
  store i64 0, i64* %2566, align 8
  %2567 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %21, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %2567, label %2568, label %2678

2568:                                             ; preds = %2560
  %2569 = load %"class.v8::Value"*, %"class.v8::Value"** %2562, align 8
  %2570 = icmp eq %"class.v8::Value"* %2569, null
  br i1 %2570, label %2571, label %2595, !prof !2

2571:                                             ; preds = %2568
  %2572 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2564, align 8
  %2573 = icmp eq %"class.WTF::StringImpl"* %2572, null
  br i1 %2573, label %2574, label %2576

2574:                                             ; preds = %2571
  %2575 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 20
  br label %2620

2576:                                             ; preds = %2571
  %2577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2572, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2578 = load atomic i32, i32* %2577 monotonic, align 4
  %2579 = and i32 %2578, 2
  %2580 = icmp eq i32 %2579, 0
  br i1 %2580, label %2581, label %2593

2581:                                             ; preds = %2576
  %2582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2572, i64 0, i32 0
  %2583 = load i32, i32* %2582, align 4
  %2584 = zext i32 %2583 to i33
  %2585 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2584, i33 1) #8
  %2586 = extractvalue { i33, i1 } %2585, 1
  %2587 = extractvalue { i33, i1 } %2585, 0
  %2588 = icmp slt i33 %2587, 0
  %2589 = or i1 %2586, %2588
  br i1 %2589, label %2590, label %2591, !prof !2

2590:                                             ; preds = %2581
  call void @llvm.trap() #8
  unreachable

2591:                                             ; preds = %2581
  %2592 = trunc i33 %2587 to i32
  store i32 %2592, i32* %2582, align 4
  br label %2593

2593:                                             ; preds = %2576, %2591
  %2594 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 20
  br label %2601

2595:                                             ; preds = %2568
  %2596 = bitcast %"class.v8::Value"* %2569 to %"class.v8::String"*
  %2597 = load i32, i32* %2563, align 8
  %2598 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %2596, i32 %2597) #8
  %2599 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 20
  %2600 = icmp eq %"class.WTF::StringImpl"* %2598, null
  br i1 %2600, label %2620, label %2601

2601:                                             ; preds = %2593, %2595
  %2602 = phi %"class.WTF::String"* [ %2594, %2593 ], [ %2599, %2595 ]
  %2603 = phi %"class.WTF::StringImpl"* [ %2572, %2593 ], [ %2598, %2595 ]
  %2604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2603, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2605 = load atomic i32, i32* %2604 monotonic, align 4
  %2606 = and i32 %2605, 2
  %2607 = icmp eq i32 %2606, 0
  br i1 %2607, label %2608, label %2620

2608:                                             ; preds = %2601
  %2609 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2603, i64 0, i32 0
  %2610 = load i32, i32* %2609, align 4
  %2611 = zext i32 %2610 to i33
  %2612 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2611, i33 1) #8
  %2613 = extractvalue { i33, i1 } %2612, 1
  %2614 = extractvalue { i33, i1 } %2612, 0
  %2615 = icmp slt i33 %2614, 0
  %2616 = or i1 %2613, %2615
  br i1 %2616, label %2617, label %2618, !prof !2

2617:                                             ; preds = %2608
  call void @llvm.trap() #8
  unreachable

2618:                                             ; preds = %2608
  %2619 = trunc i33 %2614 to i32
  store i32 %2619, i32* %2609, align 4
  br label %2620

2620:                                             ; preds = %2574, %2618, %2601, %2595
  %2621 = phi i1 [ false, %2618 ], [ false, %2601 ], [ true, %2595 ], [ true, %2574 ]
  %2622 = phi %"class.WTF::String"* [ %2602, %2618 ], [ %2602, %2601 ], [ %2599, %2595 ], [ %2575, %2574 ]
  %2623 = phi %"class.WTF::StringImpl"* [ %2603, %2618 ], [ %2603, %2601 ], [ null, %2595 ], [ null, %2574 ]
  %2624 = ptrtoint %"class.WTF::StringImpl"* %2623 to i64
  %2625 = bitcast %"class.WTF::String"* %2622 to i64*
  %2626 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2622, i64 0, i32 0, i32 0
  %2627 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2626, align 8
  store i64 %2624, i64* %2625, align 8
  %2628 = icmp eq %"class.WTF::StringImpl"* %2627, null
  br i1 %2628, label %2642, label %2629

2629:                                             ; preds = %2620
  %2630 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2627, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2631 = load atomic i32, i32* %2630 monotonic, align 4
  %2632 = and i32 %2631, 2
  %2633 = icmp eq i32 %2632, 0
  %2634 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2627, i64 0, i32 0
  %2635 = load i32, i32* %2634, align 4
  br i1 %2633, label %2636, label %2638

2636:                                             ; preds = %2629
  %2637 = add i32 %2635, -1
  store i32 %2637, i32* %2634, align 4
  br label %2638

2638:                                             ; preds = %2636, %2629
  %2639 = phi i32 [ %2637, %2636 ], [ %2635, %2629 ]
  %2640 = icmp eq i32 %2639, 0
  br i1 %2640, label %2641, label %2642

2641:                                             ; preds = %2638
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2627) #8
  br label %2642

2642:                                             ; preds = %2620, %2638, %2641
  br i1 %2621, label %2656, label %2643

2643:                                             ; preds = %2642
  %2644 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2623, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2645 = load atomic i32, i32* %2644 monotonic, align 4
  %2646 = and i32 %2645, 2
  %2647 = icmp eq i32 %2646, 0
  %2648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2623, i64 0, i32 0
  %2649 = load i32, i32* %2648, align 4
  br i1 %2647, label %2650, label %2652

2650:                                             ; preds = %2643
  %2651 = add i32 %2649, -1
  store i32 %2651, i32* %2648, align 4
  br label %2652

2652:                                             ; preds = %2650, %2643
  %2653 = phi i32 [ %2651, %2650 ], [ %2649, %2643 ]
  %2654 = icmp eq i32 %2653, 0
  br i1 %2654, label %2655, label %2656

2655:                                             ; preds = %2652
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2623) #8
  br label %2656

2656:                                             ; preds = %2642, %2652, %2655
  %2657 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %21, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2658 = load i8*, i8** %2657, align 8
  store i8* null, i8** %2657, align 8
  %2659 = icmp eq i8* %2658, null
  br i1 %2659, label %2661, label %2660

2660:                                             ; preds = %2656
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2658) #8
  br label %2661

2661:                                             ; preds = %2660, %2656
  %2662 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2564, align 8
  %2663 = icmp eq %"class.WTF::StringImpl"* %2662, null
  br i1 %2663, label %2677, label %2664

2664:                                             ; preds = %2661
  %2665 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2662, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2666 = load atomic i32, i32* %2665 monotonic, align 4
  %2667 = and i32 %2666, 2
  %2668 = icmp eq i32 %2667, 0
  %2669 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2662, i64 0, i32 0
  %2670 = load i32, i32* %2669, align 4
  br i1 %2668, label %2671, label %2673

2671:                                             ; preds = %2664
  %2672 = add i32 %2670, -1
  store i32 %2672, i32* %2669, align 4
  br label %2673

2673:                                             ; preds = %2671, %2664
  %2674 = phi i32 [ %2672, %2671 ], [ %2670, %2664 ]
  %2675 = icmp eq i32 %2674, 0
  br i1 %2675, label %2676, label %2677

2676:                                             ; preds = %2673
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2662) #8
  br label %2677

2677:                                             ; preds = %2661, %2673, %2676
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2561) #8
  br label %2700

2678:                                             ; preds = %2560
  %2679 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %21, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2680 = load i8*, i8** %2679, align 8
  store i8* null, i8** %2679, align 8
  %2681 = icmp eq i8* %2680, null
  br i1 %2681, label %2683, label %2682

2682:                                             ; preds = %2678
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2680) #8
  br label %2683

2683:                                             ; preds = %2682, %2678
  %2684 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2564, align 8
  %2685 = icmp eq %"class.WTF::StringImpl"* %2684, null
  br i1 %2685, label %2699, label %2686

2686:                                             ; preds = %2683
  %2687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2684, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2688 = load atomic i32, i32* %2687 monotonic, align 4
  %2689 = and i32 %2688, 2
  %2690 = icmp eq i32 %2689, 0
  %2691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2684, i64 0, i32 0
  %2692 = load i32, i32* %2691, align 4
  br i1 %2690, label %2693, label %2695

2693:                                             ; preds = %2686
  %2694 = add i32 %2692, -1
  store i32 %2694, i32* %2691, align 4
  br label %2695

2695:                                             ; preds = %2693, %2686
  %2696 = phi i32 [ %2694, %2693 ], [ %2692, %2686 ]
  %2697 = icmp eq i32 %2696, 0
  br i1 %2697, label %2698, label %2699

2698:                                             ; preds = %2695
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2684) #8
  br label %2699

2699:                                             ; preds = %2683, %2695, %2698
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2561) #8
  br label %2874

2700:                                             ; preds = %2677, %2554
  %2701 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 17, i32 0
  %2702 = bitcast %"class.v8::Name"** %2701 to %"class.v8::Value"**
  %2703 = load %"class.v8::Value"*, %"class.v8::Value"** %2702, align 8
  %2704 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %2703) #8
  %2705 = icmp eq %"class.v8::Value"* %2704, null
  br i1 %2705, label %2706, label %2712

2706:                                             ; preds = %2700
  %2707 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2708 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2709 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2708, align 8
  %2710 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2709, i64 5
  %2711 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2710, align 8
  call void %2711(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2707) #8
  br label %2874

2712:                                             ; preds = %2700
  %2713 = bitcast %"class.v8::Value"* %2704 to i64*
  %2714 = load i64, i64* %2713, align 8
  %2715 = and i64 %2714, 3
  %2716 = icmp eq i64 %2715, 1
  br i1 %2716, label %2717, label %2734

2717:                                             ; preds = %2712
  %2718 = add i64 %2714, -1
  %2719 = inttoptr i64 %2718 to i32*
  %2720 = load i32, i32* %2719, align 4
  %2721 = and i64 %2714, -4294967296
  %2722 = zext i32 %2720 to i64
  %2723 = or i64 %2721, %2722
  %2724 = add i64 %2723, 7
  %2725 = inttoptr i64 %2724 to i16*
  %2726 = load i16, i16* %2725, align 2
  %2727 = icmp eq i16 %2726, 67
  br i1 %2727, label %2728, label %2734

2728:                                             ; preds = %2717
  %2729 = add i64 %2714, 23
  %2730 = inttoptr i64 %2729 to i32*
  %2731 = load i32, i32* %2730, align 4
  %2732 = and i32 %2731, -2
  %2733 = icmp eq i32 %2732, 10
  br i1 %2733, label %2874, label %2734

2734:                                             ; preds = %2717, %2712, %2728
  %2735 = bitcast %"class.blink::V8StringResource"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %2735) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2735, i8 -86, i64 152, i1 false)
  %2736 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %22, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %2704, %"class.v8::Value"** %2736, align 8
  %2737 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %22, i64 0, i32 1
  store i32 0, i32* %2737, align 8
  %2738 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %22, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2738, align 8
  %2739 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %22, i64 0, i32 3, i32 1
  %2740 = bitcast %"class.std::__1::unique_ptr"* %2739 to i64*
  store i64 0, i64* %2740, align 8
  %2741 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %22, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %2741, label %2742, label %2852

2742:                                             ; preds = %2734
  %2743 = load %"class.v8::Value"*, %"class.v8::Value"** %2736, align 8
  %2744 = icmp eq %"class.v8::Value"* %2743, null
  br i1 %2744, label %2745, label %2769, !prof !2

2745:                                             ; preds = %2742
  %2746 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2738, align 8
  %2747 = icmp eq %"class.WTF::StringImpl"* %2746, null
  br i1 %2747, label %2748, label %2750

2748:                                             ; preds = %2745
  %2749 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 21
  br label %2794

2750:                                             ; preds = %2745
  %2751 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2746, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2752 = load atomic i32, i32* %2751 monotonic, align 4
  %2753 = and i32 %2752, 2
  %2754 = icmp eq i32 %2753, 0
  br i1 %2754, label %2755, label %2767

2755:                                             ; preds = %2750
  %2756 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2746, i64 0, i32 0
  %2757 = load i32, i32* %2756, align 4
  %2758 = zext i32 %2757 to i33
  %2759 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2758, i33 1) #8
  %2760 = extractvalue { i33, i1 } %2759, 1
  %2761 = extractvalue { i33, i1 } %2759, 0
  %2762 = icmp slt i33 %2761, 0
  %2763 = or i1 %2760, %2762
  br i1 %2763, label %2764, label %2765, !prof !2

2764:                                             ; preds = %2755
  call void @llvm.trap() #8
  unreachable

2765:                                             ; preds = %2755
  %2766 = trunc i33 %2761 to i32
  store i32 %2766, i32* %2756, align 4
  br label %2767

2767:                                             ; preds = %2750, %2765
  %2768 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 21
  br label %2775

2769:                                             ; preds = %2742
  %2770 = bitcast %"class.v8::Value"* %2743 to %"class.v8::String"*
  %2771 = load i32, i32* %2737, align 8
  %2772 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %2770, i32 %2771) #8
  %2773 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %2, i64 0, i32 21
  %2774 = icmp eq %"class.WTF::StringImpl"* %2772, null
  br i1 %2774, label %2794, label %2775

2775:                                             ; preds = %2767, %2769
  %2776 = phi %"class.WTF::String"* [ %2768, %2767 ], [ %2773, %2769 ]
  %2777 = phi %"class.WTF::StringImpl"* [ %2746, %2767 ], [ %2772, %2769 ]
  %2778 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2777, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2779 = load atomic i32, i32* %2778 monotonic, align 4
  %2780 = and i32 %2779, 2
  %2781 = icmp eq i32 %2780, 0
  br i1 %2781, label %2782, label %2794

2782:                                             ; preds = %2775
  %2783 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2777, i64 0, i32 0
  %2784 = load i32, i32* %2783, align 4
  %2785 = zext i32 %2784 to i33
  %2786 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2785, i33 1) #8
  %2787 = extractvalue { i33, i1 } %2786, 1
  %2788 = extractvalue { i33, i1 } %2786, 0
  %2789 = icmp slt i33 %2788, 0
  %2790 = or i1 %2787, %2789
  br i1 %2790, label %2791, label %2792, !prof !2

2791:                                             ; preds = %2782
  call void @llvm.trap() #8
  unreachable

2792:                                             ; preds = %2782
  %2793 = trunc i33 %2788 to i32
  store i32 %2793, i32* %2783, align 4
  br label %2794

2794:                                             ; preds = %2748, %2792, %2775, %2769
  %2795 = phi i1 [ false, %2792 ], [ false, %2775 ], [ true, %2769 ], [ true, %2748 ]
  %2796 = phi %"class.WTF::String"* [ %2776, %2792 ], [ %2776, %2775 ], [ %2773, %2769 ], [ %2749, %2748 ]
  %2797 = phi %"class.WTF::StringImpl"* [ %2777, %2792 ], [ %2777, %2775 ], [ null, %2769 ], [ null, %2748 ]
  %2798 = ptrtoint %"class.WTF::StringImpl"* %2797 to i64
  %2799 = bitcast %"class.WTF::String"* %2796 to i64*
  %2800 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2796, i64 0, i32 0, i32 0
  %2801 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2800, align 8
  store i64 %2798, i64* %2799, align 8
  %2802 = icmp eq %"class.WTF::StringImpl"* %2801, null
  br i1 %2802, label %2816, label %2803

2803:                                             ; preds = %2794
  %2804 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2801, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2805 = load atomic i32, i32* %2804 monotonic, align 4
  %2806 = and i32 %2805, 2
  %2807 = icmp eq i32 %2806, 0
  %2808 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2801, i64 0, i32 0
  %2809 = load i32, i32* %2808, align 4
  br i1 %2807, label %2810, label %2812

2810:                                             ; preds = %2803
  %2811 = add i32 %2809, -1
  store i32 %2811, i32* %2808, align 4
  br label %2812

2812:                                             ; preds = %2810, %2803
  %2813 = phi i32 [ %2811, %2810 ], [ %2809, %2803 ]
  %2814 = icmp eq i32 %2813, 0
  br i1 %2814, label %2815, label %2816

2815:                                             ; preds = %2812
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2801) #8
  br label %2816

2816:                                             ; preds = %2794, %2812, %2815
  br i1 %2795, label %2830, label %2817

2817:                                             ; preds = %2816
  %2818 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2797, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2819 = load atomic i32, i32* %2818 monotonic, align 4
  %2820 = and i32 %2819, 2
  %2821 = icmp eq i32 %2820, 0
  %2822 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2797, i64 0, i32 0
  %2823 = load i32, i32* %2822, align 4
  br i1 %2821, label %2824, label %2826

2824:                                             ; preds = %2817
  %2825 = add i32 %2823, -1
  store i32 %2825, i32* %2822, align 4
  br label %2826

2826:                                             ; preds = %2824, %2817
  %2827 = phi i32 [ %2825, %2824 ], [ %2823, %2817 ]
  %2828 = icmp eq i32 %2827, 0
  br i1 %2828, label %2829, label %2830

2829:                                             ; preds = %2826
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2797) #8
  br label %2830

2830:                                             ; preds = %2816, %2826, %2829
  %2831 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %22, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2832 = load i8*, i8** %2831, align 8
  store i8* null, i8** %2831, align 8
  %2833 = icmp eq i8* %2832, null
  br i1 %2833, label %2835, label %2834

2834:                                             ; preds = %2830
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2832) #8
  br label %2835

2835:                                             ; preds = %2834, %2830
  %2836 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2738, align 8
  %2837 = icmp eq %"class.WTF::StringImpl"* %2836, null
  br i1 %2837, label %2851, label %2838

2838:                                             ; preds = %2835
  %2839 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2836, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2840 = load atomic i32, i32* %2839 monotonic, align 4
  %2841 = and i32 %2840, 2
  %2842 = icmp eq i32 %2841, 0
  %2843 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2836, i64 0, i32 0
  %2844 = load i32, i32* %2843, align 4
  br i1 %2842, label %2845, label %2847

2845:                                             ; preds = %2838
  %2846 = add i32 %2844, -1
  store i32 %2846, i32* %2843, align 4
  br label %2847

2847:                                             ; preds = %2845, %2838
  %2848 = phi i32 [ %2846, %2845 ], [ %2844, %2838 ]
  %2849 = icmp eq i32 %2848, 0
  br i1 %2849, label %2850, label %2851

2850:                                             ; preds = %2847
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2836) #8
  br label %2851

2851:                                             ; preds = %2835, %2847, %2850
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2735) #8
  br label %2874

2852:                                             ; preds = %2734
  %2853 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %22, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2854 = load i8*, i8** %2853, align 8
  store i8* null, i8** %2853, align 8
  %2855 = icmp eq i8* %2854, null
  br i1 %2855, label %2857, label %2856

2856:                                             ; preds = %2852
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2854) #8
  br label %2857

2857:                                             ; preds = %2856, %2852
  %2858 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2738, align 8
  %2859 = icmp eq %"class.WTF::StringImpl"* %2858, null
  br i1 %2859, label %2873, label %2860

2860:                                             ; preds = %2857
  %2861 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2858, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2862 = load atomic i32, i32* %2861 monotonic, align 4
  %2863 = and i32 %2862, 2
  %2864 = icmp eq i32 %2863, 0
  %2865 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2858, i64 0, i32 0
  %2866 = load i32, i32* %2865, align 4
  br i1 %2864, label %2867, label %2869

2867:                                             ; preds = %2860
  %2868 = add i32 %2866, -1
  store i32 %2868, i32* %2865, align 4
  br label %2869

2869:                                             ; preds = %2867, %2860
  %2870 = phi i32 [ %2868, %2867 ], [ %2866, %2860 ]
  %2871 = icmp eq i32 %2870, 0
  br i1 %2871, label %2872, label %2873

2872:                                             ; preds = %2869
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2858) #8
  br label %2873

2873:                                             ; preds = %2857, %2869, %2872
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2735) #8
  br label %2874

2874:                                             ; preds = %1141, %236, %403, %584, %751, %932, %1099, %1156, %1323, %1446, %1613, %1794, %1829, %2010, %2177, %2358, %2525, %2706, %2873, %2851, %2728, %2699, %2532, %2351, %2184, %2003, %1836, %1787, %1620, %1439, %1330, %1106, %925, %758, %577, %410, %229, %62
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %56) #8
  br label %2875

2875:                                             ; preds = %40, %40, %4, %2874, %47
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #8
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #8
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #8
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #8
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #8
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #8
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #8
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #8
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.22, i64 0, i64 0)) #8
  %12 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #8
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.23, i64 0, i64 0)) #8
  %26 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #8
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #8
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare void @_ZN5blink10JsonWebKey9setKeyOpsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::JsonWebKey"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_18RsaOtherPrimesInfoEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #8
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18RsaOtherPrimesInfoEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #8
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.22, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.23, i64 0, i64 0)) #8
  %26 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18RsaOtherPrimesInfoEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #8
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare void @_ZN5blink10JsonWebKey6setOthERKNS_10HeapVectorINS_6MemberINS_18RsaOtherPrimesInfoEEELj0EEE(%"class.blink::JsonWebKey"*, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink10JsonWebKey8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::JsonWebKey"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #8
  %5 = tail call zeroext i1 @_ZN5blink14toV8JsonWebKeyEPKNS_10JsonWebKeyEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::JsonWebKey"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14toV8JsonWebKeyEPKNS_10JsonWebKeyEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::JsonWebKey"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %21 = add i64 %20, 8
  %22 = inttoptr i64 %21 to %"class.blink::V8PerIsolateData"**
  %23 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %22, align 8
  %24 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %23, i8* bitcast ([18 x i8*]* @_ZZN5blinkL23eternalV8JsonWebKeyKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.328"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.328"*)) #8
  %25 = extractvalue { i64, %"class.v8::Eternal"* } %24, 1
  %26 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #8
  %27 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 4, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %48, label %30

30:                                               ; preds = %4
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 1
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %37 = bitcast i8** %36 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %34, i32* %38, align 8
  %39 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  %40 = bitcast %"class.v8::String"* %39 to %"class.v8::Value"*
  %41 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 0, i32 0
  %42 = load %"class.v8::Name"*, %"class.v8::Name"** %41, align 8
  %43 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %42, %"class.v8::Value"* %40) #8
  %44 = trunc i16 %43 to i8
  %45 = icmp ne i8 %44, 0
  %46 = icmp ugt i16 %43, 255
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %405

48:                                               ; preds = %4, %30
  %49 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 5, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %70, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 1
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %59 = bitcast i8** %58 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %56, i32* %60, align 8
  %61 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #8
  %62 = bitcast %"class.v8::String"* %61 to %"class.v8::Value"*
  %63 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 1, i32 0
  %64 = load %"class.v8::Name"*, %"class.v8::Name"** %63, align 8
  %65 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %64, %"class.v8::Value"* %62) #8
  %66 = trunc i16 %65 to i8
  %67 = icmp ne i8 %66, 0
  %68 = icmp ugt i16 %65, 255
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %405

70:                                               ; preds = %48, %52
  %71 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 6, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %92, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #8
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %81 = bitcast i8** %80 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %78, i32* %82, align 8
  %83 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #8
  %84 = bitcast %"class.v8::String"* %83 to %"class.v8::Value"*
  %85 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 2, i32 0
  %86 = load %"class.v8::Name"*, %"class.v8::Name"** %85, align 8
  %87 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %86, %"class.v8::Value"* %84) #8
  %88 = trunc i16 %87 to i8
  %89 = icmp ne i8 %88, 0
  %90 = icmp ugt i16 %87, 255
  %91 = and i1 %90, %89
  br i1 %91, label %92, label %405

92:                                               ; preds = %70, %74
  %93 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 7, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %114, label %96

96:                                               ; preds = %92
  %97 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #8
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 1
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %103 = bitcast i8** %102 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %100, i32* %104, align 8
  %105 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #8
  %106 = bitcast %"class.v8::String"* %105 to %"class.v8::Value"*
  %107 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 3, i32 0
  %108 = load %"class.v8::Name"*, %"class.v8::Name"** %107, align 8
  %109 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %108, %"class.v8::Value"* %106) #8
  %110 = trunc i16 %109 to i8
  %111 = icmp ne i8 %110, 0
  %112 = icmp ugt i16 %109, 255
  %113 = and i1 %112, %111
  br i1 %113, label %114, label %405

114:                                              ; preds = %92, %96
  %115 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 8, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %136, label %118

118:                                              ; preds = %114
  %119 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #8
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 1
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %125 = bitcast i8** %124 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %125, align 8
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %122, i32* %126, align 8
  %127 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #8
  %128 = bitcast %"class.v8::String"* %127 to %"class.v8::Value"*
  %129 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 4, i32 0
  %130 = load %"class.v8::Name"*, %"class.v8::Name"** %129, align 8
  %131 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %130, %"class.v8::Value"* %128) #8
  %132 = trunc i16 %131 to i8
  %133 = icmp ne i8 %132, 0
  %134 = icmp ugt i16 %131, 255
  %135 = and i1 %134, %133
  br i1 %135, label %136, label %405

136:                                              ; preds = %114, %118
  %137 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 9, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %158, label %140

140:                                              ; preds = %136
  %141 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #8
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %138, %"class.WTF::StringImpl"** %142, align 8
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 1
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %147 = bitcast i8** %146 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %145, %"class.WTF::StringImpl"** %147, align 8
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %144, i32* %148, align 8
  %149 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #8
  %150 = bitcast %"class.v8::String"* %149 to %"class.v8::Value"*
  %151 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 5, i32 0
  %152 = load %"class.v8::Name"*, %"class.v8::Name"** %151, align 8
  %153 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %152, %"class.v8::Value"* %150) #8
  %154 = trunc i16 %153 to i8
  %155 = icmp ne i8 %154, 0
  %156 = icmp ugt i16 %153, 255
  %157 = and i1 %156, %155
  br i1 %157, label %158, label %405

158:                                              ; preds = %136, %140
  %159 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 1
  %160 = load i8, i8* %159, align 8, !range !4
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %176, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 10
  %164 = load i8, i8* %163, align 8, !range !4
  %165 = icmp eq i8 %164, 0
  %166 = select i1 %165, i64 192, i64 184
  %167 = add i64 %166, %20
  %168 = inttoptr i64 %167 to %"class.v8::Value"*
  %169 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 6, i32 0
  %170 = load %"class.v8::Name"*, %"class.v8::Name"** %169, align 8
  %171 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %170, %"class.v8::Value"* %168) #8
  %172 = trunc i16 %171 to i8
  %173 = icmp ne i8 %172, 0
  %174 = icmp ugt i16 %171, 255
  %175 = and i1 %174, %173
  br i1 %175, label %176, label %405

176:                                              ; preds = %158, %162
  %177 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 11, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %198, label %180

180:                                              ; preds = %176
  %181 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #8
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 1
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %187 = bitcast i8** %186 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %187, align 8
  %188 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %184, i32* %188, align 8
  %189 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #8
  %190 = bitcast %"class.v8::String"* %189 to %"class.v8::Value"*
  %191 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 7, i32 0
  %192 = load %"class.v8::Name"*, %"class.v8::Name"** %191, align 8
  %193 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %192, %"class.v8::Value"* %190) #8
  %194 = trunc i16 %193 to i8
  %195 = icmp ne i8 %194, 0
  %196 = icmp ugt i16 %193, 255
  %197 = and i1 %196, %195
  br i1 %197, label %198, label %405

198:                                              ; preds = %176, %180
  %199 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 2
  %200 = load i8, i8* %199, align 1, !range !4
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %213, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 12
  %204 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector"* dereferenceable(16) %203, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %205 = bitcast %"class.v8::Array"* %204 to %"class.v8::Value"*
  %206 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 8, i32 0
  %207 = load %"class.v8::Name"*, %"class.v8::Name"** %206, align 8
  %208 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %207, %"class.v8::Value"* %205) #8
  %209 = trunc i16 %208 to i8
  %210 = icmp ne i8 %209, 0
  %211 = icmp ugt i16 %208, 255
  %212 = and i1 %211, %210
  br i1 %212, label %213, label %405

213:                                              ; preds = %198, %202
  %214 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 13, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %235, label %217

217:                                              ; preds = %213
  %218 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #8
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %219, align 8
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 1
  %223 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %224 = bitcast i8** %223 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %224, align 8
  %225 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %221, i32* %225, align 8
  %226 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #8
  %227 = bitcast %"class.v8::String"* %226 to %"class.v8::Value"*
  %228 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 9, i32 0
  %229 = load %"class.v8::Name"*, %"class.v8::Name"** %228, align 8
  %230 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %229, %"class.v8::Value"* %227) #8
  %231 = trunc i16 %230 to i8
  %232 = icmp ne i8 %231, 0
  %233 = icmp ugt i16 %230, 255
  %234 = and i1 %233, %232
  br i1 %234, label %235, label %405

235:                                              ; preds = %213, %217
  %236 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 14, i32 0, i32 0
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %236, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %257, label %239

239:                                              ; preds = %235
  %240 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %240) #8
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %237, %"class.WTF::StringImpl"** %241, align 8
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 1
  %245 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %246 = bitcast i8** %245 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %244, %"class.WTF::StringImpl"** %246, align 8
  %247 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %243, i32* %247, align 8
  %248 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %240) #8
  %249 = bitcast %"class.v8::String"* %248 to %"class.v8::Value"*
  %250 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 10, i32 0
  %251 = load %"class.v8::Name"*, %"class.v8::Name"** %250, align 8
  %252 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %251, %"class.v8::Value"* %249) #8
  %253 = trunc i16 %252 to i8
  %254 = icmp ne i8 %253, 0
  %255 = icmp ugt i16 %252, 255
  %256 = and i1 %255, %254
  br i1 %256, label %257, label %405

257:                                              ; preds = %235, %239
  %258 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 3
  %259 = load i8, i8* %258, align 2, !range !4
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %272, label %261

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 15
  %263 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_18RsaOtherPrimesInfoEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* dereferenceable(16) %262, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %264 = bitcast %"class.v8::Array"* %263 to %"class.v8::Value"*
  %265 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 11, i32 0
  %266 = load %"class.v8::Name"*, %"class.v8::Name"** %265, align 8
  %267 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %266, %"class.v8::Value"* %264) #8
  %268 = trunc i16 %267 to i8
  %269 = icmp ne i8 %268, 0
  %270 = icmp ugt i16 %267, 255
  %271 = and i1 %270, %269
  br i1 %271, label %272, label %405

272:                                              ; preds = %257, %261
  %273 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 16, i32 0, i32 0
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %294, label %276

276:                                              ; preds = %272
  %277 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %277) #8
  %278 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %274, %"class.WTF::StringImpl"** %278, align 8
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 1
  %282 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %283 = bitcast i8** %282 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %281, %"class.WTF::StringImpl"** %283, align 8
  %284 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %280, i32* %284, align 8
  %285 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %277) #8
  %286 = bitcast %"class.v8::String"* %285 to %"class.v8::Value"*
  %287 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 12, i32 0
  %288 = load %"class.v8::Name"*, %"class.v8::Name"** %287, align 8
  %289 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %288, %"class.v8::Value"* %286) #8
  %290 = trunc i16 %289 to i8
  %291 = icmp ne i8 %290, 0
  %292 = icmp ugt i16 %289, 255
  %293 = and i1 %292, %291
  br i1 %293, label %294, label %405

294:                                              ; preds = %272, %276
  %295 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 17, i32 0, i32 0
  %296 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %295, align 8
  %297 = icmp eq %"class.WTF::StringImpl"* %296, null
  br i1 %297, label %316, label %298

298:                                              ; preds = %294
  %299 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %299) #8
  %300 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %296, %"class.WTF::StringImpl"** %300, align 8
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 1
  %304 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %305 = bitcast i8** %304 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %303, %"class.WTF::StringImpl"** %305, align 8
  %306 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %302, i32* %306, align 8
  %307 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %299) #8
  %308 = bitcast %"class.v8::String"* %307 to %"class.v8::Value"*
  %309 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 13, i32 0
  %310 = load %"class.v8::Name"*, %"class.v8::Name"** %309, align 8
  %311 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %310, %"class.v8::Value"* %308) #8
  %312 = trunc i16 %311 to i8
  %313 = icmp ne i8 %312, 0
  %314 = icmp ugt i16 %311, 255
  %315 = and i1 %314, %313
  br i1 %315, label %316, label %405

316:                                              ; preds = %294, %298
  %317 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 18, i32 0, i32 0
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %338, label %320

320:                                              ; preds = %316
  %321 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %321) #8
  %322 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %318, %"class.WTF::StringImpl"** %322, align 8
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 1
  %324 = load i32, i32* %323, align 4
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 1
  %326 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %327 = bitcast i8** %326 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %325, %"class.WTF::StringImpl"** %327, align 8
  %328 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %324, i32* %328, align 8
  %329 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %321) #8
  %330 = bitcast %"class.v8::String"* %329 to %"class.v8::Value"*
  %331 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 14, i32 0
  %332 = load %"class.v8::Name"*, %"class.v8::Name"** %331, align 8
  %333 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %332, %"class.v8::Value"* %330) #8
  %334 = trunc i16 %333 to i8
  %335 = icmp ne i8 %334, 0
  %336 = icmp ugt i16 %333, 255
  %337 = and i1 %336, %335
  br i1 %337, label %338, label %405

338:                                              ; preds = %316, %320
  %339 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 19, i32 0, i32 0
  %340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %339, align 8
  %341 = icmp eq %"class.WTF::StringImpl"* %340, null
  br i1 %341, label %360, label %342

342:                                              ; preds = %338
  %343 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %343) #8
  %344 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  store %"class.WTF::StringImpl"* %340, %"class.WTF::StringImpl"** %344, align 8
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 1
  %348 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %349 = bitcast i8** %348 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %347, %"class.WTF::StringImpl"** %349, align 8
  %350 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %346, i32* %350, align 8
  %351 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %343) #8
  %352 = bitcast %"class.v8::String"* %351 to %"class.v8::Value"*
  %353 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 15, i32 0
  %354 = load %"class.v8::Name"*, %"class.v8::Name"** %353, align 8
  %355 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %354, %"class.v8::Value"* %352) #8
  %356 = trunc i16 %355 to i8
  %357 = icmp ne i8 %356, 0
  %358 = icmp ugt i16 %355, 255
  %359 = and i1 %358, %357
  br i1 %359, label %360, label %405

360:                                              ; preds = %338, %342
  %361 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 20, i32 0, i32 0
  %362 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %361, align 8
  %363 = icmp eq %"class.WTF::StringImpl"* %362, null
  br i1 %363, label %382, label %364

364:                                              ; preds = %360
  %365 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %365) #8
  %366 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  store %"class.WTF::StringImpl"* %362, %"class.WTF::StringImpl"** %366, align 8
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 1
  %368 = load i32, i32* %367, align 4
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 1
  %370 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %371 = bitcast i8** %370 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %369, %"class.WTF::StringImpl"** %371, align 8
  %372 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %368, i32* %372, align 8
  %373 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %365) #8
  %374 = bitcast %"class.v8::String"* %373 to %"class.v8::Value"*
  %375 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 16, i32 0
  %376 = load %"class.v8::Name"*, %"class.v8::Name"** %375, align 8
  %377 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %376, %"class.v8::Value"* %374) #8
  %378 = trunc i16 %377 to i8
  %379 = icmp ne i8 %378, 0
  %380 = icmp ugt i16 %377, 255
  %381 = and i1 %380, %379
  br i1 %381, label %382, label %405

382:                                              ; preds = %360, %364
  %383 = getelementptr inbounds %"class.blink::JsonWebKey", %"class.blink::JsonWebKey"* %0, i64 0, i32 21, i32 0, i32 0
  %384 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %383, align 8
  %385 = icmp eq %"class.WTF::StringImpl"* %384, null
  br i1 %385, label %404, label %386

386:                                              ; preds = %382
  %387 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %387) #8
  %388 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 0
  store %"class.WTF::StringImpl"* %384, %"class.WTF::StringImpl"** %388, align 8
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 1
  %390 = load i32, i32* %389, align 4
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 1
  %392 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  %393 = bitcast i8** %392 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %391, %"class.WTF::StringImpl"** %393, align 8
  %394 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 %390, i32* %394, align 8
  %395 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %19)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %387) #8
  %396 = bitcast %"class.v8::String"* %395 to %"class.v8::Value"*
  %397 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %25, i64 17, i32 0
  %398 = load %"class.v8::Name"*, %"class.v8::Name"** %397, align 8
  %399 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %26, %"class.v8::Name"* %398, %"class.v8::Value"* %396) #8
  %400 = trunc i16 %399 to i8
  %401 = icmp ne i8 %400, 0
  %402 = icmp ugt i16 %399, 255
  %403 = and i1 %402, %401
  br i1 %403, label %404, label %405

404:                                              ; preds = %382, %386
  br label %405

405:                                              ; preds = %52, %96, %140, %180, %217, %261, %298, %342, %404, %386, %364, %320, %276, %239, %202, %162, %118, %74, %30
  %406 = phi i1 [ false, %30 ], [ false, %52 ], [ false, %74 ], [ false, %96 ], [ false, %118 ], [ false, %140 ], [ false, %162 ], [ false, %180 ], [ false, %202 ], [ false, %217 ], [ false, %239 ], [ false, %261 ], [ false, %276 ], [ false, %298 ], [ false, %320 ], [ false, %342 ], [ false, %364 ], [ true, %404 ], [ false, %386 ]
  ret i1 %406
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #8
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #8
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #8
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #8
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JsonWebKey"* @_ZN5blink17NativeValueTraitsINS_10JsonWebKeyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 176) #8
  %5 = bitcast i8* %4 to %"class.blink::JsonWebKey"*
  tail call void @_ZN5blink10JsonWebKeyC1Ev(%"class.blink::JsonWebKey"* %5) #8
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink12V8JsonWebKey6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_10JsonWebKeyERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::JsonWebKey"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::JsonWebKey"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.328"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink10JsonWebKeyC1Ev(%"class.blink::JsonWebKey"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !3

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #8
  br i1 %22, label %23, label %80, !prof !3

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #8
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #8
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #8
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #8
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #8
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #8
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 268173312
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.24, i64 0, i64 0)) #8
  %12 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #8
  br label %145

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #8
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %9) #8
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #8
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector"* %5 to i64*
  %35 = bitcast %"class.WTF::Vector"* %0 to i8*
  br label %99

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %38 = bitcast %"class.WTF::String"* %7 to i8*
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %41 = bitcast %"class.WTF::Vector"* %0 to i8*
  br label %42

42:                                               ; preds = %36, %90
  %43 = phi i32 [ 0, %36 ], [ %91, %90 ]
  %44 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %37, %"class.v8::Context"* %29, i32 %43) #8
  %45 = icmp eq %"class.v8::Value"* %44, null
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %48 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %49 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %49, i64 5
  %51 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %50, align 8
  call void %51(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %47) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #8
  br label %108

52:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #8
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %44, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %39, align 8
  %54 = load i32, i32* %40, align 8
  %55 = icmp eq i32 %54, 0
  %56 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  br i1 %55, label %58, label %57

57:                                               ; preds = %52
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #8
  br label %71

58:                                               ; preds = %52
  %59 = load i32, i32* %17, align 4
  %60 = load i32, i32* %16, align 8
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %69, label %62, !prof !2

62:                                               ; preds = %58
  %63 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %64 = zext i32 %59 to i64
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 %64
  %66 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %56, i64* %66, align 8
  %67 = load i32, i32* %17, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %17, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8
  br label %90

69:                                               ; preds = %58
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %7) #8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  br label %71

71:                                               ; preds = %69, %57
  %72 = phi %"class.WTF::StringImpl"* [ %70, %69 ], [ %53, %57 ]
  %73 = phi i32 [ 0, %69 ], [ 1, %57 ]
  %74 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #8
  br label %88

88:                                               ; preds = %87, %84, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8
  %89 = icmp eq i32 %73, 0
  br i1 %89, label %90, label %108

90:                                               ; preds = %62, %88
  %91 = add nuw i32 %43, 1
  %92 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %42, label %94

94:                                               ; preds = %90
  %95 = bitcast %"class.WTF::Vector"* %5 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = load i32, i32* %16, align 8
  %98 = load i32, i32* %17, align 4
  br label %99

99:                                               ; preds = %33, %94
  %100 = phi i8* [ %35, %33 ], [ %41, %94 ]
  %101 = phi i64* [ %34, %33 ], [ %95, %94 ]
  %102 = phi i32 [ 0, %33 ], [ %98, %94 ]
  %103 = phi i32 [ %27, %33 ], [ %97, %94 ]
  %104 = phi i64 [ %28, %33 ], [ %96, %94 ]
  %105 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #8
  %107 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  store atomic i64 %104, i64* %107 monotonic, align 8
  store i32 %103, i32* %105, align 8
  store i32 0, i32* %16, align 8
  store i32 %102, i32* %106, align 4
  store i32 0, i32* %17, align 4
  br label %108

108:                                              ; preds = %88, %46, %99
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #8
  %109 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %110 = icmp eq %"class.WTF::String"* %109, null
  br i1 %110, label %144, label %111, !prof !3

111:                                              ; preds = %108
  %112 = bitcast %"class.WTF::String"* %109 to i8*
  %113 = load i32, i32* %17, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %142, label %115, !prof !2

115:                                              ; preds = %111
  %116 = zext i32 %113 to i64
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 %116
  br label %118

118:                                              ; preds = %136, %115
  %119 = phi %"class.WTF::String"* [ %137, %136 ], [ %109, %115 ]
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #8
  br label %136

136:                                              ; preds = %135, %132, %118
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 1
  %138 = icmp eq %"class.WTF::String"* %137, %117
  br i1 %138, label %139, label %118

139:                                              ; preds = %136
  store i32 0, i32* %17, align 4
  %140 = bitcast %"class.WTF::Vector"* %5 to i8**
  %141 = load i8*, i8** %140, align 8
  br label %142

142:                                              ; preds = %139, %111
  %143 = phi i8* [ %141, %139 ], [ %112, %111 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %143) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %144

144:                                              ; preds = %108, %142
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %145

145:                                              ; preds = %144, %11
  ret void
}

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #8
  %9 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #8
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %13, label %14, label %74

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.WTF::String"* %6 to i8*
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %19

19:                                               ; preds = %14, %72
  %20 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %23

23:                                               ; preds = %19, %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %24 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %20, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %17, align 8
  %25 = load i32, i32* %18, align 8
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  br i1 %26, label %45, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #8
  %30 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #8
  br label %44

44:                                               ; preds = %28, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %89

45:                                               ; preds = %23
  %46 = load i32, i32* %12, align 4
  %47 = load i32, i32* %11, align 8
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %56, label %49, !prof !2

49:                                               ; preds = %45
  %50 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %51 = zext i32 %46 to i64
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 %51
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 %27, i64* %53, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %54 = load i32, i32* %12, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %12, align 4
  br label %72

56:                                               ; preds = %45
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #8
  br label %72

72:                                               ; preds = %49, %56, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %73 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %73, label %19, label %74

74:                                               ; preds = %72, %4
  %75 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 16, i1 false) #8
  br label %89

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %83 = bitcast %"class.WTF::Vector"* %5 to i64*
  %84 = bitcast %"class.WTF::Vector"* %0 to i64*
  store i64 0, i64* %84, align 8
  %85 = load i64, i64* %83, align 8
  %86 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load i32, i32* %11, align 8
  store i32 %87, i32* %81, align 8
  store i32 0, i32* %11, align 8
  %88 = load i32, i32* %12, align 4
  store i32 %88, i32* %82, align 4
  store i32 0, i32* %12, align 4
  br label %89

89:                                               ; preds = %44, %80, %78
  %90 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %91 = icmp eq %"class.WTF::String"* %90, null
  br i1 %91, label %125, label %92, !prof !3

92:                                               ; preds = %89
  %93 = bitcast %"class.WTF::String"* %90 to i8*
  %94 = load i32, i32* %12, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %123, label %96, !prof !2

96:                                               ; preds = %92
  %97 = zext i32 %94 to i64
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 %97
  br label %99

99:                                               ; preds = %117, %96
  %100 = phi %"class.WTF::String"* [ %118, %117 ], [ %90, %96 ]
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #8
  br label %117

117:                                              ; preds = %116, %113, %99
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 1
  %119 = icmp eq %"class.WTF::String"* %118, %98
  br i1 %119, label %120, label %99

120:                                              ; preds = %117
  store i32 0, i32* %12, align 4
  %121 = bitcast %"class.WTF::Vector"* %5 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %92
  %124 = phi i8* [ %122, %120 ], [ %93, %92 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %124) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %10, align 8
  br label %125

125:                                              ; preds = %89, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 152, i1 false)
  %7 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #8
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false) #8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #8
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %16 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #8
  %17 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %16) #8
  %18 = ptrtoint %"class.v8::String"* %17 to i64
  %19 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %"class.v8::String"* %17, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  br label %28

22:                                               ; preds = %13
  %23 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #8
  %24 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %25 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, i64 5
  %27 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %26, align 8
  call void %27(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %23) #8
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #8
  br label %55

28:                                               ; preds = %3, %21
  %29 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %35, label %31, !prof !2

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %29 to %"class.v8::String"*
  %33 = load i32, i32* %8, align 8
  %34 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %32, i32 %33) #8
  br label %55

35:                                               ; preds = %28
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %35, %31, %22
  %56 = phi %"class.WTF::StringImpl"* [ null, %22 ], [ %34, %31 ], [ null, %35 ], [ %36, %38 ], [ %36, %53 ]
  %57 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  store i8* null, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %55
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %58) #8
  br label %61

61:                                               ; preds = %60, %55
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #8
  br label %77

77:                                               ; preds = %61, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #8
  ret %"class.WTF::StringImpl"* %56
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.25, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.26, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_18RsaOtherPrimesInfoEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.blink::RsaOtherPrimesInfo"*, align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 16777216
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.24, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %112

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #8
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  %19 = icmp eq i32 %8, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %13
  %21 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18RsaOtherPrimesInfoEEEEEmm(i64 %9) #8
  %22 = lshr i64 %21, 3
  %23 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %22) #8
  %24 = ptrtoint %"class.blink::HeapVectorBacking"* %23 to i64
  %25 = bitcast %"class.blink::HeapVector"* %5 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = trunc i64 %22 to i32
  store i32 %26, i32* %16, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %23, i64 0, i32 0
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #8
  br label %32

32:                                               ; preds = %13, %20, %29
  %33 = phi i32 [ 0, %13 ], [ %26, %20 ], [ %26, %29 ]
  %34 = phi i64 [ 0, %13 ], [ %24, %20 ], [ %24, %29 ]
  %35 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %36 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #8
  %37 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::HeapVector"* %5 to i64*
  br label %90

41:                                               ; preds = %32
  %42 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %43 = bitcast %"class.blink::RsaOtherPrimesInfo"** %7 to i8*
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %45

45:                                               ; preds = %41, %81
  %46 = phi i32 [ 0, %41 ], [ %82, %81 ]
  %47 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %42, %"class.v8::Context"* %35, i32 %46) #8
  %48 = icmp eq %"class.v8::Value"* %47, null
  br i1 %48, label %49, label %56

49:                                               ; preds = %45
  %50 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %51 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %52 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %52, i64 5
  %54 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, align 8
  call void %54(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %50) #8
  %55 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %111

56:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %57 = call %"class.blink::RsaOtherPrimesInfo"* @_ZN5blink17NativeValueTraitsINS_18RsaOtherPrimesInfoEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %47, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  store %"class.blink::RsaOtherPrimesInfo"* %57, %"class.blink::RsaOtherPrimesInfo"** %7, align 8
  %58 = load i32, i32* %44, align 8
  %59 = icmp eq i32 %58, 0
  %60 = ptrtoint %"class.blink::RsaOtherPrimesInfo"* %57 to i64
  br i1 %59, label %61, label %79

61:                                               ; preds = %56
  %62 = load i32, i32* %17, align 4
  %63 = load i32, i32* %16, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %78, label %65, !prof !2

65:                                               ; preds = %61
  %66 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %66, i64 %67
  %69 = bitcast %"class.blink::Member"* %68 to i64*
  store atomic i64 %60, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.blink::RsaOtherPrimesInfo"* %57 to i8*
  %74 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #8
  br label %75

75:                                               ; preds = %72, %65
  %76 = load i32, i32* %17, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %17, align 4
  br label %81

78:                                               ; preds = %61
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18RsaOtherPrimesInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3"* nonnull %18, %"class.blink::RsaOtherPrimesInfo"** nonnull dereferenceable(8) %7) #8
  br label %81

79:                                               ; preds = %56
  %80 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  br label %111

81:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %82 = add nuw i32 %46, 1
  %83 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %84 = icmp ult i32 %82, %83
  br i1 %84, label %45, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.blink::HeapVector"* %5 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i32, i32* %16, align 8
  %89 = load i32, i32* %17, align 4
  br label %90

90:                                               ; preds = %39, %85
  %91 = phi i64* [ %40, %39 ], [ %86, %85 ]
  %92 = phi i32 [ 0, %39 ], [ %89, %85 ]
  %93 = phi i32 [ %33, %39 ], [ %88, %85 ]
  %94 = phi i64 [ %34, %39 ], [ %87, %85 ]
  %95 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %97 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %97, align 8
  %98 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %91 monotonic, align 8
  store atomic i64 %94, i64* %98 monotonic, align 8
  store i32 %93, i32* %95, align 8
  store i32 0, i32* %16, align 8
  store i32 %92, i32* %96, align 4
  store i32 0, i32* %17, align 4
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %90
  %102 = inttoptr i64 %94 to i8*
  %103 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #8
  br label %104

104:                                              ; preds = %101, %90
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #8
  br label %111

111:                                              ; preds = %49, %79, %107, %104
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %112

112:                                              ; preds = %111, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_18RsaOtherPrimesInfoEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.blink::RsaOtherPrimesInfo"*, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #8
  %9 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #8
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %13, label %14, label %50

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.blink::RsaOtherPrimesInfo"** %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  br label %19

19:                                               ; preds = %14, %48
  %20 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %23

23:                                               ; preds = %19, %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %24 = call %"class.blink::RsaOtherPrimesInfo"* @_ZN5blink17NativeValueTraitsINS_18RsaOtherPrimesInfoEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %20, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  store %"class.blink::RsaOtherPrimesInfo"* %24, %"class.blink::RsaOtherPrimesInfo"** %6, align 8
  %25 = load i32, i32* %17, align 8
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"class.blink::RsaOtherPrimesInfo"* %24 to i64
  br i1 %26, label %30, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %77

30:                                               ; preds = %23
  %31 = load i32, i32* %12, align 4
  %32 = load i32, i32* %11, align 8
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %47, label %34, !prof !2

34:                                               ; preds = %30
  %35 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %35, i64 %36
  %38 = bitcast %"class.blink::Member"* %37 to i64*
  store atomic i64 %27, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.blink::RsaOtherPrimesInfo"* %24 to i8*
  %43 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #8
  br label %44

44:                                               ; preds = %41, %34
  %45 = load i32, i32* %12, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %12, align 4
  br label %48

47:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18RsaOtherPrimesInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3"* nonnull %18, %"class.blink::RsaOtherPrimesInfo"** nonnull dereferenceable(8) %6) #8
  br label %48

48:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %49 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %49, label %19, label %50

50:                                               ; preds = %48, %4
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %77

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.blink::HeapVector"* %5 to i64*
  %60 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = load i32, i32* %11, align 8
  store i32 %63, i32* %57, align 8
  store i32 0, i32* %11, align 8
  %64 = load i32, i32* %12, align 4
  store i32 %64, i32* %58, align 4
  store i32 0, i32* %12, align 4
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %56
  %68 = inttoptr i64 %61 to i8*
  %69 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %68) #8
  br label %70

70:                                               ; preds = %67, %56
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #8
  br label %77

77:                                               ; preds = %73, %70, %28, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

declare %"class.blink::RsaOtherPrimesInfo"* @_ZN5blink17NativeValueTraitsINS_18RsaOtherPrimesInfoEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18RsaOtherPrimesInfoEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.25, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.29, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.31, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([177 x i8], [177 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18RsaOtherPrimesInfoEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, {}*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, {}* bitcast (void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18RsaOtherPrimesInfoEE5TraceEPNS_7VisitorEPKv to {}*)) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18RsaOtherPrimesInfoEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RsaOtherPrimesInfo"*
  %4 = bitcast i8* %1 to void (%"class.blink::RsaOtherPrimesInfo"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::RsaOtherPrimesInfo"*, %"class.blink::Visitor"*)**, void (%"class.blink::RsaOtherPrimesInfo"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::RsaOtherPrimesInfo"*, %"class.blink::Visitor"*)*, void (%"class.blink::RsaOtherPrimesInfo"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::RsaOtherPrimesInfo"*, %"class.blink::Visitor"*)*, void (%"class.blink::RsaOtherPrimesInfo"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::RsaOtherPrimesInfo"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18RsaOtherPrimesInfoEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3"*, %"class.blink::RsaOtherPrimesInfo"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18RsaOtherPrimesInfoEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3"* %0, i32 %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::RsaOtherPrimesInfo"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18RsaOtherPrimesInfoEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18RsaOtherPrimesInfoEEEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.27, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.28, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18RsaOtherPrimesInfoEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18RsaOtherPrimesInfoEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.3"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #8
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18RsaOtherPrimesInfoEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18RsaOtherPrimesInfoEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.3"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #8
  %33 = bitcast %"class.WTF::Vector.3"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #8
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.WTF::Vector"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #8
  %7 = bitcast %"class.absl::optional"* %5 to i64*
  store i64 -6148914691236517206, i64* %7, align 8
  store i8 0, i8* %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon.376* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #8
  %10 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %26, label %12, !prof !3

12:                                               ; preds = %3
  %13 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #8
  %14 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 3
  %15 = bitcast %"class.base::TickClock"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %13, %"class.blink::RuntimeCallStats"** %17, align 8
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %21 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #8
  %22 = bitcast %"class.base::TickClock"** %20 to i64*
  store i64 %16, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 2, i64 5
  %24 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 0
  %25 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %24, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %18, %"class.blink::RuntimeCallCounter"* %23, %"class.blink::RuntimeCallTimer"* %25) #8
  store %"class.blink::RuntimeCallTimer"* %18, %"class.blink::RuntimeCallTimer"** %24, align 8
  store i8 1, i8* %6, align 8
  br label %26

26:                                               ; preds = %3, %12
  %27 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %27) #8
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %26
  call void @llvm.trap() #8
  unreachable

32:                                               ; preds = %26
  %33 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %29) #8
  %34 = ptrtoint %"class.v8::Array"* %33 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %27) #8
  %35 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::String"*, %"class.WTF::String"** %36, align 8
  %38 = load i32, i32* %28, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 %39
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %80, label %42

42:                                               ; preds = %32
  %43 = bitcast %"class.WTF::StringView"* %4 to i8*
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  %47 = bitcast %"class.WTF::StringView"* %4 to i64*
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %49 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %50 = add i64 %49, 160
  %51 = bitcast %"class.v8::Array"* %33 to %"class.v8::Object"*
  br label %52

52:                                               ; preds = %42, %76
  %53 = phi i32 [ 0, %42 ], [ %77, %76 ]
  %54 = phi %"class.WTF::String"* [ %37, %42 ], [ %78, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #8
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  store i8* null, i8** %45, align 8
  %59 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %59, i64* %47, align 8
  br label %64

60:                                               ; preds = %52
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %44, align 8
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 1
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %46, align 8
  br label %64

64:                                               ; preds = %58, %60
  %65 = phi i32 [ %62, %60 ], [ 0, %58 ]
  store i32 %65, i32* %48, align 8
  %66 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #8
  %67 = ptrtoint %"class.v8::String"* %66 to i64
  %68 = icmp eq %"class.v8::String"* %66, null
  %69 = select i1 %68, i64 %50, i64 %67
  %70 = inttoptr i64 %69 to %"class.v8::Value"*
  %71 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %51, %"class.v8::Context"* %35, i32 %53, %"class.v8::Value"* %70) #8
  %72 = trunc i16 %71 to i8
  %73 = icmp eq i8 %72, 0
  %74 = icmp ult i16 %71, 256
  %75 = or i1 %74, %73
  br i1 %75, label %80, label %76, !prof !6

76:                                               ; preds = %64
  %77 = add i32 %53, 1
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %40
  br i1 %79, label %80, label %52

80:                                               ; preds = %76, %64, %32
  %81 = phi i64 [ %34, %32 ], [ 0, %64 ], [ %34, %76 ]
  %82 = load i8, i8* %6, align 8, !range !4
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %86 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %85, align 8
  %87 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %88 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %87) #8
  %89 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %86, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %88, %"class.blink::RuntimeCallTimer"** %89, align 8
  store i8 0, i8* %6, align 8
  br label %90

90:                                               ; preds = %80, %84
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #8
  %91 = inttoptr i64 %81 to %"class.v8::Array"*
  ret %"class.v8::Array"* %91
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_18RsaOtherPrimesInfoEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #8
  %6 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.376* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #8
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !3

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #8
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #8
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #8
  %27 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !3

30:                                               ; preds = %25
  call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #8
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #8
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %35 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member"*, %"class.blink::Member"** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %75, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %44 = add i64 %43, 176
  %45 = inttoptr i64 %44 to %"class.v8::Value"*
  %46 = add i64 %43, 160
  br label %47

47:                                               ; preds = %41, %71
  %48 = phi i32 [ 0, %41 ], [ %72, %71 ]
  %49 = phi %"class.blink::Member"* [ %36, %41 ], [ %73, %71 ]
  %50 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.blink::RsaOtherPrimesInfo"*, %"class.blink::RsaOtherPrimesInfo"** %50, align 8
  %52 = icmp eq %"class.blink::RsaOtherPrimesInfo"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::RsaOtherPrimesInfo", %"class.blink::RsaOtherPrimesInfo"* %51, i64 0, i32 0
  %55 = bitcast %"class.blink::RsaOtherPrimesInfo"* %51 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %56 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %56, i64 2
  %58 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %57, align 8
  %59 = call %"class.v8::Value"* %58(%"class.blink::IDLDictionaryBase"* nonnull %54, %"class.v8::Object"* %42, %"class.v8::Isolate"* %2) #8
  br label %60

60:                                               ; preds = %47, %53
  %61 = phi %"class.v8::Value"* [ %59, %53 ], [ %45, %47 ]
  %62 = ptrtoint %"class.v8::Value"* %61 to i64
  %63 = icmp eq %"class.v8::Value"* %61, null
  %64 = select i1 %63, i64 %46, i64 %62
  %65 = inttoptr i64 %64 to %"class.v8::Value"*
  %66 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %34, i32 %48, %"class.v8::Value"* %65) #8
  %67 = trunc i16 %66 to i8
  %68 = icmp eq i8 %67, 0
  %69 = icmp ult i16 %66, 256
  %70 = or i1 %69, %68
  br i1 %70, label %75, label %71, !prof !6

71:                                               ; preds = %60
  %72 = add i32 %48, 1
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %49, i64 1
  %74 = icmp eq %"class.blink::Member"* %73, %39
  br i1 %74, label %75, label %47

75:                                               ; preds = %71, %60, %31
  %76 = phi i64 [ %33, %31 ], [ 0, %60 ], [ %33, %71 ]
  %77 = load i8, i8* %5, align 8, !range !4
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %81 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %80, align 8
  %82 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %83 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %82) #8
  %84 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %81, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %83, %"class.blink::RuntimeCallTimer"** %84, align 8
  store i8 0, i8* %5, align 8
  br label %85

85:                                               ; preds = %75, %79
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #8
  %86 = inttoptr i64 %76 to %"class.v8::Array"*
  ret %"class.v8::Array"* %86
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
!6 = !{!"branch_weights", i32 2002, i32 2000}
