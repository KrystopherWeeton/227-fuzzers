; ModuleID = 'gen/third_party/blink/public/mojom/service_worker/service_worker_container.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/service_worker/service_worker_container.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter" = type { %"class.blink::mojom::blink::ServiceWorkerContainerHost"* }
%"class.blink::mojom::blink::ServiceWorkerContainerHost" = type { i32 (...)** }
%"class.blink::mojom::blink::ServiceWorkerContainerAsyncWaiter" = type { %"class.blink::mojom::blink::ServiceWorkerContainer"* }
%"class.blink::mojom::blink::ServiceWorkerContainer" = type { i32 (...)** }
%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting" = type { %"class.blink::mojom::blink::ServiceWorkerContainerHost" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"* }
%"class.blink::mojom::blink::ServiceWorkerRegistrationOptions" = type { %"class.blink::KURL", i32, i32 }
%"class.mojo::StructPtr.8" = type { %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::mojom::blink::FetchClientSettingsObject"* }
%"class.blink::mojom::blink::FetchClientSettingsObject" = type <{ i32, [4 x i8], %"class.blink::KURL", i32, [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i32 }
%"class.base::OnceCallback.21" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.22" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.25, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.25 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.26" }>
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingReceiver.27" = type { %"struct.mojo::internal::PendingReceiverState" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.base::FilePath"*, i32, i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::OnceCallback.31" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::StructPtr.32" = type { %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* }
%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo" = type { i64, %"class.blink::KURL", i32, [4 x i8], %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedReceiver", %"class.mojo::StructPtr.37", %"class.mojo::StructPtr.37", %"class.mojo::StructPtr.37" }
%"class.mojo::PendingAssociatedRemote" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.mojo::PendingAssociatedReceiver" = type { %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::StructPtr.37" = type { %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* }
%"class.blink::mojom::blink::ServiceWorkerObjectInfo" = type { i64, i32, %"class.blink::KURL", %"class.mojo::PendingAssociatedRemote.41", %"class.mojo::PendingAssociatedReceiver.43" }
%"class.mojo::PendingAssociatedRemote.41" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::PendingAssociatedReceiver.43" = type { %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.62, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.55", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.57" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.62 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.63 }
%class.scoped_refptr.63 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.64", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.64" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.65" }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__cxx_atomic_impl.68" }
%"struct.std::__1::__cxx_atomic_impl.68" = type { %"struct.std::__1::__cxx_atomic_base_impl.69" }
%"struct.std::__1::__cxx_atomic_base_impl.69" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.72 }
%union.anon.72 = type { %"class.WTF::Vector.73" }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75" }
%"class.WTF::VectorBufferBase.75" = type { %"class.mojo::StructPtr.32"*, i32, i32 }
%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting" = type { %"class.blink::mojom::blink::ServiceWorkerContainer" }
%"class.mojo::StructPtr.84" = type { %"class.std::__1::unique_ptr.85" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::mojom::blink::ControllerServiceWorkerInfo"* }
%"class.blink::mojom::blink::ControllerServiceWorkerInfo" = type { i32, %"class.mojo::PendingRemote", %"class.WTF::String", %"class.absl::optional.88", %"class.mojo::StructPtr.37", %"class.WTF::Vector.93" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.absl::optional.88" = type { %"class.absl::optional_internal::optional_data.89" }
%"class.absl::optional_internal::optional_data.89" = type { %"class.absl::optional_internal::optional_data_base.90" }
%"class.absl::optional_internal::optional_data_base.90" = type { %"class.absl::optional_internal::optional_data_dtor_base.91" }
%"class.absl::optional_internal::optional_data_dtor_base.91" = type { i8, %union.anon.92 }
%union.anon.92 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.93" = type { %"class.WTF::VectorBuffer.94" }
%"class.WTF::VectorBuffer.94" = type { %"class.WTF::VectorBufferBase.95" }
%"class.WTF::VectorBufferBase.95" = type { i32*, i32, i32 }
%"struct.blink::BlinkTransferableMessage" = type <{ %"struct.blink::BlinkCloneableMessage", %"class.WTF::Vector.168", %"class.mojo::InlinedStructPtr", i8, [7 x i8] }>
%"struct.blink::BlinkCloneableMessage" = type { %class.scoped_refptr.101, %class.scoped_refptr.148, %"struct.v8_inspector::V8StackTraceId", %"class.absl::optional.88" }
%class.scoped_refptr.101 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.103", i64, %"class.WTF::Vector.107", %"class.WTF::Vector.112", %"class.WTF::Vector.118", %"class.WTF::Vector.136", %class.scoped_refptr.142, %"class.WTF::HashMap", %"class.WTF::Vector.151", %"class.WTF::Vector.107", %"class.WTF::Vector.157", %"class.WTF::HashMap.163", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.102" }
%"class.base::RefCountedThreadSafe.102" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { i8* }
%"class.WTF::Vector.112" = type { %"class.WTF::VectorBuffer.113" }
%"class.WTF::VectorBuffer.113" = type { %"class.WTF::VectorBufferBase.114", [8 x i8] }
%"class.WTF::VectorBufferBase.114" = type { %class.scoped_refptr.115*, i32, i32 }
%class.scoped_refptr.115 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.118" = type { %"class.WTF::VectorBuffer.119" }
%"class.WTF::VectorBuffer.119" = type { %"class.WTF::VectorBufferBase.120" }
%"class.WTF::VectorBufferBase.120" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.121 }
%class.scoped_refptr.121 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.136" = type { %"class.WTF::VectorBuffer.137" }
%"class.WTF::VectorBuffer.137" = type { %"class.WTF::VectorBufferBase.138" }
%"class.WTF::VectorBufferBase.138" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.139", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.139" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%class.scoped_refptr.142 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.143", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.148 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, %union.anon.147 }
%union.anon.147 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::Vector.151" = type { %"class.WTF::VectorBuffer.152" }
%"class.WTF::VectorBuffer.152" = type { %"class.WTF::VectorBufferBase.153" }
%"class.WTF::VectorBufferBase.153" = type { %"class.mojo::ScopedHandleBase.154"*, i32, i32 }
%"class.mojo::ScopedHandleBase.154" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.107" = type { %"class.WTF::VectorBuffer.108" }
%"class.WTF::VectorBuffer.108" = type { %"class.WTF::VectorBufferBase.109", [16 x i8] }
%"class.WTF::VectorBufferBase.109" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.157" = type { %"class.WTF::VectorBuffer.158" }
%"class.WTF::VectorBuffer.158" = type { %"class.WTF::VectorBufferBase.159" }
%"class.WTF::VectorBufferBase.159" = type { %"class.mojo::PendingRemote.160"*, i32, i32 }
%"class.mojo::PendingRemote.160" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.163" = type { %"class.WTF::HashTable.164" }
%"class.WTF::HashTable.164" = type <{ %"struct.WTF::KeyValuePair.167"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.167" = type { i8**, %"class.std::__1::unique_ptr.173" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%class.scoped_refptr.148 = type { %"class.blink::SecurityOrigin"* }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair", i8, [7 x i8] }>
%"struct.std::__1::pair" = type { i64, i64 }
%"class.WTF::Vector.168" = type { %"class.WTF::VectorBuffer.169" }
%"class.WTF::VectorBuffer.169" = type { %"class.WTF::VectorBufferBase.170" }
%"class.WTF::VectorBufferBase.170" = type { %"class.blink::MessagePortChannel"*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::UserActivationSnapshot", i32 }
%"class.blink::mojom::blink::UserActivationSnapshot" = type { i8, i8 }

$_ZN5blink5mojom5blink26ServiceWorkerContainerHostD2Ev = comdat any

$_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink22ServiceWorkerContainerD2Ev = comdat any

$_ZN5blink5mojom5blink43ServiceWorkerContainerInterceptorForTestingD0Ev = comdat any

$_ZN4absl17optional_internal13optional_dataIN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink35ServiceWorkerRegistrationObjectInfoEEELj0ENS2_18PartitionAllocatorEEELb0EEaSEOSD_ = comdat any

@.str = private unnamed_addr constant [9 x i8] c"Register\00", align 1
@.str.1 = private unnamed_addr constant [101 x i8] c"gen/third_party/blink/public/mojom/service_worker/service_worker_container.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"GetRegistration\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"GetRegistrations\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"GetRegistrationForReady\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"EnsureFileAccess\00", align 1
@_ZTVN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTestingE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)* @_ZN5blink5mojom5blink26ServiceWorkerContainerHostD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting8RegisterERKNS_4KURLEN4mojo9StructPtrINS1_32ServiceWorkerRegistrationOptionsEEENS7_INS1_25FetchClientSettingsObjectEEEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringENS7_INS1_35ServiceWorkerRegistrationObjectInfoEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting15GetRegistrationERKNS_4KURLEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringEN4mojo9StructPtrINS1_35ServiceWorkerRegistrationObjectInfoEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.base::OnceCallback.21"*)* @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting16GetRegistrationsEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringEN4absl8optionalINS6_6VectorIN4mojo9StructPtrINS1_35ServiceWorkerRegistrationObjectInfoEEELj0ENS6_18PartitionAllocatorEEEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.base::OnceCallback.22"*)* @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting23GetRegistrationForReadyEN4base12OnceCallbackIFvN4mojo9StructPtrINS1_35ServiceWorkerRegistrationObjectInfoEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.mojo::PendingReceiver"*, i32)* @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting29EnsureControllerServiceWorkerEN4mojo15PendingReceiverINS1_23ControllerServiceWorkerEEENS0_30ControllerServiceWorkerPurposeE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.mojo::PendingReceiver.27"*)* @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting18CloneContainerHostEN4mojo15PendingReceiverINS1_26ServiceWorkerContainerHostEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting25HintToUpdateServiceWorkerEv to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)* @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting16EnsureFileAccessERKN3WTF6VectorIN4base8FilePathELj0ENS3_18PartitionAllocatorEEENS5_12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting16OnExecutionReadyEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink43ServiceWorkerContainerInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainer"*)* @_ZN5blink5mojom5blink22ServiceWorkerContainerD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)* @_ZN5blink5mojom5blink43ServiceWorkerContainerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*, %"class.mojo::StructPtr.84"*, i1)* @_ZN5blink5mojom5blink43ServiceWorkerContainerInterceptorForTesting13SetControllerEN4mojo9StructPtrINS1_27ControllerServiceWorkerInfoEEEb to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*, %"class.mojo::StructPtr.37"*, %"struct.blink::BlinkTransferableMessage"*)* @_ZN5blink5mojom5blink43ServiceWorkerContainerInterceptorForTesting19PostMessageToClientEN4mojo9StructPtrINS1_23ServiceWorkerObjectInfoEEENS_24BlinkTransferableMessageE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*, i32)* @_ZN5blink5mojom5blink43ServiceWorkerContainerInterceptorForTesting12CountFeatureENS0_10WebFeatureE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiterC1EPNS1_26ServiceWorkerContainerHostE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"*), void (%"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"*)* @_ZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiterC2EPNS1_26ServiceWorkerContainerHostE
@_ZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"*), void (%"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"*)* @_ZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiterD2Ev
@_ZN5blink5mojom5blink33ServiceWorkerContainerAsyncWaiterC1EPNS1_22ServiceWorkerContainerE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ServiceWorkerContainerAsyncWaiter"*, %"class.blink::mojom::blink::ServiceWorkerContainer"*), void (%"class.blink::mojom::blink::ServiceWorkerContainerAsyncWaiter"*, %"class.blink::mojom::blink::ServiceWorkerContainer"*)* @_ZN5blink5mojom5blink33ServiceWorkerContainerAsyncWaiterC2EPNS1_22ServiceWorkerContainerE
@_ZN5blink5mojom5blink33ServiceWorkerContainerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ServiceWorkerContainerAsyncWaiter"*), void (%"class.blink::mojom::blink::ServiceWorkerContainerAsyncWaiter"*)* @_ZN5blink5mojom5blink33ServiceWorkerContainerAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting8RegisterERKNS_4KURLEN4mojo9StructPtrINS1_32ServiceWorkerRegistrationOptionsEEENS7_INS1_25FetchClientSettingsObjectEEEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringENS7_INS1_35ServiceWorkerRegistrationObjectInfoEEEEEE(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.blink::KURL"* dereferenceable(112), %"class.mojo::StructPtr"* nocapture, %"class.mojo::StructPtr.8"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::StructPtr", align 8
  %7 = alloca %"class.mojo::StructPtr.8", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)***
  %10 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %10, i64 11
  %12 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %11, align 8
  %13 = tail call %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %12(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0) #11
  %14 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %15 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 0, i64* %16, align 8
  %18 = bitcast %"class.mojo::StructPtr.8"* %7 to i64*
  %19 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.mojo::StructPtr.8"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %18, align 8
  store i64 0, i64* %20, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %26 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %13 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)***
  %27 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)** %27, i64 2
  %29 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)** %28, align 8
  call void %29(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %13, %"class.blink::KURL"* dereferenceable(112) %1, %"class.mojo::StructPtr"* nonnull %6, %"class.mojo::StructPtr.8"* nonnull %7, %"class.base::OnceCallback"* nonnull %8) #11
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #11
  %31 = load %"class.blink::mojom::blink::FetchClientSettingsObject"*, %"class.blink::mojom::blink::FetchClientSettingsObject"** %19, align 8
  store %"class.blink::mojom::blink::FetchClientSettingsObject"* null, %"class.blink::mojom::blink::FetchClientSettingsObject"** %19, align 8
  %32 = icmp eq %"class.blink::mojom::blink::FetchClientSettingsObject"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink25FetchClientSettingsObjectD1Ev(%"class.blink::mojom::blink::FetchClientSettingsObject"* nonnull %31) #11
  %34 = bitcast %"class.blink::mojom::blink::FetchClientSettingsObject"* %31 to i8*
  call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %5, %33
  %36 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"** %15, align 8
  store %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"* null, %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"** %15, align 8
  %37 = icmp eq %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  call void @_ZN5blink5mojom5blink32ServiceWorkerRegistrationOptionsD1Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"* nonnull %36) #11
  %39 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions", %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"* %36, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %35, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting15GetRegistrationERKNS_4KURLEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringEN4mojo9StructPtrINS1_35ServiceWorkerRegistrationObjectInfoEEEEEE(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.blink::KURL"* dereferenceable(112), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %6, i64 11
  %8 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %8(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %9 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)** %15, i64 3
  %17 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %9, %"class.blink::KURL"* dereferenceable(112) %1, %"class.base::OnceCallback"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting16GetRegistrationsEN4base12OnceCallbackIFvNS0_22ServiceWorkerErrorTypeERKN3WTF6StringEN4absl8optionalINS6_6VectorIN4mojo9StructPtrINS1_35ServiceWorkerRegistrationObjectInfoEEELj0ENS6_18PartitionAllocatorEEEEEEEE(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.base::OnceCallback.21"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.21", align 8
  %4 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %7(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.21"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.21"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %8 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)***
  %14 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)** %14, i64 4
  %16 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %8, %"class.base::OnceCallback.21"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting23GetRegistrationForReadyEN4base12OnceCallbackIFvN4mojo9StructPtrINS1_35ServiceWorkerRegistrationObjectInfoEEEEEE(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.base::OnceCallback.22"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.22", align 8
  %4 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %7(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.22"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.22"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %8 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)***
  %14 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)** %14, i64 5
  %16 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %8, %"class.base::OnceCallback.22"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting29EnsureControllerServiceWorkerEN4mojo15PendingReceiverINS1_23ControllerServiceWorkerEEENS0_30ControllerServiceWorkerPurposeE(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.mojo::PendingReceiver"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::PendingReceiver", align 8
  %5 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %6, i64 11
  %8 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %8(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %10, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %11) #11
  %12 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %9 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver"*, i32)***
  %13 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver"*, i32)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver"*, i32)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver"*, i32)** %13, i64 6
  %15 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver"*, i32)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver"*, i32)** %14, align 8
  call void %15(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %9, %"class.mojo::PendingReceiver"* nonnull %4, i32 %2) #11
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting18CloneContainerHostEN4mojo15PendingReceiverINS1_26ServiceWorkerContainerHostEEE(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.mojo::PendingReceiver.27"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingReceiver.27", align 8
  %4 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %7(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.mojo::PendingReceiver.27", %"class.mojo::PendingReceiver.27"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingReceiver.27", %"class.mojo::PendingReceiver.27"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %9, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %10) #11
  %11 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %8 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver.27"*)***
  %12 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver.27"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver.27"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver.27"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver.27"*)** %12, i64 7
  %14 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver.27"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.mojo::PendingReceiver.27"*)** %13, align 8
  call void %14(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %8, %"class.mojo::PendingReceiver.27"* nonnull %3) #11
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting25HintToUpdateServiceWorkerEv(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %3, i64 11
  %5 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %5(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0) #11
  %7 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %6 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)***
  %8 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)** %8, i64 8
  %10 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting16EnsureFileAccessERKN3WTF6VectorIN4base8FilePathELj0ENS3_18PartitionAllocatorEEENS5_12OnceCallbackIFvvEEE(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*, %"class.WTF::Vector"* dereferenceable(16), %"class.base::OnceCallback.31"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.31", align 8
  %5 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %6, i64 11
  %8 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %8(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback.31", %"class.base::OnceCallback.31"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.31"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.31"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %9 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)***
  %15 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)** %15, i64 9
  %17 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %9, %"class.WTF::Vector"* dereferenceable(16) %1, %"class.base::OnceCallback.31"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback.31", %"class.base::OnceCallback.31"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTesting16OnExecutionReadyEv(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %3, i64 11
  %5 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"* (%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %5(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"* %0) #11
  %7 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %6 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)***
  %8 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)** %8, i64 10
  %10 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %6) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiterC2EPNS1_26ServiceWorkerContainerHostE(%"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ServiceWorkerContainerHost"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %1, %"class.blink::mojom::blink::ServiceWorkerContainerHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiterD2Ev(%"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter8RegisterERKNS_4KURLEN4mojo9StructPtrINS1_32ServiceWorkerRegistrationOptionsEEENS7_INS1_25FetchClientSettingsObjectEEEPNS0_22ServiceWorkerErrorTypeEPN3WTF6StringEPNS7_INS1_35ServiceWorkerRegistrationObjectInfoEEE(%"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"* nocapture readonly, %"class.blink::KURL"* dereferenceable(112), %"class.mojo::StructPtr"* nocapture, %"class.mojo::StructPtr.8"* nocapture, i32*, %"class.WTF::String"*, %"class.mojo::StructPtr.32"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::RunLoop", align 8
  %9 = alloca %"class.mojo::StructPtr", align 8
  %10 = alloca %"class.mojo::StructPtr.8", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = ptrtoint i32* %4 to i64
  %14 = ptrtoint %"class.WTF::String"* %5 to i64
  %15 = ptrtoint %"class.mojo::StructPtr.32"* %6 to i64
  %16 = bitcast %"class.base::RunLoop"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %8, i32 0) #11
  %17 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"* %0, i64 0, i32 0
  %18 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"** %17, align 8
  %19 = bitcast %"class.mojo::StructPtr"* %9 to i64*
  %20 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %19, align 8
  store i64 0, i64* %21, align 8
  %23 = bitcast %"class.mojo::StructPtr.8"* %10 to i64*
  %24 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.mojo::StructPtr.8"* %3 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %23, align 8
  store i64 0, i64* %25, align 8
  %27 = ptrtoint %"class.base::RunLoop"* %8 to i64
  %28 = call i8* @_Znwm(i64 72) #12, !noalias !2
  %29 = bitcast i8* %28 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %29, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.WTF::String"*, %"class.mojo::StructPtr.32"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter8RegisterERKNS3_4KURLEN4mojo9StructPtrINS5_32ServiceWorkerRegistrationOptionsEEENSB_INS5_25FetchClientSettingsObjectEEEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPNSB_INS5_35ServiceWorkerRegistrationObjectInfoEEEE3$_0JPNS_7RunLoopESH_SK_SN_EEEFvSG_RKSJ_SM_EE7RunOnceEPNS0_13BindStateBaseESG_ST_OSM_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter8RegisterERKNS2_4KURLEN4mojo9StructPtrINS4_32ServiceWorkerRegistrationOptionsEEENSA_INS4_25FetchClientSettingsObjectEEEPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEPNSA_INS4_35ServiceWorkerRegistrationObjectInfoEEEE3$_0JPNS_7RunLoopESG_SJ_SM_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !2
  %30 = getelementptr inbounds i8, i8* %28, i64 40
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8, !noalias !2
  %32 = getelementptr inbounds i8, i8* %28, i64 48
  %33 = bitcast i8* %32 to i64*
  store i64 %13, i64* %33, align 8, !noalias !2
  %34 = getelementptr inbounds i8, i8* %28, i64 56
  %35 = bitcast i8* %34 to i64*
  store i64 %14, i64* %35, align 8, !noalias !2
  %36 = getelementptr inbounds i8, i8* %28, i64 64
  %37 = bitcast i8* %36 to i64*
  store i64 %15, i64* %37, align 8, !noalias !2
  %38 = bitcast %"class.base::OnceCallback"* %11 to i8**
  store i8* %28, i8** %38, align 8, !alias.scope !2
  %39 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %18 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)***
  %40 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)** %40, i64 2
  %42 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.8"*, %"class.base::OnceCallback"*)** %41, align 8
  call void %42(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %18, %"class.blink::KURL"* dereferenceable(112) %1, %"class.mojo::StructPtr"* nonnull %9, %"class.mojo::StructPtr.8"* nonnull %10, %"class.base::OnceCallback"* nonnull %11) #11
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #11
  %44 = load %"class.blink::mojom::blink::FetchClientSettingsObject"*, %"class.blink::mojom::blink::FetchClientSettingsObject"** %24, align 8
  store %"class.blink::mojom::blink::FetchClientSettingsObject"* null, %"class.blink::mojom::blink::FetchClientSettingsObject"** %24, align 8
  %45 = icmp eq %"class.blink::mojom::blink::FetchClientSettingsObject"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %7
  call void @_ZN5blink5mojom5blink25FetchClientSettingsObjectD1Ev(%"class.blink::mojom::blink::FetchClientSettingsObject"* nonnull %44) #11
  %47 = bitcast %"class.blink::mojom::blink::FetchClientSettingsObject"* %44 to i8*
  call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %7, %46
  %49 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"** %20, align 8
  store %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"* null, %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"** %20, align 8
  %50 = icmp eq %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  call void @_ZN5blink5mojom5blink32ServiceWorkerRegistrationOptionsD1Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"* nonnull %49) #11
  %52 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions", %"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"* %49, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %48, %51
  %54 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.1, i64 0, i64 0), i32 96) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %8, %"class.base::Location"* nonnull dereferenceable(32) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter15GetRegistrationERKNS_4KURLEPNS0_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo9StructPtrINS1_35ServiceWorkerRegistrationObjectInfoEEE(%"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"* nocapture readonly, %"class.blink::KURL"* dereferenceable(112), i32*, %"class.WTF::String"*, %"class.mojo::StructPtr.32"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RunLoop", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint i32* %2 to i64
  %10 = ptrtoint %"class.WTF::String"* %3 to i64
  %11 = ptrtoint %"class.mojo::StructPtr.32"* %4 to i64
  %12 = bitcast %"class.base::RunLoop"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %6, i32 0) #11
  %13 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"* %0, i64 0, i32 0
  %14 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"** %13, align 8
  %15 = ptrtoint %"class.base::RunLoop"* %6 to i64
  %16 = call i8* @_Znwm(i64 72) #12, !noalias !7
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.WTF::String"*, %"class.mojo::StructPtr.32"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter15GetRegistrationERKNS3_4KURLEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo9StructPtrINS5_35ServiceWorkerRegistrationObjectInfoEEEE3$_1JPNS_7RunLoopESB_SE_SJ_EEEFvSA_RKSD_SI_EE7RunOnceEPNS0_13BindStateBaseESA_SP_OSI_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter15GetRegistrationERKNS2_4KURLEPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo9StructPtrINS4_35ServiceWorkerRegistrationObjectInfoEEEE3$_1JPNS_7RunLoopESA_SD_SI_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !7
  %18 = getelementptr inbounds i8, i8* %16, i64 40
  %19 = bitcast i8* %18 to i64*
  store i64 %15, i64* %19, align 8, !noalias !7
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to i64*
  store i64 %9, i64* %21, align 8, !noalias !7
  %22 = getelementptr inbounds i8, i8* %16, i64 56
  %23 = bitcast i8* %22 to i64*
  store i64 %10, i64* %23, align 8, !noalias !7
  %24 = getelementptr inbounds i8, i8* %16, i64 64
  %25 = bitcast i8* %24 to i64*
  store i64 %11, i64* %25, align 8, !noalias !7
  %26 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %16, i8** %26, align 8, !alias.scope !7
  %27 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %14 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)***
  %28 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)** %28, i64 3
  %30 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback"*)** %29, align 8
  call void %30(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %14, %"class.blink::KURL"* dereferenceable(112) %1, %"class.base::OnceCallback"* nonnull %7) #11
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #11
  %32 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.1, i64 0, i64 0), i32 119) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %6, %"class.base::Location"* nonnull dereferenceable(32) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16GetRegistrationsEPNS0_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4absl8optionalINS5_6VectorIN4mojo9StructPtrINS1_35ServiceWorkerRegistrationObjectInfoEEELj0ENS5_18PartitionAllocatorEEEEE(%"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"* nocapture readonly, i32*, %"class.WTF::String"*, %"class.absl::optional"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.21", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %1 to i64
  %9 = ptrtoint %"class.WTF::String"* %2 to i64
  %10 = ptrtoint %"class.absl::optional"* %3 to i64
  %11 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %12 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"* %0, i64 0, i32 0
  %13 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"** %12, align 8
  %14 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %15 = call i8* @_Znwm(i64 72) #12, !noalias !12
  %16 = bitcast i8* %15 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %16, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.WTF::String"*, %"class.absl::optional"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16GetRegistrationsEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4absl8optionalINS9_6VectorIN4mojo9StructPtrINS5_35ServiceWorkerRegistrationObjectInfoEEELj0ENS9_18PartitionAllocatorEEEEEE3$_2JPNS_7RunLoopES8_SB_SM_EEEFvS7_RKSA_SL_EE7RunOnceEPNS0_13BindStateBaseES7_SS_OSL_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16GetRegistrationsEPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4absl8optionalINS8_6VectorIN4mojo9StructPtrINS4_35ServiceWorkerRegistrationObjectInfoEEELj0ENS8_18PartitionAllocatorEEEEEE3$_2JPNS_7RunLoopES7_SA_SL_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !12
  %17 = getelementptr inbounds i8, i8* %15, i64 40
  %18 = bitcast i8* %17 to i64*
  store i64 %14, i64* %18, align 8, !noalias !12
  %19 = getelementptr inbounds i8, i8* %15, i64 48
  %20 = bitcast i8* %19 to i64*
  store i64 %8, i64* %20, align 8, !noalias !12
  %21 = getelementptr inbounds i8, i8* %15, i64 56
  %22 = bitcast i8* %21 to i64*
  store i64 %9, i64* %22, align 8, !noalias !12
  %23 = getelementptr inbounds i8, i8* %15, i64 64
  %24 = bitcast i8* %23 to i64*
  store i64 %10, i64* %24, align 8, !noalias !12
  %25 = bitcast %"class.base::OnceCallback.21"* %6 to i8**
  store i8* %15, i8** %25, align 8, !alias.scope !12
  %26 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %13 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)***
  %27 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)** %27, i64 4
  %29 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.21"*)** %28, align 8
  call void %29(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %13, %"class.base::OnceCallback.21"* nonnull %6) #11
  %30 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #11
  %31 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.1, i64 0, i64 0), i32 142) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter23GetRegistrationForReadyEPN4mojo9StructPtrINS1_35ServiceWorkerRegistrationObjectInfoEEE(%"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"* nocapture readonly, %"class.mojo::StructPtr.32"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback.22", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = ptrtoint %"class.mojo::StructPtr.32"* %1 to i64
  %7 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #11
  %8 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"* %0, i64 0, i32 0
  %9 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"** %8, align 8
  %10 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %11 = call i8* @_Znwm(i64 56) #12, !noalias !17
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.32"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter23GetRegistrationForReadyEPN4mojo9StructPtrINS5_35ServiceWorkerRegistrationObjectInfoEEEE3$_3JPNS_7RunLoopESB_EEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter23GetRegistrationForReadyEPN4mojo9StructPtrINS4_35ServiceWorkerRegistrationObjectInfoEEEE3$_3JPNS_7RunLoopESA_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !17
  %13 = getelementptr inbounds i8, i8* %11, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8, !noalias !17
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 8, !noalias !17
  %17 = bitcast %"class.base::OnceCallback.22"* %4 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !17
  %18 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %9 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)***
  %19 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)** %19, i64 5
  %21 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.base::OnceCallback.22"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %9, %"class.base::OnceCallback.22"* nonnull %4) #11
  %22 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  %23 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.1, i64 0, i64 0), i32 157) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16EnsureFileAccessERKN3WTF6VectorIN4base8FilePathELj0ENS3_18PartitionAllocatorEEE(%"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"* nocapture readonly, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback.31", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #11
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerContainerHostAsyncWaiter"* %0, i64 0, i32 0
  %8 = load %"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.blink::mojom::blink::ServiceWorkerContainerHost"** %7, align 8
  %9 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %10 = call i8* @_Znwm(i64 48) #12, !noalias !22
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16EnsureFileAccessERKN3WTF6VectorINS_8FilePathELj0ENS7_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16EnsureFileAccessERKN3WTF6VectorINS_8FilePathELj0ENS6_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !22
  %12 = getelementptr inbounds i8, i8* %10, i64 40
  %13 = bitcast i8* %12 to i64*
  store i64 %9, i64* %13, align 8, !noalias !22
  %14 = bitcast %"class.base::OnceCallback.31"* %4 to i8**
  store i8* %10, i8** %14, align 8, !alias.scope !22
  %15 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerHost"* %8 to void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)***
  %16 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)** %16, i64 9
  %18 = load void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainerHost"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.31"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::ServiceWorkerContainerHost"* %8, %"class.WTF::Vector"* dereferenceable(16) %1, %"class.base::OnceCallback.31"* nonnull %4) #11
  %19 = getelementptr inbounds %"class.base::OnceCallback.31", %"class.base::OnceCallback.31"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #11
  %20 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.1, i64 0, i64 0), i32 168) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink43ServiceWorkerContainerInterceptorForTesting13SetControllerEN4mojo9StructPtrINS1_27ControllerServiceWorkerInfoEEEb(%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*, %"class.mojo::StructPtr.84"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr.84", align 8
  %5 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)** %6, i64 5
  %8 = load %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ServiceWorkerContainer"* %8(%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"* %0) #11
  %10 = bitcast %"class.mojo::StructPtr.84"* %4 to i64*
  %11 = getelementptr inbounds %"class.mojo::StructPtr.84", %"class.mojo::StructPtr.84"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.mojo::StructPtr.84"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 0, i64* %12, align 8
  %14 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainer"* %9 to void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.84"*, i1)***
  %15 = load void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.84"*, i1)**, void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.84"*, i1)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.84"*, i1)*, void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.84"*, i1)** %15, i64 2
  %17 = load void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.84"*, i1)*, void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.84"*, i1)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ServiceWorkerContainer"* %9, %"class.mojo::StructPtr.84"* nonnull %4, i1 zeroext %2) #11
  %18 = load %"class.blink::mojom::blink::ControllerServiceWorkerInfo"*, %"class.blink::mojom::blink::ControllerServiceWorkerInfo"** %11, align 8
  store %"class.blink::mojom::blink::ControllerServiceWorkerInfo"* null, %"class.blink::mojom::blink::ControllerServiceWorkerInfo"** %11, align 8
  %19 = icmp eq %"class.blink::mojom::blink::ControllerServiceWorkerInfo"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %3
  call void @_ZN5blink5mojom5blink27ControllerServiceWorkerInfoD1Ev(%"class.blink::mojom::blink::ControllerServiceWorkerInfo"* nonnull %18) #11
  %21 = bitcast %"class.blink::mojom::blink::ControllerServiceWorkerInfo"* %18 to i8*
  call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %3, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink43ServiceWorkerContainerInterceptorForTesting19PostMessageToClientEN4mojo9StructPtrINS1_23ServiceWorkerObjectInfoEEENS_24BlinkTransferableMessageE(%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*, %"class.mojo::StructPtr.37"* nocapture, %"struct.blink::BlinkTransferableMessage"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr.37", align 8
  %5 = alloca %"struct.blink::BlinkTransferableMessage", align 8
  %6 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)** %7, i64 5
  %9 = load %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::ServiceWorkerContainer"* %9(%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"* %0) #11
  %11 = bitcast %"class.mojo::StructPtr.37"* %4 to i64*
  %12 = getelementptr inbounds %"class.mojo::StructPtr.37", %"class.mojo::StructPtr.37"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.mojo::StructPtr.37"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 0, i64* %13, align 8
  call void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"* nonnull %5, %"struct.blink::BlinkTransferableMessage"* dereferenceable(104) %2) #11
  %15 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainer"* %10 to void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.37"*, %"struct.blink::BlinkTransferableMessage"*)***
  %16 = load void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.37"*, %"struct.blink::BlinkTransferableMessage"*)**, void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.37"*, %"struct.blink::BlinkTransferableMessage"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.37"*, %"struct.blink::BlinkTransferableMessage"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.37"*, %"struct.blink::BlinkTransferableMessage"*)** %16, i64 3
  %18 = load void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.37"*, %"struct.blink::BlinkTransferableMessage"*)*, void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, %"class.mojo::StructPtr.37"*, %"struct.blink::BlinkTransferableMessage"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::ServiceWorkerContainer"* %10, %"class.mojo::StructPtr.37"* nonnull %4, %"struct.blink::BlinkTransferableMessage"* nonnull %5) #11
  call void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"* nonnull %5) #11
  %19 = load %"class.blink::mojom::blink::ServiceWorkerObjectInfo"*, %"class.blink::mojom::blink::ServiceWorkerObjectInfo"** %12, align 8
  store %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* null, %"class.blink::mojom::blink::ServiceWorkerObjectInfo"** %12, align 8
  %20 = icmp eq %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  call void @_ZN5blink5mojom5blink23ServiceWorkerObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerObjectInfo"* nonnull %19) #11
  %22 = bitcast %"class.blink::mojom::blink::ServiceWorkerObjectInfo"* %19 to i8*
  call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %3, %21
  ret void
}

declare void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"*, %"struct.blink::BlinkTransferableMessage"* dereferenceable(104)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink43ServiceWorkerContainerInterceptorForTesting12CountFeatureENS0_10WebFeatureE(%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)** %4, i64 5
  %6 = load %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerContainer"* (%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::ServiceWorkerContainer"* %6(%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"* %0) #11
  %8 = bitcast %"class.blink::mojom::blink::ServiceWorkerContainer"* %7 to void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, i32)***
  %9 = load void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, i32)**, void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, i32)*, void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, i32)** %9, i64 4
  %11 = load void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, i32)*, void (%"class.blink::mojom::blink::ServiceWorkerContainer"*, i32)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::ServiceWorkerContainer"* %7, i32 %1) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink33ServiceWorkerContainerAsyncWaiterC2EPNS1_22ServiceWorkerContainerE(%"class.blink::mojom::blink::ServiceWorkerContainerAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ServiceWorkerContainer"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerContainerAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerContainerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ServiceWorkerContainer"* %1, %"class.blink::mojom::blink::ServiceWorkerContainer"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink33ServiceWorkerContainerAsyncWaiterD2Ev(%"class.blink::mojom::blink::ServiceWorkerContainerAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink26ServiceWorkerContainerHostD2Ev(%"class.blink::mojom::blink::ServiceWorkerContainerHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink47ServiceWorkerContainerHostInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ServiceWorkerContainerHostInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink22ServiceWorkerContainerD2Ev(%"class.blink::mojom::blink::ServiceWorkerContainer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink43ServiceWorkerContainerInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ServiceWorkerContainerInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink25FetchClientSettingsObjectD1Ev(%"class.blink::mojom::blink::FetchClientSettingsObject"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink32ServiceWorkerRegistrationOptionsD1Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationOptions"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink27ControllerServiceWorkerInfoD1Ev(%"class.blink::mojom::blink::ControllerServiceWorkerInfo"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink23ServiceWorkerObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerObjectInfo"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter8RegisterERKNS3_4KURLEN4mojo9StructPtrINS5_32ServiceWorkerRegistrationOptionsEEENSB_INS5_25FetchClientSettingsObjectEEEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPNSB_INS5_35ServiceWorkerRegistrationObjectInfoEEEE3$_0JPNS_7RunLoopESH_SK_SN_EEEFvSG_RKSJ_SM_EE7RunOnceEPNS0_13BindStateBaseESG_ST_OSM_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.mojo::StructPtr.32"* nocapture dereferenceable(8)) #0 align 2 {
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.base::RunLoop"**
  %7 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %8 = bitcast void ()** %7 to i32**
  %9 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %10 = bitcast void ()** %9 to %"class.WTF::String"**
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 3
  %12 = bitcast void ()** %11 to %"class.mojo::StructPtr.32"**
  %13 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %6, align 8
  %14 = load i32*, i32** %8, align 8
  %15 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %16 = load %"class.mojo::StructPtr.32"*, %"class.mojo::StructPtr.32"** %12, align 8
  %17 = bitcast %"class.mojo::StructPtr.32"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 0, i64* %17, align 8
  store i32 %1, i32* %14, align 4
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i33
  %31 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #11
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !27

36:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4
  br label %39

39:                                               ; preds = %37, %22, %4
  %40 = ptrtoint %"class.WTF::StringImpl"* %20 to i64
  %41 = bitcast %"class.WTF::String"* %15 to i64*
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  store i64 %40, i64* %41, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #11
  br label %58

58:                                               ; preds = %57, %54, %39
  %59 = getelementptr inbounds %"class.mojo::StructPtr.32", %"class.mojo::StructPtr.32"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"** %59, align 8
  store %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* null, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"** %59, align 8
  %61 = icmp eq %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %60, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  %63 = bitcast %"class.mojo::StructPtr.32"* %16 to i64*
  store i64 %18, i64* %63, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %13) #11
  br label %71

64:                                               ; preds = %58
  tail call void @_ZN5blink5mojom5blink35ServiceWorkerRegistrationObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* nonnull %60) #11
  %65 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %60 to i8*
  tail call void @_ZdlPv(i8* %65) #12
  %66 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"** %59, align 8
  %67 = bitcast %"class.mojo::StructPtr.32"* %16 to i64*
  store i64 %18, i64* %67, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %13) #11
  %68 = icmp eq %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %66, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  %70 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %66 to i8*
  tail call void @_ZN5blink5mojom5blink35ServiceWorkerRegistrationObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* nonnull %66) #11
  tail call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %62, %64, %69
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink35ServiceWorkerRegistrationObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter8RegisterERKNS2_4KURLEN4mojo9StructPtrINS4_32ServiceWorkerRegistrationOptionsEEENSA_INS4_25FetchClientSettingsObjectEEEPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEPNSA_INS4_35ServiceWorkerRegistrationObjectInfoEEEE3$_0JPNS_7RunLoopESG_SJ_SM_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter15GetRegistrationERKNS3_4KURLEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo9StructPtrINS5_35ServiceWorkerRegistrationObjectInfoEEEE3$_1JPNS_7RunLoopESB_SE_SJ_EEEFvSA_RKSD_SI_EE7RunOnceEPNS0_13BindStateBaseESA_SP_OSI_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.mojo::StructPtr.32"* nocapture dereferenceable(8)) #0 align 2 {
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.base::RunLoop"**
  %7 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %8 = bitcast void ()** %7 to i32**
  %9 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %10 = bitcast void ()** %9 to %"class.WTF::String"**
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 3
  %12 = bitcast void ()** %11 to %"class.mojo::StructPtr.32"**
  %13 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %6, align 8
  %14 = load i32*, i32** %8, align 8
  %15 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %16 = load %"class.mojo::StructPtr.32"*, %"class.mojo::StructPtr.32"** %12, align 8
  %17 = bitcast %"class.mojo::StructPtr.32"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 0, i64* %17, align 8
  store i32 %1, i32* %14, align 4
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i33
  %31 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #11
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !27

36:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4
  br label %39

39:                                               ; preds = %37, %22, %4
  %40 = ptrtoint %"class.WTF::StringImpl"* %20 to i64
  %41 = bitcast %"class.WTF::String"* %15 to i64*
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  store i64 %40, i64* %41, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #11
  br label %58

58:                                               ; preds = %57, %54, %39
  %59 = getelementptr inbounds %"class.mojo::StructPtr.32", %"class.mojo::StructPtr.32"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"** %59, align 8
  store %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* null, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"** %59, align 8
  %61 = icmp eq %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %60, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  %63 = bitcast %"class.mojo::StructPtr.32"* %16 to i64*
  store i64 %18, i64* %63, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %13) #11
  br label %71

64:                                               ; preds = %58
  tail call void @_ZN5blink5mojom5blink35ServiceWorkerRegistrationObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* nonnull %60) #11
  %65 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %60 to i8*
  tail call void @_ZdlPv(i8* %65) #12
  %66 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"** %59, align 8
  %67 = bitcast %"class.mojo::StructPtr.32"* %16 to i64*
  store i64 %18, i64* %67, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %13) #11
  %68 = icmp eq %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %66, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  %70 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %66 to i8*
  tail call void @_ZN5blink5mojom5blink35ServiceWorkerRegistrationObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* nonnull %66) #11
  tail call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %62, %64, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter15GetRegistrationERKNS2_4KURLEPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo9StructPtrINS4_35ServiceWorkerRegistrationObjectInfoEEEE3$_1JPNS_7RunLoopESA_SD_SI_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16GetRegistrationsEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4absl8optionalINS9_6VectorIN4mojo9StructPtrINS5_35ServiceWorkerRegistrationObjectInfoEEELj0ENS9_18PartitionAllocatorEEEEEE3$_2JPNS_7RunLoopES8_SB_SM_EEEFvS7_RKSA_SL_EE7RunOnceEPNS0_13BindStateBaseES7_SS_OSL_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.absl::optional"* nocapture dereferenceable(24)) #0 align 2 {
  %5 = alloca %"class.absl::optional", align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RunLoop"**
  %8 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %9 = bitcast void ()** %8 to i32**
  %10 = getelementptr inbounds void ()*, void ()** %6, i64 2
  %11 = bitcast void ()** %10 to %"class.WTF::String"**
  %12 = getelementptr inbounds void ()*, void ()** %6, i64 3
  %13 = bitcast void ()** %12 to %"class.absl::optional"**
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %7, align 8
  %16 = load i32*, i32** %9, align 8
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %18 = load %"class.absl::optional"*, %"class.absl::optional"** %13, align 8
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #11
  %20 = load i8, i8* %19, align 8, !range !28
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = bitcast %"class.WTF::Vector.73"* %23 to i64*
  %28 = bitcast %"class.WTF::Vector.73"* %24 to i64*
  store i64 0, i64* %28, align 8
  %29 = load i64, i64* %27, align 8
  store atomic i64 0, i64* %27 monotonic, align 8
  store atomic i64 %29, i64* %28 monotonic, align 8
  %30 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %25, align 8
  store i32 0, i32* %30, align 4
  %32 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %26, align 4
  store i32 0, i32* %32, align 4
  store i8 1, i8* %14, align 8
  br label %34

34:                                               ; preds = %22, %4
  store i32 %1, i32* %16, align 4
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #11
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !27

52:                                               ; preds = %43
  tail call void @llvm.trap() #11
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %34
  %56 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %57 = bitcast %"class.WTF::String"* %17 to i64*
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  store i64 %56, i64* %57, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #11
  br label %74

74:                                               ; preds = %73, %70, %55
  %75 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %18, i64 0, i32 0
  %76 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0
  %77 = call dereferenceable(24) %"class.absl::optional_internal::optional_data"* @_ZN4absl17optional_internal13optional_dataIN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink35ServiceWorkerRegistrationObjectInfoEEELj0ENS2_18PartitionAllocatorEEELb0EEaSEOSD_(%"class.absl::optional_internal::optional_data"* %75, %"class.absl::optional_internal::optional_data"* nonnull dereferenceable(24) %76) #11
  call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %15) #11
  %78 = load i8, i8* %14, align 8, !range !28
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %109, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.WTF::Vector.73", %"class.WTF::Vector.73"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.mojo::StructPtr.32"*, %"class.mojo::StructPtr.32"** %82, align 8
  %84 = icmp eq %"class.mojo::StructPtr.32"* %83, null
  br i1 %84, label %108, label %85, !prof !29

85:                                               ; preds = %80
  %86 = bitcast %"class.mojo::StructPtr.32"* %83 to i8*
  %87 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %106, label %90, !prof !27

90:                                               ; preds = %85
  %91 = zext i32 %88 to i64
  %92 = getelementptr inbounds %"class.mojo::StructPtr.32", %"class.mojo::StructPtr.32"* %83, i64 %91
  br label %93

93:                                               ; preds = %100, %90
  %94 = phi %"class.mojo::StructPtr.32"* [ %101, %100 ], [ %83, %90 ]
  %95 = getelementptr inbounds %"class.mojo::StructPtr.32", %"class.mojo::StructPtr.32"* %94, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"** %95, align 8
  store %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* null, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"** %95, align 8
  %97 = icmp eq %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  call void @_ZN5blink5mojom5blink35ServiceWorkerRegistrationObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* nonnull %96) #11
  %99 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %96 to i8*
  call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %98, %93
  %101 = getelementptr inbounds %"class.mojo::StructPtr.32", %"class.mojo::StructPtr.32"* %94, i64 1
  %102 = icmp eq %"class.mojo::StructPtr.32"* %101, %92
  br i1 %102, label %103, label %93

103:                                              ; preds = %100
  store i32 0, i32* %87, align 4
  %104 = bitcast %"class.WTF::Vector.73"* %81 to i8**
  %105 = load i8*, i8** %104, align 8
  br label %106

106:                                              ; preds = %103, %85
  %107 = phi i8* [ %105, %103 ], [ %86, %85 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %107) #11
  store %"class.mojo::StructPtr.32"* null, %"class.mojo::StructPtr.32"** %82, align 8
  br label %108

108:                                              ; preds = %106, %80
  store i8 0, i8* %14, align 8
  br label %109

109:                                              ; preds = %74, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.absl::optional_internal::optional_data"* @_ZN4absl17optional_internal13optional_dataIN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink35ServiceWorkerRegistrationObjectInfoEEELj0ENS2_18PartitionAllocatorEEELb0EEaSEOSD_(%"class.absl::optional_internal::optional_data"*, %"class.absl::optional_internal::optional_data"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !28
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !28
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %25, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.WTF::Vector.73"* %7 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.WTF::Vector.73"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  store atomic i64 %16, i64* %13 monotonic, align 8
  store atomic i64 %14, i64* %15 monotonic, align 8
  %17 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %17, align 4
  %20 = load i32, i32* %18, align 4
  store i32 %20, i32* %17, align 4
  store i32 %19, i32* %18, align 4
  %21 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %22 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %21, align 4
  %24 = load i32, i32* %22, align 4
  store i32 %24, i32* %21, align 4
  store i32 %23, i32* %22, align 4
  br label %71

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %28 = bitcast %"class.WTF::Vector.73"* %7 to i64*
  %29 = bitcast %"class.WTF::Vector.73"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %30 = load i64, i64* %28, align 8
  %31 = bitcast %"class.WTF::Vector.73"* %11 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %26, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %26, align 4
  store i32 %33, i32* %32, align 4
  %35 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %27, align 4
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %27, align 4
  store i32 %36, i32* %35, align 4
  store i8 1, i8* %8, align 8
  br label %71

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 8, !range !28
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %71, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.WTF::Vector.73", %"class.WTF::Vector.73"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.mojo::StructPtr.32"*, %"class.mojo::StructPtr.32"** %44, align 8
  %46 = icmp eq %"class.mojo::StructPtr.32"* %45, null
  br i1 %46, label %70, label %47, !prof !29

47:                                               ; preds = %42
  %48 = bitcast %"class.mojo::StructPtr.32"* %45 to i8*
  %49 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %68, label %52, !prof !27

52:                                               ; preds = %47
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds %"class.mojo::StructPtr.32", %"class.mojo::StructPtr.32"* %45, i64 %53
  br label %55

55:                                               ; preds = %62, %52
  %56 = phi %"class.mojo::StructPtr.32"* [ %63, %62 ], [ %45, %52 ]
  %57 = getelementptr inbounds %"class.mojo::StructPtr.32", %"class.mojo::StructPtr.32"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"** %57, align 8
  store %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* null, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"** %57, align 8
  %59 = icmp eq %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %55
  tail call void @_ZN5blink5mojom5blink35ServiceWorkerRegistrationObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* nonnull %58) #11
  %61 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %58 to i8*
  tail call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %60, %55
  %63 = getelementptr inbounds %"class.mojo::StructPtr.32", %"class.mojo::StructPtr.32"* %56, i64 1
  %64 = icmp eq %"class.mojo::StructPtr.32"* %63, %54
  br i1 %64, label %65, label %55

65:                                               ; preds = %62
  store i32 0, i32* %49, align 4
  %66 = bitcast %"class.WTF::Vector.73"* %43 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %65, %47
  %69 = phi i8* [ %67, %65 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %69) #11
  store %"class.mojo::StructPtr.32"* null, %"class.mojo::StructPtr.32"** %44, align 8
  br label %70

70:                                               ; preds = %68, %42
  store i8 0, i8* %39, align 8
  br label %71

71:                                               ; preds = %70, %38, %25, %12
  ret %"class.absl::optional_internal::optional_data"* %0
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16GetRegistrationsEPNS3_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4absl8optionalINS8_6VectorIN4mojo9StructPtrINS4_35ServiceWorkerRegistrationObjectInfoEEELj0ENS8_18PartitionAllocatorEEEEEE3$_2JPNS_7RunLoopES7_SA_SL_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter23GetRegistrationForReadyEPN4mojo9StructPtrINS5_35ServiceWorkerRegistrationObjectInfoEEEE3$_3JPNS_7RunLoopESB_EEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.32"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.32"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.32"*, %"class.mojo::StructPtr.32"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.32"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.32", %"class.mojo::StructPtr.32"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"** %11, align 8
  store %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* null, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.32"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink35ServiceWorkerRegistrationObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* nonnull %12) #11
  %17 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  %18 = load %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"*, %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.32"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  %20 = icmp eq %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink35ServiceWorkerRegistrationObjectInfoD1Ev(%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectInfo"* nonnull %18) #11
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter23GetRegistrationForReadyEPN4mojo9StructPtrINS4_35ServiceWorkerRegistrationObjectInfoEEEE3$_3JPNS_7RunLoopESA_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16EnsureFileAccessERKN3WTF6VectorINS_8FilePathELj0ENS7_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"class.base::RunLoop"**
  %4 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %3, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16EnsureFileAccessERKN3WTF6VectorINS_8FilePathELj0ENS6_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter8RegisterERKNS3_4KURLEN4mojo9StructPtrINS5_32ServiceWorkerRegistrationOptionsEEENSB_INS5_25FetchClientSettingsObjectEEEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPNSB_INS5_35ServiceWorkerRegistrationObjectInfoEEEE3$_0JPNS_7RunLoopERSH_RSK_RSN_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter8RegisterERKNS3_4KURLEN4mojo9StructPtrINS5_32ServiceWorkerRegistrationOptionsEEENSB_INS5_25FetchClientSettingsObjectEEEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPNSB_INS5_35ServiceWorkerRegistrationObjectInfoEEEE3$_0JPNS_7RunLoopERSH_RSK_RSN_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter8RegisterERKNS1_4KURLEN4mojo9StructPtrINS3_32ServiceWorkerRegistrationOptionsEEENS9_INS3_25FetchClientSettingsObjectEEEPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEPNS9_INS3_35ServiceWorkerRegistrationObjectInfoEEEE3$_0JPNS_7RunLoopERSF_RSI_RSL_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSV_DpOSW_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter8RegisterERKNS1_4KURLEN4mojo9StructPtrINS3_32ServiceWorkerRegistrationOptionsEEENS9_INS3_25FetchClientSettingsObjectEEEPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEPNS9_INS3_35ServiceWorkerRegistrationObjectInfoEEEE3$_0JPNS_7RunLoopERSF_RSI_RSL_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSV_DpOSW_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter15GetRegistrationERKNS3_4KURLEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo9StructPtrINS5_35ServiceWorkerRegistrationObjectInfoEEEE3$_1JPNS_7RunLoopERSB_RSE_RSJ_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter15GetRegistrationERKNS3_4KURLEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo9StructPtrINS5_35ServiceWorkerRegistrationObjectInfoEEEE3$_1JPNS_7RunLoopERSB_RSE_RSJ_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter15GetRegistrationERKNS1_4KURLEPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo9StructPtrINS3_35ServiceWorkerRegistrationObjectInfoEEEE3$_1JPNS_7RunLoopERS9_RSC_RSH_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSR_DpOSS_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter15GetRegistrationERKNS1_4KURLEPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4mojo9StructPtrINS3_35ServiceWorkerRegistrationObjectInfoEEEE3$_1JPNS_7RunLoopERS9_RSC_RSH_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSR_DpOSS_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16GetRegistrationsEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4absl8optionalINS9_6VectorIN4mojo9StructPtrINS5_35ServiceWorkerRegistrationObjectInfoEEELj0ENS9_18PartitionAllocatorEEEEEE3$_2JPNS_7RunLoopERS8_RSB_RSM_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16GetRegistrationsEPNS4_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4absl8optionalINS9_6VectorIN4mojo9StructPtrINS5_35ServiceWorkerRegistrationObjectInfoEEELj0ENS9_18PartitionAllocatorEEEEEE3$_2JPNS_7RunLoopERS8_RSB_RSM_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16GetRegistrationsEPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4absl8optionalINS7_6VectorIN4mojo9StructPtrINS3_35ServiceWorkerRegistrationObjectInfoEEELj0ENS7_18PartitionAllocatorEEEEEE3$_2JPNS_7RunLoopERS6_RS9_RSK_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16GetRegistrationsEPNS2_22ServiceWorkerErrorTypeEPN3WTF6StringEPN4absl8optionalINS7_6VectorIN4mojo9StructPtrINS3_35ServiceWorkerRegistrationObjectInfoEEELj0ENS7_18PartitionAllocatorEEEEEE3$_2JPNS_7RunLoopERS6_RS9_RSK_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter23GetRegistrationForReadyEPN4mojo9StructPtrINS5_35ServiceWorkerRegistrationObjectInfoEEEE3$_3JPNS_7RunLoopERSB_EEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter23GetRegistrationForReadyEPN4mojo9StructPtrINS5_35ServiceWorkerRegistrationObjectInfoEEEE3$_3JPNS_7RunLoopERSB_EEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter23GetRegistrationForReadyEPN4mojo9StructPtrINS3_35ServiceWorkerRegistrationObjectInfoEEEE3$_3JPNS_7RunLoopERS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter23GetRegistrationForReadyEPN4mojo9StructPtrINS3_35ServiceWorkerRegistrationObjectInfoEEEE3$_3JPNS_7RunLoopERS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16EnsureFileAccessERKN3WTF6VectorINS_8FilePathELj0ENS7_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopEEEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16EnsureFileAccessERKN3WTF6VectorINS_8FilePathELj0ENS7_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopEEEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16EnsureFileAccessERKN3WTF6VectorINS_8FilePathELj0ENS5_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIZN5blink5mojom5blink37ServiceWorkerContainerHostAsyncWaiter16EnsureFileAccessERKN3WTF6VectorINS_8FilePathELj0ENS5_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!27 = !{!"branch_weights", i32 1, i32 2000}
!28 = !{i8 0, i8 2}
!29 = !{!"branch_weights", i32 2000, i32 1}
