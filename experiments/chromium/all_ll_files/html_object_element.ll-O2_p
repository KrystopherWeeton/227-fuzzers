; ModuleID = '../../third_party/blink/renderer/core/html/html_object_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/html_object_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<WTF::AtomicString, blink::SpecificTrustedType, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::SpecificTrustedType>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<WTF::AtomicString, blink::SpecificTrustedType, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::SpecificTrustedType>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1978", i32, i32, %"class.blink::Persistent.1980" }
%"class.WTF::RefCounted.1978" = type { %"class.base::RefCounted.1979" }
%"class.base::RefCounted.1979" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1980" = type { %"class.blink::PersistentBase.1981" }
%"class.blink::PersistentBase.1981" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.1083" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1984" }
%"class.blink::HeapHashMap.1984" = type { %"class.WTF::HashMap.1987" }
%"class.WTF::HashMap.1987" = type { %"class.WTF::HashTable.1988" }
%"class.WTF::HashTable.1988" = type <{ %"struct.WTF::KeyValuePair.1990"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1990" = type { %"class.blink::WeakMember.1991", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.1083" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.81", i32, [4 x i8], %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.254", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.261", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.199", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__cxx_atomic_impl.120" }
%"struct.std::__1::__cxx_atomic_impl.120" = type { %"struct.std::__1::__cxx_atomic_base_impl.121" }
%"struct.std::__1::__cxx_atomic_base_impl.121" = type { i64 }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::Worklist.128"* }
%"class.blink::Worklist.128" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::Worklist.135"* }
%"class.blink::Worklist.135" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::Worklist.142"* }
%"class.blink::Worklist.142" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::Worklist.149"* }
%"class.blink::Worklist.149" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::Worklist.156"* }
%"class.blink::Worklist.156" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::Worklist.163"* }
%"class.blink::Worklist.163" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::Worklist.170"* }
%"class.blink::Worklist.170" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.117" }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.177", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.191", %"class.std::__1::__compressed_pair.193", [4 x i8] }>
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179", %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { i64 }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { float }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.202", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.211" }
%"class.WTF::Vector.211" = type { %"class.WTF::VectorBuffer.212" }
%"class.WTF::VectorBuffer.212" = type { %"class.WTF::VectorBufferBase.213" }
%"class.WTF::VectorBufferBase.213" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.227" }
%"class.WTF::VectorBuffer.227" = type { %"class.WTF::VectorBufferBase.228" }
%"class.WTF::VectorBufferBase.228" = type { %"struct.std::__1::pair.229"*, i32, i32 }
%"struct.std::__1::pair.229" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.242" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.128"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.135"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.142"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.149"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.156"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.309", i64 }
%"class.std::__1::vector.309" = type { %"class.std::__1::__vector_base.310" }
%"class.std::__1::__vector_base.310" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.311" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.260 }
%class.scoped_refptr.260 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.261" = type { %"struct.std::__1::__atomic_base.262" }
%"struct.std::__1::__atomic_base.262" = type { %"struct.std::__1::__cxx_atomic_impl.263" }
%"struct.std::__1::__cxx_atomic_impl.263" = type { %"struct.std::__1::__cxx_atomic_base_impl.264" }
%"struct.std::__1::__cxx_atomic_base_impl.264" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.62" }
%"struct.std::__1::atomic.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { i32 }
%"class.blink::HTMLObjectElement" = type <{ %"class.blink::HTMLPlugInElement.base", [7 x i8], %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::HTMLPlugInElement.base" = type <{ %"class.blink::HTMLFrameOwnerElement.base", [6 x i8], %"class.blink::ActiveScriptWrappable", %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.blink::Member.49", i8, [7 x i8], %"class.v8::Global", i8, i8, [6 x i8], %"class.blink::Member.294", i8 }>
%"class.blink::HTMLFrameOwnerElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.19", %"class.blink::Member.21", %"struct.blink::FramePolicy", %"class.blink::Member.44", i8, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1130", %"class.blink::Member.1132", %"class.blink::Member.0", %"class.blink::Member.1134", %"class.blink::Member.1134", %"class.blink::Member.1156", %"class.blink::Member.1158", %"class.blink::Member.1160", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1165", %"class.blink::HeapVector.1167" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.1130" = type { %"class.blink::MemberBase.1131" }
%"class.blink::MemberBase.1131" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::Document"* }
%"class.blink::Member.1134" = type { %"class.blink::MemberBase.1135" }
%"class.blink::MemberBase.1135" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1138" }
%"class.blink::HeapHashMap.1138" = type { %"class.WTF::HashMap.1141" }
%"class.WTF::HashMap.1141" = type { %"class.WTF::HashTable.1142" }
%"class.WTF::HashTable.1142" = type <{ %"struct.WTF::KeyValuePair.1144"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1144" = type { %"class.WTF::AtomicString", %"class.blink::Member.1145" }
%"class.blink::Member.1145" = type { %"class.blink::MemberBase.1146" }
%"class.blink::MemberBase.1146" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.53", i32, %"class.blink::HeapVector.1149" }
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.1149" = type { %"class.WTF::Vector.1152" }
%"class.WTF::Vector.1152" = type { %"class.WTF::VectorBuffer.1153" }
%"class.WTF::VectorBuffer.1153" = type { %"class.WTF::VectorBufferBase.1154" }
%"class.WTF::VectorBufferBase.1154" = type { %"class.blink::Member.53"*, i32, i32 }
%"class.blink::Member.1156" = type { %"class.blink::MemberBase.1157" }
%"class.blink::MemberBase.1157" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1162" }
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::HeapHashMap.1164"* }
%"class.blink::HeapHashMap.1164" = type opaque
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1167" = type { %"class.WTF::Vector.1170" }
%"class.WTF::Vector.1170" = type { %"class.WTF::VectorBuffer.1171" }
%"class.WTF::VectorBuffer.1171" = type { %"class.WTF::VectorBufferBase.1172" }
%"class.WTF::VectorBufferBase.1172" = type { %"class.blink::Member.1173"*, i32, i32 }
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1175", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1177, %"class.WTF::Vector.1178", %"class.WTF::Vector.1178", %"class.blink::Member", %"class.blink::Member.1183", %"class.blink::HeapHashSet.1187", %"class.blink::Member.1132", %"class.WTF::HashSet.1194", %"class.WTF::TextPosition", %"class.blink::Member.1198", %"class.blink::HeapVector.1200", %"class.blink::Member.1207" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1177 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1178" = type { %"class.WTF::VectorBuffer.1179" }
%"class.WTF::VectorBuffer.1179" = type { %"class.WTF::VectorBufferBase.1180" }
%"class.WTF::VectorBufferBase.1180" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1183" = type { %"class.blink::MemberBase.1184" }
%"class.blink::MemberBase.1184" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1185" }
%"class.blink::Member.1185" = type { %"class.blink::MemberBase.1186" }
%"class.blink::MemberBase.1186" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1187" = type { %"class.WTF::HashSet.1190" }
%"class.WTF::HashSet.1190" = type { %"class.WTF::HashTable.1191" }
%"class.WTF::HashTable.1191" = type <{ %"class.blink::WeakMember.1193"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1193" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.1194" = type { %"class.WTF::HashTable.1195" }
%"class.WTF::HashTable.1195" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1200" = type { %"class.WTF::Vector.1203" }
%"class.WTF::Vector.1203" = type { %"class.WTF::VectorBuffer.1204" }
%"class.WTF::VectorBuffer.1204" = type { %"class.WTF::VectorBufferBase.1205" }
%"class.WTF::VectorBufferBase.1205" = type { %"class.blink::Member.1183"*, i32, i32 }
%"class.blink::Member.1207" = type { %"class.blink::MemberBase.1208" }
%"class.blink::MemberBase.1208" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.322", i8, i32, i8, i32, %"class.blink::Member.523", %"class.blink::Member.345", %"class.blink::FrameLifecycle", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.527", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.529", i8, %"class.base::UnguessableToken", %"class.absl::optional.531", %"class.absl::optional.536", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.19", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::FrameOwner"* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.19", %"class.blink::Member.345", %"class.blink::Member.347", %"class.blink::Member.349", i8, %"class.WTF::Vector.351" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.338" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.326" }
%"class.blink::HeapVector.326" = type { %"class.WTF::Vector.329" }
%"class.WTF::Vector.329" = type { %"class.WTF::VectorBuffer.330" }
%"class.WTF::VectorBuffer.330" = type { %"class.WTF::VectorBufferBase.331", [32 x i8] }
%"class.WTF::VectorBufferBase.331" = type { %"struct.std::__1::pair.332"*, i32, i32 }
%"struct.std::__1::pair.332" = type { %"class.WTF::AtomicString", %"class.blink::Member.333" }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::HeapVector.335"* }
%"class.blink::HeapVector.335" = type opaque
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.WTF::Vector.341"* }
%"class.WTF::Vector.341" = type opaque
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.351" = type { %"class.WTF::VectorBuffer.352" }
%"class.WTF::VectorBuffer.352" = type { %"class.WTF::VectorBufferBase.353" }
%"class.WTF::VectorBufferBase.353" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.515" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.354, %"class.std::__1::unique_ptr.465", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.356, i32 }>
%class.scoped_refptr.354 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.356, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.431", %"class.absl::optional.436", %"class.absl::optional.392", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.456", i8, [7 x i8], %class.scoped_refptr.356, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.355" }>
%"class.base::RefCountedThreadSafe.355" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.62" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.358", %"class.std::__1::unique_ptr.364", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.370 }
%class.scoped_refptr.370 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.274", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.274" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.275" }
%"struct.std::__1::atomic.275" = type { %"struct.std::__1::__atomic_base.276" }
%"struct.std::__1::__atomic_base.276" = type { %"struct.std::__1::__atomic_base.277" }
%"struct.std::__1::__atomic_base.277" = type { %"struct.std::__1::__cxx_atomic_impl.278" }
%"struct.std::__1::__cxx_atomic_impl.278" = type { %"struct.std::__1::__cxx_atomic_base_impl.279" }
%"struct.std::__1::__cxx_atomic_base_impl.279" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.356, %"class.std::__1::unique_ptr.373", %"class.absl::optional.382", %"struct.std::__1::atomic.261", i8, i8, i8, i8, i32, i32, %"class.absl::optional.392", %"class.std::__1::unique_ptr.397", i8, i64, %class.scoped_refptr.427, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.429", %"class.base::WeakPtrFactory.430" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.371 }
%class.scoped_refptr.371 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.372", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.372" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.356, i8, %"class.mojo::ScopedHandleBase.376", %class.scoped_refptr.377, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.378" }
%"class.mojo::ScopedHandleBase.376" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.377 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.378" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.382" = type { %"class.absl::optional_internal::optional_data.383" }
%"class.absl::optional_internal::optional_data.383" = type { %"class.absl::optional_internal::optional_data_base.384" }
%"class.absl::optional_internal::optional_data_base.384" = type { %"class.absl::optional_internal::optional_data_dtor_base.385" }
%"class.absl::optional_internal::optional_data_dtor_base.385" = type { i8, %union.anon.386 }
%union.anon.386 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.387", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.387" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.400", i8, i64, %class.scoped_refptr.401, %class.scoped_refptr.423 }
%"class.base::RepeatingCallback.400" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.401 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.402", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.412", i8, [7 x i8] }>
%"class.base::RefCounted.402" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.403 }
%class.scoped_refptr.403 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.404", %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.std::__1::map.412" = type { %"class.std::__1::__tree.413" }
%"class.std::__1::__tree.413" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%class.scoped_refptr.423 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.427 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.428 }
%class.scoped_refptr.428 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2688", [4 x i8], %"class.base::RepeatingCallback.468", %class.scoped_refptr.356, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2688" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.468" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.429" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.273 }
%class.scoped_refptr.273 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.430" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.431" = type { %"class.absl::optional_internal::optional_data.432" }
%"class.absl::optional_internal::optional_data.432" = type { %"class.absl::optional_internal::optional_data_base.433" }
%"class.absl::optional_internal::optional_data_base.433" = type { %"class.absl::optional_internal::optional_data_dtor_base.434" }
%"class.absl::optional_internal::optional_data_dtor_base.434" = type { i8, %union.anon.435 }
%union.anon.435 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.436" = type { %"class.absl::optional_internal::optional_data.437" }
%"class.absl::optional_internal::optional_data.437" = type { %"class.absl::optional_internal::optional_data_base.438" }
%"class.absl::optional_internal::optional_data_base.438" = type { %"class.absl::optional_internal::optional_data_dtor_base.439" }
%"class.absl::optional_internal::optional_data_dtor_base.439" = type { i8, [7 x i8], %union.anon.440 }
%union.anon.440 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.392" = type { %"class.absl::optional_internal::optional_data.393" }
%"class.absl::optional_internal::optional_data.393" = type { %"class.absl::optional_internal::optional_data_base.394" }
%"class.absl::optional_internal::optional_data_base.394" = type { %"class.absl::optional_internal::optional_data_dtor_base.395" }
%"class.absl::optional_internal::optional_data_dtor_base.395" = type { i8, %union.anon.396 }
%union.anon.396 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.441 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.441 = type { %"class.std::__1::map.444" }
%"class.std::__1::map.444" = type { %"class.std::__1::__tree.445" }
%"class.std::__1::__tree.445" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.446", %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.455"*, i64 }
%"class.std::__1::unique_ptr.455" = type opaque
%"class.std::__1::map.456" = type { %"class.std::__1::__tree.457" }
%"class.std::__1::__tree.457" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.458", %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.468", %"class.base::OnceCallback.469", %"class.absl::optional.470", %"class.absl::optional.475", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.482", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.490", %"class.std::__1::map.501", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.510", i8, %class.scoped_refptr.356, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.511" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.469" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.470" = type { %"class.absl::optional_internal::optional_data.471" }
%"class.absl::optional_internal::optional_data.471" = type { %"class.absl::optional_internal::optional_data_base.472" }
%"class.absl::optional_internal::optional_data_base.472" = type { %"class.absl::optional_internal::optional_data_dtor_base.473" }
%"class.absl::optional_internal::optional_data_dtor_base.473" = type { i8, %union.anon.474 }
%union.anon.474 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.475" = type { %"class.absl::optional_internal::optional_data.476" }
%"class.absl::optional_internal::optional_data.476" = type { %"class.absl::optional_internal::optional_data_base.477" }
%"class.absl::optional_internal::optional_data_base.477" = type { %"class.absl::optional_internal::optional_data_dtor_base.478" }
%"class.absl::optional_internal::optional_data_dtor_base.478" = type { i8, %union.anon.479 }
%union.anon.479 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.356, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.480" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.480" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.481 }
%class.scoped_refptr.481 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.485", %class.scoped_refptr.486 }
%"class.base::RepeatingCallback.485" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.486 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.355", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.490" = type { %"class.std::__1::__tree.491" }
%"class.std::__1::__tree.491" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.492", %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.std::__1::map.501" = type { %"class.std::__1::__tree.502" }
%"class.std::__1::__tree.502" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.503", %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.base::OnceCallback.510" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.511" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.356 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.357" }>
%"class.base::RefCountedThreadSafe.357" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.551", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.565", %"class.blink::FrameLoader", %"class.blink::Member.586", %"class.blink::Member.53", %"class.blink::Member.588", %"class.blink::Member.590", %"class.blink::Member.592", %"class.blink::Member.594", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.596", %class.scoped_refptr.816, %"class.blink::Member.817", %"class.blink::Member.819", %"class.blink::Member.821", %"class.blink::Member.823", %"class.blink::Member.825", %"class.blink::Member.829", %"class.blink::Member.831", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.835", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.856", %"class.std::__1::unique_ptr.857", %"class.absl::optional.536", i32, [4 x i8], %"class.std::__1::unique_ptr.863", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.871", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.876", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.881", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.884", %"class.blink::Member.886", %"class.blink::Member.888", %"class.blink::Member.890", %"class.mojo::StructPtr", %"class.blink::Member.900", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.902", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.547" }
%"class.WTF::HashMap.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ %"struct.WTF::KeyValuePair.550"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.550" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.554", %"class.base::WeakPtrFactory.559" }
%"class.WTF::HashMap.554" = type { %"class.WTF::HashTable.555" }
%"class.WTF::HashTable.555" = type <{ %"struct.WTF::KeyValuePair.558"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.558" = type opaque
%"class.base::WeakPtrFactory.559" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.563" }
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2754" }
%"class.blink::WeakMember.2754" = type { %"class.blink::MemberBase.2755" }
%"class.blink::MemberBase.2755" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.2227" }
%"class.blink::HeapObserverSet.2227" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2228" }
%"class.blink::HeapHashSet.2228" = type { %"class.WTF::HashSet.2231" }
%"class.WTF::HashSet.2231" = type { %"class.WTF::HashTable.2232" }
%"class.WTF::HashTable.2232" = type <{ %"class.blink::WeakMember.2234"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2234" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.468", %"class.base::RepeatingCallback.2804", i64, %"class.std::__1::map.2805", i8*, i64, %"class.base::WeakPtrFactory.2814" }
%"class.base::RepeatingCallback.2804" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2805" = type { %"class.std::__1::__tree.2806" }
%"class.std::__1::__tree.2806" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2807", %"class.std::__1::__compressed_pair.2811" }
%"class.std::__1::__compressed_pair.2807" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"class.std::__1::__compressed_pair.2811" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.base::WeakPtrFactory.2814" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.565" = type { %"class.WTF::HashSet.568" }
%"class.WTF::HashSet.568" = type { %"class.WTF::HashTable.569" }
%"class.WTF::HashTable.569" = type <{ %"class.blink::WeakMember.571"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.571" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.527", %"class.blink::Member.572", %"class.blink::Member.574", %"class.std::__1::unique_ptr.576", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.582" }
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.2379", %"class.blink::Member.2384", %"class.std::__1::unique_ptr.2386", %"class.std::__1::unique_ptr.2315", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2550, %"class.WTF::AtomicString", i32, %"class.absl::optional.2462", %class.scoped_refptr.2246, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2427", i8, %"class.absl::optional.2434", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.527", %"class.blink::Member.2551", %"class.blink::Member.1958", %"class.blink::Member.2624", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2626", %class.scoped_refptr.2243, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2639", %"class.std::__1::unique_ptr.2439", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2641", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.67, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.2646, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2647", %"class.blink::Member.2662", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2675", %"class.WTF::Vector.1400", i8, i8, i8, %"class.blink::WebVector.2539", %"class.blink::WebVector.2539", %"class.mojo::Remote.2680" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.2379" = type { %"class.WTF::VectorBuffer.2380" }
%"class.WTF::VectorBuffer.2380" = type { %"class.WTF::VectorBufferBase.2381" }
%"class.WTF::VectorBufferBase.2381" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.2384" = type { %"class.blink::MemberBase.2385" }
%"class.blink::MemberBase.2385" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.2386" = type { %"class.std::__1::__compressed_pair.2387" }
%"class.std::__1::__compressed_pair.2387" = type { %"struct.std::__1::__compressed_pair_elem.2388" }
%"struct.std::__1::__compressed_pair_elem.2388" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.2390", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2427", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2434", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2439", %"class.base::UnguessableToken", %"class.blink::WebVector.2445", %"class.base::TickClock"*, %"class.blink::WebVector.2454", %"class.absl::optional.2462", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2467", %"class.blink::WebVector", i8, %"class.blink::WebVector.2472", i8, %"class.std::__1::unique_ptr.2480", %"class.blink::WebVector.2539", %"class.blink::WebVector.2539" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::WebVector.2390" = type { %"class.std::__1::vector.2391" }
%"class.std::__1::vector.2391" = type { %"class.std::__1::__vector_base.2392" }
%"class.std::__1::__vector_base.2392" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2422" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2422" = type { %"struct.std::__1::__compressed_pair_elem.2423" }
%"struct.std::__1::__compressed_pair_elem.2423" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2393", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2393" = type { %"class.std::__1::__compressed_pair.2394" }
%"class.std::__1::__compressed_pair.2394" = type { %"struct.std::__1::__compressed_pair_elem.2395" }
%"struct.std::__1::__compressed_pair_elem.2395" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2433", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2433" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.2389" }
%"class.blink::WebPrivatePtr.2389" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2445" = type { %"class.std::__1::vector.2446" }
%"class.std::__1::vector.2446" = type { %"class.std::__1::__vector_base.2447" }
%"class.std::__1::__vector_base.2447" = type { %"class.std::__1::unique_ptr.2448"*, %"class.std::__1::unique_ptr.2448"*, %"class.std::__1::__compressed_pair.2449" }
%"class.std::__1::unique_ptr.2448" = type opaque
%"class.std::__1::__compressed_pair.2449" = type { %"struct.std::__1::__compressed_pair_elem.2450" }
%"struct.std::__1::__compressed_pair_elem.2450" = type { %"class.std::__1::unique_ptr.2448"* }
%"class.blink::WebVector.2454" = type { %"class.std::__1::vector.2455" }
%"class.std::__1::vector.2455" = type { %"class.std::__1::__vector_base.2456" }
%"class.std::__1::__vector_base.2456" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2457" }
%"class.std::__1::__compressed_pair.2457" = type { %"struct.std::__1::__compressed_pair_elem.2458" }
%"struct.std::__1::__compressed_pair_elem.2458" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.2467" = type { %"class.absl::optional_internal::optional_data.2468" }
%"class.absl::optional_internal::optional_data.2468" = type { %"class.absl::optional_internal::optional_data_base.2469" }
%"class.absl::optional_internal::optional_data_base.2469" = type { %"class.absl::optional_internal::optional_data_dtor_base.2470" }
%"class.absl::optional_internal::optional_data_dtor_base.2470" = type { i8, [7 x i8], %union.anon.2471 }
%union.anon.2471 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.840" }
%"class.std::__1::vector.840" = type { %"class.std::__1::__vector_base.841" }
%"class.std::__1::__vector_base.841" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.843" }
%"struct.std::__1::__compressed_pair_elem.843" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2472" = type { %"class.std::__1::vector.2473" }
%"class.std::__1::vector.2473" = type { %"class.std::__1::__vector_base.2474" }
%"class.std::__1::__vector_base.2474" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2475" }
%"class.std::__1::__compressed_pair.2475" = type { %"struct.std::__1::__compressed_pair_elem.2476" }
%"struct.std::__1::__compressed_pair_elem.2476" = type { i32* }
%"class.std::__1::unique_ptr.2480" = type { %"class.std::__1::__compressed_pair.2481" }
%"class.std::__1::__compressed_pair.2481" = type { %"struct.std::__1::__compressed_pair_elem.2482" }
%"struct.std::__1::__compressed_pair_elem.2482" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2483" }
%"class.blink::WebVector.2483" = type { %"class.std::__1::vector.2484" }
%"class.std::__1::vector.2484" = type { %"class.std::__1::__vector_base.2485" }
%"class.std::__1::__vector_base.2485" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2531" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2486", %"class.blink::WebVector.2494", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.2526", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2486" = type { %"class.std::__1::vector.2487" }
%"class.std::__1::vector.2487" = type { %"class.std::__1::__vector_base.2488" }
%"class.std::__1::__vector_base.2488" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2489" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2489" = type { %"struct.std::__1::__compressed_pair_elem.2490" }
%"struct.std::__1::__compressed_pair_elem.2490" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2494" = type { %"class.std::__1::vector.2495" }
%"class.std::__1::vector.2495" = type { %"class.std::__1::__vector_base.2496" }
%"class.std::__1::__vector_base.2496" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2521" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2497", %"class.blink::WebVector", %"class.blink::WebVector.2505", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2497" = type { %"class.std::__1::vector.2498" }
%"class.std::__1::vector.2498" = type { %"class.std::__1::__vector_base.2499" }
%"class.std::__1::__vector_base.2499" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2500" }
%"class.std::__1::__compressed_pair.2500" = type { %"struct.std::__1::__compressed_pair_elem.2501" }
%"struct.std::__1::__compressed_pair_elem.2501" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2505" = type { %"class.std::__1::vector.2506" }
%"class.std::__1::vector.2506" = type { %"class.std::__1::__vector_base.2507" }
%"class.std::__1::__vector_base.2507" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2516" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2508" }
%"class.blink::WebVector.2508" = type { %"class.std::__1::vector.2509" }
%"class.std::__1::vector.2509" = type { %"class.std::__1::__vector_base.2510" }
%"class.std::__1::__vector_base.2510" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2511" }
%"class.std::__1::__compressed_pair.2511" = type { %"struct.std::__1::__compressed_pair_elem.2512" }
%"struct.std::__1::__compressed_pair_elem.2512" = type { i8* }
%"class.std::__1::__compressed_pair.2516" = type { %"struct.std::__1::__compressed_pair_elem.2517" }
%"struct.std::__1::__compressed_pair_elem.2517" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2521" = type { %"struct.std::__1::__compressed_pair_elem.2522" }
%"struct.std::__1::__compressed_pair_elem.2522" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2526" = type { %"class.absl::optional_internal::optional_data.2527" }
%"class.absl::optional_internal::optional_data.2527" = type { %"class.absl::optional_internal::optional_data_base.2528" }
%"class.absl::optional_internal::optional_data_base.2528" = type { %"class.absl::optional_internal::optional_data_dtor_base.2529" }
%"class.absl::optional_internal::optional_data_dtor_base.2529" = type { i8, [7 x i8], %union.anon.2530 }
%union.anon.2530 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2531" = type { %"struct.std::__1::__compressed_pair_elem.2532" }
%"struct.std::__1::__compressed_pair_elem.2532" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.std::__1::unique_ptr.2315" = type { %"class.std::__1::__compressed_pair.2316" }
%"class.std::__1::__compressed_pair.2316" = type { %"struct.std::__1::__compressed_pair_elem.2317" }
%"struct.std::__1::__compressed_pair_elem.2317" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.2318", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.2318" = type { %"class.std::__1::unique_ptr.2319" }
%"class.std::__1::unique_ptr.2319" = type { %"class.std::__1::__compressed_pair.2320" }
%"class.std::__1::__compressed_pair.2320" = type { %"struct.std::__1::__compressed_pair_elem.2321" }
%"struct.std::__1::__compressed_pair_elem.2321" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.2322" }
%"class.WTF::Vector.2322" = type { %"class.WTF::VectorBuffer.2323" }
%"class.WTF::VectorBuffer.2323" = type { %"class.WTF::VectorBufferBase.2324" }
%"class.WTF::VectorBufferBase.2324" = type { %"class.mojo::StructPtr.2325"*, i32, i32 }
%"class.mojo::StructPtr.2325" = type { %"class.std::__1::unique_ptr.2326" }
%"class.std::__1::unique_ptr.2326" = type { %"class.std::__1::__compressed_pair.2327" }
%"class.std::__1::__compressed_pair.2327" = type { %"struct.std::__1::__compressed_pair_elem.2328" }
%"struct.std::__1::__compressed_pair_elem.2328" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.2329", %"class.WTF::HashMap.2336", %"class.WTF::HashMap.2341", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.2346", i8, %"class.WTF::Vector.1400", i32, %"class.mojo::StructPtr.2347", %"class.WTF::Vector.1400" }
%"class.mojo::StructPtr.2329" = type { %"class.std::__1::unique_ptr.2330" }
%"class.std::__1::unique_ptr.2330" = type { %"class.std::__1::__compressed_pair.2331" }
%"class.std::__1::__compressed_pair.2331" = type { %"struct.std::__1::__compressed_pair_elem.2332" }
%"struct.std::__1::__compressed_pair_elem.2332" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.2336" = type { %"class.WTF::HashTable.2337" }
%"class.WTF::HashTable.2337" = type <{ %"struct.WTF::KeyValuePair.2340"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2340" = type opaque
%"class.WTF::HashMap.2341" = type { %"class.WTF::HashTable.2342" }
%"class.WTF::HashTable.2342" = type <{ %"struct.WTF::KeyValuePair.2345"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2345" = type opaque
%"class.mojo::InlinedStructPtr.2346" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.2347" = type { %"class.std::__1::unique_ptr.2348" }
%"class.std::__1::unique_ptr.2348" = type { %"class.std::__1::__compressed_pair.2349" }
%"class.std::__1::__compressed_pair.2349" = type { %"struct.std::__1::__compressed_pair_elem.2350" }
%"struct.std::__1::__compressed_pair_elem.2350" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.1400", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2362" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.465", i32 }>
%"class.std::__1::unique_ptr.2362" = type { %"class.std::__1::__compressed_pair.2363" }
%"class.std::__1::__compressed_pair.2363" = type { %"struct.std::__1::__compressed_pair_elem.2364" }
%"struct.std::__1::__compressed_pair_elem.2364" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.2550 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2462" = type { %"class.absl::optional_internal::optional_data.2463" }
%"class.absl::optional_internal::optional_data.2463" = type { %"class.absl::optional_internal::optional_data_base.2464" }
%"class.absl::optional_internal::optional_data_base.2464" = type { %"class.absl::optional_internal::optional_data_dtor_base.2465" }
%"class.absl::optional_internal::optional_data_dtor_base.2465" = type { i8, %union.anon.2466 }
%union.anon.2466 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%class.scoped_refptr.2246 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.2244", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.2246 }
%"class.WTF::RefCounted.2244" = type { %"class.base::RefCounted.2245" }
%"class.base::RefCounted.2245" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2427" = type { %"class.std::__1::__compressed_pair.2428" }
%"class.std::__1::__compressed_pair.2428" = type { %"struct.std::__1::__compressed_pair_elem.2429" }
%"struct.std::__1::__compressed_pair_elem.2429" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2434" = type { %"class.absl::optional_internal::optional_data.2435" }
%"class.absl::optional_internal::optional_data.2435" = type { %"class.absl::optional_internal::optional_data_base.2436" }
%"class.absl::optional_internal::optional_data_base.2436" = type { %"class.absl::optional_internal::optional_data_dtor_base.2437" }
%"class.absl::optional_internal::optional_data_dtor_base.2437" = type { i8, %union.anon.2438 }
%union.anon.2438 = type { i32 }
%"class.blink::Member.2551" = type { %"class.blink::MemberBase.2552" }
%"class.blink::MemberBase.2552" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.1400", %"class.blink::Member.2555", %"class.absl::optional.2557", i64, i64, i32, %class.scoped_refptr.2562, %class.scoped_refptr.2550, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.2562 }
%"class.blink::Member.2555" = type { %"class.blink::MemberBase.2556" }
%"class.blink::MemberBase.2556" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2557" = type { %"class.absl::optional_internal::optional_data.2558" }
%"class.absl::optional_internal::optional_data.2558" = type { %"class.absl::optional_internal::optional_data_base.2559" }
%"class.absl::optional_internal::optional_data_base.2559" = type { %"class.absl::optional_internal::optional_data_dtor_base.2560" }
%"class.absl::optional_internal::optional_data_dtor_base.2560" = type { i8, %union.anon.2561 }
%union.anon.2561 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.2562 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2563", [4 x i8], %"class.std::__1::unique_ptr.2565", i64, %"class.WTF::Vector.2568", %"class.WTF::Vector.2573", %"class.WTF::Vector.2579", %"class.WTF::Vector.2597", %class.scoped_refptr.2243, %"class.WTF::HashMap.2603", %"class.WTF::Vector.2608", %"class.WTF::Vector.2568", %"class.WTF::Vector.2614", %"class.WTF::HashMap.2619", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2563" = type { %"class.base::RefCountedThreadSafe.2564" }
%"class.base::RefCountedThreadSafe.2564" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2565" = type { %"class.std::__1::__compressed_pair.2566" }
%"class.std::__1::__compressed_pair.2566" = type { %"struct.std::__1::__compressed_pair_elem.2512" }
%"class.WTF::Vector.2573" = type { %"class.WTF::VectorBuffer.2574" }
%"class.WTF::VectorBuffer.2574" = type { %"class.WTF::VectorBufferBase.2575", [8 x i8] }
%"class.WTF::VectorBufferBase.2575" = type { %class.scoped_refptr.2576*, i32, i32 }
%class.scoped_refptr.2576 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2579" = type { %"class.WTF::VectorBuffer.2580" }
%"class.WTF::VectorBuffer.2580" = type { %"class.WTF::VectorBufferBase.2581" }
%"class.WTF::VectorBufferBase.2581" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2583", %"class.std::__1::unique_ptr.2589" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2582 }
%class.scoped_refptr.2582 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2583" = type { %"class.std::__1::__compressed_pair.2584" }
%"class.std::__1::__compressed_pair.2584" = type { %"struct.std::__1::__compressed_pair_elem.2585" }
%"struct.std::__1::__compressed_pair_elem.2585" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2589" = type { %"class.std::__1::__compressed_pair.2590" }
%"class.std::__1::__compressed_pair.2590" = type { %"struct.std::__1::__compressed_pair_elem.2591" }
%"struct.std::__1::__compressed_pair_elem.2591" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2597" = type { %"class.WTF::VectorBuffer.2598" }
%"class.WTF::VectorBuffer.2598" = type { %"class.WTF::VectorBufferBase.2599" }
%"class.WTF::VectorBufferBase.2599" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2600", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2600" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2603" = type { %"class.WTF::HashTable.2604" }
%"class.WTF::HashTable.2604" = type <{ %"struct.WTF::KeyValuePair.2607"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2607" = type opaque
%"class.WTF::Vector.2608" = type { %"class.WTF::VectorBuffer.2609" }
%"class.WTF::VectorBuffer.2609" = type { %"class.WTF::VectorBufferBase.2610" }
%"class.WTF::VectorBufferBase.2610" = type { %"class.mojo::ScopedHandleBase.2611"*, i32, i32 }
%"class.mojo::ScopedHandleBase.2611" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.2568" = type { %"class.WTF::VectorBuffer.2569" }
%"class.WTF::VectorBuffer.2569" = type { %"class.WTF::VectorBufferBase.2570", [16 x i8] }
%"class.WTF::VectorBufferBase.2570" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2614" = type { %"class.WTF::VectorBuffer.2615" }
%"class.WTF::VectorBuffer.2615" = type { %"class.WTF::VectorBufferBase.2616" }
%"class.WTF::VectorBufferBase.2616" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.2619" = type { %"class.WTF::HashTable.2620" }
%"class.WTF::HashTable.2620" = type <{ %"struct.WTF::KeyValuePair.2623"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2623" = type { i8**, %"class.std::__1::unique_ptr.2792" }
%"class.std::__1::unique_ptr.2792" = type { %"class.std::__1::__compressed_pair.2793" }
%"class.std::__1::__compressed_pair.2793" = type { %"struct.std::__1::__compressed_pair_elem.2794" }
%"struct.std::__1::__compressed_pair_elem.2794" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.1958" = type { %"class.blink::MemberBase.1959" }
%"class.blink::MemberBase.1959" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.2624" = type { %"class.blink::MemberBase.2625" }
%"class.blink::MemberBase.2625" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.2402", %class.scoped_refptr.2412, %class.scoped_refptr.2413, %"struct.blink::CacheControlHeader", %"class.absl::optional.470", %"class.absl::optional.1914", %"class.absl::optional.1914", %"class.absl::optional.1914", i64, %"class.blink::KURL", %"class.WTF::Vector.2379", %"class.WTF::String", %"class.WTF::Vector.1400", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.536", %"class.WTF::Vector.1400", %"class.blink::KURL", %"class.absl::optional.2414" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.2396" }
%"class.WTF::HashMap.2396" = type { %"class.WTF::HashTable.2397" }
%"class.WTF::HashTable.2397" = type <{ %"struct.WTF::KeyValuePair.2400"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2400" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.2401", i8 }
%"struct.std::__1::array.2401" = type { [16 x i8] }
%"class.absl::optional.2402" = type { %"class.absl::optional_internal::optional_data.2403" }
%"class.absl::optional_internal::optional_data.2403" = type { %"class.absl::optional_internal::optional_data_base.2404" }
%"class.absl::optional_internal::optional_data_base.2404" = type { %"class.absl::optional_internal::optional_data_dtor_base.2405" }
%"class.absl::optional_internal::optional_data_dtor_base.2405" = type { i8, %union.anon.2406 }
%union.anon.2406 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.1400", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1101", %"class.WTF::Vector.2407" }
%"class.WTF::Vector.1101" = type { %"class.WTF::VectorBuffer.1102" }
%"class.WTF::VectorBuffer.1102" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::Vector.2407" = type { %"class.WTF::VectorBuffer.2408" }
%"class.WTF::VectorBuffer.2408" = type { %"class.WTF::VectorBufferBase.2409" }
%"class.WTF::VectorBufferBase.2409" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.2412 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.2413 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.470", %"class.absl::optional.470" }
%"class.absl::optional.1914" = type { %"class.absl::optional_internal::optional_data.1915" }
%"class.absl::optional_internal::optional_data.1915" = type { %"class.absl::optional_internal::optional_data_base.1916" }
%"class.absl::optional_internal::optional_data_base.1916" = type { %"class.absl::optional_internal::optional_data_dtor_base.1917" }
%"class.absl::optional_internal::optional_data_dtor_base.1917" = type { i8, %union.anon.1918 }
%union.anon.1918 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1907" }
%"class.base::time_internal::TimeBase.1907" = type { i64 }
%"class.absl::optional.2414" = type { %"class.absl::optional_internal::optional_data.2415" }
%"class.absl::optional_internal::optional_data.2415" = type { %"class.absl::optional_internal::optional_data_base.2416" }
%"class.absl::optional_internal::optional_data_base.2416" = type { %"class.absl::optional_internal::optional_data_dtor_base.2417" }
%"class.absl::optional_internal::optional_data_dtor_base.2417" = type { i8, %union.anon.2418 }
%union.anon.2418 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.mojo::Remote.2626" = type { %"class.mojo::internal::InterfacePtrState.2627" }
%"class.mojo::internal::InterfacePtrState.2627" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2628" }
%"class.std::__1::unique_ptr.2628" = type { %"class.std::__1::__compressed_pair.2629" }
%"class.std::__1::__compressed_pair.2629" = type { %"struct.std::__1::__compressed_pair_elem.2630" }
%"struct.std::__1::__compressed_pair_elem.2630" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.2243 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.470", %"class.absl::optional.470", %"class.absl::optional.470", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2634", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.574" }
%"class.WTF::Vector.2634" = type { %"class.WTF::VectorBuffer.2635" }
%"class.WTF::VectorBuffer.2635" = type { %"class.WTF::VectorBufferBase.2636" }
%"class.WTF::VectorBufferBase.2636" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.2639" = type { %"class.blink::MemberBase.2640" }
%"class.blink::MemberBase.2640" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2439" = type { %"class.std::__1::__compressed_pair.2440" }
%"class.std::__1::__compressed_pair.2440" = type { %"struct.std::__1::__compressed_pair_elem.2441" }
%"struct.std::__1::__compressed_pair_elem.2441" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.2277" }
%"class.base::flat_map.2277" = type { %"class.base::internal::flat_tree.2278" }
%"class.base::internal::flat_tree.2278" = type { %"class.std::__1::vector.2279" }
%"class.std::__1::vector.2279" = type { %"class.std::__1::__vector_base.2280" }
%"class.std::__1::__vector_base.2280" = type { %"struct.std::__1::pair.2281"*, %"struct.std::__1::pair.2281"*, %"class.std::__1::__compressed_pair.2282" }
%"struct.std::__1::pair.2281" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2282" = type { %"struct.std::__1::__compressed_pair_elem.2283" }
%"struct.std::__1::__compressed_pair_elem.2283" = type { %"struct.std::__1::pair.2281"* }
%"class.WTF::Vector.2641" = type { %"class.WTF::VectorBuffer.2642" }
%"class.WTF::VectorBuffer.2642" = type { %"class.WTF::VectorBufferBase.2643" }
%"class.WTF::VectorBufferBase.2643" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.67 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.68", i64, %"class.WTF::Vector.70", %"class.WTF::Vector.75" }
%"class.WTF::RefCounted.68" = type { %"class.base::RefCounted.69" }
%"class.base::RefCounted.69" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.70" = type { %"class.WTF::VectorBuffer.71" }
%"class.WTF::VectorBuffer.71" = type { %"class.WTF::VectorBufferBase.72" }
%"class.WTF::VectorBufferBase.72" = type { i8*, i32, i32 }
%"class.WTF::Vector.75" = type { %"class.WTF::VectorBuffer.76" }
%"class.WTF::VectorBuffer.76" = type { %"class.WTF::VectorBufferBase.77" }
%"class.WTF::VectorBufferBase.77" = type { %"class.std::__1::unique_ptr.78"*, i32, i32 }
%"class.std::__1::unique_ptr.78" = type opaque
%class.scoped_refptr.2646 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.2647" = type { %"class.blink::MemberBase.2648" }
%"class.blink::MemberBase.2648" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2651", %"class.std::__1::unique_ptr.2656", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2651" = type { %"class.WTF::HashTable.2652" }
%"class.WTF::HashTable.2652" = type <{ %"struct.WTF::KeyValuePair.2655"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2655" = type { %"class.WTF::Vector.2725", %class.scoped_refptr.2863 }
%"class.WTF::Vector.2725" = type { %"class.WTF::VectorBuffer.2726" }
%"class.WTF::VectorBuffer.2726" = type { %"class.WTF::VectorBufferBase.2713", [32 x i8] }
%"class.WTF::VectorBufferBase.2713" = type { i8*, i32, i32 }
%class.scoped_refptr.2863 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2864", %"class.WTF::Vector.2711", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2864" = type { %"class.base::RefCounted.2865" }
%"class.base::RefCounted.2865" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2711" = type { %"class.WTF::VectorBuffer.2712" }
%"class.WTF::VectorBuffer.2712" = type { %"class.WTF::VectorBufferBase.2713" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2866", i64, %"class.absl::optional.2871" }
%"class.std::__1::unique_ptr.2866" = type { %"class.std::__1::__compressed_pair.2867" }
%"class.std::__1::__compressed_pair.2867" = type { %"struct.std::__1::__compressed_pair_elem.2512" }
%"class.absl::optional.2871" = type { %"class.absl::optional_internal::optional_data.2872" }
%"class.absl::optional_internal::optional_data.2872" = type { %"class.absl::optional_internal::optional_data_base.2873" }
%"class.absl::optional_internal::optional_data_base.2873" = type { %"class.absl::optional_internal::optional_data_dtor_base.2874" }
%"class.absl::optional_internal::optional_data_dtor_base.2874" = type { i8, %union.anon.2875 }
%union.anon.2875 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2876", %"class.std::__1::unique_ptr.2877" }
%"class.mojo::ScopedHandleBase.2876" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2877" = type { %"class.std::__1::__compressed_pair.2878" }
%"class.std::__1::__compressed_pair.2878" = type { %"struct.std::__1::__compressed_pair_elem.2879" }
%"struct.std::__1::__compressed_pair_elem.2879" = type { i8* }
%"class.std::__1::unique_ptr.2656" = type { %"class.std::__1::__compressed_pair.2657" }
%"class.std::__1::__compressed_pair.2657" = type { %"struct.std::__1::__compressed_pair_elem.2658" }
%"struct.std::__1::__compressed_pair_elem.2658" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.2662" = type { %"class.blink::MemberBase.2663" }
%"class.blink::MemberBase.2663" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2668" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2664", %"class.std::__1::bitset.2664", %"class.std::__1::bitset.2666" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2664" = type { %"class.std::__1::__bitset.2665" }
%"class.std::__1::__bitset.2665" = type { [11 x i64] }
%"class.std::__1::bitset.2666" = type { %"class.std::__1::__bitset.2667" }
%"class.std::__1::__bitset.2667" = type { [2 x i64] }
%"class.blink::HeapHashSet.2668" = type { %"class.WTF::HashSet.2671" }
%"class.WTF::HashSet.2671" = type { %"class.WTF::HashTable.2672" }
%"class.WTF::HashTable.2672" = type <{ %"class.blink::Member.2674"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2674" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2675" = type { %"class.WTF::VectorBuffer.2676" }
%"class.WTF::VectorBuffer.2676" = type { %"class.WTF::VectorBufferBase.2677" }
%"class.WTF::VectorBufferBase.2677" = type { i32*, i32, i32 }
%"class.WTF::Vector.1400" = type { %"class.WTF::VectorBuffer.1401" }
%"class.WTF::VectorBuffer.1401" = type { %"class.WTF::VectorBufferBase.1402" }
%"class.WTF::VectorBufferBase.1402" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::WebVector.2539" = type { %"class.std::__1::vector.2540" }
%"class.std::__1::vector.2540" = type { %"class.std::__1::__vector_base.2541" }
%"class.std::__1::__vector_base.2541" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2542" }
%"class.std::__1::__compressed_pair.2542" = type { %"struct.std::__1::__compressed_pair_elem.2543" }
%"struct.std::__1::__compressed_pair_elem.2543" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2680" = type { %"class.mojo::internal::InterfacePtrState.2681" }
%"class.mojo::internal::InterfacePtrState.2681" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2682" }
%"class.std::__1::unique_ptr.2682" = type { %"class.std::__1::__compressed_pair.2683" }
%"class.std::__1::__compressed_pair.2683" = type { %"struct.std::__1::__compressed_pair_elem.2684" }
%"struct.std::__1::__compressed_pair_elem.2684" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.WTF::HashSet.582" = type { %"class.WTF::HashTable.583" }
%"class.WTF::HashTable.583" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.981", %"class.blink::Member.527", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.1717", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1722", %"class.blink::Member.1724", %"class.blink::Member.1724", %"class.std::__1::unique_ptr.1727", i32, [4 x i8], %"class.WTF::HashSet.1730", %"class.blink::Member.1737", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1739", %"class.blink::HeapHashSet.1745", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1753", i8, %"class.blink::Member.1759", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1771", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1785", i8, %"class.std::__1::unique_ptr.1791", %"class.std::__1::unique_ptr.1872", %"class.WTF::Vector.1878", i32, %class.scoped_refptr.1883, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1884", %"class.blink::Member.1886", %"class.blink::Member.1888", %"class.blink::HeapHashSet.1890", %"class.blink::HeapHashSet.1897", %"class.std::__1::unique_ptr.1904", %"class.std::__1::unique_ptr.1911", %"class.WTF::Vector.1922" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %class.scoped_refptr.985*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.985 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type { %"class.blink::LayoutEmbeddedContent.base", i32, %"class.WTF::String" }
%"class.blink::LayoutEmbeddedContent.base" = type <{ %"class.blink::LayoutReplaced", i32 }>
%"class.blink::LayoutReplaced" = type { %"class.blink::LayoutBox", %"class.blink::LayoutSize" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1670, %"class.WTF::Vector.1671", %"class.std::__1::unique_ptr.1676", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1697, %"class.blink::Persistent.1698" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.986, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.986 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1501", %"class.std::__1::unique_ptr.1503" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1051", %"class.blink::DataRef.1212", %"class.blink::DataRef.1216", %"class.blink::DataRef.1417", %"class.blink::DataRef.1484", %"class.blink::DataRef.1488", %"class.blink::DataRef.1492", %"class.blink::DataRef.1496", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.987 }
%class.scoped_refptr.987 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.988", %"class.blink::DataRef.990", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.988" = type { %"class.base::RefCounted.989" }
%"class.base::RefCounted.989" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.990" = type { %class.scoped_refptr.991 }
%class.scoped_refptr.991 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.992", %"class.blink::Font" }
%"class.WTF::RefCounted.992" = type { %"class.base::RefCounted.993" }
%"class.base::RefCounted.993" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.1020 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.995, %class.scoped_refptr.1003, %class.scoped_refptr.1013, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.1019 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.994 }
%class.scoped_refptr.994 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.2375", [4 x i8] }>
%"class.WTF::RefCounted.2375" = type { %"class.base::RefCounted.2376" }
%"class.base::RefCounted.2376" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.995 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.1001", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.996" }
%"class.WTF::Vector.996" = type { %"class.WTF::VectorBuffer.997" }
%"class.WTF::VectorBuffer.997" = type { %"class.WTF::VectorBufferBase.998" }
%"class.WTF::VectorBufferBase.998" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.1001" = type { %"class.base::RefCounted.1002" }
%"class.base::RefCounted.1002" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1003 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.1004", %"class.WTF::RefCounted.1011", [4 x i8] }>
%"class.blink::FontSettings.1004" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::FontTagValuePair.1008"*, i32, i32 }
%"class.blink::FontTagValuePair.1008" = type { i32, float }
%"class.WTF::RefCounted.1011" = type { %"class.base::RefCounted.1012" }
%"class.base::RefCounted.1012" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1013 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.1014", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.1016, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.1014" = type { %"class.base::RefCounted.1015" }
%"class.base::RefCounted.1015" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.1016 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1017", [4 x i8] }>
%"class.WTF::RefCounted.1017" = type { %"class.base::RefCounted.1018" }
%"class.base::RefCounted.1018" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.1019 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.1020 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.1021", %"class.WTF::Vector.1023", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.1047", i32, i16, i8, %"class.base::WeakPtr.1049" }
%"class.WTF::RefCounted.1021" = type { %"class.base::RefCounted.1022" }
%"class.base::RefCounted.1022" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1023" = type { %"class.WTF::VectorBuffer.1024" }
%"class.WTF::VectorBuffer.1024" = type { %"class.WTF::VectorBufferBase.1025", [8 x i8] }
%"class.WTF::VectorBufferBase.1025" = type { %class.scoped_refptr.1026*, i32, i32 }
%class.scoped_refptr.1026 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1027", [4 x i8] }>
%"class.WTF::RefCounted.1027" = type { %"class.base::RefCounted.1028" }
%"class.base::RefCounted.1028" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.1037", %class.scoped_refptr.1044, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1027" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.1031", %"class.absl::optional.1031", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.1031" = type { %"class.absl::optional_internal::optional_data.1032" }
%"class.absl::optional_internal::optional_data.1032" = type { %"class.absl::optional_internal::optional_data_base.1033" }
%"class.absl::optional_internal::optional_data_base.1033" = type { %"class.absl::optional_internal::optional_data_dtor_base.1034" }
%"class.absl::optional_internal::optional_data_dtor_base.1034" = type { i8, %union.anon.1035 }
%union.anon.1035 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.1036, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.62" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.62" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.275" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.1036 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.1037" = type { %"class.std::__1::__compressed_pair.1038" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.1039" }
%"struct.std::__1::__compressed_pair_elem.1039" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.1040, %class.scoped_refptr.1040 }
%class.scoped_refptr.1040 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.1044 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1045", [4 x i8] }>
%"class.WTF::RefCounted.1045" = type { %"class.base::RefCounted.1046" }
%"class.base::RefCounted.1046" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent.1047" = type { %"class.blink::PersistentBase.1048" }
%"class.blink::PersistentBase.1048" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.1049" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.1050, i8, i8, i8, i8 }>
%union.anon.1050 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.1051" = type { %class.scoped_refptr.1052 }
%class.scoped_refptr.1052 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.1053", [4 x i8], %"class.blink::DataRef.1055", %"class.blink::DataRef.1097", %"class.WTF::Vector.1101", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1105, %class.scoped_refptr.1114, %"class.blink::Persistent.1122", %"class.blink::Persistent.1124", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.1053" = type { %"class.base::RefCounted.1054" }
%"class.base::RefCounted.1054" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1055" = type { %class.scoped_refptr.1056 }
%class.scoped_refptr.1056 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.1057", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1059, %class.scoped_refptr.1067, %"class.blink::Persistent.1084", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.1057" = type { %"class.base::RefCounted.1058" }
%"class.base::RefCounted.1058" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1059 = type { %"class.base::RefCountedData.1060"* }
%"class.base::RefCountedData.1060" = type { %"class.base::RefCountedThreadSafe.1061", %"class.WTF::Vector.1062" }
%"class.base::RefCountedThreadSafe.1061" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1062" = type { %"class.WTF::VectorBuffer.1063" }
%"class.WTF::VectorBuffer.1063" = type { %"class.WTF::VectorBufferBase.1064" }
%"class.WTF::VectorBufferBase.1064" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1067 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1068", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1068" = type { %"class.base::RefCounted.1069" }
%"class.base::RefCounted.1069" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1070", %"class.blink::Persistent" }
%"class.WTF::HashMap.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"struct.WTF::KeyValuePair.1074"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1074" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2896 }
%class.scoped_refptr.2896 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2897", %"class.WTF::Vector.1400", %"class.WTF::Vector.2899", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2897" = type { %"class.base::RefCounted.2898" }
%"class.base::RefCounted.2898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2899" = type { %"class.WTF::VectorBuffer.2900" }
%"class.WTF::VectorBuffer.2900" = type { %"class.WTF::VectorBufferBase.2901" }
%"class.WTF::VectorBufferBase.2901" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2902 }
%union.anon.2902 = type { double }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.1075" }
%"class.blink::PersistentBase.1075" = type { %"class.blink::HeapHashMap.1076"*, %"class.blink::PersistentNodePtr.1083" }
%"class.blink::HeapHashMap.1076" = type { %"class.WTF::HashMap.1079" }
%"class.WTF::HashMap.1079" = type { %"class.WTF::HashTable.1080" }
%"class.WTF::HashTable.1080" = type <{ %"struct.WTF::KeyValuePair.1082"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1082" = type opaque
%"class.blink::Persistent.1084" = type { %"class.blink::PersistentBase.1085" }
%"class.blink::PersistentBase.1085" = type { %"class.blink::HeapVector.1086"*, %"class.blink::PersistentNodePtr.1083" }
%"class.blink::HeapVector.1086" = type { %"class.WTF::Vector.1089" }
%"class.WTF::Vector.1089" = type { %"class.WTF::VectorBuffer.1090" }
%"class.WTF::VectorBuffer.1090" = type { %"class.WTF::VectorBufferBase.1091" }
%"class.WTF::VectorBufferBase.1091" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1092", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.1097" = type { %class.scoped_refptr.1098 }
%class.scoped_refptr.1098 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1099", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1099" = type { %"class.base::RefCounted.1100" }
%"class.base::RefCounted.1100" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1105 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1106", %"class.WTF::Vector.1108" }
%"class.WTF::RefCounted.1106" = type { %"class.base::RefCounted.1107" }
%"class.base::RefCounted.1107" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1108" = type { %"class.WTF::VectorBuffer.1109" }
%"class.WTF::VectorBuffer.1109" = type { %"class.WTF::VectorBufferBase.1110" }
%"class.WTF::VectorBufferBase.1110" = type { %"struct.std::__1::pair.1111"*, i32, i32 }
%"struct.std::__1::pair.1111" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1114 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1115", [4 x i8], %"class.WTF::Vector.1117" }
%"class.WTF::RefCounted.1115" = type { %"class.base::RefCounted.1116" }
%"class.base::RefCounted.1116" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1117" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1119", [28 x i8] }>
%"class.WTF::VectorBufferBase.1119" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.1122" = type { %"class.blink::PersistentBase.1123" }
%"class.blink::PersistentBase.1123" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.1083" }
%"class.blink::Persistent.1124" = type { %"class.blink::PersistentBase.1125" }
%"class.blink::PersistentBase.1125" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.1083" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1128", %"class.blink::Member.1210" }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1212" = type { %class.scoped_refptr.1213 }
%class.scoped_refptr.1213 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1214", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1214" = type { %"class.base::RefCounted.1215" }
%"class.base::RefCounted.1215" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1216" = type { %class.scoped_refptr.1217 }
%class.scoped_refptr.1217 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1218", [4 x i8], %"class.blink::DataRef.1220", %"class.blink::DataRef.1286", %"class.blink::TransformOperations", %class.scoped_refptr.1114, %"class.blink::Persistent.1411", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1218" = type { %"class.base::RefCounted.1219" }
%"class.base::RefCounted.1219" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1220" = type { %class.scoped_refptr.1221 }
%class.scoped_refptr.1221 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1222", [4 x i8], %"class.blink::DataRef.1224", %"class.blink::Persistent.1262", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1222" = type { %"class.base::RefCounted.1223" }
%"class.base::RefCounted.1223" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1224" = type { %class.scoped_refptr.1225 }
%class.scoped_refptr.1225 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1226", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1244, %class.scoped_refptr.1247, %class.scoped_refptr.1250, %class.scoped_refptr.1253, %class.scoped_refptr.1254, %class.scoped_refptr.1255, %"class.blink::Persistent.1262", %"class.blink::Persistent.1277", %"class.absl::optional.1281", %"class.absl::optional.1281", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1226" = type { %"class.base::RefCounted.1227" }
%"class.base::RefCounted.1227" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1228", %"class.std::__1::unique_ptr.1233" }
%"class.WTF::Vector.1228" = type { %"class.WTF::VectorBuffer.1229" }
%"class.WTF::VectorBuffer.1229" = type { %"class.WTF::VectorBufferBase.1230" }
%"class.WTF::VectorBufferBase.1230" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1233" = type { %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1236", %"class.WTF::Vector.1228", i32, i32 }
%"class.WTF::Vector.1236" = type { %"class.WTF::VectorBuffer.1237" }
%"class.WTF::VectorBuffer.1237" = type { %"class.WTF::VectorBufferBase.1238" }
%"class.WTF::VectorBufferBase.1238" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1244 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1245", [4 x i8] }>
%"class.WTF::RefCounted.1245" = type { %"class.base::RefCounted.1246" }
%"class.base::RefCounted.1246" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1247 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1248", [4 x i8] }>
%"class.WTF::RefCounted.1248" = type { %"class.base::RefCounted.1249" }
%"class.base::RefCounted.1249" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1250 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1251" }>
%"class.WTF::RefCounted.1251" = type { %"class.base::RefCounted.1252" }
%"class.base::RefCounted.1252" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1253 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1254 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1255 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1256", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1256" = type { %"class.base::RefCounted.1257" }
%"class.base::RefCounted.1257" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1258" }
%"class.blink::DataRef.1258" = type { %class.scoped_refptr.1259 }
%class.scoped_refptr.1259 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1122", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1260" }
%"class.WTF::RefCounted.1260" = type { %"class.base::RefCounted.1261" }
%"class.base::RefCounted.1261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1277" = type { %"class.blink::PersistentBase.1278" }
%"class.blink::PersistentBase.1278" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.1083" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1247, %"class.blink::Member.1092", i32, [4 x i8] }>
%"class.absl::optional.1281" = type { %"class.absl::optional_internal::optional_data.1282" }
%"class.absl::optional_internal::optional_data.1282" = type { %"class.absl::optional_internal::optional_data_base.1283" }
%"class.absl::optional_internal::optional_data_base.1283" = type { %"class.absl::optional_internal::optional_data_dtor_base.1284" }
%"class.absl::optional_internal::optional_data_dtor_base.1284" = type { i8, [3 x i8], %union.anon.1285 }
%union.anon.1285 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1262" = type { %"class.blink::PersistentBase.1263" }
%"class.blink::PersistentBase.1263" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.1083" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1266" }
%"class.blink::HeapVector.1266" = type { %"class.WTF::Vector.1269" }
%"class.WTF::Vector.1269" = type { %"class.WTF::VectorBuffer.1270" }
%"class.WTF::VectorBuffer.1270" = type { %"class.WTF::VectorBufferBase.1271" }
%"class.WTF::VectorBufferBase.1271" = type { %"class.blink::Member.1272"*, i32, i32 }
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1286" = type { %class.scoped_refptr.1287 }
%class.scoped_refptr.1287 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1288", %"class.blink::DataRef.1290", %"class.blink::DataRef.1294", %"class.blink::DataRef.1303", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1322", %"class.std::__1::unique_ptr.1333", %"class.std::__1::unique_ptr.1372", %"class.std::__1::unique_ptr.1383", %"class.std::__1::unique_ptr.1394", %"class.WTF::Vector.1400", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1288" = type { %"class.base::RefCounted.1289" }
%"class.base::RefCounted.1289" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1290" = type { %class.scoped_refptr.1291 }
%class.scoped_refptr.1291 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1292", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1292" = type { %"class.base::RefCounted.1293" }
%"class.base::RefCounted.1293" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1294" = type { %class.scoped_refptr.1295 }
%class.scoped_refptr.1295 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1296", [4 x i8], %"class.WTF::Vector.1298", i8, [7 x i8] }>
%"class.WTF::RefCounted.1296" = type { %"class.base::RefCounted.1297" }
%"class.base::RefCounted.1297" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1298" = type { %"class.WTF::VectorBuffer.1299" }
%"class.WTF::VectorBuffer.1299" = type { %"class.WTF::VectorBufferBase.1300" }
%"class.WTF::VectorBufferBase.1300" = type { i32*, i32, i32 }
%"class.blink::DataRef.1303" = type { %class.scoped_refptr.1304 }
%class.scoped_refptr.1304 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1305", [4 x i8], %"class.WTF::HashMap.1307", %"class.WTF::HashMap.1307", %"class.WTF::HashMap.1307", %"class.WTF::HashMap.1307", %"class.WTF::HashMap.1307", %"class.WTF::HashMap.1307", %"class.WTF::HashMap.1312", %"class.WTF::HashMap.1312", %"class.WTF::HashMap.1312", %"class.WTF::HashMap.1312", %"class.WTF::HashMap.1317", %"class.WTF::Vector.1228", %"class.WTF::Vector.1228", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1305" = type { %"class.base::RefCounted.1306" }
%"class.base::RefCounted.1306" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1307" = type { %"class.WTF::HashTable.1308" }
%"class.WTF::HashTable.1308" = type <{ %"struct.WTF::KeyValuePair.1311"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1311" = type { %"class.WTF::String", %"class.WTF::Vector.2886" }
%"class.WTF::Vector.2886" = type { %"class.WTF::VectorBuffer.2887" }
%"class.WTF::VectorBuffer.2887" = type { %"class.WTF::VectorBufferBase.2888" }
%"class.WTF::VectorBufferBase.2888" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1312" = type { %"class.WTF::HashTable.1313" }
%"class.WTF::HashTable.1313" = type <{ %"struct.WTF::KeyValuePair.1316"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1316" = type { i64, %"class.WTF::Vector.1400" }
%"class.WTF::HashMap.1317" = type { %"class.WTF::HashTable.1318" }
%"class.WTF::HashTable.1318" = type <{ %"struct.WTF::KeyValuePair.1321"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1321" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1322" = type { %"class.std::__1::__compressed_pair.1323" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1325" }
%"class.WTF::HashMap.1325" = type { %"class.WTF::HashTable.1326" }
%"class.WTF::HashTable.1326" = type <{ %"struct.WTF::KeyValuePair.1329"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1329" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2891", %"class.absl::optional.2891", %"class.absl::optional.2891" }
%"class.absl::optional.2891" = type { %"class.absl::optional_internal::optional_data.2892" }
%"class.absl::optional_internal::optional_data.2892" = type { %"class.absl::optional_internal::optional_data_base.2893" }
%"class.absl::optional_internal::optional_data_base.2893" = type { %"class.absl::optional_internal::optional_data_dtor_base.2894" }
%"class.absl::optional_internal::optional_data_dtor_base.2894" = type { i8, %union.anon.2895 }
%union.anon.2895 = type { i32 }
%"class.std::__1::unique_ptr.1333" = type { %"class.std::__1::__compressed_pair.1334" }
%"class.std::__1::__compressed_pair.1334" = type { %"struct.std::__1::__compressed_pair_elem.1335" }
%"struct.std::__1::__compressed_pair_elem.1335" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1101", %"class.WTF::Vector.1349", %"class.WTF::Vector.1336", %"class.WTF::Vector.1354", %"class.WTF::Vector.1359", %"class.WTF::Vector.1364" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1336", %"class.WTF::Vector.1336", %"class.WTF::Vector.1341" }
%"class.WTF::Vector.1341" = type { %"class.WTF::VectorBuffer.1342" }
%"class.WTF::VectorBuffer.1342" = type { %"class.WTF::VectorBufferBase.1343" }
%"class.WTF::VectorBufferBase.1343" = type { %class.scoped_refptr.1344*, i32, i32 }
%class.scoped_refptr.1344 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1345", i32 }
%"class.WTF::ThreadSafeRefCounted.1345" = type { %"class.base::RefCountedThreadSafe.1346" }
%"class.base::RefCountedThreadSafe.1346" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1349" = type { %"class.WTF::VectorBuffer.1350" }
%"class.WTF::VectorBuffer.1350" = type { %"class.WTF::VectorBufferBase.1351" }
%"class.WTF::VectorBufferBase.1351" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1336" = type { %"class.WTF::VectorBuffer.1337" }
%"class.WTF::VectorBuffer.1337" = type { %"class.WTF::VectorBufferBase.1338" }
%"class.WTF::VectorBufferBase.1338" = type { double*, i32, i32 }
%"class.WTF::Vector.1354" = type { %"class.WTF::VectorBuffer.1355" }
%"class.WTF::VectorBuffer.1355" = type { %"class.WTF::VectorBufferBase.1356" }
%"class.WTF::VectorBufferBase.1356" = type { i32*, i32, i32 }
%"class.WTF::Vector.1359" = type { %"class.WTF::VectorBuffer.1360" }
%"class.WTF::VectorBuffer.1360" = type { %"class.WTF::VectorBufferBase.1361" }
%"class.WTF::VectorBufferBase.1361" = type { i32*, i32, i32 }
%"class.WTF::Vector.1364" = type { %"class.WTF::VectorBuffer.1365" }
%"class.WTF::VectorBuffer.1365" = type { %"class.WTF::VectorBufferBase.1366" }
%"class.WTF::VectorBufferBase.1366" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1372" = type { %"class.std::__1::__compressed_pair.1373" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1374" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1375" }
%"class.WTF::Vector.1375" = type { %"class.WTF::VectorBuffer.1376" }
%"class.WTF::VectorBuffer.1376" = type { %"class.WTF::VectorBufferBase.1377" }
%"class.WTF::VectorBufferBase.1377" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1383" = type { %"class.std::__1::__compressed_pair.1384" }
%"class.std::__1::__compressed_pair.1384" = type { %"struct.std::__1::__compressed_pair_elem.1385" }
%"struct.std::__1::__compressed_pair_elem.1385" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1386" }
%"class.WTF::Vector.1386" = type { %"class.WTF::VectorBuffer.1387" }
%"class.WTF::VectorBuffer.1387" = type { %"class.WTF::VectorBufferBase.1388" }
%"class.WTF::VectorBufferBase.1388" = type { %"class.blink::Persistent.1122"*, i32, i32 }
%"class.std::__1::unique_ptr.1394" = type { %"class.std::__1::__compressed_pair.1395" }
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.1396" }
%"struct.std::__1::__compressed_pair_elem.1396" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1122", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1405" }
%"class.WTF::Vector.1405" = type { %"class.WTF::VectorBuffer.1406" }
%"class.WTF::VectorBuffer.1406" = type { %"class.WTF::VectorBufferBase.1407" }
%"class.WTF::VectorBufferBase.1407" = type { %class.scoped_refptr.1408*, i32, i32 }
%class.scoped_refptr.1408 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1251", [4 x i8] }>
%"class.blink::Persistent.1411" = type { %"class.blink::PersistentBase.1412" }
%"class.blink::PersistentBase.1412" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.1083" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1415" }
%"class.blink::Member.1415" = type { %"class.blink::MemberBase.1416" }
%"class.blink::MemberBase.1416" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1417" = type { %class.scoped_refptr.1418 }
%class.scoped_refptr.1418 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1419", [4 x i8], %"class.blink::DataRef.1421", %"class.blink::DataRef.1425", %"class.blink::DataRef.1446", %"class.blink::DataRef.1464", %"class.blink::DataRef.1476", %"class.blink::DataRef.1480", %class.scoped_refptr.1450, i32, [4 x i8] }>
%"class.WTF::RefCounted.1419" = type { %"class.base::RefCounted.1420" }
%"class.base::RefCounted.1420" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1421" = type { %class.scoped_refptr.1422 }
%class.scoped_refptr.1422 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1423", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1423" = type { %"class.base::RefCounted.1424" }
%"class.base::RefCounted.1424" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1425" = type { %class.scoped_refptr.1426 }
%class.scoped_refptr.1426 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1427", %class.scoped_refptr.1429, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1427" = type { %"class.base::RefCounted.1428" }
%"class.base::RefCounted.1428" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1429 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1430", %"class.std::__1::unique_ptr.1436", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1248" }>
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1439, i32, %"struct.std::__1::atomic.275", %"struct.std::__1::atomic.275", i8, i8 }>
%class.sk_sp.1439 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1440, %class.SkTDArray.1441, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.62" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1440 = type { i8*, i32, i32 }
%class.SkTDArray.1441 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1442 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.62", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1442 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.261", [3 x i8] }
%"class.blink::DataRef.1446" = type { %class.scoped_refptr.1447 }
%class.scoped_refptr.1447 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1448", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1448" = type { %"class.base::RefCounted.1449" }
%"class.base::RefCounted.1449" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1450, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1464" = type { %class.scoped_refptr.1465 }
%class.scoped_refptr.1465 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1466", [4 x i8], %class.scoped_refptr.1468, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1466" = type { %"class.base::RefCounted.1467" }
%"class.base::RefCounted.1467" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1468 = type { %"class.base::RefCountedData.1469"* }
%"class.base::RefCountedData.1469" = type { %"class.base::RefCountedThreadSafe.1470", %"class.WTF::Vector.1471" }
%"class.base::RefCountedThreadSafe.1470" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1471" = type { %"class.WTF::VectorBuffer.1472" }
%"class.WTF::VectorBuffer.1472" = type { %"class.WTF::VectorBufferBase.1473" }
%"class.WTF::VectorBufferBase.1473" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1476" = type { %class.scoped_refptr.1477 }
%class.scoped_refptr.1477 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1478", %class.scoped_refptr.1450, %class.scoped_refptr.1450, %class.scoped_refptr.1450 }
%"class.WTF::RefCounted.1478" = type { %"class.base::RefCounted.1479" }
%"class.base::RefCounted.1479" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1480" = type { %class.scoped_refptr.1481 }
%class.scoped_refptr.1481 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1482", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1482" = type { %"class.base::RefCounted.1483" }
%"class.base::RefCounted.1483" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1450 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1451", %"class.blink::Persistent.1453", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1451" = type { %"class.base::RefCounted.1452" }
%"class.base::RefCounted.1452" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1453" = type { %"class.blink::PersistentBase.1454" }
%"class.blink::PersistentBase.1454" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.1083" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.53", %"class.blink::HeapHashMap.1457" }
%"class.blink::HeapHashMap.1457" = type { %"class.WTF::HashMap.1460" }
%"class.WTF::HashMap.1460" = type { %"class.WTF::HashTable.1461" }
%"class.WTF::HashTable.1461" = type <{ %"struct.WTF::KeyValuePair.1463"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1463" = type opaque
%"class.blink::DataRef.1484" = type { %class.scoped_refptr.1485 }
%class.scoped_refptr.1485 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1486", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1486" = type { %"class.base::RefCounted.1487" }
%"class.base::RefCounted.1487" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1488" = type { %class.scoped_refptr.1489 }
%class.scoped_refptr.1489 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1490", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1490" = type { %"class.base::RefCounted.1491" }
%"class.base::RefCounted.1491" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1492" = type { %class.scoped_refptr.1493 }
%class.scoped_refptr.1493 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1494", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1494" = type { %"class.base::RefCounted.1495" }
%"class.base::RefCounted.1495" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1496" = type { %class.scoped_refptr.1497 }
%class.scoped_refptr.1497 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1498", %class.scoped_refptr.1500 }
%"class.WTF::RefCounted.1498" = type { %"class.base::RefCounted.1499" }
%"class.base::RefCounted.1499" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1500 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1942", %"class.blink::StyleVariables", %class.scoped_refptr.1500 }
%"class.WTF::RefCounted.1942" = type { %"class.base::RefCounted.1943" }
%"class.base::RefCounted.1943" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1501" = type { %"class.base::RefCounted.1502" }
%"class.base::RefCounted.1502" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1503" = type { %"class.std::__1::__compressed_pair.1504" }
%"class.std::__1::__compressed_pair.1504" = type { %"struct.std::__1::__compressed_pair_elem.1505" }
%"struct.std::__1::__compressed_pair_elem.1505" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1506" }
%"class.std::__1::unique_ptr.1506" = type { %"class.std::__1::__compressed_pair.1507" }
%"class.std::__1::__compressed_pair.1507" = type { %"struct.std::__1::__compressed_pair_elem.1508" }
%"struct.std::__1::__compressed_pair_elem.1508" = type { %"class.WTF::Vector.1509"* }
%"class.WTF::Vector.1509" = type { %"class.WTF::VectorBuffer.2906" }
%"class.WTF::VectorBuffer.2906" = type { %"class.WTF::VectorBufferBase.2907", [32 x i8] }
%"class.WTF::VectorBufferBase.2907" = type { %class.scoped_refptr.986*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1517" }
%"class.std::__1::unique_ptr.1517" = type { %"class.std::__1::__compressed_pair.1518" }
%"class.std::__1::__compressed_pair.1518" = type { %"struct.std::__1::__compressed_pair_elem.1519" }
%"struct.std::__1::__compressed_pair_elem.1519" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1520", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1526", %"class.std::__1::unique_ptr.1650", i8, %"class.absl::optional.1656", %class.scoped_refptr.1632, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1661" }
%"class.std::__1::unique_ptr.1520" = type { %"class.std::__1::__compressed_pair.1521" }
%"class.std::__1::__compressed_pair.1521" = type { %"struct.std::__1::__compressed_pair_elem.1522" }
%"struct.std::__1::__compressed_pair_elem.1522" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1526" = type { %"class.std::__1::__compressed_pair.1527" }
%"class.std::__1::__compressed_pair.1527" = type { %"struct.std::__1::__compressed_pair_elem.1528" }
%"struct.std::__1::__compressed_pair_elem.1528" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1529, %class.scoped_refptr.1529, %class.scoped_refptr.1529, %class.scoped_refptr.1529, %class.scoped_refptr.1529, %class.scoped_refptr.1529, %class.scoped_refptr.1564, %class.scoped_refptr.1580, %class.scoped_refptr.1581, %class.scoped_refptr.1581, %class.scoped_refptr.1581, %class.scoped_refptr.1581, %class.scoped_refptr.1581, %class.scoped_refptr.1581, %class.scoped_refptr.1622, %class.scoped_refptr.1623, %class.scoped_refptr.1623, %class.scoped_refptr.1623, %class.scoped_refptr.1623, %class.scoped_refptr.1623, %class.scoped_refptr.1623, %class.scoped_refptr.1623, %class.scoped_refptr.1623, %class.scoped_refptr.1646 }
%class.scoped_refptr.1529 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1546" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1530", i8, i8, %class.scoped_refptr.1532, i32, i32 }
%"class.WTF::RefCounted.1530" = type { %"class.base::RefCounted.1531" }
%"class.base::RefCounted.1531" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1532 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1539, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1540", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1533" }
%"class.std::__1::unique_ptr.1533" = type { %"class.std::__1::__compressed_pair.1534" }
%"class.std::__1::__compressed_pair.1534" = type { %"struct.std::__1::__compressed_pair_elem.1535" }
%"struct.std::__1::__compressed_pair_elem.1535" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1539 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1565", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1565" = type { %"class.WTF::RefCounted.1566", i8, i8, %class.scoped_refptr.1539, i32, i32 }
%"class.WTF::RefCounted.1566" = type { %"class.base::RefCounted.1567" }
%"class.base::RefCounted.1567" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1568" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1568" = type { %"class.absl::optional_internal::optional_data.1569" }
%"class.absl::optional_internal::optional_data.1569" = type { %"class.absl::optional_internal::optional_data_base.1570" }
%"class.absl::optional_internal::optional_data_base.1570" = type { %"class.absl::optional_internal::optional_data_dtor_base.1571" }
%"class.absl::optional_internal::optional_data_dtor_base.1571" = type { i8, %union.anon.1572 }
%union.anon.1572 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1573", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1573" = type { %"class.std::__1::__vector_base.1574" }
%"class.std::__1::__vector_base.1574" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1575" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1575" = type { %"struct.std::__1::__compressed_pair_elem.1576" }
%"struct.std::__1::__compressed_pair_elem.1576" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1540" = type { %"class.std::__1::__compressed_pair.1541" }
%"class.std::__1::__compressed_pair.1541" = type { %"struct.std::__1::__compressed_pair_elem.1542" }
%"struct.std::__1::__compressed_pair_elem.1542" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1546" = type { %"class.std::__1::__compressed_pair.1547" }
%"class.std::__1::__compressed_pair.1547" = type { %"struct.std::__1::__compressed_pair_elem.1548" }
%"struct.std::__1::__compressed_pair_elem.1548" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1549", %"class.std::__1::unique_ptr.1555", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1549" = type { %"class.std::__1::__compressed_pair.1550" }
%"class.std::__1::__compressed_pair.1550" = type { %"struct.std::__1::__compressed_pair_elem.1551" }
%"struct.std::__1::__compressed_pair_elem.1551" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1555" = type { %"class.std::__1::__compressed_pair.1556" }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.1557" }
%"struct.std::__1::__compressed_pair_elem.1557" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1564 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1580 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1581 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1582" }
%"class.blink::PaintPropertyNode.1582" = type { %"class.WTF::RefCounted.1583", i8, i8, %class.scoped_refptr.1585, i32, i32 }
%"class.WTF::RefCounted.1583" = type { %"class.base::RefCounted.1584" }
%"class.base::RefCounted.1584" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1585 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1532, %class.scoped_refptr.1586, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1608", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1586 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1624" }
%"class.blink::PaintPropertyNode.1624" = type { %"class.WTF::RefCounted.1625", i8, i8, %class.scoped_refptr.1586, i32, i32 }
%"class.WTF::RefCounted.1625" = type { %"class.base::RefCounted.1626" }
%"class.base::RefCounted.1626" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1587" }
%"class.std::__1::vector.1587" = type { %"class.std::__1::__vector_base.1588" }
%"class.std::__1::__vector_base.1588" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1603" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1589, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1596", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1589 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1590, i32, %"class.absl::optional.1591", i8, i32 }
%class.sk_sp.1590 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1591" = type { %"class.absl::optional_internal::optional_data.1592" }
%"class.absl::optional_internal::optional_data.1592" = type { %"class.absl::optional_internal::optional_data_base.1593" }
%"class.absl::optional_internal::optional_data_base.1593" = type { %"class.absl::optional_internal::optional_data_dtor_base.1594" }
%"class.absl::optional_internal::optional_data_dtor_base.1594" = type { i8, %union.anon.1595 }
%union.anon.1595 = type { %struct.SkRect }
%"class.std::__1::vector.1596" = type { %"class.std::__1::__vector_base.1597" }
%"class.std::__1::__vector_base.1597" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1598" }
%"class.std::__1::__compressed_pair.1598" = type { %"struct.std::__1::__compressed_pair_elem.1599" }
%"struct.std::__1::__compressed_pair_elem.1599" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1603" = type { %"struct.std::__1::__compressed_pair_elem.1604" }
%"struct.std::__1::__compressed_pair_elem.1604" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1608" = type { %"class.std::__1::__compressed_pair.1609" }
%"class.std::__1::__compressed_pair.1609" = type { %"struct.std::__1::__compressed_pair_elem.1610" }
%"struct.std::__1::__compressed_pair_elem.1610" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.1614" }
%"class.base::internal::flat_tree.1614" = type { %"class.std::__1::vector.1615" }
%"class.std::__1::vector.1615" = type { %"class.std::__1::__vector_base.1616" }
%"class.std::__1::__vector_base.1616" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1617" }
%"class.std::__1::__compressed_pair.1617" = type { %"struct.std::__1::__compressed_pair_elem.1618" }
%"struct.std::__1::__compressed_pair_elem.1618" = type { i32* }
%class.scoped_refptr.1622 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1623 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1635" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1532, %"class.absl::optional.1627", %class.scoped_refptr.1632, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1627" = type { %"class.absl::optional_internal::optional_data.1628" }
%"class.absl::optional_internal::optional_data.1628" = type { %"class.absl::optional_internal::optional_data_base.1629" }
%"class.absl::optional_internal::optional_data_base.1629" = type { %"class.absl::optional_internal::optional_data_dtor_base.1630" }
%"class.absl::optional_internal::optional_data_dtor_base.1630" = type { i8, [3 x i8], %union.anon.1631 }
%union.anon.1631 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1635" = type { %"class.std::__1::__compressed_pair.1636" }
%"class.std::__1::__compressed_pair.1636" = type { %"struct.std::__1::__compressed_pair_elem.1637" }
%"struct.std::__1::__compressed_pair_elem.1637" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1638", i32, [4 x i8] }>
%"class.WTF::Vector.1638" = type { %"class.WTF::VectorBuffer.1639" }
%"class.WTF::VectorBuffer.1639" = type { %"class.WTF::VectorBufferBase.1640" }
%"class.WTF::VectorBufferBase.1640" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1646 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1650" = type { %"class.std::__1::__compressed_pair.1651" }
%"class.std::__1::__compressed_pair.1651" = type { %"struct.std::__1::__compressed_pair_elem.1652" }
%"struct.std::__1::__compressed_pair_elem.1652" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1532, %class.scoped_refptr.1586, %class.scoped_refptr.1585 }
%"class.absl::optional.1656" = type { %"class.absl::optional_internal::optional_data.1657" }
%"class.absl::optional_internal::optional_data.1657" = type { %"class.absl::optional_internal::optional_data_base.1658" }
%"class.absl::optional_internal::optional_data_base.1658" = type { %"class.absl::optional_internal::optional_data_dtor_base.1659" }
%"class.absl::optional_internal::optional_data_dtor_base.1659" = type { i8, %union.anon.1660 }
%union.anon.1660 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1632 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1633", [4 x i8] }
%"class.WTF::RefCounted.1633" = type { %"class.base::RefCounted.1634" }
%"class.base::RefCounted.1634" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1661" = type { %"class.std::__1::__compressed_pair.1662" }
%"class.std::__1::__compressed_pair.1662" = type { %"struct.std::__1::__compressed_pair_elem.1663" }
%"struct.std::__1::__compressed_pair_elem.1663" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1670 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1671" = type { %"class.WTF::VectorBuffer.1672" }
%"class.WTF::VectorBuffer.1672" = type { %"class.WTF::VectorBufferBase.1673", [8 x i8] }
%"class.WTF::VectorBufferBase.1673" = type { %class.scoped_refptr.1670*, i32, i32 }
%"class.std::__1::unique_ptr.1676" = type { %"class.std::__1::__compressed_pair.1677" }
%"class.std::__1::__compressed_pair.1677" = type { %"struct.std::__1::__compressed_pair_elem.1678" }
%"struct.std::__1::__compressed_pair_elem.1678" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1679", %"class.absl::optional.1684", %"class.absl::optional.1689" }
%"class.absl::optional.1679" = type { %"class.absl::optional_internal::optional_data.1680" }
%"class.absl::optional_internal::optional_data.1680" = type { %"class.absl::optional_internal::optional_data_base.1681" }
%"class.absl::optional_internal::optional_data_base.1681" = type { %"class.absl::optional_internal::optional_data_dtor_base.1682" }
%"class.absl::optional_internal::optional_data_dtor_base.1682" = type { i8, %union.anon.1683 }
%union.anon.1683 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1684" = type { %"class.absl::optional_internal::optional_data.1685" }
%"class.absl::optional_internal::optional_data.1685" = type { %"class.absl::optional_internal::optional_data_base.1686" }
%"class.absl::optional_internal::optional_data_base.1686" = type { %"class.absl::optional_internal::optional_data_dtor_base.1687" }
%"class.absl::optional_internal::optional_data_dtor_base.1687" = type { i8, [3 x i8], %union.anon.1688 }
%union.anon.1688 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1689" = type { %"class.absl::optional_internal::optional_data.1690" }
%"class.absl::optional_internal::optional_data.1690" = type { %"class.absl::optional_internal::optional_data_base.1691" }
%"class.absl::optional_internal::optional_data_base.1691" = type { %"class.absl::optional_internal::optional_data_dtor_base.1692" }
%"class.absl::optional_internal::optional_data_dtor_base.1692" = type { i8, %union.anon.1693 }
%union.anon.1693 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1697 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.1698" = type { %"class.blink::PersistentBase.1699" }
%"class.blink::PersistentBase.1699" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.1083" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1702", %"struct.blink::PhysicalRect", %"class.blink::Member.1712" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.1702" = type { %"class.std::__1::__compressed_pair.1703" }
%"class.std::__1::__compressed_pair.1703" = type { %"struct.std::__1::__compressed_pair_elem.1704" }
%"struct.std::__1::__compressed_pair_elem.1704" = type { %"class.WTF::HashSet.1705"* }
%"class.WTF::HashSet.1705" = type { %"class.WTF::HashTable.1706" }
%"class.WTF::HashTable.1706" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1712" = type { %"class.blink::MemberBase.1713" }
%"class.blink::MemberBase.1713" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1716", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1714, %"class.base::WeakPtrFactory.1715" }
%class.scoped_refptr.1714 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1715" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1716" = type { %"class.blink::MemberBase.587" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1717" = type { %"class.absl::optional_internal::optional_data.1718" }
%"class.absl::optional_internal::optional_data.1718" = type { %"class.absl::optional_internal::optional_data_base.1719" }
%"class.absl::optional_internal::optional_data_base.1719" = type { %"class.absl::optional_internal::optional_data_dtor_base.1720" }
%"class.absl::optional_internal::optional_data_dtor_base.1720" = type { i8, %union.anon.1721 }
%union.anon.1721 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1722" = type { %"class.blink::MemberBase.1723" }
%"class.blink::MemberBase.1723" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1724" = type { %"class.blink::MemberBase.1725" }
%"class.blink::MemberBase.1725" = type { %"class.blink::HeapHashSet.1726"* }
%"class.blink::HeapHashSet.1726" = type opaque
%"class.std::__1::unique_ptr.1727" = type { %"class.std::__1::__compressed_pair.1728" }
%"class.std::__1::__compressed_pair.1728" = type { %"struct.std::__1::__compressed_pair_elem.1729" }
%"struct.std::__1::__compressed_pair_elem.1729" = type { %"class.WTF::HashSet.1730"* }
%"class.WTF::HashSet.1730" = type { %"class.WTF::HashTable.1731" }
%"class.WTF::HashTable.1731" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1739" = type { %"class.WTF::HashSet.1742" }
%"class.WTF::HashSet.1742" = type { %"class.WTF::HashTable.1743" }
%"class.WTF::HashTable.1743" = type <{ %"class.blink::Member.294"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashSet.1745" = type { %"class.WTF::HashSet.1748" }
%"class.WTF::HashSet.1748" = type { %"class.WTF::HashTable.1749" }
%"class.WTF::HashTable.1749" = type <{ %"class.blink::Member.1751"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1751" = type { %"class.blink::MemberBase.1752" }
%"class.blink::MemberBase.1752" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1929", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1940", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.53" }
%"class.blink::Member.1929" = type { %"class.blink::MemberBase.1930" }
%"class.blink::MemberBase.1930" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1931", %"class.blink::Member.1932", %"class.blink::Member.1934", %"class.blink::Member.1936", %"class.blink::Member.1938", %"class.WTF::Vector.1922", i16, %class.scoped_refptr.1714 }
%"class.blink::ThreadState::PrefinalizerRegistration.1931" = type { i8 }
%"class.blink::Member.1932" = type { %"class.blink::MemberBase.1933" }
%"class.blink::MemberBase.1933" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1934" = type { %"class.blink::MemberBase.1935" }
%"class.blink::MemberBase.1935" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1936" = type { %"class.blink::MemberBase.1937" }
%"class.blink::MemberBase.1937" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1938" = type { %"class.blink::MemberBase.1939" }
%"class.blink::MemberBase.1939" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1940" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1941", { i64, i64 } }
%"class.blink::WeakMember.1941" = type { %"class.blink::MemberBase.1752" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1753" = type { %"class.std::__1::__compressed_pair.1754" }
%"class.std::__1::__compressed_pair.1754" = type { %"struct.std::__1::__compressed_pair_elem.1755" }
%"struct.std::__1::__compressed_pair_elem.1755" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1759" = type { %"class.blink::MemberBase.1760" }
%"class.blink::MemberBase.1760" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1763", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1763" = type { %"class.WTF::HashTable.1764" }
%"class.WTF::HashTable.1764" = type <{ %"struct.WTF::KeyValuePair.1766"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1766" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1767", i32, i32 }
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769" }
%"class.WTF::VectorBufferBase.1769" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1771" = type { %"class.WTF::LinkedHashSet.1774" }
%"class.WTF::LinkedHashSet.1774" = type { %"class.WTF::HashMap.1775", %"class.WTF::VectorBackedLinkedList.1779" }
%"class.WTF::HashMap.1775" = type { %"class.WTF::HashTable.1776" }
%"class.WTF::HashTable.1776" = type <{ %"struct.WTF::KeyValuePair.1778"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1778" = type opaque
%"class.WTF::VectorBackedLinkedList.1779" = type { %"class.WTF::Vector.1780", i32, i32 }
%"class.WTF::Vector.1780" = type { %"class.WTF::VectorBuffer.1781" }
%"class.WTF::VectorBuffer.1781" = type { %"class.WTF::VectorBufferBase.1782" }
%"class.WTF::VectorBufferBase.1782" = type { %"class.WTF::VectorBackedLinkedListNode.1783"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1783" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1785" = type { %"class.std::__1::__compressed_pair.1786" }
%"class.std::__1::__compressed_pair.1786" = type { %"struct.std::__1::__compressed_pair_elem.1787" }
%"struct.std::__1::__compressed_pair_elem.1787" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1791" = type { %"class.std::__1::__compressed_pair.1792" }
%"class.std::__1::__compressed_pair.1792" = type { %"struct.std::__1::__compressed_pair_elem.1793" }
%"struct.std::__1::__compressed_pair_elem.1793" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1794, %class.scoped_refptr.1794, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1849", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1854", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1794 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1795", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1802" }
%"class.WTF::RefCounted.1795" = type { %"class.base::RefCounted.1796" }
%"class.base::RefCounted.1796" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1797", i32, [4 x i8] }>
%"class.WTF::Vector.1797" = type { %"class.WTF::VectorBuffer.1798" }
%"class.WTF::VectorBuffer.1798" = type { %"class.WTF::VectorBufferBase.1799" }
%"class.WTF::VectorBufferBase.1799" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1802" = type { %"class.WTF::VectorBuffer.1803" }
%"class.WTF::VectorBuffer.1803" = type { %"class.WTF::VectorBufferBase.1804" }
%"class.WTF::VectorBufferBase.1804" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1805", %"class.std::__1::unique_ptr.1821", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1805" = type { %"class.std::__1::__compressed_pair.1806" }
%"class.std::__1::__compressed_pair.1806" = type { %"struct.std::__1::__compressed_pair_elem.1807" }
%"struct.std::__1::__compressed_pair_elem.1807" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1808", %"class.WTF::Vector.1813", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1808" = type { %"class.WTF::VectorBuffer.1809" }
%"class.WTF::VectorBuffer.1809" = type { %"class.WTF::VectorBufferBase.1810" }
%"class.WTF::VectorBufferBase.1810" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1813" = type { %"class.WTF::VectorBuffer.1814" }
%"class.WTF::VectorBuffer.1814" = type { %"class.WTF::VectorBufferBase.1815" }
%"class.WTF::VectorBufferBase.1815" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1821" = type { %"class.std::__1::__compressed_pair.1822" }
%"class.std::__1::__compressed_pair.1822" = type { %"struct.std::__1::__compressed_pair_elem.1823" }
%"struct.std::__1::__compressed_pair_elem.1823" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1824", %"class.absl::optional.1824" }
%"class.absl::optional.1824" = type { %"class.absl::optional_internal::optional_data.1825" }
%"class.absl::optional_internal::optional_data.1825" = type { %"class.absl::optional_internal::optional_data_base.1826" }
%"class.absl::optional_internal::optional_data_base.1826" = type { %"class.absl::optional_internal::optional_data_dtor_base.1827" }
%"class.absl::optional_internal::optional_data_dtor_base.1827" = type { i8, [3 x i8], %union.anon.1828 }
%union.anon.1828 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1802"*, %"class.absl::optional.1834", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1834" = type { %"class.absl::optional_internal::optional_data.1835" }
%"class.absl::optional_internal::optional_data.1835" = type { %"class.absl::optional_internal::optional_data_base.1836" }
%"class.absl::optional_internal::optional_data_base.1836" = type { %"class.absl::optional_internal::optional_data_dtor_base.1837" }
%"class.absl::optional_internal::optional_data_dtor_base.1837" = type { i8, %union.anon.1838 }
%union.anon.1838 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1839", %"class.WTF::Vector.1844" }
%"class.WTF::Vector.1839" = type { %"class.WTF::VectorBuffer.1840" }
%"class.WTF::VectorBuffer.1840" = type { %"class.WTF::VectorBufferBase.1841", [128 x i8] }
%"class.WTF::VectorBufferBase.1841" = type { i32*, i32, i32 }
%"class.WTF::Vector.1844" = type { %"class.WTF::VectorBuffer.1845" }
%"class.WTF::VectorBuffer.1845" = type { %"class.WTF::VectorBufferBase.1846", [128 x i8] }
%"class.WTF::VectorBufferBase.1846" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1849" = type { %"class.WTF::VectorBuffer.1850" }
%"class.WTF::VectorBuffer.1850" = type { %"class.WTF::VectorBufferBase.1851" }
%"class.WTF::VectorBufferBase.1851" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1854" = type { %"class.WTF::HashTable.1855" }
%"class.WTF::HashTable.1855" = type <{ %"struct.WTF::KeyValuePair.1858"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1858" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1859", %"class.WTF::Vector.1864" }
%"class.WTF::HashMap.1859" = type { %"class.WTF::HashTable.1860" }
%"class.WTF::HashTable.1860" = type <{ %"struct.WTF::KeyValuePair.1863"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1863" = type opaque
%"class.WTF::Vector.1864" = type { %"class.WTF::VectorBuffer.1865" }
%"class.WTF::VectorBuffer.1865" = type { %"class.WTF::VectorBufferBase.1866" }
%"class.WTF::VectorBufferBase.1866" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1872" = type { %"class.std::__1::__compressed_pair.1873" }
%"class.std::__1::__compressed_pair.1873" = type { %"struct.std::__1::__compressed_pair_elem.1874" }
%"struct.std::__1::__compressed_pair_elem.1874" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1878" = type { %"class.WTF::VectorBuffer.1879" }
%"class.WTF::VectorBuffer.1879" = type { %"class.WTF::VectorBufferBase.1880" }
%"class.WTF::VectorBufferBase.1880" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1883 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1884" = type { %"class.blink::MemberBase.1885" }
%"class.blink::MemberBase.1885" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1886" = type { %"class.blink::MemberBase.1887" }
%"class.blink::MemberBase.1887" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1888" = type { %"class.blink::MemberBase.1889" }
%"class.blink::MemberBase.1889" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1890" = type { %"class.WTF::HashSet.1893" }
%"class.WTF::HashSet.1893" = type { %"class.WTF::HashTable.1894" }
%"class.WTF::HashTable.1894" = type <{ %"class.blink::WeakMember.1896"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1896" = type opaque
%"class.blink::HeapHashSet.1897" = type { %"class.WTF::HashSet.1900" }
%"class.WTF::HashSet.1900" = type { %"class.WTF::HashTable.1901" }
%"class.WTF::HashTable.1901" = type <{ %"class.blink::WeakMember.1903"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1903" = type opaque
%"class.std::__1::unique_ptr.1904" = type { %"class.std::__1::__compressed_pair.1905" }
%"class.std::__1::__compressed_pair.1905" = type { %"struct.std::__1::__compressed_pair_elem.1906" }
%"struct.std::__1::__compressed_pair_elem.1906" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1911" = type { %"class.std::__1::__compressed_pair.1912" }
%"class.std::__1::__compressed_pair.1912" = type { %"struct.std::__1::__compressed_pair_elem.1913" }
%"struct.std::__1::__compressed_pair_elem.1913" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1914", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.1922" = type { %"class.WTF::VectorBuffer.1923" }
%"class.WTF::VectorBuffer.1923" = type { %"class.WTF::VectorBufferBase.1924" }
%"class.WTF::VectorBufferBase.1924" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.592" = type { %"class.blink::MemberBase.593" }
%"class.blink::MemberBase.593" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.607", %"class.blink::HeapListHashSet.618", %"class.blink::HeapListHashSet.629", %"class.blink::HeapListHashSet.640", %"class.blink::HeapListHashSet.651", %"class.blink::HeapListHashSet.662", %"class.blink::HeapListHashSet.673", %"class.blink::HeapListHashSet.684", %"class.blink::HeapListHashSet.695", %"class.blink::HeapListHashSet.706", %"class.blink::HeapListHashSet.717", %"class.blink::HeapListHashSet.728", %"class.blink::HeapListHashSet.739", %"class.blink::HeapListHashSet.750", %"class.blink::HeapListHashSet.761", %"class.blink::HeapListHashSet.772", %"class.blink::HeapListHashSet.783", %"class.blink::HeapListHashSet.794", %"class.blink::HeapListHashSet.805" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.603", %"class.blink::Member.605", %"class.blink::Member.605", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.603" = type <{ %"class.blink::Member.605"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.819", %"class.blink::Member.605", %"class.blink::Member.605" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.607" = type { %"class.WTF::ListHashSet.base.617", [7 x i8] }
%"class.WTF::ListHashSet.base.617" = type <{ %"class.WTF::HashTable.612", %"class.blink::Member.614", %"class.blink::Member.614", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.612" = type <{ %"class.blink::Member.614"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::HeapListHashSetNode.616"* }
%"class.blink::HeapListHashSetNode.616" = type { %"class.blink::Member.975", %"class.blink::Member.614", %"class.blink::Member.614" }
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.618" = type { %"class.WTF::ListHashSet.base.628", [7 x i8] }
%"class.WTF::ListHashSet.base.628" = type <{ %"class.WTF::HashTable.623", %"class.blink::Member.625", %"class.blink::Member.625", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.623" = type <{ %"class.blink::Member.625"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::HeapListHashSetNode.627"* }
%"class.blink::HeapListHashSetNode.627" = type { %"class.blink::Member.971", %"class.blink::Member.625", %"class.blink::Member.625" }
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.629" = type { %"class.WTF::ListHashSet.base.639", [7 x i8] }
%"class.WTF::ListHashSet.base.639" = type <{ %"class.WTF::HashTable.634", %"class.blink::Member.636", %"class.blink::Member.636", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.634" = type <{ %"class.blink::Member.636"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::HeapListHashSetNode.638"* }
%"class.blink::HeapListHashSetNode.638" = type { %"class.blink::Member.967", %"class.blink::Member.636", %"class.blink::Member.636" }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.640" = type { %"class.WTF::ListHashSet.base.650", [7 x i8] }
%"class.WTF::ListHashSet.base.650" = type <{ %"class.WTF::HashTable.645", %"class.blink::Member.647", %"class.blink::Member.647", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.645" = type <{ %"class.blink::Member.647"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::HeapListHashSetNode.649"* }
%"class.blink::HeapListHashSetNode.649" = type { %"class.blink::Member.963", %"class.blink::Member.647", %"class.blink::Member.647" }
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.651" = type { %"class.WTF::ListHashSet.base.661", [7 x i8] }
%"class.WTF::ListHashSet.base.661" = type <{ %"class.WTF::HashTable.656", %"class.blink::Member.658", %"class.blink::Member.658", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.656" = type <{ %"class.blink::Member.658"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::HeapListHashSetNode.660"* }
%"class.blink::HeapListHashSetNode.660" = type { %"class.blink::Member.959", %"class.blink::Member.658", %"class.blink::Member.658" }
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.662" = type { %"class.WTF::ListHashSet.base.672", [7 x i8] }
%"class.WTF::ListHashSet.base.672" = type <{ %"class.WTF::HashTable.667", %"class.blink::Member.669", %"class.blink::Member.669", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.667" = type <{ %"class.blink::Member.669"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::HeapListHashSetNode.671"* }
%"class.blink::HeapListHashSetNode.671" = type { %"class.blink::Member.955", %"class.blink::Member.669", %"class.blink::Member.669" }
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.673" = type { %"class.WTF::ListHashSet.base.683", [7 x i8] }
%"class.WTF::ListHashSet.base.683" = type <{ %"class.WTF::HashTable.678", %"class.blink::Member.680", %"class.blink::Member.680", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.678" = type <{ %"class.blink::Member.680"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::HeapListHashSetNode.682"* }
%"class.blink::HeapListHashSetNode.682" = type { %"class.blink::Member.951", %"class.blink::Member.680", %"class.blink::Member.680" }
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.684" = type { %"class.WTF::ListHashSet.base.694", [7 x i8] }
%"class.WTF::ListHashSet.base.694" = type <{ %"class.WTF::HashTable.689", %"class.blink::Member.691", %"class.blink::Member.691", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.689" = type <{ %"class.blink::Member.691"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.691" = type { %"class.blink::MemberBase.692" }
%"class.blink::MemberBase.692" = type { %"class.blink::HeapListHashSetNode.693"* }
%"class.blink::HeapListHashSetNode.693" = type { %"class.blink::Member.947", %"class.blink::Member.691", %"class.blink::Member.691" }
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.695" = type { %"class.WTF::ListHashSet.base.705", [7 x i8] }
%"class.WTF::ListHashSet.base.705" = type <{ %"class.WTF::HashTable.700", %"class.blink::Member.702", %"class.blink::Member.702", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.700" = type <{ %"class.blink::Member.702"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::HeapListHashSetNode.704"* }
%"class.blink::HeapListHashSetNode.704" = type { %"class.blink::Member.943", %"class.blink::Member.702", %"class.blink::Member.702" }
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.706" = type { %"class.WTF::ListHashSet.base.716", [7 x i8] }
%"class.WTF::ListHashSet.base.716" = type <{ %"class.WTF::HashTable.711", %"class.blink::Member.713", %"class.blink::Member.713", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.711" = type <{ %"class.blink::Member.713"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.713" = type { %"class.blink::MemberBase.714" }
%"class.blink::MemberBase.714" = type { %"class.blink::HeapListHashSetNode.715"* }
%"class.blink::HeapListHashSetNode.715" = type { %"class.blink::Member.823", %"class.blink::Member.713", %"class.blink::Member.713" }
%"class.blink::HeapListHashSet.717" = type { %"class.WTF::ListHashSet.base.727", [7 x i8] }
%"class.WTF::ListHashSet.base.727" = type <{ %"class.WTF::HashTable.722", %"class.blink::Member.724", %"class.blink::Member.724", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.722" = type <{ %"class.blink::Member.724"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::HeapListHashSetNode.726"* }
%"class.blink::HeapListHashSetNode.726" = type { %"class.blink::Member.937", %"class.blink::Member.724", %"class.blink::Member.724" }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.728" = type { %"class.WTF::ListHashSet.base.738", [7 x i8] }
%"class.WTF::ListHashSet.base.738" = type <{ %"class.WTF::HashTable.733", %"class.blink::Member.735", %"class.blink::Member.735", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.733" = type <{ %"class.blink::Member.735"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.735" = type { %"class.blink::MemberBase.736" }
%"class.blink::MemberBase.736" = type { %"class.blink::HeapListHashSetNode.737"* }
%"class.blink::HeapListHashSetNode.737" = type { %"class.blink::Member.933", %"class.blink::Member.735", %"class.blink::Member.735" }
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.739" = type { %"class.WTF::ListHashSet.base.749", [7 x i8] }
%"class.WTF::ListHashSet.base.749" = type <{ %"class.WTF::HashTable.744", %"class.blink::Member.746", %"class.blink::Member.746", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.744" = type <{ %"class.blink::Member.746"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::HeapListHashSetNode.748"* }
%"class.blink::HeapListHashSetNode.748" = type { %"class.blink::Member.929", %"class.blink::Member.746", %"class.blink::Member.746" }
%"class.blink::Member.929" = type { %"class.blink::MemberBase.930" }
%"class.blink::MemberBase.930" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.750" = type { %"class.WTF::ListHashSet.base.760", [7 x i8] }
%"class.WTF::ListHashSet.base.760" = type <{ %"class.WTF::HashTable.755", %"class.blink::Member.757", %"class.blink::Member.757", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.755" = type <{ %"class.blink::Member.757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.757" = type { %"class.blink::MemberBase.758" }
%"class.blink::MemberBase.758" = type { %"class.blink::HeapListHashSetNode.759"* }
%"class.blink::HeapListHashSetNode.759" = type { %"class.blink::Member.925", %"class.blink::Member.757", %"class.blink::Member.757" }
%"class.blink::Member.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.761" = type { %"class.WTF::ListHashSet.base.771", [7 x i8] }
%"class.WTF::ListHashSet.base.771" = type <{ %"class.WTF::HashTable.766", %"class.blink::Member.768", %"class.blink::Member.768", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.766" = type <{ %"class.blink::Member.768"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::HeapListHashSetNode.770"* }
%"class.blink::HeapListHashSetNode.770" = type { %"class.blink::Member.921", %"class.blink::Member.768", %"class.blink::Member.768" }
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.772" = type { %"class.WTF::ListHashSet.base.782", [7 x i8] }
%"class.WTF::ListHashSet.base.782" = type <{ %"class.WTF::HashTable.777", %"class.blink::Member.779", %"class.blink::Member.779", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.777" = type <{ %"class.blink::Member.779"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::HeapListHashSetNode.781"* }
%"class.blink::HeapListHashSetNode.781" = type { %"class.blink::Member.917", %"class.blink::Member.779", %"class.blink::Member.779" }
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.783" = type { %"class.WTF::ListHashSet.base.793", [7 x i8] }
%"class.WTF::ListHashSet.base.793" = type <{ %"class.WTF::HashTable.788", %"class.blink::Member.790", %"class.blink::Member.790", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.788" = type <{ %"class.blink::Member.790"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.790" = type { %"class.blink::MemberBase.791" }
%"class.blink::MemberBase.791" = type { %"class.blink::HeapListHashSetNode.792"* }
%"class.blink::HeapListHashSetNode.792" = type { %"class.blink::Member.913", %"class.blink::Member.790", %"class.blink::Member.790" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.794" = type { %"class.WTF::ListHashSet.base.804", [7 x i8] }
%"class.WTF::ListHashSet.base.804" = type <{ %"class.WTF::HashTable.799", %"class.blink::Member.801", %"class.blink::Member.801", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.799" = type <{ %"class.blink::Member.801"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::HeapListHashSetNode.803"* }
%"class.blink::HeapListHashSetNode.803" = type { %"class.blink::Member.825", %"class.blink::Member.801", %"class.blink::Member.801" }
%"class.blink::HeapListHashSet.805" = type { %"class.WTF::ListHashSet.base.815", [7 x i8] }
%"class.WTF::ListHashSet.base.815" = type <{ %"class.WTF::HashTable.810", %"class.blink::Member.812", %"class.blink::Member.812", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.810" = type <{ %"class.blink::Member.812"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::HeapListHashSetNode.814"* }
%"class.blink::HeapListHashSetNode.814" = type { %"class.blink::Member.817", %"class.blink::Member.812", %"class.blink::Member.812" }
%class.scoped_refptr.816 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.833" }
%"class.blink::Member.833" = type { %"class.blink::MemberBase.834" }
%"class.blink::MemberBase.834" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2817" }
%"class.mojo::Remote.2817" = type { %"class.mojo::internal::InterfacePtrState.2818" }
%"class.mojo::internal::InterfacePtrState.2818" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2819" }
%"class.std::__1::unique_ptr.2819" = type { %"class.std::__1::__compressed_pair.2820" }
%"class.std::__1::__compressed_pair.2820" = type { %"struct.std::__1::__compressed_pair_elem.2821" }
%"struct.std::__1::__compressed_pair_elem.2821" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.838, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.838 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.839", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.839" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.847, i8, [7 x i8] }>
%class.scoped_refptr.847 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.848", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.848" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.849" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.856" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.863" = type { %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.869" }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2827" }
%"class.mojo::AssociatedRemote.2827" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2828" }
%"class.mojo::internal::AssociatedInterfacePtrState.2828" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2829" }
%"class.std::__1::unique_ptr.2829" = type { %"class.std::__1::__compressed_pair.2830" }
%"class.std::__1::__compressed_pair.2830" = type { %"struct.std::__1::__compressed_pair_elem.2831" }
%"struct.std::__1::__compressed_pair_elem.2831" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.871" = type { %"class.blink::Member.872" }
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2837" }
%"class.mojo::AssociatedRemote.2837" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2838" }
%"class.mojo::internal::AssociatedInterfacePtrState.2838" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2839" }
%"class.std::__1::unique_ptr.2839" = type { %"class.std::__1::__compressed_pair.2840" }
%"class.std::__1::__compressed_pair.2840" = type { %"struct.std::__1::__compressed_pair_elem.2841" }
%"struct.std::__1::__compressed_pair_elem.2841" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.874" }
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2847", %"class.blink::Member.527", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2847" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2848" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.465" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2848" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.876" = type { %"class.blink::Member.877" }
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2851", %"class.blink::Member.527", %"class.mojo::AssociatedReceiver.2852" }
%"class.blink::ThreadState::PrefinalizerRegistration.2851" = type { i8 }
%"class.mojo::AssociatedReceiver.2852" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2853" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2853" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.879" }
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2856", %"class.blink::Member.527", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2856" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.354, %"class.std::__1::unique_ptr.465", %"class.base::WeakPtrFactory.2857" }
%"class.base::WeakPtrFactory.2857" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.881" = type { %"class.blink::Member.882" }
%"class.blink::Member.882" = type { %"class.blink::MemberBase.883" }
%"class.blink::MemberBase.883" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2860", %"class.blink::Member.527", %"class.mojo::AssociatedReceiver.2861" }
%"class.blink::ThreadState::PrefinalizerRegistration.2860" = type { i8 }
%"class.mojo::AssociatedReceiver.2861" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2862" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2862" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::HeapHashMap.892"* }
%"class.blink::HeapHashMap.892" = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.893" }
%"class.std::__1::unique_ptr.893" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.896" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.896" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.902" = type { %"class.absl::optional_internal::optional_data.903" }
%"class.absl::optional_internal::optional_data.903" = type { %"class.absl::optional_internal::optional_data_base.904" }
%"class.absl::optional_internal::optional_data_base.904" = type { %"class.absl::optional_internal::optional_data_dtor_base.905" }
%"class.absl::optional_internal::optional_data_dtor_base.905" = type { i8, %union.anon.906 }
%union.anon.906 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.19", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::pair" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::pair"* }
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.531" = type { %"class.absl::optional_internal::optional_data.532" }
%"class.absl::optional_internal::optional_data.532" = type { %"class.absl::optional_internal::optional_data_base.533" }
%"class.absl::optional_internal::optional_data_base.533" = type { %"class.absl::optional_internal::optional_data_dtor_base.534" }
%"class.absl::optional_internal::optional_data_dtor_base.534" = type { i8, %union.anon.535 }
%union.anon.535 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.536" = type { %"class.absl::optional_internal::optional_data.537" }
%"class.absl::optional_internal::optional_data.537" = type { %"class.absl::optional_internal::optional_data_base.538" }
%"class.absl::optional_internal::optional_data_base.538" = type { %"class.absl::optional_internal::optional_data_dtor_base.539" }
%"class.absl::optional_internal::optional_data_dtor_base.539" = type { i8, %union.anon.540 }
%union.anon.540 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.286 }
%class.scoped_refptr.286 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.543" }
%"class.WTF::HashTable.543" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.32" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.23", i8, i8, [6 x i8] }>
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::KURL"* }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.53", %"class.blink::Member.55", %"class.blink::Member.55", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.280", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.59", float, i8, %class.scoped_refptr.61, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.61 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.67, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.265" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.289" }
%"class.WTF::Vector.289" = type { %"class.WTF::VectorBuffer.290" }
%"class.WTF::VectorBuffer.290" = type { %"class.WTF::VectorBufferBase.291" }
%"class.WTF::VectorBufferBase.291" = type { %"class.blink::Member.292"*, i32, i32 }
%"class.blink::Member.292" = type opaque
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Object"* }
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::WebPluginContainerImpl"* }
%"class.blink::WebPluginContainerImpl" = type <{ %"class.blink::EmbeddedContentView.base", [5 x i8], %"class.blink::WebPluginContainer", %"class.blink::ThreadState::PrefinalizerRegistration.298", [7 x i8], %"class.blink::Member.299", %"class.blink::Member.301", %"class.blink::WebPlugin"*, %"class.cc::Layer"*, i32, i8, [3 x i8] }>
%"class.blink::WebPluginContainer" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.298" = type { i8 }
%"class.blink::Member.299" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::HTMLPlugInElement"* }
%"class.blink::HTMLPlugInElement" = type <{ %"class.blink::HTMLFrameOwnerElement.base", [6 x i8], %"class.blink::ActiveScriptWrappable", %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.blink::Member.49", i8, [7 x i8], %"class.v8::Global", i8, i8, [6 x i8], %"class.blink::Member.294", i8, [7 x i8] }>
%"class.blink::Member.301" = type { %"class.blink::MemberBase.302" }
%"class.blink::MemberBase.302" = type { %"class.blink::WebPluginContainerImpl::MouseLockLostListener"* }
%"class.blink::WebPluginContainerImpl::MouseLockLostListener" = type opaque
%"class.blink::WebPlugin" = type opaque
%"class.cc::Layer" = type opaque
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.303", %"class.blink::Member.305", %"class.blink::Member.307", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1944", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1922", %"class.WTF::Vector.1922", i8, i32, %"class.blink::Member.1952", %"class.blink::Member.1954", %"class.blink::Member.1956", %"class.blink::Member.1958", %"class.blink::Member.1960", %"class.blink::Member.1962", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1964", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1970", %"class.blink::Member.1972", %"class.blink::Member.1173", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1974", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1995", %"class.blink::HeapVector.1149", %"class.blink::Member.53", %"class.blink::Member.1997", %"class.blink::Member.53", %"class.blink::Member.53", %"class.blink::Member.53", %"class.blink::UserActionElementSet", %"class.blink::Member.2006", double, double, i64, i64, %"class.blink::HeapHashSet.2008", %"class.blink::HeapHashSet.2015", i16, i8, %"class.blink::Member.2022", %"class.blink::Member.2024", %"class.blink::Member.2026", %"class.blink::Member.2028", %"class.blink::TextLinkColors", %"class.blink::Member.2030", i8, [7 x i8], %"class.blink::HeapHashMap.2032", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.53", %"class.WTF::Vector.2039", %"class.blink::Member.2044", %"class.blink::Member.2046", i8, %"class.blink::Member.53", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.2048", %"class.blink::HeapVector.2050", %"class.std::__1::unique_ptr.2058", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2064", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.2077", %"class.WTF::Vector.2079", i8, i8, %"class.std::__1::unique_ptr.2084", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1149", %"class.blink::HeapVector.2090", i32, i8, %"class.blink::HeapTaskRunnerTimer.1995", %"class.blink::HeapTaskRunnerTimer.1995", %"class.blink::DocumentTiming", %"class.blink::Member.2098", i8, i32, %"class.blink::Member.2100", %"class.blink::Member.2102", %"class.blink::Member.2104", %"class.blink::HeapTaskRunnerTimer.1995", %"class.blink::Member.2106", %"class.WTF::HashMap.2108", %"class.blink::Member.2113", %"class.blink::Member.2115", %"class.blink::Member.2117", %"class.blink::Member.2119", %"class.blink::Member.1132", %"class.blink::Member.1132", %"class.blink::HeapTaskRunnerTimer.1995", %"class.blink::HeapHashSet.2121", i8, i32, %"class.blink::Member.2128", %"class.blink::Member.2130", i32, %"class.blink::Member.2132", %"class.blink::Member.2134", %"class.blink::Member.2136", %"class.std::__1::unique_ptr.2138", i64, %"class.std::__1::unique_ptr.2144", i32, i32, %"class.blink::Member.2155", %"class.blink::Member.2157", %"class.blink::Member.2159", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.2161", %"class.WTF::Vector.2163", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.2168", %"class.blink::Member.2175", %"class.std::__1::unique_ptr.2177", %"class.blink::Member.2183", i8, i8, %"class.WTF::String", %"class.blink::Member.2185", i8, [7 x i8], %"class.blink::HeapHashMap.2187", %"class.blink::HeapObserverSet", %"class.blink::Member.2201", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.2203", i32, i8, i8, %"class.blink::WeakMember.2205", %"class.blink::Member.2206" }
%"class.blink::Supplementable.1944" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1945" }
%"class.blink::HeapHashMap.1945" = type { %"class.WTF::HashMap.1948" }
%"class.WTF::HashMap.1948" = type { %"class.WTF::HashTable.1949" }
%"class.WTF::HashTable.1949" = type <{ %"struct.WTF::KeyValuePair.1951"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1951" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1952" = type { %"class.blink::MemberBase.1953" }
%"class.blink::MemberBase.1953" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1954" = type { %"class.blink::MemberBase.1955" }
%"class.blink::MemberBase.1955" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.2219", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.2294", i32, i8, [3 x i8], %"class.blink::HeapVector.2296", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.2304", %"class.blink::Member.2306", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.2315", %"class.blink::Member.2371", %"class.blink::Member.2373", i8, [7 x i8] }>
%"class.blink::Supplementable.2219" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2220" }
%"class.blink::HeapHashMap.2220" = type { %"class.WTF::HashMap.2223" }
%"class.WTF::HashMap.2223" = type { %"class.WTF::HashTable.2224" }
%"class.WTF::HashTable.2224" = type <{ %"struct.WTF::KeyValuePair.2226"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2226" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.2235" }
%"class.blink::Supplementable.2235" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2236" }
%"class.blink::HeapHashMap.2236" = type { %"class.WTF::HashMap.2239" }
%"class.WTF::HashMap.2239" = type { %"class.WTF::HashTable.2240" }
%"class.WTF::HashTable.2240" = type <{ %"struct.WTF::KeyValuePair.2242"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2242" = type { i8*, %"class.blink::Member.2798" }
%"class.blink::Member.2798" = type { %"class.blink::MemberBase.2799" }
%"class.blink::MemberBase.2799" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2800" }
%"class.blink::Member.2800" = type { %"class.blink::MemberBase.2801" }
%"class.blink::MemberBase.2801" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.2243, %"class.std::__1::unique_ptr.2247", %"class.std::__1::unique_ptr.2247", %"class.std::__1::unique_ptr.2274", %"class.std::__1::unique_ptr.2274", %"class.blink::Member.1954", i32, [4 x i8], %"class.WTF::HashSet.2290", i32, i32 }
%"class.std::__1::unique_ptr.2247" = type { %"class.std::__1::__compressed_pair.2248" }
%"class.std::__1::__compressed_pair.2248" = type { %"struct.std::__1::__compressed_pair_elem.2249" }
%"struct.std::__1::__compressed_pair_elem.2249" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.2250", %"class.std::__1::map.2261", %"class.std::__1::map.2270"* }
%"class.std::__1::map.2250" = type { %"class.std::__1::__tree.2251" }
%"class.std::__1::__tree.2251" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2252", %"class.std::__1::__compressed_pair.2256" }
%"class.std::__1::__compressed_pair.2252" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"class.std::__1::__compressed_pair.2256" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.std::__1::map.2261" = type { %"class.std::__1::__tree.2262" }
%"class.std::__1::__tree.2262" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2263", %"class.std::__1::__compressed_pair.2267" }
%"class.std::__1::__compressed_pair.2263" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"class.std::__1::__compressed_pair.2267" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"class.std::__1::map.2270" = type opaque
%"class.std::__1::unique_ptr.2274" = type { %"class.std::__1::__compressed_pair.2275" }
%"class.std::__1::__compressed_pair.2275" = type { %"struct.std::__1::__compressed_pair_elem.2276" }
%"struct.std::__1::__compressed_pair_elem.2276" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map.2277" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.WTF::HashSet.2290" = type { %"class.WTF::HashTable.2291" }
%"class.WTF::HashTable.2291" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2294" = type { %"class.blink::MemberBase.2295" }
%"class.blink::MemberBase.2295" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.2296" = type { %"class.WTF::Vector.2299" }
%"class.WTF::Vector.2299" = type { %"class.WTF::VectorBuffer.2300" }
%"class.WTF::VectorBuffer.2300" = type { %"class.WTF::VectorBufferBase.2301" }
%"class.WTF::VectorBufferBase.2301" = type { %"class.blink::Member.2302"*, i32, i32 }
%"class.blink::Member.2302" = type opaque
%"class.blink::Member.2304" = type { %"class.blink::MemberBase.2305" }
%"class.blink::MemberBase.2305" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.2306" = type { %"class.blink::MemberBase.2307" }
%"class.blink::MemberBase.2307" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.2308", i32, i32 }
%"class.blink::HeapHashMap.2308" = type { %"class.WTF::HashMap.2311" }
%"class.WTF::HashMap.2311" = type { %"class.WTF::HashTable.2312" }
%"class.WTF::HashTable.2312" = type <{ %"struct.WTF::KeyValuePair.2314"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2314" = type opaque
%"class.blink::Member.2371" = type { %"class.blink::MemberBase.2372" }
%"class.blink::MemberBase.2372" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.2373" = type { %"class.blink::MemberBase.2374" }
%"class.blink::MemberBase.2374" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1956" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1960" = type { %"class.blink::MemberBase.1961" }
%"class.blink::MemberBase.1961" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1962" = type { %"class.blink::MemberBase.1963" }
%"class.blink::MemberBase.1963" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1964" = type { %"class.std::__1::__compressed_pair.1965" }
%"class.std::__1::__compressed_pair.1965" = type { %"struct.std::__1::__compressed_pair_elem.1966" }
%"struct.std::__1::__compressed_pair_elem.1966" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1970" = type { %"class.blink::MemberBase.1971" }
%"class.blink::MemberBase.1971" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1972" = type { %"class.blink::MemberBase.1973" }
%"class.blink::MemberBase.1973" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1974" = type { %"class.WTF::VectorBuffer.1975" }
%"class.WTF::VectorBuffer.1975" = type { %"class.WTF::VectorBufferBase.1976" }
%"class.WTF::VectorBufferBase.1976" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1977 }
%class.scoped_refptr.1977 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1999" }
%"class.blink::HeapHashMap.1999" = type { %"class.WTF::HashMap.2002" }
%"class.WTF::HashMap.2002" = type { %"class.WTF::HashTable.2003" }
%"class.WTF::HashTable.2003" = type <{ %"struct.WTF::KeyValuePair.2005"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2005" = type opaque
%"class.blink::Member.2006" = type { %"class.blink::MemberBase.2007" }
%"class.blink::MemberBase.2007" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.2008" = type { %"class.WTF::HashSet.2011" }
%"class.WTF::HashSet.2011" = type { %"class.WTF::HashTable.2012" }
%"class.WTF::HashTable.2012" = type <{ %"class.blink::WeakMember.2014"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2014" = type opaque
%"class.blink::HeapHashSet.2015" = type { %"class.WTF::HashSet.2018" }
%"class.WTF::HashSet.2018" = type { %"class.WTF::HashTable.2019" }
%"class.WTF::HashTable.2019" = type <{ %"class.blink::WeakMember.2021"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2021" = type opaque
%"class.blink::Member.2022" = type { %"class.blink::MemberBase.2023" }
%"class.blink::MemberBase.2023" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.2024" = type { %"class.blink::MemberBase.2025" }
%"class.blink::MemberBase.2025" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.2026" = type { %"class.blink::MemberBase.2027" }
%"class.blink::MemberBase.2027" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.1167" }
%"class.blink::Member.2028" = type { %"class.blink::MemberBase.2029" }
%"class.blink::MemberBase.2029" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.2030" = type { %"class.blink::MemberBase.2031" }
%"class.blink::MemberBase.2031" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.2032" = type { %"class.WTF::HashMap.2035" }
%"class.WTF::HashMap.2035" = type { %"class.WTF::HashTable.2036" }
%"class.WTF::HashTable.2036" = type <{ %"struct.WTF::KeyValuePair.2038"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2038" = type opaque
%"class.WTF::Vector.2039" = type { %"class.WTF::VectorBuffer.2040" }
%"class.WTF::VectorBuffer.2040" = type { %"class.WTF::VectorBufferBase.2041" }
%"class.WTF::VectorBufferBase.2041" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.2044" = type { %"class.blink::MemberBase.2045" }
%"class.blink::MemberBase.2045" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.2046" = type { %"class.blink::MemberBase.2047" }
%"class.blink::MemberBase.2047" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.2050" = type { %"class.WTF::Vector.2053" }
%"class.WTF::Vector.2053" = type { %"class.WTF::VectorBuffer.2054" }
%"class.WTF::VectorBuffer.2054" = type { %"class.WTF::VectorBufferBase.2055" }
%"class.WTF::VectorBufferBase.2055" = type { %"class.blink::Member.2056"*, i32, i32 }
%"class.blink::Member.2056" = type opaque
%"class.std::__1::unique_ptr.2058" = type { %"class.std::__1::__compressed_pair.2059" }
%"class.std::__1::__compressed_pair.2059" = type { %"struct.std::__1::__compressed_pair_elem.2060" }
%"struct.std::__1::__compressed_pair_elem.2060" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.2064" = type { %"class.WTF::HashSet.2067" }
%"class.WTF::HashSet.2067" = type { %"class.WTF::HashTable.2068" }
%"class.WTF::HashTable.2068" = type <{ %"class.blink::WeakMember.2070"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2070" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.2071", i32, [4 x i8] }>
%"class.WTF::Vector.2071" = type { %"class.WTF::VectorBuffer.2072" }
%"class.WTF::VectorBuffer.2072" = type { %"class.WTF::VectorBufferBase.2073" }
%"class.WTF::VectorBufferBase.2073" = type { %"struct.std::__1::pair.2074"*, i32, i32 }
%"struct.std::__1::pair.2074" = type opaque
%"class.blink::Member.2077" = type { %"class.blink::MemberBase.2078" }
%"class.blink::MemberBase.2078" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.2079" = type { %"class.WTF::VectorBuffer.2080" }
%"class.WTF::VectorBuffer.2080" = type { %"class.WTF::VectorBufferBase.2081" }
%"class.WTF::VectorBufferBase.2081" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2084" = type { %"class.std::__1::__compressed_pair.2085" }
%"class.std::__1::__compressed_pair.2085" = type { %"struct.std::__1::__compressed_pair_elem.2086" }
%"struct.std::__1::__compressed_pair_elem.2086" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.2090" = type { %"class.WTF::Vector.2093" }
%"class.WTF::Vector.2093" = type { %"class.WTF::VectorBuffer.2094" }
%"class.WTF::VectorBuffer.2094" = type { %"class.WTF::VectorBufferBase.2095" }
%"class.WTF::VectorBufferBase.2095" = type { %"class.blink::Member.2096"*, i32, i32 }
%"class.blink::Member.2096" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1132" }
%"class.blink::Member.2098" = type { %"class.blink::MemberBase.2099" }
%"class.blink::MemberBase.2099" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.2100" = type { %"class.blink::MemberBase.2101" }
%"class.blink::MemberBase.2101" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.2102" = type { %"class.blink::MemberBase.2103" }
%"class.blink::MemberBase.2103" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.2104" = type { %"class.blink::MemberBase.2105" }
%"class.blink::MemberBase.2105" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.2106" = type { %"class.blink::MemberBase.2107" }
%"class.blink::MemberBase.2107" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.2108" = type { %"class.WTF::HashTable.2109" }
%"class.WTF::HashTable.2109" = type <{ %"struct.WTF::KeyValuePair.2112"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2112" = type opaque
%"class.blink::Member.2113" = type { %"class.blink::MemberBase.2114" }
%"class.blink::MemberBase.2114" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.2115" = type { %"class.blink::MemberBase.2116" }
%"class.blink::MemberBase.2116" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.2119" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1995" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1996", { i64, i64 } }
%"class.blink::WeakMember.1996" = type { %"class.blink::MemberBase.1133" }
%"class.blink::HeapHashSet.2121" = type { %"class.WTF::HashSet.2124" }
%"class.WTF::HashSet.2124" = type { %"class.WTF::HashTable.2125" }
%"class.WTF::HashTable.2125" = type <{ %"class.blink::Member.2127"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2127" = type opaque
%"class.blink::Member.2128" = type { %"class.blink::MemberBase.2129" }
%"class.blink::MemberBase.2129" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.2130" = type { %"class.blink::MemberBase.2131" }
%"class.blink::MemberBase.2131" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.2132" = type { %"class.blink::MemberBase.2133" }
%"class.blink::MemberBase.2133" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.2134" = type { %"class.blink::MemberBase.2135" }
%"class.blink::MemberBase.2135" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.2136" = type { %"class.blink::MemberBase.2137" }
%"class.blink::MemberBase.2137" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.2138" = type { %"class.std::__1::__compressed_pair.2139" }
%"class.std::__1::__compressed_pair.2139" = type { %"struct.std::__1::__compressed_pair_elem.2140" }
%"struct.std::__1::__compressed_pair_elem.2140" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.2144" = type { %"class.std::__1::__compressed_pair.2145" }
%"class.std::__1::__compressed_pair.2145" = type { %"struct.std::__1::__compressed_pair_elem.2146" }
%"struct.std::__1::__compressed_pair_elem.2146" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1194", %"class.WTF::HashSet.1194", %"class.WTF::HashSet.1194", %"class.WTF::HashSet.1194", %"class.WTF::HashSet.1194", %"class.WTF::HashSet.1194", i32, [4 x i8], %"class.WTF::HashMap.2147", %"class.WTF::HashMap.2147", %"class.WTF::HashMap.2147", %"class.WTF::HashMap.2147", %"class.WTF::HashMap.2147", %"class.WTF::HashMap.2147", %"class.WTF::HashMap.2147", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.2147" = type { %"class.WTF::HashTable.2148" }
%"class.WTF::HashTable.2148" = type <{ %"struct.WTF::KeyValuePair.2151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2151" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.2155" = type { %"class.blink::MemberBase.2156" }
%"class.blink::MemberBase.2156" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.2157" = type { %"class.blink::MemberBase.2158" }
%"class.blink::MemberBase.2158" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.2159" = type { %"class.blink::MemberBase.2160" }
%"class.blink::MemberBase.2160" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.2161" = type { %"class.blink::MemberBase.2162" }
%"class.blink::MemberBase.2162" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.2163" = type { %"class.WTF::VectorBuffer.2164" }
%"class.WTF::VectorBuffer.2164" = type { %"class.WTF::VectorBufferBase.2165" }
%"class.WTF::VectorBufferBase.2165" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.2168" = type { %"class.WTF::HashMap.2171" }
%"class.WTF::HashMap.2171" = type { %"class.WTF::HashTable.2172" }
%"class.WTF::HashTable.2172" = type <{ %"struct.WTF::KeyValuePair.2174"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2174" = type opaque
%"class.blink::Member.2175" = type { %"class.blink::MemberBase.2176" }
%"class.blink::MemberBase.2176" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.2177" = type { %"class.std::__1::__compressed_pair.2178" }
%"class.std::__1::__compressed_pair.2178" = type { %"struct.std::__1::__compressed_pair_elem.2179" }
%"struct.std::__1::__compressed_pair_elem.2179" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.2183" = type { %"class.blink::MemberBase.2184" }
%"class.blink::MemberBase.2184" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.2185" = type { %"class.blink::MemberBase.2186" }
%"class.blink::MemberBase.2186" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.2187" = type { %"class.WTF::HashMap.2190" }
%"class.WTF::HashMap.2190" = type { %"class.WTF::HashTable.2191" }
%"class.WTF::HashTable.2191" = type <{ %"struct.WTF::KeyValuePair.2193"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2193" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2194" }
%"class.blink::HeapHashSet.2194" = type { %"class.WTF::HashSet.2197" }
%"class.WTF::HashSet.2197" = type { %"class.WTF::HashTable.2198" }
%"class.WTF::HashTable.2198" = type <{ %"class.blink::WeakMember.2200"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2200" = type opaque
%"class.blink::Member.2201" = type { %"class.blink::MemberBase.2202" }
%"class.blink::MemberBase.2202" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.2203" = type { %"class.blink::MemberBase.2204" }
%"class.blink::MemberBase.2204" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1132", %"class.blink::HeapHashSet.2210", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.2217", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.2210" = type { %"class.WTF::HashSet.2213" }
%"class.WTF::HashSet.2213" = type { %"class.WTF::HashTable.2214" }
%"class.WTF::HashTable.2214" = type <{ %"class.blink::Member.2216"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2216" = type opaque
%"class.blink::HeapTaskRunnerTimer.2217" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2218", { i64, i64 } }
%"class.blink::WeakMember.2218" = type { %"class.blink::MemberBase.2204" }
%"class.blink::WeakMember.2205" = type { %"class.blink::MemberBase" }
%"class.blink::Member.2206" = type { %"class.blink::MemberBase.2207" }
%"class.blink::MemberBase.2207" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.303", %"class.blink::Member.305", %"class.blink::Member.307", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.2026", %"class.blink::Member.2689", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.2689" = type { %"class.blink::MemberBase.2690" }
%"class.blink::MemberBase.2690" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.WTF::HashMap.2691" = type { %"class.WTF::HashTable.2692" }
%"class.WTF::HashTable.2692" = type <{ %"struct.WTF::KeyValuePair.2695"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2695" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::LayoutEmbeddedContent" = type <{ %"class.blink::LayoutReplaced", i32, [4 x i8] }>
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.19", %"class.blink::Member.21", %"struct.blink::FramePolicy", %"class.blink::Member.44", i8, i8, [6 x i8] }>
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2910", %"class.blink::Member.2912", %"class.blink::Member.2914", %"class.blink::Member.2933", %"class.blink::Member.2935" }
%"class.blink::Member.2910" = type { %"class.blink::MemberBase.2911" }
%"class.blink::MemberBase.2911" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.986 }
%"class.blink::Member.2912" = type { %"class.blink::MemberBase.2913" }
%"class.blink::MemberBase.2913" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2914" = type { %"class.blink::MemberBase.2915" }
%"class.blink::MemberBase.2915" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2918", %"class.blink::HeapHashSet.2927" }
%"class.blink::HeapVector.2918" = type { %"class.WTF::Vector.2921" }
%"class.WTF::Vector.2921" = type { %"class.WTF::VectorBuffer.2922" }
%"class.WTF::VectorBuffer.2922" = type { %"class.WTF::VectorBufferBase.2923" }
%"class.WTF::VectorBufferBase.2923" = type { %"class.blink::Member.2924"*, i32, i32 }
%"class.blink::Member.2924" = type { %"class.blink::MemberBase.2925" }
%"class.blink::MemberBase.2925" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2927" = type { %"class.WTF::HashSet.2930" }
%"class.WTF::HashSet.2930" = type { %"class.WTF::HashTable.2931" }
%"class.WTF::HashTable.2931" = type <{ %"class.blink::Member.2924"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2933" = type { %"class.blink::MemberBase.2934" }
%"class.blink::MemberBase.2934" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2935" = type { %"class.blink::MemberBase.2936" }
%"class.blink::MemberBase.2936" = type { %"class.blink::HeapHashSet.2937"* }
%"class.blink::HeapHashSet.2937" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.2938" }
%"class.WTF::Vector.2938" = type { %"class.WTF::VectorBuffer.2939" }
%"class.WTF::VectorBuffer.2939" = type { %"class.WTF::VectorBufferBase.2940", [64 x i8] }
%"class.WTF::VectorBufferBase.2940" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::PluginParameters" = type { %"class.WTF::Vector.1400", %"class.WTF::Vector.1400" }
%"class.WTF::HashSet.2698" = type { %"class.WTF::HashTable.2699" }
%"class.WTF::HashTable.2699" = type <{ %"class.WTF::StringImpl"**, i32, i32, i32, [4 x i8] }>
%"class.blink::HTMLParamElement" = type { %"class.blink::HTMLElement" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.2702 }
%class.scoped_refptr.2702 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2703", %"class.WTF::String", %"class.std::__1::unique_ptr.2705" }
%"class.WTF::RefCounted.2703" = type { %"class.base::RefCounted.2704" }
%"class.base::RefCounted.2704" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2705" = type { %"class.std::__1::__compressed_pair.2706" }
%"class.std::__1::__compressed_pair.2706" = type { %"struct.std::__1::__compressed_pair_elem.2707" }
%"struct.std::__1::__compressed_pair_elem.2707" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2708", %"class.std::__1::unique_ptr.2719", %"class.WTF::Vector.2725", i8, i32 }
%"class.std::__1::unique_ptr.2708" = type { %"class.std::__1::__compressed_pair.2709" }
%"class.std::__1::__compressed_pair.2709" = type { %"struct.std::__1::__compressed_pair_elem.2710" }
%"struct.std::__1::__compressed_pair_elem.2710" = type { %"class.WTF::Vector.2711"* }
%"class.std::__1::unique_ptr.2719" = type { %"class.std::__1::__compressed_pair.2720" }
%"class.std::__1::__compressed_pair.2720" = type { %"struct.std::__1::__compressed_pair_elem.2721" }
%"struct.std::__1::__compressed_pair_elem.2721" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::HashCountedSet.2944" = type { %"class.WTF::HashMap.2945" }
%"class.WTF::HashMap.2945" = type { %"class.WTF::HashTable.2946" }
%"class.WTF::HashTable.2946" = type <{ %"struct.WTF::KeyValuePair.2949"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2949" = type <{ %"class.blink::UntracedMember", i32, [4 x i8] }>
%"class.blink::LocalFrameClient" = type { %"class.blink::FrameClient" }
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.2732", %"class.WTF::String"* }
%"class.blink::HeapVector.2732" = type { %"class.WTF::Vector.2735" }
%"class.WTF::Vector.2735" = type { %"class.WTF::VectorBuffer.2736" }
%"class.WTF::VectorBuffer.2736" = type { %"class.WTF::VectorBufferBase.2737" }
%"class.WTF::VectorBufferBase.2737" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2746, %"class.blink::Member.2747", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2751" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase.2745" }
%"class.v8::PersistentBase.2745" = type { %"class.v8::Context"* }
%class.scoped_refptr.2746 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2747" = type { %"class.blink::MemberBase.2748" }
%"class.blink::MemberBase.2748" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2749" }
%"class.blink::Persistent.2749" = type { %"class.blink::PersistentBase.2750" }
%"class.blink::PersistentBase.2750" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.1083" }
%"class.util::TokenType.2751" = type { %"class.base::StrongAlias.2752" }
%"class.base::StrongAlias.2752" = type { %"class.base::UnguessableToken" }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable.2753", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.2756", i8, i8, %class.scoped_refptr.1714, %"class.blink::MessagePortDescriptor" }
%"class.blink::ActiveScriptWrappable.2753" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.std::__1::unique_ptr.2756" = type { %"class.std::__1::__compressed_pair.2757" }
%"class.std::__1::__compressed_pair.2757" = type { %"struct.std::__1::__compressed_pair_elem.2758" }
%"struct.std::__1::__compressed_pair_elem.2758" = type { %"class.mojo::Connector"* }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.2767", %"class.blink::Member.2767", %"class.blink::Member.2769", %"class.blink::Member.2771", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.2762" }
%"class.absl::optional.2762" = type { %"class.absl::optional_internal::optional_data.2763" }
%"class.absl::optional_internal::optional_data.2763" = type { %"class.absl::optional_internal::optional_data_base.2764" }
%"class.absl::optional_internal::optional_data_base.2764" = type { %"class.absl::optional_internal::optional_data_dtor_base.2765" }
%"class.absl::optional_internal::optional_data_dtor_base.2765" = type { i8, %union.anon.2766 }
%union.anon.2766 = type { i64 }
%"class.blink::Member.2767" = type { %"class.blink::MemberBase.2768" }
%"class.blink::MemberBase.2768" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.2769" = type { %"class.blink::MemberBase.2770" }
%"class.blink::MemberBase.2770" = type { %"class.blink::Event"* }
%"class.blink::Member.2771" = type { %"class.blink::MemberBase.2772" }
%"class.blink::MemberBase.2772" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2775", i8, [7 x i8] }>
%"class.blink::Member.2775" = type { %"class.blink::MemberBase.2776" }
%"class.blink::MemberBase.2776" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2777" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2777" = type { %"class.v8::TracedReference.2778" }
%"class.v8::TracedReference.2778" = type { %"class.v8::BasicTracedReference.2779" }
%"class.v8::BasicTracedReference.2779" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::EventDispatchHandlingState" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.mojo::StructPtr.2780" = type { %"class.std::__1::unique_ptr.2781" }
%"class.std::__1::unique_ptr.2781" = type { %"class.std::__1::__compressed_pair.2782" }
%"class.std::__1::__compressed_pair.2782" = type { %"struct.std::__1::__compressed_pair_elem.2783" }
%"struct.std::__1::__compressed_pair_elem.2783" = type { %"class.network::mojom::blink::TrustTokenParams"* }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.2784", %"class.WTF::Vector.1400", %"class.WTF::String" }
%"class.WTF::Vector.2784" = type { %"class.WTF::VectorBuffer.2785" }
%"class.WTF::VectorBuffer.2785" = type { %"class.WTF::VectorBufferBase.2786" }
%"class.WTF::VectorBufferBase.2786" = type { %class.scoped_refptr.2246*, i32, i32 }
%"class.blink::FormData" = type opaque
%"class.blink::FormControlState" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringHasher" = type { i32, i8, i16 }

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK5blink21HTMLFrameOwnerElement12ContentFrameEv = comdat any

$_ZN5blink17HTMLObjectElementD2Ev = comdat any

$_ZN5blink17HTMLObjectElementD0Ev = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink17HTMLObjectElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink17HTMLObjectElement23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink17HTMLObjectElement20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink17HTMLPlugInElement13SupportsFocusEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink17HTMLObjectElement20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink17HTMLObjectElement16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink17HTMLObjectElement22ToFormAssociatedOrNullEv = comdat any

$_ZN5blink21HTMLFrameOwnerElement12SetCollapsedEb = comdat any

$_ZNK5blink17HTMLObjectElement9OwnerTypeEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement14GetFramePolicyEv = comdat any

$_ZN5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb = comdat any

$_ZNK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement13ScrollbarModeEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement11MarginWidthEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement12MarginHeightEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement15AllowFullscreenEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement29GetOriginForPermissionsPolicyEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement23ConstructRequiredPolicyEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement7IsLocalEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement8IsRemoteEv = comdat any

$_ZN5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb = comdat any

$_ZN5blink21HTMLFrameOwnerElement23ReferrerPolicyAttributeEv = comdat any

$_ZNK5blink17HTMLPlugInElement8IsPluginEv = comdat any

$_ZNK5blink17HTMLObjectElement14IsEnumeratableEv = comdat any

$_ZNK5blink17HTMLObjectElement17validationMessageEv = comdat any

$_ZN5blink17HTMLObjectElement17setCustomValidityERKN3WTF6StringE = comdat any

$_ZThn104_N5blink17HTMLObjectElementD1Ev = comdat any

$_ZThn104_N5blink17HTMLObjectElementD0Ev = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement7IsLocalEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement8IsRemoteEv = comdat any

$_ZThn104_NK5blink17HTMLPlugInElement8IsPluginEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement12ContentFrameEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement14GetFramePolicyEv = comdat any

$_ZThn104_N5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement13ScrollbarModeEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement11MarginWidthEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement12MarginHeightEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement15AllowFullscreenEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv = comdat any

$_ZN5blink10FrameOwner19CSPAttributeChangedEv = comdat any

$_ZThn104_N5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb = comdat any

$_ZThn208_N5blink17HTMLObjectElementD1Ev = comdat any

$_ZThn208_N5blink17HTMLObjectElementD0Ev = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_17HTMLPlugInElementEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_17HTMLPlugInElementEE26DispatchHasPendingActivityEv = comdat any

$_ZThn392_N5blink17HTMLObjectElementD1Ev = comdat any

$_ZThn392_N5blink17HTMLObjectElementD0Ev = comdat any

$_ZThn392_NK5blink17HTMLObjectElement20IsFormControlElementEv = comdat any

$_ZThn392_NK5blink17HTMLObjectElement14IsEnumeratableEv = comdat any

$_ZN5blink13ListedElement16AppendToFormDataERNS_8FormDataE = comdat any

$_ZThn392_NK5blink17HTMLObjectElement17validationMessageEv = comdat any

$_ZThn392_N5blink17HTMLObjectElement17setCustomValidityERKN3WTF6StringE = comdat any

$_ZN5blink13ListedElement27DisabledStateMightBeChangedEv = comdat any

$_ZNK3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11ImageLoaderEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11ImageLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11ImageLoaderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11ImageLoaderEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_S2_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_ = comdat any

$_ZN3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZNK3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EEbRKT0_ = comdat any

$_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names10kObjectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink17HTMLObjectElementE = hidden unnamed_addr constant { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] } { [211 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*)* @_ZN5blink17HTMLObjectElementD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*)* @_ZN5blink17HTMLObjectElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*, %"class.blink::Visitor"*)* @_ZNK5blink17HTMLObjectElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*)* @_ZN5blink17HTMLPlugInElement23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, i1, i32)* @_ZN5blink17HTMLPlugInElement10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink17HTMLPlugInElement16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, i1)* @_ZN5blink17HTMLPlugInElement16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLObjectElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink17HTMLObjectElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink17HTMLObjectElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZN5blink17HTMLPlugInElement29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, %"class.blink::Event"*)* @_ZN5blink17HTMLPlugInElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*, %"class.blink::Document"*)* @_ZN5blink17HTMLObjectElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink17HTMLObjectElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.2691"* (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLObjectElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink17HTMLObjectElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink17HTMLObjectElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink17HTMLObjectElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::HTMLObjectElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink17HTMLObjectElement21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::HTMLPlugInElement"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink17HTMLPlugInElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLObjectElement"*, %"class.blink::Attribute"*)* @_ZNK5blink17HTMLObjectElement14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*)* @_ZN5blink17HTMLPlugInElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink17HTMLPlugInElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*, %"class.blink::ShadowRoot"*)* @_ZN5blink17HTMLPlugInElement25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLObjectElement"*)* @_ZN5blink17HTMLObjectElement22ToFormAssociatedOrNullEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*)* @_ZN5blink17HTMLPlugInElement22DisconnectContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZN5blink21HTMLFrameOwnerElement12SetCollapsedEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement9OwnerTypeEv to i8*), i8* bitcast (%"class.blink::Frame"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement12ContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"*)* @_ZN5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement17ClearContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*)* @_ZN5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement12DispatchLoadEv to i8*), i8* bitcast (%"struct.blink::FramePolicy"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement14GetFramePolicyEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*)* @_ZN5blink17HTMLPlugInElement26IntrinsicSizingInfoChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZN5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement13ScrollbarModeEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement11MarginWidthEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement12MarginHeightEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement15AllowFullscreenEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement14GetColorSchemeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv to i8*), i8* bitcast (%"class.blink::SecurityOrigin"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement29GetOriginForPermissionsPolicyEv to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement24ConstructContainerPolicyEv to i8*), i8* bitcast (void (%"class.base::flat_map"*, %"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement23ConstructRequiredPolicyEv to i8*), i8* bitcast (void (%"class.mojo::StructPtr.2780"*, %"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement25ConstructTrustTokenParamsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement7IsLocalEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement8IsRemoteEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZN5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement23ReferrerPolicyAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement8IsPluginEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement18HasFallbackContentEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement18UseFallbackContentEv to i8*), i8* bitcast (%"class.blink::LayoutEmbeddedContent"* (%"class.blink::HTMLPlugInElement"*)* @_ZNK5blink17HTMLPlugInElement34LayoutEmbeddedContentForJSBindingsEv to i8*), i8* bitcast (%"class.blink::LayoutEmbeddedContent"* (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement29ExistingLayoutEmbeddedContentEv to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*)* @_ZN5blink17HTMLObjectElement20UpdatePluginInternalEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement14IsEnumeratableEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLObjectElement"*)* @_ZNK5blink17HTMLObjectElement17validationMessageEv to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*, %"class.WTF::String"*)* @_ZN5blink17HTMLObjectElement17setCustomValidityERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*, %"class.blink::HTMLFormElement"*)* @_ZN5blink17HTMLObjectElement13AssociateWithEPNS_15HTMLFormElementE to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [28 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLObjectElement"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink17HTMLObjectElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*)* @_ZThn104_N5blink17HTMLObjectElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*)* @_ZThn104_N5blink17HTMLObjectElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement7IsLocalEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement8IsRemoteEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLPlugInElement"*)* @_ZThn104_NK5blink17HTMLPlugInElement8IsPluginEv to i8*), i8* bitcast (%"class.blink::Frame"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement12ContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement17ClearContentFrameEv to i8*), i8* bitcast (%"struct.blink::FramePolicy"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetFramePolicyEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement12DispatchLoadEv to i8*), i8* bitcast (void (%"class.blink::HTMLPlugInElement"*)* @_ZThn104_N5blink17HTMLPlugInElement26IntrinsicSizingInfoChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZThn104_N5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement13ScrollbarModeEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement11MarginWidthEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement12MarginHeightEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement15AllowFullscreenEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetColorSchemeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv to i8*), i8* bitcast (void (%"class.blink::FrameOwner"*)* @_ZN5blink10FrameOwner19CSPAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZThn104_N5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb to i8*)], [7 x i8*] [i8* inttoptr (i64 -208 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLObjectElement"*, %"class.blink::Visitor"*)* @_ZThn208_NK5blink17HTMLObjectElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*)* @_ZThn208_N5blink17HTMLObjectElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*)* @_ZThn208_N5blink17HTMLObjectElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_17HTMLPlugInElementEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_17HTMLPlugInElementEE26DispatchHasPendingActivityEv to i8*)], [34 x i8*] [i8* inttoptr (i64 -392 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLObjectElement"*, %"class.blink::Visitor"*)* @_ZThn392_NK5blink17HTMLObjectElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*)* @_ZThn392_N5blink17HTMLObjectElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*)* @_ZThn392_N5blink17HTMLObjectElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLObjectElement"*)* @_ZThn392_NK5blink17HTMLObjectElement20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement29IsFormControlElementWithStateEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18IsElementInternalsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLObjectElement"*)* @_ZThn392_NK5blink17HTMLObjectElement14IsEnumeratableEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement7GetNameEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.blink::FormData"*)* @_ZN5blink13ListedElement16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement11CustomErrorEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement11HasBadInputEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement15PatternMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement13RangeOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement14RangeUnderflowEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12StepMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement7TooLongEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement8TooShortEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12ValueMissingEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLObjectElement"*)* @_ZThn392_NK5blink17HTMLObjectElement17validationMessageEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement20ValidationSubMessageEv to i8*), i8* bitcast (void (%"class.blink::HTMLObjectElement"*, %"class.WTF::String"*)* @_ZThn392_N5blink17HTMLObjectElement17setCustomValidityERKN3WTF6StringE to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement16ValidationAnchorEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (void ()* @_ZNK5blink13ListedElement20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)* @_ZN5blink13ListedElement23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement14WillChangeFormEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement13DidChangeFormEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18RecalcWillValidateEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -456 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLObjectElement"*, %"class.blink::HTMLFormElement"*)* @_ZThn456_N5blink17HTMLObjectElement13AssociateWithEPNS_15HTMLFormElementE to i8*)] }, align 8
@_ZZNK5blink17HTMLObjectElement24GetCheckedAttributeTypesEvE15s_attribute_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink17HTMLObjectElement24GetCheckedAttributeTypesEvE15s_attribute_map = internal global i64 0, align 8
@_ZN5blink10html_names11kBorderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kFormAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [2 x i8] c";\00", align 1
@_ZN5blink10html_names9kDataAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names12kClassidAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"java:\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1
@_ZN5blink10html_names13kCodebaseAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink19style_change_reason12kUseFallbackE = external constant [0 x i8], align 1
@_ZN5blink10html_names10kValueAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink17HTMLObjectElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.5 = private unnamed_addr constant [9 x i8] c"codebase\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.7 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink19SpecificTrustedTypeEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, blink::SpecificTrustedType>]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11ImageLoaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11ImageLoaderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11ImageLoaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink10html_names9kParamTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPNS_10StringImplEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::StringImpl *]\00", align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink10html_names9kEmbedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink17HTMLObjectElementC1ERNS_8DocumentENS_18CreateElementFlagsE = hidden unnamed_addr alias void (%"class.blink::HTMLObjectElement"*, %"class.blink::Document"*, %"class.blink::CreateElementFlags"*), void (%"class.blink::HTMLObjectElement"*, %"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blink17HTMLObjectElementC2ERNS_8DocumentENS_18CreateElementFlagsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLObjectElementC2ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLObjectElement"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* nocapture readonly byval(%"class.blink::CreateElementFlags") align 8) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE to %"class.blink::QualifiedName"**), align 8
  tail call void @_ZN5blink17HTMLPlugInElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLPlugInElement"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %5, %"class.blink::Document"* dereferenceable(2848) %1, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %2) #10
  %6 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 2
  %7 = bitcast %"class.blink::ListedElement.base"* %6 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementC2Ev(%"class.blink::ListedElement"* %7) #10
  %8 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 4, i32 0
  %9 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ListedElement.base", %"class.blink::ListedElement.base"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 6
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, -2
  store i8 %17, i8* %15, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = tail call dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"* %18) #10
  ret void
}

declare void @_ZN5blink17HTMLPlugInElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLPlugInElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8) unnamed_addr #1

declare void @_ZN5blink13ListedElementC2Ev(%"class.blink::ListedElement"*) unnamed_addr #1

declare dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17HTMLObjectElement5TraceEPNS_7VisitorE(%"class.blink::HTMLObjectElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::ListedElement.base"* %3 to %"class.blink::ListedElement"*
  tail call void @_ZNK5blink13ListedElement5TraceEPNS_7VisitorE(%"class.blink::ListedElement"* %4, %"class.blink::Visitor"* %1) #10
  %5 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZNK5blink17HTMLPlugInElement5TraceEPNS_7VisitorE(%"class.blink::HTMLPlugInElement"* %5, %"class.blink::Visitor"* %1) #10
  ret void
}

declare void @_ZNK5blink13ListedElement5TraceEPNS_7VisitorE(%"class.blink::ListedElement"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink17HTMLPlugInElement5TraceEPNS_7VisitorE(%"class.blink::HTMLPlugInElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink17HTMLObjectElement5TraceEPNS_7VisitorE(%"class.blink::HTMLObjectElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 -1, i32 0, i32 13
  %4 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %3, i64 49
  %5 = bitcast %"class.blink::Member.294"* %4 to %"class.blink::ListedElement"*
  tail call void @_ZNK5blink13ListedElement5TraceEPNS_7VisitorE(%"class.blink::ListedElement"* %5, %"class.blink::Visitor"* %1) #10
  %6 = bitcast %"class.blink::Member.294"* %3 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZNK5blink17HTMLPlugInElement5TraceEPNS_7VisitorE(%"class.blink::HTMLPlugInElement"* %6, %"class.blink::Visitor"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn208_NK5blink17HTMLObjectElement5TraceEPNS_7VisitorE(%"class.blink::HTMLObjectElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 -1, i32 0, i32 5, i32 3, i32 3
  %4 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 49
  %5 = bitcast %"struct.url::Component"* %4 to %"class.blink::ListedElement"*
  tail call void @_ZNK5blink13ListedElement5TraceEPNS_7VisitorE(%"class.blink::ListedElement"* %5, %"class.blink::Visitor"* %1) #10
  %6 = bitcast %"struct.url::Component"* %3 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZNK5blink17HTMLPlugInElement5TraceEPNS_7VisitorE(%"class.blink::HTMLPlugInElement"* %6, %"class.blink::Visitor"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn392_NK5blink17HTMLObjectElement5TraceEPNS_7VisitorE(%"class.blink::HTMLObjectElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 2
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 49
  %5 = bitcast %"class.blink::QualifiedName"* %4 to %"class.blink::ListedElement"*
  tail call void @_ZNK5blink13ListedElement5TraceEPNS_7VisitorE(%"class.blink::ListedElement"* %5, %"class.blink::Visitor"* %1) #10
  %6 = bitcast %"class.blink::QualifiedName"* %3 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZNK5blink17HTMLPlugInElement5TraceEPNS_7VisitorE(%"class.blink::HTMLPlugInElement"* %6, %"class.blink::Visitor"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.WTF::HashMap.2691"* @_ZNK5blink17HTMLObjectElement24GetCheckedAttributeTypesEv(%"class.blink::HTMLObjectElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca [2 x %"struct.WTF::KeyValuePair.2695"], align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink17HTMLObjectElement24GetCheckedAttributeTypesEvE15s_attribute_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %50, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink17HTMLObjectElement24GetCheckedAttributeTypesEvE15s_attribute_map) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %50, label %8

8:                                                ; preds = %5
  %9 = bitcast [2 x %"struct.WTF::KeyValuePair.2695"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = getelementptr inbounds [2 x %"struct.WTF::KeyValuePair.2695"], [2 x %"struct.WTF::KeyValuePair.2695"]* %2, i64 0, i64 0, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #10
  %11 = getelementptr inbounds [2 x %"struct.WTF::KeyValuePair.2695"], [2 x %"struct.WTF::KeyValuePair.2695"]* %2, i64 0, i64 0, i32 1
  store i32 3, i32* %11, align 8
  %12 = getelementptr inbounds [2 x %"struct.WTF::KeyValuePair.2695"], [2 x %"struct.WTF::KeyValuePair.2695"]* %2, i64 0, i64 1, i32 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i64 8) #10
  %13 = getelementptr inbounds [2 x %"struct.WTF::KeyValuePair.2695"], [2 x %"struct.WTF::KeyValuePair.2695"]* %2, i64 0, i64 1, i32 1
  store i32 3, i32* %13, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink17HTMLObjectElement24GetCheckedAttributeTypesEvE15s_attribute_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2692"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink17HTMLObjectElement24GetCheckedAttributeTypesEvE15s_attribute_map to %"class.WTF::HashTable.2692"*), i32 2) #10
  %14 = call { %"struct.WTF::KeyValuePair.2695"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.2692"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink17HTMLObjectElement24GetCheckedAttributeTypesEvE15s_attribute_map to %"class.WTF::HashTable.2692"*), %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, i32* dereferenceable(4) %11) #10
  %15 = call { %"struct.WTF::KeyValuePair.2695"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.2692"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink17HTMLObjectElement24GetCheckedAttributeTypesEvE15s_attribute_map to %"class.WTF::HashTable.2692"*), %"class.WTF::AtomicString"* dereferenceable(8) %12, i32* dereferenceable(4) %13) #10
  %16 = getelementptr inbounds [2 x %"struct.WTF::KeyValuePair.2695"], [2 x %"struct.WTF::KeyValuePair.2695"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #10
  br label %32

32:                                               ; preds = %31, %28, %8
  %33 = getelementptr inbounds [2 x %"struct.WTF::KeyValuePair.2695"], [2 x %"struct.WTF::KeyValuePair.2695"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #10
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink17HTMLObjectElement24GetCheckedAttributeTypesEvE15s_attribute_map) #10
  br label %50

50:                                               ; preds = %5, %49, %1
  ret %"class.WTF::HashMap.2691"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink17HTMLObjectElement24GetCheckedAttributeTypesEvE15s_attribute_map to %"class.WTF::HashMap.2691"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutEmbeddedContent"* @_ZNK5blink17HTMLObjectElement29ExistingLayoutEmbeddedContentEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  %3 = tail call %"class.blink::LayoutEmbeddedContent"* @_ZNK5blink21HTMLFrameOwnerElement24GetLayoutEmbeddedContentEv(%"class.blink::HTMLFrameOwnerElement"* %2) #10
  ret %"class.blink::LayoutEmbeddedContent"* %3
}

declare %"class.blink::LayoutEmbeddedContent"* @_ZNK5blink21HTMLFrameOwnerElement24GetLayoutEmbeddedContentEv(%"class.blink::HTMLFrameOwnerElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLObjectElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLObjectElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kBorderAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %11 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLPlugInElement"* %10, %"class.blink::QualifiedName"* dereferenceable(8) %1) #10
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i1 [ %11, %9 ], [ true, %2 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLPlugInElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLObjectElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLObjectElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kBorderAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement27ApplyBorderAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #10
  br label %15

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLPlugInElement"* %14, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #10
  br label %15

15:                                               ; preds = %13, %11
  ret void
}

declare void @_ZN5blink11HTMLElement27ApplyBorderAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #1

declare void @_ZN5blink17HTMLPlugInElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLPlugInElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLObjectElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLObjectElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFormAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %10
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 2
  %14 = bitcast %"class.blink::ListedElement.base"* %13 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement20FormAttributeChangedEv(%"class.blink::ListedElement"* %14) #10
  br label %301

15:                                               ; preds = %2
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %18
  br i1 %19, label %20, label %141

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %22 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %22, align 8
  %24 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %23) #10
  %25 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 3
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #10
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %42, %27, %20
  %45 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %46 = bitcast %"class.WTF::String"* %25 to i64*
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  store i64 %45, i64* %46, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #10
  br label %63

63:                                               ; preds = %44, %59, %62
  tail call void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"* %21) #10
  br i1 %26, label %77, label %64

64:                                               ; preds = %63
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %77

77:                                               ; preds = %63, %73, %76
  %78 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #10
  %79 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %80 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8** %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 1, i32* %82, align 8
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %85, label %86

85:                                               ; preds = %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #10
  br label %140

86:                                               ; preds = %77
  %87 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %83, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #10
  %88 = icmp eq i32 %87, -1
  br i1 %88, label %140, label %89

89:                                               ; preds = %86
  %90 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %25, i32 0, i32 %87) #10
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %109, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %109

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i33
  %101 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #10
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !3

106:                                              ; preds = %97
  call void @llvm.trap() #10
  unreachable

107:                                              ; preds = %97
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %98, align 4
  br label %109

109:                                              ; preds = %107, %92, %89
  %110 = ptrtoint %"class.WTF::StringImpl"* %90 to i64
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  store i64 %110, i64* %46, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #10
  br label %126

126:                                              ; preds = %109, %122, %125
  call void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"* %21) #10
  br i1 %91, label %140, label %127

127:                                              ; preds = %126
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #10
  br label %140

140:                                              ; preds = %139, %136, %126, %85, %86
  call void @_ZN5blink17HTMLObjectElement29ReloadPluginOnAttributeChangeERKNS_13QualifiedNameE(%"class.blink::HTMLObjectElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %5)
  br label %301

141:                                              ; preds = %15
  %142 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kDataAttrE, align 8
  %143 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %142, i64 0, i32 0, i32 0
  %144 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %143, align 8
  %145 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %144
  br i1 %145, label %146, label %250

146:                                              ; preds = %141
  %147 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %148 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %149 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %148, align 8
  %150 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %149, i64 0, i32 0
  %151 = tail call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %150) #10
  %152 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 4
  %153 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %153, label %171, label %154

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %171

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i33
  %163 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %162, i33 1) #10
  %164 = extractvalue { i33, i1 } %163, 1
  %165 = extractvalue { i33, i1 } %163, 0
  %166 = icmp slt i33 %165, 0
  %167 = or i1 %164, %166
  br i1 %167, label %168, label %169, !prof !3

168:                                              ; preds = %159
  tail call void @llvm.trap() #10
  unreachable

169:                                              ; preds = %159
  %170 = trunc i33 %165 to i32
  store i32 %170, i32* %160, align 4
  br label %171

171:                                              ; preds = %169, %154, %146
  %172 = ptrtoint %"class.WTF::StringImpl"* %151 to i64
  %173 = bitcast %"class.WTF::String"* %152 to i64*
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %152, i64 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  store i64 %172, i64* %173, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #10
  br label %190

190:                                              ; preds = %171, %186, %189
  tail call void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"* %147) #10
  br i1 %153, label %204, label %191

191:                                              ; preds = %190
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #10
  br label %204

204:                                              ; preds = %190, %200, %203
  %205 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %206 = load i32, i32* %205, align 8
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %208, label %214, label %210

210:                                              ; preds = %204
  %211 = bitcast %"class.blink::NodeData"** %209 to %"class.blink::NodeRareData"**
  %212 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %211, align 8
  %213 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %212, i64 0, i32 1, i32 0, i32 0
  br label %216

214:                                              ; preds = %204
  %215 = bitcast %"class.blink::NodeData"** %209 to %"class.blink::NodeRenderingData"**
  br label %216

216:                                              ; preds = %210, %214
  %217 = phi %"class.blink::NodeRenderingData"** [ %213, %210 ], [ %215, %214 ]
  %218 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %218, i64 0, i32 1
  %220 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %219, align 8
  %221 = icmp eq %"class.blink::LayoutObject"* %220, null
  br i1 %221, label %249, label %222

222:                                              ; preds = %216
  %223 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement11IsImageTypeEv(%"class.blink::HTMLPlugInElement"* %147) #10
  br i1 %223, label %224, label %249

224:                                              ; preds = %222
  %225 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 10
  store i8 1, i8* %225, align 8
  %226 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 6
  %227 = getelementptr inbounds %"class.blink::Member.49", %"class.blink::Member.49"* %226, i64 0, i32 0, i32 0
  %228 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %227, align 8
  %229 = icmp eq %"class.blink::HTMLImageLoader"* %228, null
  br i1 %229, label %230, label %246

230:                                              ; preds = %224
  %231 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11ImageLoaderEEEPhm(i64 136) #10
  %232 = bitcast i8* %231 to %"class.blink::HTMLImageLoader"*
  %233 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink15HTMLImageLoaderC1EPNS_7ElementE(%"class.blink::HTMLImageLoader"* %232, %"class.blink::Element"* %233) #10
  %234 = getelementptr inbounds i8, i8* %231, i64 -4
  %235 = bitcast i8* %234 to i16*
  %236 = load atomic i16, i16* %235 monotonic, align 2
  %237 = or i16 %236, 1
  store atomic i16 %237, i16* %235 release, align 2
  %238 = ptrtoint i8* %231 to i64
  %239 = bitcast %"class.blink::Member.49"* %226 to i64*
  store atomic i64 %238, i64* %239 monotonic, align 8
  %240 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %241 = icmp eq i32 %240, 0
  %242 = bitcast i8* %231 to %"class.blink::HTMLImageLoader"*
  br i1 %241, label %246, label %243

243:                                              ; preds = %230
  %244 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %231) #10
  %245 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %227, align 8
  br label %246

246:                                              ; preds = %224, %243, %230
  %247 = phi %"class.blink::HTMLImageLoader"* [ %228, %224 ], [ %245, %243 ], [ %242, %230 ]
  %248 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %247, i64 0, i32 0
  tail call void @_ZN5blink11ImageLoader17UpdateFromElementENS0_25UpdateFromElementBehaviorEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"* %248, i32 1, i32 1) #10
  br label %301

249:                                              ; preds = %216, %222
  tail call void @_ZN5blink17HTMLObjectElement29ReloadPluginOnAttributeChangeERKNS_13QualifiedNameE(%"class.blink::HTMLObjectElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %5)
  br label %301

250:                                              ; preds = %141
  %251 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kClassidAttrE, align 8
  %252 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %251, i64 0, i32 0, i32 0
  %253 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %252, align 8
  %254 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %253
  br i1 %254, label %255, label %299

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %257 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 5
  %259 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %257, i64 0, i32 0, i32 0, i32 0
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %279, label %262

262:                                              ; preds = %255
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %279

267:                                              ; preds = %262
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = zext i32 %269 to i33
  %271 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %270, i33 1) #10
  %272 = extractvalue { i33, i1 } %271, 1
  %273 = extractvalue { i33, i1 } %271, 0
  %274 = icmp slt i33 %273, 0
  %275 = or i1 %272, %274
  br i1 %275, label %276, label %277, !prof !3

276:                                              ; preds = %267
  tail call void @llvm.trap() #10
  unreachable

277:                                              ; preds = %267
  %278 = trunc i33 %273 to i32
  store i32 %278, i32* %268, align 4
  br label %279

279:                                              ; preds = %277, %262, %255
  %280 = ptrtoint %"class.WTF::StringImpl"* %260 to i64
  %281 = bitcast %"class.WTF::String"* %258 to i64*
  %282 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %258, i64 0, i32 0, i32 0
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %282, align 8
  store i64 %280, i64* %281, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %283, null
  br i1 %284, label %298, label %285

285:                                              ; preds = %279
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  br i1 %289, label %292, label %294

292:                                              ; preds = %285
  %293 = add i32 %291, -1
  store i32 %293, i32* %290, align 4
  br label %294

294:                                              ; preds = %292, %285
  %295 = phi i32 [ %293, %292 ], [ %291, %285 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %283) #10
  br label %298

298:                                              ; preds = %279, %294, %297
  tail call void @_ZN5blink17HTMLObjectElement29ReloadPluginOnAttributeChangeERKNS_13QualifiedNameE(%"class.blink::HTMLObjectElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %5)
  br label %301

299:                                              ; preds = %250
  %300 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink21HTMLFrameOwnerElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFrameOwnerElement"* %300, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #10
  br label %301

301:                                              ; preds = %140, %298, %299, %246, %249, %12
  ret void
}

declare void @_ZN5blink13ListedElement20FormAttributeChangedEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLObjectElement29ReloadPluginOnAttributeChangeERKNS_13QualifiedNameE(%"class.blink::HTMLObjectElement"*, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %9, label %118

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kClassidAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %13 = icmp eq %"class.blink::ElementData"* %12, null
  br i1 %13, label %111, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::ElementData"* %12 to %"class.blink::UniqueElementData"*
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1, i32 1
  %22 = bitcast %"class.blink::Member.14"* %21 to %"class.blink::Attribute"**
  %23 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %20, i64 0, i32 2, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  br label %31

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1
  %28 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::Attribute"*
  %29 = lshr i32 %16, 1
  %30 = and i32 %29, 268435455
  br label %31

31:                                               ; preds = %26, %19
  %32 = phi %"class.blink::Attribute"* [ %28, %26 ], [ %23, %19 ]
  %33 = phi i32 [ %30, %26 ], [ %25, %19 ]
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %66, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %58, %37
  %43 = phi %"class.blink::Attribute"* [ %32, %37 ], [ %59, %58 ]
  %44 = phi i32 [ 0, %37 ], [ %60, %58 ]
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %46, %39
  br i1 %47, label %62, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, %51
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %55, %56
  br i1 %57, label %62, label %58

58:                                               ; preds = %53, %48
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 1
  %60 = add i32 %44, 1
  %61 = icmp eq %"class.blink::Attribute"* %59, %35
  br i1 %61, label %66, label %42

62:                                               ; preds = %42, %53
  %63 = icmp eq i32 %44, -1
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 10
  store i8 1, i8* %65, align 8
  br label %190

66:                                               ; preds = %58, %62, %31
  %67 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kDataAttrE, align 8
  br i1 %18, label %75, label %68

68:                                               ; preds = %66
  %69 = bitcast %"class.blink::ElementData"* %12 to %"class.blink::UniqueElementData"*
  %70 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1, i32 1
  %71 = bitcast %"class.blink::Member.14"* %70 to %"class.blink::Attribute"**
  %72 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %69, i64 0, i32 2, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  br label %80

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1
  %77 = bitcast %"class.blink::ElementData"* %76 to %"class.blink::Attribute"*
  %78 = lshr i32 %16, 1
  %79 = and i32 %78, 268435455
  br label %80

80:                                               ; preds = %75, %68
  %81 = phi %"class.blink::Attribute"* [ %77, %75 ], [ %72, %68 ]
  %82 = phi i32 [ %79, %75 ], [ %74, %68 ]
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %81, i64 %83
  %85 = icmp eq i32 %82, 0
  br i1 %85, label %113, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %67, i64 0, i32 0, i32 0
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %91

91:                                               ; preds = %107, %86
  %92 = phi %"class.blink::Attribute"* [ %81, %86 ], [ %108, %107 ]
  %93 = phi i32 [ 0, %86 ], [ %109, %107 ]
  %94 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %92, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %94, align 8
  %96 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %95, %88
  br i1 %96, label %115, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %95, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %99, %100
  br i1 %101, label %102, label %107

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %95, i64 0, i32 4, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %104, %105
  br i1 %106, label %115, label %107

107:                                              ; preds = %102, %97
  %108 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %92, i64 1
  %109 = add i32 %93, 1
  %110 = icmp eq %"class.blink::Attribute"* %108, %84
  br i1 %110, label %113, label %91

111:                                              ; preds = %9
  %112 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 10
  store i8 1, i8* %112, align 8
  br label %188

113:                                              ; preds = %107, %80
  %114 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 10
  store i8 1, i8* %114, align 8
  br label %188

115:                                              ; preds = %91, %102
  %116 = icmp eq i32 %93, -1
  %117 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 10
  store i8 1, i8* %117, align 8
  br i1 %116, label %188, label %190

118:                                              ; preds = %2
  %119 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kDataAttrE, align 8
  %120 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %120, align 8
  %122 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %121
  %123 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kClassidAttrE, align 8
  br i1 %122, label %124, label %183

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %126 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %125, align 8
  %127 = icmp eq %"class.blink::ElementData"* %126, null
  br i1 %127, label %128, label %130

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 10
  store i8 1, i8* %129, align 8
  br label %188

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %126, i64 0, i32 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %142, label %135

135:                                              ; preds = %130
  %136 = bitcast %"class.blink::ElementData"* %126 to %"class.blink::UniqueElementData"*
  %137 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %126, i64 1, i32 1
  %138 = bitcast %"class.blink::Member.14"* %137 to %"class.blink::Attribute"**
  %139 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %136, i64 0, i32 2, i32 0, i32 0, i32 2
  %141 = load i32, i32* %140, align 4
  br label %147

142:                                              ; preds = %130
  %143 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %126, i64 1
  %144 = bitcast %"class.blink::ElementData"* %143 to %"class.blink::Attribute"*
  %145 = lshr i32 %132, 1
  %146 = and i32 %145, 268435455
  br label %147

147:                                              ; preds = %142, %135
  %148 = phi %"class.blink::Attribute"* [ %144, %142 ], [ %139, %135 ]
  %149 = phi i32 [ %146, %142 ], [ %141, %135 ]
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %148, i64 %150
  %152 = icmp eq i32 %149, 0
  br i1 %152, label %178, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %123, i64 0, i32 0, i32 0
  %155 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %157 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %155, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %158

158:                                              ; preds = %174, %153
  %159 = phi %"class.blink::Attribute"* [ %148, %153 ], [ %175, %174 ]
  %160 = phi i32 [ 0, %153 ], [ %176, %174 ]
  %161 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %159, i64 0, i32 0, i32 0, i32 0
  %162 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %161, align 8
  %163 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %162, %155
  br i1 %163, label %180, label %164

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %162, i64 0, i32 3, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %166, %167
  br i1 %168, label %169, label %174

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %162, i64 0, i32 4, i32 0, i32 0, i32 0
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %171, %172
  br i1 %173, label %180, label %174

174:                                              ; preds = %169, %164
  %175 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %159, i64 1
  %176 = add i32 %160, 1
  %177 = icmp eq %"class.blink::Attribute"* %175, %151
  br i1 %177, label %178, label %158

178:                                              ; preds = %174, %147
  %179 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 10
  store i8 1, i8* %179, align 8
  br label %188

180:                                              ; preds = %158, %169
  %181 = icmp eq i32 %160, -1
  %182 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 10
  store i8 1, i8* %182, align 8
  br i1 %181, label %188, label %190

183:                                              ; preds = %118
  %184 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %123, i64 0, i32 0, i32 0
  %185 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %184, align 8
  %186 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %185
  %187 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 10
  store i8 1, i8* %187, align 8
  br i1 %186, label %188, label %190

188:                                              ; preds = %178, %128, %113, %111, %115, %180, %183
  %189 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElement30ReattachOnPluginChangeIfNeededEv(%"class.blink::HTMLPlugInElement"* %189) #10
  br label %190

190:                                              ; preds = %115, %180, %64, %188, %183
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement11IsImageTypeEv(%"class.blink::HTMLPlugInElement"*) local_unnamed_addr #1

declare void @_ZN5blink11ImageLoader17UpdateFromElementENS0_25UpdateFromElementBehaviorEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"*, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFrameOwnerElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLObjectElement19ParametersForPluginERNS_16PluginParametersE(%"class.blink::HTMLObjectElement"*, %"class.blink::PluginParameters"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::HashSet.2698", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringImpl"*, align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringImpl"*, align 8
  %10 = bitcast %"class.WTF::HashSet.2698"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::HashSet.2698", %"class.WTF::HashSet.2698"* %3, i64 0, i32 0, i32 0
  %12 = bitcast %"class.WTF::HashSet.2698"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 20, i1 false) #10
  %13 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %71, label %16

16:                                               ; preds = %2
  %17 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kParamTagE, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %17, i64 0, i32 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %35, %16
  %20 = phi %"class.blink::Node"* [ %14, %16 ], [ %37, %35 ]
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 48
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %35

25:                                               ; preds = %19
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 1, i32 2
  %28 = bitcast %"class.blink::Member"* %27 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %31, %33
  br i1 %34, label %39, label %35

35:                                               ; preds = %25, %19
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 5, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %71, label %19

39:                                               ; preds = %25
  %40 = bitcast %"class.WTF::String"* %4 to i8*
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %42 = bitcast %"class.WTF::StringImpl"** %5 to i8*
  %43 = getelementptr inbounds %"class.WTF::HashSet.2698", %"class.WTF::HashSet.2698"* %3, i64 0, i32 0
  %44 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %45 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 4, i32 0, i32 0
  %46 = bitcast %"class.WTF::StringView"* %6 to i8*
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  %50 = bitcast %"class.WTF::StringView"* %6 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %52 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 4
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %56 = bitcast %"class.WTF::StringView"* %7 to i8*
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %59 = bitcast i8** %58 to %"class.WTF::StringImpl"**
  %60 = bitcast %"class.WTF::StringView"* %7 to i64*
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %62 = bitcast %"class.WTF::StringView"* %8 to i8*
  %63 = bitcast %"class.WTF::StringView"* %8 to i64*
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %66 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 3
  %67 = bitcast %"class.WTF::String"* %66 to i64*
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %69 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kParamTagE, align 8
  %70 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %69, i64 0, i32 0, i32 0, i32 0
  br label %109

71:                                               ; preds = %35, %322, %342, %2
  %72 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %73 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %72, align 8
  %74 = icmp eq %"class.blink::ElementData"* %73, null
  br i1 %74, label %346, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %76) #10
  %77 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %72, align 8
  %78 = icmp eq %"class.blink::ElementData"* %77, null
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = load i32, i32* null, align 536870912
  br label %93

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %77, i64 0, i32 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %93, label %86

86:                                               ; preds = %81
  %87 = bitcast %"class.blink::ElementData"* %77 to %"class.blink::UniqueElementData"*
  %88 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %77, i64 1, i32 1
  %89 = bitcast %"class.blink::Member.14"* %88 to %"class.blink::Attribute"**
  %90 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %87, i64 0, i32 2, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  br label %99

93:                                               ; preds = %81, %79
  %94 = phi i32 [ %80, %79 ], [ %83, %81 ]
  %95 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %77, i64 1
  %96 = bitcast %"class.blink::ElementData"* %95 to %"class.blink::Attribute"*
  %97 = lshr i32 %94, 1
  %98 = and i32 %97, 268435455
  br label %99

99:                                               ; preds = %86, %93
  %100 = phi i32 [ %98, %93 ], [ %92, %86 ]
  %101 = phi %"class.blink::Attribute"* [ %96, %93 ], [ %90, %86 ]
  %102 = zext i32 %100 to i64
  %103 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %101, i64 %102
  %104 = icmp eq i32 %100, 0
  br i1 %104, label %346, label %105

105:                                              ; preds = %99
  %106 = bitcast %"class.WTF::StringImpl"** %9 to i8*
  %107 = bitcast %"class.WTF::StringImpl"** %9 to i64*
  %108 = getelementptr inbounds %"class.WTF::HashSet.2698", %"class.WTF::HashSet.2698"* %3, i64 0, i32 0
  br label %352

109:                                              ; preds = %332, %39
  %110 = phi %"class.blink::Node"* [ %20, %39 ], [ %327, %332 ]
  %111 = bitcast %"class.blink::Node"* %110 to %"class.blink::HTMLParamElement"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %41, align 8
  %112 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLParamElement7GetNameEv(%"class.blink::HTMLParamElement"* nonnull %111) #10
  %113 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %41, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %322, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %135

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i33
  %125 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %124, i33 1) #10
  %126 = extractvalue { i33, i1 } %125, 1
  %127 = extractvalue { i33, i1 } %125, 0
  %128 = icmp slt i33 %127, 0
  %129 = or i1 %126, %128
  br i1 %129, label %130, label %131, !prof !3

130:                                              ; preds = %121
  call void @llvm.trap() #10
  unreachable

131:                                              ; preds = %121
  %132 = trunc i33 %127 to i32
  store i32 %132, i32* %122, align 4
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %322, label %135

135:                                              ; preds = %116, %131
  %136 = phi %"class.WTF::StringImpl"* [ %133, %131 ], [ %114, %116 ]
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %306, label %140

140:                                              ; preds = %135
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #10
  store %"class.WTF::StringImpl"* %136, %"class.WTF::StringImpl"** %5, align 8
  %141 = call { %"class.WTF::StringImpl"**, i8 } @_ZN3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_S2_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2699"* nonnull %43, %"class.WTF::StringImpl"** nonnull dereferenceable(8) %5, %"class.WTF::StringImpl"** nonnull dereferenceable(8) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #10
  %142 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLParamElement7GetNameEv(%"class.blink::HTMLParamElement"* nonnull %111) #10
  %143 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %142, i64 0, i32 0
  %144 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLParamElement5ValueEv(%"class.blink::HTMLParamElement"* nonnull %111) #10
  %145 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %144, i64 0, i32 0
  call void @_ZN5blink16PluginParameters19AppendNameWithValueERKN3WTF6StringES4_(%"class.blink::PluginParameters"* %1, %"class.WTF::String"* dereferenceable(8) %143, %"class.WTF::String"* dereferenceable(8) %145) #10
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %148, label %149

148:                                              ; preds = %140
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #10
  br label %153

149:                                              ; preds = %140
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #10
  br i1 %152, label %153, label %221

153:                                              ; preds = %148, %149
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %156, label %158

156:                                              ; preds = %153
  store i8* null, i8** %48, align 8
  %157 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %157, i64* %50, align 8
  br label %162

158:                                              ; preds = %153
  store %"class.WTF::StringImpl"* %154, %"class.WTF::StringImpl"** %47, align 8
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 1
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %49, align 8
  br label %162

162:                                              ; preds = %156, %158
  %163 = phi i32 [ %160, %158 ], [ 0, %156 ]
  store i32 %163, i32* %51, align 8
  %164 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [5 x i8]* nonnull dereferenceable(5) @.str.1)
  br i1 %164, label %220, label %165

165:                                              ; preds = %162
  %166 = call zeroext i1 @_ZN5blink16HTMLParamElement14IsURLParameterERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #10
  br i1 %166, label %167, label %222

167:                                              ; preds = %165
  %168 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLParamElement5ValueEv(%"class.blink::HTMLParamElement"* nonnull %111) #10
  %169 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %168, i64 0, i32 0
  %170 = call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %169) #10
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %189, label %172

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %189

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i33
  %181 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %180, i33 1) #10
  %182 = extractvalue { i33, i1 } %181, 1
  %183 = extractvalue { i33, i1 } %181, 0
  %184 = icmp slt i33 %183, 0
  %185 = or i1 %182, %184
  br i1 %185, label %186, label %187, !prof !3

186:                                              ; preds = %177
  call void @llvm.trap() #10
  unreachable

187:                                              ; preds = %177
  %188 = trunc i33 %183 to i32
  store i32 %188, i32* %178, align 4
  br label %189

189:                                              ; preds = %187, %172, %167
  %190 = ptrtoint %"class.WTF::StringImpl"* %170 to i64
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  store i64 %190, i64* %53, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #10
  br label %206

206:                                              ; preds = %189, %202, %205
  call void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"* %44) #10
  br i1 %171, label %222, label %207

207:                                              ; preds = %206
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %222

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #10
  br label %222

220:                                              ; preds = %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #10
  br label %222

221:                                              ; preds = %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #10
  br label %222

222:                                              ; preds = %219, %216, %206, %221, %220, %165
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #10
  br label %230

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = icmp eq i32 %228, 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #10
  br i1 %229, label %230, label %305

230:                                              ; preds = %225, %226
  %231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %232 = icmp eq %"class.WTF::StringImpl"* %231, null
  br i1 %232, label %233, label %235

233:                                              ; preds = %230
  store i8* null, i8** %58, align 8
  %234 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %234, i64* %60, align 8
  br label %239

235:                                              ; preds = %230
  store %"class.WTF::StringImpl"* %231, %"class.WTF::StringImpl"** %57, align 8
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 1
  store %"class.WTF::StringImpl"* %238, %"class.WTF::StringImpl"** %59, align 8
  br label %239

239:                                              ; preds = %233, %235
  %240 = phi i32 [ %237, %235 ], [ 0, %233 ]
  store i32 %240, i32* %61, align 8
  %241 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, [5 x i8]* nonnull dereferenceable(5) @.str.2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #10
  br i1 %241, label %242, label %306

242:                                              ; preds = %239
  %243 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLParamElement5ValueEv(%"class.blink::HTMLParamElement"* nonnull %111) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #10
  %244 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %244, i64* %63, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8** %64, align 8
  store i32 1, i32* %65, align 8
  %245 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %243, i64 0, i32 0, i32 0, i32 0
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %248, label %249

248:                                              ; preds = %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #10
  br label %306

249:                                              ; preds = %242
  %250 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %246, %"class.WTF::StringView"* nonnull dereferenceable(24) %8, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #10
  %251 = icmp eq i32 %250, -1
  br i1 %251, label %306, label %252

252:                                              ; preds = %249
  %253 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLParamElement5ValueEv(%"class.blink::HTMLParamElement"* nonnull %111) #10
  %254 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %253, i64 0, i32 0
  %255 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %254, i32 0, i32 %250) #10
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %274, label %257

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %274

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = zext i32 %264 to i33
  %266 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %265, i33 1) #10
  %267 = extractvalue { i33, i1 } %266, 1
  %268 = extractvalue { i33, i1 } %266, 0
  %269 = icmp slt i33 %268, 0
  %270 = or i1 %267, %269
  br i1 %270, label %271, label %272, !prof !3

271:                                              ; preds = %262
  call void @llvm.trap() #10
  unreachable

272:                                              ; preds = %262
  %273 = trunc i33 %268 to i32
  store i32 %273, i32* %263, align 4
  br label %274

274:                                              ; preds = %272, %257, %252
  %275 = ptrtoint %"class.WTF::StringImpl"* %255 to i64
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %275, i64* %67, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %291, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  br i1 %282, label %285, label %287

285:                                              ; preds = %278
  %286 = add i32 %284, -1
  store i32 %286, i32* %283, align 4
  br label %287

287:                                              ; preds = %285, %278
  %288 = phi i32 [ %286, %285 ], [ %284, %278 ]
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %276) #10
  br label %291

291:                                              ; preds = %274, %287, %290
  call void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"* %44) #10
  br i1 %256, label %306, label %292

292:                                              ; preds = %291
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  br i1 %296, label %299, label %301

299:                                              ; preds = %292
  %300 = add i32 %298, -1
  store i32 %300, i32* %297, align 4
  br label %301

301:                                              ; preds = %299, %292
  %302 = phi i32 [ %300, %299 ], [ %298, %292 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %306

304:                                              ; preds = %301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #10
  br label %306

305:                                              ; preds = %226
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #10
  br label %306

306:                                              ; preds = %304, %301, %291, %248, %239, %305, %249, %135
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %307, null
  br i1 %308, label %322, label %309

309:                                              ; preds = %306
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 0
  %315 = load i32, i32* %314, align 4
  br i1 %313, label %316, label %318

316:                                              ; preds = %309
  %317 = add i32 %315, -1
  store i32 %317, i32* %314, align 4
  br label %318

318:                                              ; preds = %316, %309
  %319 = phi i32 [ %317, %316 ], [ %315, %309 ]
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %318
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %307) #10
  br label %322

322:                                              ; preds = %131, %109, %306, %318, %321
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  %323 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %110, i64 0, i32 5, i32 0, i32 0
  %324 = load %"class.blink::Node"*, %"class.blink::Node"** %323, align 8
  %325 = icmp eq %"class.blink::Node"* %324, null
  br i1 %325, label %71, label %326

326:                                              ; preds = %322, %342
  %327 = phi %"class.blink::Node"* [ %344, %342 ], [ %324, %322 ]
  %328 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %327, i64 0, i32 1
  %329 = load i32, i32* %328, align 8
  %330 = and i32 %329, 48
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %342

332:                                              ; preds = %326
  %333 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %334 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %327, i64 1, i32 2
  %335 = bitcast %"class.blink::Member"* %334 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %336 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %335, align 8
  %337 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %336, i64 0, i32 3, i32 0, i32 0, i32 0
  %338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %337, align 8
  %339 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %333, i64 0, i32 3, i32 0, i32 0, i32 0
  %340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %339, align 8
  %341 = icmp eq %"class.WTF::StringImpl"* %338, %340
  br i1 %341, label %109, label %342

342:                                              ; preds = %332, %326
  %343 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %327, i64 0, i32 5, i32 0, i32 0
  %344 = load %"class.blink::Node"*, %"class.blink::Node"** %343, align 8
  %345 = icmp eq %"class.blink::Node"* %344, null
  br i1 %345, label %71, label %326

346:                                              ; preds = %361, %71, %99
  call void @_ZN5blink16PluginParameters17MapDataParamToSrcEv(%"class.blink::PluginParameters"* %1) #10
  %347 = load %"class.WTF::StringImpl"**, %"class.WTF::StringImpl"*** %11, align 8
  %348 = icmp eq %"class.WTF::StringImpl"** %347, null
  br i1 %348, label %351, label %349, !prof !4

349:                                              ; preds = %346
  %350 = bitcast %"class.WTF::StringImpl"** %347 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %350) #10
  store %"class.WTF::StringImpl"** null, %"class.WTF::StringImpl"*** %11, align 8
  br label %351

351:                                              ; preds = %346, %349
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  ret void

352:                                              ; preds = %105, %361
  %353 = phi %"class.blink::Attribute"* [ %101, %105 ], [ %362, %361 ]
  %354 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %354, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #10
  %356 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %355, i64 0, i32 3, i32 0, i32 0, i32 0
  %357 = bitcast %"class.WTF::StringImpl"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  store i64 %358, i64* %107, align 8
  %359 = call zeroext i1 @_ZNK3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EEbRKT0_(%"class.WTF::HashTable.2699"* nonnull %108, %"class.WTF::StringImpl"** nonnull dereferenceable(8) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #10
  br i1 %359, label %361, label %360

360:                                              ; preds = %352
  call void @_ZN5blink16PluginParameters15AppendAttributeERKNS_9AttributeE(%"class.blink::PluginParameters"* %1, %"class.blink::Attribute"* dereferenceable(16) %353) #10
  br label %361

361:                                              ; preds = %352, %360
  %362 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %353, i64 1
  %363 = icmp eq %"class.blink::Attribute"* %362, %103
  br i1 %363, label %346, label %352
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLParamElement7GetNameEv(%"class.blink::HTMLParamElement"*) local_unnamed_addr #1

declare void @_ZN5blink16PluginParameters19AppendNameWithValueERKN3WTF6StringES4_(%"class.blink::PluginParameters"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLParamElement5ValueEv(%"class.blink::HTMLParamElement"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

declare zeroext i1 @_ZN5blink16HTMLParamElement14IsURLParameterERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink16PluginParameters15AppendAttributeERKNS_9AttributeE(%"class.blink::PluginParameters"*, %"class.blink::Attribute"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink16PluginParameters17MapDataParamToSrcEv(%"class.blink::PluginParameters"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLObjectElement18HasFallbackContentEv(%"class.blink::HTMLObjectElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kParamTagE, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %6, i64 0, i32 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %5, %30
  %9 = phi %"class.blink::Node"* [ %3, %5 ], [ %32, %30 ]
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::Node"* %9 to %"class.blink::CharacterData"*
  %16 = tail call zeroext i1 @_ZNK5blink13CharacterData29ContainsOnlyWhitespaceOrEmptyEv(%"class.blink::CharacterData"* nonnull %15) #10
  br i1 %16, label %30, label %34

17:                                               ; preds = %8
  %18 = and i32 %11, 48
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %34

20:                                               ; preds = %17
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 2
  %23 = bitcast %"class.blink::Member"* %22 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %26, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %20, %14
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 5, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %34, label %8

34:                                               ; preds = %14, %20, %30, %17, %1
  %35 = phi i1 [ false, %1 ], [ true, %17 ], [ false, %30 ], [ true, %20 ], [ true, %14 ]
  ret i1 %35
}

declare zeroext i1 @_ZNK5blink13CharacterData29ContainsOnlyWhitespaceOrEmptyEv(%"class.blink::CharacterData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLObjectElement15HasValidClassIdEv(%"class.blink::HTMLObjectElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 3
  %4 = tail call zeroext i1 @_ZN5blink16MIMETypeRegistry20IsJavaAppletMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %3) #10
  %5 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  br i1 %4, label %6, label %16

6:                                                ; preds = %1
  %7 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %8 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 5, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  br i1 %15, label %25, label %17

16:                                               ; preds = %1, %6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  br label %17

17:                                               ; preds = %16, %14
  %18 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br label %25

25:                                               ; preds = %21, %17, %14
  %26 = phi i1 [ true, %14 ], [ true, %17 ], [ %24, %21 ]
  ret i1 %26
}

declare zeroext i1 @_ZN5blink16MIMETypeRegistry20IsJavaAppletMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink17HTMLPlugInElement30ReattachOnPluginChangeIfNeededEv(%"class.blink::HTMLPlugInElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLObjectElement20UpdatePluginInternalEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = alloca %"class.blink::PluginParameters", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %9 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 10
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1024
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  tail call void @_ZN5blink17HTMLPlugInElement18DispatchErrorEventEv(%"class.blink::HTMLPlugInElement"* %8) #10
  br label %322

15:                                               ; preds = %1
  %16 = icmp eq %"class.blink::HTMLObjectElement"* %0, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.blink::Node"** %3 to i8*
  %20 = bitcast %"class.blink::Node"** %3 to i64*
  br label %21

21:                                               ; preds = %27, %17
  %22 = phi %"class.blink::Node"* [ %18, %17 ], [ %31, %27 ]
  %23 = call dereferenceable(24) %"class.WTF::HashCountedSet.2944"* @_ZN5blink23SubframeLoadingDisabler20DisabledSubtreeRootsEv() #10
  %24 = ptrtoint %"class.blink::Node"* %22 to i64
  %25 = getelementptr inbounds %"class.WTF::HashCountedSet.2944", %"class.WTF::HashCountedSet.2944"* %23, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  store i64 %24, i64* %20, align 8
  %26 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.2946"* %25, %"class.blink::Node"** nonnull dereferenceable(8) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br i1 %26, label %33, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 0, i32 2, i32 0, i32 0
  %29 = bitcast %"class.blink::Node"** %28 to %"class.blink::ContainerNode"**
  %30 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %30, i64 0, i32 0
  %32 = icmp eq %"class.blink::ContainerNode"* %30, null
  br i1 %32, label %34, label %21

33:                                               ; preds = %21
  call void @_ZN5blink17HTMLPlugInElement18DispatchErrorEventEv(%"class.blink::HTMLPlugInElement"* nonnull %8) #10
  br label %322

34:                                               ; preds = %27, %15
  %35 = bitcast %"class.blink::PluginParameters"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #10
  %36 = getelementptr inbounds %"class.blink::PluginParameters", %"class.blink::PluginParameters"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::PluginParameters", %"class.blink::PluginParameters"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %38 = getelementptr inbounds %"class.blink::PluginParameters", %"class.blink::PluginParameters"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 32, i1 false) #10
  call void @_ZN5blink17HTMLObjectElement19ParametersForPluginERNS_16PluginParametersE(%"class.blink::HTMLObjectElement"* %0, %"class.blink::PluginParameters"* nonnull dereferenceable(32) %4)
  %39 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 4
  %40 = call zeroext i1 @_ZN5blink17HTMLPlugInElement21AllowedToLoadFrameURLERKN3WTF6StringE(%"class.blink::HTMLPlugInElement"* %8, %"class.WTF::String"* dereferenceable(8) %39) #10
  br i1 %40, label %42, label %41

41:                                               ; preds = %34
  call void @_ZN5blink17HTMLPlugInElement18DispatchErrorEventEv(%"class.blink::HTMLPlugInElement"* %8) #10
  br label %247

42:                                               ; preds = %34
  %43 = load i32, i32* %10, align 8
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %45, label %51, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.blink::NodeData"** %46 to %"class.blink::NodeRareData"**
  %49 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %49, i64 0, i32 1, i32 0, i32 0
  br label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.blink::NodeData"** %46 to %"class.blink::NodeRenderingData"**
  br label %53

53:                                               ; preds = %47, %51
  %54 = phi %"class.blink::NodeRenderingData"** [ %50, %47 ], [ %52, %51 ]
  %55 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %55, i64 0, i32 1
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %56, align 8
  %58 = icmp eq %"class.blink::LayoutObject"* %57, null
  br i1 %58, label %247, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %60) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 112, i1 false)
  %61 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %62 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %62, i64 0, i32 2, i32 0, i32 0
  %64 = load %"class.blink::Document"*, %"class.blink::Document"** %63, align 8
  %65 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %64) #10
  %66 = call %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"* %65) #10
  %67 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %67) #10
  %68 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %61, align 8
  %69 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %68, i64 0, i32 2, i32 0, i32 0
  %70 = load %"class.blink::Document"*, %"class.blink::Document"** %69, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %6, %"class.blink::Document"* %70, %"class.WTF::String"* dereferenceable(8) %39) #10
  %71 = bitcast %"class.blink::LocalFrameClient"* %66 to void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)***
  %72 = load void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)**, void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*, void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)** %72, i64 67
  %74 = load void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*, void (%"class.blink::KURL"*, %"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)** %73, align 8
  call void %74(%"class.blink::KURL"* nonnull sret %5, %"class.blink::LocalFrameClient"* %66, %"class.blink::KURL"* nonnull dereferenceable(112) %6) #10
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %67) #10
  %75 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* nonnull %5) #10
  br i1 %75, label %175, label %76

76:                                               ; preds = %59
  %77 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 4, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %97, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i33
  %89 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #10
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !3

94:                                               ; preds = %85
  call void @llvm.trap() #10
  unreachable

95:                                               ; preds = %85
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %86, align 4
  br label %97

97:                                               ; preds = %95, %80, %76
  %98 = ptrtoint %"class.WTF::StringImpl"* %78 to i64
  %99 = bitcast %"class.WTF::String"* %39 to i64*
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  store i64 %98, i64* %99, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #10
  br label %116

116:                                              ; preds = %97, %112, %115
  %117 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9) #10
  %118 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 3
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %139, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i33
  %131 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %130, i33 1) #10
  %132 = extractvalue { i33, i1 } %131, 1
  %133 = extractvalue { i33, i1 } %131, 0
  %134 = icmp slt i33 %133, 0
  %135 = or i1 %132, %134
  br i1 %135, label %136, label %137, !prof !3

136:                                              ; preds = %127
  call void @llvm.trap() #10
  unreachable

137:                                              ; preds = %127
  %138 = trunc i33 %133 to i32
  store i32 %138, i32* %128, align 4
  br label %139

139:                                              ; preds = %137, %122, %116
  %140 = ptrtoint %"class.WTF::StringImpl"* %120 to i64
  %141 = bitcast %"class.WTF::String"* %118 to i64*
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  store i64 %140, i64* %141, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #10
  br label %158

158:                                              ; preds = %139, %154, %157
  call void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"* %8) #10
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #10
  br label %174

174:                                              ; preds = %158, %170, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #10
  br label %175

175:                                              ; preds = %174, %59
  %176 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 3
  %177 = call zeroext i1 @_ZN5blink16MIMETypeRegistry20IsJavaAppletMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %176) #10
  %178 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #10
  br i1 %177, label %179, label %189

179:                                              ; preds = %175
  %180 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %181 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8** %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 5, i32* %183, align 8
  %184 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 5, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %179
  %188 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %185, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #10
  br i1 %188, label %198, label %190

189:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #10
  br label %190

190:                                              ; preds = %189, %187
  %191 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 5, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %198, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %190, %187, %194
  %199 = call zeroext i1 @_ZN5blink17HTMLPlugInElement13RequestObjectERKNS_16PluginParametersE(%"class.blink::HTMLPlugInElement"* %8, %"class.blink::PluginParameters"* nonnull dereferenceable(32) %4) #10
  br i1 %199, label %243, label %200

200:                                              ; preds = %198, %194
  %201 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %209, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %209, label %208

208:                                              ; preds = %204
  call void @_ZN5blink17HTMLPlugInElement18DispatchErrorEventEv(%"class.blink::HTMLPlugInElement"* %8) #10
  br label %209

209:                                              ; preds = %200, %208, %204
  %210 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %211 = load %"class.blink::Node"*, %"class.blink::Node"** %210, align 8
  %212 = icmp eq %"class.blink::Node"* %211, null
  br i1 %212, label %246, label %213

213:                                              ; preds = %209
  %214 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kParamTagE, align 8
  %215 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %214, i64 0, i32 0, i32 0, i32 0
  br label %216

216:                                              ; preds = %238, %213
  %217 = phi %"class.blink::Node"* [ %211, %213 ], [ %240, %238 ]
  %218 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %217, i64 0, i32 1
  %219 = load i32, i32* %218, align 8
  %220 = and i32 %219, 12
  %221 = icmp eq i32 %220, 4
  br i1 %221, label %222, label %225

222:                                              ; preds = %216
  %223 = bitcast %"class.blink::Node"* %217 to %"class.blink::CharacterData"*
  %224 = call zeroext i1 @_ZNK5blink13CharacterData29ContainsOnlyWhitespaceOrEmptyEv(%"class.blink::CharacterData"* nonnull %223) #10
  br i1 %224, label %238, label %242

225:                                              ; preds = %216
  %226 = and i32 %219, 48
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %242

228:                                              ; preds = %225
  %229 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %215, align 8
  %230 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %217, i64 1, i32 2
  %231 = bitcast %"class.blink::Member"* %230 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %232 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %232, i64 0, i32 3, i32 0, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %229, i64 0, i32 3, i32 0, i32 0, i32 0
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %234, %236
  br i1 %237, label %238, label %242

238:                                              ; preds = %228, %222
  %239 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %217, i64 0, i32 5, i32 0, i32 0
  %240 = load %"class.blink::Node"*, %"class.blink::Node"** %239, align 8
  %241 = icmp eq %"class.blink::Node"* %240, null
  br i1 %241, label %246, label %216

242:                                              ; preds = %225, %228, %222
  call void @_ZN5blink17HTMLObjectElement21RenderFallbackContentENS0_16ErrorEventPolicyE(%"class.blink::HTMLObjectElement"* %0, i32 0)
  br label %246

243:                                              ; preds = %198
  %244 = call zeroext i1 @_ZN5blink17HTMLPlugInElement18IsErrorplaceholderEv(%"class.blink::HTMLPlugInElement"* %8) #10
  br i1 %244, label %245, label %246

245:                                              ; preds = %243
  call void @_ZN5blink17HTMLPlugInElement18DispatchErrorEventEv(%"class.blink::HTMLPlugInElement"* %8) #10
  br label %246

246:                                              ; preds = %238, %209, %243, %245, %242
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %60) #10
  br label %247

247:                                              ; preds = %53, %246, %41
  %248 = getelementptr inbounds %"class.blink::PluginParameters", %"class.blink::PluginParameters"* %4, i64 0, i32 1
  %249 = getelementptr inbounds %"class.WTF::Vector.1400", %"class.WTF::Vector.1400"* %248, i64 0, i32 0, i32 0, i32 0
  %250 = load %"class.WTF::String"*, %"class.WTF::String"** %249, align 8
  %251 = icmp eq %"class.WTF::String"* %250, null
  br i1 %251, label %285, label %252, !prof !4

252:                                              ; preds = %247
  %253 = bitcast %"class.WTF::String"* %250 to i8*
  %254 = load i32, i32* %38, align 4
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %283, label %256, !prof !3

256:                                              ; preds = %252
  %257 = zext i32 %254 to i64
  %258 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %250, i64 %257
  br label %259

259:                                              ; preds = %277, %256
  %260 = phi %"class.WTF::String"* [ %278, %277 ], [ %250, %256 ]
  %261 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %260, i64 0, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #10
  br label %277

277:                                              ; preds = %276, %273, %259
  %278 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %260, i64 1
  %279 = icmp eq %"class.WTF::String"* %278, %258
  br i1 %279, label %280, label %259

280:                                              ; preds = %277
  store i32 0, i32* %38, align 4
  %281 = bitcast %"class.WTF::Vector.1400"* %248 to i8**
  %282 = load i8*, i8** %281, align 8
  br label %283

283:                                              ; preds = %280, %252
  %284 = phi i8* [ %282, %280 ], [ %253, %252 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %284) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %249, align 8
  br label %285

285:                                              ; preds = %283, %247
  %286 = load %"class.WTF::String"*, %"class.WTF::String"** %36, align 8
  %287 = icmp eq %"class.WTF::String"* %286, null
  br i1 %287, label %321, label %288, !prof !4

288:                                              ; preds = %285
  %289 = bitcast %"class.WTF::String"* %286 to i8*
  %290 = load i32, i32* %37, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %319, label %292, !prof !3

292:                                              ; preds = %288
  %293 = zext i32 %290 to i64
  %294 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %286, i64 %293
  br label %295

295:                                              ; preds = %313, %292
  %296 = phi %"class.WTF::String"* [ %314, %313 ], [ %286, %292 ]
  %297 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %296, i64 0, i32 0, i32 0
  %298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %297, align 8
  %299 = icmp eq %"class.WTF::StringImpl"* %298, null
  br i1 %299, label %313, label %300

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load atomic i32, i32* %301 monotonic, align 4
  %303 = and i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 0
  %306 = load i32, i32* %305, align 4
  br i1 %304, label %307, label %309

307:                                              ; preds = %300
  %308 = add i32 %306, -1
  store i32 %308, i32* %305, align 4
  br label %309

309:                                              ; preds = %307, %300
  %310 = phi i32 [ %308, %307 ], [ %306, %300 ]
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %313

312:                                              ; preds = %309
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %298) #10
  br label %313

313:                                              ; preds = %312, %309, %295
  %314 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %296, i64 1
  %315 = icmp eq %"class.WTF::String"* %314, %294
  br i1 %315, label %316, label %295

316:                                              ; preds = %313
  store i32 0, i32* %37, align 4
  %317 = bitcast %"class.blink::PluginParameters"* %4 to i8**
  %318 = load i8*, i8** %317, align 8
  br label %319

319:                                              ; preds = %316, %288
  %320 = phi i8* [ %318, %316 ], [ %289, %288 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %320) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %36, align 8
  br label %321

321:                                              ; preds = %285, %319
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #10
  br label %322

322:                                              ; preds = %321, %14, %33
  ret void
}

declare void @_ZN5blink17HTMLPlugInElement18DispatchErrorEventEv(%"class.blink::HTMLPlugInElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink17HTMLPlugInElement21AllowedToLoadFrameURLERKN3WTF6StringE(%"class.blink::HTMLPlugInElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #5

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink17HTMLPlugInElement13RequestObjectERKNS_16PluginParametersE(%"class.blink::HTMLPlugInElement"*, %"class.blink::PluginParameters"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLObjectElement21RenderFallbackContentENS0_16ErrorEventPolicyE(%"class.blink::HTMLObjectElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 1
  %4 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  br i1 %3, label %5, label %6

5:                                                ; preds = %2
  tail call void @_ZN5blink17HTMLPlugInElement18DispatchErrorEventEv(%"class.blink::HTMLPlugInElement"* %4) #10
  br label %6

6:                                                ; preds = %2, %5
  %7 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement18UseFallbackContentEv(%"class.blink::HTMLPlugInElement"* %4) #10
  br i1 %7, label %83, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 6
  %10 = load i8, i8* %9, align 8
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %83

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 256
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %83, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %20 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %19, align 8
  %21 = icmp eq %"class.blink::HTMLImageLoader"* %20, null
  br i1 %21, label %80, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %20, i64 0, i32 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %23, align 8
  %25 = icmp eq %"class.blink::ImageResourceContent"* %24, null
  br i1 %25, label %80, label %26

26:                                               ; preds = %22
  %27 = tail call zeroext i8 @_ZNK5blink20ImageResourceContent16GetContentStatusEv(%"class.blink::ImageResourceContent"* nonnull %24) #10
  %28 = icmp eq i8 %27, 3
  br i1 %28, label %80, label %29

29:                                               ; preds = %26
  %30 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %19, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %30, i64 0, i32 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %31, align 8
  %33 = tail call dereferenceable(1072) %"class.blink::ResourceResponse"* @_ZNK5blink20ImageResourceContent11GetResponseEv(%"class.blink::ImageResourceContent"* %32) #10
  %34 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"* %33) #10
  %35 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 3
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #10
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %44
  tail call void @llvm.trap() #10
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %29
  %57 = ptrtoint %"class.WTF::StringImpl"* %37 to i64
  %58 = bitcast %"class.WTF::String"* %35 to i64*
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  store i64 %57, i64* %58, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %56, %71, %74
  tail call void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"* %4) #10
  %76 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement11IsImageTypeEv(%"class.blink::HTMLPlugInElement"* %4) #10
  br i1 %76, label %80, label %77

77:                                               ; preds = %75
  %78 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %19, align 8
  %79 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %78, i64 0, i32 0
  tail call void @_ZN5blink11ImageLoader10ClearImageEv(%"class.blink::ImageLoader"* %79) #10
  tail call void @_ZN5blink17HTMLObjectElement23ReattachFallbackContentEv(%"class.blink::HTMLObjectElement"* %0)
  br label %83

80:                                               ; preds = %18, %26, %22, %75
  %81 = load i8, i8* %9, align 8
  %82 = or i8 %81, 1
  store i8 %82, i8* %9, align 8
  tail call void @_ZN5blink17HTMLObjectElement23ReattachFallbackContentEv(%"class.blink::HTMLObjectElement"* %0)
  br label %83

83:                                               ; preds = %13, %8, %6, %80, %77
  ret void
}

declare zeroext i1 @_ZN5blink17HTMLPlugInElement18IsErrorplaceholderEv(%"class.blink::HTMLPlugInElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17HTMLObjectElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLObjectElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %4 = tail call i32 @_ZN5blink17HTMLPlugInElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLPlugInElement"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #10
  %5 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 2
  %6 = bitcast %"class.blink::ListedElement.base"* %5 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::ListedElement"* %6, %"class.blink::ContainerNode"* dereferenceable(80) %1) #10
  ret i32 0
}

declare i32 @_ZN5blink17HTMLPlugInElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLPlugInElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare void @_ZN5blink13ListedElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::ListedElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLObjectElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLObjectElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLPlugInElement"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #10
  %4 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 2
  %5 = bitcast %"class.blink::ListedElement.base"* %4 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::ListedElement"* %5, %"class.blink::ContainerNode"* dereferenceable(80) %1) #10
  ret void
}

declare void @_ZN5blink17HTMLPlugInElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLPlugInElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare void @_ZN5blink13ListedElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::ListedElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLObjectElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLObjectElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %4 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"* %4, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56) %1) #10
  %5 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 256
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement18UseFallbackContentEv(%"class.blink::HTMLPlugInElement"* %3) #10
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 6
  %13 = load i8, i8* %12, align 8
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 10
  store i8 1, i8* %17, align 8
  tail call void @_ZN5blink17HTMLPlugInElement30ReattachOnPluginChangeIfNeededEv(%"class.blink::HTMLPlugInElement"* %3) #10
  br label %18

18:                                               ; preds = %11, %2, %9, %16
  ret void
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLObjectElement18UseFallbackContentEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %3 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement18UseFallbackContentEv(%"class.blink::HTMLPlugInElement"* %2) #10
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 6
  %6 = load i8, i8* %5, align 8
  %7 = and i8 %6, 1
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %4, %1
  %10 = phi i1 [ true, %1 ], [ %8, %4 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLObjectElement14IsURLAttributeERKNS_9AttributeE(%"class.blink::HTMLObjectElement"* nocapture readnone, %"class.blink::Attribute"* nocapture readonly dereferenceable(16)) unnamed_addr #6 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kCodebaseAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kDataAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %12
  ret i1 %13

14:                                               ; preds = %2
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLObjectElement21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLObjectElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kClassidAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kDataAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %9
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kCodebaseAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %17
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = tail call zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %20, %"class.blink::QualifiedName"* dereferenceable(8) %1) #10
  br label %22

22:                                               ; preds = %19, %14, %9, %2
  %23 = phi i1 [ true, %14 ], [ true, %9 ], [ true, %2 ], [ %21, %19 ]
  ret i1 %23
}

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink17HTMLObjectElement24SubResourceAttributeNameEv(%"class.blink::HTMLObjectElement"* nocapture readnone) unnamed_addr #7 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kDataAttrE, align 8
  ret %"class.blink::QualifiedName"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17HTMLObjectElement14ImageSourceURLEv(%"class.blink::HTMLObjectElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kDataAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #10
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %68
  tail call void @llvm.trap() #10
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %80

80:                                               ; preds = %58, %63, %78
  ret %"class.WTF::StringImpl"* %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLObjectElement23ReattachFallbackContentEv(%"class.blink::HTMLObjectElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call zeroext i1 @_ZNK5blink8Document13InStyleRecalcEv(%"class.blink::Document"* %7) #10
  br i1 %8, label %51, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::StyleChangeReasonForTracing"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #10
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %9, %15, %30
  %33 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason12kUseFallbackE, i64 0, i64 0), i8** %33, align 8
  %34 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %34, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %3, i32 65536, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %2) #10
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #10
  br label %50

50:                                               ; preds = %32, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  call void @_ZN5blink4Node26SetForceReattachLayoutTreeEv(%"class.blink::Node"* %3) #10
  br label %51

51:                                               ; preds = %50, %1
  ret void
}

declare zeroext i1 @_ZNK5blink8Document13InStyleRecalcEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink4Node26SetForceReattachLayoutTreeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i8 @_ZNK5blink20ImageResourceContent16GetContentStatusEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #1

declare dereferenceable(1072) %"class.blink::ResourceResponse"* @_ZNK5blink20ImageResourceContent11GetResponseEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

declare void @_ZN5blink11ImageLoader10ClearImageEv(%"class.blink::ImageLoader"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17HTMLObjectElement9IsClassOfERKNS_10FrameOwnerE(%"class.blink::FrameOwner"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::FrameOwner"* %0 to i1 (%"class.blink::FrameOwner"*)***
  %3 = load i1 (%"class.blink::FrameOwner"*)**, i1 (%"class.blink::FrameOwner"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::FrameOwner"*)*, i1 (%"class.blink::FrameOwner"*)** %3, i64 3
  %5 = load i1 (%"class.blink::FrameOwner"*)*, i1 (%"class.blink::FrameOwner"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::FrameOwner"* %0) #10
  %7 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %0, i64 -13
  %8 = icmp eq %"class.blink::FrameOwner"* %7, null
  %9 = xor i1 %6, true
  %10 = or i1 %8, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %0, i64 -11
  %13 = bitcast %"class.blink::FrameOwner"* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 48
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %11
  %18 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %0, i64 -2
  %22 = bitcast %"class.blink::FrameOwner"* %21 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  br label %29

29:                                               ; preds = %17, %11, %1
  %30 = phi i1 [ false, %1 ], [ %28, %17 ], [ false, %11 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLObjectElement9IsExposedEv(%"class.blink::HTMLObjectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %2) #10
  %4 = icmp eq %"class.blink::ContainerNode"* %3, null
  br i1 %4, label %61, label %5

5:                                                ; preds = %1
  %6 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %6, i64 0, i32 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %25, %5
  %9 = phi %"class.blink::ContainerNode"* [ %3, %5 ], [ %26, %25 ]
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %25

15:                                               ; preds = %8
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %18 = bitcast %"class.blink::Member"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %28, label %25

25:                                               ; preds = %15, %8
  %26 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %10) #10
  %27 = icmp eq %"class.blink::ContainerNode"* %26, null
  br i1 %27, label %61, label %8

28:                                               ; preds = %15
  %29 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.blink::ContainerNode"* %9 to %"class.blink::HTMLObjectElement"*
  %32 = tail call zeroext i1 @_ZNK5blink17HTMLObjectElement9IsExposedEv(%"class.blink::HTMLObjectElement"* nonnull %31)
  br i1 %32, label %173, label %36

33:                                               ; preds = %48
  %34 = bitcast %"class.blink::ContainerNode"* %42 to %"class.blink::HTMLObjectElement"*
  %35 = tail call zeroext i1 @_ZNK5blink17HTMLObjectElement9IsExposedEv(%"class.blink::HTMLObjectElement"* nonnull %34)
  br i1 %35, label %173, label %36

36:                                               ; preds = %28, %33
  %37 = phi %"class.blink::ContainerNode"* [ %42, %33 ], [ %9, %28 ]
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %37, i64 0, i32 0
  %39 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %38) #10
  %40 = icmp eq %"class.blink::ContainerNode"* %39, null
  br i1 %40, label %61, label %41

41:                                               ; preds = %36, %58
  %42 = phi %"class.blink::ContainerNode"* [ %59, %58 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %42, i64 0, i32 0
  %44 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %42, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 48
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %58

48:                                               ; preds = %41
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 1, i32 2
  %51 = bitcast %"class.blink::Member"* %50 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %54, %56
  br i1 %57, label %33, label %58

58:                                               ; preds = %48, %41
  %59 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %43) #10
  %60 = icmp eq %"class.blink::ContainerNode"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %25, %36, %58, %1
  %62 = icmp eq %"class.blink::HTMLObjectElement"* %0, null
  br i1 %62, label %173, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %98, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %70 = bitcast %"class.blink::Node"* %69 to %"class.blink::Node"**
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  br i1 %72, label %98, label %73

73:                                               ; preds = %68, %95
  %74 = phi %"class.blink::Node"* [ %96, %95 ], [ %71, %68 ]
  %75 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %74, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = and i32 %76, 48
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %98, label %79

79:                                               ; preds = %73
  %80 = and i32 %76, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %74, i64 1
  %84 = bitcast %"class.blink::Node"* %83 to %"class.blink::Node"**
  %85 = load %"class.blink::Node"*, %"class.blink::Node"** %84, align 8
  %86 = icmp eq %"class.blink::Node"* %85, null
  br i1 %86, label %87, label %95

87:                                               ; preds = %82, %79
  %88 = icmp eq %"class.blink::Node"* %74, %2
  br i1 %88, label %98, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %74, i64 0, i32 5, i32 0, i32 0
  %91 = load %"class.blink::Node"*, %"class.blink::Node"** %90, align 8
  %92 = icmp eq %"class.blink::Node"* %91, null
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %74, %"class.blink::Node"* nonnull %2) #10
  br label %95

95:                                               ; preds = %93, %89, %82
  %96 = phi %"class.blink::Node"* [ %94, %93 ], [ %91, %89 ], [ %85, %82 ]
  %97 = icmp eq %"class.blink::Node"* %96, null
  br i1 %97, label %98, label %73

98:                                               ; preds = %73, %87, %95, %63, %68
  %99 = phi %"class.blink::Node"* [ null, %68 ], [ null, %63 ], [ null, %87 ], [ %74, %73 ], [ null, %95 ]
  %100 = icmp eq %"class.blink::Node"* %99, null
  br i1 %100, label %173, label %101

101:                                              ; preds = %98
  %102 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %103 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE, align 8
  %105 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %104, i64 0, i32 0, i32 0, i32 0
  br label %106

106:                                              ; preds = %148, %101
  %107 = phi %"class.blink::Node"* [ %99, %101 ], [ %149, %148 ]
  %108 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = and i32 %109, 48
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %132

112:                                              ; preds = %106
  %113 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %103, align 8
  %114 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 1, i32 2
  %115 = bitcast %"class.blink::Member"* %114 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %116 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 3, i32 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %113, i64 0, i32 3, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %118, %120
  br i1 %121, label %173, label %122

122:                                              ; preds = %112
  %123 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %105, align 8
  %124 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 1, i32 2
  %125 = bitcast %"class.blink::Member"* %124 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %126 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 3, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %123, i64 0, i32 3, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %128, %130
  br i1 %131, label %173, label %132

132:                                              ; preds = %106, %122
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 1
  %134 = bitcast %"class.blink::Node"* %133 to %"class.blink::Node"**
  %135 = load %"class.blink::Node"*, %"class.blink::Node"** %134, align 8
  %136 = icmp eq %"class.blink::Node"* %135, null
  br i1 %136, label %137, label %146

137:                                              ; preds = %132
  %138 = icmp eq %"class.blink::Node"* %107, %2
  br i1 %138, label %173, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 0, i32 5, i32 0, i32 0
  %141 = load %"class.blink::Node"*, %"class.blink::Node"** %140, align 8
  %142 = icmp eq %"class.blink::Node"* %141, null
  br i1 %142, label %143, label %146

143:                                              ; preds = %139
  %144 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %107, %"class.blink::Node"* %2) #10
  %145 = icmp eq %"class.blink::Node"* %144, null
  br i1 %145, label %173, label %146

146:                                              ; preds = %143, %139, %132
  %147 = phi %"class.blink::Node"* [ %135, %132 ], [ %141, %139 ], [ %144, %143 ]
  br label %148

148:                                              ; preds = %146, %170
  %149 = phi %"class.blink::Node"* [ %171, %170 ], [ %147, %146 ]
  %150 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %149, i64 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = and i32 %151, 48
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %106, label %154

154:                                              ; preds = %148
  %155 = and i32 %151, 2
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %162, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %149, i64 1
  %159 = bitcast %"class.blink::Node"* %158 to %"class.blink::Node"**
  %160 = load %"class.blink::Node"*, %"class.blink::Node"** %159, align 8
  %161 = icmp eq %"class.blink::Node"* %160, null
  br i1 %161, label %162, label %170

162:                                              ; preds = %157, %154
  %163 = icmp eq %"class.blink::Node"* %149, %2
  br i1 %163, label %173, label %164

164:                                              ; preds = %162
  %165 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %149, i64 0, i32 5, i32 0, i32 0
  %166 = load %"class.blink::Node"*, %"class.blink::Node"** %165, align 8
  %167 = icmp eq %"class.blink::Node"* %166, null
  br i1 %167, label %168, label %170

168:                                              ; preds = %164
  %169 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %149, %"class.blink::Node"* %2) #10
  br label %170

170:                                              ; preds = %168, %164, %157
  %171 = phi %"class.blink::Node"* [ %169, %168 ], [ %166, %164 ], [ %160, %157 ]
  %172 = icmp eq %"class.blink::Node"* %171, null
  br i1 %172, label %173, label %148

173:                                              ; preds = %33, %137, %143, %112, %122, %170, %162, %28, %61, %98
  %174 = phi i1 [ true, %98 ], [ true, %61 ], [ false, %28 ], [ true, %162 ], [ true, %170 ], [ true, %137 ], [ true, %143 ], [ false, %112 ], [ false, %122 ], [ false, %33 ]
  ret i1 %174
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLObjectElement18ContainsJavaAppletEv(%"class.blink::HTMLObjectElement"* readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %4, align 8
  %6 = icmp eq %"class.blink::ElementData"* %5, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::ElementData"* %5 to %"class.blink::UniqueElementData"*
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1, i32 1
  %15 = bitcast %"class.blink::Member.14"* %14 to %"class.blink::Attribute"**
  %16 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %13, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  br label %24

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1
  %21 = bitcast %"class.blink::ElementData"* %20 to %"class.blink::Attribute"*
  %22 = lshr i32 %9, 1
  %23 = and i32 %22, 268435455
  br label %24

24:                                               ; preds = %19, %12
  %25 = phi %"class.blink::Attribute"* [ %21, %19 ], [ %16, %12 ]
  %26 = phi i32 [ %23, %19 ], [ %18, %12 ]
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %57, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %50, %30
  %36 = phi %"class.blink::Attribute"* [ %25, %30 ], [ %51, %50 ]
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %32
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %45, %40
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 1
  %52 = icmp eq %"class.blink::Attribute"* %51, %28
  br i1 %52, label %57, label %35

53:                                               ; preds = %45, %35
  %54 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 1
  br label %59

57:                                               ; preds = %50, %53, %24, %1
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi %"class.WTF::AtomicString"* [ %58, %57 ], [ %56, %55 ]
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0
  %62 = tail call zeroext i1 @_ZN5blink16MIMETypeRegistry20IsJavaAppletMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %61) #10
  br i1 %62, label %289, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = icmp eq %"class.blink::HTMLObjectElement"* %0, null
  br i1 %65, label %289, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %289, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 1
  %73 = bitcast %"class.blink::Node"* %72 to %"class.blink::Node"**
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = bitcast %"class.blink::Node"* %74 to %"class.blink::HTMLElement"*
  %76 = icmp eq %"class.blink::Node"* %74, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %74, i64 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 48
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %94, label %87

82:                                               ; preds = %87
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 48
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %92, label %87

87:                                               ; preds = %77, %82
  %88 = phi %"class.blink::Node"* [ %90, %82 ], [ %74, %77 ]
  %89 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %88, i64 0, i32 5, i32 0, i32 0
  %90 = load %"class.blink::Node"*, %"class.blink::Node"** %89, align 8
  %91 = icmp eq %"class.blink::Node"* %90, null
  br i1 %91, label %289, label %82

92:                                               ; preds = %82
  %93 = bitcast %"class.blink::Node"* %90 to %"class.blink::HTMLElement"*
  br label %94

94:                                               ; preds = %71, %77, %92
  %95 = phi %"class.blink::HTMLElement"* [ %75, %71 ], [ %75, %77 ], [ %93, %92 ]
  %96 = icmp eq %"class.blink::HTMLElement"* %95, null
  br i1 %96, label %289, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.WTF::StringView"* %2 to i8*
  %99 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kParamTagE, align 8
  %100 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %106 = bitcast i8** %105 to %"class.WTF::StringImpl"**
  %107 = bitcast %"class.WTF::StringView"* %2 to i64*
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %109 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %112 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %111, i64 0, i32 0, i32 0, i32 0
  br label %113

113:                                              ; preds = %287, %97
  %114 = phi %"class.blink::HTMLElement"* [ %95, %97 ], [ %288, %287 ]
  %115 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %114, i64 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %114, i64 0, i32 0, i32 0, i32 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = and i32 %117, 48
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %121, label %120

120:                                              ; preds = %113
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #10
  br label %258

121:                                              ; preds = %113
  %122 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %100, align 8
  %123 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %115, i64 1, i32 2
  %124 = bitcast %"class.blink::Member"* %123 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %125 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %125, i64 0, i32 3, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %122, i64 0, i32 3, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %127, %129
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #10
  br i1 %130, label %131, label %258

131:                                              ; preds = %121
  %132 = and i32 %117, 1048576
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %187, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %114, i64 0, i32 0, i32 3, i32 0, i32 0
  %136 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %135, align 8
  %137 = icmp eq %"class.blink::ElementData"* %136, null
  br i1 %137, label %187, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %136, i64 0, i32 0, i32 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %150, label %143

143:                                              ; preds = %138
  %144 = bitcast %"class.blink::ElementData"* %136 to %"class.blink::UniqueElementData"*
  %145 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %136, i64 1, i32 1
  %146 = bitcast %"class.blink::Member.14"* %145 to %"class.blink::Attribute"**
  %147 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %144, i64 0, i32 2, i32 0, i32 0, i32 2
  %149 = load i32, i32* %148, align 4
  br label %155

150:                                              ; preds = %138
  %151 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %136, i64 1
  %152 = bitcast %"class.blink::ElementData"* %151 to %"class.blink::Attribute"*
  %153 = lshr i32 %140, 1
  %154 = and i32 %153, 268435455
  br label %155

155:                                              ; preds = %150, %143
  %156 = phi %"class.blink::Attribute"* [ %152, %150 ], [ %147, %143 ]
  %157 = phi i32 [ %154, %150 ], [ %149, %143 ]
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %156, i64 %158
  %160 = icmp eq i32 %157, 0
  br i1 %160, label %187, label %161

161:                                              ; preds = %155
  %162 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %102, align 8
  %163 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %162, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %162, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %165

165:                                              ; preds = %180, %161
  %166 = phi %"class.blink::Attribute"* [ %156, %161 ], [ %181, %180 ]
  %167 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %166, i64 0, i32 0, i32 0, i32 0
  %168 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %167, align 8
  %169 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %168, %162
  br i1 %169, label %183, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %168, i64 0, i32 3, i32 0, i32 0, i32 0
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %171, align 8
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %172, %173
  br i1 %174, label %175, label %180

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %168, i64 0, i32 4, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %177, %178
  br i1 %179, label %183, label %180

180:                                              ; preds = %175, %170
  %181 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %166, i64 1
  %182 = icmp eq %"class.blink::Attribute"* %181, %159
  br i1 %182, label %187, label %165

183:                                              ; preds = %175, %165
  %184 = icmp eq %"class.blink::Attribute"* %166, null
  %185 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %166, i64 0, i32 1
  %186 = select i1 %184, %"class.WTF::AtomicString"* %103, %"class.WTF::AtomicString"* %185
  br label %187

187:                                              ; preds = %180, %183, %131, %134, %155
  %188 = phi %"class.WTF::AtomicString"* [ %103, %155 ], [ %103, %134 ], [ %103, %131 ], [ %186, %183 ], [ %103, %180 ]
  %189 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %188, i64 0, i32 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %192, label %194

192:                                              ; preds = %187
  store i8* null, i8** %105, align 8
  %193 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %193, i64* %107, align 8
  br label %198

194:                                              ; preds = %187
  store %"class.WTF::StringImpl"* %190, %"class.WTF::StringImpl"** %104, align 8
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 1
  store %"class.WTF::StringImpl"* %197, %"class.WTF::StringImpl"** %106, align 8
  br label %198

198:                                              ; preds = %192, %194
  %199 = phi i32 [ %196, %194 ], [ 0, %192 ]
  store i32 %199, i32* %108, align 8
  %200 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.2)
  br i1 %200, label %201, label %258

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %114, i64 0, i32 0, i32 3, i32 0, i32 0
  %203 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %202, align 8
  %204 = icmp eq %"class.blink::ElementData"* %203, null
  br i1 %204, label %254, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %203, i64 0, i32 0, i32 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %205
  %211 = bitcast %"class.blink::ElementData"* %203 to %"class.blink::UniqueElementData"*
  %212 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %203, i64 1, i32 1
  %213 = bitcast %"class.blink::Member.14"* %212 to %"class.blink::Attribute"**
  %214 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %211, i64 0, i32 2, i32 0, i32 0, i32 2
  %216 = load i32, i32* %215, align 4
  br label %222

217:                                              ; preds = %205
  %218 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %203, i64 1
  %219 = bitcast %"class.blink::ElementData"* %218 to %"class.blink::Attribute"*
  %220 = lshr i32 %207, 1
  %221 = and i32 %220, 268435455
  br label %222

222:                                              ; preds = %217, %210
  %223 = phi %"class.blink::Attribute"* [ %219, %217 ], [ %214, %210 ]
  %224 = phi i32 [ %221, %217 ], [ %216, %210 ]
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %223, i64 %225
  %227 = icmp eq i32 %224, 0
  br i1 %227, label %254, label %228

228:                                              ; preds = %222
  %229 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %230 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %229, i64 0, i32 3, i32 0, i32 0, i32 0
  %231 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %229, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %232

232:                                              ; preds = %247, %228
  %233 = phi %"class.blink::Attribute"* [ %223, %228 ], [ %248, %247 ]
  %234 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %233, i64 0, i32 0, i32 0, i32 0
  %235 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %234, align 8
  %236 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %235, %229
  br i1 %236, label %250, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %235, i64 0, i32 3, i32 0, i32 0, i32 0
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %230, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %239, %240
  br i1 %241, label %242, label %247

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %235, i64 0, i32 4, i32 0, i32 0, i32 0
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %244, %245
  br i1 %246, label %250, label %247

247:                                              ; preds = %242, %237
  %248 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %233, i64 1
  %249 = icmp eq %"class.blink::Attribute"* %248, %226
  br i1 %249, label %254, label %232

250:                                              ; preds = %242, %232
  %251 = icmp eq %"class.blink::Attribute"* %233, null
  %252 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %233, i64 0, i32 1
  %253 = select i1 %251, %"class.WTF::AtomicString"* %103, %"class.WTF::AtomicString"* %252
  br label %254

254:                                              ; preds = %247, %250, %201, %222
  %255 = phi %"class.WTF::AtomicString"* [ %103, %222 ], [ %103, %201 ], [ %253, %250 ], [ %103, %247 ]
  %256 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %255, i64 0, i32 0
  %257 = call zeroext i1 @_ZN5blink16MIMETypeRegistry20IsJavaAppletMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %256) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #10
  br i1 %257, label %289, label %259

258:                                              ; preds = %121, %120, %198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #10
  br label %259

259:                                              ; preds = %258, %254
  %260 = load i32, i32* %116, align 8
  %261 = and i32 %260, 48
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %276

263:                                              ; preds = %259
  %264 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %112, align 8
  %265 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %115, i64 1, i32 2
  %266 = bitcast %"class.blink::Member"* %265 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %267 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %266, align 8
  %268 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %267, i64 0, i32 3, i32 0, i32 0, i32 0
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %270 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %264, i64 0, i32 3, i32 0, i32 0, i32 0
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %270, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %269, %271
  br i1 %272, label %273, label %276

273:                                              ; preds = %263
  %274 = bitcast %"class.blink::HTMLElement"* %114 to %"class.blink::HTMLObjectElement"*
  %275 = call zeroext i1 @_ZNK5blink17HTMLObjectElement18ContainsJavaAppletEv(%"class.blink::HTMLObjectElement"* nonnull %274)
  br i1 %275, label %289, label %276

276:                                              ; preds = %263, %259, %273
  br label %277

277:                                              ; preds = %276, %282
  %278 = phi %"class.blink::Node"* [ %280, %282 ], [ %115, %276 ]
  %279 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %278, i64 0, i32 5, i32 0, i32 0
  %280 = load %"class.blink::Node"*, %"class.blink::Node"** %279, align 8
  %281 = icmp eq %"class.blink::Node"* %280, null
  br i1 %281, label %289, label %282

282:                                              ; preds = %277
  %283 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %280, i64 0, i32 1
  %284 = load i32, i32* %283, align 8
  %285 = and i32 %284, 48
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %277

287:                                              ; preds = %282
  %288 = bitcast %"class.blink::Node"* %280 to %"class.blink::HTMLElement"*
  br label %113

289:                                              ; preds = %87, %254, %273, %277, %66, %63, %94, %59
  %290 = phi i1 [ true, %59 ], [ false, %94 ], [ false, %63 ], [ false, %66 ], [ false, %277 ], [ true, %273 ], [ true, %254 ], [ false, %87 ]
  ret i1 %290
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLObjectElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLObjectElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::ListedElement.base"* %3 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::ListedElement"* %4, %"class.blink::Document"* dereferenceable(2848) %1) #10
  %5 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLPlugInElement"* %5, %"class.blink::Document"* dereferenceable(2848) %1) #10
  ret void
}

declare void @_ZN5blink13ListedElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::ListedElement"*, %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

declare void @_ZN5blink17HTMLPlugInElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLPlugInElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::HTMLFormElement"* @_ZNK5blink17HTMLObjectElement9formOwnerEv(%"class.blink::HTMLObjectElement"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 2, i32 4, i32 0, i32 0
  %3 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %2, align 8
  ret %"class.blink::HTMLFormElement"* %3
}

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement18UseFallbackContentEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLObjectElement30WillUseFallbackContentAtLayoutEv(%"class.blink::HTMLObjectElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 3
  %4 = tail call zeroext i1 @_ZN5blink16MIMETypeRegistry20IsJavaAppletMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %3) #10
  %5 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  br i1 %4, label %6, label %16

6:                                                ; preds = %1
  %7 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %8 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 5, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  br i1 %15, label %58, label %17

16:                                               ; preds = %1, %6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  br label %17

17:                                               ; preds = %16, %14
  %18 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %58, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %58, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %58, label %29

29:                                               ; preds = %25
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kParamTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  br label %32

32:                                               ; preds = %54, %29
  %33 = phi %"class.blink::Node"* [ %27, %29 ], [ %56, %54 ]
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 12
  %37 = icmp eq i32 %36, 4
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = bitcast %"class.blink::Node"* %33 to %"class.blink::CharacterData"*
  %40 = call zeroext i1 @_ZNK5blink13CharacterData29ContainsOnlyWhitespaceOrEmptyEv(%"class.blink::CharacterData"* nonnull %39) #10
  br i1 %40, label %54, label %58

41:                                               ; preds = %32
  %42 = and i32 %35, 48
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %58

44:                                               ; preds = %41
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 1, i32 2
  %47 = bitcast %"class.blink::Member"* %46 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %50, %52
  br i1 %53, label %54, label %58

54:                                               ; preds = %44, %38
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 5, i32 0, i32 0
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %55, align 8
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %58, label %32

58:                                               ; preds = %54, %44, %41, %38, %17, %14, %25, %21
  %59 = phi i1 [ false, %21 ], [ false, %25 ], [ false, %14 ], [ false, %17 ], [ true, %38 ], [ true, %44 ], [ false, %54 ], [ true, %41 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HTMLObjectElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLObjectElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::ListedElement.base"* %3 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement17AssociateByParserEPNS_15HTMLFormElementE(%"class.blink::ListedElement"* %4, %"class.blink::HTMLFormElement"* %1) #10
  ret void
}

declare void @_ZN5blink13ListedElement17AssociateByParserEPNS_15HTMLFormElementE(%"class.blink::ListedElement"*, %"class.blink::HTMLFormElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn456_N5blink17HTMLObjectElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLObjectElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %4 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 49
  %5 = bitcast %"class.blink::Member"* %4 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement17AssociateByParserEPNS_15HTMLFormElementE(%"class.blink::ListedElement"* %5, %"class.blink::HTMLFormElement"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17HTMLObjectElement16DidFinishLoadingEv(%"class.blink::HTMLObjectElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 256
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %8 = tail call %"class.blink::WebPluginContainerImpl"* @_ZNK5blink17HTMLPlugInElement11OwnedPluginEv(%"class.blink::HTMLPlugInElement"* %7) #10
  %9 = icmp eq %"class.blink::WebPluginContainerImpl"* %8, null
  br i1 %9, label %10, label %33

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Frame"*, %"class.blink::Frame"** %11, align 8
  %13 = icmp eq %"class.blink::Frame"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %12, i64 0, i32 23
  %16 = load i8, i8* %15, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %33, label %18

18:                                               ; preds = %14, %10
  %19 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %20 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %19, align 8
  %21 = icmp eq %"class.blink::HTMLImageLoader"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement18HasPendingActivityEv(%"class.blink::HTMLPlugInElement"* %7) #10
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement11IsImageTypeEv(%"class.blink::HTMLPlugInElement"* %7) #10
  br i1 %25, label %33, label %26

26:                                               ; preds = %18, %24, %22
  %27 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement18UseFallbackContentEv(%"class.blink::HTMLPlugInElement"* %7) #10
  br i1 %27, label %33, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 6
  %30 = load i8, i8* %29, align 8
  %31 = and i8 %30, 1
  %32 = icmp ne i8 %31, 0
  br label %33

33:                                               ; preds = %14, %1, %28, %26, %24, %6
  %34 = phi i1 [ false, %1 ], [ true, %6 ], [ true, %14 ], [ true, %24 ], [ true, %26 ], [ %32, %28 ]
  ret i1 %34
}

declare %"class.blink::WebPluginContainerImpl"* @_ZNK5blink17HTMLPlugInElement11OwnedPluginEv(%"class.blink::HTMLPlugInElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Frame"* @_ZNK5blink21HTMLFrameOwnerElement12ContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Frame"*, %"class.blink::Frame"** %2, align 8
  ret %"class.blink::Frame"* %3
}

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement18HasPendingActivityEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink17HTMLObjectElement15DefaultTabIndexEv(%"class.blink::HTMLObjectElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementEPKNS_13ListedElementE(%"class.blink::ListedElement"* readnone) local_unnamed_addr #7 {
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -7, i32 10
  %4 = bitcast i32* %3 to %"class.blink::HTMLObjectElement"*
  %5 = select i1 %2, %"class.blink::HTMLObjectElement"* null, %"class.blink::HTMLObjectElement"* %4
  ret %"class.blink::HTMLObjectElement"* %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* readnone dereferenceable(64)) local_unnamed_addr #7 {
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -7, i32 10
  %4 = bitcast i32* %3 to %"class.blink::HTMLObjectElement"*
  %5 = select i1 %2, %"class.blink::HTMLObjectElement"* null, %"class.blink::HTMLObjectElement"* %4
  ret %"class.blink::HTMLObjectElement"* %5
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17HTMLObjectElementD2Ev(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::ListedElement.base", %"class.blink::ListedElement.base"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 4, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #10
  br label %25

25:                                               ; preds = %1, %21, %24
  %26 = bitcast %"class.blink::ListedElement.base"* %6 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"* %26) #10
  %27 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"* %27) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17HTMLObjectElementD0Ev(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::ListedElement.base", %"class.blink::ListedElement.base"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 4, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #10
  br label %25

25:                                               ; preds = %1, %21, %24
  %26 = bitcast %"class.blink::ListedElement.base"* %6 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"* %26) #10
  %27 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"* %27) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #10
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink17HTMLObjectElement18GetWrapperTypeInfoEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17HTMLObjectElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink17HTMLPlugInElement23RemoveAllEventListenersEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement19IsFrameOwnerElementEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLObjectElement23CanContainRangeEndPointEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %3 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement18UseFallbackContentEv(%"class.blink::HTMLPlugInElement"* %2) #10
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 6
  %6 = load i8, i8* %5, align 8
  %7 = and i8 %6, 1
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %4
  %10 = phi i1 [ true, %1 ], [ %8, %4 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink17HTMLPlugInElement10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::HTMLPlugInElement"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement17CanStartSelectionEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #1

declare void @_ZN5blink17HTMLPlugInElement16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::HTMLPlugInElement"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink17HTMLPlugInElement16DetachLayoutTreeEb(%"class.blink::HTMLPlugInElement"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink17HTMLPlugInElement29WillRespondToMouseClickEventsEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink17HTMLPlugInElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLPlugInElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #10
  ret %"class.blink::ComputedStyle"* %4
}

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLObjectElement20ChildrenCanHaveStyleEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::HTMLObjectElement"* %0 to %"class.blink::HTMLPlugInElement"*
  %3 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement18UseFallbackContentEv(%"class.blink::HTMLPlugInElement"* %2) #10
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 6
  %6 = load i8, i8* %5, align 8
  %7 = and i8 %6, 1
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %4
  %10 = phi i1 [ true, %1 ], [ %8, %4 ]
  ret i1 %10
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink17HTMLPlugInElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::HTMLPlugInElement"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLPlugInElement13SupportsFocusEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement19IsKeyboardFocusableEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink17HTMLPlugInElement21FinishParsingChildrenEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLObjectElement20IsFormControlElementEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement12willValidateEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink11HTMLElement14IsValidElementEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement11IsAdRelatedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink17HTMLPlugInElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink17HTMLObjectElement16GetNamedItemTypeEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement16IsFocusableStyleEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink17HTMLPlugInElement25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::HTMLPlugInElement"*, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement19HasCustomFocusLogicEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HTMLElement14autocapitalizeEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink17HTMLPlugInElement15IsPluginElementEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement20IsInteractiveContentEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink17HTMLObjectElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 0, i32 4
  ret %"class.blink::FormAssociated"* %2
}

declare void @_ZN5blink17HTMLPlugInElement22DisconnectContentFrameEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLFrameOwnerElement12SetCollapsedEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink17HTMLObjectElement9OwnerTypeEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

declare void @_ZN5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"* dereferenceable(392)) unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement17ClearContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*) unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement12DispatchLoadEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.blink::FramePolicy"* @_ZNK5blink21HTMLFrameOwnerElement14GetFramePolicyEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 4
  ret %"struct.blink::FramePolicy"* %2
}

declare void @_ZN5blink17HTMLPlugInElement26IntrinsicSizingInfoChangedEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #10
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %68
  tail call void @llvm.trap() #10
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %80

80:                                               ; preds = %58, %63, %78
  ret %"class.WTF::StringImpl"* %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21HTMLFrameOwnerElement13ScrollbarModeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21HTMLFrameOwnerElement11MarginWidthEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21HTMLFrameOwnerElement12MarginHeightEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement15AllowFullscreenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::EmbeddedContentView"*, %"class.blink::EmbeddedContentView"** %2, align 8
  %4 = icmp eq %"class.blink::EmbeddedContentView"* %3, null
  ret i1 %4
}

declare i32 @_ZNK5blink21HTMLFrameOwnerElement14GetColorSchemeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SecurityOrigin"* @_ZNK5blink21HTMLFrameOwnerElement29GetOriginForPermissionsPolicyEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin18CreateUniqueOpaqueEv() #10
  ret %"class.blink::SecurityOrigin"* %2
}

declare void @_ZNK5blink17HTMLPlugInElement24ConstructContainerPolicyEv(%"class.std::__1::vector"* sret, %"class.blink::HTMLPlugInElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21HTMLFrameOwnerElement23ConstructRequiredPolicyEv(%"class.base::flat_map"* noalias sret, %"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.base::flat_map"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZNK5blink21HTMLFrameOwnerElement25ConstructTrustTokenParamsEv(%"class.mojo::StructPtr.2780"* sret, %"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement7IsLocalEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement8IsRemoteEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 7
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink21HTMLFrameOwnerElement23ReferrerPolicyAttributeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLPlugInElement8IsPluginEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutEmbeddedContent"* @_ZNK5blink17HTMLPlugInElement34LayoutEmbeddedContentForJSBindingsEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17HTMLObjectElement14IsEnumeratableEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink17HTMLObjectElement17validationMessageEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17HTMLObjectElement17setCustomValidityERKN3WTF6StringE(%"class.blink::HTMLObjectElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink17HTMLObjectElementD1Ev(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 -1, i32 0, i32 13
  %3 = bitcast %"class.blink::Member.294"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %2, i64 10
  %5 = bitcast %"class.blink::Member.294"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %2, i64 13
  %7 = bitcast %"class.blink::Member.294"* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %2, i64 26
  %9 = bitcast %"class.blink::Member.294"* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %2, i64 49
  %11 = bitcast %"class.blink::Member.294"* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %2, i64 57
  %13 = bitcast %"class.blink::Member.294"* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %2, i64 58
  %15 = bitcast %"class.blink::Member.294"* %14 to %"class.WTF::StringImpl"**
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %1, %27, %30
  %32 = bitcast %"class.blink::Member.294"* %10 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"* %32) #10
  %33 = bitcast %"class.blink::Member.294"* %2 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"* %33) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink17HTMLObjectElementD0Ev(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 -1, i32 0, i32 13
  %3 = bitcast %"class.blink::Member.294"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %2, i64 10
  %5 = bitcast %"class.blink::Member.294"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %2, i64 13
  %7 = bitcast %"class.blink::Member.294"* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %2, i64 26
  %9 = bitcast %"class.blink::Member.294"* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %2, i64 49
  %11 = bitcast %"class.blink::Member.294"* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %2, i64 57
  %13 = bitcast %"class.blink::Member.294"* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::Member.294", %"class.blink::Member.294"* %2, i64 58
  %15 = bitcast %"class.blink::Member.294"* %14 to %"class.WTF::StringImpl"**
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %1, %27, %30
  %32 = bitcast %"class.blink::Member.294"* %10 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"* %32) #10
  %33 = bitcast %"class.blink::Member.294"* %2 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"* %33) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement7IsLocalEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement8IsRemoteEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink17HTMLPlugInElement8IsPluginEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Frame"* @_ZThn104_NK5blink21HTMLFrameOwnerElement12ContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 14
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"class.blink::Frame"**
  %5 = load %"class.blink::Frame"*, %"class.blink::Frame"** %4, align 8
  ret %"class.blink::Frame"* %5
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"* dereferenceable(392)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement17ClearContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.blink::FramePolicy"* @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetFramePolicyEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 16
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"struct.blink::FramePolicy"*
  ret %"struct.blink::FramePolicy"* %4
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement12DispatchLoadEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink17HTMLPlugInElement26IntrinsicSizingInfoChangedEv(%"class.blink::HTMLPlugInElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn104_NK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 12
  %5 = bitcast %"class.blink::FrameOwner"* %4 to %"class.blink::ElementData"**
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.14"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %58, %56
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #10
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %70
  tail call void @llvm.trap() #10
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %60, %65, %80
  ret %"class.WTF::StringImpl"* %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn104_NK5blink21HTMLFrameOwnerElement13ScrollbarModeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn104_NK5blink21HTMLFrameOwnerElement11MarginWidthEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn104_NK5blink21HTMLFrameOwnerElement12MarginHeightEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement15AllowFullscreenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 15
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"class.blink::EmbeddedContentView"**
  %5 = load %"class.blink::EmbeddedContentView"*, %"class.blink::EmbeddedContentView"** %4, align 8
  %6 = icmp eq %"class.blink::EmbeddedContentView"* %5, null
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetColorSchemeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FrameOwner19CSPAttributeChangedEv(%"class.blink::FrameOwner"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"class.blink::HTMLFrameOwnerElement"*
  %5 = zext i1 %1 to i8
  %6 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %4, i64 0, i32 7
  store i8 %5, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn208_N5blink17HTMLObjectElementD1Ev(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 -1, i32 0, i32 5, i32 3, i32 3
  %3 = bitcast %"struct.url::Component"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 10
  %5 = bitcast %"struct.url::Component"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 13
  %7 = bitcast %"struct.url::Component"* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 26
  %9 = bitcast %"struct.url::Component"* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 49
  %11 = bitcast %"struct.url::Component"* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 57
  %13 = bitcast %"struct.url::Component"* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 58
  %15 = bitcast %"struct.url::Component"* %14 to %"class.WTF::StringImpl"**
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %1, %27, %30
  %32 = bitcast %"struct.url::Component"* %10 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"* %32) #10
  %33 = bitcast %"struct.url::Component"* %2 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"* %33) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn208_N5blink17HTMLObjectElementD0Ev(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 -1, i32 0, i32 5, i32 3, i32 3
  %3 = bitcast %"struct.url::Component"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 10
  %5 = bitcast %"struct.url::Component"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 13
  %7 = bitcast %"struct.url::Component"* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 26
  %9 = bitcast %"struct.url::Component"* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 49
  %11 = bitcast %"struct.url::Component"* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 57
  %13 = bitcast %"struct.url::Component"* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 58
  %15 = bitcast %"struct.url::Component"* %14 to %"class.WTF::StringImpl"**
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %1, %27, %30
  %32 = bitcast %"struct.url::Component"* %10 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"* %32) #10
  %33 = bitcast %"struct.url::Component"* %2 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"* %33) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_17HTMLPlugInElementEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -26
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::Node"*
  %4 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %5 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %5, i64 10
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* %7(%"class.blink::Node"* %3) #10
  %9 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %8) #10
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_17HTMLPlugInElementEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -26
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::HTMLPlugInElement"*
  %4 = tail call zeroext i1 @_ZNK5blink17HTMLPlugInElement18HasPendingActivityEv(%"class.blink::HTMLPlugInElement"* %3) #10
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn392_N5blink17HTMLObjectElementD1Ev(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 2
  %3 = bitcast %"class.blink::QualifiedName"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 10
  %5 = bitcast %"class.blink::QualifiedName"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 13
  %7 = bitcast %"class.blink::QualifiedName"* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 26
  %9 = bitcast %"class.blink::QualifiedName"* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 49
  %11 = bitcast %"class.blink::QualifiedName"* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 57
  %13 = bitcast %"class.blink::QualifiedName"* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 58
  %15 = bitcast %"class.blink::QualifiedName"* %14 to %"class.WTF::StringImpl"**
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %1, %27, %30
  %32 = bitcast %"class.blink::QualifiedName"* %10 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"* %32) #10
  %33 = bitcast %"class.blink::QualifiedName"* %2 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"* %33) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn392_N5blink17HTMLObjectElementD0Ev(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 2
  %3 = bitcast %"class.blink::QualifiedName"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 10
  %5 = bitcast %"class.blink::QualifiedName"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 13
  %7 = bitcast %"class.blink::QualifiedName"* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 26
  %9 = bitcast %"class.blink::QualifiedName"* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 49
  %11 = bitcast %"class.blink::QualifiedName"* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 57
  %13 = bitcast %"class.blink::QualifiedName"* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }, { [211 x i8*], [3 x i8*], [28 x i8*], [7 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink17HTMLObjectElementE, i64 0, inrange i32 5, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 58
  %15 = bitcast %"class.blink::QualifiedName"* %14 to %"class.WTF::StringImpl"**
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %1, %27, %30
  %32 = bitcast %"class.blink::QualifiedName"* %10 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"* %32) #10
  %33 = bitcast %"class.blink::QualifiedName"* %2 to %"class.blink::HTMLPlugInElement"*
  tail call void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"* %33) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn392_NK5blink17HTMLObjectElement20IsFormControlElementEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink13ListedElement29IsFormControlElementWithStateEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement18IsElementInternalsEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn392_NK5blink17HTMLObjectElement14IsEnumeratableEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ListedElement7GetNameEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ListedElement16AppendToFormDataERNS_8FormDataE(%"class.blink::ListedElement"*, %"class.blink::FormData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink13ListedElement11CustomErrorEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement11HasBadInputEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement15PatternMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement13RangeOverflowEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement14RangeUnderflowEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement12StepMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement7TooLongEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement8TooShortEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement12TypeMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement12ValueMissingEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn392_NK5blink17HTMLObjectElement17validationMessageEv(%"class.blink::HTMLObjectElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement20ValidationSubMessageEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn392_N5blink17HTMLObjectElement17setCustomValidityERKN3WTF6StringE(%"class.blink::HTMLObjectElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink13ListedElement16ValidationAnchorEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZN5blink13ListedElement24DisabledAttributeChangedEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv(%"class.blink::ListedElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink13ListedElement25ClassSupportsStateRestoreEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZNK5blink13ListedElement20SaveFormControlStateEv() unnamed_addr

declare void @_ZN5blink13ListedElement23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::ListedElement"*, %"class.blink::FormControlState"*) unnamed_addr #1

declare void @_ZN5blink13ListedElement14WillChangeFormEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZN5blink13ListedElement13DidChangeFormEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement18RecalcWillValidateEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZN5blink17HTMLPlugInElement24UpdateServiceTypeIfEmptyEv(%"class.blink::HTMLPlugInElement"*) local_unnamed_addr #1

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.WTF::HashCountedSet.2944"* @_ZN5blink23SubframeLoadingDisabler20DisabledSubtreeRootsEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.2946"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2946", %"class.WTF::HashTable.2946"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2949"*, %"struct.WTF::KeyValuePair.2949"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.2949"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.2946", %"class.WTF::HashTable.2946"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::Node"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2949", %"struct.WTF::KeyValuePair.2949"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2949", %"struct.WTF::KeyValuePair.2949"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::Node"*
  %38 = icmp eq %"class.blink::Node"* %36, %37
  br i1 %38, label %68, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %59, %39
  %54 = phi i64 [ %33, %39 ], [ %63, %59 ]
  %55 = phi i64 [ 0, %39 ], [ %61, %59 ]
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.2949", %"struct.WTF::KeyValuePair.2949"* %4, i64 %54, i32 0, i32 0, i32 0
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %56, align 8
  %58 = icmp eq %"class.blink::Node"* %57, null
  br i1 %58, label %68, label %59

59:                                               ; preds = %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %52, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2949", %"struct.WTF::KeyValuePair.2949"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2949", %"struct.WTF::KeyValuePair.2949"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::Node"*, %"class.blink::Node"** %65, align 8
  %67 = icmp eq %"class.blink::Node"* %66, %37
  br i1 %67, label %68, label %53

68:                                               ; preds = %53, %59, %2, %6
  %69 = phi %"struct.WTF::KeyValuePair.2949"* [ null, %2 ], [ %34, %6 ], [ null, %53 ], [ %64, %59 ]
  %70 = icmp ne %"struct.WTF::KeyValuePair.2949"* %69, null
  ret i1 %70
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink17HTMLPlugInElementD2Ev(%"class.blink::HTMLPlugInElement"*) unnamed_addr #5

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin18CreateUniqueOpaqueEv() local_unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2692"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.2692", %"class.WTF::HashTable.2692"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %63

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0)) #10
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink19SpecificTrustedTypeEEEEEPKcv, i64 0, i64 0)) #10
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.2695"*
  %31 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %55, %26
  %34 = phi i64 [ 0, %26 ], [ %59, %55 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %30, i64 %34
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #10
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  call void @llvm.trap() #10
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %33
  %56 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %57 = bitcast %"struct.WTF::KeyValuePair.2695"* %35 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %30, i64 %34, i32 1
  store i32 -128, i32* %58, align 8
  %59 = add nuw nsw i64 %34, 1
  %60 = icmp eq i64 %59, %27
  br i1 %60, label %61, label %33

61:                                               ; preds = %55
  %62 = call %"struct.WTF::KeyValuePair.2695"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.2692"* %0, %"struct.WTF::KeyValuePair.2695"* %30, i32 %17, %"struct.WTF::KeyValuePair.2695"* null) #10
  br label %63

63:                                               ; preds = %61, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2695"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.2692"*, %"struct.WTF::KeyValuePair.2695"*, i32, %"struct.WTF::KeyValuePair.2695"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.2695"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2692", %"class.WTF::HashTable.2692"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.2692", %"class.WTF::HashTable.2692"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.2692"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.2695"*, %"struct.WTF::KeyValuePair.2695"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2695"* %16 to i64
  br label %61

18:                                               ; preds = %160
  %19 = bitcast %"class.WTF::HashTable.2692"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %161, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.2695"* [ null, %10 ], [ %164, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %162, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.2695"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %25, i64 %32
  %34 = bitcast %"struct.WTF::KeyValuePair.2695"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #10
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #10
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.2692", %"class.WTF::HashTable.2692"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"struct.WTF::KeyValuePair.2695"* %23

61:                                               ; preds = %13, %160
  %62 = phi i64 [ %17, %13 ], [ %161, %160 ]
  %63 = phi i32 [ %7, %13 ], [ %162, %160 ]
  %64 = phi %"struct.WTF::KeyValuePair.2695"* [ %16, %13 ], [ %163, %160 ]
  %65 = phi %"struct.WTF::KeyValuePair.2695"* [ null, %13 ], [ %164, %160 ]
  %66 = phi i32 [ 0, %13 ], [ %165, %160 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %64, i64 %67
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"struct.WTF::KeyValuePair.2695"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = inttoptr i64 %71 to %"class.WTF::StringImpl"*
  switch i64 %71, label %73 [
    i64 -1, label %160
    i64 0, label %160
  ]

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = lshr i32 %75, 8
  %77 = and i32 %76, %14
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %1, i64 %78
  %80 = ptrtoint %"struct.WTF::KeyValuePair.2695"* %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %100, label %84

84:                                               ; preds = %73
  %85 = xor i32 %76, -1
  %86 = lshr i32 %75, 31
  %87 = add nsw i32 %86, %85
  %88 = shl i32 %87, 12
  %89 = xor i32 %88, %87
  %90 = lshr i32 %89, 7
  %91 = xor i32 %90, %89
  %92 = shl i32 %91, 2
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 20
  %95 = xor i32 %94, %93
  %96 = or i32 %95, 1
  %97 = zext i32 %96 to i64
  br label %106

98:                                               ; preds = %118
  %99 = ptrtoint %"struct.WTF::KeyValuePair.2695"* %124 to i64
  br label %100

100:                                              ; preds = %98, %73
  %101 = phi i64 [ %80, %73 ], [ %99, %98 ]
  %102 = phi %"struct.WTF::KeyValuePair.2695"* [ null, %73 ], [ %119, %98 ]
  %103 = icmp eq %"struct.WTF::KeyValuePair.2695"* %102, null
  %104 = ptrtoint %"struct.WTF::KeyValuePair.2695"* %102 to i64
  %105 = select i1 %103, i64 %101, i64 %104
  br label %129

106:                                              ; preds = %118, %84
  %107 = phi %"struct.WTF::KeyValuePair.2695"* [ null, %84 ], [ %119, %118 ]
  %108 = phi i64 [ %80, %84 ], [ %125, %118 ]
  %109 = phi %"struct.WTF::KeyValuePair.2695"* [ %79, %84 ], [ %124, %118 ]
  %110 = phi i64 [ %78, %84 ], [ %123, %118 ]
  %111 = phi i64 [ 0, %84 ], [ %121, %118 ]
  %112 = bitcast %"struct.WTF::KeyValuePair.2695"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %118, label %115

115:                                              ; preds = %106
  %116 = bitcast i8* %113 to %"class.WTF::StringImpl"*
  %117 = icmp eq %"class.WTF::StringImpl"* %72, %116
  br i1 %117, label %129, label %118

118:                                              ; preds = %115, %106
  %119 = phi %"struct.WTF::KeyValuePair.2695"* [ %107, %115 ], [ %109, %106 ]
  %120 = icmp eq i64 %111, 0
  %121 = select i1 %120, i64 %97, i64 %111
  %122 = add i64 %121, %110
  %123 = and i64 %122, %15
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %1, i64 %123
  %125 = ptrtoint %"struct.WTF::KeyValuePair.2695"* %124 to i64
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %98, label %106

129:                                              ; preds = %115, %100
  %130 = phi i64 [ %105, %100 ], [ %108, %115 ]
  %131 = inttoptr i64 %130 to %"struct.WTF::KeyValuePair.2695"*
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #10
  br label %148

148:                                              ; preds = %129, %144, %147
  %149 = load i64, i64* %70, align 8
  %150 = inttoptr i64 %130 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %131, i64 0, i32 1
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %64, i64 %67, i32 1
  %153 = load i32, i32* %152, align 8
  store i32 %153, i32* %151, align 8
  %154 = load %"struct.WTF::KeyValuePair.2695"*, %"struct.WTF::KeyValuePair.2695"** %9, align 8
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %154, i64 %67
  %156 = icmp eq %"struct.WTF::KeyValuePair.2695"* %155, %3
  %157 = select i1 %156, %"struct.WTF::KeyValuePair.2695"* %131, %"struct.WTF::KeyValuePair.2695"* %65
  %158 = load i32, i32* %6, align 8
  %159 = ptrtoint %"struct.WTF::KeyValuePair.2695"* %154 to i64
  br label %160

160:                                              ; preds = %61, %61, %148
  %161 = phi i64 [ %62, %61 ], [ %159, %148 ], [ %62, %61 ]
  %162 = phi i32 [ %63, %61 ], [ %158, %148 ], [ %63, %61 ]
  %163 = phi %"struct.WTF::KeyValuePair.2695"* [ %64, %61 ], [ %154, %148 ], [ %64, %61 ]
  %164 = phi %"struct.WTF::KeyValuePair.2695"* [ %65, %61 ], [ %157, %148 ], [ %65, %61 ]
  %165 = add i32 %66, 1
  %166 = icmp eq i32 %165, %162
  br i1 %166, label %18, label %61
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2695"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.2692"*, %"class.WTF::AtomicString"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2692", %"class.WTF::HashTable.2692"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2695"*, %"struct.WTF::KeyValuePair.2695"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2695"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2695"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2692"* %0, %"struct.WTF::KeyValuePair.2695"* null)
  %9 = load %"struct.WTF::KeyValuePair.2695"*, %"struct.WTF::KeyValuePair.2695"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2695"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2692", %"class.WTF::HashTable.2692"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %97, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.2695"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.2695"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.2695"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %151, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.2695"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.2695"* %53, null
  br i1 %63, label %97, label %64

64:                                               ; preds = %62
  %65 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %86, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #10
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !3

83:                                               ; preds = %74
  tail call void @llvm.trap() #10
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  br label %86

86:                                               ; preds = %64, %69, %84
  %87 = ptrtoint %"class.WTF::StringImpl"* %67 to i64
  %88 = bitcast %"struct.WTF::KeyValuePair.2695"* %53 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %53, i64 0, i32 1
  store i32 -128, i32* %89, align 8
  %90 = getelementptr inbounds %"class.WTF::HashTable.2692", %"class.WTF::HashTable.2692"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, 2147483647
  %93 = and i32 %92, 2147483647
  %94 = and i32 %91, -2147483648
  %95 = or i32 %93, %94
  store i32 %95, i32* %90, align 8
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %97

97:                                               ; preds = %10, %62, %86
  %98 = phi %"class.WTF::StringImpl"* [ %96, %86 ], [ %17, %62 ], [ %17, %10 ]
  %99 = phi %"struct.WTF::KeyValuePair.2695"* [ %53, %86 ], [ %58, %62 ], [ %23, %10 ]
  %100 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %100, label %118, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = zext i32 %108 to i33
  %110 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #10
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !3

115:                                              ; preds = %106
  tail call void @llvm.trap() #10
  unreachable

116:                                              ; preds = %106
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %107, align 4
  br label %118

118:                                              ; preds = %116, %101, %97
  %119 = ptrtoint %"class.WTF::StringImpl"* %98 to i64
  %120 = bitcast %"struct.WTF::KeyValuePair.2695"* %99 to i64*
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %99, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  store i64 %119, i64* %120, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %137

137:                                              ; preds = %118, %133, %136
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %99, i64 0, i32 1
  %139 = load i32, i32* %2, align 4
  store i32 %139, i32* %138, align 4
  %140 = getelementptr inbounds %"class.WTF::HashTable.2692", %"class.WTF::HashTable.2692"* %0, i64 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %140, align 4
  %143 = getelementptr inbounds %"class.WTF::HashTable.2692", %"class.WTF::HashTable.2692"* %0, i64 0, i32 3
  %144 = load i32, i32* %143, align 8
  %145 = add i32 %144, %142
  %146 = shl i32 %145, 1
  %147 = load i32, i32* %12, align 8
  %148 = icmp ult i32 %146, %147
  br i1 %148, label %151, label %149

149:                                              ; preds = %137
  %150 = tail call %"struct.WTF::KeyValuePair.2695"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2692"* %0, %"struct.WTF::KeyValuePair.2695"* %99)
  br label %151

151:                                              ; preds = %49, %137, %149
  %152 = phi i8 [ 1, %137 ], [ 1, %149 ], [ 0, %49 ]
  %153 = phi %"struct.WTF::KeyValuePair.2695"* [ %99, %137 ], [ %150, %149 ], [ %42, %49 ]
  %154 = insertvalue { %"struct.WTF::KeyValuePair.2695"*, i8 } undef, %"struct.WTF::KeyValuePair.2695"* %153, 0
  %155 = insertvalue { %"struct.WTF::KeyValuePair.2695"*, i8 } %154, i8 %152, 1
  ret { %"struct.WTF::KeyValuePair.2695"*, i8 } %155
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2695"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2692"*, %"struct.WTF::KeyValuePair.2695"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2692", %"class.WTF::HashTable.2692"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2692", %"class.WTF::HashTable.2692"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringEN5blink19SpecificTrustedTypeEEEEEPKcv, i64 0, i64 0)) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.2695"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %63, %38
  %42 = phi i64 [ 0, %38 ], [ %67, %63 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %36, i64 %42
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #10
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !3

60:                                               ; preds = %51
  call void @llvm.trap() #10
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %63

63:                                               ; preds = %61, %46, %41
  %64 = ptrtoint %"class.WTF::StringImpl"* %44 to i64
  %65 = bitcast %"struct.WTF::KeyValuePair.2695"* %43 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.2695", %"struct.WTF::KeyValuePair.2695"* %36, i64 %42, i32 1
  store i32 -128, i32* %66, align 8
  %67 = add nuw nsw i64 %42, 1
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %41

69:                                               ; preds = %63, %31
  %70 = call %"struct.WTF::KeyValuePair.2695"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink19SpecificTrustedTypeEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.2692"* %0, %"struct.WTF::KeyValuePair.2695"* %36, i32 %32, %"struct.WTF::KeyValuePair.2695"* %1) #10
  ret %"struct.WTF::KeyValuePair.2695"* %70
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN5blink15HTMLImageLoaderC1EPNS_7ElementE(%"class.blink::HTMLImageLoader"*, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11ImageLoaderEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #10
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %40, i8* %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #10
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ImageLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ImageLoader"*
  tail call void @_ZNK5blink11ImageLoader5TraceEPNS_7VisitorE(%"class.blink::ImageLoader"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11ImageLoaderEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ImageLoader"*
  %3 = bitcast i8* %0 to void (%"class.blink::ImageLoader"*)***
  %4 = load void (%"class.blink::ImageLoader"*)**, void (%"class.blink::ImageLoader"*)*** %3, align 8
  %5 = load void (%"class.blink::ImageLoader"*)*, void (%"class.blink::ImageLoader"*)** %4, align 8
  tail call void %5(%"class.blink::ImageLoader"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11ImageLoaderEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink11ImageLoader5TraceEPNS_7VisitorE(%"class.blink::ImageLoader"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"**, i8 } @_ZN3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_S2_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2699"*, %"class.WTF::StringImpl"** dereferenceable(8), %"class.WTF::StringImpl"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 0
  %7 = load %"class.WTF::StringImpl"**, %"class.WTF::StringImpl"*** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"** %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"class.WTF::StringImpl"** @_ZN3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.2699"* %0, %"class.WTF::StringImpl"** null)
  %11 = load %"class.WTF::StringImpl"**, %"class.WTF::StringImpl"*** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"class.WTF::StringImpl"** [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1, align 8
  %19 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %18) #10
  %20 = and i32 %19, %16
  %21 = zext i32 %20 to i64
  %22 = bitcast %"class.WTF::StringView"* %4 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %27 = bitcast %"class.WTF::StringView"* %5 to i8*
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %30 = bitcast i8** %29 to %"class.WTF::StringImpl"**
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %32 = xor i32 %19, -1
  %33 = lshr i32 %19, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %61, %12
  %46 = phi i64 [ 0, %12 ], [ %64, %61 ]
  %47 = phi i64 [ %21, %12 ], [ %66, %61 ]
  %48 = phi %"class.WTF::StringImpl"** [ null, %12 ], [ %62, %61 ]
  %49 = getelementptr inbounds %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, i64 %47
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  switch i64 %51, label %52 [
    i64 0, label %67
    i64 -1, label %61
  ]

52:                                               ; preds = %45
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %23, align 8
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 1
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %25, align 8
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %28, align 8
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %30, align 8
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %31, align 8
  %60 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  br i1 %60, label %95, label %61

61:                                               ; preds = %45, %52
  %62 = phi %"class.WTF::StringImpl"** [ %48, %52 ], [ %49, %45 ]
  %63 = icmp eq i64 %46, 0
  %64 = select i1 %63, i64 %44, i64 %46
  %65 = add i64 %64, %47
  %66 = and i64 %65, %17
  br label %45

67:                                               ; preds = %45
  %68 = icmp eq %"class.WTF::StringImpl"** %48, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.WTF::StringImpl"** %49 to i64*
  br label %79

71:                                               ; preds = %67
  %72 = bitcast %"class.WTF::StringImpl"** %48 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 3
  %74 = load i32, i32* %73, align 8
  %75 = add i32 %74, 2147483647
  %76 = and i32 %75, 2147483647
  %77 = and i32 %74, -2147483648
  %78 = or i32 %76, %77
  store i32 %78, i32* %73, align 8
  br label %79

79:                                               ; preds = %69, %71
  %80 = phi i64* [ %70, %69 ], [ %72, %71 ]
  %81 = phi %"class.WTF::StringImpl"** [ %49, %69 ], [ %48, %71 ]
  %82 = bitcast %"class.WTF::StringImpl"** %2 to i64*
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %80, align 8
  %84 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %84, align 4
  %87 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, %86
  %90 = shl i32 %89, 1
  %91 = load i32, i32* %14, align 8
  %92 = icmp ult i32 %90, %91
  br i1 %92, label %95, label %93

93:                                               ; preds = %79
  %94 = call %"class.WTF::StringImpl"** @_ZN3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.2699"* %0, %"class.WTF::StringImpl"** %81)
  br label %95

95:                                               ; preds = %52, %79, %93
  %96 = phi i8 [ 1, %79 ], [ 1, %93 ], [ 0, %52 ]
  %97 = phi %"class.WTF::StringImpl"** [ %81, %79 ], [ %94, %93 ], [ %49, %52 ]
  %98 = insertvalue { %"class.WTF::StringImpl"**, i8 } undef, %"class.WTF::StringImpl"** %97, 0
  %99 = insertvalue { %"class.WTF::StringImpl"**, i8 } %98, i8 %96, 1
  ret { %"class.WTF::StringImpl"**, i8 } %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"** @_ZN3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.2699"*, %"class.WTF::StringImpl"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPNS_10StringImplEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"**
  %37 = call %"class.WTF::StringImpl"** @_ZN3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.2699"* %0, %"class.WTF::StringImpl"** %36, i32 %32, %"class.WTF::StringImpl"** %1) #10
  ret %"class.WTF::StringImpl"** %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"** @_ZN3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.2699"*, %"class.WTF::StringImpl"**, i32, %"class.WTF::StringImpl"**) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2699", align 8
  %6 = bitcast %"class.WTF::HashTable.2699"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2699"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::StringImpl"** %1, %"class.WTF::StringImpl"*** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::StringImpl"** %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2699"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2699"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::StringImpl"**, %"class.WTF::StringImpl"*** %15, align 8
  %23 = ptrtoint %"class.WTF::StringImpl"** %22 to i64
  br label %42

24:                                               ; preds = %63
  %25 = bitcast %"class.WTF::HashTable.2699"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2699"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %64, %24 ]
  %33 = phi %"class.WTF::StringImpl"** [ null, %16 ], [ %67, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %65, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"class.WTF::StringImpl"** %33

42:                                               ; preds = %21, %63
  %43 = phi i64 [ %64, %63 ], [ %23, %21 ]
  %44 = phi i32 [ %65, %63 ], [ %13, %21 ]
  %45 = phi %"class.WTF::StringImpl"** [ %66, %63 ], [ %22, %21 ]
  %46 = phi %"class.WTF::StringImpl"** [ %67, %63 ], [ null, %21 ]
  %47 = phi i32 [ %68, %63 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, i64 %48
  %50 = bitcast %"class.WTF::StringImpl"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %63
    i64 0, label %63
  ]

52:                                               ; preds = %42
  %53 = call { %"class.WTF::StringImpl"**, i8 } @_ZN3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.2699"* nonnull %5, %"class.WTF::StringImpl"** dereferenceable(8) %49) #10
  %54 = extractvalue { %"class.WTF::StringImpl"**, i8 } %53, 0
  %55 = load i64, i64* %50, align 8
  %56 = bitcast %"class.WTF::StringImpl"** %54 to i64*
  store i64 %55, i64* %56, align 8
  %57 = load %"class.WTF::StringImpl"**, %"class.WTF::StringImpl"*** %15, align 8
  %58 = getelementptr inbounds %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, i64 %48
  %59 = icmp eq %"class.WTF::StringImpl"** %58, %3
  %60 = select i1 %59, %"class.WTF::StringImpl"** %54, %"class.WTF::StringImpl"** %46
  %61 = load i32, i32* %12, align 8
  %62 = ptrtoint %"class.WTF::StringImpl"** %57 to i64
  br label %63

63:                                               ; preds = %42, %42, %52
  %64 = phi i64 [ %43, %42 ], [ %62, %52 ], [ %43, %42 ]
  %65 = phi i32 [ %44, %42 ], [ %61, %52 ], [ %44, %42 ]
  %66 = phi %"class.WTF::StringImpl"** [ %45, %42 ], [ %57, %52 ], [ %45, %42 ]
  %67 = phi %"class.WTF::StringImpl"** [ %46, %42 ], [ %60, %52 ], [ %46, %42 ]
  %68 = add i32 %47, 1
  %69 = icmp eq i32 %68, %65
  br i1 %69, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"**, i8 } @_ZN3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.2699"*, %"class.WTF::StringImpl"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 0
  %6 = load %"class.WTF::StringImpl"**, %"class.WTF::StringImpl"*** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1, align 8
  %12 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %11) #10
  %13 = and i32 %12, %9
  %14 = zext i32 %13 to i64
  %15 = bitcast %"class.WTF::StringView"* %3 to i8*
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %20 = bitcast %"class.WTF::StringView"* %4 to i8*
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %25 = xor i32 %12, -1
  %26 = lshr i32 %12, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %57, %2
  %39 = phi %"class.WTF::StringImpl"** [ null, %2 ], [ %58, %57 ]
  %40 = phi i64 [ 0, %2 ], [ %60, %57 ]
  %41 = phi i64 [ %14, %2 ], [ %62, %57 ]
  %42 = getelementptr inbounds %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, i64 %41
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = ptrtoint %"class.WTF::StringImpl"* %43 to i64
  switch i64 %44, label %48 [
    i64 0, label %45
    i64 -1, label %57
  ]

45:                                               ; preds = %38
  %46 = icmp eq %"class.WTF::StringImpl"** %39, null
  %47 = select i1 %46, %"class.WTF::StringImpl"** %42, %"class.WTF::StringImpl"** %39
  br label %63

48:                                               ; preds = %38
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %16, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 1
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %18, align 8
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %21, align 8
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 1
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %23, align 8
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  store i32 %55, i32* %24, align 8
  %56 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  br i1 %56, label %63, label %57

57:                                               ; preds = %48, %38
  %58 = phi %"class.WTF::StringImpl"** [ %39, %48 ], [ %42, %38 ]
  %59 = icmp eq i64 %40, 0
  %60 = select i1 %59, i64 %37, i64 %40
  %61 = add i64 %60, %41
  %62 = and i64 %61, %10
  br label %38

63:                                               ; preds = %48, %45
  %64 = phi %"class.WTF::StringImpl"** [ %47, %45 ], [ %42, %48 ]
  %65 = phi i8 [ 0, %45 ], [ 1, %48 ]
  %66 = insertvalue { %"class.WTF::StringImpl"**, i8 } undef, %"class.WTF::StringImpl"** %64, 0
  %67 = insertvalue { %"class.WTF::StringImpl"**, i8 } %66, i8 %65, 1
  ret { %"class.WTF::StringImpl"**, i8 } %67
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #10
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #10
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !5
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #10
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #10
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #10
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #10
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !5
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableIPNS_10StringImplES2_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EEbRKT0_(%"class.WTF::HashTable.2699"*, %"class.WTF::StringImpl"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 0
  %6 = load %"class.WTF::StringImpl"**, %"class.WTF::StringImpl"*** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"** %6, null
  br i1 %7, label %63, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashTable.2699", %"class.WTF::HashTable.2699"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1, align 8
  %14 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %13) #10
  %15 = and i32 %14, %11
  %16 = zext i32 %15 to i64
  %17 = bitcast %"class.WTF::StringView"* %3 to i8*
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %22 = bitcast %"class.WTF::StringView"* %4 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %27 = xor i32 %14, -1
  %28 = lshr i32 %14, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %40

40:                                               ; preds = %55, %8
  %41 = phi i64 [ 0, %8 ], [ %57, %55 ]
  %42 = phi i64 [ %16, %8 ], [ %59, %55 ]
  %43 = getelementptr inbounds %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, i64 %42
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = ptrtoint %"class.WTF::StringImpl"* %44 to i64
  switch i64 %45, label %46 [
    i64 0, label %63
    i64 -1, label %55
  ]

46:                                               ; preds = %40
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %18, align 8
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 1
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %20, align 8
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %23, align 8
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %25, align 8
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %26, align 8
  %54 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  br i1 %54, label %60, label %55

55:                                               ; preds = %46, %40
  %56 = icmp eq i64 %41, 0
  %57 = select i1 %56, i64 %39, i64 %41
  %58 = add i64 %57, %42
  %59 = and i64 %58, %12
  br label %40

60:                                               ; preds = %46
  %61 = getelementptr inbounds %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, i64 %42
  %62 = icmp ne %"class.WTF::StringImpl"** %61, null
  br label %63

63:                                               ; preds = %40, %60, %2
  %64 = phi i1 [ false, %2 ], [ %62, %60 ], [ false, %40 ]
  ret i1 %64
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i8 0, i8 2}
