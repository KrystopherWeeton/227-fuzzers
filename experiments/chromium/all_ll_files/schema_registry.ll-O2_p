; ModuleID = '../../components/policy/core/common/schema_registry.cc'
source_filename = "../../components/policy/core/common/schema_registry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.policy::SchemaRegistry::Observer" = type { i32 (...)** }
%"class.policy::SchemaRegistry::InternalObserver" = type { i32 (...)** }
%"class.policy::SchemaRegistry" = type <{ i32 (...)**, %class.scoped_refptr, %"class.base::ObserverList", %"class.base::ObserverList.10", [3 x i8], [5 x i8] }>
%class.scoped_refptr = type { %"class.policy::SchemaMap"* }
%"class.policy::SchemaMap" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::map" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.5" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.10" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.11", i64, i32, [4 x i8] }>
%"class.base::LinkedList.11" = type { %"class.base::LinkNode.12" }
%"class.base::LinkNode.12" = type { %"class.base::internal::LinkNodeBase" }
%"class.policy::CombinedSchemaRegistry" = type { %"class.policy::SchemaRegistry.base", %"class.policy::SchemaRegistry::Observer", %"class.policy::SchemaRegistry::InternalObserver", %"class.std::__1::set", %class.scoped_refptr }
%"class.policy::SchemaRegistry.base" = type <{ i32 (...)**, %class.scoped_refptr, %"class.base::ObserverList", %"class.base::ObserverList.10", [3 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.32" }
%"class.std::__1::__tree.32" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.policy::ForwardingSchemaRegistry" = type { %"class.policy::SchemaRegistry.base", %"class.policy::SchemaRegistry::Observer", %"class.policy::SchemaRegistry::InternalObserver", %"class.policy::SchemaRegistry"* }
%"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode.12", %"class.base::ObserverList.10"* }
%"struct.policy::PolicyNamespace" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.policy::Schema" = type { %class.scoped_refptr.19, %"struct.policy::internal::SchemaNode"* }
%class.scoped_refptr.19 = type { %"class.policy::Schema::InternalStorage"* }
%"class.policy::Schema::InternalStorage" = type opaque
%"struct.policy::internal::SchemaNode" = type opaque
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.51" = type { i8 }
%"class.std::__1::map.20" = type { %"class.std::__1::__tree.21" }
%"class.std::__1::__tree.21" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.22", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.policy::Schema" }
%"struct.std::__1::pair.45" = type { i32, %"class.std::__1::map.20" }
%"class.std::__1::__tree_node.60" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.61" }
%"struct.std::__1::__value_type.61" = type { %"struct.std::__1::pair.45" }
%"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode.31", i64, i64 }
%"class.base::internal::WeakLinkNode.31" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node.85" = type { %"class.std::__1::__tree_node_base.base", %"class.policy::SchemaRegistry"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN6policy14SchemaRegistry8Observer21OnSchemaRegistryReadyEv = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE30__emplace_hint_unique_key_argsIS3_JRKNSE_IKS3_SI_EEEEENSE_INS_15__tree_iteratorISJ_PNS_11__tree_nodeISJ_PvEElEEbEENS_21__tree_const_iteratorISJ_SY_lEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISJ_PNS_11__tree_nodeISJ_SR_EElEERPNS_15__tree_end_nodeIST_EESU_RKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S9_EEEEENSI_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEENS_21__tree_const_iteratorISA_SR_lEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_SJ_EElEERPNS_15__tree_end_nodeISL_EESM_RKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE7destroyEPNS_11__tree_nodeISJ_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIPN6policy14SchemaRegistryENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

@_ZTVN6policy14SchemaRegistryE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.policy::SchemaRegistry"*)* @_ZN6policy14SchemaRegistryD2Ev to i8*), i8* bitcast (void (%"class.policy::SchemaRegistry"*)* @_ZN6policy14SchemaRegistryD0Ev to i8*), i8* bitcast (void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)* @_ZN6policy14SchemaRegistry18RegisterComponentsENS_12PolicyDomainERKNSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_6SchemaENS2_4lessIS9_EENS7_INS2_4pairIKS9_SA_EEEEEE to i8*), i8* bitcast (void (%"class.policy::SchemaRegistry"*, %"struct.policy::PolicyNamespace"*)* @_ZN6policy14SchemaRegistry19UnregisterComponentERKNS_15PolicyNamespaceE to i8*)] }, align 8
@_ZTVN6policy22CombinedSchemaRegistryE = hidden unnamed_addr constant { [8 x i8*], [6 x i8*], [5 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.policy::CombinedSchemaRegistry"*)* @_ZN6policy22CombinedSchemaRegistryD2Ev to i8*), i8* bitcast (void (%"class.policy::CombinedSchemaRegistry"*)* @_ZN6policy22CombinedSchemaRegistryD0Ev to i8*), i8* bitcast (void (%"class.policy::CombinedSchemaRegistry"*, i32, %"class.std::__1::map.20"*)* @_ZN6policy22CombinedSchemaRegistry18RegisterComponentsENS_12PolicyDomainERKNSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_6SchemaENS2_4lessIS9_EENS7_INS2_4pairIKS9_SA_EEEEEE to i8*), i8* bitcast (void (%"class.policy::CombinedSchemaRegistry"*, %"struct.policy::PolicyNamespace"*)* @_ZN6policy22CombinedSchemaRegistry19UnregisterComponentERKNS_15PolicyNamespaceE to i8*), i8* bitcast (void (%"class.policy::CombinedSchemaRegistry"*, i1)* @_ZN6policy22CombinedSchemaRegistry23OnSchemaRegistryUpdatedEb to i8*), i8* bitcast (void (%"class.policy::CombinedSchemaRegistry"*, %"class.policy::SchemaRegistry"*)* @_ZN6policy22CombinedSchemaRegistry28OnSchemaRegistryShuttingDownEPNS_14SchemaRegistryE to i8*)], [6 x i8*] [i8* inttoptr (i64 -136 to i8*), i8* null, i8* bitcast (void (%"class.policy::CombinedSchemaRegistry"*, i1)* @_ZThn136_N6policy22CombinedSchemaRegistry23OnSchemaRegistryUpdatedEb to i8*), i8* bitcast (void (%"class.policy::SchemaRegistry::Observer"*)* @_ZN6policy14SchemaRegistry8Observer21OnSchemaRegistryReadyEv to i8*), i8* bitcast (void (%"class.policy::CombinedSchemaRegistry"*)* @_ZThn136_N6policy22CombinedSchemaRegistryD1Ev to i8*), i8* bitcast (void (%"class.policy::CombinedSchemaRegistry"*)* @_ZThn136_N6policy22CombinedSchemaRegistryD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -144 to i8*), i8* null, i8* bitcast (void (%"class.policy::CombinedSchemaRegistry"*, %"class.policy::SchemaRegistry"*)* @_ZThn144_N6policy22CombinedSchemaRegistry28OnSchemaRegistryShuttingDownEPNS_14SchemaRegistryE to i8*), i8* bitcast (void (%"class.policy::CombinedSchemaRegistry"*)* @_ZThn144_N6policy22CombinedSchemaRegistryD1Ev to i8*), i8* bitcast (void (%"class.policy::CombinedSchemaRegistry"*)* @_ZThn144_N6policy22CombinedSchemaRegistryD0Ev to i8*)] }, align 8
@_ZTVN6policy24ForwardingSchemaRegistryE = hidden unnamed_addr constant { [9 x i8*], [6 x i8*], [5 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*)* @_ZN6policy24ForwardingSchemaRegistryD2Ev to i8*), i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*)* @_ZN6policy24ForwardingSchemaRegistryD0Ev to i8*), i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*, i32, %"class.std::__1::map.20"*)* @_ZN6policy24ForwardingSchemaRegistry18RegisterComponentsENS_12PolicyDomainERKNSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_6SchemaENS2_4lessIS9_EENS7_INS2_4pairIKS9_SA_EEEEEE to i8*), i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*, %"struct.policy::PolicyNamespace"*)* @_ZN6policy24ForwardingSchemaRegistry19UnregisterComponentERKNS_15PolicyNamespaceE to i8*), i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*, i1)* @_ZN6policy24ForwardingSchemaRegistry23OnSchemaRegistryUpdatedEb to i8*), i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*)* @_ZN6policy24ForwardingSchemaRegistry21OnSchemaRegistryReadyEv to i8*), i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*, %"class.policy::SchemaRegistry"*)* @_ZN6policy24ForwardingSchemaRegistry28OnSchemaRegistryShuttingDownEPNS_14SchemaRegistryE to i8*)], [6 x i8*] [i8* inttoptr (i64 -136 to i8*), i8* null, i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*, i1)* @_ZThn136_N6policy24ForwardingSchemaRegistry23OnSchemaRegistryUpdatedEb to i8*), i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*)* @_ZThn136_N6policy24ForwardingSchemaRegistry21OnSchemaRegistryReadyEv to i8*), i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*)* @_ZThn136_N6policy24ForwardingSchemaRegistryD1Ev to i8*), i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*)* @_ZThn136_N6policy24ForwardingSchemaRegistryD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -144 to i8*), i8* null, i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*, %"class.policy::SchemaRegistry"*)* @_ZThn144_N6policy24ForwardingSchemaRegistry28OnSchemaRegistryShuttingDownEPNS_14SchemaRegistryE to i8*), i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*)* @_ZThn144_N6policy24ForwardingSchemaRegistryD1Ev to i8*), i8* bitcast (void (%"class.policy::ForwardingSchemaRegistry"*)* @_ZThn144_N6policy24ForwardingSchemaRegistryD0Ev to i8*)] }, align 8
@_ZTVN6policy14SchemaRegistry8ObserverE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.policy::SchemaRegistry::Observer"*)* @_ZN6policy14SchemaRegistry8Observer21OnSchemaRegistryReadyEv to i8*), i8* bitcast (void (%"class.policy::SchemaRegistry::Observer"*)* @_ZN6policy14SchemaRegistry8ObserverD2Ev to i8*), i8* bitcast (void (%"class.policy::SchemaRegistry::Observer"*)* @_ZN6policy14SchemaRegistry8ObserverD0Ev to i8*)] }, align 8
@_ZTVN6policy14SchemaRegistry16InternalObserverE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.policy::SchemaRegistry::InternalObserver"*)* @_ZN6policy14SchemaRegistry16InternalObserverD2Ev to i8*), i8* bitcast (void (%"class.policy::SchemaRegistry::InternalObserver"*)* @_ZN6policy14SchemaRegistry16InternalObserverD0Ev to i8*)] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN6policy14SchemaRegistry8ObserverD1Ev = hidden unnamed_addr alias void (%"class.policy::SchemaRegistry::Observer"*), void (%"class.policy::SchemaRegistry::Observer"*)* @_ZN6policy14SchemaRegistry8ObserverD2Ev
@_ZN6policy14SchemaRegistry16InternalObserverD1Ev = hidden unnamed_addr alias void (%"class.policy::SchemaRegistry::InternalObserver"*), void (%"class.policy::SchemaRegistry::InternalObserver"*)* @_ZN6policy14SchemaRegistry16InternalObserverD2Ev
@_ZN6policy14SchemaRegistryC1Ev = hidden unnamed_addr alias void (%"class.policy::SchemaRegistry"*), void (%"class.policy::SchemaRegistry"*)* @_ZN6policy14SchemaRegistryC2Ev
@_ZN6policy14SchemaRegistryD1Ev = hidden unnamed_addr alias void (%"class.policy::SchemaRegistry"*), void (%"class.policy::SchemaRegistry"*)* @_ZN6policy14SchemaRegistryD2Ev
@_ZN6policy22CombinedSchemaRegistryC1Ev = hidden unnamed_addr alias void (%"class.policy::CombinedSchemaRegistry"*), void (%"class.policy::CombinedSchemaRegistry"*)* @_ZN6policy22CombinedSchemaRegistryC2Ev
@_ZN6policy22CombinedSchemaRegistryD1Ev = hidden unnamed_addr alias void (%"class.policy::CombinedSchemaRegistry"*), void (%"class.policy::CombinedSchemaRegistry"*)* @_ZN6policy22CombinedSchemaRegistryD2Ev
@_ZN6policy24ForwardingSchemaRegistryC1EPNS_14SchemaRegistryE = hidden unnamed_addr alias void (%"class.policy::ForwardingSchemaRegistry"*, %"class.policy::SchemaRegistry"*), void (%"class.policy::ForwardingSchemaRegistry"*, %"class.policy::SchemaRegistry"*)* @_ZN6policy24ForwardingSchemaRegistryC2EPNS_14SchemaRegistryE
@_ZN6policy24ForwardingSchemaRegistryD1Ev = hidden unnamed_addr alias void (%"class.policy::ForwardingSchemaRegistry"*), void (%"class.policy::ForwardingSchemaRegistry"*)* @_ZN6policy24ForwardingSchemaRegistryD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry8ObserverD2Ev(%"class.policy::SchemaRegistry::Observer"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry8ObserverD0Ev(%"class.policy::SchemaRegistry::Observer"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry16InternalObserverD2Ev(%"class.policy::SchemaRegistry::InternalObserver"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry16InternalObserverD0Ev(%"class.policy::SchemaRegistry::InternalObserver"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistryC2Ev(%"class.policy::SchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6policy14SchemaRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call i8* @_Znwm(i64 32) #14
  %4 = bitcast i8* %3 to %"class.policy::SchemaMap"*
  tail call void @_ZN6policy9SchemaMapC1Ev(%"class.policy::SchemaMap"* nonnull %4) #15
  %5 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 1, i32 0
  %6 = bitcast %"class.policy::SchemaMap"** %5 to i8**
  store i8* %3, i8** %6, align 8
  %7 = bitcast i8* %3 to i32*
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2
  %10 = bitcast %"class.base::ObserverList"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #15
  %11 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %11, %"class.base::internal::LinkNodeBase"* %11, %"class.base::internal::LinkNodeBase"* %11) #15
  %12 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 2
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3
  %15 = bitcast %"class.base::ObserverList.10"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #15
  %16 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %16, %"class.base::internal::LinkNodeBase"* %16, %"class.base::internal::LinkNodeBase"* %16) #15
  %17 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 2
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %18, align 8
  %19 = getelementptr %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 0, i64 3, i1 false)
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN6policy9SchemaMapC1Ev(%"class.policy::SchemaMap"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistryD2Ev(%"class.policy::SchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = alloca %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6policy14SchemaRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3
  %6 = bitcast %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !2
  %13 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !2
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br i1 %15, label %17, label %19

17:                                               ; preds = %1
  %18 = bitcast %"class.base::ObserverList.10"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #15, !alias.scope !2
  br label %59

19:                                               ; preds = %1
  store %"class.base::ObserverList.10"* %5, %"class.base::ObserverList.10"** %7, align 8
  %20 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #15
  store i64 0, i64* %8, align 8
  %21 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::ObserverList.10"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8
  %33 = load %"class.base::ObserverList.10"*, %"class.base::ObserverList.10"** %7, align 8
  %34 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList.10"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %54, %50, %44, %31, %17
  %60 = bitcast %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #15
  %61 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<policy::SchemaRegistry::InternalObserver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #15
  %66 = bitcast %"class.base::ObserverList.10"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #15, !alias.scope !5
  %67 = load %"class.base::ObserverList.10"*, %"class.base::ObserverList.10"** %7, align 8
  br label %68

68:                                               ; preds = %521, %59
  %69 = phi %"class.base::ObserverList.10"* [ %67, %59 ], [ %519, %521 ]
  %70 = icmp eq %"class.base::ObserverList.10"* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %68
  %72 = load i64, i64* %8, align 8
  %73 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %69, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::ObserverList.10"* %69 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = ashr exact i64 %78, 3
  %80 = load i64, i64* %9, align 8
  %81 = icmp ult i64 %79, %80
  %82 = select i1 %81, i64 %79, i64 %80
  %83 = icmp eq i64 %72, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %71
  %85 = load %"class.base::ObserverList.10"*, %"class.base::ObserverList.10"** %61, align 8
  br label %102

86:                                               ; preds = %71, %68
  %87 = load %"class.base::ObserverList.10"*, %"class.base::ObserverList.10"** %61, align 8
  %88 = icmp eq %"class.base::ObserverList.10"* %87, null
  br i1 %88, label %202, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %62, align 8
  %91 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %87, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::ObserverList.10"* %87 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = load i64, i64* %63, align 8
  %99 = icmp ult i64 %97, %98
  %100 = select i1 %99, i64 %97, i64 %98
  %101 = icmp eq i64 %90, %100
  br i1 %101, label %111, label %102

102:                                              ; preds = %89, %84
  %103 = phi %"class.base::ObserverList.10"* [ %85, %84 ], [ %87, %89 ]
  %104 = icmp eq %"class.base::ObserverList.10"* %69, %103
  %105 = load i64, i64* %8, align 8
  %106 = load i64, i64* %62, align 8
  %107 = icmp eq i64 %105, %106
  %108 = and i1 %104, %107
  br i1 %108, label %109, label %510

109:                                              ; preds = %102
  %110 = icmp eq %"class.base::ObserverList.10"* %69, null
  br i1 %110, label %202, label %111

111:                                              ; preds = %89, %109
  %112 = phi %"class.base::ObserverList.10"* [ %69, %109 ], [ %87, %89 ]
  %113 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %112, i64 0, i32 1
  %114 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %112, i64 0, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::LinkNodeBase"** %114 to %"class.base::LinkNode.12"**
  %116 = load %"class.base::LinkNode.12"*, %"class.base::LinkNode.12"** %115, align 8
  %117 = bitcast %"class.base::LinkedList.11"* %113 to %"class.base::LinkNode.12"**
  %118 = load %"class.base::LinkNode.12"*, %"class.base::LinkNode.12"** %117, align 8
  %119 = icmp eq %"class.base::LinkNode.12"* %116, %118
  br i1 %119, label %120, label %198

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %112, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %121, align 8
  %123 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %112, i64 0, i32 0, i32 0, i32 1
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %122, %124
  br i1 %125, label %134, label %126

126:                                              ; preds = %120, %131
  %127 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %131 ], [ %122, %120 ]
  %128 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 1
  %133 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %124
  br i1 %133, label %198, label %126

134:                                              ; preds = %126, %120
  %135 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %122, %120 ], [ %127, %126 ]
  %136 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %135 to i64
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %124
  br i1 %137, label %198, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %135, i64 1
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %124
  br i1 %140, label %193, label %141

141:                                              ; preds = %138
  %142 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %124, i64 -2, i32 0
  %143 = ptrtoint i8** %142 to i64
  %144 = sub i64 %143, %136
  %145 = lshr i64 %144, 3
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %167, label %149

149:                                              ; preds = %141, %162
  %150 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %164, %162 ], [ %139, %141 ]
  %151 = phi i64 [ %163, %162 ], [ %136, %141 ]
  %152 = phi i64 [ %165, %162 ], [ %147, %141 ]
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %149
  %157 = ptrtoint i8* %154 to i64
  %158 = inttoptr i64 %151 to %"class.base::internal::UncheckedObserverAdapter"*
  %159 = inttoptr i64 %151 to i64*
  store i64 %157, i64* %159, align 8
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %161 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %160 to i64
  br label %162

162:                                              ; preds = %156, %149
  %163 = phi i64 [ %151, %149 ], [ %161, %156 ]
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %165 = add i64 %152, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %149, !llvm.loop !8

167:                                              ; preds = %162, %141
  %168 = phi i64 [ undef, %141 ], [ %163, %162 ]
  %169 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %141 ], [ %164, %162 ]
  %170 = phi i64 [ %136, %141 ], [ %163, %162 ]
  %171 = icmp ult i64 %144, 24
  br i1 %171, label %189, label %172

172:                                              ; preds = %167, %675
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %677, %675 ], [ %169, %167 ]
  %174 = phi i64 [ %676, %675 ], [ %170, %167 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = ptrtoint i8* %176 to i64
  %180 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %181 = inttoptr i64 %174 to i64*
  store i64 %179, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1
  %183 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %182 to i64
  br label %184

184:                                              ; preds = %178, %172
  %185 = phi i64 [ %174, %172 ], [ %183, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %653, label %647

189:                                              ; preds = %675, %167
  %190 = phi i64 [ %168, %167 ], [ %676, %675 ]
  %191 = inttoptr i64 %190 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %193

193:                                              ; preds = %189, %138
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %138 ], [ %192, %189 ]
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %138 ], [ %191, %189 ]
  %196 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %195, %194
  br i1 %196, label %198, label %197

197:                                              ; preds = %193
  store %"class.base::internal::UncheckedObserverAdapter"* %195, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %198

198:                                              ; preds = %131, %197, %193, %134, %111
  %199 = load %"class.base::ObserverList.10"*, %"class.base::ObserverList.10"** %61, align 8
  %200 = icmp eq %"class.base::ObserverList.10"* %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  store %"class.base::ObserverList.10"* null, %"class.base::ObserverList.10"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #15
  br label %202

202:                                              ; preds = %86, %109, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #15
  %203 = load %"class.base::ObserverList.10"*, %"class.base::ObserverList.10"** %7, align 8
  %204 = icmp eq %"class.base::ObserverList.10"* %203, null
  br i1 %204, label %295, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %203, i64 0, i32 1
  %207 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %203, i64 0, i32 1, i32 0, i32 0, i32 1
  %208 = bitcast %"class.base::internal::LinkNodeBase"** %207 to %"class.base::LinkNode.12"**
  %209 = load %"class.base::LinkNode.12"*, %"class.base::LinkNode.12"** %208, align 8
  %210 = bitcast %"class.base::LinkedList.11"* %206 to %"class.base::LinkNode.12"**
  %211 = load %"class.base::LinkNode.12"*, %"class.base::LinkNode.12"** %210, align 8
  %212 = icmp eq %"class.base::LinkNode.12"* %209, %211
  br i1 %212, label %213, label %291

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %203, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %214, align 8
  %216 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %203, i64 0, i32 0, i32 0, i32 1
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %215, %217
  br i1 %218, label %227, label %219

219:                                              ; preds = %213, %224
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %224 ], [ %215, %213 ]
  %221 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 1
  %226 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %217
  br i1 %226, label %291, label %219

227:                                              ; preds = %219, %213
  %228 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %213 ], [ %220, %219 ]
  %229 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %228 to i64
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %217
  br i1 %230, label %291, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %217
  br i1 %233, label %286, label %234

234:                                              ; preds = %231
  %235 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %217, i64 -2, i32 0
  %236 = ptrtoint i8** %235 to i64
  %237 = sub i64 %236, %229
  %238 = lshr i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %260, label %242

242:                                              ; preds = %234, %255
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %257, %255 ], [ %232, %234 ]
  %244 = phi i64 [ %256, %255 ], [ %229, %234 ]
  %245 = phi i64 [ %258, %255 ], [ %240, %234 ]
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %242
  %250 = ptrtoint i8* %247 to i64
  %251 = inttoptr i64 %244 to %"class.base::internal::UncheckedObserverAdapter"*
  %252 = inttoptr i64 %244 to i64*
  store i64 %250, i64* %252, align 8
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %254 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %253 to i64
  br label %255

255:                                              ; preds = %249, %242
  %256 = phi i64 [ %244, %242 ], [ %254, %249 ]
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %258 = add i64 %245, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %242, !llvm.loop !10

260:                                              ; preds = %255, %234
  %261 = phi i64 [ undef, %234 ], [ %256, %255 ]
  %262 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %234 ], [ %257, %255 ]
  %263 = phi i64 [ %229, %234 ], [ %256, %255 ]
  %264 = icmp ult i64 %237, 24
  br i1 %264, label %282, label %265

265:                                              ; preds = %260, %643
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %645, %643 ], [ %262, %260 ]
  %267 = phi i64 [ %644, %643 ], [ %263, %260 ]
  %268 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = icmp eq i8* %269, null
  br i1 %270, label %277, label %271

271:                                              ; preds = %265
  %272 = ptrtoint i8* %269 to i64
  %273 = inttoptr i64 %267 to %"class.base::internal::UncheckedObserverAdapter"*
  %274 = inttoptr i64 %267 to i64*
  store i64 %272, i64* %274, align 8
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 1
  %276 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %275 to i64
  br label %277

277:                                              ; preds = %271, %265
  %278 = phi i64 [ %267, %265 ], [ %276, %271 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %621, label %615

282:                                              ; preds = %643, %260
  %283 = phi i64 [ %261, %260 ], [ %644, %643 ]
  %284 = inttoptr i64 %283 to %"class.base::internal::UncheckedObserverAdapter"*
  %285 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %286

286:                                              ; preds = %282, %231
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %231 ], [ %285, %282 ]
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %231 ], [ %284, %282 ]
  %289 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %288, %287
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  store %"class.base::internal::UncheckedObserverAdapter"* %288, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %291

291:                                              ; preds = %224, %290, %286, %227, %205
  %292 = load %"class.base::ObserverList.10"*, %"class.base::ObserverList.10"** %7, align 8
  %293 = icmp eq %"class.base::ObserverList.10"* %292, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %291
  store %"class.base::ObserverList.10"* null, %"class.base::ObserverList.10"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br label %295

295:                                              ; preds = %202, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #15
  %296 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %297 = bitcast %"class.base::internal::LinkNodeBase"** %296 to %"class.base::LinkNode.12"**
  %298 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 1, i32 0
  %299 = load %"class.base::LinkNode.12"*, %"class.base::LinkNode.12"** %297, align 8
  %300 = icmp eq %"class.base::LinkNode.12"* %299, %298
  br i1 %300, label %313, label %301

301:                                              ; preds = %295, %310
  %302 = phi %"class.base::LinkNode.12"* [ %311, %310 ], [ %299, %295 ]
  %303 = getelementptr inbounds %"class.base::LinkNode.12", %"class.base::LinkNode.12"* %302, i64 1
  %304 = bitcast %"class.base::LinkNode.12"* %303 to %"class.base::ObserverList.10"**
  %305 = load %"class.base::ObserverList.10"*, %"class.base::ObserverList.10"** %304, align 8
  %306 = icmp eq %"class.base::ObserverList.10"* %305, null
  br i1 %306, label %310, label %307

307:                                              ; preds = %301
  store %"class.base::ObserverList.10"* null, %"class.base::ObserverList.10"** %304, align 8
  %308 = getelementptr inbounds %"class.base::LinkNode.12", %"class.base::LinkNode.12"* %302, i64 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %308) #15
  %309 = load %"class.base::LinkNode.12"*, %"class.base::LinkNode.12"** %297, align 8
  br label %310

310:                                              ; preds = %307, %301
  %311 = phi %"class.base::LinkNode.12"* [ %302, %301 ], [ %309, %307 ]
  %312 = icmp eq %"class.base::LinkNode.12"* %311, %298
  br i1 %312, label %313, label %301

313:                                              ; preds = %310, %295
  %314 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8
  %315 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8
  %316 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %314, %315
  br i1 %316, label %325, label %317

317:                                              ; preds = %313, %322
  %318 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %323, %322 ], [ %314, %313 ]
  %319 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %318, i64 0, i32 0
  %320 = load i8*, i8** %319, align 8
  %321 = icmp eq i8* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %317
  %323 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %318, i64 1
  %324 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %323, %315
  br i1 %324, label %389, label %317

325:                                              ; preds = %317, %313
  %326 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %314, %313 ], [ %318, %317 ]
  %327 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %326 to i64
  %328 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %326, %315
  br i1 %328, label %389, label %329

329:                                              ; preds = %325
  %330 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %326, i64 1
  %331 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %330, %315
  br i1 %331, label %384, label %332

332:                                              ; preds = %329
  %333 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %315, i64 -2, i32 0
  %334 = ptrtoint i8** %333 to i64
  %335 = sub i64 %334, %327
  %336 = lshr i64 %335, 3
  %337 = add nuw nsw i64 %336, 1
  %338 = and i64 %337, 3
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %358, label %340

340:                                              ; preds = %332, %353
  %341 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %355, %353 ], [ %330, %332 ]
  %342 = phi i64 [ %354, %353 ], [ %327, %332 ]
  %343 = phi i64 [ %356, %353 ], [ %338, %332 ]
  %344 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %341, i64 0, i32 0
  %345 = load i8*, i8** %344, align 8
  %346 = icmp eq i8* %345, null
  br i1 %346, label %353, label %347

347:                                              ; preds = %340
  %348 = ptrtoint i8* %345 to i64
  %349 = inttoptr i64 %342 to %"class.base::internal::UncheckedObserverAdapter"*
  %350 = inttoptr i64 %342 to i64*
  store i64 %348, i64* %350, align 8
  %351 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 1
  %352 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %351 to i64
  br label %353

353:                                              ; preds = %347, %340
  %354 = phi i64 [ %342, %340 ], [ %352, %347 ]
  %355 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %341, i64 1
  %356 = add i64 %343, -1
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %358, label %340, !llvm.loop !11

358:                                              ; preds = %353, %332
  %359 = phi i64 [ undef, %332 ], [ %354, %353 ]
  %360 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %330, %332 ], [ %355, %353 ]
  %361 = phi i64 [ %327, %332 ], [ %354, %353 ]
  %362 = icmp ult i64 %335, 24
  br i1 %362, label %380, label %363

363:                                              ; preds = %358, %611
  %364 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %613, %611 ], [ %360, %358 ]
  %365 = phi i64 [ %612, %611 ], [ %361, %358 ]
  %366 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 0, i32 0
  %367 = load i8*, i8** %366, align 8
  %368 = icmp eq i8* %367, null
  br i1 %368, label %375, label %369

369:                                              ; preds = %363
  %370 = ptrtoint i8* %367 to i64
  %371 = inttoptr i64 %365 to %"class.base::internal::UncheckedObserverAdapter"*
  %372 = inttoptr i64 %365 to i64*
  store i64 %370, i64* %372, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %371, i64 1
  %374 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %373 to i64
  br label %375

375:                                              ; preds = %369, %363
  %376 = phi i64 [ %365, %363 ], [ %374, %369 ]
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 1, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %589, label %583

380:                                              ; preds = %611, %358
  %381 = phi i64 [ %359, %358 ], [ %612, %611 ]
  %382 = inttoptr i64 %381 to %"class.base::internal::UncheckedObserverAdapter"*
  %383 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8
  br label %384

384:                                              ; preds = %380, %329
  %385 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %315, %329 ], [ %383, %380 ]
  %386 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %326, %329 ], [ %382, %380 ]
  %387 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %386, %385
  br i1 %387, label %389, label %388

388:                                              ; preds = %384
  store %"class.base::internal::UncheckedObserverAdapter"* %386, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8
  br label %389

389:                                              ; preds = %322, %388, %384, %325
  %390 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8
  %391 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %390, null
  br i1 %391, label %396, label %392

392:                                              ; preds = %389
  %393 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %390 to i64
  %394 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  store i64 %393, i64* %394, align 8
  %395 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %390 to i8*
  call void @_ZdlPv(i8* %395) #14
  br label %396

396:                                              ; preds = %389, %392
  %397 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %398 = bitcast %"class.base::internal::LinkNodeBase"** %397 to %"class.base::LinkNode"**
  %399 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 1, i32 0
  %400 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %398, align 8
  %401 = icmp eq %"class.base::LinkNode"* %400, %399
  br i1 %401, label %414, label %402

402:                                              ; preds = %396, %411
  %403 = phi %"class.base::LinkNode"* [ %412, %411 ], [ %400, %396 ]
  %404 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %403, i64 1
  %405 = bitcast %"class.base::LinkNode"* %404 to %"class.base::ObserverList"**
  %406 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %405, align 8
  %407 = icmp eq %"class.base::ObserverList"* %406, null
  br i1 %407, label %411, label %408

408:                                              ; preds = %402
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %405, align 8
  %409 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %403, i64 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %409) #15
  %410 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %398, align 8
  br label %411

411:                                              ; preds = %408, %402
  %412 = phi %"class.base::LinkNode"* [ %403, %402 ], [ %410, %408 ]
  %413 = icmp eq %"class.base::LinkNode"* %412, %399
  br i1 %413, label %414, label %402

414:                                              ; preds = %411, %396
  %415 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %416 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %415, align 8
  %417 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %418 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %417, align 8
  %419 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %416, %418
  br i1 %419, label %428, label %420

420:                                              ; preds = %414, %425
  %421 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %426, %425 ], [ %416, %414 ]
  %422 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %421, i64 0, i32 0
  %423 = load i8*, i8** %422, align 8
  %424 = icmp eq i8* %423, null
  br i1 %424, label %428, label %425

425:                                              ; preds = %420
  %426 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %421, i64 1
  %427 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %426, %418
  br i1 %427, label %492, label %420

428:                                              ; preds = %420, %414
  %429 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %416, %414 ], [ %421, %420 ]
  %430 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %429 to i64
  %431 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %429, %418
  br i1 %431, label %492, label %432

432:                                              ; preds = %428
  %433 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %429, i64 1
  %434 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %433, %418
  br i1 %434, label %487, label %435

435:                                              ; preds = %432
  %436 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %418, i64 -2, i32 0
  %437 = ptrtoint i8** %436 to i64
  %438 = sub i64 %437, %430
  %439 = lshr i64 %438, 3
  %440 = add nuw nsw i64 %439, 1
  %441 = and i64 %440, 3
  %442 = icmp eq i64 %441, 0
  br i1 %442, label %461, label %443

443:                                              ; preds = %435, %456
  %444 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %458, %456 ], [ %433, %435 ]
  %445 = phi i64 [ %457, %456 ], [ %430, %435 ]
  %446 = phi i64 [ %459, %456 ], [ %441, %435 ]
  %447 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %444, i64 0, i32 0
  %448 = load i8*, i8** %447, align 8
  %449 = icmp eq i8* %448, null
  br i1 %449, label %456, label %450

450:                                              ; preds = %443
  %451 = ptrtoint i8* %448 to i64
  %452 = inttoptr i64 %445 to %"class.base::internal::UncheckedObserverAdapter"*
  %453 = inttoptr i64 %445 to i64*
  store i64 %451, i64* %453, align 8
  %454 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %452, i64 1
  %455 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %454 to i64
  br label %456

456:                                              ; preds = %450, %443
  %457 = phi i64 [ %445, %443 ], [ %455, %450 ]
  %458 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %444, i64 1
  %459 = add i64 %446, -1
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %461, label %443, !llvm.loop !12

461:                                              ; preds = %456, %435
  %462 = phi i64 [ undef, %435 ], [ %457, %456 ]
  %463 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %433, %435 ], [ %458, %456 ]
  %464 = phi i64 [ %430, %435 ], [ %457, %456 ]
  %465 = icmp ult i64 %438, 24
  br i1 %465, label %483, label %466

466:                                              ; preds = %461, %579
  %467 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %581, %579 ], [ %463, %461 ]
  %468 = phi i64 [ %580, %579 ], [ %464, %461 ]
  %469 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %467, i64 0, i32 0
  %470 = load i8*, i8** %469, align 8
  %471 = icmp eq i8* %470, null
  br i1 %471, label %478, label %472

472:                                              ; preds = %466
  %473 = ptrtoint i8* %470 to i64
  %474 = inttoptr i64 %468 to %"class.base::internal::UncheckedObserverAdapter"*
  %475 = inttoptr i64 %468 to i64*
  store i64 %473, i64* %475, align 8
  %476 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %474, i64 1
  %477 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %476 to i64
  br label %478

478:                                              ; preds = %472, %466
  %479 = phi i64 [ %468, %466 ], [ %477, %472 ]
  %480 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %467, i64 1, i32 0
  %481 = load i8*, i8** %480, align 8
  %482 = icmp eq i8* %481, null
  br i1 %482, label %557, label %551

483:                                              ; preds = %579, %461
  %484 = phi i64 [ %462, %461 ], [ %580, %579 ]
  %485 = inttoptr i64 %484 to %"class.base::internal::UncheckedObserverAdapter"*
  %486 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %417, align 8
  br label %487

487:                                              ; preds = %483, %432
  %488 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %418, %432 ], [ %486, %483 ]
  %489 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %429, %432 ], [ %485, %483 ]
  %490 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %489, %488
  br i1 %490, label %492, label %491

491:                                              ; preds = %487
  store %"class.base::internal::UncheckedObserverAdapter"* %489, %"class.base::internal::UncheckedObserverAdapter"** %417, align 8
  br label %492

492:                                              ; preds = %425, %491, %487, %428
  %493 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %415, align 8
  %494 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %493, null
  br i1 %494, label %499, label %495

495:                                              ; preds = %492
  %496 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %493 to i64
  %497 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %417 to i64*
  store i64 %496, i64* %497, align 8
  %498 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %493 to i8*
  call void @_ZdlPv(i8* %498) #14
  br label %499

499:                                              ; preds = %492, %495
  %500 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 1, i32 0
  %501 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %500, align 8
  %502 = icmp eq %"class.policy::SchemaMap"* %501, null
  br i1 %502, label %509, label %503

503:                                              ; preds = %499
  %504 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %501, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = atomicrmw sub i32* %504, i32 1 acq_rel
  %506 = icmp eq i32 %505, 1
  br i1 %506, label %507, label %509

507:                                              ; preds = %503
  call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %501) #15
  %508 = bitcast %"class.policy::SchemaMap"* %501 to i8*
  call void @_ZdlPv(i8* %508) #14
  br label %509

509:                                              ; preds = %499, %503, %507
  ret void

510:                                              ; preds = %102
  %511 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %69, i64 0, i32 0, i32 0, i32 0
  %512 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %511, align 8
  %513 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %512, i64 %105
  %514 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %513 to %"class.policy::SchemaRegistry::InternalObserver"**
  %515 = load %"class.policy::SchemaRegistry::InternalObserver"*, %"class.policy::SchemaRegistry::InternalObserver"** %514, align 8
  %516 = bitcast %"class.policy::SchemaRegistry::InternalObserver"* %515 to void (%"class.policy::SchemaRegistry::InternalObserver"*, %"class.policy::SchemaRegistry"*)***
  %517 = load void (%"class.policy::SchemaRegistry::InternalObserver"*, %"class.policy::SchemaRegistry"*)**, void (%"class.policy::SchemaRegistry::InternalObserver"*, %"class.policy::SchemaRegistry"*)*** %516, align 8
  %518 = load void (%"class.policy::SchemaRegistry::InternalObserver"*, %"class.policy::SchemaRegistry"*)*, void (%"class.policy::SchemaRegistry::InternalObserver"*, %"class.policy::SchemaRegistry"*)** %517, align 8
  call void %518(%"class.policy::SchemaRegistry::InternalObserver"* %515, %"class.policy::SchemaRegistry"* %0) #15
  %519 = load %"class.base::ObserverList.10"*, %"class.base::ObserverList.10"** %7, align 8
  %520 = icmp eq %"class.base::ObserverList.10"* %519, null
  br i1 %520, label %521, label %522

521:                                              ; preds = %546, %542, %510, %522, %536
  br label %68

522:                                              ; preds = %510
  %523 = load i64, i64* %8, align 8
  %524 = add i64 %523, 1
  store i64 %524, i64* %8, align 8
  %525 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %519, i64 0, i32 0, i32 0, i32 1
  %526 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %"class.base::ObserverList.10"* %519 to i64*
  %529 = load i64, i64* %528, align 8
  %530 = sub i64 %527, %529
  %531 = ashr exact i64 %530, 3
  %532 = load i64, i64* %9, align 8
  %533 = icmp ult i64 %531, %532
  %534 = select i1 %533, i64 %531, i64 %532
  %535 = icmp ult i64 %524, %534
  br i1 %535, label %536, label %521

536:                                              ; preds = %522
  %537 = inttoptr i64 %529 to %"class.base::internal::UncheckedObserverAdapter"*
  %538 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %519, i64 0, i32 0, i32 0, i32 0
  %539 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %537, i64 %524, i32 0
  %540 = load i8*, i8** %539, align 8
  %541 = icmp eq i8* %540, null
  br i1 %541, label %542, label %521

542:                                              ; preds = %536, %546
  %543 = phi i64 [ %544, %546 ], [ %524, %536 ]
  %544 = add nuw i64 %543, 1
  store i64 %544, i64* %8, align 8
  %545 = icmp ult i64 %544, %534
  br i1 %545, label %546, label %521

546:                                              ; preds = %542
  %547 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %538, align 8
  %548 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %547, i64 %544, i32 0
  %549 = load i8*, i8** %548, align 8
  %550 = icmp eq i8* %549, null
  br i1 %550, label %542, label %521

551:                                              ; preds = %478
  %552 = ptrtoint i8* %481 to i64
  %553 = inttoptr i64 %479 to %"class.base::internal::UncheckedObserverAdapter"*
  %554 = inttoptr i64 %479 to i64*
  store i64 %552, i64* %554, align 8
  %555 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %553, i64 1
  %556 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %555 to i64
  br label %557

557:                                              ; preds = %551, %478
  %558 = phi i64 [ %479, %478 ], [ %556, %551 ]
  %559 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %467, i64 2, i32 0
  %560 = load i8*, i8** %559, align 8
  %561 = icmp eq i8* %560, null
  br i1 %561, label %568, label %562

562:                                              ; preds = %557
  %563 = ptrtoint i8* %560 to i64
  %564 = inttoptr i64 %558 to %"class.base::internal::UncheckedObserverAdapter"*
  %565 = inttoptr i64 %558 to i64*
  store i64 %563, i64* %565, align 8
  %566 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %564, i64 1
  %567 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %566 to i64
  br label %568

568:                                              ; preds = %562, %557
  %569 = phi i64 [ %558, %557 ], [ %567, %562 ]
  %570 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %467, i64 3, i32 0
  %571 = load i8*, i8** %570, align 8
  %572 = icmp eq i8* %571, null
  br i1 %572, label %579, label %573

573:                                              ; preds = %568
  %574 = ptrtoint i8* %571 to i64
  %575 = inttoptr i64 %569 to %"class.base::internal::UncheckedObserverAdapter"*
  %576 = inttoptr i64 %569 to i64*
  store i64 %574, i64* %576, align 8
  %577 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %575, i64 1
  %578 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %577 to i64
  br label %579

579:                                              ; preds = %573, %568
  %580 = phi i64 [ %569, %568 ], [ %578, %573 ]
  %581 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %467, i64 4
  %582 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %581, %418
  br i1 %582, label %483, label %466

583:                                              ; preds = %375
  %584 = ptrtoint i8* %378 to i64
  %585 = inttoptr i64 %376 to %"class.base::internal::UncheckedObserverAdapter"*
  %586 = inttoptr i64 %376 to i64*
  store i64 %584, i64* %586, align 8
  %587 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %585, i64 1
  %588 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %587 to i64
  br label %589

589:                                              ; preds = %583, %375
  %590 = phi i64 [ %376, %375 ], [ %588, %583 ]
  %591 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 2, i32 0
  %592 = load i8*, i8** %591, align 8
  %593 = icmp eq i8* %592, null
  br i1 %593, label %600, label %594

594:                                              ; preds = %589
  %595 = ptrtoint i8* %592 to i64
  %596 = inttoptr i64 %590 to %"class.base::internal::UncheckedObserverAdapter"*
  %597 = inttoptr i64 %590 to i64*
  store i64 %595, i64* %597, align 8
  %598 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %596, i64 1
  %599 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %598 to i64
  br label %600

600:                                              ; preds = %594, %589
  %601 = phi i64 [ %590, %589 ], [ %599, %594 ]
  %602 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 3, i32 0
  %603 = load i8*, i8** %602, align 8
  %604 = icmp eq i8* %603, null
  br i1 %604, label %611, label %605

605:                                              ; preds = %600
  %606 = ptrtoint i8* %603 to i64
  %607 = inttoptr i64 %601 to %"class.base::internal::UncheckedObserverAdapter"*
  %608 = inttoptr i64 %601 to i64*
  store i64 %606, i64* %608, align 8
  %609 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %607, i64 1
  %610 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %609 to i64
  br label %611

611:                                              ; preds = %605, %600
  %612 = phi i64 [ %601, %600 ], [ %610, %605 ]
  %613 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 4
  %614 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %613, %315
  br i1 %614, label %380, label %363

615:                                              ; preds = %277
  %616 = ptrtoint i8* %280 to i64
  %617 = inttoptr i64 %278 to %"class.base::internal::UncheckedObserverAdapter"*
  %618 = inttoptr i64 %278 to i64*
  store i64 %616, i64* %618, align 8
  %619 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %617, i64 1
  %620 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %619 to i64
  br label %621

621:                                              ; preds = %615, %277
  %622 = phi i64 [ %278, %277 ], [ %620, %615 ]
  %623 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 2, i32 0
  %624 = load i8*, i8** %623, align 8
  %625 = icmp eq i8* %624, null
  br i1 %625, label %632, label %626

626:                                              ; preds = %621
  %627 = ptrtoint i8* %624 to i64
  %628 = inttoptr i64 %622 to %"class.base::internal::UncheckedObserverAdapter"*
  %629 = inttoptr i64 %622 to i64*
  store i64 %627, i64* %629, align 8
  %630 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %628, i64 1
  %631 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %630 to i64
  br label %632

632:                                              ; preds = %626, %621
  %633 = phi i64 [ %622, %621 ], [ %631, %626 ]
  %634 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 3, i32 0
  %635 = load i8*, i8** %634, align 8
  %636 = icmp eq i8* %635, null
  br i1 %636, label %643, label %637

637:                                              ; preds = %632
  %638 = ptrtoint i8* %635 to i64
  %639 = inttoptr i64 %633 to %"class.base::internal::UncheckedObserverAdapter"*
  %640 = inttoptr i64 %633 to i64*
  store i64 %638, i64* %640, align 8
  %641 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %639, i64 1
  %642 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %641 to i64
  br label %643

643:                                              ; preds = %637, %632
  %644 = phi i64 [ %633, %632 ], [ %642, %637 ]
  %645 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 4
  %646 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %645, %217
  br i1 %646, label %282, label %265

647:                                              ; preds = %184
  %648 = ptrtoint i8* %187 to i64
  %649 = inttoptr i64 %185 to %"class.base::internal::UncheckedObserverAdapter"*
  %650 = inttoptr i64 %185 to i64*
  store i64 %648, i64* %650, align 8
  %651 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %649, i64 1
  %652 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %651 to i64
  br label %653

653:                                              ; preds = %647, %184
  %654 = phi i64 [ %185, %184 ], [ %652, %647 ]
  %655 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 2, i32 0
  %656 = load i8*, i8** %655, align 8
  %657 = icmp eq i8* %656, null
  br i1 %657, label %664, label %658

658:                                              ; preds = %653
  %659 = ptrtoint i8* %656 to i64
  %660 = inttoptr i64 %654 to %"class.base::internal::UncheckedObserverAdapter"*
  %661 = inttoptr i64 %654 to i64*
  store i64 %659, i64* %661, align 8
  %662 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %660, i64 1
  %663 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %662 to i64
  br label %664

664:                                              ; preds = %658, %653
  %665 = phi i64 [ %654, %653 ], [ %663, %658 ]
  %666 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 3, i32 0
  %667 = load i8*, i8** %666, align 8
  %668 = icmp eq i8* %667, null
  br i1 %668, label %675, label %669

669:                                              ; preds = %664
  %670 = ptrtoint i8* %667 to i64
  %671 = inttoptr i64 %665 to %"class.base::internal::UncheckedObserverAdapter"*
  %672 = inttoptr i64 %665 to i64*
  store i64 %670, i64* %672, align 8
  %673 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %671, i64 1
  %674 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %673 to i64
  br label %675

675:                                              ; preds = %669, %664
  %676 = phi i64 [ %665, %664 ], [ %674, %669 ]
  %677 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 4
  %678 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %677, %124
  br i1 %678, label %189, label %172
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistryD0Ev(%"class.policy::SchemaRegistry"*) unnamed_addr #3 align 2 {
  tail call void @_ZN6policy14SchemaRegistryD2Ev(%"class.policy::SchemaRegistry"* %0) #15
  %2 = bitcast %"class.policy::SchemaRegistry"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry17RegisterComponentERKNS_15PolicyNamespaceERKNS_6SchemaE(%"class.policy::SchemaRegistry"*, %"struct.policy::PolicyNamespace"* dereferenceable(32), %"class.policy::Schema"* dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.51", align 1
  %6 = alloca %"class.std::__1::map.20", align 8
  %7 = bitcast %"class.std::__1::map.20"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.std::__1::map.20", %"class.std::__1::map.20"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::map.20", %"class.std::__1::map.20"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::map.20", %"class.std::__1::map.20"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"struct.policy::PolicyNamespace", %"struct.policy::PolicyNamespace"* %1, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::map.20", %"class.std::__1::map.20"* %6, i64 0, i32 0
  %14 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple.51", %"class.std::__1::tuple.51"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #15
  %17 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.21"* nonnull %13, %"class.std::__1::basic_string"* dereferenceable(24) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.51"* nonnull dereferenceable(1) %5) #15
  %18 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %17, 0
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 7
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.policy::Schema"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %21 = call dereferenceable(16) %"class.policy::Schema"* @_ZN6policy6SchemaaSERKS0_(%"class.policy::Schema"* %20, %"class.policy::Schema"* dereferenceable(16) %2) #15
  %22 = getelementptr inbounds %"struct.policy::PolicyNamespace", %"struct.policy::PolicyNamespace"* %1, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = bitcast %"class.policy::SchemaRegistry"* %0 to void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)***
  %25 = load void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)**, void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)*, void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)** %25, i64 2
  %27 = load void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)*, void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)** %26, align 8
  call void %27(%"class.policy::SchemaRegistry"* %0, i32 %23, %"class.std::__1::map.20"* nonnull dereferenceable(24) %6) #15
  %28 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %29 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %28, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.21"* nonnull %13, %"class.std::__1::__tree_node"* %29) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

declare dereferenceable(16) %"class.policy::Schema"* @_ZN6policy6SchemaaSERKS0_(%"class.policy::Schema"*, %"class.policy::Schema"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry18RegisterComponentsENS_12PolicyDomainERKNSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_6SchemaENS2_4lessIS9_EENS7_INS2_4pairIKS9_SA_EEEEEE(%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"* dereferenceable(24)) unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.51", align 1
  %6 = alloca %"class.std::__1::map", align 8
  %7 = getelementptr inbounds %"class.std::__1::map.20", %"class.std::__1::map.20"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %195, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::map"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %15, i64 0, i32 0
  %17 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %16, align 8
  %18 = tail call dereferenceable(24) %"class.std::__1::map"* @_ZNK6policy9SchemaMap10GetDomainsEv(%"class.policy::SchemaMap"* %17) #15
  %19 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__compressed_pair"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %20, %"class.std::__1::__tree_end_node"** %12, align 8
  %23 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 0
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %24, %25
  br i1 %26, label %63, label %27

27:                                               ; preds = %10, %60
  %28 = phi %"class.std::__1::__tree_end_node"* [ %61, %60 ], [ %24, %10 ]
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 4
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"struct.std::__1::pair.45"*
  %31 = bitcast %"class.std::__1::__tree_end_node"* %29 to i32*
  %32 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE30__emplace_hint_unique_key_argsIS3_JRKNSE_IKS3_SI_EEEEENSE_INS_15__tree_iteratorISJ_PNS_11__tree_nodeISJ_PvEElEEbEENS_21__tree_const_iteratorISJ_SY_lEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %19, %"class.std::__1::__tree_end_node"* %20, i32* dereferenceable(4) %31, %"struct.std::__1::pair.45"* dereferenceable(32) %30) #15
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 1, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %44

36:                                               ; preds = %27
  %37 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node_base"*
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 2
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_end_node"**
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %37
  br i1 %43, label %60, label %51

44:                                               ; preds = %27, %44
  %45 = phi %"class.std::__1::__tree_node_base"* [ %47, %44 ], [ %34, %27 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %44

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0
  br label %60

51:                                               ; preds = %36, %51
  %52 = phi %"class.std::__1::__tree_end_node"** [ %55, %51 ], [ %39, %36 ]
  %53 = bitcast %"class.std::__1::__tree_end_node"** %52 to %"class.std::__1::__tree_node_base"**
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 2
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, %54
  br i1 %59, label %60, label %51

60:                                               ; preds = %51, %49, %36
  %61 = phi %"class.std::__1::__tree_end_node"* [ %50, %49 ], [ %40, %36 ], [ %56, %51 ]
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %25
  br i1 %62, label %63, label %27

63:                                               ; preds = %60, %10
  %64 = getelementptr inbounds %"class.std::__1::map.20", %"class.std::__1::map.20"* %2, i64 0, i32 0, i32 0
  %65 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::map.20", %"class.std::__1::map.20"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %67 = icmp eq %"class.std::__1::__tree_end_node"* %65, %66
  br i1 %67, label %75, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node.60"**
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 0, i32 0
  %71 = bitcast %"class.std::__1::map"* %6 to i64*
  %72 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %73 = bitcast %"class.std::__1::tuple"* %4 to %"class.std::__1::__tree_end_node"**
  %74 = getelementptr inbounds %"class.std::__1::tuple.51", %"class.std::__1::tuple.51"* %5, i64 0, i32 0
  br label %93

75:                                               ; preds = %192, %63
  %76 = call i8* @_Znwm(i64 32) #14
  %77 = bitcast i8* %76 to %"class.policy::SchemaMap"*
  call void @_ZN6policy9SchemaMapC1ERNSt3__13mapINS_12PolicyDomainENS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_6SchemaENS1_4lessIS9_EENS7_INS1_4pairIKS9_SA_EEEEEENSB_IS3_EENS7_INSD_IKS3_SH_EEEEEE(%"class.policy::SchemaMap"* nonnull %77, %"class.std::__1::map"* nonnull dereferenceable(24) %6) #15
  %78 = bitcast i8* %76 to i32*
  %79 = atomicrmw add i32* %78, i32 1 monotonic
  %80 = ptrtoint i8* %76 to i64
  %81 = bitcast %class.scoped_refptr* %15 to i64*
  %82 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %16, align 8
  store i64 %80, i64* %81, align 8
  %83 = icmp eq %"class.policy::SchemaMap"* %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %75
  %85 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw sub i32* %85, i32 1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %82) #15
  %89 = bitcast %"class.policy::SchemaMap"* %82 to i8*
  call void @_ZdlPv(i8* %89) #14
  br label %90

90:                                               ; preds = %75, %84, %88
  call void @_ZN6policy14SchemaRegistry6NotifyEb(%"class.policy::SchemaRegistry"* %0, i1 zeroext true)
  %91 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node.60"**
  %92 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %91, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE7destroyEPNS_11__tree_nodeISJ_PvEE(%"class.std::__1::__tree"* nonnull %19, %"class.std::__1::__tree_node.60"* %92) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #15
  br label %195

93:                                               ; preds = %68, %192
  %94 = phi %"class.std::__1::__tree_end_node"* [ %65, %68 ], [ %193, %192 ]
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 4
  %96 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 7
  %97 = bitcast %"class.std::__1::__tree_end_node"* %96 to %"class.policy::Schema"*
  %98 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %69, align 8
  %99 = icmp eq %"class.std::__1::__tree_node.60"* %98, null
  br i1 %99, label %126, label %100

100:                                              ; preds = %93, %122
  %101 = phi %"class.std::__1::__tree_node.60"* [ %125, %122 ], [ %98, %93 ]
  %102 = phi %"class.std::__1::__tree_node_base"** [ %124, %122 ], [ %13, %93 ]
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %101, i64 0, i32 1, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp sgt i32 %104, %1
  br i1 %105, label %106, label %112

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %101, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, null
  br i1 %109, label %110, label %122

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %101, i64 0, i32 0, i32 0
  br label %126

112:                                              ; preds = %100
  %113 = icmp slt i32 %104, %1
  br i1 %113, label %114, label %120

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %101, i64 0, i32 0, i32 1
  %116 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %115, align 8
  %117 = icmp eq %"class.std::__1::__tree_node_base"* %116, null
  br i1 %117, label %118, label %122

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %101, i64 0, i32 0, i32 0
  br label %126

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %101, i64 0, i32 0, i32 0
  br label %126

122:                                              ; preds = %114, %106
  %123 = phi %"class.std::__1::__tree_node_base"* [ %108, %106 ], [ %116, %114 ]
  %124 = phi %"class.std::__1::__tree_node_base"** [ %107, %106 ], [ %115, %114 ]
  %125 = bitcast %"class.std::__1::__tree_node_base"* %123 to %"class.std::__1::__tree_node.60"*
  br label %100

126:                                              ; preds = %93, %120, %118, %110
  %127 = phi %"class.std::__1::__tree_end_node"* [ %111, %110 ], [ %119, %118 ], [ %121, %120 ], [ %20, %93 ]
  %128 = phi %"class.std::__1::__tree_node_base"** [ %107, %110 ], [ %115, %118 ], [ %102, %120 ], [ %70, %93 ]
  %129 = bitcast %"class.std::__1::__tree_node_base"** %128 to %"class.std::__1::__tree_node.60"**
  %130 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node.60"* %130, null
  br i1 %131, label %132, label %156

132:                                              ; preds = %126
  %133 = call i8* @_Znwm(i64 64) #14, !noalias !13
  %134 = getelementptr inbounds i8, i8* %133, i64 32
  %135 = bitcast i8* %134 to i32*
  store i32 %1, i32* %135, align 8, !noalias !13
  %136 = getelementptr inbounds i8, i8* %133, i64 48
  %137 = getelementptr inbounds i8, i8* %133, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 16, i1 false) #15, !noalias !13
  %138 = bitcast i8* %137 to i8**
  store i8* %136, i8** %138, align 8, !noalias !13
  %139 = bitcast i8* %133 to %"class.std::__1::__tree_node.60"*
  %140 = bitcast i8* %133 to %"class.std::__1::__tree_node_base"*
  %141 = getelementptr inbounds i8, i8* %133, i64 16
  %142 = bitcast i8* %141 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %127, %"class.std::__1::__tree_end_node"** %142, align 8
  %143 = bitcast %"class.std::__1::__tree_node_base"** %128 to i8**
  store i8* %133, i8** %143, align 8
  %144 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, null
  br i1 %147, label %151, label %148

148:                                              ; preds = %132
  %149 = ptrtoint %"class.std::__1::__tree_node_base"* %146 to i64
  store i64 %149, i64* %71, align 8
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  br label %151

151:                                              ; preds = %148, %132
  %152 = phi %"class.std::__1::__tree_node_base"* [ %140, %132 ], [ %150, %148 ]
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %13, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %153, %"class.std::__1::__tree_node_base"* %152) #15
  %154 = load i64, i64* %14, align 8
  %155 = add i64 %154, 1
  store i64 %155, i64* %14, align 8
  br label %156

156:                                              ; preds = %126, %151
  %157 = phi %"class.std::__1::__tree_node.60"* [ %139, %151 ], [ %130, %126 ]
  %158 = bitcast %"class.std::__1::__tree_end_node"* %95 to %"class.std::__1::basic_string"*
  %159 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %157, i64 0, i32 1, i32 0, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #15
  store %"class.std::__1::__tree_end_node"* %95, %"class.std::__1::__tree_end_node"** %73, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %74) #15
  %160 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.21"* %159, %"class.std::__1::basic_string"* dereferenceable(24) %158, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.51"* nonnull dereferenceable(1) %5) #15
  %161 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %160, 0
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %161, i64 7
  %163 = bitcast %"class.std::__1::__tree_end_node"* %162 to %"class.policy::Schema"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %74) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #15
  %164 = call dereferenceable(16) %"class.policy::Schema"* @_ZN6policy6SchemaaSERKS0_(%"class.policy::Schema"* %163, %"class.policy::Schema"* dereferenceable(16) %97) #15
  %165 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 1, i32 0
  %166 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  %167 = icmp eq %"class.std::__1::__tree_node_base"* %166, null
  br i1 %167, label %168, label %176

168:                                              ; preds = %156
  %169 = bitcast %"class.std::__1::__tree_end_node"* %94 to %"class.std::__1::__tree_node_base"*
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 2
  %171 = bitcast %"class.std::__1::__tree_end_node"* %170 to %"class.std::__1::__tree_end_node"**
  %172 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %171, align 8
  %173 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %172, i64 0, i32 0
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  %175 = icmp eq %"class.std::__1::__tree_node_base"* %174, %169
  br i1 %175, label %192, label %183

176:                                              ; preds = %156, %176
  %177 = phi %"class.std::__1::__tree_node_base"* [ %179, %176 ], [ %166, %156 ]
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %177, i64 0, i32 0, i32 0
  %179 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %178, align 8
  %180 = icmp eq %"class.std::__1::__tree_node_base"* %179, null
  br i1 %180, label %181, label %176

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %177, i64 0, i32 0
  br label %192

183:                                              ; preds = %168, %183
  %184 = phi %"class.std::__1::__tree_end_node"** [ %187, %183 ], [ %171, %168 ]
  %185 = bitcast %"class.std::__1::__tree_end_node"** %184 to %"class.std::__1::__tree_node_base"**
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 2
  %188 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %187, align 8
  %189 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %188, i64 0, i32 0
  %190 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %189, align 8
  %191 = icmp eq %"class.std::__1::__tree_node_base"* %190, %186
  br i1 %191, label %192, label %183

192:                                              ; preds = %183, %168, %181
  %193 = phi %"class.std::__1::__tree_end_node"* [ %182, %181 ], [ %172, %168 ], [ %188, %183 ]
  %194 = icmp eq %"class.std::__1::__tree_end_node"* %193, %66
  br i1 %194, label %75, label %93

195:                                              ; preds = %3, %90
  ret void
}

declare dereferenceable(24) %"class.std::__1::map"* @_ZNK6policy9SchemaMap10GetDomainsEv(%"class.policy::SchemaMap"*) local_unnamed_addr #5

declare void @_ZN6policy9SchemaMapC1ERNSt3__13mapINS_12PolicyDomainENS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_6SchemaENS1_4lessIS9_EENS7_INS1_4pairIKS9_SA_EEEEEENSB_IS3_EENS7_INSD_IKS3_SH_EEEEEE(%"class.policy::SchemaMap"*, %"class.std::__1::map"* dereferenceable(24)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry6NotifyEb(%"class.policy::SchemaRegistry"*, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2
  %6 = bitcast %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !16
  %13 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !16
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #15, !alias.scope !16
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8
  %20 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #15
  store i64 0, i64* %8, align 8
  %21 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %54, %50, %44, %31, %17
  %60 = bitcast %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #15
  %61 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #15
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #15, !alias.scope !19
  %67 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %68

68:                                               ; preds = %307, %59
  %69 = phi %"class.base::ObserverList"* [ %67, %59 ], [ %305, %307 ]
  %70 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %68
  %72 = load i64, i64* %8, align 8
  %73 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::ObserverList"* %69 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = ashr exact i64 %78, 3
  %80 = load i64, i64* %9, align 8
  %81 = icmp ult i64 %79, %80
  %82 = select i1 %81, i64 %79, i64 %80
  %83 = icmp eq i64 %72, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %71
  %85 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %102

86:                                               ; preds = %71, %68
  %87 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %88 = icmp eq %"class.base::ObserverList"* %87, null
  br i1 %88, label %202, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %62, align 8
  %91 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::ObserverList"* %87 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = load i64, i64* %63, align 8
  %99 = icmp ult i64 %97, %98
  %100 = select i1 %99, i64 %97, i64 %98
  %101 = icmp eq i64 %90, %100
  br i1 %101, label %111, label %102

102:                                              ; preds = %89, %84
  %103 = phi %"class.base::ObserverList"* [ %85, %84 ], [ %87, %89 ]
  %104 = icmp eq %"class.base::ObserverList"* %69, %103
  %105 = load i64, i64* %8, align 8
  %106 = load i64, i64* %62, align 8
  %107 = icmp eq i64 %105, %106
  %108 = and i1 %104, %107
  br i1 %108, label %109, label %296

109:                                              ; preds = %102
  %110 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %110, label %202, label %111

111:                                              ; preds = %89, %109
  %112 = phi %"class.base::ObserverList"* [ %69, %109 ], [ %87, %89 ]
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::LinkNodeBase"** %114 to %"class.base::LinkNode"**
  %116 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %115, align 8
  %117 = bitcast %"class.base::LinkedList"* %113 to %"class.base::LinkNode"**
  %118 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %117, align 8
  %119 = icmp eq %"class.base::LinkNode"* %116, %118
  br i1 %119, label %120, label %198

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %121, align 8
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 1
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %122, %124
  br i1 %125, label %134, label %126

126:                                              ; preds = %120, %131
  %127 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %131 ], [ %122, %120 ]
  %128 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 1
  %133 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %124
  br i1 %133, label %198, label %126

134:                                              ; preds = %126, %120
  %135 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %122, %120 ], [ %127, %126 ]
  %136 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %135 to i64
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %124
  br i1 %137, label %198, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %135, i64 1
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %124
  br i1 %140, label %193, label %141

141:                                              ; preds = %138
  %142 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %124, i64 -2, i32 0
  %143 = ptrtoint i8** %142 to i64
  %144 = sub i64 %143, %136
  %145 = lshr i64 %144, 3
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %167, label %149

149:                                              ; preds = %141, %162
  %150 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %164, %162 ], [ %139, %141 ]
  %151 = phi i64 [ %163, %162 ], [ %136, %141 ]
  %152 = phi i64 [ %165, %162 ], [ %147, %141 ]
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %149
  %157 = ptrtoint i8* %154 to i64
  %158 = inttoptr i64 %151 to %"class.base::internal::UncheckedObserverAdapter"*
  %159 = inttoptr i64 %151 to i64*
  store i64 %157, i64* %159, align 8
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %161 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %160 to i64
  br label %162

162:                                              ; preds = %156, %149
  %163 = phi i64 [ %151, %149 ], [ %161, %156 ]
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %165 = add i64 %152, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %149, !llvm.loop !22

167:                                              ; preds = %162, %141
  %168 = phi i64 [ undef, %141 ], [ %163, %162 ]
  %169 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %141 ], [ %164, %162 ]
  %170 = phi i64 [ %136, %141 ], [ %163, %162 ]
  %171 = icmp ult i64 %144, 24
  br i1 %171, label %189, label %172

172:                                              ; preds = %167, %397
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %399, %397 ], [ %169, %167 ]
  %174 = phi i64 [ %398, %397 ], [ %170, %167 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = ptrtoint i8* %176 to i64
  %180 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %181 = inttoptr i64 %174 to i64*
  store i64 %179, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1
  %183 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %182 to i64
  br label %184

184:                                              ; preds = %178, %172
  %185 = phi i64 [ %174, %172 ], [ %183, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %375, label %369

189:                                              ; preds = %397, %167
  %190 = phi i64 [ %168, %167 ], [ %398, %397 ]
  %191 = inttoptr i64 %190 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %193

193:                                              ; preds = %189, %138
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %138 ], [ %192, %189 ]
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %138 ], [ %191, %189 ]
  %196 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %195, %194
  br i1 %196, label %198, label %197

197:                                              ; preds = %193
  store %"class.base::internal::UncheckedObserverAdapter"* %195, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %198

198:                                              ; preds = %131, %197, %193, %134, %111
  %199 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %200 = icmp eq %"class.base::ObserverList"* %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #15
  br label %202

202:                                              ; preds = %86, %109, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #15
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %295, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1, i32 0, i32 0, i32 1
  %208 = bitcast %"class.base::internal::LinkNodeBase"** %207 to %"class.base::LinkNode"**
  %209 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %208, align 8
  %210 = bitcast %"class.base::LinkedList"* %206 to %"class.base::LinkNode"**
  %211 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %210, align 8
  %212 = icmp eq %"class.base::LinkNode"* %209, %211
  br i1 %212, label %213, label %291

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %214, align 8
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 1
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %215, %217
  br i1 %218, label %227, label %219

219:                                              ; preds = %213, %224
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %224 ], [ %215, %213 ]
  %221 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 1
  %226 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %217
  br i1 %226, label %291, label %219

227:                                              ; preds = %219, %213
  %228 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %213 ], [ %220, %219 ]
  %229 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %228 to i64
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %217
  br i1 %230, label %291, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %217
  br i1 %233, label %286, label %234

234:                                              ; preds = %231
  %235 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %217, i64 -2, i32 0
  %236 = ptrtoint i8** %235 to i64
  %237 = sub i64 %236, %229
  %238 = lshr i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %260, label %242

242:                                              ; preds = %234, %255
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %257, %255 ], [ %232, %234 ]
  %244 = phi i64 [ %256, %255 ], [ %229, %234 ]
  %245 = phi i64 [ %258, %255 ], [ %240, %234 ]
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %242
  %250 = ptrtoint i8* %247 to i64
  %251 = inttoptr i64 %244 to %"class.base::internal::UncheckedObserverAdapter"*
  %252 = inttoptr i64 %244 to i64*
  store i64 %250, i64* %252, align 8
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %254 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %253 to i64
  br label %255

255:                                              ; preds = %249, %242
  %256 = phi i64 [ %244, %242 ], [ %254, %249 ]
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %258 = add i64 %245, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %242, !llvm.loop !23

260:                                              ; preds = %255, %234
  %261 = phi i64 [ undef, %234 ], [ %256, %255 ]
  %262 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %234 ], [ %257, %255 ]
  %263 = phi i64 [ %229, %234 ], [ %256, %255 ]
  %264 = icmp ult i64 %237, 24
  br i1 %264, label %282, label %265

265:                                              ; preds = %260, %365
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %367, %365 ], [ %262, %260 ]
  %267 = phi i64 [ %366, %365 ], [ %263, %260 ]
  %268 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = icmp eq i8* %269, null
  br i1 %270, label %277, label %271

271:                                              ; preds = %265
  %272 = ptrtoint i8* %269 to i64
  %273 = inttoptr i64 %267 to %"class.base::internal::UncheckedObserverAdapter"*
  %274 = inttoptr i64 %267 to i64*
  store i64 %272, i64* %274, align 8
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 1
  %276 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %275 to i64
  br label %277

277:                                              ; preds = %271, %265
  %278 = phi i64 [ %267, %265 ], [ %276, %271 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %343, label %337

282:                                              ; preds = %365, %260
  %283 = phi i64 [ %261, %260 ], [ %366, %365 ]
  %284 = inttoptr i64 %283 to %"class.base::internal::UncheckedObserverAdapter"*
  %285 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %286

286:                                              ; preds = %282, %231
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %231 ], [ %285, %282 ]
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %231 ], [ %284, %282 ]
  %289 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %288, %287
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  store %"class.base::internal::UncheckedObserverAdapter"* %288, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %291

291:                                              ; preds = %224, %290, %286, %227, %205
  %292 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %293 = icmp eq %"class.base::ObserverList"* %292, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %291
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br label %295

295:                                              ; preds = %202, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #15
  ret void

296:                                              ; preds = %102
  %297 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %297, align 8
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %298, i64 %105
  %300 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %299 to %"class.policy::SchemaRegistry::Observer"**
  %301 = load %"class.policy::SchemaRegistry::Observer"*, %"class.policy::SchemaRegistry::Observer"** %300, align 8
  %302 = bitcast %"class.policy::SchemaRegistry::Observer"* %301 to void (%"class.policy::SchemaRegistry::Observer"*, i1)***
  %303 = load void (%"class.policy::SchemaRegistry::Observer"*, i1)**, void (%"class.policy::SchemaRegistry::Observer"*, i1)*** %302, align 8
  %304 = load void (%"class.policy::SchemaRegistry::Observer"*, i1)*, void (%"class.policy::SchemaRegistry::Observer"*, i1)** %303, align 8
  call void %304(%"class.policy::SchemaRegistry::Observer"* %301, i1 zeroext %1) #15
  %305 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %306 = icmp eq %"class.base::ObserverList"* %305, null
  br i1 %306, label %307, label %308

307:                                              ; preds = %332, %328, %296, %308, %322
  br label %68

308:                                              ; preds = %296
  %309 = load i64, i64* %8, align 8
  %310 = add i64 %309, 1
  store i64 %310, i64* %8, align 8
  %311 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 1
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.base::ObserverList"* %305 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = sub i64 %313, %315
  %317 = ashr exact i64 %316, 3
  %318 = load i64, i64* %9, align 8
  %319 = icmp ult i64 %317, %318
  %320 = select i1 %319, i64 %317, i64 %318
  %321 = icmp ult i64 %310, %320
  br i1 %321, label %322, label %307

322:                                              ; preds = %308
  %323 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %324 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 %310, i32 0
  %326 = load i8*, i8** %325, align 8
  %327 = icmp eq i8* %326, null
  br i1 %327, label %328, label %307

328:                                              ; preds = %322, %332
  %329 = phi i64 [ %330, %332 ], [ %310, %322 ]
  %330 = add nuw i64 %329, 1
  store i64 %330, i64* %8, align 8
  %331 = icmp ult i64 %330, %320
  br i1 %331, label %332, label %307

332:                                              ; preds = %328
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %324, align 8
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 %330, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %328, label %307

337:                                              ; preds = %277
  %338 = ptrtoint i8* %280 to i64
  %339 = inttoptr i64 %278 to %"class.base::internal::UncheckedObserverAdapter"*
  %340 = inttoptr i64 %278 to i64*
  store i64 %338, i64* %340, align 8
  %341 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %339, i64 1
  %342 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %341 to i64
  br label %343

343:                                              ; preds = %337, %277
  %344 = phi i64 [ %278, %277 ], [ %342, %337 ]
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 2, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %354, label %348

348:                                              ; preds = %343
  %349 = ptrtoint i8* %346 to i64
  %350 = inttoptr i64 %344 to %"class.base::internal::UncheckedObserverAdapter"*
  %351 = inttoptr i64 %344 to i64*
  store i64 %349, i64* %351, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %350, i64 1
  %353 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %352 to i64
  br label %354

354:                                              ; preds = %348, %343
  %355 = phi i64 [ %344, %343 ], [ %353, %348 ]
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 3, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %365, label %359

359:                                              ; preds = %354
  %360 = ptrtoint i8* %357 to i64
  %361 = inttoptr i64 %355 to %"class.base::internal::UncheckedObserverAdapter"*
  %362 = inttoptr i64 %355 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1
  %364 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  br label %365

365:                                              ; preds = %359, %354
  %366 = phi i64 [ %355, %354 ], [ %364, %359 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 4
  %368 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %367, %217
  br i1 %368, label %282, label %265

369:                                              ; preds = %184
  %370 = ptrtoint i8* %187 to i64
  %371 = inttoptr i64 %185 to %"class.base::internal::UncheckedObserverAdapter"*
  %372 = inttoptr i64 %185 to i64*
  store i64 %370, i64* %372, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %371, i64 1
  %374 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %373 to i64
  br label %375

375:                                              ; preds = %369, %184
  %376 = phi i64 [ %185, %184 ], [ %374, %369 ]
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 2, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %386, label %380

380:                                              ; preds = %375
  %381 = ptrtoint i8* %378 to i64
  %382 = inttoptr i64 %376 to %"class.base::internal::UncheckedObserverAdapter"*
  %383 = inttoptr i64 %376 to i64*
  store i64 %381, i64* %383, align 8
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %382, i64 1
  %385 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %384 to i64
  br label %386

386:                                              ; preds = %380, %375
  %387 = phi i64 [ %376, %375 ], [ %385, %380 ]
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 3, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %397, label %391

391:                                              ; preds = %386
  %392 = ptrtoint i8* %389 to i64
  %393 = inttoptr i64 %387 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %387 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %386
  %398 = phi i64 [ %387, %386 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 4
  %400 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %399, %124
  br i1 %400, label %189, label %172
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry19UnregisterComponentERKNS_15PolicyNamespaceE(%"class.policy::SchemaRegistry"*, %"struct.policy::PolicyNamespace"* dereferenceable(32)) unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::map", align 8
  %4 = bitcast %"class.std::__1::map"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %8, i64 0, i32 0
  %10 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %9, align 8
  %11 = tail call dereferenceable(24) %"class.std::__1::map"* @_ZNK6policy9SchemaMap10GetDomainsEv(%"class.policy::SchemaMap"* %10) #15
  %12 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__compressed_pair"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"** %5, align 8
  %16 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = icmp eq %"class.std::__1::__tree_end_node"* %17, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node.60"**
  %22 = getelementptr inbounds %"struct.policy::PolicyNamespace", %"struct.policy::PolicyNamespace"* %1, i64 0, i32 0
  br label %92

23:                                               ; preds = %2, %56
  %24 = phi %"class.std::__1::__tree_end_node"* [ %57, %56 ], [ %17, %2 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 4
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"struct.std::__1::pair.45"*
  %27 = bitcast %"class.std::__1::__tree_end_node"* %25 to i32*
  %28 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE30__emplace_hint_unique_key_argsIS3_JRKNSE_IKS3_SI_EEEEENSE_INS_15__tree_iteratorISJ_PNS_11__tree_nodeISJ_PvEElEEbEENS_21__tree_const_iteratorISJ_SY_lEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %12, %"class.std::__1::__tree_end_node"* %13, i32* dereferenceable(4) %27, %"struct.std::__1::pair.45"* dereferenceable(32) %26) #15
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 1, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %40

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node_base"*
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 2
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_end_node"**
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, %33
  br i1 %39, label %56, label %47

40:                                               ; preds = %23, %40
  %41 = phi %"class.std::__1::__tree_node_base"* [ %43, %40 ], [ %30, %23 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %40

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0
  br label %56

47:                                               ; preds = %32, %47
  %48 = phi %"class.std::__1::__tree_end_node"** [ %51, %47 ], [ %35, %32 ]
  %49 = bitcast %"class.std::__1::__tree_end_node"** %48 to %"class.std::__1::__tree_node_base"**
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %50, i64 0, i32 2
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, %50
  br i1 %55, label %56, label %47

56:                                               ; preds = %47, %45, %32
  %57 = phi %"class.std::__1::__tree_end_node"* [ %46, %45 ], [ %36, %32 ], [ %52, %47 ]
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %57, %18
  br i1 %58, label %59, label %23

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node.60"**
  %61 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %60, align 8
  %62 = getelementptr inbounds %"struct.policy::PolicyNamespace", %"struct.policy::PolicyNamespace"* %1, i64 0, i32 0
  %63 = icmp eq %"class.std::__1::__tree_node.60"* %61, null
  br i1 %63, label %92, label %64

64:                                               ; preds = %59
  %65 = load i32, i32* %62, align 4
  br label %66

66:                                               ; preds = %88, %64
  %67 = phi %"class.std::__1::__tree_node.60"* [ %91, %88 ], [ %61, %64 ]
  %68 = phi %"class.std::__1::__tree_node_base"** [ %90, %88 ], [ %6, %64 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %67, i64 0, i32 1, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %65, %70
  br i1 %71, label %72, label %78

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %67, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %76, label %88

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %67, i64 0, i32 0, i32 0
  br label %96

78:                                               ; preds = %66
  %79 = icmp slt i32 %70, %65
  br i1 %79, label %80, label %86

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %67, i64 0, i32 0, i32 1
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %84, label %88

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %67, i64 0, i32 0, i32 0
  br label %96

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %67, i64 0, i32 0, i32 0
  br label %96

88:                                               ; preds = %80, %72
  %89 = phi %"class.std::__1::__tree_node_base"* [ %74, %72 ], [ %82, %80 ]
  %90 = phi %"class.std::__1::__tree_node_base"** [ %73, %72 ], [ %81, %80 ]
  %91 = bitcast %"class.std::__1::__tree_node_base"* %89 to %"class.std::__1::__tree_node.60"*
  br label %66

92:                                               ; preds = %20, %59
  %93 = phi i32* [ %22, %20 ], [ %62, %59 ]
  %94 = phi %"class.std::__1::__tree_node.60"** [ %21, %20 ], [ %60, %59 ]
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 0, i32 0
  br label %96

96:                                               ; preds = %92, %86, %84, %76
  %97 = phi i32* [ %93, %92 ], [ %62, %76 ], [ %62, %84 ], [ %62, %86 ]
  %98 = phi %"class.std::__1::__tree_node.60"** [ %94, %92 ], [ %60, %76 ], [ %60, %84 ], [ %60, %86 ]
  %99 = phi %"class.std::__1::__tree_end_node"* [ %13, %92 ], [ %77, %76 ], [ %85, %84 ], [ %87, %86 ]
  %100 = phi %"class.std::__1::__tree_node_base"** [ %95, %92 ], [ %73, %76 ], [ %81, %84 ], [ %68, %86 ]
  %101 = bitcast %"class.std::__1::__tree_node_base"** %100 to %"class.std::__1::__tree_node.60"**
  %102 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node.60"* %102, null
  br i1 %103, label %104, label %130

104:                                              ; preds = %96
  %105 = call i8* @_Znwm(i64 64) #14, !noalias !24
  %106 = getelementptr inbounds i8, i8* %105, i64 32
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %97, align 4, !noalias !24
  store i32 %108, i32* %107, align 8, !noalias !24
  %109 = getelementptr inbounds i8, i8* %105, i64 48
  %110 = getelementptr inbounds i8, i8* %105, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #15, !noalias !24
  %111 = bitcast i8* %110 to i8**
  store i8* %109, i8** %111, align 8, !noalias !24
  %112 = bitcast i8* %105 to %"class.std::__1::__tree_node.60"*
  %113 = bitcast i8* %105 to %"class.std::__1::__tree_node_base"*
  %114 = getelementptr inbounds i8, i8* %105, i64 16
  %115 = bitcast i8* %114 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %99, %"class.std::__1::__tree_end_node"** %115, align 8
  %116 = bitcast %"class.std::__1::__tree_node_base"** %100 to i8**
  store i8* %105, i8** %116, align 8
  %117 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %104
  %122 = ptrtoint %"class.std::__1::__tree_node_base"* %119 to i64
  %123 = bitcast %"class.std::__1::map"* %3 to i64*
  store i64 %122, i64* %123, align 8
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  br label %125

125:                                              ; preds = %121, %104
  %126 = phi %"class.std::__1::__tree_node_base"* [ %113, %104 ], [ %124, %121 ]
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %127, %"class.std::__1::__tree_node_base"* %126) #15
  %128 = load i64, i64* %7, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %7, align 8
  br label %130

130:                                              ; preds = %96, %125
  %131 = phi %"class.std::__1::__tree_node.60"* [ %112, %125 ], [ %102, %96 ]
  %132 = getelementptr inbounds %"struct.policy::PolicyNamespace", %"struct.policy::PolicyNamespace"* %1, i64 0, i32 1
  %133 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %131, i64 0, i32 1, i32 0, i32 1, i32 0
  %134 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree.21"* %133, %"class.std::__1::basic_string"* dereferenceable(24) %132) #15
  %135 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %131, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %136 = icmp eq %"class.std::__1::__tree_end_node"* %134, %135
  br i1 %136, label %154, label %137

137:                                              ; preds = %130
  %138 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE(%"class.std::__1::__tree.21"* %133, %"class.std::__1::__tree_end_node"* %134) #15
  %139 = call i8* @_Znwm(i64 32) #14
  %140 = bitcast i8* %139 to %"class.policy::SchemaMap"*
  call void @_ZN6policy9SchemaMapC1ERNSt3__13mapINS_12PolicyDomainENS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_6SchemaENS1_4lessIS9_EENS7_INS1_4pairIKS9_SA_EEEEEENSB_IS3_EENS7_INSD_IKS3_SH_EEEEEE(%"class.policy::SchemaMap"* nonnull %140, %"class.std::__1::map"* nonnull dereferenceable(24) %3) #15
  %141 = bitcast i8* %139 to i32*
  %142 = atomicrmw add i32* %141, i32 1 monotonic
  %143 = ptrtoint i8* %139 to i64
  %144 = bitcast %class.scoped_refptr* %8 to i64*
  %145 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %9, align 8
  store i64 %143, i64* %144, align 8
  %146 = icmp eq %"class.policy::SchemaMap"* %145, null
  br i1 %146, label %153, label %147

147:                                              ; preds = %137
  %148 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw sub i32* %148, i32 1 acq_rel
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %153

151:                                              ; preds = %147
  call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %145) #15
  %152 = bitcast %"class.policy::SchemaMap"* %145 to i8*
  call void @_ZdlPv(i8* %152) #14
  br label %153

153:                                              ; preds = %137, %147, %151
  call void @_ZN6policy14SchemaRegistry6NotifyEb(%"class.policy::SchemaRegistry"* %0, i1 zeroext false)
  br label %154

154:                                              ; preds = %130, %153
  %155 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %98, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE7destroyEPNS_11__tree_nodeISJ_PvEE(%"class.std::__1::__tree"* nonnull %12, %"class.std::__1::__tree_node.60"* %155) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6policy14SchemaRegistry7IsReadyEv(%"class.policy::SchemaRegistry"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 4, i64 0
  %3 = load i8, i8* %2, align 1, !range !27
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 4, i64 1
  %7 = load i8, i8* %6, align 1, !range !27
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5, %1
  ret i1 false

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 4, i64 2
  %12 = load i8, i8* %11, align 1, !range !27
  %13 = icmp ne i8 %12, 0
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"*, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 4, i64 %5
  %7 = load i8, i8* %6, align 1, !range !27
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %355

9:                                                ; preds = %2
  store i8 1, i8* %6, align 1
  %10 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 4, i64 0
  %11 = load i8, i8* %10, align 1, !range !27
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %355, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 4, i64 1
  %15 = load i8, i8* %14, align 1, !range !27
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %355, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 4, i64 2
  %19 = load i8, i8* %18, align 1, !range !27
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %355, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2
  %23 = bitcast %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #15
  %24 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %27 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %22, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 40, i1 false)
  %29 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %27, align 8, !noalias !28
  %30 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %31 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %30, align 8, !noalias !28
  %32 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %29, %31
  %33 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %33) #15
  br i1 %32, label %34, label %36

34:                                               ; preds = %21
  %35 = bitcast %"class.base::ObserverList"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #15, !alias.scope !28
  br label %76

36:                                               ; preds = %21
  store %"class.base::ObserverList"* %22, %"class.base::ObserverList"** %24, align 8
  %37 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %33, %"class.base::internal::LinkNodeBase"* %37) #15
  store i64 0, i64* %25, align 8
  %38 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %30 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.base::ObserverList"* %22 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 3
  br label %48

48:                                               ; preds = %41, %36
  %49 = phi i64 [ %47, %41 ], [ -1, %36 ]
  store i64 %49, i64* %26, align 8
  %50 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %51 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %50, i64 0, i32 0, i32 0, i32 1
  %52 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.base::ObserverList"* %50 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = ashr exact i64 %56, 3
  %58 = icmp ult i64 %57, %49
  %59 = select i1 %58, i64 %57, i64 %49
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %48
  %62 = inttoptr i64 %55 to %"class.base::internal::UncheckedObserverAdapter"*
  %63 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %50, i64 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %62, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %76

67:                                               ; preds = %61, %71
  %68 = phi i64 [ %69, %71 ], [ 0, %61 ]
  %69 = add nuw i64 %68, 1
  store i64 %69, i64* %25, align 8
  %70 = icmp ult i64 %69, %59
  br i1 %70, label %71, label %76

71:                                               ; preds = %67
  %72 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %63, align 8
  %73 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %72, i64 %69, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %67, label %76

76:                                               ; preds = %71, %67, %61, %48, %34
  %77 = bitcast %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77) #15
  %78 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %80 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %81 = getelementptr inbounds %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::ObserverList<policy::SchemaRegistry::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %81) #15
  %83 = bitcast %"class.base::ObserverList"** %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #15, !alias.scope !31
  %84 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  br label %85

85:                                               ; preds = %325, %76
  %86 = phi %"class.base::ObserverList"* [ %84, %76 ], [ %323, %325 ]
  %87 = icmp eq %"class.base::ObserverList"* %86, null
  br i1 %87, label %103, label %88

88:                                               ; preds = %85
  %89 = load i64, i64* %25, align 8
  %90 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %86, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.base::ObserverList"* %86 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = load i64, i64* %26, align 8
  %98 = icmp ult i64 %96, %97
  %99 = select i1 %98, i64 %96, i64 %97
  %100 = icmp eq i64 %89, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %88
  %102 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8
  br label %119

103:                                              ; preds = %88, %85
  %104 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8
  %105 = icmp eq %"class.base::ObserverList"* %104, null
  br i1 %105, label %219, label %106

106:                                              ; preds = %103
  %107 = load i64, i64* %79, align 8
  %108 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %104, i64 0, i32 0, i32 0, i32 1
  %109 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.base::ObserverList"* %104 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %110, %112
  %114 = ashr exact i64 %113, 3
  %115 = load i64, i64* %80, align 8
  %116 = icmp ult i64 %114, %115
  %117 = select i1 %116, i64 %114, i64 %115
  %118 = icmp eq i64 %107, %117
  br i1 %118, label %128, label %119

119:                                              ; preds = %106, %101
  %120 = phi %"class.base::ObserverList"* [ %102, %101 ], [ %104, %106 ]
  %121 = icmp eq %"class.base::ObserverList"* %86, %120
  %122 = load i64, i64* %25, align 8
  %123 = load i64, i64* %79, align 8
  %124 = icmp eq i64 %122, %123
  %125 = and i1 %121, %124
  br i1 %125, label %126, label %313

126:                                              ; preds = %119
  %127 = icmp eq %"class.base::ObserverList"* %86, null
  br i1 %127, label %219, label %128

128:                                              ; preds = %106, %126
  %129 = phi %"class.base::ObserverList"* [ %86, %126 ], [ %104, %106 ]
  %130 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %129, i64 0, i32 1
  %131 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %129, i64 0, i32 1, i32 0, i32 0, i32 1
  %132 = bitcast %"class.base::internal::LinkNodeBase"** %131 to %"class.base::LinkNode"**
  %133 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %132, align 8
  %134 = bitcast %"class.base::LinkedList"* %130 to %"class.base::LinkNode"**
  %135 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %134, align 8
  %136 = icmp eq %"class.base::LinkNode"* %133, %135
  br i1 %136, label %137, label %215

137:                                              ; preds = %128
  %138 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %129, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %138, align 8
  %140 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %129, i64 0, i32 0, i32 0, i32 1
  %141 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %140, align 8
  %142 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %141
  br i1 %142, label %151, label %143

143:                                              ; preds = %137, %148
  %144 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %149, %148 ], [ %139, %137 ]
  %145 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %144, i64 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = icmp eq i8* %146, null
  br i1 %147, label %151, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %144, i64 1
  %150 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %149, %141
  br i1 %150, label %215, label %143

151:                                              ; preds = %143, %137
  %152 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %137 ], [ %144, %143 ]
  %153 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %152 to i64
  %154 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %152, %141
  br i1 %154, label %215, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 1
  %157 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %156, %141
  br i1 %157, label %210, label %158

158:                                              ; preds = %155
  %159 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %141, i64 -2, i32 0
  %160 = ptrtoint i8** %159 to i64
  %161 = sub i64 %160, %153
  %162 = lshr i64 %161, 3
  %163 = add nuw nsw i64 %162, 1
  %164 = and i64 %163, 3
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %184, label %166

166:                                              ; preds = %158, %179
  %167 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %181, %179 ], [ %156, %158 ]
  %168 = phi i64 [ %180, %179 ], [ %153, %158 ]
  %169 = phi i64 [ %182, %179 ], [ %164, %158 ]
  %170 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %167, i64 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = icmp eq i8* %171, null
  br i1 %172, label %179, label %173

173:                                              ; preds = %166
  %174 = ptrtoint i8* %171 to i64
  %175 = inttoptr i64 %168 to %"class.base::internal::UncheckedObserverAdapter"*
  %176 = inttoptr i64 %168 to i64*
  store i64 %174, i64* %176, align 8
  %177 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 1
  %178 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %177 to i64
  br label %179

179:                                              ; preds = %173, %166
  %180 = phi i64 [ %168, %166 ], [ %178, %173 ]
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %167, i64 1
  %182 = add i64 %169, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %166, !llvm.loop !34

184:                                              ; preds = %179, %158
  %185 = phi i64 [ undef, %158 ], [ %180, %179 ]
  %186 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %156, %158 ], [ %181, %179 ]
  %187 = phi i64 [ %153, %158 ], [ %180, %179 ]
  %188 = icmp ult i64 %161, 24
  br i1 %188, label %206, label %189

189:                                              ; preds = %184, %416
  %190 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %418, %416 ], [ %186, %184 ]
  %191 = phi i64 [ %417, %416 ], [ %187, %184 ]
  %192 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 0, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = icmp eq i8* %193, null
  br i1 %194, label %201, label %195

195:                                              ; preds = %189
  %196 = ptrtoint i8* %193 to i64
  %197 = inttoptr i64 %191 to %"class.base::internal::UncheckedObserverAdapter"*
  %198 = inttoptr i64 %191 to i64*
  store i64 %196, i64* %198, align 8
  %199 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %197, i64 1
  %200 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %199 to i64
  br label %201

201:                                              ; preds = %195, %189
  %202 = phi i64 [ %191, %189 ], [ %200, %195 ]
  %203 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 1, i32 0
  %204 = load i8*, i8** %203, align 8
  %205 = icmp eq i8* %204, null
  br i1 %205, label %394, label %388

206:                                              ; preds = %416, %184
  %207 = phi i64 [ %185, %184 ], [ %417, %416 ]
  %208 = inttoptr i64 %207 to %"class.base::internal::UncheckedObserverAdapter"*
  %209 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %140, align 8
  br label %210

210:                                              ; preds = %206, %155
  %211 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %141, %155 ], [ %209, %206 ]
  %212 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %152, %155 ], [ %208, %206 ]
  %213 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %212, %211
  br i1 %213, label %215, label %214

214:                                              ; preds = %210
  store %"class.base::internal::UncheckedObserverAdapter"* %212, %"class.base::internal::UncheckedObserverAdapter"** %140, align 8
  br label %215

215:                                              ; preds = %148, %214, %210, %151, %128
  %216 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %78, align 8
  %217 = icmp eq %"class.base::ObserverList"* %216, null
  br i1 %217, label %219, label %218

218:                                              ; preds = %215
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %78, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %81) #15
  br label %219

219:                                              ; preds = %103, %126, %215, %218
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %77) #15
  %220 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %221 = icmp eq %"class.base::ObserverList"* %220, null
  br i1 %221, label %312, label %222

222:                                              ; preds = %219
  %223 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %220, i64 0, i32 1
  %224 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %220, i64 0, i32 1, i32 0, i32 0, i32 1
  %225 = bitcast %"class.base::internal::LinkNodeBase"** %224 to %"class.base::LinkNode"**
  %226 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %225, align 8
  %227 = bitcast %"class.base::LinkedList"* %223 to %"class.base::LinkNode"**
  %228 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %227, align 8
  %229 = icmp eq %"class.base::LinkNode"* %226, %228
  br i1 %229, label %230, label %308

230:                                              ; preds = %222
  %231 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %220, i64 0, i32 0, i32 0, i32 0
  %232 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %231, align 8
  %233 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %220, i64 0, i32 0, i32 0, i32 1
  %234 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %233, align 8
  %235 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %234
  br i1 %235, label %244, label %236

236:                                              ; preds = %230, %241
  %237 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %242, %241 ], [ %232, %230 ]
  %238 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %237, i64 0, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = icmp eq i8* %239, null
  br i1 %240, label %244, label %241

241:                                              ; preds = %236
  %242 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %237, i64 1
  %243 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %242, %234
  br i1 %243, label %308, label %236

244:                                              ; preds = %236, %230
  %245 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %230 ], [ %237, %236 ]
  %246 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %245 to i64
  %247 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %245, %234
  br i1 %247, label %308, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %245, i64 1
  %250 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %249, %234
  br i1 %250, label %303, label %251

251:                                              ; preds = %248
  %252 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %234, i64 -2, i32 0
  %253 = ptrtoint i8** %252 to i64
  %254 = sub i64 %253, %246
  %255 = lshr i64 %254, 3
  %256 = add nuw nsw i64 %255, 1
  %257 = and i64 %256, 3
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %277, label %259

259:                                              ; preds = %251, %272
  %260 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %274, %272 ], [ %249, %251 ]
  %261 = phi i64 [ %273, %272 ], [ %246, %251 ]
  %262 = phi i64 [ %275, %272 ], [ %257, %251 ]
  %263 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %260, i64 0, i32 0
  %264 = load i8*, i8** %263, align 8
  %265 = icmp eq i8* %264, null
  br i1 %265, label %272, label %266

266:                                              ; preds = %259
  %267 = ptrtoint i8* %264 to i64
  %268 = inttoptr i64 %261 to %"class.base::internal::UncheckedObserverAdapter"*
  %269 = inttoptr i64 %261 to i64*
  store i64 %267, i64* %269, align 8
  %270 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 1
  %271 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %270 to i64
  br label %272

272:                                              ; preds = %266, %259
  %273 = phi i64 [ %261, %259 ], [ %271, %266 ]
  %274 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %260, i64 1
  %275 = add i64 %262, -1
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %277, label %259, !llvm.loop !35

277:                                              ; preds = %272, %251
  %278 = phi i64 [ undef, %251 ], [ %273, %272 ]
  %279 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %249, %251 ], [ %274, %272 ]
  %280 = phi i64 [ %246, %251 ], [ %273, %272 ]
  %281 = icmp ult i64 %254, 24
  br i1 %281, label %299, label %282

282:                                              ; preds = %277, %384
  %283 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %386, %384 ], [ %279, %277 ]
  %284 = phi i64 [ %385, %384 ], [ %280, %277 ]
  %285 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 0, i32 0
  %286 = load i8*, i8** %285, align 8
  %287 = icmp eq i8* %286, null
  br i1 %287, label %294, label %288

288:                                              ; preds = %282
  %289 = ptrtoint i8* %286 to i64
  %290 = inttoptr i64 %284 to %"class.base::internal::UncheckedObserverAdapter"*
  %291 = inttoptr i64 %284 to i64*
  store i64 %289, i64* %291, align 8
  %292 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %290, i64 1
  %293 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %292 to i64
  br label %294

294:                                              ; preds = %288, %282
  %295 = phi i64 [ %284, %282 ], [ %293, %288 ]
  %296 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 1, i32 0
  %297 = load i8*, i8** %296, align 8
  %298 = icmp eq i8* %297, null
  br i1 %298, label %362, label %356

299:                                              ; preds = %384, %277
  %300 = phi i64 [ %278, %277 ], [ %385, %384 ]
  %301 = inttoptr i64 %300 to %"class.base::internal::UncheckedObserverAdapter"*
  %302 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %233, align 8
  br label %303

303:                                              ; preds = %299, %248
  %304 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %234, %248 ], [ %302, %299 ]
  %305 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %245, %248 ], [ %301, %299 ]
  %306 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %305, %304
  br i1 %306, label %308, label %307

307:                                              ; preds = %303
  store %"class.base::internal::UncheckedObserverAdapter"* %305, %"class.base::internal::UncheckedObserverAdapter"** %233, align 8
  br label %308

308:                                              ; preds = %241, %307, %303, %244, %222
  %309 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %310 = icmp eq %"class.base::ObserverList"* %309, null
  br i1 %310, label %312, label %311

311:                                              ; preds = %308
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %24, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %33) #15
  br label %312

312:                                              ; preds = %219, %308, %311
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #15
  br label %355

313:                                              ; preds = %119
  %314 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %86, i64 0, i32 0, i32 0, i32 0
  %315 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %314, align 8
  %316 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %315, i64 %122
  %317 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %316 to %"class.policy::SchemaRegistry::Observer"**
  %318 = load %"class.policy::SchemaRegistry::Observer"*, %"class.policy::SchemaRegistry::Observer"** %317, align 8
  %319 = bitcast %"class.policy::SchemaRegistry::Observer"* %318 to void (%"class.policy::SchemaRegistry::Observer"*)***
  %320 = load void (%"class.policy::SchemaRegistry::Observer"*)**, void (%"class.policy::SchemaRegistry::Observer"*)*** %319, align 8
  %321 = getelementptr inbounds void (%"class.policy::SchemaRegistry::Observer"*)*, void (%"class.policy::SchemaRegistry::Observer"*)** %320, i64 1
  %322 = load void (%"class.policy::SchemaRegistry::Observer"*)*, void (%"class.policy::SchemaRegistry::Observer"*)** %321, align 8
  call void %322(%"class.policy::SchemaRegistry::Observer"* %318) #15
  %323 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %24, align 8
  %324 = icmp eq %"class.base::ObserverList"* %323, null
  br i1 %324, label %325, label %326

325:                                              ; preds = %350, %346, %313, %326, %340
  br label %85

326:                                              ; preds = %313
  %327 = load i64, i64* %25, align 8
  %328 = add i64 %327, 1
  store i64 %328, i64* %25, align 8
  %329 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %323, i64 0, i32 0, i32 0, i32 1
  %330 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %329 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = bitcast %"class.base::ObserverList"* %323 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = sub i64 %331, %333
  %335 = ashr exact i64 %334, 3
  %336 = load i64, i64* %26, align 8
  %337 = icmp ult i64 %335, %336
  %338 = select i1 %337, i64 %335, i64 %336
  %339 = icmp ult i64 %328, %338
  br i1 %339, label %340, label %325

340:                                              ; preds = %326
  %341 = inttoptr i64 %333 to %"class.base::internal::UncheckedObserverAdapter"*
  %342 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %323, i64 0, i32 0, i32 0, i32 0
  %343 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %341, i64 %328, i32 0
  %344 = load i8*, i8** %343, align 8
  %345 = icmp eq i8* %344, null
  br i1 %345, label %346, label %325

346:                                              ; preds = %340, %350
  %347 = phi i64 [ %348, %350 ], [ %328, %340 ]
  %348 = add nuw i64 %347, 1
  store i64 %348, i64* %25, align 8
  %349 = icmp ult i64 %348, %338
  br i1 %349, label %350, label %325

350:                                              ; preds = %346
  %351 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %342, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 %348, i32 0
  %353 = load i8*, i8** %352, align 8
  %354 = icmp eq i8* %353, null
  br i1 %354, label %346, label %325

355:                                              ; preds = %17, %9, %13, %2, %312
  ret void

356:                                              ; preds = %294
  %357 = ptrtoint i8* %297 to i64
  %358 = inttoptr i64 %295 to %"class.base::internal::UncheckedObserverAdapter"*
  %359 = inttoptr i64 %295 to i64*
  store i64 %357, i64* %359, align 8
  %360 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %358, i64 1
  %361 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %360 to i64
  br label %362

362:                                              ; preds = %356, %294
  %363 = phi i64 [ %295, %294 ], [ %361, %356 ]
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 2, i32 0
  %365 = load i8*, i8** %364, align 8
  %366 = icmp eq i8* %365, null
  br i1 %366, label %373, label %367

367:                                              ; preds = %362
  %368 = ptrtoint i8* %365 to i64
  %369 = inttoptr i64 %363 to %"class.base::internal::UncheckedObserverAdapter"*
  %370 = inttoptr i64 %363 to i64*
  store i64 %368, i64* %370, align 8
  %371 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %369, i64 1
  %372 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %371 to i64
  br label %373

373:                                              ; preds = %367, %362
  %374 = phi i64 [ %363, %362 ], [ %372, %367 ]
  %375 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 3, i32 0
  %376 = load i8*, i8** %375, align 8
  %377 = icmp eq i8* %376, null
  br i1 %377, label %384, label %378

378:                                              ; preds = %373
  %379 = ptrtoint i8* %376 to i64
  %380 = inttoptr i64 %374 to %"class.base::internal::UncheckedObserverAdapter"*
  %381 = inttoptr i64 %374 to i64*
  store i64 %379, i64* %381, align 8
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %380, i64 1
  %383 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %382 to i64
  br label %384

384:                                              ; preds = %378, %373
  %385 = phi i64 [ %374, %373 ], [ %383, %378 ]
  %386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 4
  %387 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %386, %234
  br i1 %387, label %299, label %282

388:                                              ; preds = %201
  %389 = ptrtoint i8* %204 to i64
  %390 = inttoptr i64 %202 to %"class.base::internal::UncheckedObserverAdapter"*
  %391 = inttoptr i64 %202 to i64*
  store i64 %389, i64* %391, align 8
  %392 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %390, i64 1
  %393 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %392 to i64
  br label %394

394:                                              ; preds = %388, %201
  %395 = phi i64 [ %202, %201 ], [ %393, %388 ]
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 2, i32 0
  %397 = load i8*, i8** %396, align 8
  %398 = icmp eq i8* %397, null
  br i1 %398, label %405, label %399

399:                                              ; preds = %394
  %400 = ptrtoint i8* %397 to i64
  %401 = inttoptr i64 %395 to %"class.base::internal::UncheckedObserverAdapter"*
  %402 = inttoptr i64 %395 to i64*
  store i64 %400, i64* %402, align 8
  %403 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %401, i64 1
  %404 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %403 to i64
  br label %405

405:                                              ; preds = %399, %394
  %406 = phi i64 [ %395, %394 ], [ %404, %399 ]
  %407 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 3, i32 0
  %408 = load i8*, i8** %407, align 8
  %409 = icmp eq i8* %408, null
  br i1 %409, label %416, label %410

410:                                              ; preds = %405
  %411 = ptrtoint i8* %408 to i64
  %412 = inttoptr i64 %406 to %"class.base::internal::UncheckedObserverAdapter"*
  %413 = inttoptr i64 %406 to i64*
  store i64 %411, i64* %413, align 8
  %414 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %412, i64 1
  %415 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %414 to i64
  br label %416

416:                                              ; preds = %410, %405
  %417 = phi i64 [ %406, %405 ], [ %415, %410 ]
  %418 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 4
  %419 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %418, %141
  br i1 %419, label %206, label %189
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry18SetAllDomainsReadyEv(%"class.policy::SchemaRegistry"*) local_unnamed_addr #3 align 2 {
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %0, i32 0)
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %0, i32 1)
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %0, i32 2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry25SetExtensionsDomainsReadyEv(%"class.policy::SchemaRegistry"*) local_unnamed_addr #3 align 2 {
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %0, i32 1)
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %0, i32 2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry11AddObserverEPNS0_8ObserverE(%"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry::Observer"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2
  %4 = icmp eq %"class.policy::SchemaRegistry::Observer"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.policy::SchemaRegistry::Observer"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.policy::SchemaRegistry::Observer"* %1 to i64
  %32 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #13
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #13
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #14
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #15
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry14RemoveObserverEPNS0_8ObserverE(%"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry::Observer"* readnone) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.policy::SchemaRegistry::Observer"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 2, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #15
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry19AddInternalObserverEPNS0_16InternalObserverE(%"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry::InternalObserver"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3
  %4 = icmp eq %"class.policy::SchemaRegistry::InternalObserver"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.policy::SchemaRegistry::InternalObserver"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.policy::SchemaRegistry::InternalObserver"* %1 to i64
  %32 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList.10"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList.10"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #13
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #13
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #14
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList.10", %"class.base::ObserverList.10"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #15
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy14SchemaRegistry22RemoveInternalObserverEPNS0_16InternalObserverE(%"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry::InternalObserver"* readnone) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.policy::SchemaRegistry::InternalObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode.12"**
  %32 = load %"class.base::LinkNode.12"*, %"class.base::LinkNode.12"** %31, align 8
  %33 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %0, i64 0, i32 3, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode.12"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #15
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22CombinedSchemaRegistryC2Ev(%"class.policy::CombinedSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.policy::CombinedSchemaRegistry"* %0 to %"class.policy::SchemaRegistry"*
  %3 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6policy14SchemaRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = tail call i8* @_Znwm(i64 32) #14
  %5 = bitcast i8* %4 to %"class.policy::SchemaMap"*
  tail call void @_ZN6policy9SchemaMapC1Ev(%"class.policy::SchemaMap"* nonnull %5) #15
  %6 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.policy::SchemaMap"** %6 to i8**
  store i8* %4, i8** %7, align 8
  %8 = bitcast i8* %4 to i32*
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  %10 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 2
  %11 = bitcast %"class.base::ObserverList"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #15
  %12 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %12, %"class.base::internal::LinkNodeBase"* %12, %"class.base::internal::LinkNodeBase"* %12) #15
  %13 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 2, i32 2
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 2, i32 3
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 3
  %16 = bitcast %"class.base::ObserverList.10"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #15
  %17 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %17, %"class.base::internal::LinkNodeBase"* %17, %"class.base::internal::LinkNodeBase"* %17) #15
  %18 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 3, i32 2
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 3, i32 3
  store i32 0, i32* %19, align 8
  %20 = getelementptr %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 4, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %20, i8 0, i64 3, i1 false) #15
  %21 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %22 = bitcast i32 (...)*** %21 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %22, align 8
  %23 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %25 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_node_base"** %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %24, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = tail call i8* @_Znwm(i64 32) #14
  %28 = bitcast i8* %27 to %"class.policy::SchemaMap"*
  tail call void @_ZN6policy9SchemaMapC1Ev(%"class.policy::SchemaMap"* nonnull %28) #15
  %29 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 4, i32 0
  %30 = bitcast %"class.policy::SchemaMap"** %29 to i8**
  store i8* %27, i8** %30, align 8
  %31 = bitcast i8* %27 to i32*
  %32 = atomicrmw add i32* %31, i32 1 monotonic
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %2, i32 0) #15
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %2, i32 1) #15
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %2, i32 2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22CombinedSchemaRegistryD2Ev(%"class.policy::CombinedSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 1, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 4, i32 0
  %6 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %5, align 8
  %7 = icmp eq %"class.policy::SchemaMap"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  tail call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %6) #15
  %13 = bitcast %"class.policy::SchemaMap"* %6 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %1, %8, %12
  %15 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0
  %16 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.85"**
  %18 = load %"class.std::__1::__tree_node.85"*, %"class.std::__1::__tree_node.85"** %17, align 8
  tail call void @_ZNSt3__16__treeIPN6policy14SchemaRegistryENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.32"* %15, %"class.std::__1::__tree_node.85"* %18) #15
  %19 = bitcast %"class.policy::CombinedSchemaRegistry"* %0 to %"class.policy::SchemaRegistry"*
  tail call void @_ZN6policy14SchemaRegistryD2Ev(%"class.policy::SchemaRegistry"* %19) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn136_N6policy22CombinedSchemaRegistryD1Ev(%"class.policy::CombinedSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 -1, i32 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::LinkNodeBase"** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %2, i64 17
  %5 = bitcast %"class.base::internal::LinkNodeBase"** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %2, i64 22
  %7 = bitcast %"class.base::internal::LinkNodeBase"** %6 to %"class.policy::SchemaMap"**
  %8 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %7, align 8
  %9 = icmp eq %"class.policy::SchemaMap"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  tail call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %8) #15
  %15 = bitcast %"class.policy::SchemaMap"* %8 to i8*
  tail call void @_ZdlPv(i8* %15) #14
  br label %16

16:                                               ; preds = %1, %10, %14
  %17 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %2, i64 19
  %18 = bitcast %"class.base::internal::LinkNodeBase"** %17 to %"class.std::__1::__tree.32"*
  %19 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %2, i64 20
  %20 = bitcast %"class.base::internal::LinkNodeBase"** %19 to %"class.std::__1::__tree_node.85"**
  %21 = load %"class.std::__1::__tree_node.85"*, %"class.std::__1::__tree_node.85"** %20, align 8
  tail call void @_ZNSt3__16__treeIPN6policy14SchemaRegistryENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.32"* %18, %"class.std::__1::__tree_node.85"* %21) #15
  %22 = bitcast %"class.base::internal::LinkNodeBase"** %2 to %"class.policy::SchemaRegistry"*
  tail call void @_ZN6policy14SchemaRegistryD2Ev(%"class.policy::SchemaRegistry"* %22) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn144_N6policy22CombinedSchemaRegistryD1Ev(%"class.policy::CombinedSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 -1, i32 0, i32 2, i32 1
  %3 = bitcast %"class.base::LinkedList"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::LinkedList", %"class.base::LinkedList"* %2, i64 8, i32 0, i32 0, i32 1
  %5 = bitcast %"class.base::internal::LinkNodeBase"** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.base::LinkedList", %"class.base::LinkedList"* %2, i64 11
  %7 = bitcast %"class.base::LinkedList"* %6 to %"class.policy::SchemaMap"**
  %8 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %7, align 8
  %9 = icmp eq %"class.policy::SchemaMap"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  tail call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %8) #15
  %15 = bitcast %"class.policy::SchemaMap"* %8 to i8*
  tail call void @_ZdlPv(i8* %15) #14
  br label %16

16:                                               ; preds = %1, %10, %14
  %17 = getelementptr inbounds %"class.base::LinkedList", %"class.base::LinkedList"* %2, i64 9, i32 0, i32 0, i32 1
  %18 = bitcast %"class.base::internal::LinkNodeBase"** %17 to %"class.std::__1::__tree.32"*
  %19 = getelementptr inbounds %"class.base::LinkedList", %"class.base::LinkedList"* %2, i64 10
  %20 = bitcast %"class.base::LinkedList"* %19 to %"class.std::__1::__tree_node.85"**
  %21 = load %"class.std::__1::__tree_node.85"*, %"class.std::__1::__tree_node.85"** %20, align 8
  tail call void @_ZNSt3__16__treeIPN6policy14SchemaRegistryENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.32"* %18, %"class.std::__1::__tree_node.85"* %21) #15
  %22 = bitcast %"class.base::LinkedList"* %2 to %"class.policy::SchemaRegistry"*
  tail call void @_ZN6policy14SchemaRegistryD2Ev(%"class.policy::SchemaRegistry"* %22) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22CombinedSchemaRegistryD0Ev(%"class.policy::CombinedSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 1, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 4, i32 0
  %6 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %5, align 8
  %7 = icmp eq %"class.policy::SchemaMap"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  tail call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %6) #15
  %13 = bitcast %"class.policy::SchemaMap"* %6 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %1, %8, %12
  %15 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0
  %16 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.85"**
  %18 = load %"class.std::__1::__tree_node.85"*, %"class.std::__1::__tree_node.85"** %17, align 8
  tail call void @_ZNSt3__16__treeIPN6policy14SchemaRegistryENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.32"* %15, %"class.std::__1::__tree_node.85"* %18) #15
  %19 = bitcast %"class.policy::CombinedSchemaRegistry"* %0 to %"class.policy::SchemaRegistry"*
  tail call void @_ZN6policy14SchemaRegistryD2Ev(%"class.policy::SchemaRegistry"* %19) #15
  %20 = bitcast %"class.policy::CombinedSchemaRegistry"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn136_N6policy22CombinedSchemaRegistryD0Ev(%"class.policy::CombinedSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 -1, i32 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::LinkNodeBase"** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %2, i64 17
  %5 = bitcast %"class.base::internal::LinkNodeBase"** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %2, i64 22
  %7 = bitcast %"class.base::internal::LinkNodeBase"** %6 to %"class.policy::SchemaMap"**
  %8 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %7, align 8
  %9 = icmp eq %"class.policy::SchemaMap"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  tail call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %8) #15
  %15 = bitcast %"class.policy::SchemaMap"* %8 to i8*
  tail call void @_ZdlPv(i8* %15) #14
  br label %16

16:                                               ; preds = %1, %10, %14
  %17 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %2, i64 19
  %18 = bitcast %"class.base::internal::LinkNodeBase"** %17 to %"class.std::__1::__tree.32"*
  %19 = getelementptr inbounds %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"** %2, i64 20
  %20 = bitcast %"class.base::internal::LinkNodeBase"** %19 to %"class.std::__1::__tree_node.85"**
  %21 = load %"class.std::__1::__tree_node.85"*, %"class.std::__1::__tree_node.85"** %20, align 8
  tail call void @_ZNSt3__16__treeIPN6policy14SchemaRegistryENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.32"* %18, %"class.std::__1::__tree_node.85"* %21) #15
  %22 = bitcast %"class.base::internal::LinkNodeBase"** %2 to %"class.policy::SchemaRegistry"*
  tail call void @_ZN6policy14SchemaRegistryD2Ev(%"class.policy::SchemaRegistry"* %22) #15
  %23 = bitcast %"class.base::internal::LinkNodeBase"** %2 to i8*
  tail call void @_ZdlPv(i8* %23) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn144_N6policy22CombinedSchemaRegistryD0Ev(%"class.policy::CombinedSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 -1, i32 0, i32 2, i32 1
  %3 = bitcast %"class.base::LinkedList"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::LinkedList", %"class.base::LinkedList"* %2, i64 8, i32 0, i32 0, i32 1
  %5 = bitcast %"class.base::internal::LinkNodeBase"** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*], [5 x i8*] }, { [8 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy22CombinedSchemaRegistryE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.base::LinkedList", %"class.base::LinkedList"* %2, i64 11
  %7 = bitcast %"class.base::LinkedList"* %6 to %"class.policy::SchemaMap"**
  %8 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %7, align 8
  %9 = icmp eq %"class.policy::SchemaMap"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  tail call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %8) #15
  %15 = bitcast %"class.policy::SchemaMap"* %8 to i8*
  tail call void @_ZdlPv(i8* %15) #14
  br label %16

16:                                               ; preds = %1, %10, %14
  %17 = getelementptr inbounds %"class.base::LinkedList", %"class.base::LinkedList"* %2, i64 9, i32 0, i32 0, i32 1
  %18 = bitcast %"class.base::internal::LinkNodeBase"** %17 to %"class.std::__1::__tree.32"*
  %19 = getelementptr inbounds %"class.base::LinkedList", %"class.base::LinkedList"* %2, i64 10
  %20 = bitcast %"class.base::LinkedList"* %19 to %"class.std::__1::__tree_node.85"**
  %21 = load %"class.std::__1::__tree_node.85"*, %"class.std::__1::__tree_node.85"** %20, align 8
  tail call void @_ZNSt3__16__treeIPN6policy14SchemaRegistryENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.32"* %18, %"class.std::__1::__tree_node.85"* %21) #15
  %22 = bitcast %"class.base::LinkedList"* %2 to %"class.policy::SchemaRegistry"*
  tail call void @_ZN6policy14SchemaRegistryD2Ev(%"class.policy::SchemaRegistry"* %22) #15
  %23 = bitcast %"class.base::LinkedList"* %2 to i8*
  tail call void @_ZdlPv(i8* %23) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22CombinedSchemaRegistry5TrackEPNS_14SchemaRegistryE(%"class.policy::CombinedSchemaRegistry"*, %"class.policy::SchemaRegistry"*) local_unnamed_addr #3 align 2 {
  %3 = ptrtoint %"class.policy::SchemaRegistry"* %1 to i64
  %4 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node.85"**
  %7 = load %"class.std::__1::__tree_node.85"*, %"class.std::__1::__tree_node.85"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node.85"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %33, %9
  %12 = phi %"class.std::__1::__tree_node.85"* [ %36, %33 ], [ %7, %9 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %10, %9 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node.85", %"class.std::__1::__tree_node.85"* %12, i64 0, i32 1
  %15 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %14, align 8
  %16 = icmp ugt %"class.policy::SchemaRegistry"* %15, %1
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.85", %"class.std::__1::__tree_node.85"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.85", %"class.std::__1::__tree_node.85"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp ult %"class.policy::SchemaRegistry"* %15, %1
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.85", %"class.std::__1::__tree_node.85"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.85", %"class.std::__1::__tree_node.85"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.85", %"class.std::__1::__tree_node.85"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node.85"*
  br label %11

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %39

39:                                               ; preds = %37, %31, %29, %21
  %40 = phi %"class.std::__1::__tree_end_node"* [ %5, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node.85"**
  %43 = load %"class.std::__1::__tree_node.85"*, %"class.std::__1::__tree_node.85"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node.85"* %43, null
  br i1 %44, label %45, label %69

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 40) #14, !noalias !36
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = bitcast i8* %47 to i64*
  store i64 %3, i64* %48, align 8, !noalias !36
  %49 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %50 = getelementptr inbounds i8, i8* %46, i64 16
  %51 = bitcast i8* %50 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %51, align 8
  %52 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 0
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %45
  %59 = ptrtoint %"class.std::__1::__tree_node_base"* %56 to i64
  %60 = bitcast %"class.std::__1::set"* %4 to i64*
  store i64 %59, i64* %60, align 8
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %62

62:                                               ; preds = %58, %45
  %63 = phi %"class.std::__1::__tree_node_base"* [ %49, %45 ], [ %61, %58 ]
  %64 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %65, %"class.std::__1::__tree_node_base"* %63) #15
  %66 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %66, align 8
  br label %69

69:                                               ; preds = %39, %62
  %70 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 1
  tail call void @_ZN6policy14SchemaRegistry11AddObserverEPNS0_8ObserverE(%"class.policy::SchemaRegistry"* %1, %"class.policy::SchemaRegistry::Observer"* %70)
  %71 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 2
  tail call void @_ZN6policy14SchemaRegistry19AddInternalObserverEPNS0_16InternalObserverE(%"class.policy::SchemaRegistry"* %1, %"class.policy::SchemaRegistry::InternalObserver"* %71)
  %72 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %1, i64 0, i32 1, i32 0
  %73 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %72, align 8
  %74 = tail call zeroext i1 @_ZNK6policy9SchemaMap13HasComponentsEv(%"class.policy::SchemaMap"* %73) #15
  br i1 %74, label %75, label %76

75:                                               ; preds = %69
  tail call void @_ZN6policy22CombinedSchemaRegistry7CombineEb(%"class.policy::CombinedSchemaRegistry"* %0, i1 zeroext true)
  br label %76

76:                                               ; preds = %75, %69
  ret void
}

declare zeroext i1 @_ZNK6policy9SchemaMap13HasComponentsEv(%"class.policy::SchemaMap"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22CombinedSchemaRegistry7CombineEb(%"class.policy::CombinedSchemaRegistry"*, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.51", align 1
  %5 = alloca %"class.std::__1::map", align 8
  %6 = bitcast %"class.std::__1::map"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 4, i32 0
  %11 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %10, align 8
  %12 = tail call dereferenceable(24) %"class.std::__1::map"* @_ZNK6policy9SchemaMap10GetDomainsEv(%"class.policy::SchemaMap"* %11) #15
  %13 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__compressed_pair"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %7, align 8
  %17 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0, i32 0
  %18 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = icmp eq %"class.std::__1::__tree_end_node"* %18, %19
  br i1 %20, label %57, label %21

21:                                               ; preds = %2, %54
  %22 = phi %"class.std::__1::__tree_end_node"* [ %55, %54 ], [ %18, %2 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 4
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"struct.std::__1::pair.45"*
  %25 = bitcast %"class.std::__1::__tree_end_node"* %23 to i32*
  %26 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE30__emplace_hint_unique_key_argsIS3_JRKNSE_IKS3_SI_EEEEENSE_INS_15__tree_iteratorISJ_PNS_11__tree_nodeISJ_PvEElEEbEENS_21__tree_const_iteratorISJ_SY_lEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %13, %"class.std::__1::__tree_end_node"* %14, i32* dereferenceable(4) %25, %"struct.std::__1::pair.45"* dereferenceable(32) %24) #15
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 1, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %38

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 2
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_end_node"**
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, %31
  br i1 %37, label %54, label %45

38:                                               ; preds = %21, %38
  %39 = phi %"class.std::__1::__tree_node_base"* [ %41, %38 ], [ %28, %21 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %38

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0
  br label %54

45:                                               ; preds = %30, %45
  %46 = phi %"class.std::__1::__tree_end_node"** [ %49, %45 ], [ %33, %30 ]
  %47 = bitcast %"class.std::__1::__tree_end_node"** %46 to %"class.std::__1::__tree_node_base"**
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 2
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, %48
  br i1 %53, label %54, label %45

54:                                               ; preds = %45, %43, %30
  %55 = phi %"class.std::__1::__tree_end_node"* [ %44, %43 ], [ %34, %30 ], [ %50, %45 ]
  %56 = icmp eq %"class.std::__1::__tree_end_node"* %55, %19
  br i1 %56, label %57, label %21

57:                                               ; preds = %54, %2
  %58 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 0
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %61 = icmp eq %"class.std::__1::__tree_end_node"* %59, %60
  br i1 %61, label %69, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node.60"**
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 0, i32 0
  %65 = bitcast %"class.std::__1::map"* %5 to i64*
  %66 = bitcast %"class.std::__1::tuple"* %3 to i8*
  %67 = bitcast %"class.std::__1::tuple"* %3 to %"class.std::__1::__tree_end_node"**
  %68 = getelementptr inbounds %"class.std::__1::tuple.51", %"class.std::__1::tuple.51"* %4, i64 0, i32 0
  br label %90

69:                                               ; preds = %130, %57
  %70 = call i8* @_Znwm(i64 32) #14
  %71 = bitcast i8* %70 to %"class.policy::SchemaMap"*
  call void @_ZN6policy9SchemaMapC1ERNSt3__13mapINS_12PolicyDomainENS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_6SchemaENS1_4lessIS9_EENS7_INS1_4pairIKS9_SA_EEEEEENSB_IS3_EENS7_INSD_IKS3_SH_EEEEEE(%"class.policy::SchemaMap"* nonnull %71, %"class.std::__1::map"* nonnull dereferenceable(24) %5) #15
  %72 = bitcast %"class.policy::CombinedSchemaRegistry"* %0 to %"class.policy::SchemaRegistry"*
  %73 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 0, i32 1
  %74 = bitcast i8* %70 to i32*
  %75 = atomicrmw add i32* %74, i32 1 monotonic
  %76 = ptrtoint i8* %70 to i64
  %77 = bitcast %class.scoped_refptr* %73 to i64*
  %78 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %73, i64 0, i32 0
  %79 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %78, align 8
  store i64 %76, i64* %77, align 8
  %80 = icmp eq %"class.policy::SchemaMap"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw sub i32* %82, i32 1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %87

85:                                               ; preds = %81
  call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %79) #15
  %86 = bitcast %"class.policy::SchemaMap"* %79 to i8*
  call void @_ZdlPv(i8* %86) #14
  br label %87

87:                                               ; preds = %69, %81, %85
  call void @_ZN6policy14SchemaRegistry6NotifyEb(%"class.policy::SchemaRegistry"* %72, i1 zeroext %1)
  %88 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node.60"**
  %89 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %88, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE7destroyEPNS_11__tree_nodeISJ_PvEE(%"class.std::__1::__tree"* nonnull %13, %"class.std::__1::__tree_node.60"* %89) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret void

90:                                               ; preds = %62, %130
  %91 = phi %"class.std::__1::__tree_end_node"* [ %59, %62 ], [ %131, %130 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 4
  %93 = bitcast %"class.std::__1::__tree_end_node"* %92 to %"class.policy::SchemaRegistry"**
  %94 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %93, align 8
  %95 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %94, i64 0, i32 1, i32 0
  %96 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %95, align 8
  %97 = call dereferenceable(24) %"class.std::__1::map"* @_ZNK6policy9SchemaMap10GetDomainsEv(%"class.policy::SchemaMap"* %96) #15
  %98 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %97, i64 0, i32 0, i32 1, i32 0, i32 0
  %101 = icmp eq %"class.std::__1::__tree_end_node"* %99, %100
  br i1 %101, label %102, label %133

102:                                              ; preds = %171, %90
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 1, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %106, label %114

106:                                              ; preds = %102
  %107 = bitcast %"class.std::__1::__tree_end_node"* %91 to %"class.std::__1::__tree_node_base"*
  %108 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 2
  %109 = bitcast %"class.std::__1::__tree_end_node"* %108 to %"class.std::__1::__tree_end_node"**
  %110 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 0, i32 0
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node_base"* %112, %107
  br i1 %113, label %130, label %121

114:                                              ; preds = %102, %114
  %115 = phi %"class.std::__1::__tree_node_base"* [ %117, %114 ], [ %104, %102 ]
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %119, label %114

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  br label %130

121:                                              ; preds = %106, %121
  %122 = phi %"class.std::__1::__tree_end_node"** [ %125, %121 ], [ %109, %106 ]
  %123 = bitcast %"class.std::__1::__tree_end_node"** %122 to %"class.std::__1::__tree_node_base"**
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %126 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %125, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %126, i64 0, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  %129 = icmp eq %"class.std::__1::__tree_node_base"* %128, %124
  br i1 %129, label %130, label %121

130:                                              ; preds = %121, %106, %119
  %131 = phi %"class.std::__1::__tree_end_node"* [ %120, %119 ], [ %110, %106 ], [ %126, %121 ]
  %132 = icmp eq %"class.std::__1::__tree_end_node"* %131, %60
  br i1 %132, label %69, label %90

133:                                              ; preds = %90, %171
  %134 = phi %"class.std::__1::__tree_end_node"* [ %172, %171 ], [ %99, %90 ]
  %135 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 5
  %136 = bitcast %"class.std::__1::__tree_end_node"* %135 to %"class.std::__1::__tree_end_node"**
  %137 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %136, align 8
  %138 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 6
  %139 = icmp eq %"class.std::__1::__tree_end_node"* %137, %138
  br i1 %139, label %143, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 4
  %142 = bitcast %"class.std::__1::__tree_end_node"* %141 to i32*
  br label %174

143:                                              ; preds = %276, %133
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 1, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %147, label %155

147:                                              ; preds = %143
  %148 = bitcast %"class.std::__1::__tree_end_node"* %134 to %"class.std::__1::__tree_node_base"*
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 2
  %150 = bitcast %"class.std::__1::__tree_end_node"* %149 to %"class.std::__1::__tree_end_node"**
  %151 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %150, align 8
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %151, i64 0, i32 0
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, %148
  br i1 %154, label %171, label %162

155:                                              ; preds = %143, %155
  %156 = phi %"class.std::__1::__tree_node_base"* [ %158, %155 ], [ %145, %143 ]
  %157 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %156, i64 0, i32 0, i32 0
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %157, align 8
  %159 = icmp eq %"class.std::__1::__tree_node_base"* %158, null
  br i1 %159, label %160, label %155

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %156, i64 0, i32 0
  br label %171

162:                                              ; preds = %147, %162
  %163 = phi %"class.std::__1::__tree_end_node"** [ %166, %162 ], [ %150, %147 ]
  %164 = bitcast %"class.std::__1::__tree_end_node"** %163 to %"class.std::__1::__tree_node_base"**
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %165, i64 0, i32 2
  %167 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 0, i32 0
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %168, align 8
  %170 = icmp eq %"class.std::__1::__tree_node_base"* %169, %165
  br i1 %170, label %171, label %162

171:                                              ; preds = %162, %147, %160
  %172 = phi %"class.std::__1::__tree_end_node"* [ %161, %160 ], [ %151, %147 ], [ %167, %162 ]
  %173 = icmp eq %"class.std::__1::__tree_end_node"* %172, %100
  br i1 %173, label %102, label %133

174:                                              ; preds = %140, %276
  %175 = phi %"class.std::__1::__tree_end_node"* [ %137, %140 ], [ %277, %276 ]
  %176 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %175, i64 4
  %177 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %175, i64 7
  %178 = bitcast %"class.std::__1::__tree_end_node"* %177 to %"class.policy::Schema"*
  %179 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %63, align 8
  %180 = icmp eq %"class.std::__1::__tree_node.60"* %179, null
  br i1 %180, label %209, label %181

181:                                              ; preds = %174
  %182 = load i32, i32* %142, align 4
  br label %183

183:                                              ; preds = %205, %181
  %184 = phi %"class.std::__1::__tree_node.60"* [ %208, %205 ], [ %179, %181 ]
  %185 = phi %"class.std::__1::__tree_node_base"** [ %207, %205 ], [ %8, %181 ]
  %186 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %184, i64 0, i32 1, i32 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = icmp slt i32 %182, %187
  br i1 %188, label %189, label %195

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %184, i64 0, i32 0, i32 0, i32 0
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %193, label %205

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %184, i64 0, i32 0, i32 0
  br label %209

195:                                              ; preds = %183
  %196 = icmp slt i32 %187, %182
  br i1 %196, label %197, label %203

197:                                              ; preds = %195
  %198 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %184, i64 0, i32 0, i32 1
  %199 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %198, align 8
  %200 = icmp eq %"class.std::__1::__tree_node_base"* %199, null
  br i1 %200, label %201, label %205

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %184, i64 0, i32 0, i32 0
  br label %209

203:                                              ; preds = %195
  %204 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %184, i64 0, i32 0, i32 0
  br label %209

205:                                              ; preds = %197, %189
  %206 = phi %"class.std::__1::__tree_node_base"* [ %191, %189 ], [ %199, %197 ]
  %207 = phi %"class.std::__1::__tree_node_base"** [ %190, %189 ], [ %198, %197 ]
  %208 = bitcast %"class.std::__1::__tree_node_base"* %206 to %"class.std::__1::__tree_node.60"*
  br label %183

209:                                              ; preds = %174, %203, %201, %193
  %210 = phi %"class.std::__1::__tree_end_node"* [ %194, %193 ], [ %202, %201 ], [ %204, %203 ], [ %14, %174 ]
  %211 = phi %"class.std::__1::__tree_node_base"** [ %190, %193 ], [ %198, %201 ], [ %185, %203 ], [ %64, %174 ]
  %212 = bitcast %"class.std::__1::__tree_node_base"** %211 to %"class.std::__1::__tree_node.60"**
  %213 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %212, align 8
  %214 = icmp eq %"class.std::__1::__tree_node.60"* %213, null
  br i1 %214, label %215, label %240

215:                                              ; preds = %209
  %216 = call i8* @_Znwm(i64 64) #14, !noalias !39
  %217 = getelementptr inbounds i8, i8* %216, i64 32
  %218 = bitcast i8* %217 to i32*
  %219 = load i32, i32* %142, align 4, !noalias !39
  store i32 %219, i32* %218, align 8, !noalias !39
  %220 = getelementptr inbounds i8, i8* %216, i64 48
  %221 = getelementptr inbounds i8, i8* %216, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %220, i8 0, i64 16, i1 false) #15, !noalias !39
  %222 = bitcast i8* %221 to i8**
  store i8* %220, i8** %222, align 8, !noalias !39
  %223 = bitcast i8* %216 to %"class.std::__1::__tree_node.60"*
  %224 = bitcast i8* %216 to %"class.std::__1::__tree_node_base"*
  %225 = getelementptr inbounds i8, i8* %216, i64 16
  %226 = bitcast i8* %225 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %210, %"class.std::__1::__tree_end_node"** %226, align 8
  %227 = bitcast %"class.std::__1::__tree_node_base"** %211 to i8**
  store i8* %216, i8** %227, align 8
  %228 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %229 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %228, i64 0, i32 0
  %230 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %229, align 8
  %231 = icmp eq %"class.std::__1::__tree_node_base"* %230, null
  br i1 %231, label %235, label %232

232:                                              ; preds = %215
  %233 = ptrtoint %"class.std::__1::__tree_node_base"* %230 to i64
  store i64 %233, i64* %65, align 8
  %234 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  br label %235

235:                                              ; preds = %232, %215
  %236 = phi %"class.std::__1::__tree_node_base"* [ %224, %215 ], [ %234, %232 ]
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %8, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %237, %"class.std::__1::__tree_node_base"* %236) #15
  %238 = load i64, i64* %9, align 8
  %239 = add i64 %238, 1
  store i64 %239, i64* %9, align 8
  br label %240

240:                                              ; preds = %209, %235
  %241 = phi %"class.std::__1::__tree_node.60"* [ %223, %235 ], [ %213, %209 ]
  %242 = bitcast %"class.std::__1::__tree_end_node"* %176 to %"class.std::__1::basic_string"*
  %243 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %241, i64 0, i32 1, i32 0, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #15
  store %"class.std::__1::__tree_end_node"* %176, %"class.std::__1::__tree_end_node"** %67, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %68) #15
  %244 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.21"* %243, %"class.std::__1::basic_string"* dereferenceable(24) %242, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.51"* nonnull dereferenceable(1) %4) #15
  %245 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %244, 0
  %246 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %245, i64 7
  %247 = bitcast %"class.std::__1::__tree_end_node"* %246 to %"class.policy::Schema"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %68) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #15
  %248 = call dereferenceable(16) %"class.policy::Schema"* @_ZN6policy6SchemaaSERKS0_(%"class.policy::Schema"* %247, %"class.policy::Schema"* dereferenceable(16) %178) #15
  %249 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %175, i64 1, i32 0
  %250 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %249, align 8
  %251 = icmp eq %"class.std::__1::__tree_node_base"* %250, null
  br i1 %251, label %252, label %260

252:                                              ; preds = %240
  %253 = bitcast %"class.std::__1::__tree_end_node"* %175 to %"class.std::__1::__tree_node_base"*
  %254 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %175, i64 2
  %255 = bitcast %"class.std::__1::__tree_end_node"* %254 to %"class.std::__1::__tree_end_node"**
  %256 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %255, align 8
  %257 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %256, i64 0, i32 0
  %258 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %257, align 8
  %259 = icmp eq %"class.std::__1::__tree_node_base"* %258, %253
  br i1 %259, label %276, label %267

260:                                              ; preds = %240, %260
  %261 = phi %"class.std::__1::__tree_node_base"* [ %263, %260 ], [ %250, %240 ]
  %262 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %261, i64 0, i32 0, i32 0
  %263 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %262, align 8
  %264 = icmp eq %"class.std::__1::__tree_node_base"* %263, null
  br i1 %264, label %265, label %260

265:                                              ; preds = %260
  %266 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %261, i64 0, i32 0
  br label %276

267:                                              ; preds = %252, %267
  %268 = phi %"class.std::__1::__tree_end_node"** [ %271, %267 ], [ %255, %252 ]
  %269 = bitcast %"class.std::__1::__tree_end_node"** %268 to %"class.std::__1::__tree_node_base"**
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 2
  %272 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %271, align 8
  %273 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %272, i64 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  %275 = icmp eq %"class.std::__1::__tree_node_base"* %274, %270
  br i1 %275, label %276, label %267

276:                                              ; preds = %267, %252, %265
  %277 = phi %"class.std::__1::__tree_end_node"* [ %266, %265 ], [ %256, %252 ], [ %272, %267 ]
  %278 = icmp eq %"class.std::__1::__tree_end_node"* %277, %138
  br i1 %278, label %143, label %174
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22CombinedSchemaRegistry18RegisterComponentsENS_12PolicyDomainERKNSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_6SchemaENS2_4lessIS9_EENS7_INS2_4pairIKS9_SA_EEEEEE(%"class.policy::CombinedSchemaRegistry"*, i32, %"class.std::__1::map.20"* dereferenceable(24)) unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.51", align 1
  %6 = alloca %"class.std::__1::map", align 8
  %7 = bitcast %"class.std::__1::map"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 0, i32 0
  %13 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %12, align 8
  %14 = tail call dereferenceable(24) %"class.std::__1::map"* @_ZNK6policy9SchemaMap10GetDomainsEv(%"class.policy::SchemaMap"* %13) #15
  %15 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::__compressed_pair"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"** %8, align 8
  %19 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %20, %21
  br i1 %22, label %59, label %23

23:                                               ; preds = %3, %56
  %24 = phi %"class.std::__1::__tree_end_node"* [ %57, %56 ], [ %20, %3 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 4
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"struct.std::__1::pair.45"*
  %27 = bitcast %"class.std::__1::__tree_end_node"* %25 to i32*
  %28 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE30__emplace_hint_unique_key_argsIS3_JRKNSE_IKS3_SI_EEEEENSE_INS_15__tree_iteratorISJ_PNS_11__tree_nodeISJ_PvEElEEbEENS_21__tree_const_iteratorISJ_SY_lEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %15, %"class.std::__1::__tree_end_node"* %16, i32* dereferenceable(4) %27, %"struct.std::__1::pair.45"* dereferenceable(32) %26) #15
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 1, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %40

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node_base"*
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 2
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_end_node"**
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, %33
  br i1 %39, label %56, label %47

40:                                               ; preds = %23, %40
  %41 = phi %"class.std::__1::__tree_node_base"* [ %43, %40 ], [ %30, %23 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %40

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0
  br label %56

47:                                               ; preds = %32, %47
  %48 = phi %"class.std::__1::__tree_end_node"** [ %51, %47 ], [ %35, %32 ]
  %49 = bitcast %"class.std::__1::__tree_end_node"** %48 to %"class.std::__1::__tree_node_base"**
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %50, i64 0, i32 2
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, %50
  br i1 %55, label %56, label %47

56:                                               ; preds = %47, %45, %32
  %57 = phi %"class.std::__1::__tree_end_node"* [ %46, %45 ], [ %36, %32 ], [ %52, %47 ]
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %57, %21
  br i1 %58, label %59, label %23

59:                                               ; preds = %56, %3
  %60 = getelementptr inbounds %"class.std::__1::map.20", %"class.std::__1::map.20"* %2, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::map.20", %"class.std::__1::map.20"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %61, %62
  br i1 %63, label %71, label %64

64:                                               ; preds = %59
  %65 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.60"**
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %67 = bitcast %"class.std::__1::map"* %6 to i64*
  %68 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %69 = bitcast %"class.std::__1::tuple"* %4 to %"class.std::__1::__tree_end_node"**
  %70 = getelementptr inbounds %"class.std::__1::tuple.51", %"class.std::__1::tuple.51"* %5, i64 0, i32 0
  br label %89

71:                                               ; preds = %188, %59
  %72 = call i8* @_Znwm(i64 32) #14
  %73 = bitcast i8* %72 to %"class.policy::SchemaMap"*
  call void @_ZN6policy9SchemaMapC1ERNSt3__13mapINS_12PolicyDomainENS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_6SchemaENS1_4lessIS9_EENS7_INS1_4pairIKS9_SA_EEEEEENSB_IS3_EENS7_INSD_IKS3_SH_EEEEEE(%"class.policy::SchemaMap"* nonnull %73, %"class.std::__1::map"* nonnull dereferenceable(24) %6) #15
  %74 = bitcast i8* %72 to i32*
  %75 = atomicrmw add i32* %74, i32 1 monotonic
  %76 = ptrtoint i8* %72 to i64
  %77 = bitcast %class.scoped_refptr* %11 to i64*
  %78 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %12, align 8
  store i64 %76, i64* %77, align 8
  %79 = icmp eq %"class.policy::SchemaMap"* %78, null
  br i1 %79, label %86, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw sub i32* %81, i32 1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %78) #15
  %85 = bitcast %"class.policy::SchemaMap"* %78 to i8*
  call void @_ZdlPv(i8* %85) #14
  br label %86

86:                                               ; preds = %71, %80, %84
  call void @_ZN6policy22CombinedSchemaRegistry7CombineEb(%"class.policy::CombinedSchemaRegistry"* %0, i1 zeroext true)
  %87 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.60"**
  %88 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %87, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE7destroyEPNS_11__tree_nodeISJ_PvEE(%"class.std::__1::__tree"* nonnull %15, %"class.std::__1::__tree_node.60"* %88) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void

89:                                               ; preds = %64, %188
  %90 = phi %"class.std::__1::__tree_end_node"* [ %61, %64 ], [ %189, %188 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 4
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 7
  %93 = bitcast %"class.std::__1::__tree_end_node"* %92 to %"class.policy::Schema"*
  %94 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %65, align 8
  %95 = icmp eq %"class.std::__1::__tree_node.60"* %94, null
  br i1 %95, label %122, label %96

96:                                               ; preds = %89, %118
  %97 = phi %"class.std::__1::__tree_node.60"* [ %121, %118 ], [ %94, %89 ]
  %98 = phi %"class.std::__1::__tree_node_base"** [ %120, %118 ], [ %9, %89 ]
  %99 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %97, i64 0, i32 1, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp sgt i32 %100, %1
  br i1 %101, label %102, label %108

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %97, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %106, label %118

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %97, i64 0, i32 0, i32 0
  br label %122

108:                                              ; preds = %96
  %109 = icmp slt i32 %100, %1
  br i1 %109, label %110, label %116

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %97, i64 0, i32 0, i32 1
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node_base"* %112, null
  br i1 %113, label %114, label %118

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %97, i64 0, i32 0, i32 0
  br label %122

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %97, i64 0, i32 0, i32 0
  br label %122

118:                                              ; preds = %110, %102
  %119 = phi %"class.std::__1::__tree_node_base"* [ %104, %102 ], [ %112, %110 ]
  %120 = phi %"class.std::__1::__tree_node_base"** [ %103, %102 ], [ %111, %110 ]
  %121 = bitcast %"class.std::__1::__tree_node_base"* %119 to %"class.std::__1::__tree_node.60"*
  br label %96

122:                                              ; preds = %89, %116, %114, %106
  %123 = phi %"class.std::__1::__tree_end_node"* [ %107, %106 ], [ %115, %114 ], [ %117, %116 ], [ %16, %89 ]
  %124 = phi %"class.std::__1::__tree_node_base"** [ %103, %106 ], [ %111, %114 ], [ %98, %116 ], [ %66, %89 ]
  %125 = bitcast %"class.std::__1::__tree_node_base"** %124 to %"class.std::__1::__tree_node.60"**
  %126 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node.60"* %126, null
  br i1 %127, label %128, label %152

128:                                              ; preds = %122
  %129 = call i8* @_Znwm(i64 64) #14, !noalias !42
  %130 = getelementptr inbounds i8, i8* %129, i64 32
  %131 = bitcast i8* %130 to i32*
  store i32 %1, i32* %131, align 8, !noalias !42
  %132 = getelementptr inbounds i8, i8* %129, i64 48
  %133 = getelementptr inbounds i8, i8* %129, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 16, i1 false) #15, !noalias !42
  %134 = bitcast i8* %133 to i8**
  store i8* %132, i8** %134, align 8, !noalias !42
  %135 = bitcast i8* %129 to %"class.std::__1::__tree_node.60"*
  %136 = bitcast i8* %129 to %"class.std::__1::__tree_node_base"*
  %137 = getelementptr inbounds i8, i8* %129, i64 16
  %138 = bitcast i8* %137 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %123, %"class.std::__1::__tree_end_node"** %138, align 8
  %139 = bitcast %"class.std::__1::__tree_node_base"** %124 to i8**
  store i8* %129, i8** %139, align 8
  %140 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 0, i32 0
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node_base"* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %128
  %145 = ptrtoint %"class.std::__1::__tree_node_base"* %142 to i64
  store i64 %145, i64* %67, align 8
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  br label %147

147:                                              ; preds = %144, %128
  %148 = phi %"class.std::__1::__tree_node_base"* [ %136, %128 ], [ %146, %144 ]
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %149, %"class.std::__1::__tree_node_base"* %148) #15
  %150 = load i64, i64* %10, align 8
  %151 = add i64 %150, 1
  store i64 %151, i64* %10, align 8
  br label %152

152:                                              ; preds = %122, %147
  %153 = phi %"class.std::__1::__tree_node.60"* [ %135, %147 ], [ %126, %122 ]
  %154 = bitcast %"class.std::__1::__tree_end_node"* %91 to %"class.std::__1::basic_string"*
  %155 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %153, i64 0, i32 1, i32 0, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #15
  store %"class.std::__1::__tree_end_node"* %91, %"class.std::__1::__tree_end_node"** %69, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %70) #15
  %156 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.21"* %155, %"class.std::__1::basic_string"* dereferenceable(24) %154, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.51"* nonnull dereferenceable(1) %5) #15
  %157 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %156, 0
  %158 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %157, i64 7
  %159 = bitcast %"class.std::__1::__tree_end_node"* %158 to %"class.policy::Schema"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %70) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #15
  %160 = call dereferenceable(16) %"class.policy::Schema"* @_ZN6policy6SchemaaSERKS0_(%"class.policy::Schema"* %159, %"class.policy::Schema"* dereferenceable(16) %93) #15
  %161 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 1, i32 0
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, null
  br i1 %163, label %164, label %172

164:                                              ; preds = %152
  %165 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_node_base"*
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 2
  %167 = bitcast %"class.std::__1::__tree_end_node"* %166 to %"class.std::__1::__tree_end_node"**
  %168 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %168, i64 0, i32 0
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %169, align 8
  %171 = icmp eq %"class.std::__1::__tree_node_base"* %170, %165
  br i1 %171, label %188, label %179

172:                                              ; preds = %152, %172
  %173 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %162, %152 ]
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %173, i64 0, i32 0, i32 0
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %177, label %172

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %173, i64 0, i32 0
  br label %188

179:                                              ; preds = %164, %179
  %180 = phi %"class.std::__1::__tree_end_node"** [ %183, %179 ], [ %167, %164 ]
  %181 = bitcast %"class.std::__1::__tree_end_node"** %180 to %"class.std::__1::__tree_node_base"**
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %182, i64 0, i32 2
  %184 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %183, align 8
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 0, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = icmp eq %"class.std::__1::__tree_node_base"* %186, %182
  br i1 %187, label %188, label %179

188:                                              ; preds = %179, %164, %177
  %189 = phi %"class.std::__1::__tree_end_node"* [ %178, %177 ], [ %168, %164 ], [ %184, %179 ]
  %190 = icmp eq %"class.std::__1::__tree_end_node"* %189, %62
  br i1 %190, label %71, label %89
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22CombinedSchemaRegistry19UnregisterComponentERKNS_15PolicyNamespaceE(%"class.policy::CombinedSchemaRegistry"*, %"struct.policy::PolicyNamespace"* dereferenceable(32)) unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::map", align 8
  %4 = bitcast %"class.std::__1::map"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %8, i64 0, i32 0
  %10 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %9, align 8
  %11 = tail call dereferenceable(24) %"class.std::__1::map"* @_ZNK6policy9SchemaMap10GetDomainsEv(%"class.policy::SchemaMap"* %10) #15
  %12 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__compressed_pair"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"** %5, align 8
  %16 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = icmp eq %"class.std::__1::__tree_end_node"* %17, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node.60"**
  %22 = getelementptr inbounds %"struct.policy::PolicyNamespace", %"struct.policy::PolicyNamespace"* %1, i64 0, i32 0
  br label %92

23:                                               ; preds = %2, %56
  %24 = phi %"class.std::__1::__tree_end_node"* [ %57, %56 ], [ %17, %2 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 4
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"struct.std::__1::pair.45"*
  %27 = bitcast %"class.std::__1::__tree_end_node"* %25 to i32*
  %28 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE30__emplace_hint_unique_key_argsIS3_JRKNSE_IKS3_SI_EEEEENSE_INS_15__tree_iteratorISJ_PNS_11__tree_nodeISJ_PvEElEEbEENS_21__tree_const_iteratorISJ_SY_lEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %12, %"class.std::__1::__tree_end_node"* %13, i32* dereferenceable(4) %27, %"struct.std::__1::pair.45"* dereferenceable(32) %26) #15
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 1, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %40

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node_base"*
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 2
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_end_node"**
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, %33
  br i1 %39, label %56, label %47

40:                                               ; preds = %23, %40
  %41 = phi %"class.std::__1::__tree_node_base"* [ %43, %40 ], [ %30, %23 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %40

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0
  br label %56

47:                                               ; preds = %32, %47
  %48 = phi %"class.std::__1::__tree_end_node"** [ %51, %47 ], [ %35, %32 ]
  %49 = bitcast %"class.std::__1::__tree_end_node"** %48 to %"class.std::__1::__tree_node_base"**
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %50, i64 0, i32 2
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, %50
  br i1 %55, label %56, label %47

56:                                               ; preds = %47, %45, %32
  %57 = phi %"class.std::__1::__tree_end_node"* [ %46, %45 ], [ %36, %32 ], [ %52, %47 ]
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %57, %18
  br i1 %58, label %59, label %23

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node.60"**
  %61 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %60, align 8
  %62 = getelementptr inbounds %"struct.policy::PolicyNamespace", %"struct.policy::PolicyNamespace"* %1, i64 0, i32 0
  %63 = icmp eq %"class.std::__1::__tree_node.60"* %61, null
  br i1 %63, label %92, label %64

64:                                               ; preds = %59
  %65 = load i32, i32* %62, align 4
  br label %66

66:                                               ; preds = %88, %64
  %67 = phi %"class.std::__1::__tree_node.60"* [ %91, %88 ], [ %61, %64 ]
  %68 = phi %"class.std::__1::__tree_node_base"** [ %90, %88 ], [ %6, %64 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %67, i64 0, i32 1, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %65, %70
  br i1 %71, label %72, label %78

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %67, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %76, label %88

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %67, i64 0, i32 0, i32 0
  br label %96

78:                                               ; preds = %66
  %79 = icmp slt i32 %70, %65
  br i1 %79, label %80, label %86

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %67, i64 0, i32 0, i32 1
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %84, label %88

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %67, i64 0, i32 0, i32 0
  br label %96

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %67, i64 0, i32 0, i32 0
  br label %96

88:                                               ; preds = %80, %72
  %89 = phi %"class.std::__1::__tree_node_base"* [ %74, %72 ], [ %82, %80 ]
  %90 = phi %"class.std::__1::__tree_node_base"** [ %73, %72 ], [ %81, %80 ]
  %91 = bitcast %"class.std::__1::__tree_node_base"* %89 to %"class.std::__1::__tree_node.60"*
  br label %66

92:                                               ; preds = %20, %59
  %93 = phi i32* [ %22, %20 ], [ %62, %59 ]
  %94 = phi %"class.std::__1::__tree_node.60"** [ %21, %20 ], [ %60, %59 ]
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 0, i32 0
  br label %96

96:                                               ; preds = %92, %86, %84, %76
  %97 = phi i32* [ %93, %92 ], [ %62, %76 ], [ %62, %84 ], [ %62, %86 ]
  %98 = phi %"class.std::__1::__tree_node.60"** [ %94, %92 ], [ %60, %76 ], [ %60, %84 ], [ %60, %86 ]
  %99 = phi %"class.std::__1::__tree_end_node"* [ %13, %92 ], [ %77, %76 ], [ %85, %84 ], [ %87, %86 ]
  %100 = phi %"class.std::__1::__tree_node_base"** [ %95, %92 ], [ %73, %76 ], [ %81, %84 ], [ %68, %86 ]
  %101 = bitcast %"class.std::__1::__tree_node_base"** %100 to %"class.std::__1::__tree_node.60"**
  %102 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node.60"* %102, null
  br i1 %103, label %104, label %130

104:                                              ; preds = %96
  %105 = call i8* @_Znwm(i64 64) #14, !noalias !45
  %106 = getelementptr inbounds i8, i8* %105, i64 32
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %97, align 4, !noalias !45
  store i32 %108, i32* %107, align 8, !noalias !45
  %109 = getelementptr inbounds i8, i8* %105, i64 48
  %110 = getelementptr inbounds i8, i8* %105, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #15, !noalias !45
  %111 = bitcast i8* %110 to i8**
  store i8* %109, i8** %111, align 8, !noalias !45
  %112 = bitcast i8* %105 to %"class.std::__1::__tree_node.60"*
  %113 = bitcast i8* %105 to %"class.std::__1::__tree_node_base"*
  %114 = getelementptr inbounds i8, i8* %105, i64 16
  %115 = bitcast i8* %114 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %99, %"class.std::__1::__tree_end_node"** %115, align 8
  %116 = bitcast %"class.std::__1::__tree_node_base"** %100 to i8**
  store i8* %105, i8** %116, align 8
  %117 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %104
  %122 = ptrtoint %"class.std::__1::__tree_node_base"* %119 to i64
  %123 = bitcast %"class.std::__1::map"* %3 to i64*
  store i64 %122, i64* %123, align 8
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  br label %125

125:                                              ; preds = %121, %104
  %126 = phi %"class.std::__1::__tree_node_base"* [ %113, %104 ], [ %124, %121 ]
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %127, %"class.std::__1::__tree_node_base"* %126) #15
  %128 = load i64, i64* %7, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %7, align 8
  br label %130

130:                                              ; preds = %96, %125
  %131 = phi %"class.std::__1::__tree_node.60"* [ %112, %125 ], [ %102, %96 ]
  %132 = getelementptr inbounds %"struct.policy::PolicyNamespace", %"struct.policy::PolicyNamespace"* %1, i64 0, i32 1
  %133 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %131, i64 0, i32 1, i32 0, i32 1, i32 0
  %134 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree.21"* %133, %"class.std::__1::basic_string"* dereferenceable(24) %132) #15
  %135 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %131, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %136 = icmp eq %"class.std::__1::__tree_end_node"* %134, %135
  br i1 %136, label %154, label %137

137:                                              ; preds = %130
  %138 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE(%"class.std::__1::__tree.21"* %133, %"class.std::__1::__tree_end_node"* %134) #15
  %139 = call i8* @_Znwm(i64 32) #14
  %140 = bitcast i8* %139 to %"class.policy::SchemaMap"*
  call void @_ZN6policy9SchemaMapC1ERNSt3__13mapINS_12PolicyDomainENS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_6SchemaENS1_4lessIS9_EENS7_INS1_4pairIKS9_SA_EEEEEENSB_IS3_EENS7_INSD_IKS3_SH_EEEEEE(%"class.policy::SchemaMap"* nonnull %140, %"class.std::__1::map"* nonnull dereferenceable(24) %3) #15
  %141 = bitcast i8* %139 to i32*
  %142 = atomicrmw add i32* %141, i32 1 monotonic
  %143 = ptrtoint i8* %139 to i64
  %144 = bitcast %class.scoped_refptr* %8 to i64*
  %145 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %9, align 8
  store i64 %143, i64* %144, align 8
  %146 = icmp eq %"class.policy::SchemaMap"* %145, null
  br i1 %146, label %153, label %147

147:                                              ; preds = %137
  %148 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw sub i32* %148, i32 1 acq_rel
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %153

151:                                              ; preds = %147
  call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %145) #15
  %152 = bitcast %"class.policy::SchemaMap"* %145 to i8*
  call void @_ZdlPv(i8* %152) #14
  br label %153

153:                                              ; preds = %137, %147, %151
  call void @_ZN6policy22CombinedSchemaRegistry7CombineEb(%"class.policy::CombinedSchemaRegistry"* %0, i1 zeroext false)
  br label %154

154:                                              ; preds = %130, %153
  %155 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %98, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE7destroyEPNS_11__tree_nodeISJ_PvEE(%"class.std::__1::__tree"* nonnull %12, %"class.std::__1::__tree_node.60"* %155) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22CombinedSchemaRegistry23OnSchemaRegistryUpdatedEb(%"class.policy::CombinedSchemaRegistry"*, i1 zeroext) unnamed_addr #3 align 2 {
  tail call void @_ZN6policy22CombinedSchemaRegistry7CombineEb(%"class.policy::CombinedSchemaRegistry"* %0, i1 zeroext %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn136_N6policy22CombinedSchemaRegistry23OnSchemaRegistryUpdatedEb(%"class.policy::CombinedSchemaRegistry"*, i1 zeroext) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 -1, i32 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.policy::CombinedSchemaRegistry"*
  tail call void @_ZN6policy22CombinedSchemaRegistry7CombineEb(%"class.policy::CombinedSchemaRegistry"* %4, i1 zeroext %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22CombinedSchemaRegistry28OnSchemaRegistryShuttingDownEPNS_14SchemaRegistryE(%"class.policy::CombinedSchemaRegistry"*, %"class.policy::SchemaRegistry"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %4, align 8
  %6 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  %8 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %5, %7
  %9 = bitcast %"class.policy::SchemaRegistry::Observer"* %3 to i8*
  %10 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %7 to i64
  br i1 %8, label %19, label %11

11:                                               ; preds = %2, %16
  %12 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %17, %16 ], [ %5, %2 ]
  %13 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %12, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, %9
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %12, i64 1
  %18 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %17, %7
  br i1 %18, label %48, label %11

19:                                               ; preds = %11, %2
  %20 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %5, %2 ], [ %12, %11 ]
  %21 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %20, %7
  br i1 %21, label %48, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %20, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %1, i64 0, i32 2, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  store i64 %29, i64* %27, align 8
  br label %30

30:                                               ; preds = %26, %22
  %31 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %1, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %32 = bitcast %"class.base::internal::LinkNodeBase"** %31 to %"class.base::LinkNode"**
  %33 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %32, align 8
  %34 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %1, i64 0, i32 2, i32 1, i32 0
  %35 = icmp eq %"class.base::LinkNode"* %33, %34
  br i1 %35, label %36, label %47

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %20, i64 1
  %38 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %37 to i64
  %39 = sub i64 %10, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %20 to i8*
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %37 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 %39, i1 false) #15
  br label %45

45:                                               ; preds = %42, %36
  %46 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %20, i64 %40
  store %"class.base::internal::UncheckedObserverAdapter"* %46, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %48

47:                                               ; preds = %30
  store i8* null, i8** %23, align 8
  br label %48

48:                                               ; preds = %16, %19, %45, %47
  %49 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 2
  %50 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %50, align 8
  %52 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %52, align 8
  %54 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %51, %53
  %55 = bitcast %"class.policy::SchemaRegistry::InternalObserver"* %49 to i8*
  %56 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %53 to i64
  br i1 %54, label %65, label %57

57:                                               ; preds = %48, %62
  %58 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %63, %62 ], [ %51, %48 ]
  %59 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %58, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, %55
  br i1 %61, label %65, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %58, i64 1
  %64 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %63, %53
  br i1 %64, label %94, label %57

65:                                               ; preds = %57, %48
  %66 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %51, %48 ], [ %58, %57 ]
  %67 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %66, %53
  br i1 %67, label %94, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %66, i64 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %1, i64 0, i32 3, i32 2
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, -1
  store i64 %75, i64* %73, align 8
  br label %76

76:                                               ; preds = %72, %68
  %77 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %1, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %78 = bitcast %"class.base::internal::LinkNodeBase"** %77 to %"class.base::LinkNode.12"**
  %79 = load %"class.base::LinkNode.12"*, %"class.base::LinkNode.12"** %78, align 8
  %80 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %1, i64 0, i32 3, i32 1, i32 0
  %81 = icmp eq %"class.base::LinkNode.12"* %79, %80
  br i1 %81, label %82, label %93

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %66, i64 1
  %84 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %83 to i64
  %85 = sub i64 %56, %84
  %86 = ashr exact i64 %85, 3
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %82
  %89 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %66 to i8*
  %90 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %83 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 %85, i1 false) #15
  br label %91

91:                                               ; preds = %88, %82
  %92 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %66, i64 %86
  store %"class.base::internal::UncheckedObserverAdapter"* %92, %"class.base::internal::UncheckedObserverAdapter"** %52, align 8
  br label %94

93:                                               ; preds = %76
  store i8* null, i8** %69, align 8
  br label %94

94:                                               ; preds = %62, %65, %91, %93
  %95 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0
  %96 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %97 = bitcast %"class.std::__1::__tree_end_node"* %96 to %"class.std::__1::__tree_node.85"**
  %98 = load %"class.std::__1::__tree_node.85"*, %"class.std::__1::__tree_node.85"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node.85"* %98, null
  %100 = bitcast %"class.std::__1::__tree_node.85"* %98 to %"class.std::__1::__tree_node_base"*
  br i1 %99, label %168, label %101

101:                                              ; preds = %94, %101
  %102 = phi %"class.std::__1::__tree_end_node"* [ %112, %101 ], [ %96, %94 ]
  %103 = phi %"class.std::__1::__tree_node.85"* [ %113, %101 ], [ %98, %94 ]
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.85", %"class.std::__1::__tree_node.85"* %103, i64 0, i32 1
  %105 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %104, align 8
  %106 = icmp ult %"class.policy::SchemaRegistry"* %105, %1
  %107 = getelementptr inbounds %"class.std::__1::__tree_node.85", %"class.std::__1::__tree_node.85"* %103, i64 0, i32 0, i32 1
  %108 = bitcast %"class.std::__1::__tree_node_base"** %107 to %"class.std::__1::__tree_node.85"**
  %109 = getelementptr inbounds %"class.std::__1::__tree_node.85", %"class.std::__1::__tree_node.85"* %103, i64 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::__tree_node.85"* %103 to %"class.std::__1::__tree_node.85"**
  %111 = select i1 %106, %"class.std::__1::__tree_node.85"** %108, %"class.std::__1::__tree_node.85"** %110
  %112 = select i1 %106, %"class.std::__1::__tree_end_node"* %102, %"class.std::__1::__tree_end_node"* %109
  %113 = load %"class.std::__1::__tree_node.85"*, %"class.std::__1::__tree_node.85"** %111, align 8
  %114 = icmp eq %"class.std::__1::__tree_node.85"* %113, null
  br i1 %114, label %115, label %101

115:                                              ; preds = %101
  %116 = icmp eq %"class.std::__1::__tree_end_node"* %112, %96
  br i1 %116, label %168, label %117

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 4
  %119 = bitcast %"class.std::__1::__tree_end_node"* %118 to %"class.policy::SchemaRegistry"**
  %120 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %119, align 8
  %121 = icmp ugt %"class.policy::SchemaRegistry"* %120, %1
  br i1 %121, label %168, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 1, i32 0
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node_base"* %124, null
  br i1 %125, label %126, label %134

126:                                              ; preds = %122
  %127 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.std::__1::__tree_node_base"*
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 2
  %129 = bitcast %"class.std::__1::__tree_end_node"* %128 to %"class.std::__1::__tree_end_node"**
  %130 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %129, align 8
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %130, i64 0, i32 0
  %132 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %131, align 8
  %133 = icmp eq %"class.std::__1::__tree_node_base"* %132, %127
  br i1 %133, label %150, label %141

134:                                              ; preds = %122, %134
  %135 = phi %"class.std::__1::__tree_node_base"* [ %137, %134 ], [ %124, %122 ]
  %136 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %135, i64 0, i32 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, null
  br i1 %138, label %139, label %134

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %135, i64 0, i32 0
  br label %150

141:                                              ; preds = %126, %141
  %142 = phi %"class.std::__1::__tree_end_node"** [ %145, %141 ], [ %129, %126 ]
  %143 = bitcast %"class.std::__1::__tree_end_node"** %142 to %"class.std::__1::__tree_node_base"**
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %144, i64 0, i32 2
  %146 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 0, i32 0
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, %144
  br i1 %149, label %150, label %141

150:                                              ; preds = %141, %139, %126
  %151 = phi %"class.std::__1::__tree_end_node"* [ %140, %139 ], [ %130, %126 ], [ %146, %141 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree.32", %"class.std::__1::__tree.32"* %95, i64 0, i32 0
  %153 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_end_node"* %153, %112
  br i1 %154, label %155, label %158

155:                                              ; preds = %150
  %156 = ptrtoint %"class.std::__1::__tree_end_node"* %151 to i64
  %157 = bitcast %"class.std::__1::__tree.32"* %95 to i64*
  store i64 %156, i64* %157, align 8
  br label %158

158:                                              ; preds = %155, %150
  %159 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %160 = load i64, i64* %159, align 8
  %161 = add i64 %160, -1
  store i64 %161, i64* %159, align 8
  %162 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %100, %"class.std::__1::__tree_node_base"* %162) #15
  %163 = bitcast %"class.std::__1::__tree_end_node"* %112 to i8*
  tail call void @_ZdlPv(i8* %163) #14
  %164 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %1, i64 0, i32 1, i32 0
  %165 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %164, align 8
  %166 = tail call zeroext i1 @_ZNK6policy9SchemaMap13HasComponentsEv(%"class.policy::SchemaMap"* %165) #15
  br i1 %166, label %167, label %168

167:                                              ; preds = %158
  tail call void @_ZN6policy22CombinedSchemaRegistry7CombineEb(%"class.policy::CombinedSchemaRegistry"* %0, i1 zeroext false)
  br label %168

168:                                              ; preds = %117, %115, %94, %158, %167
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn144_N6policy22CombinedSchemaRegistry28OnSchemaRegistryShuttingDownEPNS_14SchemaRegistryE(%"class.policy::CombinedSchemaRegistry"*, %"class.policy::SchemaRegistry"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.policy::CombinedSchemaRegistry", %"class.policy::CombinedSchemaRegistry"* %0, i64 -1, i32 0, i32 2, i32 1
  %4 = bitcast %"class.base::LinkedList"* %3 to %"class.policy::CombinedSchemaRegistry"*
  tail call void @_ZN6policy22CombinedSchemaRegistry28OnSchemaRegistryShuttingDownEPNS_14SchemaRegistryE(%"class.policy::CombinedSchemaRegistry"* %4, %"class.policy::SchemaRegistry"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy24ForwardingSchemaRegistryC2EPNS_14SchemaRegistryE(%"class.policy::ForwardingSchemaRegistry"*, %"class.policy::SchemaRegistry"*) unnamed_addr #3 align 2 {
  %3 = bitcast %"class.policy::ForwardingSchemaRegistry"* %0 to %"class.policy::SchemaRegistry"*
  %4 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6policy14SchemaRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call i8* @_Znwm(i64 32) #14
  %6 = bitcast i8* %5 to %"class.policy::SchemaMap"*
  tail call void @_ZN6policy9SchemaMapC1Ev(%"class.policy::SchemaMap"* nonnull %6) #15
  %7 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 1, i32 0
  %8 = bitcast %"class.policy::SchemaMap"** %7 to i8**
  store i8* %5, i8** %8, align 8
  %9 = bitcast i8* %5 to i32*
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 2
  %12 = bitcast %"class.base::ObserverList"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #15
  %13 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %13, %"class.base::internal::LinkNodeBase"* %13, %"class.base::internal::LinkNodeBase"* %13) #15
  %14 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 2, i32 2
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 2, i32 3
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 3
  %17 = bitcast %"class.base::ObserverList.10"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #15
  %18 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %18, %"class.base::internal::LinkNodeBase"* %18, %"class.base::internal::LinkNodeBase"* %18) #15
  %19 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 3, i32 2
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 3, i32 3
  store i32 0, i32* %20, align 8
  %21 = getelementptr %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 4, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %21, i8 0, i64 3, i1 false) #15
  %22 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy24ForwardingSchemaRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %24 = bitcast %"class.policy::SchemaRegistry::Observer"* %22 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy24ForwardingSchemaRegistryE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy24ForwardingSchemaRegistryE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %24, align 8
  %25 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 3
  store %"class.policy::SchemaRegistry"* %1, %"class.policy::SchemaRegistry"** %25, align 8
  %26 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %1, i64 0, i32 1, i32 0
  %27 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %26, align 8
  %28 = icmp eq %"class.policy::SchemaMap"* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  br label %32

32:                                               ; preds = %2, %29
  %33 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 1
  %34 = ptrtoint %"class.policy::SchemaMap"* %27 to i64
  %35 = bitcast %class.scoped_refptr* %33 to i64*
  %36 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %33, i64 0, i32 0
  %37 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %36, align 8
  store i64 %34, i64* %35, align 8
  %38 = icmp eq %"class.policy::SchemaMap"* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  tail call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %37) #15
  %44 = bitcast %"class.policy::SchemaMap"* %37 to i8*
  tail call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %32, %39, %43
  %46 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %25, align 8
  tail call void @_ZN6policy14SchemaRegistry11AddObserverEPNS0_8ObserverE(%"class.policy::SchemaRegistry"* %46, %"class.policy::SchemaRegistry::Observer"* %22)
  %47 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %25, align 8
  tail call void @_ZN6policy14SchemaRegistry19AddInternalObserverEPNS0_16InternalObserverE(%"class.policy::SchemaRegistry"* %47, %"class.policy::SchemaRegistry::InternalObserver"* %23)
  %48 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %25, align 8
  %49 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %48, i64 0, i32 4, i64 0
  %50 = load i8, i8* %49, align 1, !range !27
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %61, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %48, i64 0, i32 4, i64 1
  %54 = load i8, i8* %53, align 1, !range !27
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %48, i64 0, i32 4, i64 2
  %58 = load i8, i8* %57, align 1, !range !27
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %56
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %3, i32 0) #15
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %3, i32 1) #15
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %3, i32 2) #15
  br label %61

61:                                               ; preds = %45, %52, %56, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy24ForwardingSchemaRegistry15UpdateReadinessEv(%"class.policy::ForwardingSchemaRegistry"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 3
  %3 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %2, align 8
  %4 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %3, i64 0, i32 4, i64 0
  %5 = load i8, i8* %4, align 1, !range !27
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %3, i64 0, i32 4, i64 1
  %9 = load i8, i8* %8, align 1, !range !27
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %3, i64 0, i32 4, i64 2
  %13 = load i8, i8* %12, align 1, !range !27
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.policy::ForwardingSchemaRegistry"* %0 to %"class.policy::SchemaRegistry"*
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %16, i32 0) #15
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %16, i32 1) #15
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %16, i32 2) #15
  br label %17

17:                                               ; preds = %11, %1, %7, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy24ForwardingSchemaRegistryD2Ev(%"class.policy::ForwardingSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy24ForwardingSchemaRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 2
  %5 = bitcast %"class.policy::SchemaRegistry::Observer"* %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy24ForwardingSchemaRegistryE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [6 x i8*], [5 x i8*] }, { [9 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN6policy24ForwardingSchemaRegistryE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 3
  %7 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %6, align 8
  %8 = icmp eq %"class.policy::SchemaRegistry"* %7, null
  br i1 %8, label %100, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8
  %12 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %7, i64 0, i32 2, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8
  %14 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %11, %13
  %15 = bitcast %"class.policy::SchemaRegistry::Observer"* %3 to i8*
  %16 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %13 to i64
  br i1 %14, label %25, label %17

17:                                               ; preds = %9, %22
  %18 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %23, %22 ], [ %11, %9 ]
  %19 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %18, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, %15
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %18, i64 1
  %24 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %23, %13
  br i1 %24, label %54, label %17

25:                                               ; preds = %17, %9
  %26 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %11, %9 ], [ %18, %17 ]
  %27 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %26, %13
  br i1 %27, label %54, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %26, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %7, i64 0, i32 2, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, -1
  store i64 %35, i64* %33, align 8
  br label %36

36:                                               ; preds = %32, %28
  %37 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %7, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %38 = bitcast %"class.base::internal::LinkNodeBase"** %37 to %"class.base::LinkNode"**
  %39 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %38, align 8
  %40 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %7, i64 0, i32 2, i32 1, i32 0
  %41 = icmp eq %"class.base::LinkNode"* %39, %40
  br i1 %41, label %42, label %53

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %26, i64 1
  %44 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %43 to i64
  %45 = sub i64 %16, %44
  %46 = ashr exact i64 %45, 3
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %26 to i8*
  %50 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %43 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 %45, i1 false) #15
  br label %51

51:                                               ; preds = %48, %42
  %52 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %26, i64 %46
  store %"class.base::internal::UncheckedObserverAdapter"* %52, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8
  br label %54

53:                                               ; preds = %36
  store i8* null, i8** %29, align 8
  br label %54

54:                                               ; preds = %22, %25, %51, %53
  %55 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %6, align 8
  %56 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %56, align 8
  %58 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %55, i64 0, i32 3, i32 0, i32 0, i32 1
  %59 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %58, align 8
  %60 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %57, %59
  %61 = bitcast %"class.policy::SchemaRegistry::InternalObserver"* %4 to i8*
  %62 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %59 to i64
  br i1 %60, label %71, label %63

63:                                               ; preds = %54, %68
  %64 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %69, %68 ], [ %57, %54 ]
  %65 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %64, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, %61
  br i1 %67, label %71, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %64, i64 1
  %70 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %69, %59
  br i1 %70, label %100, label %63

71:                                               ; preds = %63, %54
  %72 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %57, %54 ], [ %64, %63 ]
  %73 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %72, %59
  br i1 %73, label %100, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %72, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %55, i64 0, i32 3, i32 2
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, -1
  store i64 %81, i64* %79, align 8
  br label %82

82:                                               ; preds = %78, %74
  %83 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %55, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %84 = bitcast %"class.base::internal::LinkNodeBase"** %83 to %"class.base::LinkNode.12"**
  %85 = load %"class.base::LinkNode.12"*, %"class.base::LinkNode.12"** %84, align 8
  %86 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %55, i64 0, i32 3, i32 1, i32 0
  %87 = icmp eq %"class.base::LinkNode.12"* %85, %86
  br i1 %87, label %88, label %99

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %72, i64 1
  %90 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %89 to i64
  %91 = sub i64 %62, %90
  %92 = ashr exact i64 %91, 3
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %88
  %95 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %72 to i8*
  %96 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %89 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 %91, i1 false) #15
  br label %97

97:                                               ; preds = %94, %88
  %98 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %72, i64 %92
  store %"class.base::internal::UncheckedObserverAdapter"* %98, %"class.base::internal::UncheckedObserverAdapter"** %58, align 8
  br label %100

99:                                               ; preds = %82
  store i8* null, i8** %75, align 8
  br label %100

100:                                              ; preds = %68, %99, %97, %71, %1
  %101 = bitcast %"class.policy::ForwardingSchemaRegistry"* %0 to %"class.policy::SchemaRegistry"*
  tail call void @_ZN6policy14SchemaRegistryD2Ev(%"class.policy::SchemaRegistry"* %101) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn136_N6policy24ForwardingSchemaRegistryD1Ev(%"class.policy::ForwardingSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %2 to %"class.policy::ForwardingSchemaRegistry"*
  tail call void @_ZN6policy24ForwardingSchemaRegistryD2Ev(%"class.policy::ForwardingSchemaRegistry"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn144_N6policy24ForwardingSchemaRegistryD1Ev(%"class.policy::ForwardingSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 -1, i32 0, i32 2
  %3 = bitcast %"class.base::ObserverList"* %2 to %"class.policy::ForwardingSchemaRegistry"*
  tail call void @_ZN6policy24ForwardingSchemaRegistryD2Ev(%"class.policy::ForwardingSchemaRegistry"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy24ForwardingSchemaRegistryD0Ev(%"class.policy::ForwardingSchemaRegistry"*) unnamed_addr #3 align 2 {
  tail call void @_ZN6policy24ForwardingSchemaRegistryD2Ev(%"class.policy::ForwardingSchemaRegistry"* %0) #15
  %2 = bitcast %"class.policy::ForwardingSchemaRegistry"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn136_N6policy24ForwardingSchemaRegistryD0Ev(%"class.policy::ForwardingSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %2 to %"class.policy::ForwardingSchemaRegistry"*
  tail call void @_ZN6policy24ForwardingSchemaRegistryD2Ev(%"class.policy::ForwardingSchemaRegistry"* %3) #15
  %4 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %2 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn144_N6policy24ForwardingSchemaRegistryD0Ev(%"class.policy::ForwardingSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 -1, i32 0, i32 2
  %3 = bitcast %"class.base::ObserverList"* %2 to %"class.policy::ForwardingSchemaRegistry"*
  tail call void @_ZN6policy24ForwardingSchemaRegistryD2Ev(%"class.policy::ForwardingSchemaRegistry"* %3) #15
  %4 = bitcast %"class.base::ObserverList"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy24ForwardingSchemaRegistry18RegisterComponentsENS_12PolicyDomainERKNSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_6SchemaENS2_4lessIS9_EENS7_INS2_4pairIKS9_SA_EEEEEE(%"class.policy::ForwardingSchemaRegistry"* nocapture readonly, i32, %"class.std::__1::map.20"* dereferenceable(24)) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 3
  %5 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %4, align 8
  %6 = icmp ne %"class.policy::SchemaRegistry"* %5, null
  %7 = icmp ne i32 %1, 0
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = bitcast %"class.policy::SchemaRegistry"* %5 to void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)***
  %11 = load void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)**, void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)*, void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)** %11, i64 2
  %13 = load void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)*, void (%"class.policy::SchemaRegistry"*, i32, %"class.std::__1::map.20"*)** %12, align 8
  tail call void %13(%"class.policy::SchemaRegistry"* nonnull %5, i32 %1, %"class.std::__1::map.20"* dereferenceable(24) %2) #15
  br label %14

14:                                               ; preds = %9, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy24ForwardingSchemaRegistry19UnregisterComponentERKNS_15PolicyNamespaceE(%"class.policy::ForwardingSchemaRegistry"* nocapture readonly, %"struct.policy::PolicyNamespace"* dereferenceable(32)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 3
  %4 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %3, align 8
  %5 = icmp eq %"class.policy::SchemaRegistry"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.policy::SchemaRegistry"* %4 to void (%"class.policy::SchemaRegistry"*, %"struct.policy::PolicyNamespace"*)***
  %8 = load void (%"class.policy::SchemaRegistry"*, %"struct.policy::PolicyNamespace"*)**, void (%"class.policy::SchemaRegistry"*, %"struct.policy::PolicyNamespace"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.policy::SchemaRegistry"*, %"struct.policy::PolicyNamespace"*)*, void (%"class.policy::SchemaRegistry"*, %"struct.policy::PolicyNamespace"*)** %8, i64 3
  %10 = load void (%"class.policy::SchemaRegistry"*, %"struct.policy::PolicyNamespace"*)*, void (%"class.policy::SchemaRegistry"*, %"struct.policy::PolicyNamespace"*)** %9, align 8
  tail call void %10(%"class.policy::SchemaRegistry"* nonnull %4, %"struct.policy::PolicyNamespace"* dereferenceable(32) %1) #15
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy24ForwardingSchemaRegistry23OnSchemaRegistryUpdatedEb(%"class.policy::ForwardingSchemaRegistry"*, i1 zeroext) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 3
  %4 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %3, align 8
  %5 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %4, i64 0, i32 1, i32 0
  %6 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %5, align 8
  %7 = icmp eq %"class.policy::SchemaMap"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %2, %8
  %12 = bitcast %"class.policy::ForwardingSchemaRegistry"* %0 to %"class.policy::SchemaRegistry"*
  %13 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 0, i32 1
  %14 = ptrtoint %"class.policy::SchemaMap"* %6 to i64
  %15 = bitcast %class.scoped_refptr* %13 to i64*
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %13, i64 0, i32 0
  %17 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.policy::SchemaMap"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  tail call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %17) #15
  %24 = bitcast %"class.policy::SchemaMap"* %17 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %11, %19, %23
  tail call void @_ZN6policy14SchemaRegistry6NotifyEb(%"class.policy::SchemaRegistry"* %12, i1 zeroext %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn136_N6policy24ForwardingSchemaRegistry23OnSchemaRegistryUpdatedEb(%"class.policy::ForwardingSchemaRegistry"*, i1 zeroext) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, i64 19
  %5 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %4 to %"class.policy::SchemaRegistry"**
  %6 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %5, align 8
  %7 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %6, i64 0, i32 1, i32 0
  %8 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %7, align 8
  %9 = icmp eq %"class.policy::SchemaMap"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %10, %2
  %14 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %3 to %"class.policy::SchemaRegistry"*
  %15 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, i64 1
  %16 = ptrtoint %"class.policy::SchemaMap"* %8 to i64
  %17 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %15 to i64*
  %18 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %15 to %"class.policy::SchemaMap"**
  %19 = load %"class.policy::SchemaMap"*, %"class.policy::SchemaMap"** %18, align 8
  store i64 %16, i64* %17, align 8
  %20 = icmp eq %"class.policy::SchemaMap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.policy::SchemaMap", %"class.policy::SchemaMap"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  tail call void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"* nonnull %19) #15
  %26 = bitcast %"class.policy::SchemaMap"* %19 to i8*
  tail call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %13, %21, %25
  tail call void @_ZN6policy14SchemaRegistry6NotifyEb(%"class.policy::SchemaRegistry"* %14, i1 zeroext %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy24ForwardingSchemaRegistry21OnSchemaRegistryReadyEv(%"class.policy::ForwardingSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 3
  %3 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %2, align 8
  %4 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %3, i64 0, i32 4, i64 0
  %5 = load i8, i8* %4, align 1, !range !27
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %3, i64 0, i32 4, i64 1
  %9 = load i8, i8* %8, align 1, !range !27
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %3, i64 0, i32 4, i64 2
  %13 = load i8, i8* %12, align 1, !range !27
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.policy::ForwardingSchemaRegistry"* %0 to %"class.policy::SchemaRegistry"*
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %16, i32 0) #15
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %16, i32 1) #15
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %16, i32 2) #15
  br label %17

17:                                               ; preds = %1, %7, %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn136_N6policy24ForwardingSchemaRegistry21OnSchemaRegistryReadyEv(%"class.policy::ForwardingSchemaRegistry"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %2, i64 19
  %4 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %3 to %"class.policy::SchemaRegistry"**
  %5 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %4, align 8
  %6 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %5, i64 0, i32 4, i64 0
  %7 = load i8, i8* %6, align 1, !range !27
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %5, i64 0, i32 4, i64 1
  %11 = load i8, i8* %10, align 1, !range !27
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %5, i64 0, i32 4, i64 2
  %15 = load i8, i8* %14, align 1, !range !27
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %2 to %"class.policy::SchemaRegistry"*
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %18, i32 0) #15
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %18, i32 1) #15
  tail call void @_ZN6policy14SchemaRegistry14SetDomainReadyENS_12PolicyDomainE(%"class.policy::SchemaRegistry"* %18, i32 2) #15
  br label %19

19:                                               ; preds = %1, %9, %13, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy24ForwardingSchemaRegistry28OnSchemaRegistryShuttingDownEPNS_14SchemaRegistryE(%"class.policy::ForwardingSchemaRegistry"*, %"class.policy::SchemaRegistry"* nocapture readnone) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 3
  %4 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %3, align 8
  %5 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  %8 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %4, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %8, align 8
  %10 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %7, %9
  %11 = bitcast %"class.policy::SchemaRegistry::Observer"* %5 to i8*
  %12 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %9 to i64
  br i1 %10, label %21, label %13

13:                                               ; preds = %2, %18
  %14 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %19, %18 ], [ %7, %2 ]
  %15 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %14, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, %11
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %14, i64 1
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %9
  br i1 %20, label %50, label %13

21:                                               ; preds = %13, %2
  %22 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %2 ], [ %14, %13 ]
  %23 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, %9
  br i1 %23, label %50, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %22, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %4, i64 0, i32 2, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  store i64 %31, i64* %29, align 8
  br label %32

32:                                               ; preds = %28, %24
  %33 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %34 = bitcast %"class.base::internal::LinkNodeBase"** %33 to %"class.base::LinkNode"**
  %35 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %34, align 8
  %36 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %4, i64 0, i32 2, i32 1, i32 0
  %37 = icmp eq %"class.base::LinkNode"* %35, %36
  br i1 %37, label %38, label %49

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %22, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = sub i64 %12, %40
  %42 = ashr exact i64 %41, 3
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %22 to i8*
  %46 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %39 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 %41, i1 false) #15
  br label %47

47:                                               ; preds = %44, %38
  %48 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %22, i64 %42
  store %"class.base::internal::UncheckedObserverAdapter"* %48, %"class.base::internal::UncheckedObserverAdapter"** %8, align 8
  br label %50

49:                                               ; preds = %32
  store i8* null, i8** %25, align 8
  br label %50

50:                                               ; preds = %18, %21, %47, %49
  %51 = load %"class.policy::SchemaRegistry"*, %"class.policy::SchemaRegistry"** %3, align 8
  %52 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 0, i32 2
  %53 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %53, align 8
  %55 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %51, i64 0, i32 3, i32 0, i32 0, i32 1
  %56 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %55, align 8
  %57 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %54, %56
  %58 = bitcast %"class.policy::SchemaRegistry::InternalObserver"* %52 to i8*
  %59 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %56 to i64
  br i1 %57, label %68, label %60

60:                                               ; preds = %50, %65
  %61 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %66, %65 ], [ %54, %50 ]
  %62 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %61, i64 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, %58
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %61, i64 1
  %67 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %66, %56
  br i1 %67, label %97, label %60

68:                                               ; preds = %60, %50
  %69 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %54, %50 ], [ %61, %60 ]
  %70 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %69, %56
  br i1 %70, label %97, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %69, i64 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = icmp eq i8* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %51, i64 0, i32 3, i32 2
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %76, align 8
  br label %79

79:                                               ; preds = %75, %71
  %80 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %51, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %81 = bitcast %"class.base::internal::LinkNodeBase"** %80 to %"class.base::LinkNode.12"**
  %82 = load %"class.base::LinkNode.12"*, %"class.base::LinkNode.12"** %81, align 8
  %83 = getelementptr inbounds %"class.policy::SchemaRegistry", %"class.policy::SchemaRegistry"* %51, i64 0, i32 3, i32 1, i32 0
  %84 = icmp eq %"class.base::LinkNode.12"* %82, %83
  br i1 %84, label %85, label %96

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %69, i64 1
  %87 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %86 to i64
  %88 = sub i64 %59, %87
  %89 = ashr exact i64 %88, 3
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %85
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %69 to i8*
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %86 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 %88, i1 false) #15
  br label %94

94:                                               ; preds = %91, %85
  %95 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %69, i64 %89
  store %"class.base::internal::UncheckedObserverAdapter"* %95, %"class.base::internal::UncheckedObserverAdapter"** %55, align 8
  br label %97

96:                                               ; preds = %79
  store i8* null, i8** %72, align 8
  br label %97

97:                                               ; preds = %65, %68, %94, %96
  store %"class.policy::SchemaRegistry"* null, %"class.policy::SchemaRegistry"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn144_N6policy24ForwardingSchemaRegistry28OnSchemaRegistryShuttingDownEPNS_14SchemaRegistryE(%"class.policy::ForwardingSchemaRegistry"*, %"class.policy::SchemaRegistry"* nocapture readnone) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.policy::ForwardingSchemaRegistry", %"class.policy::ForwardingSchemaRegistry"* %0, i64 -1, i32 0, i32 2
  %4 = bitcast %"class.base::ObserverList"* %3 to %"class.policy::ForwardingSchemaRegistry"*
  tail call void @_ZN6policy24ForwardingSchemaRegistry28OnSchemaRegistryShuttingDownEPNS_14SchemaRegistryE(%"class.policy::ForwardingSchemaRegistry"* %4, %"class.policy::SchemaRegistry"* undef)
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6policy14SchemaRegistry8Observer21OnSchemaRegistryReadyEv(%"class.policy::SchemaRegistry::Observer"*) unnamed_addr #3 comdat align 2 {
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6policy9SchemaMapD1Ev(%"class.policy::SchemaMap"*) unnamed_addr #9

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #5

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.21"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.21"* %0, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.21"* %0, %"class.std::__1::__tree_node"* %9) #15
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  tail call void @_ZN6policy6SchemaD1Ev(%"class.policy::Schema"* %11) #15
  %12 = bitcast %"struct.std::__1::pair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %4, %16
  %20 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6policy6SchemaD1Ev(%"class.policy::Schema"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.21"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.51"* dereferenceable(1)) local_unnamed_addr #3 comdat align 2 {
  %6 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree.21"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %55

12:                                               ; preds = %5
  %13 = call i8* @_Znwm(i64 72) #14, !noalias !48
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8, !noalias !48
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1, !noalias !48
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %22, i64 24, i1 false) #15, !noalias !48
  br label %29

23:                                               ; preds = %12
  %24 = bitcast i8* %14 to %"class.std::__1::basic_string"*
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !noalias !48
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !48
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %24, i8* %26, i64 %28) #15, !noalias !48
  br label %29

29:                                               ; preds = %21, %23
  %30 = getelementptr inbounds i8, i8* %13, i64 56
  %31 = bitcast i8* %30 to %"class.policy::Schema"*
  call void @_ZN6policy6SchemaC1Ev(%"class.policy::Schema"* %31) #15, !noalias !48
  %32 = bitcast %"class.std::__1::__tree_end_node"** %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8* %13 to %"class.std::__1::__tree_node"*
  %35 = bitcast i8* %13 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds i8, i8* %13, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #15
  %37 = bitcast i8* %36 to i64*
  store i64 %33, i64* %37, align 8
  %38 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8**
  store i8* %13, i8** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %29
  %45 = ptrtoint %"class.std::__1::__tree_node_base"* %42 to i64
  %46 = bitcast %"class.std::__1::__tree.21"* %0 to i64*
  store i64 %45, i64* %46, align 8
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %8, align 8
  br label %48

48:                                               ; preds = %44, %29
  %49 = phi %"class.std::__1::__tree_node_base"* [ %35, %29 ], [ %47, %44 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %51, %"class.std::__1::__tree_node_base"* %49) #15
  %52 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 2, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %52, align 8
  br label %55

55:                                               ; preds = %48, %5
  %56 = phi i8 [ 1, %48 ], [ 0, %5 ]
  %57 = phi %"class.std::__1::__tree_node"* [ %34, %48 ], [ %10, %5 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  %59 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %58, 0
  %60 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %59, i8 %56, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree.21"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #15
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #15
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

declare void @_ZN6policy6SchemaC1Ev(%"class.policy::Schema"*) unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #3 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !27
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !27
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !27
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE30__emplace_hint_unique_key_argsIS3_JRKNSE_IKS3_SI_EEEEENSE_INS_15__tree_iteratorISJ_PNS_11__tree_nodeISJ_PvEElEEbEENS_21__tree_const_iteratorISJ_SY_lEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, i32* dereferenceable(4), %"struct.std::__1::pair.45"* dereferenceable(32)) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %8 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %6, align 8
  %9 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISJ_PNS_11__tree_nodeISJ_SR_EElEERPNS_15__tree_end_nodeIST_EESU_RKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %6, i32* dereferenceable(4) %2)
  %10 = bitcast %"class.std::__1::__tree_node_base"** %9 to %"class.std::__1::__tree_node.60"**
  %11 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node.60"* %11, null
  br i1 %12, label %13, label %88

13:                                               ; preds = %4
  %14 = call i8* @_Znwm(i64 64) #14, !noalias !51
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds %"struct.std::__1::pair.45", %"struct.std::__1::pair.45"* %3, i64 0, i32 0
  %18 = load i32, i32* %17, align 8, !noalias !51
  store i32 %18, i32* %16, align 8, !noalias !51
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  %20 = bitcast i8* %19 to %"class.std::__1::__tree.21"*
  %21 = getelementptr inbounds i8, i8* %14, i64 48
  %22 = bitcast i8* %21 to %"class.std::__1::__tree_end_node"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #15, !noalias !51
  %23 = bitcast i8* %19 to i8**
  store i8* %21, i8** %23, align 8, !noalias !51
  %24 = getelementptr inbounds %"struct.std::__1::pair.45", %"struct.std::__1::pair.45"* %3, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8, !noalias !51
  %26 = getelementptr inbounds %"struct.std::__1::pair.45", %"struct.std::__1::pair.45"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %27 = icmp eq %"class.std::__1::__tree_end_node"* %25, %26
  br i1 %27, label %64, label %28

28:                                               ; preds = %13, %61
  %29 = phi %"class.std::__1::__tree_end_node"* [ %62, %61 ], [ %25, %13 ]
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 4
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"struct.std::__1::pair"*
  %32 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::basic_string"*
  %33 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S9_EEEEENSI_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEENS_21__tree_const_iteratorISA_SR_lEERKT_DpOT0_(%"class.std::__1::__tree.21"* %20, %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::basic_string"* dereferenceable(24) %32, %"struct.std::__1::pair"* dereferenceable(40) %31) #15, !noalias !51
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 1, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8, !noalias !51
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %45

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node_base"*
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 2
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_end_node"**
  %41 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %40, align 8, !noalias !51
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8, !noalias !51
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, %38
  br i1 %44, label %61, label %52

45:                                               ; preds = %28, %45
  %46 = phi %"class.std::__1::__tree_node_base"* [ %48, %45 ], [ %35, %28 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8, !noalias !51
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %45

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 0
  br label %61

52:                                               ; preds = %37, %52
  %53 = phi %"class.std::__1::__tree_end_node"** [ %56, %52 ], [ %40, %37 ]
  %54 = bitcast %"class.std::__1::__tree_end_node"** %53 to %"class.std::__1::__tree_node_base"**
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8, !noalias !51
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 2
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8, !noalias !51
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8, !noalias !51
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, %55
  br i1 %60, label %61, label %52

61:                                               ; preds = %52, %50, %37
  %62 = phi %"class.std::__1::__tree_end_node"* [ %51, %50 ], [ %41, %37 ], [ %57, %52 ]
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %62, %26
  br i1 %63, label %64, label %28

64:                                               ; preds = %61, %13
  %65 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast i8* %14 to %"class.std::__1::__tree_node.60"*
  %68 = bitcast i8* %14 to %"class.std::__1::__tree_node_base"*
  %69 = getelementptr inbounds i8, i8* %14, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #15
  %70 = bitcast i8* %69 to i64*
  store i64 %66, i64* %70, align 8
  %71 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8**
  store i8* %14, i8** %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %64
  %78 = ptrtoint %"class.std::__1::__tree_node_base"* %75 to i64
  %79 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %78, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br label %81

81:                                               ; preds = %77, %64
  %82 = phi %"class.std::__1::__tree_node_base"* [ %68, %64 ], [ %80, %77 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %84, %"class.std::__1::__tree_node_base"* %82) #15
  %85 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %85, align 8
  br label %88

88:                                               ; preds = %81, %4
  %89 = phi i8 [ 1, %81 ], [ 0, %4 ]
  %90 = phi %"class.std::__1::__tree_node.60"* [ %67, %81 ], [ %11, %4 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %90, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  %92 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %91, 0
  %93 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %92, i8 %89, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISJ_PNS_11__tree_nodeISJ_SR_EElEERPNS_15__tree_end_nodeIST_EESU_RKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to i32*
  %12 = load i32, i32* %4, align 4
  %13 = load i32, i32* %11, align 4
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %15, label %90

15:                                               ; preds = %5, %9
  %16 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %17, %1
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  br i1 %18, label %47, label %21

21:                                               ; preds = %15
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21, %23
  %24 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ %20, %21 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %39, label %23

28:                                               ; preds = %21, %28
  %29 = phi %"class.std::__1::__tree_end_node"* [ %33, %28 ], [ %1, %21 ]
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 2
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_end_node"**
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %30
  br i1 %36, label %28, label %37

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi %"class.std::__1::__tree_node_base"* [ %38, %37 ], [ %24, %23 ]
  %41 = ptrtoint %"class.std::__1::__tree_node_base"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 1
  %43 = bitcast %"class.std::__1::__tree_node_base"* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %4, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %47, label %56

47:                                               ; preds = %15, %39
  %48 = phi i64 [ %41, %39 ], [ %6, %15 ]
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

52:                                               ; preds = %47
  %53 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %48, i64* %53, align 8
  %54 = inttoptr i64 %48 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 1
  br label %170

56:                                               ; preds = %39
  %57 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.60"**
  %58 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node.60"* %58, null
  br i1 %59, label %88, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %84, %60
  %63 = phi %"class.std::__1::__tree_node.60"* [ %87, %84 ], [ %58, %60 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %86, %84 ], [ %61, %60 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %63, i64 0, i32 1, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %45, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %63, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %73, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

74:                                               ; preds = %62
  %75 = icmp slt i32 %66, %45
  br i1 %75, label %76, label %82

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %63, i64 0, i32 0, i32 1
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %81, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %83, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

84:                                               ; preds = %76, %68
  %85 = phi %"class.std::__1::__tree_node_base"* [ %70, %68 ], [ %78, %76 ]
  %86 = phi %"class.std::__1::__tree_node_base"** [ %69, %68 ], [ %77, %76 ]
  %87 = bitcast %"class.std::__1::__tree_node_base"* %85 to %"class.std::__1::__tree_node.60"*
  br label %62

88:                                               ; preds = %56
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %170

90:                                               ; preds = %9
  %91 = icmp slt i32 %13, %12
  br i1 %91, label %92, label %167

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %104

96:                                               ; preds = %92
  %97 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_end_node"**
  %100 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, %97
  br i1 %103, label %120, label %111

104:                                              ; preds = %92, %104
  %105 = phi %"class.std::__1::__tree_node_base"* [ %107, %104 ], [ %94, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, null
  br i1 %108, label %109, label %104

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0
  br label %120

111:                                              ; preds = %96, %111
  %112 = phi %"class.std::__1::__tree_end_node"** [ %115, %111 ], [ %99, %96 ]
  %113 = bitcast %"class.std::__1::__tree_end_node"** %112 to %"class.std::__1::__tree_node_base"**
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 2
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, %114
  br i1 %119, label %120, label %111

120:                                              ; preds = %111, %109, %96
  %121 = phi %"class.std::__1::__tree_end_node"* [ %110, %109 ], [ %100, %96 ], [ %116, %111 ]
  %122 = icmp eq %"class.std::__1::__tree_end_node"* %121, %7
  br i1 %122, label %128, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 4
  %125 = bitcast %"class.std::__1::__tree_end_node"* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = icmp slt i32 %12, %126
  br i1 %127, label %128, label %133

128:                                              ; preds = %120, %123
  br i1 %95, label %129, label %131

129:                                              ; preds = %128
  %130 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %130, align 8
  br label %170

131:                                              ; preds = %128
  store %"class.std::__1::__tree_end_node"* %121, %"class.std::__1::__tree_end_node"** %2, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  br label %170

133:                                              ; preds = %123
  %134 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.60"**
  %135 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node.60"* %135, null
  br i1 %136, label %165, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %139

139:                                              ; preds = %161, %137
  %140 = phi %"class.std::__1::__tree_node.60"* [ %164, %161 ], [ %135, %137 ]
  %141 = phi %"class.std::__1::__tree_node_base"** [ %163, %161 ], [ %138, %137 ]
  %142 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %140, i64 0, i32 1, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp slt i32 %12, %143
  br i1 %144, label %145, label %151

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %140, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, null
  br i1 %148, label %149, label %161

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %150, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

151:                                              ; preds = %139
  %152 = icmp slt i32 %143, %12
  br i1 %152, label %153, label %159

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %140, i64 0, i32 0, i32 1
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %157, label %161

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %158, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %160, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

161:                                              ; preds = %153, %145
  %162 = phi %"class.std::__1::__tree_node_base"* [ %147, %145 ], [ %155, %153 ]
  %163 = phi %"class.std::__1::__tree_node_base"** [ %146, %145 ], [ %154, %153 ]
  %164 = bitcast %"class.std::__1::__tree_node_base"* %162 to %"class.std::__1::__tree_node.60"*
  br label %139

165:                                              ; preds = %133
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %170

167:                                              ; preds = %90
  %168 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %168, align 8
  %169 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %169, align 8
  br label %170

170:                                              ; preds = %129, %131, %149, %157, %159, %165, %50, %52, %72, %80, %82, %88, %167
  %171 = phi %"class.std::__1::__tree_node_base"** [ %3, %167 ], [ %51, %50 ], [ %55, %52 ], [ %69, %72 ], [ %77, %80 ], [ %64, %82 ], [ %89, %88 ], [ %93, %129 ], [ %132, %131 ], [ %146, %149 ], [ %154, %157 ], [ %141, %159 ], [ %166, %165 ]
  ret %"class.std::__1::__tree_node_base"** %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S9_EEEEENSI_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEENS_21__tree_const_iteratorISA_SR_lEERKT_DpOT0_(%"class.std::__1::__tree.21"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::pair"* dereferenceable(40)) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %8 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %6, align 8
  %9 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_SJ_EElEERPNS_15__tree_end_nodeISL_EESM_RKT_(%"class.std::__1::__tree.21"* %0, %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %10 = bitcast %"class.std::__1::__tree_node_base"** %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node"* %11, null
  br i1 %12, label %13, label %55

13:                                               ; preds = %4
  %14 = call i8* @_Znwm(i64 72) #14, !noalias !54
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast %"struct.std::__1::pair"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !54
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = bitcast %"struct.std::__1::pair"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %21, i64 24, i1 false) #15, !noalias !54
  br label %28

22:                                               ; preds = %13
  %23 = bitcast i8* %15 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !54
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !54
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %25, i64 %27) #15, !noalias !54
  br label %28

28:                                               ; preds = %20, %22
  %29 = getelementptr inbounds i8, i8* %14, i64 56
  %30 = bitcast i8* %29 to %"class.policy::Schema"*
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  call void @_ZN6policy6SchemaC1ERKS0_(%"class.policy::Schema"* %30, %"class.policy::Schema"* dereferenceable(16) %31) #15, !noalias !54
  %32 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8* %14 to %"class.std::__1::__tree_node"*
  %35 = bitcast i8* %14 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds i8, i8* %14, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #15
  %37 = bitcast i8* %36 to i64*
  store i64 %33, i64* %37, align 8
  %38 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8**
  store i8* %14, i8** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %28
  %45 = ptrtoint %"class.std::__1::__tree_node_base"* %42 to i64
  %46 = bitcast %"class.std::__1::__tree.21"* %0 to i64*
  store i64 %45, i64* %46, align 8
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br label %48

48:                                               ; preds = %44, %28
  %49 = phi %"class.std::__1::__tree_node_base"* [ %35, %28 ], [ %47, %44 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %51, %"class.std::__1::__tree_node_base"* %49) #15
  %52 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 2, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %52, align 8
  br label %55

55:                                               ; preds = %48, %4
  %56 = phi i8 [ 1, %48 ], [ 0, %4 ]
  %57 = phi %"class.std::__1::__tree_node"* [ %34, %48 ], [ %11, %4 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  %59 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %58, 0
  %60 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %59, i8 %56, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_SJ_EElEERPNS_15__tree_end_nodeISL_EESM_RKT_(%"class.std::__1::__tree.21"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %46, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %13 to i64
  %19 = select i1 %14, i64 %17, i64 %18
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp ult i64 %19, %27
  %29 = select i1 %28, i64 %19, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %35 = select i1 %23, i8* %33, i8* %34
  %36 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %39 = select i1 %14, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %35, i8* %39, i64 %29) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %31, %9
  %43 = icmp ult i64 %27, %19
  br i1 %43, label %46, label %120

44:                                               ; preds = %31
  %45 = icmp slt i32 %40, 0
  br i1 %45, label %46, label %130

46:                                               ; preds = %42, %5, %44
  %47 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %1
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br i1 %49, label %109, label %52

52:                                               ; preds = %46
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %52, %54
  %55 = phi %"class.std::__1::__tree_node_base"* [ %57, %54 ], [ %51, %52 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 1
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %70, label %54

59:                                               ; preds = %52, %59
  %60 = phi %"class.std::__1::__tree_end_node"* [ %64, %59 ], [ %1, %52 ]
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 2
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_end_node"**
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %61
  br i1 %67, label %59, label %68

68:                                               ; preds = %59
  %69 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node_base"*
  br label %70

70:                                               ; preds = %54, %68
  %71 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %54 ]
  %72 = ptrtoint %"class.std::__1::__tree_node_base"* %71 to i64
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1
  %74 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %76 to i64
  %81 = select i1 %77, i64 %79, i64 %80
  %82 = bitcast %"class.std::__1::__tree_node_base"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1, i32 1
  %87 = bitcast %"class.std::__1::__tree_node_base"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %84 to i64
  %90 = select i1 %85, i64 %88, i64 %89
  %91 = icmp ult i64 %81, %90
  %92 = select i1 %91, i64 %81, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %70
  %95 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8*
  %98 = select i1 %85, i8* %96, i8* %97
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %102 = select i1 %77, i8* %100, i8* %101
  %103 = tail call i32 @memcmp(i8* %98, i8* %102, i64 %92) #15
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %94, %70
  %106 = icmp ult i64 %90, %81
  br i1 %106, label %109, label %118

107:                                              ; preds = %94
  %108 = icmp slt i32 %103, 0
  br i1 %108, label %109, label %118

109:                                              ; preds = %46, %105, %107
  %110 = phi i64 [ %72, %107 ], [ %72, %105 ], [ %6, %46 ]
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %208

114:                                              ; preds = %109
  %115 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %110, i64* %115, align 8
  %116 = inttoptr i64 %110 to %"class.std::__1::__tree_node_base"*
  %117 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %116, i64 0, i32 1
  br label %208

118:                                              ; preds = %105, %107
  %119 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree.21"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  br label %208

120:                                              ; preds = %42
  br i1 %30, label %135, label %121

121:                                              ; preds = %120
  %122 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %127 = select i1 %14, i8* %123, i8* %126
  %128 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %129 = select i1 %23, i8* %125, i8* %128
  br label %130

130:                                              ; preds = %121, %44
  %131 = phi i8* [ %129, %121 ], [ %35, %44 ]
  %132 = phi i8* [ %127, %121 ], [ %39, %44 ]
  %133 = tail call i32 @memcmp(i8* %132, i8* %131, i64 %29) #15
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %130, %120
  br i1 %28, label %138, label %205

136:                                              ; preds = %130
  %137 = icmp slt i32 %133, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %135, %136
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  %143 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %145 = bitcast %"class.std::__1::__tree_end_node"* %144 to %"class.std::__1::__tree_end_node"**
  %146 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 0, i32 0
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, %143
  br i1 %149, label %166, label %157

150:                                              ; preds = %138, %150
  %151 = phi %"class.std::__1::__tree_node_base"* [ %153, %150 ], [ %140, %138 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0, i32 0
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %155, label %150

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0
  br label %166

157:                                              ; preds = %142, %157
  %158 = phi %"class.std::__1::__tree_end_node"** [ %161, %157 ], [ %145, %142 ]
  %159 = bitcast %"class.std::__1::__tree_end_node"** %158 to %"class.std::__1::__tree_node_base"**
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %160, i64 0, i32 2
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %162, i64 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, %160
  br i1 %165, label %166, label %157

166:                                              ; preds = %157, %155, %142
  %167 = phi %"class.std::__1::__tree_end_node"* [ %156, %155 ], [ %146, %142 ], [ %162, %157 ]
  %168 = icmp eq %"class.std::__1::__tree_end_node"* %167, %7
  br i1 %168, label %198, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 4
  %171 = bitcast %"class.std::__1::__tree_end_node"* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 5
  %176 = bitcast %"class.std::__1::__tree_end_node"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = zext i8 %173 to i64
  %179 = select i1 %174, i64 %177, i64 %178
  %180 = icmp ult i64 %179, %27
  %181 = select i1 %180, i64 %179, i64 %27
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %194, label %183

183:                                              ; preds = %169
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %187 = select i1 %23, i8* %185, i8* %186
  %188 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8**
  %189 = load i8*, i8** %188, align 8
  %190 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8*
  %191 = select i1 %174, i8* %189, i8* %190
  %192 = tail call i32 @memcmp(i8* %187, i8* %191, i64 %181) #15
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %183, %169
  %195 = icmp ult i64 %27, %179
  br i1 %195, label %198, label %203

196:                                              ; preds = %183
  %197 = icmp slt i32 %192, 0
  br i1 %197, label %198, label %203

198:                                              ; preds = %194, %166, %196
  br i1 %141, label %199, label %201

199:                                              ; preds = %198
  %200 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %200, align 8
  br label %208

201:                                              ; preds = %198
  store %"class.std::__1::__tree_end_node"* %167, %"class.std::__1::__tree_end_node"** %2, align 8
  %202 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 0, i32 0
  br label %208

203:                                              ; preds = %194, %196
  %204 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree.21"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  br label %208

205:                                              ; preds = %135, %136
  %206 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %206, align 8
  %207 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %207, align 8
  br label %208

208:                                              ; preds = %199, %201, %203, %112, %114, %118, %205
  %209 = phi %"class.std::__1::__tree_node_base"** [ %3, %205 ], [ %113, %112 ], [ %117, %114 ], [ %119, %118 ], [ %139, %199 ], [ %202, %201 ], [ %204, %203 ]
  ret %"class.std::__1::__tree_node_base"** %209
}

declare void @_ZN6policy6SchemaC1ERKS0_(%"class.policy::Schema"*, %"class.policy::Schema"* dereferenceable(16)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE7destroyEPNS_11__tree_nodeISJ_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.60"*) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.60"* %1, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.60"* %1 to %"class.std::__1::__tree_node.60"**
  %6 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE7destroyEPNS_11__tree_nodeISJ_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.60"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.60"**
  %9 = load %"class.std::__1::__tree_node.60"*, %"class.std::__1::__tree_node.60"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE7destroyEPNS_11__tree_nodeISJ_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.60"* %9) #15
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node.60", %"class.std::__1::__tree_node.60"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.21"* %10, %"class.std::__1::__tree_node"* %13) #15
  %14 = bitcast %"class.std::__1::__tree_node.60"* %1 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  ret void

15:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree.21"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #15
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE5eraseENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEE(%"class.std::__1::__tree.21"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree.21"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree.21", %"class.std::__1::__tree.21"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #15
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 7
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.policy::Schema"*
  tail call void @_ZN6policy6SchemaD1Ev(%"class.policy::Schema"* %47) #15
  %48 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %38
  %53 = bitcast %"class.std::__1::__tree_end_node"* %45 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #14
  br label %55

55:                                               ; preds = %38, %52
  %56 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #14
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !27
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !27
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !27
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !27
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !27
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !27
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !27
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !27
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !27
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !27
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !27
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !27
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !27
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN6policy14SchemaRegistryENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.32"*, %"class.std::__1::__tree_node.85"*) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.85"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.85"* %1 to %"class.std::__1::__tree_node.85"**
  %6 = load %"class.std::__1::__tree_node.85"*, %"class.std::__1::__tree_node.85"** %5, align 8
  tail call void @_ZNSt3__16__treeIPN6policy14SchemaRegistryENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.32"* %0, %"class.std::__1::__tree_node.85"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.85", %"class.std::__1::__tree_node.85"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.85"**
  %9 = load %"class.std::__1::__tree_node.85"*, %"class.std::__1::__tree_node.85"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN6policy14SchemaRegistryENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.32"* %0, %"class.std::__1::__tree_node.85"* %9) #15
  %10 = bitcast %"class.std::__1::__tree_node.85"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base12ObserverListIN6policy14SchemaRegistry16InternalObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base12ObserverListIN6policy14SchemaRegistry16InternalObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListIN6policy14SchemaRegistry16InternalObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListIN6policy14SchemaRegistry16InternalObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENST_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISJ_PvEENS_22__tree_node_destructorINS8_IS11_EEEEEEDpOT_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENST_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISJ_PvEENS_22__tree_node_destructorINS8_IS11_EEEEEEDpOT_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK4base12ObserverListIN6policy14SchemaRegistry8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4base12ObserverListIN6policy14SchemaRegistry8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK4base12ObserverListIN6policy14SchemaRegistry8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4base12ObserverListIN6policy14SchemaRegistry8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!22 = distinct !{!22, !9}
!23 = distinct !{!23, !9}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENST_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISJ_PvEENS_22__tree_node_destructorINS8_IS11_EEEEEEDpOT_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENST_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISJ_PvEENS_22__tree_node_destructorINS8_IS11_EEEEEEDpOT_"}
!27 = !{i8 0, i8 2}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK4base12ObserverListIN6policy14SchemaRegistry8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!30 = distinct !{!30, !"_ZNK4base12ObserverListIN6policy14SchemaRegistry8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK4base12ObserverListIN6policy14SchemaRegistry8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4base12ObserverListIN6policy14SchemaRegistry8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !9}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__16__treeIPN6policy14SchemaRegistryENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__16__treeIPN6policy14SchemaRegistryENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENST_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISJ_PvEENS_22__tree_node_destructorINS8_IS11_EEEEEEDpOT_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENST_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISJ_PvEENS_22__tree_node_destructorINS8_IS11_EEEEEEDpOT_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENST_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISJ_PvEENS_22__tree_node_destructorINS8_IS11_EEEEEEDpOT_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENST_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISJ_PvEENS_22__tree_node_destructorINS8_IS11_EEEEEEDpOT_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENST_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISJ_PvEENS_22__tree_node_destructorINS8_IS11_EEEEEEDpOT_: argument 0"}
!47 = distinct !{!47, !"_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENST_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISJ_PvEENS_22__tree_node_destructorINS8_IS11_EEEEEEDpOT_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_IST_EEEEEEDpOT_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE16__construct_nodeIJRKNSE_IKS3_SI_EEEEENS_10unique_ptrINS_11__tree_nodeISJ_PvEENS_22__tree_node_destructorINS8_ISX_EEEEEEDpOT_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__16__treeINS_12__value_typeIN6policy12PolicyDomainENS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_6SchemaENS_4lessISA_EENS8_INS_4pairIKSA_SB_EEEEEEEENS_19__map_value_compareIS3_SJ_NSC_IS3_EELb1EEENS8_ISJ_EEE16__construct_nodeIJRKNSE_IKS3_SI_EEEEENS_10unique_ptrINS_11__tree_nodeISJ_PvEENS_22__tree_node_destructorINS8_ISX_EEEEEEDpOT_"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_4pairIKS7_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy6SchemaEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_4pairIKS7_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_"}
