; ModuleID = '../../third_party/blink/renderer/modules/animationworklet/animation_worklet_global_scope.cc'
source_filename = "../../third_party/blink/renderer/modules/animationworklet/animation_worklet_global_scope.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.160", i32, [4 x i8], %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.298", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.327", %"class.std::__1::unique_ptr.333", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.340", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.278", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i64 }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::Worklist.207"* }
%"class.blink::Worklist.207" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist.214"* }
%"class.blink::Worklist.214" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::Worklist.221"* }
%"class.blink::Worklist.221" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::Worklist.228"* }
%"class.blink::Worklist.228" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::Worklist.235"* }
%"class.blink::Worklist.235" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::Worklist.242"* }
%"class.blink::Worklist.242" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::Worklist.249"* }
%"class.blink::Worklist.249" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.256", %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.271", [4 x i8] }>
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258", %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { float }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.281", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.290" }
%"class.WTF::Vector.290" = type { %"class.WTF::VectorBuffer.291" }
%"class.WTF::VectorBuffer.291" = type { %"class.WTF::VectorBufferBase.292" }
%"class.WTF::VectorBufferBase.292" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.306" }
%"class.WTF::VectorBuffer.306" = type { %"class.WTF::VectorBufferBase.307" }
%"class.WTF::VectorBufferBase.307" = type { %"struct.std::__1::pair.308"*, i32, i32 }
%"struct.std::__1::pair.308" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.321" }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.207"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.214"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.221"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.228"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.235"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1167", i64 }
%"class.std::__1::vector.1167" = type { %"class.std::__1::__vector_base.1168" }
%"class.std::__1::__vector_base.1168" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1169" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.339 }
%class.scoped_refptr.339 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.340" = type { %"struct.std::__1::__atomic_base.341" }
%"struct.std::__1::__atomic_base.341" = type { %"struct.std::__1::__cxx_atomic_impl.342" }
%"struct.std::__1::__cxx_atomic_impl.342" = type { %"struct.std::__1::__cxx_atomic_base_impl.343" }
%"struct.std::__1::__cxx_atomic_base_impl.343" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.374", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.374" = type { %"class.base::RefCounted.375" }
%"class.base::RefCounted.375" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.376" }
%"class.blink::PersistentBase.376" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.379" }
%"class.blink::HeapHashMap.379" = type { %"class.WTF::HashMap.382" }
%"class.WTF::HashMap.382" = type { %"class.WTF::HashTable.383" }
%"class.WTF::HashTable.383" = type <{ %"struct.WTF::KeyValuePair.385"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.385" = type { %"class.blink::WeakMember.386", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.679" }
%"struct.std::__1::atomic.679" = type { %"struct.std::__1::__atomic_base.680" }
%"struct.std::__1::__atomic_base.680" = type { %"struct.std::__1::__atomic_base.681" }
%"struct.std::__1::__atomic_base.681" = type { %"struct.std::__1::__cxx_atomic_impl.682" }
%"struct.std::__1::__cxx_atomic_impl.682" = type { %"struct.std::__1::__cxx_atomic_base_impl.683" }
%"struct.std::__1::__cxx_atomic_base_impl.683" = type { i32 }
%"class.blink::AnimationWorkletGlobalScope" = type { %"class.blink::WorkletGlobalScope.base", [6 x i8], %"class.blink::HeapHashMap.745", %"class.blink::HeapHashMap.752", i8, %"class.util::TokenType.868" }
%"class.blink::WorkletGlobalScope.base" = type <{ %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::KURL", %"class.WTF::String", %class.scoped_refptr.24, i8, [7 x i8], %"class.blink::CrossThreadPersistent.456", i32, i32, %"class.blink::Member.465", %"class.blink::WorkerThread"*, %"class.util::TokenType.737", %"class.std::__1::unique_ptr.739", i8, i8 }>
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.344", %"class.blink::Member.350", %"class.blink::HeapHashSet.352", %class.scoped_refptr.359, %"class.blink::Member.361", %"class.blink::Member.363", i32, %"class.WTF::Vector.98", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.446" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.65", i32, i8, [3 x i8], %"class.blink::HeapVector.67", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.75", %"class.blink::Member.77", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.86", %"class.blink::Member.92", %"class.blink::Member.94", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.15" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.13" }
%"class.WTF::HashTable.13" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.15" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.16" }
%"class.blink::HeapHashMap.16" = type { %"class.WTF::HashMap.19" }
%"class.WTF::HashMap.19" = type { %"class.WTF::HashTable.20" }
%"class.WTF::HashTable.20" = type <{ %"struct.WTF::KeyValuePair.22"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.22" = type { i8*, %"class.blink::Member.1567" }
%"class.blink::Member.1567" = type { %"class.blink::MemberBase.1568" }
%"class.blink::MemberBase.1568" = type { %"class.blink::Supplement.1569"* }
%"class.blink::Supplement.1569" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1570" }
%"class.blink::Member.1570" = type { %"class.blink::MemberBase.1571" }
%"class.blink::MemberBase.1571" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.23, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"class.blink::Member.59", i32, [4 x i8], %"class.WTF::HashSet.61", i32, i32 }
%class.scoped_refptr.23 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.24 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.40", %"class.std::__1::map.49"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.30 }
%union.anon.30 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::map.49" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.65", i32, i8, [3 x i8], %"class.blink::HeapVector.67", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.75", %"class.blink::Member.77", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.86", %"class.blink::Member.92", %"class.blink::Member.94", i8, [7 x i8] }>
%"class.WTF::HashSet.61" = type { %"class.WTF::HashTable.62" }
%"class.WTF::HashTable.62" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.67" = type { %"class.WTF::Vector.70" }
%"class.WTF::Vector.70" = type { %"class.WTF::VectorBuffer.71" }
%"class.WTF::VectorBuffer.71" = type { %"class.WTF::VectorBufferBase.72" }
%"class.WTF::VectorBufferBase.72" = type { %"class.blink::Member.73"*, i32, i32 }
%"class.blink::Member.73" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.79", i32, i32 }
%"class.blink::HeapHashMap.79" = type { %"class.WTF::HashMap.82" }
%"class.WTF::HashMap.82" = type { %"class.WTF::HashTable.83" }
%"class.WTF::HashTable.83" = type <{ %"struct.WTF::KeyValuePair.85"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.85" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.77", i8, [7 x i8], %"class.WTF::Vector.98", %"class.blink::HeapVector.138", i8, [7 x i8], %"class.WTF::HashSet.61", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.138" = type { %"class.WTF::Vector.141" }
%"class.WTF::Vector.141" = type { %"class.WTF::VectorBuffer.142" }
%"class.WTF::VectorBuffer.142" = type { %"class.WTF::VectorBufferBase.143" }
%"class.WTF::VectorBufferBase.143" = type { %"class.blink::Member.144"*, i32, i32 }
%"class.blink::Member.144" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.148" }
%"class.blink::Supplementable.148" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.149" }
%"class.blink::HeapHashMap.149" = type { %"class.WTF::HashMap.152" }
%"class.WTF::HashMap.152" = type { %"class.WTF::HashTable.153" }
%"class.WTF::HashTable.153" = type <{ %"struct.WTF::KeyValuePair.155"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.155" = type { i8*, %"class.blink::Member.1585" }
%"class.blink::Member.1585" = type { %"class.blink::MemberBase.1586" }
%"class.blink::MemberBase.1586" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1224" }
%"class.blink::Member.1224" = type { %"class.blink::MemberBase.1225" }
%"class.blink::MemberBase.1225" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.156" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.872", %"class.blink::Member.874", %"class.blink::Member.876", %class.scoped_refptr.678, %class.scoped_refptr.678, %"class.blink::Member.878", %"class.blink::Member.880", %"class.blink::Member.886", %"class.blink::Member.890", %"class.blink::Member.942", %"class.blink::HeapHashMap.944", %"class.blink::HeapHashSet.951", %"class.blink::HeapHashSet.951", %"class.blink::HeapHashMap.1118", %"class.blink::HeapVector.1125", %"class.blink::Member.1133", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1136", %"class.WTF::Vector.1143", %"class.blink::HeapHashSet.1149", %"class.blink::HeapHashSet.1149", %"class.std::__1::unique_ptr.1155", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1164", i8, i8, %"class.base::WeakPtrFactory.1166" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.678 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.679" }
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.880" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.884" }
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.894", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.896", %"class.WTF::HashSet.901", i8, [3 x i8], i32, %"class.blink::HeapHashMap.905", %"class.std::__1::map.912", %"class.std::__1::map.923", %"class.std::__1::unique_ptr.932", %"class.blink::Member.880", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.939", %"class.mojo::InlinedStructPtr.941", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.896" = type { %"class.WTF::HashTable.897" }
%"class.WTF::HashTable.897" = type <{ %"struct.WTF::KeyValuePair.900"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.900" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.901" = type { %"class.WTF::HashTable.902" }
%"class.WTF::HashTable.902" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.905" = type { %"class.WTF::HashMap.908" }
%"class.WTF::HashMap.908" = type { %"class.WTF::HashTable.909" }
%"class.WTF::HashTable.909" = type <{ %"struct.WTF::KeyValuePair.911"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.911" = type opaque
%"class.std::__1::map.912" = type { %"class.std::__1::__tree.913" }
%"class.std::__1::__tree.913" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.914", %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::map.923" = type { %"class.std::__1::__tree.924" }
%"class.std::__1::__tree.924" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.925", %"class.std::__1::__compressed_pair.929" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.941" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.944" = type { %"class.WTF::HashMap.947" }
%"class.WTF::HashMap.947" = type { %"class.WTF::HashTable.948" }
%"class.WTF::HashTable.948" = type <{ %"struct.WTF::KeyValuePair.950"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.950" = type opaque
%"class.blink::HeapHashSet.951" = type { %"class.WTF::HashSet.954" }
%"class.WTF::HashSet.954" = type { %"class.WTF::HashTable.955" }
%"class.WTF::HashTable.955" = type <{ %"class.blink::WeakMember.957"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.961", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.981", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1075", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1093", %"class.blink::ResourceResponse", %class.scoped_refptr.1095, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.961" = type { %"class.absl::optional_internal::optional_data.962" }
%"class.absl::optional_internal::optional_data.962" = type { %"class.absl::optional_internal::optional_data_base.963" }
%"class.absl::optional_internal::optional_data_base.963" = type { %"class.absl::optional_internal::optional_data_dtor_base.964" }
%"class.absl::optional_internal::optional_data_dtor_base.964" = type { i8, %union.anon.965 }
%union.anon.965 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.966", i8, %"class.absl::optional.971", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.966" = type { %"class.absl::optional_internal::optional_data.967" }
%"class.absl::optional_internal::optional_data.967" = type { %"class.absl::optional_internal::optional_data_base.968" }
%"class.absl::optional_internal::optional_data_base.968" = type { %"class.absl::optional_internal::optional_data_dtor_base.969" }
%"class.absl::optional_internal::optional_data_dtor_base.969" = type { i8, [7 x i8], %union.anon.970 }
%union.anon.970 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.971" = type { %"class.absl::optional_internal::optional_data.972" }
%"class.absl::optional_internal::optional_data.972" = type { %"class.absl::optional_internal::optional_data_base.973" }
%"class.absl::optional_internal::optional_data_base.973" = type { %"class.absl::optional_internal::optional_data_dtor_base.974" }
%"class.absl::optional_internal::optional_data_dtor_base.974" = type { i8, %union.anon.975 }
%union.anon.975 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.976", %"class.WTF::Vector.121" }
%"class.WTF::Vector.976" = type { %"class.WTF::VectorBuffer.977" }
%"class.WTF::VectorBuffer.977" = type { %"class.WTF::VectorBufferBase.978" }
%"class.WTF::VectorBufferBase.978" = type { i32*, i32, i32 }
%"class.WTF::Vector.121" = type { %"class.WTF::VectorBuffer.122" }
%"class.WTF::VectorBuffer.122" = type { %"class.WTF::VectorBufferBase.123" }
%"class.WTF::VectorBufferBase.123" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.981" = type { %"class.WTF::VectorBuffer.982" }
%"class.WTF::VectorBuffer.982" = type { %"class.WTF::VectorBufferBase.983" }
%"class.WTF::VectorBufferBase.983" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1071" }
%"class.WTF::HashMap.1071" = type { %"class.WTF::HashTable.1072" }
%"class.WTF::HashTable.1072" = type <{ %"struct.WTF::KeyValuePair.1074"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1074" = type <{ %"class.blink::WeakMember.1587", i32, [4 x i8] }>
%"class.blink::WeakMember.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1589", [7 x i8], %"class.blink::Member.1131", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.1589" = type { i8 }
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.958" }
%"class.blink::HeapHashSet.1075" = type { %"class.WTF::HashSet.1078" }
%"class.WTF::HashSet.1078" = type { %"class.WTF::HashTable.1079" }
%"class.WTF::HashTable.1079" = type <{ %"class.blink::WeakMember.1081"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1081" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.1082", %"class.WTF::String", %"class.WTF::HashSet.1083", i8, i8, %class.scoped_refptr.1088, %class.scoped_refptr.1089, %class.scoped_refptr.1091 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.1082" = type { i8 }
%"class.WTF::HashSet.1083" = type { %"class.WTF::HashTable.1084" }
%"class.WTF::HashTable.1084" = type <{ %"struct.std::__1::pair.1087"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1087" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1088 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.1089 = type { %"class.base::RefCountedData.1090"* }
%"class.base::RefCountedData.1090" = type opaque
%class.scoped_refptr.1091 = type { %"class.base::RefCountedData.1092"* }
%"class.base::RefCountedData.1092" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1034" }
%"class.base::time_internal::TimeBase.1034" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.24, %class.scoped_refptr.24, %class.scoped_refptr.24, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.989, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1001", %"class.absl::optional.1006", %"class.absl::optional.1016", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1021", %"class.absl::optional.1016", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1016", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1021", %"class.absl::optional.1026", i8, %class.scoped_refptr.1033 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.984" }
%"class.WTF::HashMap.984" = type { %"class.WTF::HashTable.985" }
%"class.WTF::HashTable.985" = type <{ %"struct.WTF::KeyValuePair.988"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.988" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.989 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.990", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.999, i8, %"class.url::Origin" }
%"class.base::RefCounted.990" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::WebVector" = type { %"class.std::__1::vector.991" }
%"class.std::__1::vector.991" = type { %"class.std::__1::__vector_base.992" }
%"class.std::__1::__vector_base.992" = type { %"class.std::__1::unique_ptr.993"*, %"class.std::__1::unique_ptr.993"*, %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::unique_ptr.993" = type { %"class.std::__1::__compressed_pair.1572" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.1573" }
%"struct.std::__1::__compressed_pair_elem.1573" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::unique_ptr.993"* }
%class.scoped_refptr.999 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1000", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1000" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1001" = type { %"class.absl::optional_internal::optional_data.1002" }
%"class.absl::optional_internal::optional_data.1002" = type { %"class.absl::optional_internal::optional_data_base.1003" }
%"class.absl::optional_internal::optional_data_base.1003" = type { %"class.absl::optional_internal::optional_data_dtor_base.1004" }
%"class.absl::optional_internal::optional_data_dtor_base.1004" = type { i8, %union.anon.1005 }
%union.anon.1005 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1006" = type { %"class.absl::optional_internal::optional_data.1007" }
%"class.absl::optional_internal::optional_data.1007" = type { %"class.absl::optional_internal::optional_data_base.1008" }
%"class.absl::optional_internal::optional_data_base.1008" = type { %"class.absl::optional_internal::optional_data_dtor_base.1009" }
%"class.absl::optional_internal::optional_data_dtor_base.1009" = type { i8, %union.anon.1010 }
%union.anon.1010 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1011", %"class.WTF::Vector.121", %"class.WTF::String" }
%"class.WTF::Vector.1011" = type { %"class.WTF::VectorBuffer.1012" }
%"class.WTF::VectorBuffer.1012" = type { %"class.WTF::VectorBufferBase.1013" }
%"class.WTF::VectorBufferBase.1013" = type { %class.scoped_refptr.24*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.849", %"class.absl::optional.849" }
%"class.absl::optional.849" = type { %"class.absl::optional_internal::optional_data.850" }
%"class.absl::optional_internal::optional_data.850" = type { %"class.absl::optional_internal::optional_data_base.851" }
%"class.absl::optional_internal::optional_data_base.851" = type { %"class.absl::optional_internal::optional_data_dtor_base.852" }
%"class.absl::optional_internal::optional_data_dtor_base.852" = type { i8, %union.anon.853 }
%union.anon.853 = type { %"class.base::TimeDelta" }
%"class.absl::optional.1016" = type { %"class.absl::optional_internal::optional_data.1017" }
%"class.absl::optional_internal::optional_data.1017" = type { %"class.absl::optional_internal::optional_data_base.1018" }
%"class.absl::optional_internal::optional_data_base.1018" = type { %"class.absl::optional_internal::optional_data_dtor_base.1019" }
%"class.absl::optional_internal::optional_data_dtor_base.1019" = type { i8, %union.anon.1020 }
%union.anon.1020 = type { %"class.WTF::String" }
%"class.absl::optional.1021" = type { %"class.absl::optional_internal::optional_data.1022" }
%"class.absl::optional_internal::optional_data.1022" = type { %"class.absl::optional_internal::optional_data_base.1023" }
%"class.absl::optional_internal::optional_data_base.1023" = type { %"class.absl::optional_internal::optional_data_dtor_base.1024" }
%"class.absl::optional_internal::optional_data_dtor_base.1024" = type { i8, %union.anon.1025 }
%union.anon.1025 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.1026" = type { %"class.absl::optional_internal::optional_data.1027" }
%"class.absl::optional_internal::optional_data.1027" = type { %"class.absl::optional_internal::optional_data_base.1028" }
%"class.absl::optional_internal::optional_data_base.1028" = type { %"class.absl::optional_internal::optional_data_dtor_base.1029" }
%"class.absl::optional_internal::optional_data_dtor_base.1029" = type { i8, %union.anon.1030 }
%union.anon.1030 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1031" }
%"class.mojo::PendingRemote.1031" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.1032", i32 }
%"class.mojo::ScopedHandleBase.1032" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.1033 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1577", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.1577" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1578" }
%"class.std::__1::vector.1578" = type { %"class.std::__1::__vector_base.1579" }
%"class.std::__1::__vector_base.1579" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1580" }
%"class.std::__1::__compressed_pair.1580" = type { %"struct.std::__1::__compressed_pair_elem.1581" }
%"struct.std::__1::__compressed_pair_elem.1581" = type { i32* }
%"class.blink::Member.1093" = type { %"class.blink::MemberBase.1094" }
%"class.blink::MemberBase.1094" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1035", %class.scoped_refptr.1050, %class.scoped_refptr.1051, %"struct.blink::CacheControlHeader", %"class.absl::optional.849", %"class.absl::optional.1052", %"class.absl::optional.1052", %"class.absl::optional.1052", i64, %"class.blink::KURL", %"class.WTF::Vector.1057", %"class.WTF::String", %"class.WTF::Vector.121", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1021", %"class.WTF::Vector.121", %"class.blink::KURL", %"class.absl::optional.1062" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1035" = type { %"class.absl::optional_internal::optional_data.1036" }
%"class.absl::optional_internal::optional_data.1036" = type { %"class.absl::optional_internal::optional_data_base.1037" }
%"class.absl::optional_internal::optional_data_base.1037" = type { %"class.absl::optional_internal::optional_data_dtor_base.1038" }
%"class.absl::optional_internal::optional_data_dtor_base.1038" = type { i8, %union.anon.1039 }
%union.anon.1039 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.121", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1040", %"class.WTF::Vector.1045" }
%"class.WTF::Vector.1040" = type { %"class.WTF::VectorBuffer.1041" }
%"class.WTF::VectorBuffer.1041" = type { %"class.WTF::VectorBufferBase.1042" }
%"class.WTF::VectorBufferBase.1042" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1045" = type { %"class.WTF::VectorBuffer.1046" }
%"class.WTF::VectorBuffer.1046" = type { %"class.WTF::VectorBufferBase.1047" }
%"class.WTF::VectorBufferBase.1047" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1050 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1051 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.1052" = type { %"class.absl::optional_internal::optional_data.1053" }
%"class.absl::optional_internal::optional_data.1053" = type { %"class.absl::optional_internal::optional_data_base.1054" }
%"class.absl::optional_internal::optional_data_base.1054" = type { %"class.absl::optional_internal::optional_data_dtor_base.1055" }
%"class.absl::optional_internal::optional_data_dtor_base.1055" = type { i8, %union.anon.1056 }
%union.anon.1056 = type { %"class.base::Time" }
%"class.WTF::Vector.1057" = type { %"class.WTF::VectorBuffer.1058" }
%"class.WTF::VectorBuffer.1058" = type { %"class.WTF::VectorBufferBase.1059" }
%"class.WTF::VectorBufferBase.1059" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1062" = type { %"class.absl::optional_internal::optional_data.1063" }
%"class.absl::optional_internal::optional_data.1063" = type { %"class.absl::optional_internal::optional_data_base.1064" }
%"class.absl::optional_internal::optional_data_base.1064" = type { %"class.absl::optional_internal::optional_data_dtor_base.1065" }
%"class.absl::optional_internal::optional_data_dtor_base.1065" = type { i8, %union.anon.1066 }
%union.anon.1066 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1095 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1096", i64, %"class.WTF::Vector.1098", %"class.WTF::Vector.1103" }
%"class.WTF::RefCounted.1096" = type { %"class.base::RefCounted.1097" }
%"class.base::RefCounted.1097" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1098" = type { %"class.WTF::VectorBuffer.1099" }
%"class.WTF::VectorBuffer.1099" = type { %"class.WTF::VectorBufferBase.1100" }
%"class.WTF::VectorBufferBase.1100" = type { i8*, i32, i32 }
%"class.WTF::Vector.1103" = type { %"class.WTF::VectorBuffer.1104" }
%"class.WTF::VectorBuffer.1104" = type { %"class.WTF::VectorBufferBase.1105" }
%"class.WTF::VectorBufferBase.1105" = type { %"class.std::__1::unique_ptr.1106"*, i32, i32 }
%"class.std::__1::unique_ptr.1106" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1109" }
%"class.std::__1::__tree.1109" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1110", %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.blink::HeapHashMap.1118" = type { %"class.WTF::HashMap.1121" }
%"class.WTF::HashMap.1121" = type { %"class.WTF::HashTable.1122" }
%"class.WTF::HashTable.1122" = type <{ %"struct.WTF::KeyValuePair.1124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1124" = type opaque
%"class.blink::HeapVector.1125" = type { %"class.WTF::Vector.1128" }
%"class.WTF::Vector.1128" = type { %"class.WTF::VectorBuffer.1129" }
%"class.WTF::VectorBuffer.1129" = type { %"class.WTF::VectorBufferBase.1130" }
%"class.WTF::VectorBufferBase.1130" = type { %"class.blink::Member.1131"*, i32, i32 }
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.358", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.678, %"class.base::WeakPtrFactory.1135" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.1135" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.692 }
%class.scoped_refptr.692 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.693", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.693" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.694" }
%"struct.std::__1::atomic.694" = type { %"struct.std::__1::__atomic_base.695" }
%"struct.std::__1::__atomic_base.695" = type { %"struct.std::__1::__atomic_base.696" }
%"struct.std::__1::__atomic_base.696" = type { %"struct.std::__1::__cxx_atomic_impl.697" }
%"struct.std::__1::__cxx_atomic_impl.697" = type { %"struct.std::__1::__cxx_atomic_base_impl.698" }
%"struct.std::__1::__cxx_atomic_base_impl.698" = type { i8 }
%"class.blink::WeakMember.358" = type { %"class.blink::MemberBase.351" }
%"class.blink::HeapHashMap.1136" = type { %"class.WTF::HashMap.1139" }
%"class.WTF::HashMap.1139" = type { %"class.WTF::HashTable.1140" }
%"class.WTF::HashTable.1140" = type <{ %"struct.WTF::KeyValuePair.1142"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1142" = type opaque
%"class.WTF::Vector.1143" = type { %"class.WTF::VectorBuffer.1144" }
%"class.WTF::VectorBuffer.1144" = type { %"class.WTF::VectorBufferBase.1145" }
%"class.WTF::VectorBufferBase.1145" = type { %class.scoped_refptr.1146*, i32, i32 }
%class.scoped_refptr.1146 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1149" = type { %"class.WTF::HashSet.1152" }
%"class.WTF::HashSet.1152" = type { %"class.WTF::HashTable.1153" }
%"class.WTF::HashTable.1153" = type <{ %"class.blink::Member.1093"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1155" = type { %"class.std::__1::__compressed_pair.1156" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"class.WTF::HashSet.1158"* }
%"class.WTF::HashSet.1158" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.935 }
%class.scoped_refptr.935 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1162" }
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1166" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.352" = type { %"class.WTF::HashSet.355" }
%"class.WTF::HashSet.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"class.blink::WeakMember.358"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.359 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.360", [4 x i8] }>
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.361" = type { %"class.blink::MemberBase.362" }
%"class.blink::MemberBase.362" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.363" = type { %"class.blink::MemberBase.364" }
%"class.blink::MemberBase.364" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type { i32 (...)**, %"class.blink::Member.367", %"class.v8::Isolate"*, %"class.blink::Member.369", %class.scoped_refptr.373, %"class.WTF::String", i8, i8, %class.scoped_refptr.435 }
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::WorkerOrWorkletGlobalScope"* }
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.373, %"class.blink::Member.388", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.392", %"class.blink::HeapHashMap.401", %"class.std::__1::unique_ptr.411", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.423", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.426" }
%"class.blink::HeapHashMap.392" = type { %"class.WTF::HashMap.395" }
%"class.WTF::HashMap.395" = type { %"class.WTF::HashTable.396" }
%"class.WTF::HashTable.396" = type <{ %"struct.WTF::KeyValuePair.398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.398" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.401" = type { %"class.WTF::HashMap.404" }
%"class.WTF::HashMap.404" = type { %"class.WTF::HashTable.405" }
%"class.WTF::HashTable.405" = type <{ %"struct.WTF::KeyValuePair.407"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.407" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.408" }
%"class.blink::TraceWrapperV8Reference.408" = type { %"class.v8::TracedReference.409" }
%"class.v8::TracedReference.409" = type { %"class.v8::BasicTracedReference.410" }
%"class.v8::BasicTracedReference.410" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.414" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.423" = type { %"class.v8::Persistent.424" }
%"class.v8::Persistent.424" = type { %"class.v8::PersistentBase.425" }
%"class.v8::PersistentBase.425" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.426" = type { %"class.WTF::HashMap.429" }
%"class.WTF::HashMap.429" = type { %"class.WTF::HashTable.430" }
%"class.WTF::HashTable.430" = type <{ %"struct.WTF::KeyValuePair.432"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.432" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.433" }
%"class.blink::Persistent.433" = type { %"class.blink::PersistentBase.434" }
%"class.blink::PersistentBase.434" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.373 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.435 = type { %"class.blink::RejectedPromises"* }
%"class.blink::RejectedPromises" = type { %"class.WTF::RefCounted.436", %"class.WTF::Vector.438", %"class.WTF::Vector.438" }
%"class.WTF::RefCounted.436" = type { %"class.base::RefCounted.437" }
%"class.base::RefCounted.437" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.438" = type { %"class.WTF::VectorBuffer.439" }
%"class.WTF::VectorBuffer.439" = type { %"class.WTF::VectorBufferBase.440" }
%"class.WTF::VectorBufferBase.440" = type { %"class.std::__1::unique_ptr.441"*, i32, i32 }
%"class.std::__1::unique_ptr.441" = type opaque
%"class.WTF::Vector.98" = type { %"class.WTF::VectorBuffer.99" }
%"class.WTF::VectorBuffer.99" = type { %"class.WTF::VectorBufferBase.100" }
%"class.WTF::VectorBufferBase.100" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.101" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.104", %"class.WTF::HashMap.111", %"class.WTF::HashMap.116", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.121", i32, %"class.mojo::StructPtr.126", %"class.WTF::Vector.121" }
%"class.mojo::StructPtr.104" = type { %"class.std::__1::unique_ptr.105" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.111" = type { %"class.WTF::HashTable.112" }
%"class.WTF::HashTable.112" = type <{ %"struct.WTF::KeyValuePair.115"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.115" = type opaque
%"class.WTF::HashMap.116" = type { %"class.WTF::HashTable.117" }
%"class.WTF::HashTable.117" = type <{ %"struct.WTF::KeyValuePair.120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.120" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.126" = type { %"class.std::__1::unique_ptr.127" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.121", i8, i8, [6 x i8] }>
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.444", i32, [4 x i8] }>
%"class.std::__1::bitset.444" = type { %"class.std::__1::__bitset.445" }
%"class.std::__1::__bitset.445" = type { [25 x i64] }
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.450" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.blink::KURL"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr.24 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::CrossThreadPersistent.456" = type { %"class.blink::PersistentBase.457" }
%"class.blink::PersistentBase.457" = type { %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.460", %"class.WTF::Mutex" }
%"class.WTF::HashMap.460" = type { %"class.WTF::HashTable.461" }
%"class.WTF::HashTable.461" = type <{ %"struct.WTF::KeyValuePair.464"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.464" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.util::TokenType.737" = type { %"class.base::StrongAlias.738" }
%"class.base::StrongAlias.738" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.blink::HeapHashMap.745" = type { %"class.WTF::HashMap.748" }
%"class.WTF::HashMap.748" = type { %"class.WTF::HashTable.749" }
%"class.WTF::HashTable.749" = type <{ %"struct.WTF::KeyValuePair.751"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.751" = type { %"class.WTF::String", %"class.blink::Member.763" }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::AnimatorDefinition"* }
%"class.blink::AnimatorDefinition" = type { %"class.blink::NameClient", %"class.blink::Member.767", %"class.blink::Member.771", %"class.blink::Member.773" }
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::V8AnimatorConstructor"* }
%"class.blink::V8AnimatorConstructor" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.369", %"class.blink::Member.369" }
%"class.blink::Member.771" = type { %"class.blink::MemberBase.772" }
%"class.blink::MemberBase.772" = type { %"class.blink::V8AnimateCallback"* }
%"class.blink::V8AnimateCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::Member.773" = type { %"class.blink::MemberBase.774" }
%"class.blink::MemberBase.774" = type { %"class.blink::V8StateCallback"* }
%"class.blink::V8StateCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::HeapHashMap.752" = type { %"class.WTF::HashMap.755" }
%"class.WTF::HashMap.755" = type { %"class.WTF::HashTable.756" }
%"class.WTF::HashTable.756" = type <{ %"struct.WTF::KeyValuePair.758"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.758" = type { i32, %"class.blink::Member.759" }
%"class.blink::Member.759" = type { %"class.blink::MemberBase.760" }
%"class.blink::MemberBase.760" = type { %"class.blink::Animator"* }
%"class.blink::Animator" = type { %"class.blink::NameClient", %"class.blink::Member.763", %"class.blink::TraceWrapperV8Reference.775", %"class.WTF::String", %"class.blink::WorkletAnimationOptions", %"class.blink::Member.839" }
%"class.blink::TraceWrapperV8Reference.775" = type { %"class.v8::TracedReference.776" }
%"class.v8::TracedReference.776" = type { %"class.v8::BasicTracedReference.777" }
%"class.v8::BasicTracedReference.777" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::WorkletAnimationOptions" = type { %"class.cc::AnimationOptions", %class.scoped_refptr.778 }
%"class.cc::AnimationOptions" = type { i32 (...)** }
%class.scoped_refptr.778 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.780", i64, %"class.WTF::Vector.784", %"class.WTF::Vector.789", %"class.WTF::Vector.795", %"class.WTF::Vector.813", %class.scoped_refptr.23, %"class.WTF::HashMap.819", %"class.WTF::Vector.824", %"class.WTF::Vector.784", %"class.WTF::Vector.829", %"class.WTF::HashMap.834", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.779" }
%"class.base::RefCountedThreadSafe.779" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { i8* }
%"class.WTF::Vector.789" = type { %"class.WTF::VectorBuffer.790" }
%"class.WTF::VectorBuffer.790" = type { %"class.WTF::VectorBufferBase.791", [8 x i8] }
%"class.WTF::VectorBufferBase.791" = type { %class.scoped_refptr.792*, i32, i32 }
%class.scoped_refptr.792 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.795" = type { %"class.WTF::VectorBuffer.796" }
%"class.WTF::VectorBuffer.796" = type { %"class.WTF::VectorBufferBase.797" }
%"class.WTF::VectorBufferBase.797" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.799", %"class.std::__1::unique_ptr.805" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.798 }
%class.scoped_refptr.798 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.805" = type { %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.813" = type { %"class.WTF::VectorBuffer.814" }
%"class.WTF::VectorBuffer.814" = type { %"class.WTF::VectorBufferBase.815" }
%"class.WTF::VectorBufferBase.815" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.816", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.816" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.819" = type { %"class.WTF::HashTable.820" }
%"class.WTF::HashTable.820" = type <{ %"struct.WTF::KeyValuePair.823"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.823" = type opaque
%"class.WTF::Vector.824" = type { %"class.WTF::VectorBuffer.825" }
%"class.WTF::VectorBuffer.825" = type { %"class.WTF::VectorBufferBase.826" }
%"class.WTF::VectorBufferBase.826" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.784" = type { %"class.WTF::VectorBuffer.785" }
%"class.WTF::VectorBuffer.785" = type { %"class.WTF::VectorBufferBase.786", [16 x i8] }
%"class.WTF::VectorBufferBase.786" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.829" = type { %"class.WTF::VectorBuffer.830" }
%"class.WTF::VectorBuffer.830" = type { %"class.WTF::VectorBufferBase.831" }
%"class.WTF::VectorBufferBase.831" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.834" = type { %"class.WTF::HashTable.835" }
%"class.WTF::HashTable.835" = type <{ %"struct.WTF::KeyValuePair.838"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.838" = type { i8**, %"class.std::__1::unique_ptr.1596" }
%"class.std::__1::unique_ptr.1596" = type { %"class.std::__1::__compressed_pair.1597" }
%"class.std::__1::__compressed_pair.1597" = type { %"struct.std::__1::__compressed_pair_elem.1598" }
%"struct.std::__1::__compressed_pair_elem.1598" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::WorkletGroupEffect"* }
%"class.blink::WorkletGroupEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector.841" }
%"class.blink::HeapVector.841" = type { %"class.WTF::Vector.844" }
%"class.WTF::Vector.844" = type { %"class.WTF::VectorBuffer.845" }
%"class.WTF::VectorBuffer.845" = type { %"class.WTF::VectorBufferBase.846" }
%"class.WTF::VectorBufferBase.846" = type { %"class.blink::Member.847"*, i32, i32 }
%"class.blink::Member.847" = type { %"class.blink::MemberBase.848" }
%"class.blink::MemberBase.848" = type { %"class.blink::WorkletAnimationEffect"* }
%"class.blink::WorkletAnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.absl::optional.849", %"struct.blink::Timing", %"struct.blink::Timing::CalculatedTiming", %"class.absl::optional.849" }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.854", i32, [4 x i8], %class.scoped_refptr.859, i16, [6 x i8] }>
%"class.blink::AnimationTimeDelta" = type { double }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, %union.anon.858 }
%union.anon.858 = type { %"class.blink::AnimationTimeDelta" }
%class.scoped_refptr.859 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.860", i32 }
%"class.WTF::ThreadSafeRefCounted.860" = type { %"class.base::RefCountedThreadSafe.861" }
%"class.base::RefCountedThreadSafe.861" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.862", %"class.absl::optional.862", i8, i8, i8, %"class.absl::optional.854", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.862" = type { %"class.absl::optional_internal::optional_data.863" }
%"class.absl::optional_internal::optional_data.863" = type { %"class.absl::optional_internal::optional_data_base.864" }
%"class.absl::optional_internal::optional_data_base.864" = type { %"class.absl::optional_internal::optional_data_dtor_base.865" }
%"class.absl::optional_internal::optional_data_dtor_base.865" = type { i8, %union.anon.866 }
%union.anon.866 = type { double }
%"class.util::TokenType.868" = type { %"class.base::StrongAlias.869" }
%"class.base::StrongAlias.869" = type { %"class.base::UnguessableToken" }
%"struct.blink::GlobalScopeCreationParams" = type <{ %"class.blink::KURL", i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", %"struct.blink::UserAgentMetadata", %class.scoped_refptr.359, %"class.WTF::Vector.98", i32, [4 x i8], %"class.std::__1::unique_ptr.1184", %class.scoped_refptr.24, i8, [3 x i8], i32, %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.344", %"class.absl::optional.1190", %"class.base::UnguessableToken", %"class.std::__1::unique_ptr.1195", i32, [4 x i8], %"class.blink::CrossThreadPersistent.456", %"class.mojo::PendingRemote.1213", %"struct.blink::BeginFrameProviderParams", %"class.std::__1::unique_ptr.25", %"class.base::UnguessableToken", i64, %"class.absl::optional.1214", i8, i8, [6 x i8] }>
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.1177", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.1177" = type { %"class.std::__1::__vector_base.1178" }
%"class.std::__1::__vector_base.1178" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.1179" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.1184" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"class.WTF::Vector.121"* }
%"class.absl::optional.1190" = type { %"class.absl::optional_internal::optional_data.1191" }
%"class.absl::optional_internal::optional_data.1191" = type { %"class.absl::optional_internal::optional_data_base.1192" }
%"class.absl::optional_internal::optional_data_base.1192" = type { %"class.absl::optional_internal::optional_data_dtor_base.1193" }
%"class.absl::optional_internal::optional_data_dtor_base.1193" = type { i8, %union.anon.1194 }
%union.anon.1194 = type { i32 }
%"class.std::__1::unique_ptr.1195" = type { %"class.std::__1::__compressed_pair.1196" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.1197" }
%"struct.std::__1::__compressed_pair_elem.1197" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1198", %"class.WTF::HashMap.1198", %"class.WTF::HashMap.1198", %"class.WTF::HashMap.1198", %"class.WTF::HashMap.1198", %"class.WTF::HashMap.1198", %"class.WTF::HashMap.1198", %"class.std::__1::unique_ptr.1203" }
%"class.WTF::HashMap.1198" = type { %"class.WTF::HashTable.1199" }
%"class.WTF::HashTable.1199" = type <{ %"struct.WTF::KeyValuePair.1202"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1202" = type { i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1203" = type { %"class.std::__1::__compressed_pair.1204" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.1205" }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"class.WTF::Vector.1206"* }
%"class.WTF::Vector.1206" = type { %"class.WTF::VectorBuffer.1602" }
%"class.WTF::VectorBuffer.1602" = type { %"class.WTF::VectorBufferBase.1603" }
%"class.WTF::VectorBufferBase.1603" = type { %"struct.std::__1::pair.1604"*, i32, i32 }
%"struct.std::__1::pair.1604" = type { i32, %"class.WTF::String" }
%"class.mojo::PendingRemote.1213" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.blink::BeginFrameProviderParams" = type { %"class.viz::FrameSinkId", %"class.viz::FrameSinkId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.absl::optional.1214" = type { %"class.absl::optional_internal::optional_data.1215" }
%"class.absl::optional_internal::optional_data.1215" = type { %"class.absl::optional_internal::optional_data_base.1216" }
%"class.absl::optional_internal::optional_data_base.1216" = type { %"class.absl::optional_internal::optional_data_dtor_base.1217" }
%"class.absl::optional_internal::optional_data_dtor_base.1217" = type { i8, [7 x i8], %union.anon.1218 }
%union.anon.1218 = type { %"class.blink::MultiToken" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::WorkerThread" = type { %"class.base::TaskObserver", %"class.base::TimeTicks", i32, i8, i32, i32, %"class.base::TimeDelta", %class.scoped_refptr.467, %"class.base::UnguessableToken", %"class.blink::InspectorIssueStorage", i32, %"class.blink::WorkerReportingProxy"*, %class.scoped_refptr.678, %"class.std::__1::unique_ptr.684", %"class.WTF::HashMap.715", %"class.WTF::Mutex", i32, %"class.blink::Platform::NestedMessageLoopRunner"*, %"class.blink::CrossThreadPersistent.720", %"class.blink::CrossThreadPersistent.722", %"class.blink::CrossThreadPersistent.724", %class.scoped_refptr.726, %"class.blink::TaskHandle", %"class.WTF::HashSet.728", %"class.WTF::HashSet.732" }
%"class.base::TaskObserver" = type { i32 (...)** }
%class.scoped_refptr.467 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.468" }
%"class.WTF::Deque.468" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.471" }
%"class.WTF::VectorBuffer.471" = type { %"class.WTF::VectorBufferBase.472" }
%"class.WTF::VectorBufferBase.472" = type { %"class.std::__1::unique_ptr.473"*, i32, i32 }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.476" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.479", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.522", %"class.crdtp::detail::PtrMaybe.542", %"class.crdtp::detail::PtrMaybe.552", %"class.crdtp::detail::PtrMaybe.562", %"class.crdtp::detail::PtrMaybe.583", %"class.crdtp::detail::PtrMaybe.593", %"class.crdtp::detail::PtrMaybe.603", %"class.crdtp::detail::PtrMaybe.613", %"class.crdtp::detail::PtrMaybe.642", %"class.crdtp::detail::PtrMaybe.652", %"class.crdtp::detail::PtrMaybe.662" }
%"class.crdtp::ProtocolObject.479" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.485", %"class.crdtp::detail::PtrMaybe.488", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.498", %"class.std::__1::unique_ptr.498", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.509" }
%"class.crdtp::ProtocolObject.485" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.488" = type { %"class.std::__1::unique_ptr.489" }
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.492", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.492" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.509" = type { %"class.std::__1::unique_ptr.510" }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.513", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.513" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.522" = type { %"class.std::__1::unique_ptr.523" }
%"class.std::__1::unique_ptr.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.526", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.509", %"class.crdtp::detail::PtrMaybe.529" }
%"class.crdtp::ProtocolObject.526" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.529" = type { %"class.std::__1::unique_ptr.530" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.533", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.533" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.542" = type { %"class.std::__1::unique_ptr.543" }
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.546", %"class.std::__1::unique_ptr.510", %"class.crdtp::detail::PtrMaybe.529", %"class.crdtp::detail::PtrMaybe.529", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.546" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.552" = type { %"class.std::__1::unique_ptr.553" }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.556", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.530" }
%"class.crdtp::ProtocolObject.556" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.562" = type { %"class.std::__1::unique_ptr.563" }
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.566", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.529", %"class.crdtp::detail::PtrMaybe.569", %"class.crdtp::detail::ValueMaybe.579" }
%"class.crdtp::ProtocolObject.566" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.569" = type { %"class.std::__1::unique_ptr.570" }
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.573", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.573" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.579" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.583" = type { %"class.std::__1::unique_ptr.584" }
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.587", %"class.std::__1::unique_ptr.570", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.587" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.593" = type { %"class.std::__1::unique_ptr.594" }
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.597", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.579", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.597" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.603" = type { %"class.std::__1::unique_ptr.604" }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.607", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.607" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.613" = type { %"class.std::__1::unique_ptr.614" }
%"class.std::__1::unique_ptr.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.617", %"class.std::__1::unique_ptr.620", i8, %"class.std::__1::unique_ptr.510", %"class.crdtp::detail::PtrMaybe.569", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.629" }
%"class.crdtp::ProtocolObject.617" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.623", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.623" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.629" = type { %"class.std::__1::unique_ptr.630" }
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.633", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.633" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.642" = type { %"class.std::__1::unique_ptr.643" }
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.646", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.529", %"class.crdtp::detail::PtrMaybe.509", %"class.crdtp::detail::ValueMaybe.579", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.646" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.652" = type { %"class.std::__1::unique_ptr.653" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.656", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.656" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.662" = type { %"class.std::__1::unique_ptr.663" }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.666", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.569" }
%"class.crdtp::ProtocolObject.666" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.blink::scheduler::WorkerScheduler"* }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.699, %class.scoped_refptr.699, %class.scoped_refptr.699, %"class.std::__1::map.700", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.711" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.687", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.687" = type { %"class.WTF::HashTable.688" }
%"class.WTF::HashTable.688" = type <{ %"struct.WTF::KeyValuePair.691"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.691" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.699 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type opaque
%"class.std::__1::map.700" = type { %"class.std::__1::__tree.701" }
%"class.std::__1::__tree.701" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.702", %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.blink::scheduler::WorkerThreadScheduler" = type opaque
%"class.base::WeakPtrFactory.711" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::HashMap.715" = type { %"class.WTF::HashTable.716" }
%"class.WTF::HashTable.716" = type <{ %"struct.WTF::KeyValuePair.719"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.719" = type opaque
%"class.blink::Platform::NestedMessageLoopRunner" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent.720" = type { %"class.blink::PersistentBase.721" }
%"class.blink::PersistentBase.721" = type { %"class.blink::ConsoleMessageStorage"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::CrossThreadPersistent.722" = type { %"class.blink::PersistentBase.723" }
%"class.blink::PersistentBase.723" = type { %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistent.724" = type { %"class.blink::PersistentBase.725" }
%"class.blink::PersistentBase.725" = type { %"class.blink::WorkerInspectorController"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerInspectorController" = type opaque
%class.scoped_refptr.726 = type { %"class.blink::WorkerThread::RefCountedWaitableEvent"* }
%"class.blink::WorkerThread::RefCountedWaitableEvent" = type opaque
%"class.WTF::HashSet.728" = type { %"class.WTF::HashTable.729" }
%"class.WTF::HashTable.729" = type <{ %"class.blink::WorkerThread"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.732" = type { %"class.WTF::HashTable.733" }
%"class.WTF::HashTable.733" = type <{ %"class.std::__1::unique_ptr.736"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.736" = type opaque
%"class.blink::WorkletGlobalScope" = type <{ %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::KURL", %"class.WTF::String", %class.scoped_refptr.24, i8, [7 x i8], %"class.blink::CrossThreadPersistent.456", i32, i32, %"class.blink::Member.465", %"class.blink::WorkerThread"*, %"class.util::TokenType.737", %"class.std::__1::unique_ptr.739", i8, i8, [6 x i8] }>
%"class.blink::AnimationWorkletProxyClient" = type <{ %"class.blink::Supplement", %"class.blink::AnimationWorkletMutator", i32, [4 x i8], %"class.WTF::Vector.1226", %"class.WTF::Vector.1232", %"class.WTF::HashMap.1238", i32, i32, i32, [4 x i8] }>
%"class.blink::AnimationWorkletMutator" = type { %"class.blink::GarbageCollectedMixin" }
%"class.WTF::Vector.1226" = type { %"class.WTF::VectorBuffer.1227" }
%"class.WTF::VectorBuffer.1227" = type { %"class.WTF::VectorBufferBase.1228" }
%"class.WTF::VectorBufferBase.1228" = type { %"struct.blink::AnimationWorkletProxyClient::MutatorItem"*, i32, i32 }
%"struct.blink::AnimationWorkletProxyClient::MutatorItem" = type { %"class.base::WeakPtr.1229", %class.scoped_refptr.678 }
%"class.base::WeakPtr.1229" = type { %"class.base::internal::WeakPtrBase" }
%"class.WTF::Vector.1232" = type { %"class.WTF::VectorBuffer.1233" }
%"class.WTF::VectorBuffer.1233" = type { %"class.WTF::VectorBufferBase.1234" }
%"class.WTF::VectorBufferBase.1234" = type { %"class.blink::CrossThreadPersistent.1235"*, i32, i32 }
%"class.blink::CrossThreadPersistent.1235" = type opaque
%"class.WTF::HashMap.1238" = type { %"class.WTF::HashTable.1239" }
%"class.WTF::HashTable.1239" = type <{ %"struct.WTF::KeyValuePair.1242"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1242" = type opaque
%"class.WTF::Vector.1243" = type { %"class.WTF::VectorBuffer.1244" }
%"class.WTF::VectorBuffer.1244" = type { %"class.WTF::VectorBufferBase.1245" }
%"class.WTF::VectorBufferBase.1245" = type { %"class.absl::optional.849"*, i32, i32 }
%"class.WTF::Vector.1248" = type { %"class.WTF::VectorBuffer.1249" }
%"class.WTF::VectorBuffer.1249" = type { %"class.WTF::VectorBufferBase.1250" }
%"class.WTF::VectorBufferBase.1250" = type { %"struct.blink::Timing"*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.blink::SerializedScriptValue::DeserializeOptions" = type { %"class.blink::HeapVector.1335"*, %"class.WTF::Vector.1382"* }
%"class.blink::HeapVector.1335" = type { %"class.WTF::Vector.1338" }
%"class.WTF::Vector.1338" = type { %"class.WTF::VectorBuffer.1339" }
%"class.WTF::VectorBuffer.1339" = type { %"class.WTF::VectorBufferBase.1340" }
%"class.WTF::VectorBufferBase.1340" = type { %"class.blink::Member.1341"*, i32, i32 }
%"class.blink::Member.1341" = type opaque
%"class.WTF::Vector.1382" = type opaque
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local.399" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local.399" = type { %"class.v8::Context"* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.775", %class.scoped_refptr.1088 }
%"class.v8::Maybe" = type { i8, %"class.blink::ScriptValue" }
%"class.v8::Local.1307" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"struct.cc::AnimationWorkletInput" = type { %"class.std::__1::vector.1253", %"class.std::__1::vector.1272", %"class.std::__1::vector.1279" }
%"class.std::__1::vector.1253" = type { %"class.std::__1::__vector_base.1254" }
%"class.std::__1::__vector_base.1254" = type { %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"class.std::__1::__compressed_pair.1267" }
%"struct.cc::AnimationWorkletInput::AddAndUpdateState" = type { %"struct.cc::WorkletAnimationId", %"class.std::__1::basic_string", double, %"class.std::__1::unique_ptr.1255", %"class.std::__1::unique_ptr.1261" }
%"struct.cc::WorkletAnimationId" = type { i32, i32 }
%"class.std::__1::unique_ptr.1255" = type { %"class.std::__1::__compressed_pair.1256" }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.1257" }
%"struct.std::__1::__compressed_pair_elem.1257" = type { %"class.cc::AnimationOptions"* }
%"class.std::__1::unique_ptr.1261" = type { %"class.std::__1::__compressed_pair.1262" }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.1263" }
%"struct.std::__1::__compressed_pair_elem.1263" = type { %"class.cc::AnimationEffectTimings"* }
%"class.cc::AnimationEffectTimings" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1267" = type { %"struct.std::__1::__compressed_pair_elem.1268" }
%"struct.std::__1::__compressed_pair_elem.1268" = type { %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* }
%"class.std::__1::vector.1272" = type { %"class.std::__1::__vector_base.1273" }
%"class.std::__1::__vector_base.1273" = type { %"struct.cc::AnimationWorkletInput::UpdateState"*, %"struct.cc::AnimationWorkletInput::UpdateState"*, %"class.std::__1::__compressed_pair.1274" }
%"struct.cc::AnimationWorkletInput::UpdateState" = type { %"struct.cc::WorkletAnimationId", double }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"struct.cc::AnimationWorkletInput::UpdateState"* }
%"class.std::__1::vector.1279" = type { %"class.std::__1::__vector_base.1280" }
%"class.std::__1::__vector_base.1280" = type { %"struct.cc::WorkletAnimationId"*, %"struct.cc::WorkletAnimationId"*, %"class.std::__1::__compressed_pair.1281" }
%"class.std::__1::__compressed_pair.1281" = type { %"struct.std::__1::__compressed_pair_elem.1282" }
%"struct.std::__1::__compressed_pair_elem.1282" = type { %"struct.cc::WorkletAnimationId"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::WorkletAnimationEffectTimings" = type { %"class.cc::AnimationEffectTimings", %class.scoped_refptr.1287 }
%class.scoped_refptr.1287 = type { %"class.base::RefCountedData.1288"* }
%"class.base::RefCountedData.1288" = type { %"class.base::RefCountedThreadSafe.1289", %"class.WTF::Vector.1248" }
%"class.base::RefCountedThreadSafe.1289" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.cc::AnimationWorkletOutput" = type { %"class.std::__1::vector.1290" }
%"class.std::__1::vector.1290" = type { %"class.std::__1::__vector_base.1291" }
%"class.std::__1::__vector_base.1291" = type { %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"class.std::__1::__compressed_pair.1299" }
%"struct.cc::AnimationWorkletOutput::AnimationState" = type { %"struct.cc::WorkletAnimationId", %"class.std::__1::vector.1292" }
%"class.std::__1::vector.1292" = type { %"class.std::__1::__vector_base.1293" }
%"class.std::__1::__vector_base.1293" = type { %"class.absl::optional.849"*, %"class.absl::optional.849"*, %"class.std::__1::__compressed_pair.1294" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"class.absl::optional.849"* }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { %"struct.cc::AnimationWorkletOutput::AnimationState"* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.775" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1305", i8* }
%"class.WTF::StringAppend.1305" = type { i8*, %"class.WTF::String" }
%"class.blink::CallbackMethodRetriever" = type { %"class.blink::CallbackFunctionBase"*, %"class.v8::Isolate"*, %"class.v8::Local.399", %"class.v8::Local.400" }
%"class.v8::Local.400" = type { %"class.v8::Object"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Function" = type { i8 }
%"class.WTF::StringTypeAdapter.1667" = type <{ i8*, i32, [4 x i8] }>
%"struct.blink::SerializedScriptValue::SerializeOptions" = type { %"class.blink::Transferables"*, %"class.WTF::Vector.1382"*, i32, i32 }
%"class.blink::Transferables" = type { %"class.blink::HeapVector.1310", %"class.blink::HeapVector.1319", %"class.blink::HeapVector.1327", %"class.blink::HeapVector.1335", %"class.blink::HeapVector.1343", %"class.blink::HeapVector.1351", %"class.blink::HeapVector.1359", %"class.blink::HeapVector.1367", %"class.blink::HeapHashMap.1375" }
%"class.blink::HeapVector.1310" = type { %"class.WTF::Vector.1313" }
%"class.WTF::Vector.1313" = type { %"class.WTF::VectorBuffer.1314" }
%"class.WTF::VectorBuffer.1314" = type { %"class.WTF::VectorBufferBase.1315" }
%"class.WTF::VectorBufferBase.1315" = type { %"class.blink::Member.1316"*, i32, i32 }
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::HeapVector.1319" = type { %"class.WTF::Vector.1322" }
%"class.WTF::Vector.1322" = type { %"class.WTF::VectorBuffer.1323" }
%"class.WTF::VectorBuffer.1323" = type { %"class.WTF::VectorBufferBase.1324" }
%"class.WTF::VectorBufferBase.1324" = type { %"class.blink::Member.1325"*, i32, i32 }
%"class.blink::Member.1325" = type opaque
%"class.blink::HeapVector.1327" = type { %"class.WTF::Vector.1330" }
%"class.WTF::Vector.1330" = type { %"class.WTF::VectorBuffer.1331" }
%"class.WTF::VectorBuffer.1331" = type { %"class.WTF::VectorBufferBase.1332" }
%"class.WTF::VectorBufferBase.1332" = type { %"class.blink::Member.1333"*, i32, i32 }
%"class.blink::Member.1333" = type opaque
%"class.blink::HeapVector.1343" = type { %"class.WTF::Vector.1346" }
%"class.WTF::Vector.1346" = type { %"class.WTF::VectorBuffer.1347" }
%"class.WTF::VectorBuffer.1347" = type { %"class.WTF::VectorBufferBase.1348" }
%"class.WTF::VectorBufferBase.1348" = type { %"class.blink::Member.1349"*, i32, i32 }
%"class.blink::Member.1349" = type opaque
%"class.blink::HeapVector.1351" = type { %"class.WTF::Vector.1354" }
%"class.WTF::Vector.1354" = type { %"class.WTF::VectorBuffer.1355" }
%"class.WTF::VectorBuffer.1355" = type { %"class.WTF::VectorBufferBase.1356" }
%"class.WTF::VectorBufferBase.1356" = type { %"class.blink::Member.1357"*, i32, i32 }
%"class.blink::Member.1357" = type opaque
%"class.blink::HeapVector.1359" = type { %"class.WTF::Vector.1362" }
%"class.WTF::Vector.1362" = type { %"class.WTF::VectorBuffer.1363" }
%"class.WTF::VectorBuffer.1363" = type { %"class.WTF::VectorBufferBase.1364" }
%"class.WTF::VectorBufferBase.1364" = type { %"class.blink::Member.1365"*, i32, i32 }
%"class.blink::Member.1365" = type opaque
%"class.blink::HeapVector.1367" = type { %"class.WTF::Vector.1370" }
%"class.WTF::Vector.1370" = type { %"class.WTF::VectorBuffer.1371" }
%"class.WTF::VectorBuffer.1371" = type { %"class.WTF::VectorBufferBase.1372" }
%"class.WTF::VectorBufferBase.1372" = type { %"class.blink::Member.1373"*, i32, i32 }
%"class.blink::Member.1373" = type opaque
%"class.blink::HeapHashMap.1375" = type { %"class.WTF::HashMap.1378" }
%"class.WTF::HashMap.1378" = type { %"class.WTF::HashTable.1379" }
%"class.WTF::HashTable.1379" = type <{ %"struct.WTF::KeyValuePair.1381"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1381" = type opaque
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.1383", %"class.blink::Member.1385", %"class.blink::Member.1383", %"class.blink::Member.1383", %"class.blink::Member.1387" }
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1391", %"class.blink::Member.1393", %"class.blink::Member.1385", %"class.blink::Member.1395", %"class.blink::Member.1395", %"class.blink::Member.1419", %"class.blink::Member.1421", %"class.blink::Member.1423", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1428", %"class.blink::HeapVector.1430" }
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1394" }
%"class.blink::MemberBase.1394" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1399" }
%"class.blink::HeapHashMap.1399" = type { %"class.WTF::HashMap.1402" }
%"class.WTF::HashMap.1402" = type { %"class.WTF::HashTable.1403" }
%"class.WTF::HashTable.1403" = type <{ %"struct.WTF::KeyValuePair.1405"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1405" = type { %"class.WTF::AtomicString", %"class.blink::Member.1406" }
%"class.blink::Member.1406" = type { %"class.blink::MemberBase.1407" }
%"class.blink::MemberBase.1407" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1410", i32, %"class.blink::HeapVector.1412" }
%"class.blink::Member.1410" = type { %"class.blink::MemberBase.1411" }
%"class.blink::MemberBase.1411" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.1412" = type { %"class.WTF::Vector.1415" }
%"class.WTF::Vector.1415" = type { %"class.WTF::VectorBuffer.1416" }
%"class.WTF::VectorBuffer.1416" = type { %"class.WTF::VectorBufferBase.1417" }
%"class.WTF::VectorBufferBase.1417" = type { %"class.blink::Member.1410"*, i32, i32 }
%"class.blink::Member.1419" = type { %"class.blink::MemberBase.1420" }
%"class.blink::MemberBase.1420" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1425" }
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::HeapHashMap.1427"* }
%"class.blink::HeapHashMap.1427" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1430" = type { %"class.WTF::Vector.1433" }
%"class.WTF::Vector.1433" = type { %"class.WTF::VectorBuffer.1434" }
%"class.WTF::VectorBuffer.1434" = type { %"class.WTF::VectorBufferBase.1435" }
%"class.WTF::VectorBufferBase.1435" = type { %"class.blink::Member.1436"*, i32, i32 }
%"class.blink::Member.1436" = type opaque
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::Node"* }
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1438", i8, [7 x i8] }>
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::EventListener"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.1441" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1440", %"class.WTF::Vector.121", i8 }>
%"class.blink::WeakMember.1440" = type { %"class.blink::MemberBase.60" }
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1440" }
%"class.blink::Supplementable.1441" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1442" }
%"class.blink::HeapHashMap.1442" = type { %"class.WTF::HashMap.1445" }
%"class.WTF::HashMap.1445" = type { %"class.WTF::HashTable.1446" }
%"class.WTF::HashTable.1446" = type <{ %"struct.WTF::KeyValuePair.1448"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1448" = type { i8*, %"class.blink::Member.1591" }
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::Supplement.1593"* }
%"class.blink::Supplement.1593" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1594" }
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1451", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1463", %"class.WTF::Vector.1464" }
%"class.std::__1::unique_ptr.1451" = type { %"class.std::__1::__compressed_pair.1452" }
%"class.std::__1::__compressed_pair.1452" = type { %"struct.std::__1::__compressed_pair_elem.1453" }
%"struct.std::__1::__compressed_pair_elem.1453" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1454", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1454" = type { %"class.std::__1::__compressed_pair.1455" }
%"class.std::__1::__compressed_pair.1455" = type { %"struct.std::__1::__compressed_pair_elem.1456" }
%"struct.std::__1::__compressed_pair_elem.1456" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.1463" = type { %"class.blink::MemberBase.466" }
%"class.WTF::Vector.1464" = type { %"class.WTF::VectorBuffer.1465" }
%"class.WTF::VectorBuffer.1465" = type { %"class.WTF::VectorBufferBase.1466" }
%"class.WTF::VectorBufferBase.1466" = type { i32*, i32, i32 }
%"class.mojo::StructPtr.1469" = type { %"class.std::__1::unique_ptr.1470" }
%"class.std::__1::unique_ptr.1470" = type { %"class.std::__1::__compressed_pair.1471" }
%"class.std::__1::__compressed_pair.1471" = type { %"struct.std::__1::__compressed_pair_elem.1472" }
%"struct.std::__1::__compressed_pair_elem.1472" = type { %"class.blink::mojom::blink::InspectorIssueInfo"* }
%"class.blink::mojom::blink::InspectorIssueInfo" = type { i32, %"class.mojo::StructPtr.1473" }
%"class.mojo::StructPtr.1473" = type { %"class.std::__1::unique_ptr.1474" }
%"class.std::__1::unique_ptr.1474" = type { %"class.std::__1::__compressed_pair.1475" }
%"class.std::__1::__compressed_pair.1475" = type { %"struct.std::__1::__compressed_pair_elem.1476" }
%"struct.std::__1::__compressed_pair_elem.1476" = type { %"class.blink::mojom::blink::InspectorIssueDetails"* }
%"class.blink::mojom::blink::InspectorIssueDetails" = type { %"class.mojo::StructPtr.1477", %"class.mojo::StructPtr.1503", %"class.mojo::StructPtr.1512", %"class.mojo::StructPtr.1519", %"class.mojo::StructPtr.1528", %"class.mojo::StructPtr.1535", %"class.mojo::StructPtr.1542", %"class.mojo::StructPtr.1549" }
%"class.mojo::StructPtr.1477" = type { %"class.std::__1::unique_ptr.1478" }
%"class.std::__1::unique_ptr.1478" = type { %"class.std::__1::__compressed_pair.1479" }
%"class.std::__1::__compressed_pair.1479" = type { %"struct.std::__1::__compressed_pair_elem.1480" }
%"struct.std::__1::__compressed_pair_elem.1480" = type { %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* }
%"class.blink::mojom::blink::SameSiteCookieIssueDetails" = type { %"class.mojo::InlinedStructPtr.1481", %"class.WTF::Vector.1483", %"class.WTF::Vector.1488", i32, %"class.absl::optional.1493", %"class.absl::optional.1493", %"class.mojo::InlinedStructPtr.1498" }
%"class.mojo::InlinedStructPtr.1481" = type <{ %"class.blink::mojom::blink::AffectedCookie", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedCookie" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector.1483" = type { %"class.WTF::VectorBuffer.1484" }
%"class.WTF::VectorBuffer.1484" = type { %"class.WTF::VectorBufferBase.1485" }
%"class.WTF::VectorBufferBase.1485" = type { i32*, i32, i32 }
%"class.WTF::Vector.1488" = type { %"class.WTF::VectorBuffer.1489" }
%"class.WTF::VectorBuffer.1489" = type { %"class.WTF::VectorBufferBase.1490" }
%"class.WTF::VectorBufferBase.1490" = type { i32*, i32, i32 }
%"class.absl::optional.1493" = type { %"class.absl::optional_internal::optional_data.1494" }
%"class.absl::optional_internal::optional_data.1494" = type { %"class.absl::optional_internal::optional_data_base.1495" }
%"class.absl::optional_internal::optional_data_base.1495" = type { %"class.absl::optional_internal::optional_data_dtor_base.1496" }
%"class.absl::optional_internal::optional_data_dtor_base.1496" = type { i8, %union.anon.1497 }
%union.anon.1497 = type { %"class.blink::KURL" }
%"class.mojo::InlinedStructPtr.1498" = type <{ %"class.blink::mojom::blink::AffectedRequest", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedRequest" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.1503" = type { %"class.std::__1::unique_ptr.1504" }
%"class.std::__1::unique_ptr.1504" = type { %"class.std::__1::__compressed_pair.1505" }
%"class.std::__1::__compressed_pair.1505" = type { %"struct.std::__1::__compressed_pair_elem.1506" }
%"struct.std::__1::__compressed_pair_elem.1506" = type { %"class.blink::mojom::blink::MixedContentIssueDetails"* }
%"class.blink::mojom::blink::MixedContentIssueDetails" = type { i32, i32, %"class.WTF::String", %"class.WTF::String", %"class.mojo::InlinedStructPtr.1498", %"class.mojo::InlinedStructPtr.1507" }
%"class.mojo::InlinedStructPtr.1507" = type <{ %"class.blink::mojom::blink::AffectedFrame", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedFrame" = type { %"class.WTF::String" }
%"class.mojo::StructPtr.1512" = type { %"class.std::__1::unique_ptr.1513" }
%"class.std::__1::unique_ptr.1513" = type { %"class.std::__1::__compressed_pair.1514" }
%"class.std::__1::__compressed_pair.1514" = type { %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1515" = type { %"class.blink::mojom::blink::BlockedByResponseIssueDetails"* }
%"class.blink::mojom::blink::BlockedByResponseIssueDetails" = type { %"class.mojo::InlinedStructPtr.1498", %"class.mojo::InlinedStructPtr.1507", %"class.mojo::InlinedStructPtr.1507", i32, [4 x i8] }
%"class.mojo::StructPtr.1519" = type { %"class.std::__1::unique_ptr.1520" }
%"class.std::__1::unique_ptr.1520" = type { %"class.std::__1::__compressed_pair.1521" }
%"class.std::__1::__compressed_pair.1521" = type { %"struct.std::__1::__compressed_pair_elem.1522" }
%"struct.std::__1::__compressed_pair_elem.1522" = type { %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* }
%"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails" = type <{ %"class.absl::optional.1493", %"class.WTF::String", i8, [3 x i8], i32, %"class.mojo::InlinedStructPtr.1507", %"class.mojo::InlinedStructPtr.1523", i32, [4 x i8] }>
%"class.mojo::InlinedStructPtr.1523" = type <{ %"class.blink::mojom::blink::AffectedLocation", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedLocation" = type { %"class.WTF::String", %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1528" = type { %"class.std::__1::unique_ptr.1529" }
%"class.std::__1::unique_ptr.1529" = type { %"class.std::__1::__compressed_pair.1530" }
%"class.std::__1::__compressed_pair.1530" = type { %"struct.std::__1::__compressed_pair_elem.1531" }
%"struct.std::__1::__compressed_pair_elem.1531" = type { %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* }
%"class.blink::mojom::blink::SharedArrayBufferIssueDetails" = type { %"class.mojo::InlinedStructPtr.1523", i8, i32 }
%"class.mojo::StructPtr.1535" = type { %"class.std::__1::unique_ptr.1536" }
%"class.std::__1::unique_ptr.1536" = type { %"class.std::__1::__compressed_pair.1537" }
%"class.std::__1::__compressed_pair.1537" = type { %"struct.std::__1::__compressed_pair_elem.1538" }
%"struct.std::__1::__compressed_pair_elem.1538" = type { %"class.blink::mojom::blink::TrustedWebActivityIssueDetails"* }
%"class.blink::mojom::blink::TrustedWebActivityIssueDetails" = type { %"class.blink::KURL", i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.1542" = type { %"class.std::__1::unique_ptr.1543" }
%"class.std::__1::unique_ptr.1543" = type { %"class.std::__1::__compressed_pair.1544" }
%"class.std::__1::__compressed_pair.1544" = type { %"struct.std::__1::__compressed_pair_elem.1545" }
%"struct.std::__1::__compressed_pair_elem.1545" = type { %"class.blink::mojom::blink::HeavyAdIssueDetails"* }
%"class.blink::mojom::blink::HeavyAdIssueDetails" = type { i32, i32, %"class.mojo::InlinedStructPtr.1507" }
%"class.mojo::StructPtr.1549" = type { %"class.std::__1::unique_ptr.1550" }
%"class.std::__1::unique_ptr.1550" = type { %"class.std::__1::__compressed_pair.1551" }
%"class.std::__1::__compressed_pair.1551" = type { %"struct.std::__1::__compressed_pair_elem.1552" }
%"struct.std::__1::__compressed_pair_elem.1552" = type { %"class.blink::mojom::blink::LowTextContrastIssue"* }
%"class.blink::mojom::blink::LowTextContrastIssue" = type { i32, %"class.WTF::String", float, float, float, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::AuditsIssue" = type { %"class.std::__1::unique_ptr.473" }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::CoreProbeSink" = type opaque
%"class.blink::BrowserInterfaceBrokerProxy" = type opaque
%"class.blink::MultiToken.1562" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1565" }
%"class.blink::WeakMember.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking.1645" = type { i8 }
%"class.WTF::StringTypeAdapter.1668" = type { %"class.WTF::StringTypeAdapter.1669" }
%"class.WTF::StringTypeAdapter.1669" = type { %"class.WTF::StringView" }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN3WTF6VectorIN5blink6TimingELj0ENS_18PartitionAllocatorEEC2ERKS4_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK5blink8Animator13GetLocalTimesIN3WTF6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS2_18PartitionAllocatorEEEEEvRT_ = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink27AnimationWorkletGlobalScope18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZNK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv = comdat any

$_ZNK5blink18WorkletGlobalScope9IsClosingEv = comdat any

$_ZNK5blink26WorkerOrWorkletGlobalScope9navigatorEv = comdat any

$_ZNK5blink26WorkerOrWorkletGlobalScope41ShouldRejectCoepUnsafeNoneTopModuleScriptEv = comdat any

$_ZNK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv = comdat any

$_ZNK5blink18WorkletGlobalScope13IsInitializedEv = comdat any

$_ZNK5blink18WorkletGlobalScope20IsWorkletGlobalScopeEv = comdat any

$_ZNK5blink18WorkletGlobalScope3UrlEv = comdat any

$_ZNK5blink18WorkletGlobalScope7BaseURLEv = comdat any

$_ZNK5blink18WorkletGlobalScope9UserAgentEv = comdat any

$_ZNK5blink18WorkletGlobalScope13GetHttpsStateEv = comdat any

$_ZNK5blink27AnimationWorkletGlobalScope15GetWorkletTokenEv = comdat any

$_ZNK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv = comdat any

$_ZN5blink18WorkletGlobalScope16ErrorEventTargetEv = comdat any

$_ZNK5blink27AnimationWorkletGlobalScope29IsAnimationWorkletGlobalScopeEv = comdat any

$_ZNK5blink27AnimationWorkletGlobalScope24GetExecutionContextTokenEv = comdat any

$_ZNK5blink16ExecutionContext8IsWindowEv = comdat any

$_ZThn72_NK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext19IsWorkerGlobalScopeEv = comdat any

$_ZThn72_NK5blink18WorkletGlobalScope20IsWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext28IsDedicatedWorkerGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext25IsSharedWorkerGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext26IsServiceWorkerGlobalScopeEv = comdat any

$_ZThn72_NK5blink27AnimationWorkletGlobalScope29IsAnimationWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext25IsAudioWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext26IsLayoutWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext25IsPaintWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext25ShouldInstallV8ExtensionsEv = comdat any

$_ZThn72_NK5blink18WorkletGlobalScope3UrlEv = comdat any

$_ZThn72_NK5blink18WorkletGlobalScope7BaseURLEv = comdat any

$_ZThn72_NK5blink18WorkletGlobalScope9UserAgentEv = comdat any

$_ZNK5blink16ExecutionContext20GetUserAgentMetadataEv = comdat any

$_ZThn72_NK5blink18WorkletGlobalScope13GetHttpsStateEv = comdat any

$_ZThn72_NK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv = comdat any

$_ZThn72_N5blink18WorkletGlobalScope16ErrorEventTargetEv = comdat any

$_ZN5blink16ExecutionContext29HasInsecureContextInAncestorsEv = comdat any

$_ZNK5blink16ExecutionContext15GetTrustedTypesEv = comdat any

$_ZNK5blink16ExecutionContext32ReportPermissionsPolicyViolationENS_5mojom24PermissionsPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringE = comdat any

$_ZNK5blink16ExecutionContext29ReportDocumentPolicyViolationENS_5mojom21DocumentPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringES7_ = comdat any

$_ZNK5blink16ExecutionContext11UkmSourceIDEv = comdat any

$_ZThn72_NK5blink27AnimationWorkletGlobalScope24GetExecutionContextTokenEv = comdat any

$_ZThn72_NK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv = comdat any

$_ZN5blink16ExecutionContext17ToScriptWrappableEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_18WorkletGlobalScopeEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_18WorkletGlobalScopeEE26DispatchHasPendingActivityEv = comdat any

$_ZNSt3__16vectorIN2cc22AnimationWorkletOutput14AnimationStateENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18AnimatorDefinitionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8AnimatorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERiRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6TimingEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIN4base9TimeDeltaEEEEEmm = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EES1_EEbRKT0_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_18AnimatorDefinitionEEEPhm = comdat any

$_ZN5blink9NameTraitINS_18AnimatorDefinitionEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_18AnimatorDefinitionEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_18AnimatorDefinitionEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_ = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_8AnimatorEE4CallIJRPN2v87IsolateERPNS_18AnimatorDefinitionENS4_5LocalINS4_5ValueEEERKN3WTF6StringENS_23WorkletAnimationOptionsERKNSE_6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENSE_18PartitionAllocatorEEERKNSJ_INS_6TimingELj0ESP_EEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8AnimatorEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8AnimatorEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8AnimatorEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_22WorkletAnimationEffectEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_18AnimatorDefinitionEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_18AnimatorDefinitionEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8AnimatorEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8AnimatorEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink27AnimationWorkletGlobalScopeE = hidden unnamed_addr constant { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] } { [72 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZN5blink27AnimationWorkletGlobalScopeD2Ev to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZN5blink27AnimationWorkletGlobalScopeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZNK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZNK5blink27AnimationWorkletGlobalScope18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::ScriptState"*)* @_ZN5blink26WorkerOrWorkletGlobalScope4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink26WorkerOrWorkletGlobalScope20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope22IsJSExecutionForbiddenEv to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.WTF::String"*)* @_ZN5blink26WorkerOrWorkletGlobalScope11DisableEvalERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*, i32)* @_ZN5blink26WorkerOrWorkletGlobalScope17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope9IsClosingEv to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZN5blink27AnimationWorkletGlobalScope7DisposeEv to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, i32)* @_ZN5blink26WorkerOrWorkletGlobalScope8CountUseENS_5mojom10WebFeatureE to i8*), i8* bitcast (%"class.blink::WorkerThread"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope9GetThreadEv to i8*), i8* bitcast (%"class.blink::WorkerNavigator"* (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope9navigatorEv to i8*), i8* bitcast (i8 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope41ShouldRejectCoepUnsafeNoneTopModuleScriptEv to i8*), i8* bitcast (%"class.blink::ResourceFetcher"* (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope7FetcherEv to i8*), i8* bitcast (%"class.base::UnguessableToken"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope16GetDevToolsTokenEv to i8*), i8* bitcast (i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkletGlobalScope"*, i8)* @_ZN5blink18WorkletGlobalScope13GetTaskRunnerENS_8TaskTypeE to i8*), i8* bitcast (i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope28GetOutstandingThrottledLimitEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope13IsInitializedEv to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZN5blink26WorkerOrWorkletGlobalScope43BindContentSecurityPolicyToExecutionContextEv to i8*), i8* bitcast (i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope25GetThrottleOptionOverrideEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope30IsMainThreadWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope28IsThreadedWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope20IsWorkletGlobalScopeEv to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope3UrlEv to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope7BaseURLEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::WorkletGlobalScope"*, %"class.WTF::String"*)* @_ZNK5blink18WorkletGlobalScope11CompleteURLERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope9UserAgentEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope15IsContextThreadEv to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.blink::ConsoleMessage"*, i1)* @_ZN5blink18WorkletGlobalScope21AddConsoleMessageImplEPNS_14ConsoleMessageEb to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.mojo::StructPtr.1469"*)* @_ZN5blink18WorkletGlobalScope17AddInspectorIssueEN4mojo9StructPtrINS_5mojom5blink18InspectorIssueInfoEEE to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.blink::AuditsIssue"*)* @_ZN5blink18WorkletGlobalScope17AddInspectorIssueENS_11AuditsIssueE to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.blink::ErrorEvent"*)* @_ZN5blink18WorkletGlobalScope15ExceptionThrownEPNS_10ErrorEventE to i8*), i8* bitcast (%"class.blink::CoreProbeSink"* (%"class.blink::WorkletGlobalScope"*)* @_ZN5blink18WorkletGlobalScope12GetProbeSinkEv to i8*), i8* bitcast (%"class.blink::FrameOrWorkerScheduler"* (%"class.blink::WorkletGlobalScope"*)* @_ZN5blink18WorkletGlobalScope12GetSchedulerEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope29CrossOriginIsolatedCapabilityEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope22DirectSocketCapabilityEv to i8*), i8* bitcast (%"class.ukm::UkmRecorder"* (%"class.blink::WorkletGlobalScope"*)* @_ZN5blink18WorkletGlobalScope11UkmRecorderEv to i8*), i8* bitcast (%"class.blink::LocalFrame"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope8GetFrameEv to i8*), i8* bitcast (i32 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope13GetHttpsStateEv to i8*), i8* bitcast (%"class.blink::BrowserInterfaceBrokerProxy"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope25GetBrowserInterfaceBrokerEv to i8*), i8* bitcast (void (%"class.blink::MultiToken.1562"*, %"class.blink::AnimationWorkletGlobalScope"*)* @_ZNK5blink27AnimationWorkletGlobalScope15GetWorkletTokenEv to i8*), i8* bitcast (void (%"class.absl::optional.1214"*, %"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv to i8*), i8* bitcast (%"class.blink::EventTarget"* (%"class.blink::WorkletGlobalScope"*)* @_ZN5blink18WorkletGlobalScope16ErrorEventTargetEv to i8*), i8* bitcast (i1 (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZNK5blink27AnimationWorkletGlobalScope29IsAnimationWorkletGlobalScopeEv to i8*), i8* bitcast (void (%"class.blink::MultiToken"*, %"class.blink::AnimationWorkletGlobalScope"*)* @_ZNK5blink27AnimationWorkletGlobalScope24GetExecutionContextTokenEv to i8*)], [55 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext8IsWindowEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext19IsWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope20IsWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope30IsMainThreadWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext28IsDedicatedWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25IsSharedWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext26IsServiceWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZThn72_NK5blink27AnimationWorkletGlobalScope29IsAnimationWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25IsAudioWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext26IsLayoutWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25IsPaintWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope28IsThreadedWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope22IsJSExecutionForbiddenEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope15IsContextThreadEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25ShouldInstallV8ExtensionsEv to i8*), i8* bitcast (%"class.blink::ContentSecurityPolicy"* (%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*)* @_ZN5blink16ExecutionContext32GetContentSecurityPolicyForWorldEPKNS_15DOMWrapperWorldE to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope3UrlEv to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope7BaseURLEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::WorkletGlobalScope"*, %"class.WTF::String"*)* @_ZThn72_NK5blink18WorkletGlobalScope11CompleteURLERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.WTF::String"*)* @_ZThn72_N5blink26WorkerOrWorkletGlobalScope11DisableEvalERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope9UserAgentEv to i8*), i8* bitcast (void (%"struct.blink::UserAgentMetadata"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext20GetUserAgentMetadataEv to i8*), i8* bitcast (i32 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope13GetHttpsStateEv to i8*), i8* bitcast (%"class.blink::ResourceFetcher"* (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope7FetcherEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*, i32)* @_ZThn72_N5blink26WorkerOrWorkletGlobalScope17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE to i8*), i8* bitcast (i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.blink::ErrorEvent"*)* @_ZThn72_N5blink18WorkletGlobalScope15ExceptionThrownEPNS_10ErrorEventE to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, %"class.blink::KURL"*)* @_ZN5blink16ExecutionContext24RemoveURLFromMemoryCacheERKNS_4KURLE to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.mojo::StructPtr.1469"*)* @_ZThn72_N5blink18WorkletGlobalScope17AddInspectorIssueEN4mojo9StructPtrINS_5mojom5blink18InspectorIssueInfoEEE to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.blink::AuditsIssue"*)* @_ZThn72_N5blink18WorkletGlobalScope17AddInspectorIssueENS_11AuditsIssueE to i8*), i8* bitcast (%"class.blink::EventTarget"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_N5blink18WorkletGlobalScope16ErrorEventTargetEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContext29HasInsecureContextInAncestorsEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext16OutgoingReferrerEv to i8*), i8* bitcast (%"class.blink::CoreProbeSink"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_N5blink18WorkletGlobalScope12GetProbeSinkEv to i8*), i8* bitcast (%"class.blink::FrameOrWorkerScheduler"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_N5blink18WorkletGlobalScope12GetSchedulerEv to i8*), i8* bitcast (%"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext15GetTrustedTypesEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext19RequireTrustedTypesEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*, i32)* @_ZNK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*)* @_ZNK5blink16ExecutionContext32ReportPermissionsPolicyViolationENS_5mojom24PermissionsPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZNK5blink16ExecutionContext29ReportDocumentPolicyViolationENS_5mojom21DocumentPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringES7_ to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope29CrossOriginIsolatedCapabilityEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope22DirectSocketCapabilityEv to i8*), i8* bitcast (%"class.ukm::UkmRecorder"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_N5blink18WorkletGlobalScope11UkmRecorderEv to i8*), i8* bitcast (i64 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext11UkmSourceIDEv to i8*), i8* bitcast (void (%"class.blink::MultiToken"*, %"class.blink::AnimationWorkletGlobalScope"*)* @_ZThn72_NK5blink27AnimationWorkletGlobalScope24GetExecutionContextTokenEv to i8*), i8* bitcast (void (%"class.absl::optional.1214"*, %"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv to i8*), i8* bitcast (%"class.blink::ScriptWrappable"* (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContext17ToScriptWrappableEv to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZThn72_N5blink27AnimationWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZThn72_N5blink27AnimationWorkletGlobalScopeD0Ev to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, i1)* @_ZN5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.blink::ConsoleMessage"*, i1)* @_ZThn72_N5blink18WorkletGlobalScope21AddConsoleMessageImplEPNS_14ConsoleMessageEb to i8*)], [9 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZThn104_N5blink27AnimationWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZThn104_N5blink27AnimationWorkletGlobalScopeD0Ev to i8*), i8* bitcast (void (%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*)* @_ZN5blink24ContextLifecycleNotifier27AddContextLifecycleObserverEPNS_24ContextLifecycleObserverE to i8*), i8* bitcast (void (%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*)* @_ZN5blink24ContextLifecycleNotifier30RemoveContextLifecycleObserverEPNS_24ContextLifecycleObserverE to i8*), i8* bitcast (%"class.blink::BrowserInterfaceBrokerProxy"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn104_NK5blink18WorkletGlobalScope25GetBrowserInterfaceBrokerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkletGlobalScope"*, i8)* @_ZThn104_N5blink18WorkletGlobalScope13GetTaskRunnerENS_8TaskTypeE to i8*)], [3 x i8*] [i8* inttoptr (i64 -144 to i8*), i8* null, i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn144_NK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE to i8*)], [6 x i8*] [i8* inttoptr (i64 -176 to i8*), i8* null, i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn176_NK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZThn176_N5blink27AnimationWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZThn176_N5blink27AnimationWorkletGlobalScopeD0Ev to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, i1)* @_ZThn104_N5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb to i8*)], [6 x i8*] [i8* inttoptr (i64 -184 to i8*), i8* null, i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn184_NK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZThn184_N5blink27AnimationWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZThn184_N5blink27AnimationWorkletGlobalScopeD0Ev to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, i32)* @_ZThn184_N5blink26WorkerOrWorkletGlobalScope8CountUseENS_5mojom10WebFeatureE to i8*)], [3 x i8*] [i8* inttoptr (i64 -192 to i8*), i8* null, i8* bitcast (i1 (%"class.blink::ExecutionContext"*, i32)* @_ZThn120_NK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE to i8*)], [7 x i8*] [i8* inttoptr (i64 -1792 to i8*), i8* null, i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn1792_NK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZThn1792_N5blink27AnimationWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZThn1792_N5blink27AnimationWorkletGlobalScopeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_18WorkletGlobalScopeEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_18WorkletGlobalScopeEE26DispatchHasPendingActivityEv to i8*)] }, align 8
@.str = private unnamed_addr constant [20 x i8] c"A class with name:'\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"' is already registered.\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"The empty string is not a valid name.\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"The provided callback is not a constructor.\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"animate\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"state\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"Animator\00", align 1
@_ZTVN5blink23WorkletAnimationOptionsE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CallbackFunctionBase]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink17V8AnimateCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN5blink15V8StateCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.10 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink27AnimationWorkletGlobalScope18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.13 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.14 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@.str.15 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.18 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.20 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.21 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.22 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIiNS_12KeyValuePairIiNS1_6MemberINS1_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSD_IS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [346 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<int, WTF::KeyValuePair<int, blink::Member<blink::Animator> >, WTF::KeyValuePairKeyExtractor, WTF::IntHash<int>, WTF::HashMapValueTraits<WTF::HashTraits<int>, WTF::HashTraits<blink::Member<blink::Animator> > >, WTF::HashTraits<int>, blink::HeapAllocator> >]\00", align 1
@.str.23 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.24 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6TimingEEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Timing]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4absl8optionalIN4base9TimeDeltaEEEEEPKcv = private unnamed_addr constant [79 x i8] c"const char *WTF::GetStringWithTypeName() [T = absl::optional<base::TimeDelta>]\00", align 1
@.str.25 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.26 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.27 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18AnimatorDefinitionEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AnimatorDefinition]\00", align 1
@_ZZN5blink11GCInfoTraitINS_18AnimatorDefinitionEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18AnimatorDefinitionEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_18AnimatorDefinitionEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_18AnimatorDefinitionEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_18AnimatorDefinitionEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [396 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::AnimatorDefinition> >, WTF::KeyValuePairKeyExtractor, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::AnimatorDefinition> > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8AnimatorEEEPKcv = private unnamed_addr constant [63 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Animator]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8AnimatorEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8AnimatorEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8AnimatorEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8AnimatorEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8AnimatorEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.28 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink27AnimationWorkletGlobalScopeC1ENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEEPNS_12WorkerThreadE = hidden unnamed_addr alias void (%"class.blink::AnimationWorkletGlobalScope"*, %"struct.blink::GlobalScopeCreationParams"*, %"class.blink::WorkerThread"*), void (%"class.blink::AnimationWorkletGlobalScope"*, %"struct.blink::GlobalScopeCreationParams"*, %"class.blink::WorkerThread"*)* @_ZN5blink27AnimationWorkletGlobalScopeC2ENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEEPNS_12WorkerThreadE
@_ZN5blink27AnimationWorkletGlobalScopeD1Ev = hidden unnamed_addr alias void (%"class.blink::AnimationWorkletGlobalScope"*), void (%"class.blink::AnimationWorkletGlobalScope"*)* @_ZN5blink27AnimationWorkletGlobalScopeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27AnimationWorkletGlobalScopeC2ENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEEPNS_12WorkerThreadE(%"class.blink::AnimationWorkletGlobalScope"*, %"struct.blink::GlobalScopeCreationParams"*, %"class.blink::WorkerThread"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::AnimationWorkletGlobalScope"* %0 to %"class.blink::WorkletGlobalScope"*
  %5 = getelementptr inbounds %"class.blink::WorkerThread", %"class.blink::WorkerThread"* %2, i64 0, i32 11
  %6 = load %"class.blink::WorkerReportingProxy"*, %"class.blink::WorkerReportingProxy"** %5, align 8
  tail call void @_ZN5blink18WorkletGlobalScopeC2ENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEERNS_20WorkerReportingProxyEPNS_12WorkerThreadE(%"class.blink::WorkletGlobalScope"* %4, %"struct.blink::GlobalScopeCreationParams"* %1, %"class.blink::WorkerReportingProxy"* %6, %"class.blink::WorkerThread"* %2) #11
  %7 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink27AnimationWorkletGlobalScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink27AnimationWorkletGlobalScopeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink27AnimationWorkletGlobalScopeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink27AnimationWorkletGlobalScopeE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %12 = bitcast i32 (...)*** %11 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink27AnimationWorkletGlobalScopeE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink27AnimationWorkletGlobalScopeE, i64 0, inrange i32 5, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %12, align 8
  %13 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 4, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink27AnimationWorkletGlobalScopeE, i64 0, inrange i32 6, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink27AnimationWorkletGlobalScopeE, i64 0, inrange i32 7, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 2
  %16 = bitcast %"class.blink::HeapHashMap.745"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #11
  %17 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3
  %18 = bitcast %"class.blink::HeapHashMap.752"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #11
  %19 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 4
  store i8 0, i8* %19, align 8
  %20 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #11
  %21 = extractvalue { i64, i64 } %20, 0
  %22 = extractvalue { i64, i64 } %20, 1
  %23 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %24, align 8
  ret void
}

declare void @_ZN5blink18WorkletGlobalScopeC2ENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEERNS_20WorkerReportingProxyEPNS_12WorkerThreadE(%"class.blink::WorkletGlobalScope"*, %"struct.blink::GlobalScopeCreationParams"*, %"class.blink::WorkerReportingProxy"*, %"class.blink::WorkerThread"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27AnimationWorkletGlobalScopeD2Ev(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AnimationWorkletGlobalScope"* %0 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink27AnimationWorkletGlobalScopeD1Ev(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 2
  %3 = bitcast %"class.blink::HeapHashMap.745"* %2 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink27AnimationWorkletGlobalScopeD1Ev(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 0, i32 12
  %3 = bitcast %"class.util::TokenType.737"* %2 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn176_N5blink27AnimationWorkletGlobalScopeD1Ev(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 0, i32 2, i32 5
  %3 = bitcast %"class.std::__1::unique_ptr.450"* %2 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn184_N5blink27AnimationWorkletGlobalScopeD1Ev(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 0, i32 2, i32 4
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn1792_N5blink27AnimationWorkletGlobalScopeD1Ev(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 0, i32 0, i32 1, i32 6, i32 10, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27AnimationWorkletGlobalScopeD0Ev(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AnimationWorkletGlobalScope"* %0 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink27AnimationWorkletGlobalScopeD0Ev(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 2
  %3 = bitcast %"class.blink::HeapHashMap.745"* %2 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink27AnimationWorkletGlobalScopeD0Ev(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 0, i32 12
  %3 = bitcast %"class.util::TokenType.737"* %2 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn176_N5blink27AnimationWorkletGlobalScopeD0Ev(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 0, i32 2, i32 5
  %3 = bitcast %"class.std::__1::unique_ptr.450"* %2 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn184_N5blink27AnimationWorkletGlobalScopeD0Ev(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 0, i32 2, i32 4
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn1792_N5blink27AnimationWorkletGlobalScopeD0Ev(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 0, i32 0, i32 1, i32 6, i32 10, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::HeapHashMap.745"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.blink::HeapHashMap.745"* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #11
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3
  %20 = bitcast %"class.blink::HeapHashMap.752"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = bitcast %"class.blink::HeapHashMap.752"* %19 to i8**
  %23 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, i64 11
  %25 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8** %22) #11
  %26 = icmp eq i64 %21, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %18
  %28 = inttoptr i64 %21 to i8*
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, i64 5
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8* nonnull %28, i8* nonnull %28, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %33

33:                                               ; preds = %18, %27
  %34 = bitcast %"class.blink::AnimationWorkletGlobalScope"* %0 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %34, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 2
  %4 = getelementptr inbounds %"class.blink::HeapHashMap.745", %"class.blink::HeapHashMap.745"* %3, i64 83, i32 0, i32 0, i32 3
  %5 = bitcast i32* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = bitcast i32* %4 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #11
  %12 = icmp eq i64 %6, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %19

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %"class.blink::HeapHashMap.745", %"class.blink::HeapHashMap.745"* %3, i64 84, i32 0, i32 0, i32 3
  %21 = bitcast i32* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = bitcast i32* %20 to i8**
  %24 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %25 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, i64 11
  %26 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, align 8
  tail call void %26(%"class.blink::Visitor"* %1, i8** %23) #11
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %22 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %34

34:                                               ; preds = %19, %28
  %35 = bitcast %"class.blink::HeapHashMap.745"* %3 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %35, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 0, i32 12
  %4 = getelementptr inbounds %"class.util::TokenType.737", %"class.util::TokenType.737"* %3, i64 125, i32 0, i32 0, i32 0, i32 1
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast i64* %4 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #11
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %18

18:                                               ; preds = %12, %2
  %19 = getelementptr inbounds %"class.util::TokenType.737", %"class.util::TokenType.737"* %3, i64 127
  %20 = getelementptr inbounds %"class.util::TokenType.737", %"class.util::TokenType.737"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = bitcast %"class.util::TokenType.737"* %19 to i8**
  %23 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, i64 11
  %25 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8** %22) #11
  %26 = icmp eq i64 %21, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %18
  %28 = inttoptr i64 %21 to i8*
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, i64 5
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8* nonnull %28, i8* nonnull %28, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %33

33:                                               ; preds = %18, %27
  %34 = bitcast %"class.util::TokenType.737"* %3 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %34, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn144_NK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 0, i32 7
  %4 = getelementptr inbounds %"class.blink::CrossThreadPersistent.456", %"class.blink::CrossThreadPersistent.456"* %3, i64 125, i32 0, i32 1
  %5 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #11
  %12 = icmp eq i64 %6, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %19

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %"class.blink::CrossThreadPersistent.456", %"class.blink::CrossThreadPersistent.456"* %3, i64 127
  %21 = bitcast %"class.blink::CrossThreadPersistent.456"* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = bitcast %"class.blink::CrossThreadPersistent.456"* %20 to i8**
  %24 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %25 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, i64 11
  %26 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, align 8
  tail call void %26(%"class.blink::Visitor"* %1, i8** %23) #11
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %22 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %34

34:                                               ; preds = %19, %28
  %35 = bitcast %"class.blink::CrossThreadPersistent.456"* %3 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %35, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn176_NK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 0, i32 2, i32 5
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450"* %3, i64 251
  %5 = bitcast %"class.std::__1::unique_ptr.450"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.450"* %4 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #11
  %12 = icmp eq i64 %6, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %19

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450"* %3, i64 254
  %21 = bitcast %"class.std::__1::unique_ptr.450"* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.450"* %20 to i8**
  %24 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %25 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, i64 11
  %26 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, align 8
  tail call void %26(%"class.blink::Visitor"* %1, i8** %23) #11
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %22 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %34

34:                                               ; preds = %19, %28
  %35 = bitcast %"class.std::__1::unique_ptr.450"* %3 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %35, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn184_NK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 0, i32 2, i32 4
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 251
  %5 = bitcast %"class.WTF::String"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #11
  %12 = icmp eq i64 %6, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %19

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 254
  %21 = bitcast %"class.WTF::String"* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = bitcast %"class.WTF::String"* %20 to i8**
  %24 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %25 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, i64 11
  %26 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, align 8
  tail call void %26(%"class.blink::Visitor"* %1, i8** %23) #11
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %22 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %34

34:                                               ; preds = %19, %28
  %35 = bitcast %"class.WTF::String"* %3 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %35, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn1792_NK5blink27AnimationWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AnimationWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 -1, i32 0, i32 0, i32 1, i32 6, i32 10, i32 0, i32 1
  %4 = getelementptr inbounds i32, i32* %3, i64 502
  %5 = bitcast i32* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = bitcast i32* %4 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #11
  %12 = icmp eq i64 %6, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %19

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds i32, i32* %3, i64 508
  %21 = bitcast i32* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = bitcast i32* %20 to i8**
  %24 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %25 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, i64 11
  %26 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, align 8
  tail call void %26(%"class.blink::Visitor"* %1, i8** %23) #11
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %22 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %34

34:                                               ; preds = %19, %28
  %35 = bitcast i32* %3 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %35, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27AnimationWorkletGlobalScope7DisposeEv(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::WorkerClients"*, %"class.blink::WorkerClients"** %2, align 8
  %4 = tail call %"class.blink::AnimationWorkletProxyClient"* @_ZN5blink27AnimationWorkletProxyClient4FromEPNS_13WorkerClientsE(%"class.blink::WorkerClients"* %3) #11
  %5 = icmp eq %"class.blink::AnimationWorkletProxyClient"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink27AnimationWorkletProxyClient7DisposeEv(%"class.blink::AnimationWorkletProxyClient"* nonnull %4) #11
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %"class.blink::AnimationWorkletGlobalScope"* %0 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScope7DisposeEv(%"class.blink::WorkletGlobalScope"* %8) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.blink::AnimationWorkletProxyClient"* @_ZN5blink27AnimationWorkletProxyClient4FromEPNS_13WorkerClientsE(%"class.blink::WorkerClients"*) local_unnamed_addr #1

declare void @_ZN5blink27AnimationWorkletProxyClient7DisposeEv(%"class.blink::AnimationWorkletProxyClient"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink18WorkletGlobalScope7DisposeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Animator"* @_ZN5blink27AnimationWorkletGlobalScope17CreateAnimatorForEiRKN3WTF6StringENS_23WorkletAnimationOptionsE13scoped_refptrINS_21SerializedScriptValueEERKNS1_6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS1_18PartitionAllocatorEEERKNS9_INS_6TimingELj0ESF_EE(%"class.blink::AnimationWorkletGlobalScope"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::WorkletAnimationOptions"* nocapture readonly, %"class.blink::SerializedScriptValue"*, %"class.WTF::Vector.1243"* dereferenceable(16), %"class.WTF::Vector.1248"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.blink::Animator"*, align 8
  %12 = alloca %"class.blink::WorkletAnimationOptions", align 8
  store i32 %1, i32* %10, align 4
  %13 = bitcast %"class.blink::Animator"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  store %"class.blink::Animator"* inttoptr (i64 -6148914691236517206 to %"class.blink::Animator"*), %"class.blink::Animator"** %11, align 8
  %14 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %12, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink23WorkletAnimationOptionsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %3, i64 0, i32 1, i32 0
  %16 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %12, i64 0, i32 1, i32 0
  store %"class.blink::SerializedScriptValue"* %16, %"class.blink::SerializedScriptValue"** %17, align 8
  %18 = icmp eq %"class.blink::SerializedScriptValue"* %16, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0)) #11
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %26

26:                                               ; preds = %7, %19, %23
  %27 = icmp eq %"class.blink::SerializedScriptValue"* %4, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0)) #11
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  br label %35

35:                                               ; preds = %26, %28, %32
  %36 = call %"class.blink::Animator"* @_ZN5blink27AnimationWorkletGlobalScope14CreateInstanceERKN3WTF6StringENS_23WorkletAnimationOptionsE13scoped_refptrINS_21SerializedScriptValueEERKNS1_6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS1_18PartitionAllocatorEEERKNS9_INS_6TimingELj0ESF_EE(%"class.blink::AnimationWorkletGlobalScope"* %0, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::WorkletAnimationOptions"* nonnull %12, %"class.blink::SerializedScriptValue"* %4, %"class.WTF::Vector.1243"* dereferenceable(16) %5, %"class.WTF::Vector.1248"* dereferenceable(16) %6)
  call void @_ZN5blink23WorkletAnimationOptionsD1Ev(%"class.blink::WorkletAnimationOptions"* nonnull %12) #11
  store %"class.blink::Animator"* %36, %"class.blink::Animator"** %11, align 8
  %37 = icmp eq %"class.blink::Animator"* %36, null
  br i1 %37, label %57, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0
  %40 = call { %"struct.WTF::KeyValuePair.758"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERiRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.756"* %39, i32* nonnull dereferenceable(4) %10, %"class.blink::Animator"** nonnull dereferenceable(8) %11) #11
  %41 = extractvalue { %"struct.WTF::KeyValuePair.758"*, i8 } %40, 1
  %42 = and i8 %41, 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %55

44:                                               ; preds = %38
  %45 = extractvalue { %"struct.WTF::KeyValuePair.758"*, i8 } %40, 0
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %45, i64 0, i32 1
  %47 = load %"class.blink::Animator"*, %"class.blink::Animator"** %11, align 8
  %48 = ptrtoint %"class.blink::Animator"* %47 to i64
  %49 = bitcast %"class.blink::Member.759"* %46 to i64*
  store atomic i64 %48, i64* %49 monotonic, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %44
  %53 = bitcast %"class.blink::Animator"* %47 to i8*
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %38, %44, %52
  %56 = load %"class.blink::Animator"*, %"class.blink::Animator"** %11, align 8
  br label %57

57:                                               ; preds = %35, %55
  %58 = phi %"class.blink::Animator"* [ %56, %55 ], [ null, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  br i1 %27, label %65, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw sub i32* %60, i32 1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %4) #11
  %64 = bitcast %"class.blink::SerializedScriptValue"* %4 to i8*
  call void @free(i8* %64) #11
  br label %65

65:                                               ; preds = %57, %59, %63
  ret %"class.blink::Animator"* %58
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Animator"* @_ZN5blink27AnimationWorkletGlobalScope14CreateInstanceERKN3WTF6StringENS_23WorkletAnimationOptionsE13scoped_refptrINS_21SerializedScriptValueEERKNS1_6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS1_18PartitionAllocatorEEERKNS9_INS_6TimingELj0ESF_EE(%"class.blink::AnimationWorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WorkletAnimationOptions"*, %"class.blink::SerializedScriptValue"*, %"class.WTF::Vector.1243"* dereferenceable(16), %"class.WTF::Vector.1248"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.blink::SerializedScriptValue::DeserializeOptions", align 8
  %8 = alloca %"struct.blink::SerializedScriptValue::DeserializeOptions", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.blink::AnimatorDefinition"*, align 8
  %12 = alloca %"class.blink::ScriptState::Scope", align 8
  %13 = alloca %"class.v8::Isolate"*, align 8
  %14 = alloca %"class.v8::TryCatch", align 8
  %15 = alloca %"class.blink::ScriptValue", align 8
  %16 = alloca %"class.blink::ScriptValue", align 8
  %17 = alloca %"class.blink::ScriptValue", align 8
  %18 = alloca %"class.v8::Maybe", align 8
  %19 = alloca %"class.v8::Local.1307", align 8
  %20 = bitcast %"class.blink::AnimatorDefinition"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  store %"class.blink::AnimatorDefinition"* inttoptr (i64 -6148914691236517206 to %"class.blink::AnimatorDefinition"*), %"class.blink::AnimatorDefinition"** %11, align 8
  %21 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 2, i32 0, i32 0
  %22 = tail call %"struct.WTF::KeyValuePair.751"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.749"* %21, %"class.WTF::String"* dereferenceable(8) %1) #11
  %23 = icmp eq %"struct.WTF::KeyValuePair.751"* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %6
  store %"class.blink::AnimatorDefinition"* null, %"class.blink::AnimatorDefinition"** %11, align 8
  br label %190

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %22, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::AnimatorDefinition"*, %"class.blink::AnimatorDefinition"** %26, align 8
  store %"class.blink::AnimatorDefinition"* %27, %"class.blink::AnimatorDefinition"** %11, align 8
  %28 = icmp eq %"class.blink::AnimatorDefinition"* %27, null
  br i1 %28, label %190, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 11, i32 0, i32 0
  %31 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::WorkerOrWorkletScriptController", %"class.blink::WorkerOrWorkletScriptController"* %31, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %32, align 8
  %34 = bitcast %"class.blink::ScriptState::Scope"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %12, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %12, i64 0, i32 0
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %38 = bitcast %"class.blink::ScriptState::Scope"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 32, i1 false)
  %39 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %36, %"class.v8::Isolate"* %39) #11
  %40 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %"class.v8::Context"*, %"class.v8::Context"** %40, align 8
  %42 = icmp eq %"class.v8::Context"* %41, null
  br i1 %42, label %50, label %43

43:                                               ; preds = %29
  %44 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %45 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %44, align 8
  %46 = bitcast %"class.v8::Context"* %41 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %45, i64 %47) #11
  %49 = bitcast i64* %48 to %"class.v8::Context"*
  br label %50

50:                                               ; preds = %29, %43
  %51 = phi %"class.v8::Context"* [ %49, %43 ], [ null, %29 ]
  store %"class.v8::Context"* %51, %"class.v8::Context"** %35, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %51) #11
  %52 = bitcast %"class.v8::Isolate"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  store %"class.v8::Isolate"* inttoptr (i64 -6148914691236517206 to %"class.v8::Isolate"*), %"class.v8::Isolate"** %13, align 8
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  store %"class.v8::Isolate"* %53, %"class.v8::Isolate"** %13, align 8
  %54 = bitcast %"class.v8::TryCatch"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %54) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %14, %"class.v8::Isolate"* %53) #11
  call void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"* nonnull %14, i1 zeroext true) #11
  %55 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %2, i64 0, i32 1, i32 0
  %56 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %55, align 8
  %57 = icmp eq %"class.blink::SerializedScriptValue"* %56, null
  br i1 %57, label %85, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 1 monotonic
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0)) #11
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  br label %65

65:                                               ; preds = %58, %62
  %66 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %55, align 8
  %67 = icmp eq %"class.blink::SerializedScriptValue"* %66, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 1 monotonic
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %68
  %73 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0)) #11
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  br label %75

75:                                               ; preds = %72, %68, %65
  %76 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %77 = bitcast %"struct.blink::SerializedScriptValue::DeserializeOptions"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 16, i1 false) #11
  %78 = call %"class.v8::Value"* @_ZN5blink21SerializedScriptValue11DeserializeEPN2v87IsolateERKNS0_18DeserializeOptionsE(%"class.blink::SerializedScriptValue"* %66, %"class.v8::Isolate"* %76, %"struct.blink::SerializedScriptValue::DeserializeOptions"* nonnull dereferenceable(16) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #11
  br i1 %67, label %89, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw sub i32* %80, i32 1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %89

83:                                               ; preds = %79
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %66) #11
  %84 = bitcast %"class.blink::SerializedScriptValue"* %66 to i8*
  call void @free(i8* %84) #11
  br label %89

85:                                               ; preds = %50
  %86 = ptrtoint %"class.v8::Isolate"* %53 to i64
  %87 = add i64 %86, 160
  %88 = inttoptr i64 %87 to %"class.v8::Value"*
  br label %94

89:                                               ; preds = %83, %79, %75
  %90 = atomicrmw sub i32* %59, i32 1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %89
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %56) #11
  %93 = bitcast %"class.blink::SerializedScriptValue"* %56 to i8*
  call void @free(i8* %93) #11
  br label %94

94:                                               ; preds = %85, %89, %92
  %95 = phi %"class.v8::Value"* [ %88, %85 ], [ %78, %89 ], [ %78, %92 ]
  %96 = icmp eq %"class.blink::SerializedScriptValue"* %3, null
  %97 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  br i1 %96, label %102, label %98

98:                                               ; preds = %94
  %99 = bitcast %"struct.blink::SerializedScriptValue::DeserializeOptions"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 0, i64 16, i1 false) #11
  %100 = call %"class.v8::Value"* @_ZN5blink21SerializedScriptValue11DeserializeEPN2v87IsolateERKNS0_18DeserializeOptionsE(%"class.blink::SerializedScriptValue"* nonnull %3, %"class.v8::Isolate"* %97, %"struct.blink::SerializedScriptValue::DeserializeOptions"* nonnull dereferenceable(16) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #11
  %101 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  br label %106

102:                                              ; preds = %94
  %103 = ptrtoint %"class.v8::Isolate"* %97 to i64
  %104 = add i64 %103, 160
  %105 = inttoptr i64 %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %102, %98
  %107 = phi %"class.v8::Isolate"* [ %101, %98 ], [ %97, %102 ]
  %108 = phi %"class.v8::Value"* [ %100, %98 ], [ %105, %102 ]
  %109 = bitcast %"class.blink::ScriptValue"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #11
  %110 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %15, i64 0, i32 0
  %111 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %15, i64 0, i32 1, i32 1, i32 0
  %112 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %15, i64 0, i32 1
  %113 = bitcast %"class.blink::WorldSafeV8Reference"* %112 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 16, i1 false)
  store %"class.v8::Isolate"* %107, %"class.v8::Isolate"** %110, align 8
  %114 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %15, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %114, %"class.v8::Isolate"* %107, %"class.v8::Value"* %95) #11
  %115 = bitcast %"class.blink::ScriptValue"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #11
  %116 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %16, i64 0, i32 0
  %117 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %16, i64 0, i32 1, i32 1, i32 0
  %118 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %16, i64 0, i32 1
  %119 = bitcast %"class.blink::WorldSafeV8Reference"* %118 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 16, i1 false)
  store %"class.v8::Isolate"* %107, %"class.v8::Isolate"** %116, align 8
  %120 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %16, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %120, %"class.v8::Isolate"* %107, %"class.v8::Value"* %108) #11
  %121 = bitcast %"class.blink::ScriptValue"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #11
  %122 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %17, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 0, i64 24, i1 false) #11
  %123 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %123) #11
  %124 = load %"class.blink::AnimatorDefinition"*, %"class.blink::AnimatorDefinition"** %11, align 8
  %125 = getelementptr inbounds %"class.blink::AnimatorDefinition", %"class.blink::AnimatorDefinition"* %124, i64 0, i32 1, i32 0, i32 0
  %126 = load %"class.blink::V8AnimatorConstructor"*, %"class.blink::V8AnimatorConstructor"** %125, align 8
  call void @_ZN5blink21V8AnimatorConstructor9ConstructERKNS_11ScriptValueES3_(%"class.v8::Maybe"* nonnull sret %18, %"class.blink::V8AnimatorConstructor"* %126, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %15, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %16) #11
  %127 = load i8, i8* %123, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %139, label %129, !prof !3

129:                                              ; preds = %106
  %130 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %18, i64 0, i32 1
  %131 = bitcast %"class.blink::ScriptValue"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.blink::ScriptValue"* %17 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %17, i64 0, i32 1
  %135 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %18, i64 0, i32 1, i32 1
  %136 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %134, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %135) #11
  %137 = load i8, i8* %123, align 8, !range !2
  %138 = icmp ne i8 %137, 0
  br label %139

139:                                              ; preds = %106, %129
  %140 = phi i1 [ false, %106 ], [ %138, %129 ]
  %141 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %18, i64 0, i32 1, i32 1, i32 1, i32 0
  %142 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %141, align 8
  %143 = icmp eq %"class.blink::DOMWrapperWorld"* %142, null
  br i1 %143, label %151, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %142, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %145) #11
  %146 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %142, i64 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %144
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %142) #11
  %150 = bitcast %"class.blink::DOMWrapperWorld"* %142 to i8*
  call void @free(i8* %150) #11
  br label %151

151:                                              ; preds = %139, %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %123) #11
  br i1 %140, label %152, label %157

152:                                              ; preds = %151
  %153 = bitcast %"class.v8::Local.1307"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #11
  %154 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %17) #11
  %155 = getelementptr inbounds %"class.v8::Local.1307", %"class.v8::Local.1307"* %19, i64 0, i32 0
  store %"class.v8::Value"* %154, %"class.v8::Value"** %155, align 8
  %156 = call %"class.blink::Animator"* @_ZN5blink25MakeGarbageCollectedTraitINS_8AnimatorEE4CallIJRPN2v87IsolateERPNS_18AnimatorDefinitionENS4_5LocalINS4_5ValueEEERKN3WTF6StringENS_23WorkletAnimationOptionsERKNSE_6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENSE_18PartitionAllocatorEEERKNSJ_INS_6TimingELj0ESP_EEEEEPS1_DpOT_(%"class.v8::Isolate"** nonnull dereferenceable(8) %13, %"class.blink::AnimatorDefinition"** nonnull dereferenceable(8) %11, %"class.v8::Local.1307"* nonnull dereferenceable(8) %19, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::WorkletAnimationOptions"* dereferenceable(16) %2, %"class.WTF::Vector.1243"* dereferenceable(16) %4, %"class.WTF::Vector.1248"* dereferenceable(16) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #11
  br label %157

157:                                              ; preds = %151, %152
  %158 = phi %"class.blink::Animator"* [ %156, %152 ], [ null, %151 ]
  %159 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %122, align 8
  %160 = icmp eq %"class.blink::DOMWrapperWorld"* %159, null
  br i1 %160, label %168, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %159, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %162) #11
  %163 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %159, i64 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %161
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %159) #11
  %167 = bitcast %"class.blink::DOMWrapperWorld"* %159 to i8*
  call void @free(i8* %167) #11
  br label %168

168:                                              ; preds = %157, %161, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #11
  %169 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %117, align 8
  %170 = icmp eq %"class.blink::DOMWrapperWorld"* %169, null
  br i1 %170, label %178, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %169, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %172) #11
  %173 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %169, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %171
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %169) #11
  %177 = bitcast %"class.blink::DOMWrapperWorld"* %169 to i8*
  call void @free(i8* %177) #11
  br label %178

178:                                              ; preds = %168, %171, %176
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #11
  %179 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %111, align 8
  %180 = icmp eq %"class.blink::DOMWrapperWorld"* %179, null
  br i1 %180, label %188, label %181

181:                                              ; preds = %178
  %182 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %179, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %182) #11
  %183 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %179, i64 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %181
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %179) #11
  %187 = bitcast %"class.blink::DOMWrapperWorld"* %179 to i8*
  call void @free(i8* %187) #11
  br label %188

188:                                              ; preds = %178, %181, %186
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #11
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  %189 = load %"class.v8::Context"*, %"class.v8::Context"** %35, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %189) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #11
  br label %190

190:                                              ; preds = %24, %25, %188
  %191 = phi %"class.blink::Animator"* [ %158, %188 ], [ null, %25 ], [ null, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  %192 = icmp eq %"class.blink::SerializedScriptValue"* %3, null
  br i1 %192, label %199, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = atomicrmw sub i32* %194, i32 1 acq_rel
  %196 = icmp eq i32 %195, 1
  br i1 %196, label %197, label %199

197:                                              ; preds = %193
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %3) #11
  %198 = bitcast %"class.blink::SerializedScriptValue"* %3 to i8*
  call void @free(i8* %198) #11
  br label %199

199:                                              ; preds = %190, %193, %197
  ret %"class.blink::Animator"* %191
}

; Function Attrs: nounwind
declare void @_ZN5blink23WorkletAnimationOptionsD1Ev(%"class.blink::WorkletAnimationOptions"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27AnimationWorkletGlobalScope19UpdateAnimatorsListERKN2cc21AnimationWorkletInputE(%"class.blink::AnimationWorkletGlobalScope"*, %"struct.cc::AnimationWorkletInput"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::WorkletAnimationOptions", align 8
  %8 = alloca %"class.WTF::Vector.1248", align 8
  %9 = alloca %"class.WTF::Vector.1243", align 8
  %10 = alloca [15 x i8], align 1
  %11 = alloca %"class.blink::WorkletAnimationOptions", align 8
  %12 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 11, i32 0, i32 0
  %13 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::WorkerOrWorkletScriptController", %"class.blink::WorkerOrWorkletScriptController"* %13, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %14, align 8
  %16 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %15, i64 0, i32 0
  %20 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  %21 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %18, %"class.v8::Isolate"* %21) #11
  %22 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.v8::Context"*, %"class.v8::Context"** %22, align 8
  %24 = icmp eq %"class.v8::Context"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.blink::ScriptState"* %15 to %"class.v8::internal::Isolate"**
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8
  %28 = bitcast %"class.v8::Context"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %27, i64 %29) #11
  %31 = bitcast i64* %30 to %"class.v8::Context"*
  br label %32

32:                                               ; preds = %2, %25
  %33 = phi %"class.v8::Context"* [ %31, %25 ], [ null, %2 ]
  store %"class.v8::Context"* %33, %"class.v8::Context"** %17, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %33) #11
  %34 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %1, i64 0, i32 2, i32 0, i32 0
  %35 = load %"struct.cc::WorkletAnimationId"*, %"struct.cc::WorkletAnimationId"** %34, align 8
  %36 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %1, i64 0, i32 2, i32 0, i32 1
  %37 = load %"struct.cc::WorkletAnimationId"*, %"struct.cc::WorkletAnimationId"** %36, align 8
  %38 = icmp eq %"struct.cc::WorkletAnimationId"* %35, %37
  br i1 %38, label %44, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3, i32 0
  %41 = getelementptr inbounds %"class.WTF::HashMap.755", %"class.WTF::HashMap.755"* %40, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::HashMap.755", %"class.WTF::HashMap.755"* %40, i64 0, i32 0
  br label %75

44:                                               ; preds = %146, %32
  %45 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %1, i64 0, i32 0, i32 0, i32 0
  %46 = load %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %45, align 8
  %47 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %1, i64 0, i32 0, i32 0, i32 1
  %48 = load %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %47, align 8
  %49 = icmp eq %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %46, %48
  br i1 %49, label %149, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.WTF::String"* %6 to i8*
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %53 = bitcast %"class.blink::WorkletAnimationOptions"* %7 to i8*
  %54 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %7, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %7, i64 0, i32 1
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  %57 = bitcast %class.scoped_refptr.778* %55 to i64*
  %58 = getelementptr inbounds %class.scoped_refptr.778, %class.scoped_refptr.778* %55, i64 0, i32 0
  %59 = bitcast %"class.WTF::Vector.1248"* %8 to i8*
  %60 = getelementptr inbounds %"class.WTF::Vector.1248", %"class.WTF::Vector.1248"* %8, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.WTF::Vector.1248", %"class.WTF::Vector.1248"* %8, i64 0, i32 0, i32 0, i32 2
  %62 = bitcast %"class.WTF::Vector.1243"* %9 to i8*
  %63 = getelementptr inbounds %"class.WTF::Vector.1243", %"class.WTF::Vector.1243"* %9, i64 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.WTF::Vector.1243", %"class.WTF::Vector.1243"* %9, i64 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::Vector.1243", %"class.WTF::Vector.1243"* %9, i64 0, i32 0, i32 0, i32 2
  %66 = getelementptr inbounds [15 x i8], [15 x i8]* %10, i64 0, i64 0
  %67 = bitcast %"class.WTF::Vector.1243"* %9 to i64*
  %68 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %11, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %11, i64 0, i32 1, i32 0
  %70 = bitcast %"class.logging::CheckError"* %4 to i8*
  %71 = bitcast %"class.WTF::Vector.1248"* %8 to i8**
  %72 = bitcast %"class.blink::WorkletAnimationOptions"* %7 to i8*
  %73 = bitcast %"class.WTF::Vector.1248"* %8 to i8*
  %74 = bitcast %"class.WTF::Vector.1243"* %9 to i8*
  br label %151

75:                                               ; preds = %39, %146
  %76 = phi %"struct.cc::WorkletAnimationId"* [ %35, %39 ], [ %147, %146 ]
  %77 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %41, align 8
  %78 = icmp eq %"struct.WTF::KeyValuePair.758"* %77, null
  %79 = load i32, i32* %42, align 8
  br i1 %78, label %137, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"struct.cc::WorkletAnimationId", %"struct.cc::WorkletAnimationId"* %76, i64 0, i32 1
  %82 = add i32 %79, -1
  %83 = zext i32 %82 to i64
  %84 = load i32, i32* %81, align 4
  %85 = shl i32 %84, 15
  %86 = xor i32 %85, -1
  %87 = add i32 %84, %86
  %88 = lshr i32 %87, 10
  %89 = xor i32 %88, %87
  %90 = mul i32 %89, 9
  %91 = lshr i32 %90, 6
  %92 = xor i32 %91, %90
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, -1
  %95 = add i32 %92, %94
  %96 = lshr i32 %95, 16
  %97 = xor i32 %96, %95
  %98 = and i32 %97, %82
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %77, i64 %99
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %100, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, %84
  br i1 %103, label %132, label %104

104:                                              ; preds = %80
  %105 = xor i32 %97, -1
  %106 = lshr i32 %95, 23
  %107 = add i32 %106, %105
  %108 = shl i32 %107, 12
  %109 = xor i32 %108, %107
  %110 = lshr i32 %109, 7
  %111 = xor i32 %110, %109
  %112 = shl i32 %111, 2
  %113 = xor i32 %112, %111
  %114 = lshr i32 %113, 20
  %115 = xor i32 %114, %113
  %116 = or i32 %115, 1
  %117 = zext i32 %116 to i64
  br label %118

118:                                              ; preds = %123, %104
  %119 = phi i32 [ %102, %104 ], [ %130, %123 ]
  %120 = phi i64 [ %99, %104 ], [ %127, %123 ]
  %121 = phi i64 [ 0, %104 ], [ %125, %123 ]
  %122 = icmp eq i32 %119, 0
  br i1 %122, label %137, label %123

123:                                              ; preds = %118
  %124 = icmp eq i64 %121, 0
  %125 = select i1 %124, i64 %117, i64 %121
  %126 = add i64 %125, %120
  %127 = and i64 %126, %83
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %77, i64 %127
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %128, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, %84
  br i1 %131, label %132, label %118

132:                                              ; preds = %123, %80
  %133 = phi %"struct.WTF::KeyValuePair.758"* [ %100, %80 ], [ %128, %123 ]
  %134 = icmp eq %"struct.WTF::KeyValuePair.758"* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = zext i32 %79 to i64
  br label %140

137:                                              ; preds = %118, %132, %75
  %138 = zext i32 %79 to i64
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %77, i64 %138
  br label %140

140:                                              ; preds = %137, %135
  %141 = phi i64 [ %136, %135 ], [ %138, %137 ]
  %142 = phi %"struct.WTF::KeyValuePair.758"* [ %133, %135 ], [ %139, %137 ]
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %77, i64 %141
  %144 = icmp eq %"struct.WTF::KeyValuePair.758"* %143, %142
  br i1 %144, label %146, label %145

145:                                              ; preds = %140
  call void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.756"* %43, %"struct.WTF::KeyValuePair.758"* %142) #11
  br label %146

146:                                              ; preds = %140, %145
  %147 = getelementptr inbounds %"struct.cc::WorkletAnimationId", %"struct.cc::WorkletAnimationId"* %76, i64 1
  %148 = icmp eq %"struct.cc::WorkletAnimationId"* %147, %37
  br i1 %148, label %44, label %75

149:                                              ; preds = %313, %44
  %150 = load %"class.v8::Context"*, %"class.v8::Context"** %17, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %150) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  ret void

151:                                              ; preds = %50, %313
  %152 = phi %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* [ %46, %50 ], [ %314, %313 ]
  %153 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %152, i64 0, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %52, align 8
  %155 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %152, i64 0, i32 1
  %156 = bitcast %"class.std::__1::basic_string"* %155 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %165

160:                                              ; preds = %151
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %152, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %164 = load i64, i64* %163, align 8
  br label %168

165:                                              ; preds = %151
  %166 = bitcast %"class.std::__1::basic_string"* %155 to i8*
  %167 = zext i8 %158 to i64
  br label %168

168:                                              ; preds = %160, %165
  %169 = phi i8* [ %162, %160 ], [ %166, %165 ]
  %170 = phi i64 [ %164, %160 ], [ %167, %165 ]
  %171 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %169, i64 %170) #11
  store %"class.WTF::StringImpl"* %171, %"class.WTF::StringImpl"** %52, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 16, i1 false)
  call void @_ZN5blink23WorkletAnimationOptionsC1E13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::WorkletAnimationOptions"* nonnull %7, %"class.blink::SerializedScriptValue"* null) #11
  %172 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %152, i64 0, i32 3, i32 0, i32 0, i32 0
  %173 = load %"class.cc::AnimationOptions"*, %"class.cc::AnimationOptions"** %172, align 8
  %174 = icmp eq %"class.cc::AnimationOptions"* %173, null
  br i1 %174, label %196, label %175

175:                                              ; preds = %168
  %176 = getelementptr inbounds %"class.cc::AnimationOptions", %"class.cc::AnimationOptions"* %173, i64 1
  %177 = bitcast %"class.cc::AnimationOptions"* %176 to %"class.blink::SerializedScriptValue"**
  %178 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %177, align 8
  %179 = icmp eq %"class.blink::SerializedScriptValue"* %178, null
  br i1 %179, label %186, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw add i32* %181, i32 1 monotonic
  %183 = icmp sgt i32 %182, 0
  br i1 %183, label %186, label %184

184:                                              ; preds = %180
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0)) #11
  %185 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %186

186:                                              ; preds = %184, %180, %175
  %187 = ptrtoint %"class.blink::SerializedScriptValue"* %178 to i64
  %188 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %58, align 8
  store i64 %187, i64* %57, align 8
  %189 = icmp eq %"class.blink::SerializedScriptValue"* %188, null
  br i1 %189, label %196, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = atomicrmw sub i32* %191, i32 1 acq_rel
  %193 = icmp eq i32 %192, 1
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %188) #11
  %195 = bitcast %"class.blink::SerializedScriptValue"* %188 to i8*
  call void @free(i8* %195) #11
  br label %196

196:                                              ; preds = %168, %194, %190, %186
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #11
  %197 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %152, i64 0, i32 4, i32 0, i32 0, i32 0
  %198 = bitcast %"class.cc::AnimationEffectTimings"** %197 to %"class.blink::WorkletAnimationEffectTimings"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 16, i1 false)
  %199 = load %"class.blink::WorkletAnimationEffectTimings"*, %"class.blink::WorkletAnimationEffectTimings"** %198, align 8
  %200 = getelementptr inbounds %"class.blink::WorkletAnimationEffectTimings", %"class.blink::WorkletAnimationEffectTimings"* %199, i64 0, i32 1, i32 0
  %201 = load %"class.base::RefCountedData.1288"*, %"class.base::RefCountedData.1288"** %200, align 8
  %202 = getelementptr inbounds %"class.base::RefCountedData.1288", %"class.base::RefCountedData.1288"* %201, i64 0, i32 1
  call void @_ZN3WTF6VectorIN5blink6TimingELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector.1248"* nonnull %8, %"class.WTF::Vector.1248"* dereferenceable(16) %202)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 16, i1 false)
  %203 = load i32, i32* %61, align 4
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %66)
  store %"class.absl::optional.849"* null, %"class.absl::optional.849"** %63, align 8
  store i32 0, i32* %64, align 8
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %196
  store i32 0, i32* %65, align 4
  br label %244

206:                                              ; preds = %196
  %207 = zext i32 %203 to i64
  %208 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIN4base9TimeDeltaEEEEEmm(i64 %207) #11
  %209 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %208, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4absl8optionalIN4base9TimeDeltaEEEEEPKcv, i64 0, i64 0)) #11
  %210 = ptrtoint i8* %209 to i64
  store atomic i64 %210, i64* %67 monotonic, align 8
  %211 = lshr i64 %208, 4
  %212 = trunc i64 %211 to i32
  store i32 %212, i32* %64, align 8
  %213 = bitcast i8* %209 to %"class.absl::optional.849"*
  store i32 %203, i32* %65, align 4
  %214 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %213, i64 %207
  %215 = shl nuw nsw i64 %207, 4
  %216 = add nsw i64 %215, -16
  %217 = lshr exact i64 %216, 4
  %218 = add nuw nsw i64 %217, 1
  %219 = and i64 %218, 3
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %229, label %221

221:                                              ; preds = %206, %221
  %222 = phi %"class.absl::optional.849"* [ %226, %221 ], [ %213, %206 ]
  %223 = phi i64 [ %227, %221 ], [ %219, %206 ]
  %224 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %222, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %224, align 8
  %225 = getelementptr inbounds i8, i8* %224, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %225, i8* nonnull align 1 %66, i64 15, i1 false)
  %226 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %222, i64 1
  %227 = add i64 %223, -1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %221, !llvm.loop !4

229:                                              ; preds = %221, %206
  %230 = phi %"class.absl::optional.849"* [ %213, %206 ], [ %226, %221 ]
  %231 = icmp ult i64 %216, 48
  br i1 %231, label %244, label %232

232:                                              ; preds = %229, %232
  %233 = phi %"class.absl::optional.849"* [ %242, %232 ], [ %230, %229 ]
  %234 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %234, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %235, i8* nonnull align 1 %66, i64 15, i1 false)
  %236 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %233, i64 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %236, align 8
  %237 = getelementptr inbounds i8, i8* %236, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %237, i8* nonnull align 1 %66, i64 15, i1 false)
  %238 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %233, i64 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %238, align 8
  %239 = getelementptr inbounds i8, i8* %238, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %239, i8* nonnull align 1 %66, i64 15, i1 false)
  %240 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %233, i64 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %240, align 8
  %241 = getelementptr inbounds i8, i8* %240, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %241, i8* nonnull align 1 %66, i64 15, i1 false)
  %242 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %233, i64 4
  %243 = icmp eq %"class.absl::optional.849"* %242, %214
  br i1 %243, label %244, label %232

244:                                              ; preds = %229, %232, %205
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %66)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink23WorkletAnimationOptionsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %245 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %54, align 8
  store %"class.blink::SerializedScriptValue"* %245, %"class.blink::SerializedScriptValue"** %69, align 8
  %246 = icmp eq %"class.blink::SerializedScriptValue"* %245, null
  br i1 %246, label %253, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %245, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = atomicrmw add i32* %248, i32 1 monotonic
  %250 = icmp sgt i32 %249, 0
  br i1 %250, label %253, label %251

251:                                              ; preds = %247
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0)) #11
  %252 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #11
  br label %253

253:                                              ; preds = %244, %247, %251
  %254 = call %"class.blink::Animator"* @_ZN5blink27AnimationWorkletGlobalScope17CreateAnimatorForEiRKN3WTF6StringENS_23WorkletAnimationOptionsE13scoped_refptrINS_21SerializedScriptValueEERKNS1_6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS1_18PartitionAllocatorEEERKNS9_INS_6TimingELj0ESF_EE(%"class.blink::AnimationWorkletGlobalScope"* %0, i32 %154, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::WorkletAnimationOptions"* nonnull %11, %"class.blink::SerializedScriptValue"* null, %"class.WTF::Vector.1243"* nonnull dereferenceable(16) %9, %"class.WTF::Vector.1248"* nonnull dereferenceable(16) %8)
  call void @_ZN5blink23WorkletAnimationOptionsD1Ev(%"class.blink::WorkletAnimationOptions"* nonnull %11) #11
  %255 = load %"class.absl::optional.849"*, %"class.absl::optional.849"** %63, align 8
  %256 = icmp eq %"class.absl::optional.849"* %255, null
  br i1 %256, label %263, label %257, !prof !6

257:                                              ; preds = %253
  %258 = load i32, i32* %65, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %261, label %260, !prof !3

260:                                              ; preds = %257
  store i32 0, i32* %65, align 4
  br label %261

261:                                              ; preds = %260, %257
  %262 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %262) #11
  store %"class.absl::optional.849"* null, %"class.absl::optional.849"** %63, align 8
  br label %263

263:                                              ; preds = %253, %261
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #11
  %264 = load %"struct.blink::Timing"*, %"struct.blink::Timing"** %60, align 8
  %265 = icmp eq %"struct.blink::Timing"* %264, null
  br i1 %265, label %297, label %266, !prof !6

266:                                              ; preds = %263
  %267 = bitcast %"struct.blink::Timing"* %264 to i8*
  %268 = load i32, i32* %61, align 4
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %295, label %270, !prof !3

270:                                              ; preds = %266
  %271 = zext i32 %268 to i64
  %272 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %264, i64 %271
  br label %273

273:                                              ; preds = %290, %270
  %274 = phi %"struct.blink::Timing"* [ %291, %290 ], [ %264, %270 ]
  %275 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %274, i64 0, i32 9, i32 0
  %276 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %275, align 8
  %277 = icmp eq %"class.blink::TimingFunction"* %276, null
  br i1 %277, label %290, label %278

278:                                              ; preds = %273
  %279 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %276, i64 0, i32 1, i32 0
  %280 = getelementptr inbounds %"class.base::RefCountedThreadSafe.861", %"class.base::RefCountedThreadSafe.861"* %279, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = atomicrmw sub i32* %280, i32 1 acq_rel
  %282 = icmp eq i32 %281, 1
  br i1 %282, label %283, label %290

283:                                              ; preds = %278
  %284 = getelementptr inbounds %"class.base::RefCountedThreadSafe.861", %"class.base::RefCountedThreadSafe.861"* %279, i64 -2
  %285 = bitcast %"class.base::RefCountedThreadSafe.861"* %284 to %"class.blink::TimingFunction"*
  %286 = bitcast %"class.base::RefCountedThreadSafe.861"* %284 to void (%"class.blink::TimingFunction"*)***
  %287 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %286, align 8
  %288 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %287, i64 1
  %289 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %288, align 8
  call void %289(%"class.blink::TimingFunction"* nonnull %285) #11
  br label %290

290:                                              ; preds = %283, %278, %273
  %291 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %274, i64 1
  %292 = icmp eq %"struct.blink::Timing"* %291, %272
  br i1 %292, label %293, label %273

293:                                              ; preds = %290
  store i32 0, i32* %61, align 4
  %294 = load i8*, i8** %71, align 8
  br label %295

295:                                              ; preds = %293, %266
  %296 = phi i8* [ %294, %293 ], [ %267, %266 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %296) #11
  store %"struct.blink::Timing"* null, %"struct.blink::Timing"** %60, align 8
  br label %297

297:                                              ; preds = %263, %295
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #11
  call void @_ZN5blink23WorkletAnimationOptionsD1Ev(%"class.blink::WorkletAnimationOptions"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #11
  %298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %299 = icmp eq %"class.WTF::StringImpl"* %298, null
  br i1 %299, label %313, label %300

300:                                              ; preds = %297
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load atomic i32, i32* %301 monotonic, align 4
  %303 = and i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 0
  %306 = load i32, i32* %305, align 4
  br i1 %304, label %307, label %309

307:                                              ; preds = %300
  %308 = add i32 %306, -1
  store i32 %308, i32* %305, align 4
  br label %309

309:                                              ; preds = %307, %300
  %310 = phi i32 [ %308, %307 ], [ %306, %300 ]
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %313

312:                                              ; preds = %309
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %298) #11
  br label %313

313:                                              ; preds = %297, %309, %312
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  %314 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %152, i64 1
  %315 = icmp eq %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %314, %48
  br i1 %315, label %149, label %151
}

declare void @_ZN5blink23WorkletAnimationOptionsC1E13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::WorkletAnimationOptions"*, %"class.blink::SerializedScriptValue"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6TimingELj0ENS_18PartitionAllocatorEEC2ERKS4_(%"class.WTF::Vector.1248"*, %"class.WTF::Vector.1248"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1248", %"class.WTF::Vector.1248"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1248", %"class.WTF::Vector.1248"* %0, i64 0, i32 0, i32 0, i32 0
  store %"struct.blink::Timing"* null, %"struct.blink::Timing"** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1248", %"class.WTF::Vector.1248"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %7, align 8
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %2
  %10 = zext i32 %5 to i64
  %11 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6TimingEEEmm(i64 %10) #11
  %12 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %11, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6TimingEEEPKcv, i64 0, i64 0)) #11
  %13 = ptrtoint i8* %12 to i64
  %14 = bitcast %"class.WTF::Vector.1248"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = udiv i64 %11, 80
  %16 = trunc i64 %15 to i32
  store i32 %16, i32* %7, align 8
  %17 = bitcast i8* %12 to %"struct.blink::Timing"*
  br label %18

18:                                               ; preds = %2, %9
  %19 = phi %"struct.blink::Timing"* [ null, %2 ], [ %17, %9 ]
  %20 = getelementptr inbounds %"class.WTF::Vector.1248", %"class.WTF::Vector.1248"* %1, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.1248", %"class.WTF::Vector.1248"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"class.WTF::Vector.1248", %"class.WTF::Vector.1248"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::Timing"*, %"struct.blink::Timing"** %23, align 8
  %25 = load i32, i32* %20, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %53, label %29

29:                                               ; preds = %18
  %30 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %31

31:                                               ; preds = %46, %29
  %32 = phi %"struct.blink::Timing"* [ %19, %29 ], [ %50, %46 ]
  %33 = phi %"struct.blink::Timing"* [ %24, %29 ], [ %51, %46 ]
  %34 = bitcast %"struct.blink::Timing"* %32 to i8*
  %35 = bitcast %"struct.blink::Timing"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 60, i1 false) #11
  %36 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %33, i64 0, i32 9, i32 0
  %37 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %32, i64 0, i32 9, i32 0
  store %"class.blink::TimingFunction"* %37, %"class.blink::TimingFunction"** %38, align 8
  %39 = icmp eq %"class.blink::TimingFunction"* %37, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0)) #11
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  br label %46

46:                                               ; preds = %44, %40, %31
  %47 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %32, i64 0, i32 10
  %48 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %33, i64 0, i32 10
  %49 = load i16, i16* %48, align 8
  store i16 %49, i16* %47, align 8
  %50 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %32, i64 1
  %51 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %33, i64 1
  %52 = icmp eq %"struct.blink::Timing"* %51, %27
  br i1 %52, label %53, label %31

53:                                               ; preds = %46, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27AnimationWorkletGlobalScope15UpdateAnimatorsERKN2cc21AnimationWorkletInputEPNS1_22AnimationWorkletOutputEPFbPNS_8AnimatorEE(%"class.blink::AnimationWorkletGlobalScope"* nocapture readonly, %"struct.cc::AnimationWorkletInput"* nocapture readonly dereferenceable(72), %"struct.cc::AnimationWorkletOutput"*, i1 (%"class.blink::Animator"*)* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.cc::AnimationWorkletOutput::AnimationState", align 8
  %6 = alloca %"struct.cc::AnimationWorkletOutput::AnimationState", align 8
  %7 = alloca %"class.blink::ScriptState::Scope", align 8
  %8 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 11, i32 0, i32 0
  %9 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::WorkerOrWorkletScriptController", %"class.blink::WorkerOrWorkletScriptController"* %9, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 0
  %13 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %14 = bitcast %"class.blink::ScriptState::Scope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %7, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %7, i64 0, i32 0
  %17 = bitcast %"class.blink::ScriptState::Scope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %16, %"class.v8::Isolate"* %18) #11
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.v8::Context"*, %"class.v8::Context"** %19, align 8
  %21 = icmp eq %"class.v8::Context"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %4
  %23 = bitcast %"class.blink::ScriptState"* %11 to %"class.v8::internal::Isolate"**
  %24 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %23, align 8
  %25 = bitcast %"class.v8::Context"* %20 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %24, i64 %26) #11
  %28 = bitcast i64* %27 to %"class.v8::Context"*
  br label %29

29:                                               ; preds = %4, %22
  %30 = phi %"class.v8::Context"* [ %28, %22 ], [ null, %4 ]
  store %"class.v8::Context"* %30, %"class.v8::Context"** %15, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %30) #11
  %31 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %1, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %31, align 8
  %33 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %1, i64 0, i32 0, i32 0, i32 1
  %34 = load %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"** %33, align 8
  %35 = icmp eq %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %32, %34
  br i1 %35, label %44, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %39 = bitcast %"struct.cc::AnimationWorkletOutput::AnimationState"* %5 to i8*
  %40 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput", %"struct.cc::AnimationWorkletOutput"* %2, i64 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput", %"struct.cc::AnimationWorkletOutput"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput", %"struct.cc::AnimationWorkletOutput"* %2, i64 0, i32 0
  %43 = bitcast %"struct.cc::AnimationWorkletOutput::AnimationState"** %40 to i64*
  br label %58

44:                                               ; preds = %139, %29
  %45 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %1, i64 0, i32 1, i32 0, i32 0
  %46 = load %"struct.cc::AnimationWorkletInput::UpdateState"*, %"struct.cc::AnimationWorkletInput::UpdateState"** %45, align 8
  %47 = getelementptr inbounds %"struct.cc::AnimationWorkletInput", %"struct.cc::AnimationWorkletInput"* %1, i64 0, i32 1, i32 0, i32 1
  %48 = load %"struct.cc::AnimationWorkletInput::UpdateState"*, %"struct.cc::AnimationWorkletInput::UpdateState"** %47, align 8
  %49 = icmp eq %"struct.cc::AnimationWorkletInput::UpdateState"* %46, %48
  br i1 %49, label %142, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = bitcast %"struct.cc::AnimationWorkletOutput::AnimationState"* %6 to i8*
  %54 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput", %"struct.cc::AnimationWorkletOutput"* %2, i64 0, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput", %"struct.cc::AnimationWorkletOutput"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput", %"struct.cc::AnimationWorkletOutput"* %2, i64 0, i32 0
  %57 = bitcast %"struct.cc::AnimationWorkletOutput::AnimationState"** %54 to i64*
  br label %144

58:                                               ; preds = %36, %139
  %59 = phi %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* [ %32, %36 ], [ %140, %139 ]
  %60 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %59, i64 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %37, align 8
  %63 = icmp eq %"struct.WTF::KeyValuePair.758"* %62, null
  br i1 %63, label %139, label %64

64:                                               ; preds = %58
  %65 = load i32, i32* %38, align 8
  %66 = add i32 %65, -1
  %67 = zext i32 %66 to i64
  %68 = shl i32 %61, 15
  %69 = xor i32 %68, -1
  %70 = add i32 %61, %69
  %71 = lshr i32 %70, 10
  %72 = xor i32 %71, %70
  %73 = mul i32 %72, 9
  %74 = lshr i32 %73, 6
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 11
  %77 = xor i32 %76, -1
  %78 = add i32 %75, %77
  %79 = lshr i32 %78, 16
  %80 = xor i32 %79, %78
  %81 = and i32 %66, %80
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %62, i64 %82
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %83, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, %61
  br i1 %86, label %115, label %87

87:                                               ; preds = %64
  %88 = xor i32 %80, -1
  %89 = lshr i32 %78, 23
  %90 = add i32 %89, %88
  %91 = shl i32 %90, 12
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 7
  %94 = xor i32 %93, %92
  %95 = shl i32 %94, 2
  %96 = xor i32 %95, %94
  %97 = lshr i32 %96, 20
  %98 = xor i32 %97, %96
  %99 = or i32 %98, 1
  %100 = zext i32 %99 to i64
  br label %101

101:                                              ; preds = %106, %87
  %102 = phi i32 [ %85, %87 ], [ %113, %106 ]
  %103 = phi i64 [ %82, %87 ], [ %110, %106 ]
  %104 = phi i64 [ 0, %87 ], [ %108, %106 ]
  %105 = icmp eq i32 %102, 0
  br i1 %105, label %139, label %106

106:                                              ; preds = %101
  %107 = icmp eq i64 %104, 0
  %108 = select i1 %107, i64 %100, i64 %104
  %109 = add i64 %108, %103
  %110 = and i64 %109, %67
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %62, i64 %110
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %111, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, %61
  br i1 %114, label %115, label %101

115:                                              ; preds = %106, %64
  %116 = phi %"struct.WTF::KeyValuePair.758"* [ %83, %64 ], [ %111, %106 ]
  %117 = icmp eq %"struct.WTF::KeyValuePair.758"* %116, null
  br i1 %117, label %139, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %116, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::Animator"*, %"class.blink::Animator"** %119, align 8
  %121 = icmp eq %"class.blink::Animator"* %120, null
  br i1 %121, label %139, label %122

122:                                              ; preds = %118
  %123 = call zeroext i1 %3(%"class.blink::Animator"* nonnull %120) #11
  br i1 %123, label %124, label %139

124:                                              ; preds = %122
  %125 = bitcast %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %59 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %59, i64 0, i32 2
  %128 = load double, double* %127, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 32, i1 false) #11
  call void @_ZN2cc22AnimationWorkletOutput14AnimationStateC1ENS_18WorkletAnimationIdE(%"struct.cc::AnimationWorkletOutput::AnimationState"* nonnull %5, i64 %126) #11
  %129 = call zeroext i1 @_ZN5blink8Animator7AnimateEPN2v87IsolateEdPN2cc22AnimationWorkletOutput14AnimationStateE(%"class.blink::Animator"* nonnull %120, %"class.v8::Isolate"* %13, double %128, %"struct.cc::AnimationWorkletOutput::AnimationState"* nonnull %5) #11
  br i1 %129, label %130, label %138

130:                                              ; preds = %124
  %131 = load %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"** %40, align 8
  %132 = load %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"** %41, align 8
  %133 = icmp ult %"struct.cc::AnimationWorkletOutput::AnimationState"* %131, %132
  br i1 %133, label %134, label %137

134:                                              ; preds = %130
  call void @_ZN2cc22AnimationWorkletOutput14AnimationStateC1ERKS1_(%"struct.cc::AnimationWorkletOutput::AnimationState"* %131, %"struct.cc::AnimationWorkletOutput::AnimationState"* nonnull dereferenceable(32) %5) #11
  %135 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %131, i64 1
  %136 = ptrtoint %"struct.cc::AnimationWorkletOutput::AnimationState"* %135 to i64
  store i64 %136, i64* %43, align 8
  br label %138

137:                                              ; preds = %130
  call void @_ZNSt3__16vectorIN2cc22AnimationWorkletOutput14AnimationStateENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.1290"* %42, %"struct.cc::AnimationWorkletOutput::AnimationState"* nonnull dereferenceable(32) %5) #11
  br label %138

138:                                              ; preds = %124, %134, %137
  call void @_ZN2cc22AnimationWorkletOutput14AnimationStateD1Ev(%"struct.cc::AnimationWorkletOutput::AnimationState"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #11
  br label %139

139:                                              ; preds = %101, %58, %115, %118, %122, %138
  %140 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::AddAndUpdateState", %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %59, i64 1
  %141 = icmp eq %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* %140, %34
  br i1 %141, label %44, label %58

142:                                              ; preds = %225, %44
  %143 = load %"class.v8::Context"*, %"class.v8::Context"** %15, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %143) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #11
  ret void

144:                                              ; preds = %50, %225
  %145 = phi %"struct.cc::AnimationWorkletInput::UpdateState"* [ %46, %50 ], [ %226, %225 ]
  %146 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::UpdateState", %"struct.cc::AnimationWorkletInput::UpdateState"* %145, i64 0, i32 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %51, align 8
  %149 = icmp eq %"struct.WTF::KeyValuePair.758"* %148, null
  br i1 %149, label %225, label %150

150:                                              ; preds = %144
  %151 = load i32, i32* %52, align 8
  %152 = add i32 %151, -1
  %153 = zext i32 %152 to i64
  %154 = shl i32 %147, 15
  %155 = xor i32 %154, -1
  %156 = add i32 %147, %155
  %157 = lshr i32 %156, 10
  %158 = xor i32 %157, %156
  %159 = mul i32 %158, 9
  %160 = lshr i32 %159, 6
  %161 = xor i32 %160, %159
  %162 = shl i32 %161, 11
  %163 = xor i32 %162, -1
  %164 = add i32 %161, %163
  %165 = lshr i32 %164, 16
  %166 = xor i32 %165, %164
  %167 = and i32 %152, %166
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %148, i64 %168
  %170 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %169, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, %147
  br i1 %172, label %201, label %173

173:                                              ; preds = %150
  %174 = xor i32 %166, -1
  %175 = lshr i32 %164, 23
  %176 = add i32 %175, %174
  %177 = shl i32 %176, 12
  %178 = xor i32 %177, %176
  %179 = lshr i32 %178, 7
  %180 = xor i32 %179, %178
  %181 = shl i32 %180, 2
  %182 = xor i32 %181, %180
  %183 = lshr i32 %182, 20
  %184 = xor i32 %183, %182
  %185 = or i32 %184, 1
  %186 = zext i32 %185 to i64
  br label %187

187:                                              ; preds = %192, %173
  %188 = phi i32 [ %171, %173 ], [ %199, %192 ]
  %189 = phi i64 [ %168, %173 ], [ %196, %192 ]
  %190 = phi i64 [ 0, %173 ], [ %194, %192 ]
  %191 = icmp eq i32 %188, 0
  br i1 %191, label %225, label %192

192:                                              ; preds = %187
  %193 = icmp eq i64 %190, 0
  %194 = select i1 %193, i64 %186, i64 %190
  %195 = add i64 %194, %189
  %196 = and i64 %195, %153
  %197 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %148, i64 %196
  %198 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %197, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, %147
  br i1 %200, label %201, label %187

201:                                              ; preds = %192, %150
  %202 = phi %"struct.WTF::KeyValuePair.758"* [ %169, %150 ], [ %197, %192 ]
  %203 = icmp eq %"struct.WTF::KeyValuePair.758"* %202, null
  br i1 %203, label %225, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %202, i64 0, i32 1, i32 0, i32 0
  %206 = load %"class.blink::Animator"*, %"class.blink::Animator"** %205, align 8
  %207 = icmp eq %"class.blink::Animator"* %206, null
  br i1 %207, label %225, label %208

208:                                              ; preds = %204
  %209 = call zeroext i1 %3(%"class.blink::Animator"* nonnull %206) #11
  br i1 %209, label %210, label %225

210:                                              ; preds = %208
  %211 = bitcast %"struct.cc::AnimationWorkletInput::UpdateState"* %145 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::UpdateState", %"struct.cc::AnimationWorkletInput::UpdateState"* %145, i64 0, i32 1
  %214 = load double, double* %213, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 32, i1 false) #11
  call void @_ZN2cc22AnimationWorkletOutput14AnimationStateC1ENS_18WorkletAnimationIdE(%"struct.cc::AnimationWorkletOutput::AnimationState"* nonnull %6, i64 %212) #11
  %215 = call zeroext i1 @_ZN5blink8Animator7AnimateEPN2v87IsolateEdPN2cc22AnimationWorkletOutput14AnimationStateE(%"class.blink::Animator"* nonnull %206, %"class.v8::Isolate"* %13, double %214, %"struct.cc::AnimationWorkletOutput::AnimationState"* nonnull %6) #11
  br i1 %215, label %216, label %224

216:                                              ; preds = %210
  %217 = load %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"** %54, align 8
  %218 = load %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"** %55, align 8
  %219 = icmp ult %"struct.cc::AnimationWorkletOutput::AnimationState"* %217, %218
  br i1 %219, label %220, label %223

220:                                              ; preds = %216
  call void @_ZN2cc22AnimationWorkletOutput14AnimationStateC1ERKS1_(%"struct.cc::AnimationWorkletOutput::AnimationState"* %217, %"struct.cc::AnimationWorkletOutput::AnimationState"* nonnull dereferenceable(32) %6) #11
  %221 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %217, i64 1
  %222 = ptrtoint %"struct.cc::AnimationWorkletOutput::AnimationState"* %221 to i64
  store i64 %222, i64* %57, align 8
  br label %224

223:                                              ; preds = %216
  call void @_ZNSt3__16vectorIN2cc22AnimationWorkletOutput14AnimationStateENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.1290"* %56, %"struct.cc::AnimationWorkletOutput::AnimationState"* nonnull dereferenceable(32) %6) #11
  br label %224

224:                                              ; preds = %210, %220, %223
  call void @_ZN2cc22AnimationWorkletOutput14AnimationStateD1Ev(%"struct.cc::AnimationWorkletOutput::AnimationState"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #11
  br label %225

225:                                              ; preds = %187, %144, %201, %204, %208, %224
  %226 = getelementptr inbounds %"struct.cc::AnimationWorkletInput::UpdateState", %"struct.cc::AnimationWorkletInput::UpdateState"* %145, i64 1
  %227 = icmp eq %"struct.cc::AnimationWorkletInput::UpdateState"* %226, %48
  br i1 %227, label %142, label %144
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27AnimationWorkletGlobalScope31RegisterWithProxyClientIfNeededEv(%"class.blink::AnimationWorkletGlobalScope"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %16

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::WorkerClients"*, %"class.blink::WorkerClients"** %6, align 8
  %8 = tail call %"class.blink::AnimationWorkletProxyClient"* @_ZN5blink27AnimationWorkletProxyClient4FromEPNS_13WorkerClientsE(%"class.blink::WorkerClients"* %7) #11
  %9 = icmp eq %"class.blink::AnimationWorkletProxyClient"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::AnimationWorkletGlobalScope"* %0 to %"class.blink::WorkletGlobalScope"*
  %12 = bitcast %"class.blink::AnimationWorkletProxyClient"* %8 to void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)***
  %13 = load void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)**, void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)*, void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)** %13, i64 2
  %15 = load void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)*, void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)** %14, align 8
  tail call void %15(%"class.blink::AnimationWorkletProxyClient"* nonnull %8, %"class.blink::WorkletGlobalScope"* %11) #11
  store i8 1, i8* %2, align 8
  br label %16

16:                                               ; preds = %10, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27AnimationWorkletGlobalScope16registerAnimatorERKN3WTF6StringEPNS_21V8AnimatorConstructorERNS_14ExceptionStateE(%"class.blink::AnimationWorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::V8AnimatorConstructor"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.blink::CallbackMethodRetriever", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.blink::AnimatorDefinition"*, align 8
  %11 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %25

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %16 = load %"class.blink::WorkerClients"*, %"class.blink::WorkerClients"** %15, align 8
  %17 = tail call %"class.blink::AnimationWorkletProxyClient"* @_ZN5blink27AnimationWorkletProxyClient4FromEPNS_13WorkerClientsE(%"class.blink::WorkerClients"* %16) #11
  %18 = icmp eq %"class.blink::AnimationWorkletProxyClient"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::AnimationWorkletGlobalScope"* %0 to %"class.blink::WorkletGlobalScope"*
  %21 = bitcast %"class.blink::AnimationWorkletProxyClient"* %17 to void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)***
  %22 = load void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)**, void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)*, void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)** %22, i64 2
  %24 = load void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)*, void (%"class.blink::AnimationWorkletProxyClient"*, %"class.blink::WorkletGlobalScope"*)** %23, align 8
  tail call void %24(%"class.blink::AnimationWorkletProxyClient"* nonnull %17, %"class.blink::WorkletGlobalScope"* %20) #11
  store i8 1, i8* %11, align 8
  br label %25

25:                                               ; preds = %4, %14, %19
  %26 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 2, i32 0, i32 0
  %27 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EES1_EEbRKT0_(%"class.WTF::HashTable.749"* %26, %"class.WTF::String"* dereferenceable(8) %1) #11
  br i1 %27, label %28, label %178

28:                                               ; preds = %25
  %29 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %109, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %51

41:                                               ; preds = %34
  %42 = zext i32 %40 to i33
  %43 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #11
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !3

48:                                               ; preds = %41
  tail call void @llvm.trap() #11
  unreachable

49:                                               ; preds = %41
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %39, align 4
  br label %51

51:                                               ; preds = %49, %34
  %52 = phi i32 [ %50, %49 ], [ %40, %34 ]
  %53 = load atomic i32, i32* %35 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %66

56:                                               ; preds = %51
  %57 = zext i32 %52 to i33
  %58 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #11
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !3

63:                                               ; preds = %56
  tail call void @llvm.trap() #11
  unreachable

64:                                               ; preds = %56
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %39, align 4
  br label %66

66:                                               ; preds = %64, %51
  %67 = phi i32 [ %65, %64 ], [ %52, %51 ]
  %68 = load atomic i32, i32* %35 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  %72 = add i32 %67, -1
  store i32 %72, i32* %39, align 4
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi i32 [ %72, %71 ], [ %67, %66 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #11
  br label %77

77:                                               ; preds = %73, %76
  %78 = load atomic i32, i32* %35 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %92

81:                                               ; preds = %77
  %82 = load i32, i32* %39, align 4
  %83 = zext i32 %82 to i33
  %84 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #11
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !3

89:                                               ; preds = %81
  tail call void @llvm.trap() #11
  unreachable

90:                                               ; preds = %81
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %39, align 4
  br label %92

92:                                               ; preds = %77, %90
  %93 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([20 x i8]* @.str to i64), i64* %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %94, align 8
  %95 = load atomic i32, i32* %35 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %113

98:                                               ; preds = %92
  %99 = load i32, i32* %39, align 4
  %100 = zext i32 %99 to i33
  %101 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #11
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !3

106:                                              ; preds = %98
  tail call void @llvm.trap() #11
  unreachable

107:                                              ; preds = %98
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %39, align 4
  br label %113

109:                                              ; preds = %28
  %110 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([20 x i8]* @.str to i64), i64* %110, align 8
  %111 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i8** %112, align 8
  br label %125

113:                                              ; preds = %107, %92
  %114 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i8** %114, align 8
  %115 = load atomic i32, i32* %35 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = load i32, i32* %39, align 4
  br i1 %117, label %119, label %121

119:                                              ; preds = %113
  %120 = add i32 %118, -1
  store i32 %120, i32* %39, align 4
  br label %121

121:                                              ; preds = %119, %113
  %122 = phi i32 [ %120, %119 ], [ %118, %113 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #11
  br label %125

125:                                              ; preds = %109, %121, %124
  %126 = phi %"class.WTF::StringImpl"** [ %111, %109 ], [ %94, %121 ], [ %94, %124 ]
  %127 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %6)
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %127, %"class.WTF::StringImpl"** %128, align 8
  %129 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %130 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %129, align 8
  %131 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %130, align 8
  call void %131(%"class.blink::ExceptionState"* %3, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %5) #11
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %125
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #11
  br label %147

147:                                              ; preds = %125, %143, %146
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #11
  br label %163

163:                                              ; preds = %147, %159, %162
  br i1 %33, label %177, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #11
  br label %177

177:                                              ; preds = %163, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %292

178:                                              ; preds = %25
  %179 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %178, %182
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %292

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.blink::V8AnimatorConstructor", %"class.blink::V8AnimatorConstructor"* %2, i64 0, i32 0
  %189 = getelementptr inbounds %"class.blink::V8AnimatorConstructor", %"class.blink::V8AnimatorConstructor"* %2, i64 0, i32 0, i32 1
  %190 = bitcast %"class.blink::TraceWrapperV8Reference"* %189 to %"class.v8::Object"**
  %191 = load %"class.v8::Object"*, %"class.v8::Object"** %190, align 8
  %192 = icmp eq %"class.v8::Object"* %191, null
  br i1 %192, label %202, label %193

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.blink::V8AnimatorConstructor", %"class.blink::V8AnimatorConstructor"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %195 = bitcast %"class.blink::ScriptState"** %194 to %"class.v8::internal::Isolate"***
  %196 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %195, align 8
  %197 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %196, align 8
  %198 = bitcast %"class.v8::Object"* %191 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %197, i64 %199) #11
  %201 = bitcast i64* %200 to %"class.v8::Object"*
  br label %202

202:                                              ; preds = %187, %193
  %203 = phi %"class.v8::Object"* [ %201, %193 ], [ null, %187 ]
  %204 = tail call zeroext i1 @_ZNK2v86Object13IsConstructorEv(%"class.v8::Object"* %203) #11
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0)) #11
  br label %292

206:                                              ; preds = %202
  %207 = bitcast %"class.blink::CallbackMethodRetriever"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %207) #11
  %208 = getelementptr inbounds %"class.blink::CallbackMethodRetriever", %"class.blink::CallbackMethodRetriever"* %7, i64 0, i32 3, i32 0
  %209 = bitcast %"class.blink::CallbackMethodRetriever"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 -86, i64 32, i1 false)
  call void @_ZN5blink23CallbackMethodRetrieverC1EPNS_20CallbackFunctionBaseE(%"class.blink::CallbackMethodRetriever"* nonnull %7, %"class.blink::CallbackFunctionBase"* %188) #11
  %210 = call %"class.v8::Object"* @_ZN5blink23CallbackMethodRetriever18GetPrototypeObjectERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %7, %"class.blink::ExceptionState"* dereferenceable(72) %3) #11
  %211 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %212 = load i32, i32* %211, align 8
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %291

214:                                              ; preds = %206
  %215 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #11
  %216 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %217 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i8** %218, align 8
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 7, i32* %219, align 8
  %220 = load %"class.v8::Object"*, %"class.v8::Object"** %208, align 8
  %221 = call %"class.v8::Function"* @_ZN5blink23CallbackMethodRetriever18GetFunctionOrThrowEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %7, %"class.v8::Object"* %220, %"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.blink::ExceptionState"* dereferenceable(72) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #11
  %222 = load i32, i32* %211, align 8
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %291

224:                                              ; preds = %214
  %225 = bitcast %"class.v8::Function"* %221 to %"class.v8::Object"*
  %226 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #11
  %227 = bitcast i8* %226 to %"class.blink::V8AnimateCallback"*
  %228 = bitcast i8* %226 to %"class.blink::CallbackFunctionBase"*
  call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %228, %"class.v8::Object"* %225) #11
  %229 = bitcast i8* %226 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink17V8AnimateCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %229, align 8
  %230 = getelementptr inbounds i8, i8* %226, i64 -4
  %231 = bitcast i8* %230 to i16*
  %232 = load atomic i16, i16* %231 monotonic, align 2
  %233 = or i16 %232, 1
  store atomic i16 %233, i16* %231 release, align 2
  %234 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #11
  %235 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %236 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8** %237, align 8
  %238 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 5, i32* %238, align 8
  %239 = load %"class.v8::Object"*, %"class.v8::Object"** %208, align 8
  %240 = call %"class.v8::Value"* @_ZN5blink23CallbackMethodRetriever22GetFunctionOrUndefinedEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %7, %"class.v8::Object"* %239, %"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.blink::ExceptionState"* dereferenceable(72) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #11
  %241 = load i32, i32* %211, align 8
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %291

243:                                              ; preds = %224
  %244 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %240) #11
  br i1 %244, label %245, label %255

245:                                              ; preds = %243
  %246 = bitcast %"class.v8::Value"* %240 to %"class.v8::Object"*
  %247 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #11
  %248 = bitcast i8* %247 to %"class.blink::V8StateCallback"*
  %249 = bitcast i8* %247 to %"class.blink::CallbackFunctionBase"*
  call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %249, %"class.v8::Object"* %246) #11
  %250 = bitcast i8* %247 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink15V8StateCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %250, align 8
  %251 = getelementptr inbounds i8, i8* %247, i64 -4
  %252 = bitcast i8* %251 to i16*
  %253 = load atomic i16, i16* %252 monotonic, align 2
  %254 = or i16 %253, 1
  store atomic i16 %254, i16* %252 release, align 2
  br label %255

255:                                              ; preds = %243, %245
  %256 = phi %"class.blink::V8StateCallback"* [ %248, %245 ], [ null, %243 ]
  %257 = bitcast %"class.blink::AnimatorDefinition"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %257) #11
  store %"class.blink::AnimatorDefinition"* inttoptr (i64 -6148914691236517206 to %"class.blink::AnimatorDefinition"*), %"class.blink::AnimatorDefinition"** %10, align 8
  %258 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_18AnimatorDefinitionEEEPhm(i64 32) #11
  %259 = bitcast i8* %258 to %"class.blink::AnimatorDefinition"*
  call void @_ZN5blink18AnimatorDefinitionC1EPNS_21V8AnimatorConstructorEPNS_17V8AnimateCallbackEPNS_15V8StateCallbackE(%"class.blink::AnimatorDefinition"* %259, %"class.blink::V8AnimatorConstructor"* %2, %"class.blink::V8AnimateCallback"* %227, %"class.blink::V8StateCallback"* %256) #11
  %260 = getelementptr inbounds i8, i8* %258, i64 -4
  %261 = bitcast i8* %260 to i16*
  %262 = load atomic i16, i16* %261 monotonic, align 2
  %263 = or i16 %262, 1
  store atomic i16 %263, i16* %261 release, align 2
  %264 = bitcast %"class.blink::AnimatorDefinition"** %10 to i8**
  store i8* %258, i8** %264, align 8
  %265 = call { %"struct.WTF::KeyValuePair.751"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.749"* %26, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::AnimatorDefinition"** nonnull dereferenceable(8) %10) #11
  %266 = extractvalue { %"struct.WTF::KeyValuePair.751"*, i8 } %265, 1
  %267 = and i8 %266, 1
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %269, label %280

269:                                              ; preds = %255
  %270 = extractvalue { %"struct.WTF::KeyValuePair.751"*, i8 } %265, 0
  %271 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %270, i64 0, i32 1
  %272 = load %"class.blink::AnimatorDefinition"*, %"class.blink::AnimatorDefinition"** %10, align 8
  %273 = ptrtoint %"class.blink::AnimatorDefinition"* %272 to i64
  %274 = bitcast %"class.blink::Member.763"* %271 to i64*
  store atomic i64 %273, i64* %274 monotonic, align 8
  %275 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %280, label %277

277:                                              ; preds = %269
  %278 = bitcast %"class.blink::AnimatorDefinition"* %272 to i8*
  %279 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %278) #11
  br label %280

280:                                              ; preds = %255, %269, %277
  %281 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %282 = load %"class.blink::WorkerClients"*, %"class.blink::WorkerClients"** %281, align 8
  %283 = call %"class.blink::AnimationWorkletProxyClient"* @_ZN5blink27AnimationWorkletProxyClient4FromEPNS_13WorkerClientsE(%"class.blink::WorkerClients"* %282) #11
  %284 = icmp eq %"class.blink::AnimationWorkletProxyClient"* %283, null
  br i1 %284, label %290, label %285

285:                                              ; preds = %280
  %286 = bitcast %"class.blink::AnimationWorkletProxyClient"* %283 to void (%"class.blink::AnimationWorkletProxyClient"*, %"class.WTF::String"*)***
  %287 = load void (%"class.blink::AnimationWorkletProxyClient"*, %"class.WTF::String"*)**, void (%"class.blink::AnimationWorkletProxyClient"*, %"class.WTF::String"*)*** %286, align 8
  %288 = getelementptr inbounds void (%"class.blink::AnimationWorkletProxyClient"*, %"class.WTF::String"*)*, void (%"class.blink::AnimationWorkletProxyClient"*, %"class.WTF::String"*)** %287, i64 1
  %289 = load void (%"class.blink::AnimationWorkletProxyClient"*, %"class.WTF::String"*)*, void (%"class.blink::AnimationWorkletProxyClient"*, %"class.WTF::String"*)** %288, align 8
  call void %289(%"class.blink::AnimationWorkletProxyClient"* nonnull %283, %"class.WTF::String"* dereferenceable(8) %1) #11
  br label %290

290:                                              ; preds = %280, %285
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %257) #11
  br label %291

291:                                              ; preds = %224, %214, %206, %290
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %207) #11
  br label %292

292:                                              ; preds = %291, %177, %186, %205
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1667", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1667", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.1667"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #11
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1667"* nonnull %3, i8* %8) #11
  %9 = bitcast %"class.WTF::StringTypeAdapter.1667"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #11
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1667"* nonnull %2, i8* %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #11
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #11
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %34
  call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #11
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #11
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %70
  call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #11
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #11
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare void @_ZN5blink23CallbackMethodRetrieverC1EPNS_20CallbackFunctionBaseE(%"class.blink::CallbackMethodRetriever"*, %"class.blink::CallbackFunctionBase"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink23CallbackMethodRetriever18GetPrototypeObjectERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink21V8AnimatorConstructor9ConstructERKNS_11ScriptValueES3_(%"class.v8::Maybe"* sret, %"class.blink::V8AnimatorConstructor"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27AnimationWorkletGlobalScope18IsAnimatorStatefulEi(%"class.blink::AnimationWorkletGlobalScope"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.758"* %4, null
  br i1 %5, label %64, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = shl i32 %1, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %12, %1
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = and i32 %9, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %4, i64 %25
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %1
  br i1 %29, label %58, label %30

30:                                               ; preds = %6
  %31 = xor i32 %23, -1
  %32 = lshr i32 %21, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %49, %30
  %45 = phi i32 [ %28, %30 ], [ %56, %49 ]
  %46 = phi i64 [ %25, %30 ], [ %53, %49 ]
  %47 = phi i64 [ 0, %30 ], [ %51, %49 ]
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %64, label %49

49:                                               ; preds = %44
  %50 = icmp eq i64 %47, 0
  %51 = select i1 %50, i64 %43, i64 %47
  %52 = add i64 %51, %46
  %53 = and i64 %52, %10
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %4, i64 %53
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %58, label %44

58:                                               ; preds = %49, %6
  %59 = phi %"struct.WTF::KeyValuePair.758"* [ %26, %6 ], [ %54, %49 ]
  %60 = icmp eq %"struct.WTF::KeyValuePair.758"* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %59, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.blink::Animator"*, %"class.blink::Animator"** %62, align 8
  br label %64

64:                                               ; preds = %44, %2, %58, %61
  %65 = phi %"class.blink::Animator"* [ %63, %61 ], [ null, %58 ], [ null, %2 ], [ null, %44 ]
  %66 = tail call zeroext i1 @_ZNK5blink8Animator10IsStatefulEv(%"class.blink::Animator"* %65) #11
  ret i1 %66
}

declare zeroext i1 @_ZNK5blink8Animator10IsStatefulEv(%"class.blink::Animator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27AnimationWorkletGlobalScope18MigrateAnimatorsToEPS0_(%"class.blink::AnimationWorkletGlobalScope"* nocapture, %"class.blink::AnimationWorkletGlobalScope"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"struct.blink::SerializedScriptValue::SerializeOptions", align 8
  %8 = alloca %"class.WTF::Vector.1243", align 8
  %9 = alloca %"class.blink::WorkletAnimationOptions", align 8
  %10 = alloca %"class.WTF::Vector.1248", align 8
  %11 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 11, i32 0, i32 0
  %12 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::WorkerOrWorkletScriptController", %"class.blink::WorkerOrWorkletScriptController"* %12, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %13, align 8
  %15 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %14, i64 0, i32 0
  %19 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %17, %"class.v8::Isolate"* %20) #11
  %21 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.v8::Context"*, %"class.v8::Context"** %21, align 8
  %23 = icmp eq %"class.v8::Context"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.blink::ScriptState"* %14 to %"class.v8::internal::Isolate"**
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %27 = bitcast %"class.v8::Context"* %22 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %26, i64 %28) #11
  %30 = bitcast i64* %29 to %"class.v8::Context"*
  br label %31

31:                                               ; preds = %2, %24
  %32 = phi %"class.v8::Context"* [ %30, %24 ], [ null, %2 ]
  store %"class.v8::Context"* %32, %"class.v8::Context"** %16, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %32) #11
  %33 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %34 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3, i32 0
  %35 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::HashMap.755", %"class.WTF::HashMap.755"* %34, i64 0, i32 0, i32 0
  %39 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %39, i64 %42
  br i1 %37, label %90, label %44

44:                                               ; preds = %31
  %45 = icmp eq i32 %41, 0
  br i1 %45, label %55, label %46

46:                                               ; preds = %44, %52
  %47 = phi %"struct.WTF::KeyValuePair.758"* [ %53, %52 ], [ %39, %44 ]
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = add i32 %49, 1
  %51 = icmp ult i32 %50, 2
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %47, i64 1
  %54 = icmp eq %"struct.WTF::KeyValuePair.758"* %53, %43
  br i1 %54, label %90, label %46

55:                                               ; preds = %46, %44
  %56 = phi %"struct.WTF::KeyValuePair.758"* [ %39, %44 ], [ %47, %46 ]
  %57 = icmp eq %"struct.WTF::KeyValuePair.758"* %56, %43
  br i1 %57, label %90, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  %60 = bitcast %"class.blink::ScriptState"* %14 to i64*
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  %64 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  %67 = bitcast %"class.v8::Isolate"** %66 to i64*
  %68 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  %69 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %70 = bitcast %"class.WTF::StringImpl"** %69 to i8*
  %71 = bitcast %"struct.blink::SerializedScriptValue::SerializeOptions"* %7 to i8*
  %72 = getelementptr inbounds %"struct.blink::SerializedScriptValue::SerializeOptions", %"struct.blink::SerializedScriptValue::SerializeOptions"* %7, i64 0, i32 2
  %73 = getelementptr inbounds %"struct.blink::SerializedScriptValue::SerializeOptions", %"struct.blink::SerializedScriptValue::SerializeOptions"* %7, i64 0, i32 3
  %74 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.WTF::Vector.1243"* %8 to i8*
  %76 = getelementptr inbounds %"class.WTF::Vector.1243", %"class.WTF::Vector.1243"* %8, i64 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.WTF::Vector.1243", %"class.WTF::Vector.1243"* %8, i64 0, i32 0, i32 0, i32 2
  %78 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %9, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %9, i64 0, i32 1, i32 0
  %80 = bitcast %"class.logging::CheckError"* %3 to i8*
  %81 = bitcast %"class.logging::CheckError"* %4 to i8*
  %82 = bitcast %"class.WTF::Vector.1248"* %10 to i8*
  %83 = getelementptr inbounds %"class.WTF::Vector.1248", %"class.WTF::Vector.1248"* %10, i64 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.WTF::Vector.1248", %"class.WTF::Vector.1248"* %10, i64 0, i32 0, i32 0, i32 2
  %85 = bitcast %"class.WTF::Vector.1248"* %10 to i8**
  %86 = bitcast %"struct.blink::SerializedScriptValue::SerializeOptions"* %7 to i8*
  %87 = bitcast i8** %64 to <2 x i8*>*
  br label %98

88:                                               ; preds = %248, %260, %257
  %89 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %38, align 8
  br label %90

90:                                               ; preds = %52, %31, %88, %55
  %91 = phi %"struct.WTF::KeyValuePair.758"* [ %89, %88 ], [ %39, %55 ], [ %39, %31 ], [ %39, %52 ]
  %92 = icmp eq %"struct.WTF::KeyValuePair.758"* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %90
  %94 = bitcast %"struct.WTF::KeyValuePair.758"* %91 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %94) #11
  %95 = bitcast %"class.WTF::HashMap.755"* %34 to i64*
  store atomic i64 0, i64* %95 monotonic, align 8
  store i32 0, i32* %40, align 8
  store i32 0, i32* %35, align 4
  br label %96

96:                                               ; preds = %90, %93
  %97 = load %"class.v8::Context"*, %"class.v8::Context"** %16, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %97) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  ret void

98:                                               ; preds = %58, %260
  %99 = phi %"struct.WTF::KeyValuePair.758"* [ %56, %58 ], [ %252, %260 ]
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %99, i64 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %99, i64 0, i32 1, i32 0, i32 0
  %103 = load %"class.blink::Animator"*, %"class.blink::Animator"** %102, align 8
  %104 = call zeroext i1 @_ZNK5blink8Animator10IsStatefulEv(%"class.blink::Animator"* %103) #11
  br i1 %104, label %105, label %172

105:                                              ; preds = %98
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %59) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 72, i1 false)
  %106 = load i64, i64* %60, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  store i16 6, i16* %62, align 8
  store i16 0, i16* %63, align 2
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)>, <2 x i8*>* %87, align 8
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %65, align 8
  store i64 %106, i64* %67, align 8
  store i32 0, i32* %68, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #11
  %107 = call %"class.v8::Value"* @_ZN5blink8Animator5StateEPN2v87IsolateERNS_14ExceptionStateE(%"class.blink::Animator"* %103, %"class.v8::Isolate"* %33, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #11
  %108 = load i32, i32* %68, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %105
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %6) #11
  br label %138

111:                                              ; preds = %105
  %112 = bitcast %"class.v8::Value"* %107 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 3
  %115 = icmp eq i64 %114, 1
  br i1 %115, label %116, label %132

116:                                              ; preds = %111
  %117 = add i64 %113, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = and i64 %113, -4294967296
  %121 = zext i32 %119 to i64
  %122 = or i64 %120, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load i16, i16* %124, align 2
  %126 = icmp eq i16 %125, 67
  br i1 %126, label %127, label %132

127:                                              ; preds = %116
  %128 = add i64 %113, 23
  %129 = inttoptr i64 %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = ashr i32 %130, 1
  switch i32 %131, label %132 [
    i32 5, label %138
    i32 3, label %138
  ]

132:                                              ; preds = %127, %116, %111
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 16, i1 false)
  store i32 1, i32* %72, align 8
  store i32 0, i32* %73, align 4
  %133 = call %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue9SerializeEPN2v87IsolateENS1_5LocalINS1_5ValueEEERKNS0_16SerializeOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"* %33, %"class.v8::Value"* %107, %"struct.blink::SerializedScriptValue::SerializeOptions"* nonnull dereferenceable(24) %7, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #11
  %134 = ptrtoint %"class.blink::SerializedScriptValue"* %133 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #11
  %135 = load i32, i32* %68, align 8
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %138, label %137

137:                                              ; preds = %132
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %6) #11
  br label %138

138:                                              ; preds = %132, %127, %127, %137, %110
  %139 = phi i64 [ 0, %110 ], [ 0, %127 ], [ %134, %137 ], [ %134, %132 ], [ 0, %127 ]
  %140 = phi i32 [ 3, %110 ], [ 0, %127 ], [ 3, %137 ], [ 0, %132 ], [ 0, %127 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %141 = load i64*, i64** %74, align 8
  %142 = icmp eq i64* %141, null
  br i1 %142, label %152, label %143

143:                                              ; preds = %138
  %144 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %66, align 8
  %145 = bitcast %"class.v8::Isolate"* %144 to %"class.v8::internal::Isolate"*
  %146 = load i64, i64* %141, align 8
  %147 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %145, i64 %146) #11
  %148 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %144) #11
  br i1 %148, label %152, label %149

149:                                              ; preds = %143
  %150 = bitcast i64* %147 to %"class.v8::Value"*
  %151 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %144, %"class.v8::Value"* %150) #11
  br label %152

152:                                              ; preds = %149, %143, %138
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #11
  br label %168

168:                                              ; preds = %152, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %59) #11
  %169 = icmp eq i32 %140, 0
  br i1 %169, label %172, label %170

170:                                              ; preds = %168
  %171 = inttoptr i64 %139 to %"class.blink::SerializedScriptValue"*
  br label %238

172:                                              ; preds = %168, %98
  %173 = phi i64 [ %139, %168 ], [ 0, %98 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 16, i1 false) #11
  call void @_ZNK5blink8Animator13GetLocalTimesIN3WTF6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS2_18PartitionAllocatorEEEEEvRT_(%"class.blink::Animator"* %103, %"class.WTF::Vector.1243"* nonnull dereferenceable(16) %8)
  %174 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %103, i64 0, i32 3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink23WorkletAnimationOptionsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8, !alias.scope !7
  %175 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %103, i64 0, i32 4, i32 1, i32 0
  %176 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %175, align 8, !noalias !7
  store %"class.blink::SerializedScriptValue"* %176, %"class.blink::SerializedScriptValue"** %79, align 8, !alias.scope !7
  %177 = icmp eq %"class.blink::SerializedScriptValue"* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw add i32* %179, i32 1 monotonic, !noalias !7
  %181 = icmp sgt i32 %180, 0
  br i1 %181, label %184, label %182

182:                                              ; preds = %178
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #11, !noalias !7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0)) #11, !noalias !7
  %183 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11, !noalias !7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #11, !noalias !7
  br label %184

184:                                              ; preds = %172, %178, %182
  %185 = inttoptr i64 %173 to %"class.blink::SerializedScriptValue"*
  %186 = icmp eq i64 %173, 0
  br i1 %186, label %193, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %185, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = atomicrmw add i32* %188, i32 1 monotonic
  %190 = icmp sgt i32 %189, 0
  br i1 %190, label %193, label %191

191:                                              ; preds = %187
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0)) #11
  %192 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #11
  br label %193

193:                                              ; preds = %184, %187, %191
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #11
  call void @_ZNK5blink8Animator10GetTimingsEv(%"class.WTF::Vector.1248"* nonnull sret %10, %"class.blink::Animator"* %103) #11
  %194 = call %"class.blink::Animator"* @_ZN5blink27AnimationWorkletGlobalScope17CreateAnimatorForEiRKN3WTF6StringENS_23WorkletAnimationOptionsE13scoped_refptrINS_21SerializedScriptValueEERKNS1_6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS1_18PartitionAllocatorEEERKNS9_INS_6TimingELj0ESF_EE(%"class.blink::AnimationWorkletGlobalScope"* %1, i32 %101, %"class.WTF::String"* dereferenceable(8) %174, %"class.blink::WorkletAnimationOptions"* nonnull %9, %"class.blink::SerializedScriptValue"* %185, %"class.WTF::Vector.1243"* nonnull dereferenceable(16) %8, %"class.WTF::Vector.1248"* nonnull dereferenceable(16) %10)
  %195 = load %"struct.blink::Timing"*, %"struct.blink::Timing"** %83, align 8
  %196 = icmp eq %"struct.blink::Timing"* %195, null
  br i1 %196, label %228, label %197, !prof !6

197:                                              ; preds = %193
  %198 = bitcast %"struct.blink::Timing"* %195 to i8*
  %199 = load i32, i32* %84, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %226, label %201, !prof !3

201:                                              ; preds = %197
  %202 = zext i32 %199 to i64
  %203 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %195, i64 %202
  br label %204

204:                                              ; preds = %221, %201
  %205 = phi %"struct.blink::Timing"* [ %222, %221 ], [ %195, %201 ]
  %206 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %205, i64 0, i32 9, i32 0
  %207 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %206, align 8
  %208 = icmp eq %"class.blink::TimingFunction"* %207, null
  br i1 %208, label %221, label %209

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %207, i64 0, i32 1, i32 0
  %211 = getelementptr inbounds %"class.base::RefCountedThreadSafe.861", %"class.base::RefCountedThreadSafe.861"* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = atomicrmw sub i32* %211, i32 1 acq_rel
  %213 = icmp eq i32 %212, 1
  br i1 %213, label %214, label %221

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.base::RefCountedThreadSafe.861", %"class.base::RefCountedThreadSafe.861"* %210, i64 -2
  %216 = bitcast %"class.base::RefCountedThreadSafe.861"* %215 to %"class.blink::TimingFunction"*
  %217 = bitcast %"class.base::RefCountedThreadSafe.861"* %215 to void (%"class.blink::TimingFunction"*)***
  %218 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %218, i64 1
  %220 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %219, align 8
  call void %220(%"class.blink::TimingFunction"* nonnull %216) #11
  br label %221

221:                                              ; preds = %214, %209, %204
  %222 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %205, i64 1
  %223 = icmp eq %"struct.blink::Timing"* %222, %203
  br i1 %223, label %224, label %204

224:                                              ; preds = %221
  store i32 0, i32* %84, align 4
  %225 = load i8*, i8** %85, align 8
  br label %226

226:                                              ; preds = %224, %197
  %227 = phi i8* [ %225, %224 ], [ %198, %197 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %227) #11
  store %"struct.blink::Timing"* null, %"struct.blink::Timing"** %83, align 8
  br label %228

228:                                              ; preds = %193, %226
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #11
  call void @_ZN5blink23WorkletAnimationOptionsD1Ev(%"class.blink::WorkletAnimationOptions"* nonnull %9) #11
  %229 = load %"class.absl::optional.849"*, %"class.absl::optional.849"** %76, align 8
  %230 = icmp eq %"class.absl::optional.849"* %229, null
  br i1 %230, label %237, label %231, !prof !6

231:                                              ; preds = %228
  %232 = load i32, i32* %77, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %235, label %234, !prof !3

234:                                              ; preds = %231
  store i32 0, i32* %77, align 4
  br label %235

235:                                              ; preds = %234, %231
  %236 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %229, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %236) #11
  store %"class.absl::optional.849"* null, %"class.absl::optional.849"** %76, align 8
  br label %237

237:                                              ; preds = %228, %235
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #11
  br label %238

238:                                              ; preds = %170, %237
  %239 = phi %"class.blink::SerializedScriptValue"* [ %171, %170 ], [ %185, %237 ]
  %240 = phi i64 [ %139, %170 ], [ %173, %237 ]
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %248, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %239, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = atomicrmw sub i32* %243, i32 1 acq_rel
  %245 = icmp eq i32 %244, 1
  br i1 %245, label %246, label %248

246:                                              ; preds = %242
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %239) #11
  %247 = inttoptr i64 %240 to i8*
  call void @free(i8* %247) #11
  br label %248

248:                                              ; preds = %238, %242, %246
  %249 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %99, i64 1
  %250 = icmp eq %"struct.WTF::KeyValuePair.758"* %249, %43
  br i1 %250, label %88, label %251

251:                                              ; preds = %248, %257
  %252 = phi %"struct.WTF::KeyValuePair.758"* [ %258, %257 ], [ %249, %248 ]
  %253 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %252, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = add i32 %254, 1
  %256 = icmp ult i32 %255, 2
  br i1 %256, label %257, label %260

257:                                              ; preds = %251
  %258 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %252, i64 1
  %259 = icmp eq %"struct.WTF::KeyValuePair.758"* %258, %43
  br i1 %259, label %88, label %251

260:                                              ; preds = %251
  %261 = icmp eq %"struct.WTF::KeyValuePair.758"* %252, %43
  br i1 %261, label %88, label %98
}

declare %"class.v8::Value"* @_ZN5blink8Animator5StateEPN2v87IsolateERNS_14ExceptionStateE(%"class.blink::Animator"*, %"class.v8::Isolate"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue9SerializeEPN2v87IsolateENS1_5LocalINS1_5ValueEEERKNS0_16SerializeOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8Animator13GetLocalTimesIN3WTF6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS2_18PartitionAllocatorEEEEEvRT_(%"class.blink::Animator"*, %"class.WTF::Vector.1243"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1243", %"class.WTF::Vector.1243"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.1243", %"class.WTF::Vector.1243"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.WTF::Vector.1243", %"class.WTF::Vector.1243"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.absl::optional.849"*, %"class.absl::optional.849"** %12, align 8
  %14 = bitcast %"class.WTF::Vector.1243"* %1 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store i32 0, i32* %3, align 8
  %15 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %15) #11
  br label %16

16:                                               ; preds = %2, %11
  %17 = getelementptr inbounds %"class.blink::Animator", %"class.blink::Animator"* %0, i64 0, i32 5, i32 0, i32 0
  %18 = load %"class.blink::WorkletGroupEffect"*, %"class.blink::WorkletGroupEffect"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::WorkletGroupEffect", %"class.blink::WorkletGroupEffect"* %18, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.blink::WorkletGroupEffect", %"class.blink::WorkletGroupEffect"* %18, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.1243", %"class.WTF::Vector.1243"* %1, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp ult i32 %23, %21
  br i1 %24, label %25, label %107

25:                                               ; preds = %16
  %26 = load i32, i32* %3, align 8
  %27 = icmp ult i32 %26, %21
  br i1 %27, label %28, label %67

28:                                               ; preds = %25
  %29 = lshr i32 %26, 2
  %30 = add nuw i32 %26, 1
  %31 = add i32 %30, %29
  %32 = icmp ugt i32 %31, 4
  %33 = select i1 %32, i32 %31, i32 4
  %34 = icmp ugt i32 %33, %21
  %35 = select i1 %34, i32 %33, i32 %21
  %36 = icmp ult i32 %26, %35
  br i1 %36, label %37, label %67, !prof !6

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::Vector.1243", %"class.WTF::Vector.1243"* %1, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.absl::optional.849"*, %"class.absl::optional.849"** %38, align 8
  %40 = icmp eq %"class.absl::optional.849"* %39, null
  %41 = zext i32 %35 to i64
  %42 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIN4base9TimeDeltaEEEEEmm(i64 %41) #11
  %43 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %42, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4absl8optionalIN4base9TimeDeltaEEEEEPKcv, i64 0, i64 0)) #11
  br i1 %40, label %44, label %49

44:                                               ; preds = %37
  %45 = ptrtoint i8* %43 to i64
  %46 = bitcast %"class.WTF::Vector.1243"* %1 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = lshr i64 %42, 4
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %3, align 8
  br label %67

49:                                               ; preds = %37
  %50 = lshr i64 %42, 4
  %51 = ptrtoint i8* %43 to i64
  %52 = load %"class.absl::optional.849"*, %"class.absl::optional.849"** %38, align 8
  %53 = icmp ne i8* %43, null
  %54 = icmp ne %"class.absl::optional.849"* %52, null
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %62, !prof !6

56:                                               ; preds = %49
  %57 = load i32, i32* %22, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = shl nuw nsw i64 %58, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 %59, i64 %60, i1 false) #11
  %61 = load %"class.absl::optional.849"*, %"class.absl::optional.849"** %38, align 8
  br label %62

62:                                               ; preds = %56, %49
  %63 = phi %"class.absl::optional.849"* [ %52, %49 ], [ %61, %56 ]
  %64 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #11
  %65 = bitcast %"class.WTF::Vector.1243"* %1 to i64*
  store atomic i64 %51, i64* %65 monotonic, align 8
  %66 = trunc i64 %50 to i32
  store i32 %66, i32* %3, align 8
  br label %67

67:                                               ; preds = %62, %44, %28, %25
  %68 = getelementptr inbounds %"class.WTF::Vector.1243", %"class.WTF::Vector.1243"* %1, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.absl::optional.849"*, %"class.absl::optional.849"** %68, align 8
  %70 = load i32, i32* %22, align 4
  %71 = zext i32 %21 to i64
  %72 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %69, i64 %71
  %73 = icmp eq i32 %70, %21
  br i1 %73, label %107, label %74

74:                                               ; preds = %67
  %75 = zext i32 %70 to i64
  %76 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %69, i64 %75
  %77 = shl nuw nsw i64 %71, 4
  %78 = add nsw i64 %77, -16
  %79 = shl nuw nsw i64 %75, 4
  %80 = sub nsw i64 %78, %79
  %81 = lshr exact i64 %80, 4
  %82 = add nuw nsw i64 %81, 1
  %83 = and i64 %82, 7
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %92, label %85

85:                                               ; preds = %74, %85
  %86 = phi %"class.absl::optional.849"* [ %89, %85 ], [ %76, %74 ]
  %87 = phi i64 [ %90, %85 ], [ %83, %74 ]
  %88 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %88, align 8
  %89 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %86, i64 1
  %90 = add i64 %87, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %85, !llvm.loop !10

92:                                               ; preds = %85, %74
  %93 = phi %"class.absl::optional.849"* [ %76, %74 ], [ %89, %85 ]
  %94 = icmp ult i64 %80, 112
  br i1 %94, label %107, label %95

95:                                               ; preds = %92, %95
  %96 = phi %"class.absl::optional.849"* [ %105, %95 ], [ %93, %92 ]
  %97 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %97, align 8
  %98 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %96, i64 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %98, align 8
  %99 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %96, i64 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %99, align 8
  %100 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %96, i64 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %100, align 8
  %101 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %96, i64 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %101, align 8
  %102 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %96, i64 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %102, align 8
  %103 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %96, i64 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %103, align 8
  %104 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %96, i64 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %104, align 8
  %105 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %96, i64 8
  %106 = icmp eq %"class.absl::optional.849"* %105, %72
  br i1 %106, label %107, label %95

107:                                              ; preds = %92, %95, %16, %67
  store i32 %21, i32* %22, align 4
  %108 = load i32, i32* %20, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %111, %107
  ret void

111:                                              ; preds = %107, %111
  %112 = phi i32 [ %122, %111 ], [ 0, %107 ]
  %113 = tail call dereferenceable(8) %"class.blink::Member.847"* @_ZNK3WTF6VectorIN5blink6MemberINS1_22WorkletAnimationEffectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.844"* %19, i32 %112) #11
  %114 = getelementptr inbounds %"class.blink::Member.847", %"class.blink::Member.847"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.blink::WorkletAnimationEffect"*, %"class.blink::WorkletAnimationEffect"** %114, align 8
  %116 = tail call { i8, i64 } @_ZNK5blink22WorkletAnimationEffect10local_timeEv(%"class.blink::WorkletAnimationEffect"* %115) #11
  %117 = extractvalue { i8, i64 } %116, 0
  %118 = extractvalue { i8, i64 } %116, 1
  %119 = tail call dereferenceable(16) %"class.absl::optional.849"* @_ZN3WTF6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1243"* %1, i32 %112) #11
  %120 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %119, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %117, i8* %120, align 8
  %121 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %119, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %118, i64* %121, align 8
  %122 = add nuw i32 %112, 1
  %123 = load i32, i32* %20, align 4
  %124 = icmp ult i32 %122, %123
  br i1 %124, label %111, label %110
}

declare void @_ZNK5blink8Animator10GetTimingsEv(%"class.WTF::Vector.1248"* sret, %"class.blink::Animator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AnimatorDefinition"* @_ZN5blink27AnimationWorkletGlobalScope21FindDefinitionForTestERKN3WTF6StringE(%"class.blink::AnimationWorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = tail call %"struct.WTF::KeyValuePair.751"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.749"* %3, %"class.WTF::String"* dereferenceable(8) %1) #11
  %5 = icmp eq %"struct.WTF::KeyValuePair.751"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::AnimatorDefinition"*, %"class.blink::AnimatorDefinition"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::AnimatorDefinition"* [ %8, %6 ], [ null, %2 ]
  ret %"class.blink::AnimatorDefinition"* %10
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink26WorkerOrWorkletGlobalScope18HasPendingActivityEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #11
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink27AnimationWorkletGlobalScope18GetWrapperTypeInfoEv(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink27AnimationWorkletGlobalScope18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink26WorkerOrWorkletGlobalScope4WrapEPNS_11ScriptStateE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink26WorkerOrWorkletGlobalScope20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink26WorkerOrWorkletGlobalScope13InterfaceNameEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink18WorkletGlobalScope19GetExecutionContextEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.14, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.14, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink26WorkerOrWorkletGlobalScope22IsJSExecutionForbiddenEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

declare void @_ZN5blink26WorkerOrWorkletGlobalScope11DisableEvalERKN3WTF6StringE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink26WorkerOrWorkletGlobalScope17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE(%"class.blink::WorkerOrWorkletGlobalScope"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18WorkletGlobalScope9IsClosingEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink26WorkerOrWorkletGlobalScope8CountUseENS_5mojom10WebFeatureE(%"class.blink::WorkerOrWorkletGlobalScope"*, i32) unnamed_addr #1

declare %"class.blink::WorkerThread"* @_ZNK5blink18WorkletGlobalScope9GetThreadEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WorkerNavigator"* @_ZNK5blink26WorkerOrWorkletGlobalScope9navigatorEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::WorkerNavigator"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8 @_ZNK5blink26WorkerOrWorkletGlobalScope41ShouldRejectCoepUnsafeNoneTopModuleScriptEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

declare %"class.blink::ResourceFetcher"* @_ZNK5blink26WorkerOrWorkletGlobalScope7FetcherEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

declare dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink18WorkletGlobalScope16GetDevToolsTokenEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 12
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink18WorkletGlobalScope13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkletGlobalScope"*, i8 zeroext) unnamed_addr #1

declare i32 @_ZNK5blink26WorkerOrWorkletGlobalScope28GetOutstandingThrottledLimitEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18WorkletGlobalScope13IsInitializedEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink26WorkerOrWorkletGlobalScope43BindContentSecurityPolicyToExecutionContextEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

declare i32 @_ZNK5blink26WorkerOrWorkletGlobalScope25GetThrottleOptionOverrideEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18WorkletGlobalScope30IsMainThreadWorkletGlobalScopeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18WorkletGlobalScope28IsThreadedWorkletGlobalScopeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18WorkletGlobalScope20IsWorkletGlobalScopeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink18WorkletGlobalScope3UrlEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 0, i32 2
  ret %"class.blink::KURL"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink18WorkletGlobalScope7BaseURLEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 0, i32 2
  ret %"class.blink::KURL"* %2
}

declare void @_ZNK5blink18WorkletGlobalScope11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::WorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink18WorkletGlobalScope9UserAgentEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #11
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #11
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

declare zeroext i1 @_ZNK5blink18WorkletGlobalScope15IsContextThreadEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare void @_ZN5blink18WorkletGlobalScope21AddConsoleMessageImplEPNS_14ConsoleMessageEb(%"class.blink::WorkletGlobalScope"*, %"class.blink::ConsoleMessage"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink18WorkletGlobalScope17AddInspectorIssueEN4mojo9StructPtrINS_5mojom5blink18InspectorIssueInfoEEE(%"class.blink::WorkletGlobalScope"*, %"class.mojo::StructPtr.1469"*) unnamed_addr #1

declare void @_ZN5blink18WorkletGlobalScope17AddInspectorIssueENS_11AuditsIssueE(%"class.blink::WorkletGlobalScope"*, %"class.blink::AuditsIssue"*) unnamed_addr #1

declare void @_ZN5blink18WorkletGlobalScope15ExceptionThrownEPNS_10ErrorEventE(%"class.blink::WorkletGlobalScope"*, %"class.blink::ErrorEvent"*) unnamed_addr #1

declare %"class.blink::CoreProbeSink"* @_ZN5blink18WorkletGlobalScope12GetProbeSinkEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare %"class.blink::FrameOrWorkerScheduler"* @_ZN5blink18WorkletGlobalScope12GetSchedulerEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18WorkletGlobalScope29CrossOriginIsolatedCapabilityEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18WorkletGlobalScope22DirectSocketCapabilityEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare %"class.ukm::UkmRecorder"* @_ZN5blink18WorkletGlobalScope11UkmRecorderEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink18WorkletGlobalScope8GetFrameEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink18WorkletGlobalScope13GetHttpsStateEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare %"class.blink::BrowserInterfaceBrokerProxy"* @_ZNK5blink18WorkletGlobalScope25GetBrowserInterfaceBrokerEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink27AnimationWorkletGlobalScope15GetWorkletTokenEv(%"class.blink::MultiToken.1562"* noalias sret, %"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %1, i64 0, i32 5
  %4 = bitcast %"class.blink::MultiToken.1562"* %0 to i8*
  %5 = bitcast %"class.util::TokenType.868"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false) #11
  %6 = getelementptr inbounds %"class.blink::MultiToken.1562", %"class.blink::MultiToken.1562"* %0, i64 0, i32 1
  store i32 0, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv(%"class.absl::optional.1214"* noalias sret, %"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %1, i64 0, i32 12
  %4 = getelementptr inbounds %"class.absl::optional.1214", %"class.absl::optional.1214"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.absl::optional.1214", %"class.absl::optional.1214"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %6 = bitcast %"class.blink::MultiToken"* %5 to i8*
  %7 = bitcast %"class.util::TokenType.737"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false) #11
  %8 = getelementptr inbounds %"class.absl::optional.1214", %"class.absl::optional.1214"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  store i32 0, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTarget"* @_ZN5blink18WorkletGlobalScope16ErrorEventTargetEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventTarget"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink27AnimationWorkletGlobalScope29IsAnimationWorkletGlobalScopeEv(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink27AnimationWorkletGlobalScope24GetExecutionContextTokenEv(%"class.blink::MultiToken"* noalias sret, %"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %1, i64 0, i32 5
  %4 = bitcast %"class.blink::MultiToken"* %0 to i8*
  %5 = bitcast %"class.util::TokenType.868"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false) #11
  %6 = getelementptr inbounds %"class.blink::MultiToken", %"class.blink::MultiToken"* %0, i64 0, i32 1
  store i32 4, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext8IsWindowEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext19IsWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn72_NK5blink18WorkletGlobalScope20IsWorkletGlobalScopeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK5blink18WorkletGlobalScope30IsMainThreadWorkletGlobalScopeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext28IsDedicatedWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25IsSharedWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext26IsServiceWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn72_NK5blink27AnimationWorkletGlobalScope29IsAnimationWorkletGlobalScopeEv(%"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25IsAudioWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext26IsLayoutWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25IsPaintWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK5blink18WorkletGlobalScope28IsThreadedWorkletGlobalScopeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope22IsJSExecutionForbiddenEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK5blink18WorkletGlobalScope15IsContextThreadEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25ShouldInstallV8ExtensionsEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.blink::ContentSecurityPolicy"* @_ZN5blink16ExecutionContext32GetContentSecurityPolicyForWorldEPKNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"class.blink::KURL"* @_ZThn72_NK5blink18WorkletGlobalScope3UrlEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent.456", %"class.blink::CrossThreadPersistent.456"* %2, i64 112, i32 0, i32 1
  %4 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %3 to %"class.blink::KURL"*
  ret %"class.blink::KURL"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"class.blink::KURL"* @_ZThn72_NK5blink18WorkletGlobalScope7BaseURLEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent.456", %"class.blink::CrossThreadPersistent.456"* %2, i64 112, i32 0, i32 1
  %4 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %3 to %"class.blink::KURL"*
  ret %"class.blink::KURL"* %4
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_NK5blink18WorkletGlobalScope11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* noalias sret, %"class.blink::WorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_N5blink26WorkerOrWorkletGlobalScope11DisableEvalERKN3WTF6StringE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn72_NK5blink18WorkletGlobalScope9UserAgentEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent.456", %"class.blink::CrossThreadPersistent.456"* %2, i64 119, i32 0, i32 1
  %4 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %3 to %"class.WTF::StringImpl"**
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #11
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #11
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %1, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext20GetUserAgentMetadataEv(%"struct.blink::UserAgentMetadata"* noalias sret, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.blink::UserAgentMetadata"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 152, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn72_NK5blink18WorkletGlobalScope13GetHttpsStateEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent.456", %"class.blink::CrossThreadPersistent.456"* %2, i64 122
  %4 = bitcast %"class.blink::CrossThreadPersistent.456"* %3 to i32*
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::ResourceFetcher"* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope7FetcherEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_N5blink26WorkerOrWorkletGlobalScope17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE(%"class.blink::WorkerOrWorkletGlobalScope"*, i32) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 87
  %3 = bitcast i64* %2 to i32*
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_N5blink18WorkletGlobalScope15ExceptionThrownEPNS_10ErrorEventE(%"class.blink::WorkletGlobalScope"*, %"class.blink::ErrorEvent"*) unnamed_addr #0 align 2

declare void @_ZN5blink16ExecutionContext24RemoveURLFromMemoryCacheERKNS_4KURLE(%"class.blink::ExecutionContext"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_N5blink18WorkletGlobalScope17AddInspectorIssueEN4mojo9StructPtrINS_5mojom5blink18InspectorIssueInfoEEE(%"class.blink::WorkletGlobalScope"*, %"class.mojo::StructPtr.1469"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_N5blink18WorkletGlobalScope17AddInspectorIssueENS_11AuditsIssueE(%"class.blink::WorkletGlobalScope"*, %"class.blink::AuditsIssue"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTarget"* @_ZThn72_N5blink18WorkletGlobalScope16ErrorEventTargetEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventTarget"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16ExecutionContext29HasInsecureContextInAncestorsEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink16ExecutionContext16OutgoingReferrerEv(%"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::CoreProbeSink"* @_ZThn72_N5blink18WorkletGlobalScope12GetProbeSinkEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::FrameOrWorkerScheduler"* @_ZThn72_N5blink18WorkletGlobalScope12GetSchedulerEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::TrustedTypePolicyFactory"* @_ZNK5blink16ExecutionContext15GetTrustedTypesEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::TrustedTypePolicyFactory"* null
}

declare zeroext i1 @_ZNK5blink16ExecutionContext19RequireTrustedTypesEv(%"class.blink::ExecutionContext"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE(%"class.blink::ExecutionContext"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext32ReportPermissionsPolicyViolationENS_5mojom24PermissionsPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringE(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext29ReportDocumentPolicyViolationENS_5mojom21DocumentPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringES7_(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK5blink18WorkletGlobalScope29CrossOriginIsolatedCapabilityEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK5blink18WorkletGlobalScope22DirectSocketCapabilityEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare %"class.ukm::UkmRecorder"* @_ZThn72_N5blink18WorkletGlobalScope11UkmRecorderEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink16ExecutionContext11UkmSourceIDEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn72_NK5blink27AnimationWorkletGlobalScope24GetExecutionContextTokenEv(%"class.blink::MultiToken"* noalias sret, %"class.blink::AnimationWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletGlobalScope", %"class.blink::AnimationWorkletGlobalScope"* %1, i64 -1, i32 2
  %4 = getelementptr inbounds %"class.blink::HeapHashMap.745", %"class.blink::HeapHashMap.745"* %3, i64 86
  %5 = bitcast %"class.blink::MultiToken"* %0 to i8*
  %6 = bitcast %"class.blink::HeapHashMap.745"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false) #11
  %7 = getelementptr inbounds %"class.blink::MultiToken", %"class.blink::MultiToken"* %0, i64 0, i32 1
  store i32 4, i32* %7, align 8, !alias.scope !11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn72_NK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv(%"class.absl::optional.1214"* noalias sret, %"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %1, i64 -1, i32 7
  %4 = getelementptr inbounds %"class.blink::CrossThreadPersistent.456", %"class.blink::CrossThreadPersistent.456"* %3, i64 123, i32 0, i32 1
  %5 = getelementptr inbounds %"class.absl::optional.1214", %"class.absl::optional.1214"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %5, align 8, !alias.scope !14
  %6 = getelementptr inbounds %"class.absl::optional.1214", %"class.absl::optional.1214"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %7 = bitcast %"class.blink::MultiToken"* %6 to i8*
  %8 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false) #11
  %9 = getelementptr inbounds %"class.absl::optional.1214", %"class.absl::optional.1214"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  store i32 0, i32* %9, align 8, !alias.scope !14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptWrappable"* @_ZN5blink16ExecutionContext17ToScriptWrappableEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::ScriptWrappable"* null
}

declare void @_ZN5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_N5blink18WorkletGlobalScope21AddConsoleMessageImplEPNS_14ConsoleMessageEb(%"class.blink::WorkletGlobalScope"*, %"class.blink::ConsoleMessage"*, i1 zeroext) unnamed_addr #0 align 2

declare void @_ZN5blink24ContextLifecycleNotifier27AddContextLifecycleObserverEPNS_24ContextLifecycleObserverE(%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*) unnamed_addr #1

declare void @_ZN5blink24ContextLifecycleNotifier30RemoveContextLifecycleObserverEPNS_24ContextLifecycleObserverE(%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::BrowserInterfaceBrokerProxy"* @_ZThn104_NK5blink18WorkletGlobalScope25GetBrowserInterfaceBrokerEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare %"class.base::SingleThreadTaskRunner"* @_ZThn104_N5blink18WorkletGlobalScope13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkletGlobalScope"*, i8 zeroext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn184_N5blink26WorkerOrWorkletGlobalScope8CountUseENS_5mojom10WebFeatureE(%"class.blink::WorkerOrWorkletGlobalScope"*, i32) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn120_NK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE(%"class.blink::ExecutionContext"*, i32) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_18WorkletGlobalScopeEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -224
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::WorkletGlobalScope"*
  %4 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)***
  %5 = load %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)**, %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)*, %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)** %5, i64 10
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)*, %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* %7(%"class.blink::WorkletGlobalScope"* %3) #11
  %9 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %8) #11
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_18WorkletGlobalScopeEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -224
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::WorkerOrWorkletGlobalScope"*
  %4 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)***
  %5 = load i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)**, i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)*, i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)** %5, i64 3
  %7 = load i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)*, i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::WorkerOrWorkletGlobalScope"* %3) #11
  ret i1 %8
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #2

declare void @_ZN2cc22AnimationWorkletOutput14AnimationStateC1ENS_18WorkletAnimationIdE(%"struct.cc::AnimationWorkletOutput::AnimationState"*, i64) unnamed_addr #1

declare zeroext i1 @_ZN5blink8Animator7AnimateEPN2v87IsolateEdPN2cc22AnimationWorkletOutput14AnimationStateE(%"class.blink::Animator"*, %"class.v8::Isolate"*, double, %"struct.cc::AnimationWorkletOutput::AnimationState"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc22AnimationWorkletOutput14AnimationStateD1Ev(%"struct.cc::AnimationWorkletOutput::AnimationState"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc22AnimationWorkletOutput14AnimationStateENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.1290"*, %"struct.cc::AnimationWorkletOutput::AnimationState"* dereferenceable(32)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1290", %"class.std::__1::vector.1290"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::AnimationWorkletOutput::AnimationState"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1290"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1290"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1290", %"class.std::__1::vector.1290"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::AnimationWorkletOutput::AnimationState"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"struct.cc::AnimationWorkletOutput::AnimationState"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.cc::AnimationWorkletOutput::AnimationState"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %36, i64 %35
  %39 = ptrtoint %"struct.cc::AnimationWorkletOutput::AnimationState"* %38 to i64
  tail call void @_ZN2cc22AnimationWorkletOutput14AnimationStateC1ERKS1_(%"struct.cc::AnimationWorkletOutput::AnimationState"* %37, %"struct.cc::AnimationWorkletOutput::AnimationState"* dereferenceable(32) %1) #11
  %40 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %37, i64 1
  %41 = ptrtoint %"struct.cc::AnimationWorkletOutput::AnimationState"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.1290", %"class.std::__1::vector.1290"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"** %42, align 8
  %44 = load %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"** %3, align 8
  %45 = icmp eq %"struct.cc::AnimationWorkletOutput::AnimationState"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.cc::AnimationWorkletOutput::AnimationState"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"struct.cc::AnimationWorkletOutput::AnimationState"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"struct.cc::AnimationWorkletOutput::AnimationState"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %50, i64 -1
  tail call void @_ZN2cc22AnimationWorkletOutput14AnimationStateC1ERKS1_(%"struct.cc::AnimationWorkletOutput::AnimationState"* %51, %"struct.cc::AnimationWorkletOutput::AnimationState"* dereferenceable(32) %52) #11
  %53 = icmp eq %"struct.cc::AnimationWorkletOutput::AnimationState"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"struct.cc::AnimationWorkletOutput::AnimationState"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"struct.cc::AnimationWorkletOutput::AnimationState"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"struct.cc::AnimationWorkletOutput::AnimationState"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"struct.cc::AnimationWorkletOutput::AnimationState"*
  %63 = icmp eq %"struct.cc::AnimationWorkletOutput::AnimationState"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"struct.cc::AnimationWorkletOutput::AnimationState"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput::AnimationState", %"struct.cc::AnimationWorkletOutput::AnimationState"* %65, i64 -1
  tail call void @_ZN2cc22AnimationWorkletOutput14AnimationStateD1Ev(%"struct.cc::AnimationWorkletOutput::AnimationState"* %66) #11
  %67 = icmp eq %"struct.cc::AnimationWorkletOutput::AnimationState"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN2cc22AnimationWorkletOutput14AnimationStateC1ERKS1_(%"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

declare zeroext i1 @_ZNK2v86Object13IsConstructorEv(%"class.v8::Object"*) local_unnamed_addr #1

declare %"class.v8::Function"* @_ZN5blink23CallbackMethodRetriever18GetFunctionOrThrowEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"*, %"class.v8::Object"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackFunctionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CallbackFunctionBase"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CallbackFunctionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::CallbackFunctionBase"*)***
  %4 = load void (%"class.blink::CallbackFunctionBase"*)**, void (%"class.blink::CallbackFunctionBase"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %4, i64 1
  %6 = load void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %5, align 8
  tail call void %6(%"class.blink::CallbackFunctionBase"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"*, %"class.v8::Object"*) unnamed_addr #1

declare %"class.v8::Value"* @_ZN5blink23CallbackMethodRetriever22GetFunctionOrUndefinedEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"*, %"class.v8::Object"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN5blink21SerializedScriptValue11DeserializeEPN2v87IsolateERKNS0_18DeserializeOptionsE(%"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"struct.blink::SerializedScriptValue::DeserializeOptions"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.1088, %class.scoped_refptr.1088* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #11
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.775"* dereferenceable(8) %9) #11
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #11
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #11
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #11
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #11
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.1088* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #11
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #11
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #11
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #11
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #11
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #11
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #11
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.1088* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #11
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #11
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #11
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.10, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0)) #11
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.10, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0)) #11
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.775"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #1

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #11

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #2

declare { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #11
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.751"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.751"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.763"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18AnimatorDefinitionEE5TraceEPNS_7VisitorEPKv) #11
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.763"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18AnimatorDefinitionEE5TraceEPNS_7VisitorEPKv) #11
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18AnimatorDefinitionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AnimatorDefinition"*
  tail call void @_ZNK5blink18AnimatorDefinition5TraceEPNS_7VisitorE(%"class.blink::AnimatorDefinition"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink18AnimatorDefinition5TraceEPNS_7VisitorE(%"class.blink::AnimatorDefinition"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %93, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.758"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %52 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %52, i64 3
  %54 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::Visitor"* %0) #11
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %93, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %59

59:                                               ; preds = %90, %57
  %60 = phi i64 [ 0, %57 ], [ %91, %90 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %30, i64 %60, i32 0
  br i1 %55, label %62, label %76

62:                                               ; preds = %59
  %63 = load atomic i32, i32* %61 monotonic, align 4
  %64 = add i32 %63, 1
  %65 = icmp ult i32 %64, 2
  br i1 %65, label %90, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %30, i64 %60, i32 1
  %68 = bitcast %"class.blink::Member.759"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %66
  %72 = inttoptr i64 %69 to i8*
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %74 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, i64 5
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, align 8
  tail call void %75(%"class.blink::Visitor"* %0, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AnimatorEE5TraceEPNS_7VisitorEPKv) #11
  br label %90

76:                                               ; preds = %59
  %77 = load i32, i32* %61, align 4
  %78 = add i32 %77, 1
  %79 = icmp ult i32 %78, 2
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %30, i64 %60, i32 1
  %82 = bitcast %"class.blink::Member.759"* %81 to i64*
  %83 = load atomic i64, i64* %82 monotonic, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = inttoptr i64 %83 to i8*
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %88 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %87, i64 5
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %88, align 8
  tail call void %89(%"class.blink::Visitor"* %0, i8* nonnull %86, i8* nonnull %86, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AnimatorEE5TraceEPNS_7VisitorEPKv) #11
  br label %90

90:                                               ; preds = %85, %80, %76, %71, %66, %62
  %91 = add nuw nsw i64 %60, 1
  %92 = icmp eq i64 %91, %50
  br i1 %92, label %93, label %59

93:                                               ; preds = %90, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8AnimatorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Animator"*
  tail call void @_ZNK5blink8Animator5TraceEPNS_7VisitorE(%"class.blink::Animator"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink8Animator5TraceEPNS_7VisitorE(%"class.blink::Animator"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.758"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERiRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.756"*, i32* dereferenceable(4), %"class.blink::Animator"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.758"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.758"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.756"* %0, %"struct.WTF::KeyValuePair.758"* null)
  %9 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.758"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.758"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.758"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %140, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.758"* %52, %"struct.WTF::KeyValuePair.758"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.758"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.758"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #11
  %72 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.758"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %81, i64 0, i32 1
  %84 = load %"class.blink::Animator"*, %"class.blink::Animator"** %2, align 8
  %85 = ptrtoint %"class.blink::Animator"* %84 to i64
  %86 = bitcast %"class.blink::Member.759"* %83 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %79
  %90 = bitcast %"class.blink::Animator"* %84 to i8*
  %91 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #11
  br label %92

92:                                               ; preds = %79, %89
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %97 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %96, i64 0, i32 1
  %98 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %97) #11
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %102, !prof !3

100:                                              ; preds = %95
  %101 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %97, i8* %101) #11
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i8* [ %101, %100 ], [ %98, %95 ]
  %104 = bitcast i8* %103 to %"class.blink::ThreadState"**
  %105 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 9
  %107 = load i8, i8* %106, align 1, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %128, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 13
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %110, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %113, align 8
  %115 = load atomic i64, i64* %86 monotonic, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %114, i64 0, i32 0, i32 0
  %119 = inttoptr i64 %115 to i8*
  %120 = bitcast %"class.blink::MarkingVisitor"* %114 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %121 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %121, i64 5
  %123 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %122, align 8
  tail call void %123(%"class.blink::Visitor"* %118, i8* nonnull %119, i8* %119, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AnimatorEE5TraceEPNS_7VisitorEPKv) #11
  %124 = load i64, i64* %110, align 8
  br label %125

125:                                              ; preds = %117, %109
  %126 = phi i64 [ %112, %109 ], [ %124, %117 ]
  %127 = add i64 %126, -1
  store i64 %127, i64* %110, align 8
  br label %128

128:                                              ; preds = %92, %102, %125
  %129 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %129, align 4
  %132 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, %131
  %135 = shl i32 %134, 1
  %136 = load i32, i32* %12, align 8
  %137 = icmp ult i32 %135, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %128
  %139 = tail call %"struct.WTF::KeyValuePair.758"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.756"* %0, %"struct.WTF::KeyValuePair.758"* %81)
  br label %140

140:                                              ; preds = %50, %128, %138
  %141 = phi i8 [ 1, %128 ], [ 1, %138 ], [ 0, %50 ]
  %142 = phi %"struct.WTF::KeyValuePair.758"* [ %81, %128 ], [ %139, %138 ], [ %52, %50 ]
  %143 = insertvalue { %"struct.WTF::KeyValuePair.758"*, i8 } undef, %"struct.WTF::KeyValuePair.758"* %142, 0
  %144 = insertvalue { %"struct.WTF::KeyValuePair.758"*, i8 } %143, i8 %141, 1
  ret { %"struct.WTF::KeyValuePair.758"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.758"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.756"*, %"struct.WTF::KeyValuePair.758"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.758"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.756"* %0, i32 %35, %"struct.WTF::KeyValuePair.758"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.1645"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking.1645"* %42 to %"struct.WTF::KeyValuePair.758"*
  %44 = call %"struct.WTF::KeyValuePair.758"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.756"* %0, %"struct.WTF::KeyValuePair.758"* %43, i32 %40, %"struct.WTF::KeyValuePair.758"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.758"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.758"* %46
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.758"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.756"*, i32, %"struct.WTF::KeyValuePair.758"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.758"* %32, null
  br i1 %33, label %82, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.758"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %82

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.1645"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking.1645"* %44 to %"struct.WTF::KeyValuePair.758"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %79, %39
  %48 = phi %"struct.WTF::KeyValuePair.758"* [ null, %39 ], [ %65, %79 ]
  %49 = bitcast %"class.WTF::HashTable.756"* %0 to %"class.blink::HeapHashTableBacking.1645"**
  store %"class.blink::HeapHashTableBacking.1645"* %44, %"class.blink::HeapHashTableBacking.1645"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.1645", %"class.blink::HeapHashTableBacking.1645"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.758"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.758"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.756"* %0, %"struct.WTF::KeyValuePair.758"* %42, i32 %1, %"struct.WTF::KeyValuePair.758"* %48)
  br label %82

58:                                               ; preds = %39, %79
  %59 = phi i64 [ %80, %79 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.758"* [ %65, %79 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.758"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.758"* %64, %"struct.WTF::KeyValuePair.758"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %62, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 1
  %69 = icmp ult i32 %68, 2
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.758"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false)
  br label %79

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %64, i64 0, i32 0
  store i32 %67, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %45, i64 %59, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %61, i64 %59, i32 1
  %76 = bitcast %"class.blink::Member.759"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::Member.759"* %74 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %70, %72
  %80 = add nuw nsw i64 %59, 1
  %81 = icmp eq i64 %80, %43
  br i1 %81, label %47, label %58

82:                                               ; preds = %34, %30, %55
  %83 = phi %"struct.WTF::KeyValuePair.758"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.758"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.758"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.756"*, %"struct.WTF::KeyValuePair.758"*, i32, %"struct.WTF::KeyValuePair.758"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.758"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %10, align 8
  br label %37

14:                                               ; preds = %124, %4
  %15 = phi %"struct.WTF::KeyValuePair.758"* [ null, %4 ], [ %127, %124 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.WTF::KeyValuePair.758"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #11
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.756"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"struct.WTF::KeyValuePair.758"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #11
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair.758"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"struct.WTF::KeyValuePair.758"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #11
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"struct.WTF::KeyValuePair.758"* %15

37:                                               ; preds = %9, %124
  %38 = phi i32 [ %7, %9 ], [ %125, %124 ]
  %39 = phi %"struct.WTF::KeyValuePair.758"* [ %13, %9 ], [ %126, %124 ]
  %40 = phi %"struct.WTF::KeyValuePair.758"* [ null, %9 ], [ %127, %124 ]
  %41 = phi i32 [ 0, %9 ], [ %128, %124 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %39, i64 %42, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  %46 = icmp ult i32 %45, 2
  br i1 %46, label %124, label %47

47:                                               ; preds = %37
  %48 = shl i32 %44, 15
  %49 = xor i32 %48, -1
  %50 = add i32 %44, %49
  %51 = lshr i32 %50, 10
  %52 = xor i32 %51, %50
  %53 = mul i32 %52, 9
  %54 = lshr i32 %53, 6
  %55 = xor i32 %54, %53
  %56 = shl i32 %55, 11
  %57 = xor i32 %56, -1
  %58 = add i32 %55, %57
  %59 = lshr i32 %58, 16
  %60 = xor i32 %59, %58
  %61 = and i32 %60, %11
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %1, i64 %62
  %64 = ptrtoint %"struct.WTF::KeyValuePair.758"* %63 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %63, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %85, label %68

68:                                               ; preds = %47
  %69 = xor i32 %60, -1
  %70 = lshr i32 %58, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"struct.WTF::KeyValuePair.758"* %105 to i64
  %84 = inttoptr i64 %100 to %"struct.WTF::KeyValuePair.758"*
  br label %85

85:                                               ; preds = %82, %47
  %86 = phi i64 [ %83, %82 ], [ %64, %47 ]
  %87 = phi %"struct.WTF::KeyValuePair.758"* [ %84, %82 ], [ null, %47 ]
  %88 = icmp eq %"struct.WTF::KeyValuePair.758"* %87, null
  %89 = ptrtoint %"struct.WTF::KeyValuePair.758"* %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %110

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi i32 [ %66, %68 ], [ %108, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq i32 %93, %44
  br i1 %97, label %110, label %98

98:                                               ; preds = %91
  %99 = icmp eq i32 %93, -1
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %12
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %1, i64 %104
  %106 = ptrtoint %"struct.WTF::KeyValuePair.758"* %105 to i64
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %105, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %82, label %91

110:                                              ; preds = %91, %85
  %111 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %112 = inttoptr i64 %111 to %"struct.WTF::KeyValuePair.758"*
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %112, i64 0, i32 0
  store i32 %44, i32* %113, align 8
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %112, i64 0, i32 1
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %39, i64 %42, i32 1
  %116 = bitcast %"class.blink::Member.759"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.blink::Member.759"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = load %"struct.WTF::KeyValuePair.758"*, %"struct.WTF::KeyValuePair.758"** %10, align 8
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %119, i64 %42
  %121 = icmp eq %"struct.WTF::KeyValuePair.758"* %120, %3
  %122 = select i1 %121, %"struct.WTF::KeyValuePair.758"* %112, %"struct.WTF::KeyValuePair.758"* %40
  %123 = load i32, i32* %6, align 8
  br label %124

124:                                              ; preds = %37, %110
  %125 = phi i32 [ %38, %37 ], [ %123, %110 ]
  %126 = phi %"struct.WTF::KeyValuePair.758"* [ %39, %37 ], [ %119, %110 ]
  %127 = phi %"struct.WTF::KeyValuePair.758"* [ %40, %37 ], [ %122, %110 ]
  %128 = add i32 %41, 1
  %129 = icmp eq i32 %128, %125
  br i1 %129, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.1645"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.21, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.1645"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.1645"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIiNS1_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIiEENS1_18HashMapValueTraitsINS1_10HashTraitsIiEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([346 x i8], [346 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIiNS_12KeyValuePairIiNS1_6MemberINS1_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSD_IS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.756"*, %"struct.WTF::KeyValuePair.758"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %1, i64 0, i32 0
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.758", %"struct.WTF::KeyValuePair.758"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.759"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable.756", %"class.WTF::HashTable.756"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #11
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !3

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #11
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking.1645"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIiNS2_12KeyValuePairIiNS_6MemberINS_8AnimatorEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIiEENS2_18HashMapValueTraitsINS2_10HashTraitsIiEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #11
  %48 = bitcast %"class.blink::HeapHashTableBacking.1645"* %47 to %"struct.WTF::KeyValuePair.758"*
  %49 = tail call %"struct.WTF::KeyValuePair.758"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiN5blink6MemberINS2_8AnimatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.756"* %0, %"struct.WTF::KeyValuePair.758"* %48, i32 %45, %"struct.WTF::KeyValuePair.758"* null) #11
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6TimingEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 26817331
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 26817331) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.23, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.24, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 80
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4absl8optionalIN4base9TimeDeltaEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.23, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.24, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EES1_EEbRKT0_(%"class.WTF::HashTable.749"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.751"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #11
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.751"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.751"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #11
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.751"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  %63 = icmp ne %"struct.WTF::KeyValuePair.751"* %62, null
  ret i1 %63
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1667", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1667"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1667", %"class.WTF::StringTypeAdapter.1667"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1667"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1667"* nonnull %4, i8* %14) #11
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1305"* %9) #11
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1305"* %9) #11
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %25, i8* %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1667", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1668", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1667", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1667"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1667"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1667"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.1667"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1667", %"class.WTF::StringTypeAdapter.1667"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1667"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.1668"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1668", %"class.WTF::StringTypeAdapter.1668"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1668", %"class.WTF::StringTypeAdapter.1668"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1668"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1667"* nonnull %3, i8* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1668", %"class.WTF::StringTypeAdapter.1668"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1669"* nonnull %34, i8* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1305"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1667"* nonnull %5, i8* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1667", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1668", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1667", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1667"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1667"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1667"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.1667"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1667", %"class.WTF::StringTypeAdapter.1667"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1667"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.1668"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1668", %"class.WTF::StringTypeAdapter.1668"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1668", %"class.WTF::StringTypeAdapter.1668"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1668"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1667"* nonnull %3, i16* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1668", %"class.WTF::StringTypeAdapter.1668"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1669"* nonnull %34, i16* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1305"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1667"* nonnull %5, i16* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1667"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1305"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1667", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.1667"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1667", %"class.WTF::StringTypeAdapter.1667"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1305", %"class.WTF::StringAppend.1305"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.1667"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1667"* nonnull %4, i8* %13) #11
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1305", %"class.WTF::StringAppend.1305"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %30, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %45, i8* %46) #11
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1667"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1669"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1667"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1669"*, i16*) local_unnamed_addr #1

declare void @_ZN5blink18AnimatorDefinitionC1EPNS_21V8AnimatorConstructorEPNS_17V8AnimateCallbackEPNS_15V8StateCallbackE(%"class.blink::AnimatorDefinition"*, %"class.blink::V8AnimatorConstructor"*, %"class.blink::V8AnimateCallback"*, %"class.blink::V8StateCallback"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_18AnimatorDefinitionEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_18AnimatorDefinitionEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_18AnimatorDefinitionEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_18AnimatorDefinitionEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18AnimatorDefinitionEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_18AnimatorDefinitionEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.751"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.749"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::AnimatorDefinition"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.751"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.749"* %0, %"struct.WTF::KeyValuePair.751"* null)
  %9 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.751"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #11
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.751"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.751"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.751"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #11
  br i1 %57, label %176, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.751"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.751"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.751"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #11
  %72 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.751"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #11
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #11
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.751"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #11
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %79, i64 0, i32 1
  %120 = load %"class.blink::AnimatorDefinition"*, %"class.blink::AnimatorDefinition"** %2, align 8
  %121 = ptrtoint %"class.blink::AnimatorDefinition"* %120 to i64
  %122 = bitcast %"class.blink::Member.763"* %119 to i64*
  store atomic i64 %121, i64* %122 monotonic, align 8
  %123 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %118
  %126 = bitcast %"class.blink::AnimatorDefinition"* %120 to i8*
  %127 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %126) #11
  br label %128

128:                                              ; preds = %118, %125
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %164, label %131

131:                                              ; preds = %128
  %132 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %133 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %132, i64 0, i32 1
  %134 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %133) #11
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %138, !prof !3

136:                                              ; preds = %131
  %137 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %133, i8* %137) #11
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i8* [ %137, %136 ], [ %134, %131 ]
  %140 = bitcast i8* %139 to %"class.blink::ThreadState"**
  %141 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 9
  %143 = load i8, i8* %142, align 1, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %164, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 13
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %146, align 8
  %149 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %149, align 8
  %151 = load atomic i64, i64* %122 monotonic, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %150, i64 0, i32 0, i32 0
  %155 = inttoptr i64 %151 to i8*
  %156 = bitcast %"class.blink::MarkingVisitor"* %150 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %157 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %157, i64 5
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %158, align 8
  tail call void %159(%"class.blink::Visitor"* %154, i8* nonnull %155, i8* %155, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18AnimatorDefinitionEE5TraceEPNS_7VisitorEPKv) #11
  %160 = load i64, i64* %146, align 8
  br label %161

161:                                              ; preds = %153, %145
  %162 = phi i64 [ %148, %145 ], [ %160, %153 ]
  %163 = add i64 %162, -1
  store i64 %163, i64* %146, align 8
  br label %164

164:                                              ; preds = %128, %138, %161
  %165 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %165, align 4
  %168 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 3
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, %167
  %171 = shl i32 %170, 1
  %172 = load i32, i32* %12, align 8
  %173 = icmp ult i32 %171, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %164
  %175 = tail call %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.749"* %0, %"struct.WTF::KeyValuePair.751"* %79)
  br label %176

176:                                              ; preds = %54, %164, %174
  %177 = phi i8 [ 1, %164 ], [ 1, %174 ], [ 0, %54 ]
  %178 = phi %"struct.WTF::KeyValuePair.751"* [ %79, %164 ], [ %175, %174 ], [ %47, %54 ]
  %179 = insertvalue { %"struct.WTF::KeyValuePair.751"*, i8 } undef, %"struct.WTF::KeyValuePair.751"* %178, 0
  %180 = insertvalue { %"struct.WTF::KeyValuePair.751"*, i8 } %179, i8 %177, 1
  ret { %"struct.WTF::KeyValuePair.751"*, i8 } %180
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.749"*, %"struct.WTF::KeyValuePair.751"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.749"* %0, i32 %35, %"struct.WTF::KeyValuePair.751"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.751"*
  %44 = call %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.749"* %0, %"struct.WTF::KeyValuePair.751"* %43, i32 %40, %"struct.WTF::KeyValuePair.751"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.751"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.751"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.749"*, i32, %"struct.WTF::KeyValuePair.751"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.751"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.751"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.751"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.751"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.749"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.751"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.749"* %0, %"struct.WTF::KeyValuePair.751"* %42, i32 %1, %"struct.WTF::KeyValuePair.751"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.751"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.751"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.751"* %64, %"struct.WTF::KeyValuePair.751"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.751"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.751"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #11
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.751"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.763"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.763"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.751"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.751"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.749"*, %"struct.WTF::KeyValuePair.751"*, i32, %"struct.WTF::KeyValuePair.751"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.749", align 8
  %6 = bitcast %"class.WTF::HashTable.749"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.749"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.751"* %1, %"struct.WTF::KeyValuePair.751"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.751"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.751"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable.749"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.751"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.749"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #11
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.749"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.749"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #11
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.751"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #11
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair.751"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member.763"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #11
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.751"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair.751"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair.751"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair.751"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair.751"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.749"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #11
  %101 = extractvalue { %"struct.WTF::KeyValuePair.751"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #11
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair.751"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member.763"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.763"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair.751"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.751"* %101, %"struct.WTF::KeyValuePair.751"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair.751"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair.751"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.21, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_18AnimatorDefinitionEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_18AnimatorDefinitionEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([396 x i8], [396 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_18AnimatorDefinitionEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.751"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #11
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_18AnimatorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.751"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.749"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #11
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.751"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.751"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.751"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.751"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.751"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.751"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.751"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.751"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #11
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.751"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.751"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.751"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.751"*, i8 } undef, %"struct.WTF::KeyValuePair.751"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.751"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.751"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.751"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_18AnimatorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.749"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.751"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #11
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.751"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.751"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #11
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.751"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  ret %"struct.WTF::KeyValuePair.751"* %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"*, %"class.blink::WorldSafeV8Reference"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::WorldSafeV8Reference"* %0, %1
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %7) #11
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %6) #11
  br label %16

16:                                               ; preds = %2, %11, %15
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.775"* dereferenceable(8) %3) #11
  %17 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 1, i32 0
  %19 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %18, align 8
  %20 = icmp eq %"class.blink::DOMWrapperWorld"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #11
  br label %23

23:                                               ; preds = %16, %21
  %24 = ptrtoint %"class.blink::DOMWrapperWorld"* %19 to i64
  %25 = bitcast %class.scoped_refptr.1088* %17 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.1088, %class.scoped_refptr.1088* %17, i64 0, i32 0
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #11
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #11
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #11
  br label %36

36:                                               ; preds = %23, %29, %34
  ret %"class.blink::WorldSafeV8Reference"* %0
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Animator"* @_ZN5blink25MakeGarbageCollectedTraitINS_8AnimatorEE4CallIJRPN2v87IsolateERPNS_18AnimatorDefinitionENS4_5LocalINS4_5ValueEEERKN3WTF6StringENS_23WorkletAnimationOptionsERKNSE_6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENSE_18PartitionAllocatorEEERKNSJ_INS_6TimingELj0ESP_EEEEEPS1_DpOT_(%"class.v8::Isolate"** dereferenceable(8), %"class.blink::AnimatorDefinition"** dereferenceable(8), %"class.v8::Local.1307"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::WorkletAnimationOptions"* dereferenceable(16), %"class.WTF::Vector.1243"* dereferenceable(16), %"class.WTF::Vector.1248"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.blink::WorkletAnimationOptions", align 8
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8AnimatorEEEPhm(i64 56) #11
  %11 = bitcast i8* %10 to %"class.blink::Animator"*
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %0, align 8
  %13 = load %"class.blink::AnimatorDefinition"*, %"class.blink::AnimatorDefinition"** %1, align 8
  %14 = getelementptr inbounds %"class.v8::Local.1307", %"class.v8::Local.1307"* %2, i64 0, i32 0
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink23WorkletAnimationOptionsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %4, i64 0, i32 1, i32 0
  %18 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::WorkletAnimationOptions", %"class.blink::WorkletAnimationOptions"* %9, i64 0, i32 1, i32 0
  store %"class.blink::SerializedScriptValue"* %18, %"class.blink::SerializedScriptValue"** %19, align 8
  %20 = icmp eq %"class.blink::SerializedScriptValue"* %18, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0)) #11
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  br label %28

28:                                               ; preds = %7, %21, %25
  call void @_ZN5blink8AnimatorC1EPN2v87IsolateEPNS_18AnimatorDefinitionENS1_5LocalINS1_5ValueEEERKN3WTF6StringENS_23WorkletAnimationOptionsERKNS9_6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS9_18PartitionAllocatorEEERKNSE_INS_6TimingELj0ESK_EE(%"class.blink::Animator"* %11, %"class.v8::Isolate"* %12, %"class.blink::AnimatorDefinition"* %13, %"class.v8::Value"* %15, %"class.WTF::String"* dereferenceable(8) %3, %"class.blink::WorkletAnimationOptions"* nonnull %9, %"class.WTF::Vector.1243"* dereferenceable(16) %5, %"class.WTF::Vector.1248"* dereferenceable(16) %6) #11
  call void @_ZN5blink23WorkletAnimationOptionsD1Ev(%"class.blink::WorkletAnimationOptions"* nonnull %9) #11
  %29 = getelementptr inbounds i8, i8* %10, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::Animator"* %11
}

declare void @_ZN5blink8AnimatorC1EPN2v87IsolateEPNS_18AnimatorDefinitionENS1_5LocalINS1_5ValueEEERKN3WTF6StringENS_23WorkletAnimationOptionsERKNS9_6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS9_18PartitionAllocatorEEERKNSE_INS_6TimingELj0ESK_EE(%"class.blink::Animator"*, %"class.v8::Isolate"*, %"class.blink::AnimatorDefinition"*, %"class.v8::Value"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WorkletAnimationOptions"*, %"class.WTF::Vector.1243"* dereferenceable(16), %"class.WTF::Vector.1248"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8AnimatorEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8AnimatorEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8AnimatorEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8AnimatorEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8AnimatorEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8AnimatorEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Animator"*
  tail call void @_ZN5blink8AnimatorD1Ev(%"class.blink::Animator"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8AnimatorEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind
declare void @_ZN5blink8AnimatorD1Ev(%"class.blink::Animator"*) unnamed_addr #2

declare { i8, i64 } @_ZNK5blink22WorkletAnimationEffect10local_timeEv(%"class.blink::WorkletAnimationEffect"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.847"* @_ZNK3WTF6VectorIN5blink6MemberINS1_22WorkletAnimationEffectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.844"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.844", %"class.WTF::Vector.844"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.28, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.844", %"class.WTF::Vector.844"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.847"*, %"class.blink::Member.847"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.847", %"class.blink::Member.847"* %24, i64 %25
  ret %"class.blink::Member.847"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.absl::optional.849"* @_ZN3WTF6VectorIN4absl8optionalIN4base9TimeDeltaEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1243"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1243", %"class.WTF::Vector.1243"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.28, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1243", %"class.WTF::Vector.1243"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.absl::optional.849"*, %"class.absl::optional.849"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.absl::optional.849", %"class.absl::optional.849"* %24, i64 %25
  ret %"class.absl::optional.849"* %26
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink8Animator7optionsEv: argument 0"}
!9 = distinct !{!9, !"_ZN5blink8Animator7optionsEv"}
!10 = distinct !{!10, !5}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink27AnimationWorkletGlobalScope24GetExecutionContextTokenEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink27AnimationWorkletGlobalScope24GetExecutionContextTokenEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv"}
