; ModuleID = '../../third_party/pdfium/xfa/fxfa/parser/cxfa_treelist.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/parser/cxfa_treelist.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i16 }
%class.CXFA_TreeList = type { %class.CXFA_List }
%class.CXFA_List = type { %class.CXFA_Object }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate", i32, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%class.CXFA_Document = type { %"class.fxcrt::UnownedPtr.2", %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.4", %"class.cppgc::internal::BasicMember.5", %"class.std::__1::unique_ptr", %"class.cppgc::internal::BasicMember.7", %"class.cppgc::internal::BasicMember.8", %"class.cppgc::internal::BasicMember.9", %"class.cppgc::internal::BasicMember.10", %"class.cppgc::internal::BasicMember.11", %"class.cppgc::internal::BasicMember.12", %"class.cppgc::internal::BasicMember.13", %"class.cppgc::internal::BasicMember.14", %"class.std::__1::map", %"class.std::__1::vector", i32, %"class.pdfium::Optional", i8, i8 }
%"class.fxcrt::UnownedPtr.2" = type { %"class.cppgc::Heap"* }
%"class.cppgc::Heap" = type { i32 (...)** }
%"class.cppgc::internal::BasicMember.3" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.4" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.5" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFXJSE_Engine* }
%class.CFXJSE_Engine = type opaque
%"class.cppgc::internal::BasicMember.7" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.8" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.9" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.10" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.11" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.12" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.13" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.14" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::BasicMember.5"*, %"class.cppgc::internal::BasicMember.5"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.cppgc::internal::BasicMember.5"* }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"struct.pdfium::internal::DummyUnionMember" }
%"struct.pdfium::internal::DummyUnionMember" = type { i8 }
%"class.cppgc::AllocationHandle" = type opaque
%class.CJX_TreeList = type { %class.CJX_List }
%class.CJX_List = type { %class.CJX_Object }
%class.CJX_Object = type { %class.CFXJSE_HostObject, %"class.cppgc::internal::BasicMember.27", %"class.cppgc::internal::BasicMember.28", %"class.cppgc::internal::BasicMember.29", %"class.std::__1::unique_ptr.30", %"class.std::__1::map.36", i64 }
%class.CFXJSE_HostObject = type { i32 (...)** }
%"class.cppgc::internal::BasicMember.27" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.28" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.29" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.CFXJSE_MapModule* }
%class.CFXJSE_MapModule = type opaque
%"class.std::__1::map.36" = type { %"class.std::__1::__tree.37" }
%"class.std::__1::__tree.37" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.47", %"class.pdfium::span.49", i32, %"class.fxcrt::UnownedPtr.51", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember.5", %"class.std::__1::vector", %"class.cppgc::internal::BasicMember.52", %"class.cppgc::internal::BasicMember.53" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.5", %"class.cppgc::internal::BasicMember.5", %"class.cppgc::internal::BasicMember.5", %"class.cppgc::internal::BasicMember.5", %"class.cppgc::internal::BasicMember.5" }
%"class.pdfium::span.47" = type { %"class.fxcrt::UnownedPtr.48", i64 }
%"class.fxcrt::UnownedPtr.48" = type { %"struct.CXFA_Node::PropertyData"* }
%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"class.pdfium::span.49" = type { %"class.fxcrt::UnownedPtr.50", i64 }
%"class.fxcrt::UnownedPtr.50" = type { %"struct.CXFA_Node::AttributeData"* }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"class.fxcrt::UnownedPtr.51" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type opaque
%"class.cppgc::internal::BasicMember.52" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.53" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::StringViewTemplate.54" = type { %"class.pdfium::span.55" }
%"class.pdfium::span.55" = type { %"class.fxcrt::UnownedPtr.56", i64 }
%"class.fxcrt::UnownedPtr.56" = type { i32* }
%"class.cppgc::Visitor" = type { i32 (...)** }

$_ZN5cppgc8internal14FinalizerTraitI10CJX_ObjectE8FinalizeEPv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI10CJX_ObjectE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5cppgc8internal9NameTraitI10CJX_ObjectE7GetNameEPKv = comdat any

$_ZZN5cppgc8internal11GCInfoTraitI10CJX_ObjectE5IndexEvE16registered_index = comdat any

@_ZTV13CXFA_TreeList = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CXFA_TreeList*)* @_ZN13CXFA_TreeListD2Ev to i8*), i8* bitcast (void (%class.CXFA_TreeList*)* @_ZN13CXFA_TreeListD0Ev to i8*), i8* bitcast (void (%class.CXFA_Object*, %"class.cppgc::Visitor"*)* @_ZNK11CXFA_Object5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZZN5cppgc8internal11GCInfoTraitI10CJX_ObjectE5IndexEvE16registered_index = linkonce_odr hidden global %"struct.std::__1::atomic" zeroinitializer, comdat, align 2
@_ZN5cppgc12NameProvider11kHiddenNameE = external constant [13 x i8], align 1

@_ZN13CXFA_TreeListD1Ev = hidden unnamed_addr alias void (%class.CXFA_TreeList*), void (%class.CXFA_TreeList*)* @_ZN13CXFA_TreeListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CXFA_TreeListC2EP13CXFA_Document(%class.CXFA_TreeList*, %class.CXFA_Document*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_TreeList, %class.CXFA_TreeList* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13CXFA_TreeList, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CXFA_TreeList, %class.CXFA_TreeList* %0, i64 0, i32 0
  %5 = tail call %"class.cppgc::Heap"* @_ZNK13CXFA_Document7GetHeapEv(%class.CXFA_Document* %1) #6
  %6 = tail call %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"* %5) #6
  %7 = load atomic i16, i16* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZZN5cppgc8internal11GCInfoTraitI10CJX_ObjectE5IndexEvE16registered_index, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = tail call zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic"* nonnull dereferenceable(2) @_ZZN5cppgc8internal11GCInfoTraitI10CJX_ObjectE5IndexEvE16registered_index, void (i8*)* nonnull @_ZN5cppgc8internal14FinalizerTraitI10CJX_ObjectE8FinalizeEPv, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI10CJX_ObjectE5TraceEPNS_7VisitorEPKv, { i8*, i8 } (i8*)* nonnull @_ZN5cppgc8internal9NameTraitI10CJX_ObjectE7GetNameEPKv, i1 zeroext true) #6
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi i16 [ %10, %9 ], [ %7, %2 ]
  %13 = tail call i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"* %6, i64 72, i16 zeroext %12) #6
  %14 = bitcast i8* %13 to %class.CJX_TreeList*
  tail call void @_ZN12CJX_TreeListC1EP13CXFA_TreeList(%class.CJX_TreeList* %14, %class.CXFA_TreeList* %0) #6
  %15 = getelementptr inbounds i8, i8* %13, i64 -4
  %16 = bitcast i8* %15 to i16*
  %17 = atomicrmw or i16* %16, i16 1 release
  %18 = bitcast i8* %13 to %class.CJX_Object*
  tail call void @_ZN9CXFA_ListC2EP13CXFA_Document14XFA_ObjectType11XFA_ElementP10CJX_Object(%class.CXFA_List* %4, %class.CXFA_Document* %1, i32 7, i16 signext 309, %class.CJX_Object* %18) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13CXFA_TreeList, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare %"class.cppgc::Heap"* @_ZNK13CXFA_Document7GetHeapEv(%class.CXFA_Document*) local_unnamed_addr #1

declare %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"*) local_unnamed_addr #1

declare void @_ZN9CXFA_ListC2EP13CXFA_Document14XFA_ObjectType11XFA_ElementP10CJX_Object(%class.CXFA_List*, %class.CXFA_Document*, i32, i16 signext, %class.CJX_Object*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9CXFA_ListD2Ev(%class.CXFA_List*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CXFA_TreeListD2Ev(%class.CXFA_TreeList*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_TreeList, %class.CXFA_TreeList* %0, i64 0, i32 0
  tail call void @_ZN9CXFA_ListD2Ev(%class.CXFA_List* %2) #6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN13CXFA_TreeListD0Ev(%class.CXFA_TreeList* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.CXFA_Node* @_ZN13CXFA_TreeList9NamedItemEN5fxcrt18StringViewTemplateIwEE(%class.CXFA_TreeList*, %"class.fxcrt::StringViewTemplate.54"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate.54", align 8
  %4 = bitcast %"class.fxcrt::StringViewTemplate.54"* %3 to i8*
  %5 = bitcast %"class.fxcrt::StringViewTemplate.54"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = call i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate.54"* nonnull %3, i1 zeroext false) #6
  %7 = getelementptr inbounds %class.CXFA_TreeList, %class.CXFA_TreeList* %0, i64 0, i32 0
  %8 = bitcast %class.CXFA_TreeList* %0 to i64 (%class.CXFA_List*)***
  %9 = load i64 (%class.CXFA_List*)**, i64 (%class.CXFA_List*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%class.CXFA_List*)*, i64 (%class.CXFA_List*)** %9, i64 3
  %11 = load i64 (%class.CXFA_List*)*, i64 (%class.CXFA_List*)** %10, align 8
  %12 = call i64 %11(%class.CXFA_List* %7) #6
  %13 = bitcast %class.CXFA_TreeList* %0 to %class.CXFA_Node* (%class.CXFA_List*, i64)***
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %27, label %17

15:                                               ; preds = %17
  %16 = icmp eq i64 %26, %12
  br i1 %16, label %27, label %17

17:                                               ; preds = %2, %15
  %18 = phi i64 [ %26, %15 ], [ 0, %2 ]
  %19 = load %class.CXFA_Node* (%class.CXFA_List*, i64)**, %class.CXFA_Node* (%class.CXFA_List*, i64)*** %13, align 8
  %20 = getelementptr inbounds %class.CXFA_Node* (%class.CXFA_List*, i64)*, %class.CXFA_Node* (%class.CXFA_List*, i64)** %19, i64 7
  %21 = load %class.CXFA_Node* (%class.CXFA_List*, i64)*, %class.CXFA_Node* (%class.CXFA_List*, i64)** %20, align 8
  %22 = call %class.CXFA_Node* %21(%class.CXFA_List* %7, i64 %18) #6
  %23 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %22, i64 0, i32 13
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %6, %24
  %26 = add nuw i64 %18, 1
  br i1 %25, label %27, label %15

27:                                               ; preds = %17, %15, %2
  %28 = phi %class.CXFA_Node* [ null, %2 ], [ %22, %17 ], [ null, %15 ]
  ret %class.CXFA_Node* %28
}

declare i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate.54"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @_ZNK11CXFA_Object5TraceEPN5cppgc7VisitorE(%class.CXFA_Object*, %"class.cppgc::Visitor"*) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN12CJX_TreeListC1EP13CXFA_TreeList(%class.CJX_TreeList*, %class.CXFA_TreeList*) unnamed_addr #1

declare i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"*, i64, i16 zeroext) local_unnamed_addr #1

declare zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic"* dereferenceable(2), void (i8*)*, void (%"class.cppgc::Visitor"*, i8*)*, { i8*, i8 } (i8*)*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14FinalizerTraitI10CJX_ObjectE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %class.CJX_Object*
  %3 = bitcast i8* %0 to void (%class.CJX_Object*)***
  %4 = load void (%class.CJX_Object*)**, void (%class.CJX_Object*)*** %3, align 8
  %5 = load void (%class.CJX_Object*)*, void (%class.CJX_Object*)** %4, align 8
  tail call void %5(%class.CJX_Object* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI10CJX_ObjectE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CJX_Object*
  %4 = bitcast i8* %1 to void (%class.CJX_Object*, %"class.cppgc::Visitor"*)***
  %5 = load void (%class.CJX_Object*, %"class.cppgc::Visitor"*)**, void (%class.CJX_Object*, %"class.cppgc::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.CJX_Object*, %"class.cppgc::Visitor"*)*, void (%class.CJX_Object*, %"class.cppgc::Visitor"*)** %5, i64 4
  %7 = load void (%class.CJX_Object*, %"class.cppgc::Visitor"*)*, void (%class.CJX_Object*, %"class.cppgc::Visitor"*)** %6, align 8
  tail call void %7(%class.CJX_Object* %3, %"class.cppgc::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5cppgc8internal9NameTraitI10CJX_ObjectE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN5cppgc12NameProvider11kHiddenNameE, i64 0, i64 0), i8 1 }
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
