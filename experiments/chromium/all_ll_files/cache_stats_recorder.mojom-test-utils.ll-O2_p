; ModuleID = 'gen/chrome/common/cache_stats_recorder.mojom-test-utils.cc'
source_filename = "gen/chrome/common/cache_stats_recorder.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.chrome::mojom::CacheStatsRecorderAsyncWaiter" = type { %"class.chrome::mojom::CacheStatsRecorder"* }
%"class.chrome::mojom::CacheStatsRecorder" = type { i32 (...)** }
%"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting" = type { %"class.chrome::mojom::CacheStatsRecorder" }

$_ZN6chrome5mojom18CacheStatsRecorderD2Ev = comdat any

$_ZN6chrome5mojom39CacheStatsRecorderInterceptorForTestingD0Ev = comdat any

@_ZTVN6chrome5mojom39CacheStatsRecorderInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.chrome::mojom::CacheStatsRecorder"*)* @_ZN6chrome5mojom18CacheStatsRecorderD2Ev to i8*), i8* bitcast (void (%"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting"*)* @_ZN6chrome5mojom39CacheStatsRecorderInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting"*, i64, i64)* @_ZN6chrome5mojom39CacheStatsRecorderInterceptorForTesting16RecordCacheStatsEmm to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN6chrome5mojom29CacheStatsRecorderAsyncWaiterC1EPNS0_18CacheStatsRecorderE = hidden unnamed_addr alias void (%"class.chrome::mojom::CacheStatsRecorderAsyncWaiter"*, %"class.chrome::mojom::CacheStatsRecorder"*), void (%"class.chrome::mojom::CacheStatsRecorderAsyncWaiter"*, %"class.chrome::mojom::CacheStatsRecorder"*)* @_ZN6chrome5mojom29CacheStatsRecorderAsyncWaiterC2EPNS0_18CacheStatsRecorderE
@_ZN6chrome5mojom29CacheStatsRecorderAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.chrome::mojom::CacheStatsRecorderAsyncWaiter"*), void (%"class.chrome::mojom::CacheStatsRecorderAsyncWaiter"*)* @_ZN6chrome5mojom29CacheStatsRecorderAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6chrome5mojom39CacheStatsRecorderInterceptorForTesting16RecordCacheStatsEmm(%"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting"* %0 to %"class.chrome::mojom::CacheStatsRecorder"* (%"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting"*)***
  %5 = load %"class.chrome::mojom::CacheStatsRecorder"* (%"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting"*)**, %"class.chrome::mojom::CacheStatsRecorder"* (%"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.chrome::mojom::CacheStatsRecorder"* (%"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting"*)*, %"class.chrome::mojom::CacheStatsRecorder"* (%"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting"*)** %5, i64 3
  %7 = load %"class.chrome::mojom::CacheStatsRecorder"* (%"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting"*)*, %"class.chrome::mojom::CacheStatsRecorder"* (%"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.chrome::mojom::CacheStatsRecorder"* %7(%"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting"* %0) #5
  %9 = bitcast %"class.chrome::mojom::CacheStatsRecorder"* %8 to void (%"class.chrome::mojom::CacheStatsRecorder"*, i64, i64)***
  %10 = load void (%"class.chrome::mojom::CacheStatsRecorder"*, i64, i64)**, void (%"class.chrome::mojom::CacheStatsRecorder"*, i64, i64)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.chrome::mojom::CacheStatsRecorder"*, i64, i64)*, void (%"class.chrome::mojom::CacheStatsRecorder"*, i64, i64)** %10, i64 2
  %12 = load void (%"class.chrome::mojom::CacheStatsRecorder"*, i64, i64)*, void (%"class.chrome::mojom::CacheStatsRecorder"*, i64, i64)** %11, align 8
  tail call void %12(%"class.chrome::mojom::CacheStatsRecorder"* %8, i64 %1, i64 %2) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6chrome5mojom29CacheStatsRecorderAsyncWaiterC2EPNS0_18CacheStatsRecorderE(%"class.chrome::mojom::CacheStatsRecorderAsyncWaiter"* nocapture, %"class.chrome::mojom::CacheStatsRecorder"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.chrome::mojom::CacheStatsRecorderAsyncWaiter", %"class.chrome::mojom::CacheStatsRecorderAsyncWaiter"* %0, i64 0, i32 0
  store %"class.chrome::mojom::CacheStatsRecorder"* %1, %"class.chrome::mojom::CacheStatsRecorder"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6chrome5mojom29CacheStatsRecorderAsyncWaiterD2Ev(%"class.chrome::mojom::CacheStatsRecorderAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6chrome5mojom18CacheStatsRecorderD2Ev(%"class.chrome::mojom::CacheStatsRecorder"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6chrome5mojom39CacheStatsRecorderInterceptorForTestingD0Ev(%"class.chrome::mojom::CacheStatsRecorderInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
