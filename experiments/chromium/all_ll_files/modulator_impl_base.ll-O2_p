; ModuleID = '../../third_party/blink/renderer/core/script/modulator_impl_base.cc'
source_filename = "../../third_party/blink/renderer/core/script/modulator_impl_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.74", i32, [4 x i8], %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.244", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.251", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.190", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.110" = type { %"struct.std::__1::__atomic_base.111" }
%"struct.std::__1::__atomic_base.111" = type { %"struct.std::__1::__atomic_base.112" }
%"struct.std::__1::__atomic_base.112" = type { %"struct.std::__1::__cxx_atomic_impl.113" }
%"struct.std::__1::__cxx_atomic_impl.113" = type { %"struct.std::__1::__cxx_atomic_base_impl.114" }
%"struct.std::__1::__cxx_atomic_base_impl.114" = type { i64 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::Worklist.121"* }
%"class.blink::Worklist.121" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::Worklist.128"* }
%"class.blink::Worklist.128" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::Worklist.135"* }
%"class.blink::Worklist.135" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::Worklist.142"* }
%"class.blink::Worklist.142" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::Worklist.149"* }
%"class.blink::Worklist.149" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::Worklist.156"* }
%"class.blink::Worklist.156" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::Worklist.163"* }
%"class.blink::Worklist.163" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.110" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.170", %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.184", [4 x i8] }>
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172", %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { i64 }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { float }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.193", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.202" }
%"class.WTF::Vector.202" = type { %"class.WTF::VectorBuffer.203" }
%"class.WTF::VectorBuffer.203" = type { %"class.WTF::VectorBufferBase.204" }
%"class.WTF::VectorBufferBase.204" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219" }
%"class.WTF::VectorBufferBase.219" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.232" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.121"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.128"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.135"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.142"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.149"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.357" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.250 }
%class.scoped_refptr.250 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.251" = type { %"struct.std::__1::__atomic_base.252" }
%"struct.std::__1::__atomic_base.252" = type { %"struct.std::__1::__cxx_atomic_impl.253" }
%"struct.std::__1::__cxx_atomic_impl.253" = type { %"struct.std::__1::__cxx_atomic_base_impl.254" }
%"struct.std::__1::__cxx_atomic_base_impl.254" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.303" }
%"struct.std::__1::atomic.303" = type { %"struct.std::__1::__atomic_base.304" }
%"struct.std::__1::__atomic_base.304" = type { %"struct.std::__1::__atomic_base.305" }
%"struct.std::__1::__atomic_base.305" = type { %"struct.std::__1::__cxx_atomic_impl.306" }
%"struct.std::__1::__cxx_atomic_impl.306" = type { %"struct.std::__1::__cxx_atomic_base_impl.307" }
%"struct.std::__1::__cxx_atomic_base_impl.307" = type { i32 }
%"class.blink::ModulatorImplBase" = type <{ %"class.blink::Modulator", %"class.blink::Member.54", %class.scoped_refptr.302, %"class.blink::Member.308", %"class.blink::Member.323", %"class.blink::Member.334", %"class.blink::Member.338", %"class.blink::Member.342", i32, [4 x i8] }>
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.58, %"class.blink::Member.255", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.58 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.59", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.59" = type { %"class.base::RefCounted.60" }
%"class.base::RefCounted.60" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.63" }
%"class.blink::HeapHashMap.63" = type { %"class.WTF::HashMap.66" }
%"class.WTF::HashMap.66" = type { %"class.WTF::HashTable.67" }
%"class.WTF::HashTable.67" = type <{ %"struct.WTF::KeyValuePair.69"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.69" = type { %"class.blink::WeakMember.70", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.259", %"class.blink::HeapHashMap.268", %"class.std::__1::unique_ptr.278", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.290", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.293" }
%"class.blink::HeapHashMap.259" = type { %"class.WTF::HashMap.262" }
%"class.WTF::HashMap.262" = type { %"class.WTF::HashTable.263" }
%"class.WTF::HashTable.263" = type <{ %"struct.WTF::KeyValuePair.265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.265" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.268" = type { %"class.WTF::HashMap.271" }
%"class.WTF::HashMap.271" = type { %"class.WTF::HashTable.272" }
%"class.WTF::HashTable.272" = type <{ %"struct.WTF::KeyValuePair.274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.274" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.275" }
%"class.blink::TraceWrapperV8Reference.275" = type { %"class.v8::TracedReference.276" }
%"class.v8::TracedReference.276" = type { %"class.v8::BasicTracedReference.277" }
%"class.v8::BasicTracedReference.277" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.281" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.290" = type { %"class.v8::Persistent.291" }
%"class.v8::Persistent.291" = type { %"class.v8::PersistentBase.292" }
%"class.v8::PersistentBase.292" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.293" = type { %"class.WTF::HashMap.296" }
%"class.WTF::HashMap.296" = type { %"class.WTF::HashTable.297" }
%"class.WTF::HashTable.297" = type <{ %"struct.WTF::KeyValuePair.299"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.299" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.300" }
%"class.blink::Persistent.300" = type { %"class.blink::PersistentBase.301" }
%"class.blink::PersistentBase.301" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.302 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.303" }
%"class.blink::Member.308" = type { %"class.blink::MemberBase.309" }
%"class.blink::MemberBase.309" = type { %"class.blink::ModuleMap"* }
%"class.blink::ModuleMap" = type { %"class.blink::NameClient", %"class.blink::HeapHashMap.312", %"class.blink::Member.319", %"class.blink::Member.321" }
%"class.blink::HeapHashMap.312" = type { %"class.WTF::HashMap.315" }
%"class.WTF::HashMap.315" = type { %"class.WTF::HashTable.316" }
%"class.WTF::HashTable.316" = type <{ %"struct.WTF::KeyValuePair.318"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.318" = type opaque
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::Modulator"* }
%"class.blink::Member.321" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::ModuleScriptLoaderRegistry"* }
%"class.blink::ModuleScriptLoaderRegistry" = type opaque
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::ModuleTreeLinkerRegistry"* }
%"class.blink::ModuleTreeLinkerRegistry" = type { %"class.blink::NameClient", %"class.blink::HeapHashSet.327" }
%"class.blink::HeapHashSet.327" = type { %"class.WTF::HashSet.330" }
%"class.WTF::HashSet.330" = type { %"class.WTF::HashTable.331" }
%"class.WTF::HashTable.331" = type <{ %"class.blink::Member.333"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.333" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::ModuleTreeLinker"* }
%"class.blink::ModuleTreeLinker" = type { %"class.blink::SingleModuleClient", %"class.blink::Member.438", i32, i32, %"class.blink::Member.319", i32, [4 x i8], %"class.WTF::HashSet.440", %"class.blink::Member.323", %"class.blink::Member.445", i32, %"class.blink::Member.447", i8, i64 }
%"class.blink::SingleModuleClient" = type { %"class.blink::NameClient" }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.WTF::HashSet.440" = type { %"class.WTF::HashTable.441" }
%"class.WTF::HashTable.441" = type <{ %"struct.std::__1::pair.444"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.444" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::ModuleTreeClient"* }
%"class.blink::ModuleTreeClient" = type { %"class.blink::NameClient" }
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::ModuleScript"* }
%"class.blink::ModuleScript" = type { %"class.blink::Script", %"class.blink::Member.319", %"class.blink::TraceWrapperV8Reference.387", %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference", %"class.WTF::HashMap.346", %"class.blink::KURL" }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.377", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.382", [6 x i8] }>
%"class.WTF::HashSet.377" = type { %"class.WTF::HashTable.378" }
%"class.WTF::HashTable.378" = type <{ %"struct.std::__1::pair.381"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.381" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.WTF::StringImpl"* }
%"class.base::StrongAlias.382" = type { i8 }
%"class.blink::TraceWrapperV8Reference.387" = type { %"class.v8::TracedReference.388" }
%"class.v8::TracedReference.388" = type { %"class.v8::BasicTracedReference.389" }
%"class.v8::BasicTracedReference.389" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.390", %class.scoped_refptr.393 }
%"class.blink::TraceWrapperV8Reference.390" = type { %"class.v8::TracedReference.391" }
%"class.v8::TracedReference.391" = type { %"class.v8::BasicTracedReference.392" }
%"class.v8::BasicTracedReference.392" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.393 = type { %"class.blink::DOMWrapperWorld"* }
%"class.WTF::HashMap.346" = type { %"class.WTF::HashTable.347" }
%"class.WTF::HashTable.347" = type <{ %"struct.WTF::KeyValuePair.350"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.350" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.371" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.blink::KURL"* }
%"class.blink::Member.334" = type { %"class.blink::MemberBase.335" }
%"class.blink::MemberBase.335" = type { %"class.blink::ModuleRecordResolver"* }
%"class.blink::ModuleRecordResolver" = type { i32 (...)** }
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::DynamicModuleResolver"* }
%"class.blink::DynamicModuleResolver" = type { %"class.blink::Member.319" }
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::ImportMap"* }
%"class.blink::ImportMap" = type { %"class.WTF::HashMap.346", %"class.WTF::Vector.351" }
%"class.WTF::Vector.351" = type { %"class.WTF::VectorBuffer.352" }
%"class.WTF::VectorBuffer.352" = type { %"class.WTF::VectorBufferBase.353" }
%"class.WTF::VectorBufferBase.353" = type { %"struct.std::__1::pair.354"*, i32, i32 }
%"struct.std::__1::pair.354" = type opaque
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.25", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.42", %"class.blink::Member.48", %"class.blink::Member.50", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.4" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.2" }
%"class.WTF::HashTable.2" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.4" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.5" }
%"class.blink::HeapHashMap.5" = type { %"class.WTF::HashMap.8" }
%"class.WTF::HashMap.8" = type { %"class.WTF::HashTable.9" }
%"class.WTF::HashTable.9" = type <{ %"struct.WTF::KeyValuePair.11"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.11" = type { i8*, %"class.blink::Member.433" }
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.435" }
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.22", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.14 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.14 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.22" = type { %"class.WTF::HashTable.23" }
%"class.WTF::HashTable.23" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.29"*, i32, i32 }
%"class.blink::Member.29" = type opaque
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.35", i32, i32 }
%"class.blink::HeapHashMap.35" = type { %"class.WTF::HashMap.38" }
%"class.WTF::HashMap.38" = type { %"class.WTF::HashTable.39" }
%"class.WTF::HashTable.39" = type <{ %"struct.WTF::KeyValuePair.41"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.41" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.362" }
%"class.blink::WeakMember.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.blink::ModuleScriptFetchRequest" = type { %"class.blink::KURL", i32, i32, i32, [4 x i8], %"class.blink::ScriptFetchOptions", %"class.WTF::String", %"class.WTF::TextPosition" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::ParsedSpecifier" = type { i32, %"class.blink::KURL", %"class.WTF::String" }
%"class.absl::optional.396" = type { %"class.absl::optional_internal::optional_data.397" }
%"class.absl::optional_internal::optional_data.397" = type { %"class.absl::optional_internal::optional_data_base.398" }
%"class.absl::optional_internal::optional_data_base.398" = type { %"class.absl::optional_internal::optional_data_dtor_base.399" }
%"class.absl::optional_internal::optional_data_dtor_base.399" = type { i8, %union.anon.400 }
%union.anon.400 = type { %"class.blink::KURL" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.403 }
%union.anon.403 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local.266" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local.266" = type { %"class.v8::Context"* }
%"class.v8::Value" = type { i8 }
%"struct.blink::ModuleRequest" = type { %"class.WTF::String", %"class.WTF::TextPosition", %"class.WTF::Vector.408" }
%"class.WTF::Vector.408" = type { %"class.WTF::VectorBuffer.409" }
%"class.WTF::VectorBuffer.409" = type { %"class.WTF::VectorBufferBase.410" }
%"class.WTF::VectorBufferBase.410" = type { %"struct.blink::ImportAssertion"*, i32, i32 }
%"struct.blink::ImportAssertion" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::TextPosition" }
%"class.blink::ReferrerScriptInfo" = type opaque
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration", i32, %"class.blink::Member.54", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.390", %"class.blink::SelfKeepAlive.416" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.415 }
%class.scoped_refptr.415 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.54", %"class.blink::ScriptValue" }
%"class.blink::SelfKeepAlive.416" = type { %"class.blink::Persistent.417" }
%"class.blink::Persistent.417" = type { %"class.blink::PersistentBase.418" }
%"class.blink::PersistentBase.418" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.v8::Module" = type { i8 }
%"class.WTF::Vector.420" = type { %"class.WTF::VectorBuffer.421" }
%"class.WTF::VectorBuffer.421" = type { %"class.WTF::VectorBufferBase.422" }
%"class.WTF::VectorBufferBase.422" = type { %"struct.blink::ModuleRequest"*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HeapHashSet.425" = type { %"class.WTF::HashSet.428" }
%"class.WTF::HashSet.428" = type { %"class.WTF::HashTable.429" }
%"class.WTF::HashTable.429" = type <{ %"class.blink::Member.431"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::ModuleScript"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZNK5blink9Modulator18NameInHeapSnapshotEv = comdat any

$_ZN5blink17ModulatorImplBase23GetModuleRecordResolverEv = comdat any

$_ZN5blink17ModulatorImplBase10TaskRunnerEv = comdat any

$_ZN5blink17ModulatorImplBase14GetScriptStateEv = comdat any

$_ZNK5blink17ModulatorImplBase19GetImportMapForTestEv = comdat any

$_ZNK5blink17ModulatorImplBase27GetAcquiringImportMapsStateEv = comdat any

$_ZN5blink17ModulatorImplBase27SetAcquiringImportMapsStateENS_9Modulator24AcquiringImportMapsStateE = comdat any

$_ZThn8_NK5blink9Modulator18NameInHeapSnapshotEv = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink13ModuleRequestD2Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_9ModuleMapEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_9ModuleMapEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_9ModuleMapEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_24ModuleTreeLinkerRegistryEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_24ModuleTreeLinkerRegistryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_24ModuleTreeLinkerRegistryEE7GetNameEPKv = comdat any

$_ZNK5blink24ModuleTreeLinkerRegistry18NameInHeapSnapshotEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20ModuleRecordResolverEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_20ModuleRecordResolverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20ModuleRecordResolverEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20ModuleRecordResolverEE7GetNameEPKv = comdat any

$_ZN5blink20ModuleRecordResolverD2Ev = comdat any

$_ZN5blink20ModuleRecordResolverD0Ev = comdat any

$_ZNK5blink20ModuleRecordResolver5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21DynamicModuleResolverEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21DynamicModuleResolverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_21DynamicModuleResolverEE7GetNameEPKv = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIN2v85LocalINS2_5ValueEEEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS3_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_9ImportMapEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_9ModuleMapEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_9ModuleMapEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_24ModuleTreeLinkerRegistryEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_24ModuleTreeLinkerRegistryEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink24ModuleTreeLinkerRegistryE = comdat any

$_ZZN5blink11GCInfoTraitINS_20ModuleRecordResolverEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20ModuleRecordResolverEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink20ModuleRecordResolverE = comdat any

$_ZZN5blink11GCInfoTraitINS_21DynamicModuleResolverEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21DynamicModuleResolverEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink17ModulatorImplBaseE = hidden unnamed_addr constant { [31 x i8*], [3 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"class.blink::Visitor"*)* @_ZNK5blink17ModulatorImplBase5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*)* @_ZN5blink17ModulatorImplBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*)* @_ZN5blink17ModulatorImplBaseD0Ev to i8*), i8* bitcast (i8* (%"class.blink::Modulator"*)* @_ZNK5blink9Modulator18NameInHeapSnapshotEv to i8*), i8* bitcast (%"class.blink::ModuleRecordResolver"* (%"class.blink::ModulatorImplBase"*)* @_ZN5blink17ModulatorImplBase23GetModuleRecordResolverEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::ModulatorImplBase"*)* @_ZN5blink17ModulatorImplBase10TaskRunnerEv to i8*), i8* bitcast (%"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)* @_ZN5blink17ModulatorImplBase14GetScriptStateEv to i8*), i8* bitcast (i32 (%"class.blink::ModulatorImplBase"*)* @_ZNK5blink17ModulatorImplBase17GetV8CacheOptionsEv to i8*), i8* bitcast (i1 (%"class.blink::ModulatorImplBase"*)* @_ZNK5blink17ModulatorImplBase19IsScriptingDisabledEv to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)* @_ZN5blink17ModulatorImplBase9FetchTreeERKNS_4KURLENS_10ModuleTypeEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsENS_27ModuleScriptCustomFetchTypeEPNS_16ModuleTreeClientE to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)* @_ZN5blink17ModulatorImplBase11FetchSingleERKNS_24ModuleScriptFetchRequestEPNS_15ResourceFetcherENS_16ModuleGraphLevelENS_27ModuleScriptCustomFetchTypeEPNS_18SingleModuleClientE to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"class.blink::ModuleScript"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ModuleTreeClient"*)* @_ZN5blink17ModulatorImplBase31FetchDescendantsForInlineScriptEPNS_12ModuleScriptEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationEPNS_16ModuleTreeClientE to i8*), i8* bitcast (%"class.blink::ModuleScript"* (%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"*, i32)* @_ZN5blink17ModulatorImplBase22GetFetchedModuleScriptERKNS_4KURLENS_10ModuleTypeE to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::ModulatorImplBase"*, %"class.WTF::String"*, %"class.blink::KURL"*, %"class.WTF::String"*)* @_ZN5blink17ModulatorImplBase22ResolveModuleSpecifierERKN3WTF6StringERKNS_4KURLEPS2_ to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"*, %"class.blink::KURL"*, %"class.blink::ReferrerScriptInfo"*, %"class.blink::ScriptPromiseResolver"*)* @_ZN5blink17ModulatorImplBase18ResolveDynamicallyERKNS_13ModuleRequestERKNS_4KURLERKNS_18ReferrerScriptInfoEPNS_21ScriptPromiseResolverE to i8*), i8* bitcast (void (%"class.blink::ScriptValue"*, %"class.blink::ModulatorImplBase"*, %"class.WTF::String"*)* @_ZNK5blink17ModulatorImplBase15CreateTypeErrorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ScriptValue"*, %"class.blink::ModulatorImplBase"*, %"class.WTF::String"*)* @_ZNK5blink17ModulatorImplBase17CreateSyntaxErrorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"class.blink::ImportMap"*, %"class.blink::ScriptValue"*)* @_ZN5blink17ModulatorImplBase17RegisterImportMapEPKNS_9ImportMapENS_11ScriptValueE to i8*), i8* bitcast (%"class.blink::ImportMap"* (%"class.blink::ModulatorImplBase"*)* @_ZNK5blink17ModulatorImplBase19GetImportMapForTestEv to i8*), i8* bitcast (i32 (%"class.blink::ModulatorImplBase"*)* @_ZNK5blink17ModulatorImplBase27GetAcquiringImportMapsStateEv to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, i32)* @_ZN5blink17ModulatorImplBase27SetAcquiringImportMapsStateENS_9Modulator24AcquiringImportMapsStateE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ModulatorImplBase"*, %"class.v8::Module"*)* @_ZNK5blink17ModulatorImplBase27HostGetImportMetaPropertiesEN2v85LocalINS1_6ModuleEEE to i8*), i8* bitcast (i1 (%"class.blink::ModulatorImplBase"*)* @_ZN5blink17ModulatorImplBase15HasValidContextEv to i8*), i8* bitcast (void (%"class.blink::ScriptValue"*, %"class.blink::ModulatorImplBase"*, %"class.v8::Module"*, %"class.blink::KURL"*)* @_ZN5blink17ModulatorImplBase17InstantiateModuleEN2v85LocalINS1_6ModuleEEERKNS_4KURLE to i8*), i8* bitcast (void (%"class.WTF::Vector.420"*, %"class.blink::ModulatorImplBase"*, %"class.v8::Module"*)* @_ZN5blink17ModulatorImplBase30ModuleRequestsFromModuleRecordEN2v85LocalINS1_6ModuleEEE to i8*), i8* bitcast (i32 (%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"*)* @_ZNK5blink17ModulatorImplBase21ModuleTypeFromRequestERKNS_13ModuleRequestE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"class.blink::ModuleScript"*)* @_ZN5blink17ModulatorImplBase30ProduceCacheModuleTreeTopLevelEPNS_12ModuleScriptE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [3 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (i8* (%"class.blink::Modulator"*)* @_ZThn8_NK5blink9Modulator18NameInHeapSnapshotEv to i8*)] }, align 8
@.str = private unnamed_addr constant [56 x i8] c"Invalid relative url or base scheme isn't hierarchical.\00", align 1
@.str.1 = private unnamed_addr constant [68 x i8] c"../../third_party/blink/renderer/core/script/modulator_impl_base.cc\00", align 1
@.str.2 = private unnamed_addr constant [64 x i8] c"Relative references must start with either \22/\22, \22./\22, or \22../\22.\00", align 1
@_ZN5blink8features12kJSONModulesE = external global %"struct.base::Feature", align 8
@.str.3 = private unnamed_addr constant [5 x i8] c"json\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"css\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"child_module_type != ModuleType::kInvalid\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"child_url.IsValid()\00", align 1
@.str.7 = private unnamed_addr constant [69 x i8] c"ModuleScript::ResolveModuleSpecifier() impl must return a valid url.\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"child_module\00", align 1
@.str.9 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase23is_css_modules_enabled_E = external local_unnamed_addr global i8, align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"Modulator\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9ModuleMapEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ModuleMap]\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_9ModuleMapEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_9ModuleMapEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_9ModuleMapEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_9ModuleMapEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24ModuleTreeLinkerRegistryEEEPKcv = private unnamed_addr constant [79 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ModuleTreeLinkerRegistry]\00", align 1
@_ZZN5blink11GCInfoTraitINS_24ModuleTreeLinkerRegistryEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_24ModuleTreeLinkerRegistryEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_24ModuleTreeLinkerRegistryEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_24ModuleTreeLinkerRegistryEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink24ModuleTreeLinkerRegistryE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ModuleTreeLinkerRegistry"*)* @_ZNK5blink24ModuleTreeLinkerRegistry18NameInHeapSnapshotEv to i8*)] }, comdat, align 8
@.str.16 = private unnamed_addr constant [25 x i8] c"ModuleTreeLinkerRegistry\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20ModuleRecordResolverEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ModuleRecordResolver]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20ModuleRecordResolverEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20ModuleRecordResolverEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20ModuleRecordResolverEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20ModuleRecordResolverEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20ModuleRecordResolverEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.17 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZTVN5blink24ModuleRecordResolverImplE = external unnamed_addr constant { [10 x i8*], [8 x i8*] }, align 8
@_ZTVN5blink20ModuleRecordResolverE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ModuleRecordResolver"*)* @_ZN5blink20ModuleRecordResolverD2Ev to i8*), i8* bitcast (void (%"class.blink::ModuleRecordResolver"*)* @_ZN5blink20ModuleRecordResolverD0Ev to i8*), i8* bitcast (void (%"class.blink::ModuleRecordResolver"*, %"class.blink::Visitor"*)* @_ZNK5blink20ModuleRecordResolver5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21DynamicModuleResolverEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DynamicModuleResolver]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21DynamicModuleResolverEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21DynamicModuleResolverEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21DynamicModuleResolverEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21DynamicModuleResolverEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E = external local_unnamed_addr global i32, align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@.str.18 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.19 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.22 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberIKNS1_12ModuleScriptEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [386 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<const blink::ModuleScript>, blink::Member<const blink::ModuleScript>, WTF::IdentityExtractor, WTF::MemberHash<const blink::ModuleScript>, WTF::HashTraits<blink::Member<const blink::ModuleScript> >, WTF::HashTraits<blink::Member<const blink::ModuleScript> >, blink::HeapAllocator> >]\00", align 1

@_ZN5blink17ModulatorImplBaseD1Ev = hidden unnamed_addr alias void (%"class.blink::ModulatorImplBase"*), void (%"class.blink::ModulatorImplBase"*)* @_ZN5blink17ModulatorImplBaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZNK5blink17ModulatorImplBase19GetExecutionContextEv(%"class.blink::ModulatorImplBase"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %2, align 8
  %4 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %3) #11
  ret %"class.blink::ExecutionContext"* %4
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ModulatorImplBaseC2EPNS_11ScriptStateE(%"class.blink::ModulatorImplBase"*, %"class.blink::ScriptState"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::ModulatorImplBase"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [3 x i8*] }, { [31 x i8*], [3 x i8*] }* @_ZTVN5blink17ModulatorImplBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [3 x i8*] }, { [31 x i8*], [3 x i8*] }* @_ZTVN5blink17ModulatorImplBaseE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ScriptState"* %1, %"class.blink::ScriptState"** %4, align 8
  %5 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #11
  %6 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %5, i64 0, i32 1
  %7 = bitcast %"class.blink::MojoBindingContext"* %6 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %8 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %7, align 8
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %8, i64 6
  %10 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %9, align 8
  %11 = tail call %"class.base::SingleThreadTaskRunner"* %10(%"class.blink::MojoBindingContext"* %6, i8 zeroext 3) #11
  %12 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 2, i32 0
  store %"class.base::SingleThreadTaskRunner"* %11, %"class.base::SingleThreadTaskRunner"** %12, align 8
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9ModuleMapEEEPhm(i64 48) #11
  %14 = bitcast i8* %13 to %"class.blink::ModuleMap"*
  %15 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 0
  tail call void @_ZN5blink9ModuleMapC1EPNS_9ModulatorE(%"class.blink::ModuleMap"* %14, %"class.blink::Modulator"* %15) #11
  %16 = getelementptr inbounds i8, i8* %13, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = bitcast %"class.blink::ModuleMap"** %20 to i8**
  store i8* %13, i8** %21, align 8
  %22 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_24ModuleTreeLinkerRegistryEEEPhm(i64 32) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #11
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink24ModuleTreeLinkerRegistryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 20, i1 false) #11
  %25 = getelementptr inbounds i8, i8* %22, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  %29 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 4, i32 0, i32 0
  %30 = bitcast %"class.blink::ModuleTreeLinkerRegistry"** %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = ptrtoint %"class.blink::ModulatorImplBase"* %0 to i64
  %32 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %33 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %32) #11
  %34 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_20ModuleRecordResolverEEEPhm(i64 64) #11
  %35 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink20ModuleRecordResolverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = bitcast i8* %36 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZN5blink33ExecutionContextLifecycleObserverC2EPNS_16ExecutionContextENS0_4TypeE(%"class.blink::ExecutionContextLifecycleObserver"* %37, %"class.blink::ExecutionContext"* %33, i32 0) #11
  %38 = bitcast i8* %34 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink24ModuleRecordResolverImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink24ModuleRecordResolverImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %38, align 8
  %39 = getelementptr inbounds i8, i8* %34, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 20, i1 false) #11
  %40 = getelementptr inbounds i8, i8* %34, i64 56
  %41 = bitcast i8* %40 to i64*
  store i64 %31, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %34, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  %46 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 5, i32 0, i32 0
  %47 = bitcast %"class.blink::ModuleRecordResolver"** %46 to i8**
  store i8* %34, i8** %47, align 8
  %48 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21DynamicModuleResolverEEEPhm(i64 8) #11
  %49 = bitcast i8* %48 to i64*
  store i64 %31, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  %54 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 6, i32 0, i32 0
  %55 = bitcast %"class.blink::DynamicModuleResolver"** %54 to i8**
  store i8* %48, i8** %55, align 8
  %56 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::ImportMap"* null, %"class.blink::ImportMap"** %56, align 8
  %57 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 8
  store i32 0, i32* %57, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ModulatorImplBaseD2Ev(%"class.blink::ModulatorImplBase"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::ModulatorImplBase"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [3 x i8*] }, { [31 x i8*], [3 x i8*] }* @_ZTVN5blink17ModulatorImplBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [3 x i8*] }, { [31 x i8*], [3 x i8*] }* @_ZTVN5blink17ModulatorImplBaseE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #11
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 0
  tail call void @_ZN5blink9ModulatorD2Ev(%"class.blink::Modulator"* %15) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9ModulatorD2Ev(%"class.blink::Modulator"*) unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink17ModulatorImplBaseD0Ev(%"class.blink::ModulatorImplBase"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17ModulatorImplBase19IsScriptingDisabledEv(%"class.blink::ModulatorImplBase"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %2, align 8
  %4 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %3) #11
  %5 = bitcast %"class.blink::ExecutionContext"* %4 to i1 (%"class.blink::ExecutionContext"*, i32)***
  %6 = load i1 (%"class.blink::ExecutionContext"*, i32)**, i1 (%"class.blink::ExecutionContext"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*, i32)*, i1 (%"class.blink::ExecutionContext"*, i32)** %6, i64 26
  %8 = load i1 (%"class.blink::ExecutionContext"*, i32)*, i1 (%"class.blink::ExecutionContext"*, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::ExecutionContext"* %4, i32 0) #11
  %10 = xor i1 %9, true
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17ModulatorImplBase17GetV8CacheOptionsEv(%"class.blink::ModulatorImplBase"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %2, align 8
  %4 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %3) #11
  %5 = bitcast %"class.blink::ExecutionContext"* %4 to i32 (%"class.blink::ExecutionContext"*)***
  %6 = load i32 (%"class.blink::ExecutionContext"*)**, i32 (%"class.blink::ExecutionContext"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::ExecutionContext"*)*, i32 (%"class.blink::ExecutionContext"*)** %6, i64 27
  %8 = load i32 (%"class.blink::ExecutionContext"*)*, i32 (%"class.blink::ExecutionContext"*)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::ExecutionContext"* %4) #11
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ModulatorImplBase9FetchTreeERKNS_4KURLENS_10ModuleTypeEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsENS_27ModuleScriptCustomFetchTypeEPNS_16ModuleTreeClientE(%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"* dereferenceable(64), i32, %"class.blink::ModuleTreeClient"*) unnamed_addr #0 align 2 {
  %10 = alloca i32, align 4
  store i32 %2, i32* %10, align 4
  %11 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 4, i32 0, i32 0
  %13 = load %"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::ModuleTreeLinkerRegistry"** %12, align 8
  call void @_ZN5blink16ModuleTreeLinker5FetchERKNS_4KURLERKNS_10ModuleTypeEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsEPNS_9ModulatorENS_27ModuleScriptCustomFetchTypeEPNS_24ModuleTreeLinkerRegistryEPNS_16ModuleTreeClientE(%"class.blink::KURL"* dereferenceable(112) %1, i32* nonnull dereferenceable(4) %10, %"class.blink::ResourceFetcher"* %3, i32 %4, i32 %5, %"class.blink::ScriptFetchOptions"* dereferenceable(64) %6, %"class.blink::Modulator"* %11, i32 %7, %"class.blink::ModuleTreeLinkerRegistry"* %13, %"class.blink::ModuleTreeClient"* %8) #11
  ret void
}

declare void @_ZN5blink16ModuleTreeLinker5FetchERKNS_4KURLERKNS_10ModuleTypeEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsEPNS_9ModulatorENS_27ModuleScriptCustomFetchTypeEPNS_24ModuleTreeLinkerRegistryEPNS_16ModuleTreeClientE(%"class.blink::KURL"* dereferenceable(112), i32* dereferenceable(4), %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"* dereferenceable(64), %"class.blink::Modulator"*, i32, %"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::ModuleTreeClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ModulatorImplBase31FetchDescendantsForInlineScriptEPNS_12ModuleScriptEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationEPNS_16ModuleTreeClientE(%"class.blink::ModulatorImplBase"*, %"class.blink::ModuleScript"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ModuleTreeClient"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 4, i32 0, i32 0
  %9 = load %"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::ModuleTreeLinkerRegistry"** %8, align 8
  tail call void @_ZN5blink16ModuleTreeLinker31FetchDescendantsForInlineScriptEPNS_12ModuleScriptEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationEPNS_9ModulatorENS_27ModuleScriptCustomFetchTypeEPNS_24ModuleTreeLinkerRegistryEPNS_16ModuleTreeClientE(%"class.blink::ModuleScript"* %1, %"class.blink::ResourceFetcher"* %2, i32 %3, i32 %4, %"class.blink::Modulator"* %7, i32 0, %"class.blink::ModuleTreeLinkerRegistry"* %9, %"class.blink::ModuleTreeClient"* %5) #11
  ret void
}

declare void @_ZN5blink16ModuleTreeLinker31FetchDescendantsForInlineScriptEPNS_12ModuleScriptEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationEPNS_9ModulatorENS_27ModuleScriptCustomFetchTypeEPNS_24ModuleTreeLinkerRegistryEPNS_16ModuleTreeClientE(%"class.blink::ModuleScript"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::Modulator"*, i32, %"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::ModuleTreeClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ModulatorImplBase11FetchSingleERKNS_24ModuleScriptFetchRequestEPNS_15ResourceFetcherENS_16ModuleGraphLevelENS_27ModuleScriptCustomFetchTypeEPNS_18SingleModuleClientE(%"class.blink::ModulatorImplBase"* nocapture readonly, %"class.blink::ModuleScriptFetchRequest"* dereferenceable(208), %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ModuleMap"*, %"class.blink::ModuleMap"** %7, align 8
  tail call void @_ZN5blink9ModuleMap23FetchSingleModuleScriptERKNS_24ModuleScriptFetchRequestEPNS_15ResourceFetcherENS_16ModuleGraphLevelENS_27ModuleScriptCustomFetchTypeEPNS_18SingleModuleClientE(%"class.blink::ModuleMap"* %8, %"class.blink::ModuleScriptFetchRequest"* dereferenceable(208) %1, %"class.blink::ResourceFetcher"* %2, i32 %3, i32 %4, %"class.blink::SingleModuleClient"* %5) #11
  ret void
}

declare void @_ZN5blink9ModuleMap23FetchSingleModuleScriptERKNS_24ModuleScriptFetchRequestEPNS_15ResourceFetcherENS_16ModuleGraphLevelENS_27ModuleScriptCustomFetchTypeEPNS_18SingleModuleClientE(%"class.blink::ModuleMap"*, %"class.blink::ModuleScriptFetchRequest"* dereferenceable(208), %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ModuleScript"* @_ZN5blink17ModulatorImplBase22GetFetchedModuleScriptERKNS_4KURLENS_10ModuleTypeE(%"class.blink::ModulatorImplBase"* nocapture readonly, %"class.blink::KURL"* dereferenceable(112), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ModuleMap"*, %"class.blink::ModuleMap"** %4, align 8
  %6 = tail call %"class.blink::ModuleScript"* @_ZNK5blink9ModuleMap22GetFetchedModuleScriptERKNS_4KURLENS_10ModuleTypeE(%"class.blink::ModuleMap"* %5, %"class.blink::KURL"* dereferenceable(112) %1, i32 %2) #11
  ret %"class.blink::ModuleScript"* %6
}

declare %"class.blink::ModuleScript"* @_ZNK5blink9ModuleMap22GetFetchedModuleScriptERKNS_4KURLENS_10ModuleTypeE(%"class.blink::ModuleMap"*, %"class.blink::KURL"* dereferenceable(112), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ModulatorImplBase22ResolveModuleSpecifierERKN3WTF6StringERKNS_4KURLEPS2_(%"class.blink::KURL"* noalias sret, %"class.blink::ModulatorImplBase"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::ParsedSpecifier", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.absl::optional.396", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.absl::optional.396", align 8
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = alloca %"class.blink::KURL", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = bitcast %"class.blink::ParsedSpecifier"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 128, i1 false)
  call void @_ZN5blink15ParsedSpecifier6CreateERKN3WTF6StringERKNS_4KURLE(%"class.blink::ParsedSpecifier"* nonnull sret %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::KURL"* dereferenceable(112) %3) #11
  %15 = getelementptr inbounds %"class.blink::ParsedSpecifier", %"class.blink::ParsedSpecifier"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %60

18:                                               ; preds = %5
  %19 = icmp eq %"class.WTF::String"* %4, null
  br i1 %19, label %59, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i64 55) #11
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::String"* %7 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %25 = bitcast %"class.WTF::String"* %4 to i64*
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %20, %38, %41
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #11
  br label %58

58:                                               ; preds = %42, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %59

59:                                               ; preds = %18, %58
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #11
  br label %237

60:                                               ; preds = %5
  %61 = getelementptr inbounds %"class.absl::optional.396", %"class.absl::optional.396"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %61) #11
  %62 = bitcast %"class.absl::optional.396"* %8 to i64*
  store i64 -6148914691236517206, i64* %62, align 8
  store i8 0, i8* %61, align 8
  %63 = getelementptr inbounds %"class.absl::optional.396", %"class.absl::optional.396"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 112, i1 false) #11
  %64 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %1, i64 0, i32 7, i32 0, i32 0
  %65 = load %"class.blink::ImportMap"*, %"class.blink::ImportMap"** %64, align 8
  %66 = icmp eq %"class.blink::ImportMap"* %65, null
  br i1 %66, label %184, label %67

67:                                               ; preds = %60
  %68 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #11
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds %"class.absl::optional.396", %"class.absl::optional.396"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %70) #11
  call void @_ZNK5blink9ImportMap7ResolveERKNS_15ParsedSpecifierERKNS_4KURLEPN3WTF6StringE(%"class.absl::optional.396"* nonnull sret %10, %"class.blink::ImportMap"* nonnull %65, %"class.blink::ParsedSpecifier"* nonnull dereferenceable(128) %6, %"class.blink::KURL"* dereferenceable(112) %3, %"class.WTF::String"* nonnull %9) #11
  %71 = load i8, i8* %70, align 8, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %82, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.absl::optional.396", %"class.absl::optional.396"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %75 = load i8, i8* %61, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.absl::optional.396", %"class.absl::optional.396"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %78, %"class.blink::KURL"* dereferenceable(112) %74) #11
  br label %87

80:                                               ; preds = %73
  %81 = bitcast i8* %63 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %81, %"class.blink::KURL"* dereferenceable(112) %74) #11
  store i8 1, i8* %61, align 8
  br label %87

82:                                               ; preds = %67
  %83 = load i8, i8* %61, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %92, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.absl::optional.396", %"class.absl::optional.396"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %86) #11
  store i8 0, i8* %61, align 8
  br label %87

87:                                               ; preds = %77, %80, %85
  %88 = load i8, i8* %70, align 8
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.absl::optional.396", %"class.absl::optional.396"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %91) #11
  store i8 0, i8* %70, align 8
  br label %92

92:                                               ; preds = %82, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %70) #11
  %93 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 0) #11
  br i1 %93, label %94, label %99

94:                                               ; preds = %92
  %95 = bitcast %"class.logging::LogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %95) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 137, i32 0) #11
  %96 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %97 = bitcast %"class.std::__1::basic_ostringstream"* %96 to %"class.std::__1::basic_ostream"*
  %98 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %97, %"class.WTF::String"* nonnull dereferenceable(8) %9) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %95) #11
  br label %99

99:                                               ; preds = %92, %94
  %100 = load i8, i8* %61, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %166, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %103) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 112, i1 false)
  %104 = getelementptr inbounds %"class.absl::optional.396", %"class.absl::optional.396"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %12, %"class.blink::KURL"* dereferenceable(112) %104) #11
  %105 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %12) #11
  br i1 %105, label %148, label %106

106:                                              ; preds = %102
  %107 = icmp eq %"class.WTF::String"* %4, null
  br i1 %107, label %147, label %108

108:                                              ; preds = %106
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %128, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #11
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !3

125:                                              ; preds = %116
  call void @llvm.trap() #11
  unreachable

126:                                              ; preds = %116
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %117, align 4
  br label %128

128:                                              ; preds = %126, %111, %108
  %129 = ptrtoint %"class.WTF::StringImpl"* %109 to i64
  %130 = bitcast %"class.WTF::String"* %4 to i64*
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  store i64 %129, i64* %130, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #11
  br label %147

147:                                              ; preds = %146, %143, %128, %106
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #11
  br label %149

148:                                              ; preds = %102
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %12) #11
  br label %149

149:                                              ; preds = %148, %147
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %103) #11
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #11
  br label %165

165:                                              ; preds = %149, %161, %164
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #11
  br label %231

166:                                              ; preds = %99
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #11
  br label %182

182:                                              ; preds = %166, %178, %181
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #11
  %183 = load i32, i32* %15, align 8
  br label %184

184:                                              ; preds = %60, %182
  %185 = phi i32 [ %16, %60 ], [ %183, %182 ]
  switch i32 %185, label %230 [
    i32 0, label %186
    i32 1, label %187
    i32 2, label %229
  ]

186:                                              ; preds = %184
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #11
  br label %231

187:                                              ; preds = %184
  %188 = icmp eq %"class.WTF::String"* %4, null
  br i1 %188, label %228, label %189

189:                                              ; preds = %187
  %190 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2, i64 0, i64 0), i64 63) #11
  %191 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %192 = bitcast %"class.WTF::String"* %13 to i64*
  %193 = load i64, i64* %192, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %191, align 8
  %194 = bitcast %"class.WTF::String"* %4 to i64*
  %195 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  store i64 %193, i64* %194, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %189
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #11
  br label %211

211:                                              ; preds = %189, %207, %210
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %227, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #11
  br label %227

227:                                              ; preds = %211, %223, %226
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #11
  br label %228

228:                                              ; preds = %187, %227
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #11
  br label %231

229:                                              ; preds = %184
  call void @_ZNK5blink15ParsedSpecifier6GetUrlEv(%"class.blink::KURL"* sret %0, %"class.blink::ParsedSpecifier"* nonnull %6) #11
  br label %231

230:                                              ; preds = %184
  unreachable

231:                                              ; preds = %165, %229, %228, %186
  %232 = load i8, i8* %61, align 8, !range !2
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %236, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %"class.absl::optional.396", %"class.absl::optional.396"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %235) #11
  store i8 0, i8* %61, align 8
  br label %236

236:                                              ; preds = %231, %234
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %61) #11
  br label %237

237:                                              ; preds = %236, %59
  %238 = getelementptr inbounds %"class.blink::ParsedSpecifier", %"class.blink::ParsedSpecifier"* %6, i64 0, i32 2, i32 0, i32 0
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #11
  br label %254

254:                                              ; preds = %237, %250, %253
  %255 = getelementptr inbounds %"class.blink::ParsedSpecifier", %"class.blink::ParsedSpecifier"* %6, i64 0, i32 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %255) #11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %14) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink15ParsedSpecifier6CreateERKN3WTF6StringERKNS_4KURLE(%"class.blink::ParsedSpecifier"* sret, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

declare void @_ZNK5blink9ImportMap7ResolveERKNS_15ParsedSpecifierERKNS_4KURLEPN3WTF6StringE(%"class.absl::optional.396"* sret, %"class.blink::ImportMap"*, %"class.blink::ParsedSpecifier"* dereferenceable(128), %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"*) local_unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare void @_ZNK5blink15ParsedSpecifier6GetUrlEv(%"class.blink::KURL"* sret, %"class.blink::ParsedSpecifier"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17ModulatorImplBase15CreateTypeErrorERKN3WTF6StringE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::ModulatorImplBase"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ScriptState::Scope", align 8
  %5 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %7, align 8
  %10 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %9, i64 0, i32 0
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %10, %"class.v8::Isolate"* %12) #11
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::ScriptState"* %9 to %"class.v8::internal::Isolate"**
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = bitcast %"class.v8::Context"* %14 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %18, i64 %20) #11
  %22 = bitcast i64* %21 to %"class.v8::Context"*
  br label %23

23:                                               ; preds = %3, %16
  %24 = phi %"class.v8::Context"* [ %22, %16 ], [ null, %3 ]
  store %"class.v8::Context"* %24, %"class.v8::Context"** %6, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %24) #11
  %25 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  %26 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 -86, i64 24, i1 false)
  %27 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %7, align 8
  %28 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %27, i64 0, i32 0
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %30 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException15CreateTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %29, %"class.WTF::String"* dereferenceable(8) %2) #11
  store %"class.v8::Isolate"* %29, %"class.v8::Isolate"** %25, align 8
  %31 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %31, %"class.v8::Isolate"* %29, %"class.v8::Value"* %30) #11
  %32 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %32) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #11
  ret void
}

declare %"class.v8::Value"* @_ZN5blink16V8ThrowException15CreateTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17ModulatorImplBase17CreateSyntaxErrorERKN3WTF6StringE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::ModulatorImplBase"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ScriptState::Scope", align 8
  %5 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %7, align 8
  %10 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %9, i64 0, i32 0
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %10, %"class.v8::Isolate"* %12) #11
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::ScriptState"* %9 to %"class.v8::internal::Isolate"**
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = bitcast %"class.v8::Context"* %14 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %18, i64 %20) #11
  %22 = bitcast i64* %21 to %"class.v8::Context"*
  br label %23

23:                                               ; preds = %3, %16
  %24 = phi %"class.v8::Context"* [ %22, %16 ], [ null, %3 ]
  store %"class.v8::Context"* %24, %"class.v8::Context"** %6, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %24) #11
  %25 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  %26 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 -86, i64 24, i1 false)
  %27 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %7, align 8
  %28 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %27, i64 0, i32 0
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %30 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException17CreateSyntaxErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %29, %"class.WTF::String"* dereferenceable(8) %2) #11
  store %"class.v8::Isolate"* %29, %"class.v8::Isolate"** %25, align 8
  %31 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %31, %"class.v8::Isolate"* %29, %"class.v8::Value"* %30) #11
  %32 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %32) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #11
  ret void
}

declare %"class.v8::Value"* @_ZN5blink16V8ThrowException17CreateSyntaxErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ModulatorImplBase17RegisterImportMapEPKNS_9ImportMapENS_11ScriptValueE(%"class.blink::ModulatorImplBase"*, %"class.blink::ImportMap"*, %"class.blink::ScriptValue"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ScriptState::Scope", align 8
  %5 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %6, null
  br i1 %7, label %38, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::ModulatorImplBase"* %0 to i1 (%"class.blink::ModulatorImplBase"*)***
  %10 = load i1 (%"class.blink::ModulatorImplBase"*)**, i1 (%"class.blink::ModulatorImplBase"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::ModulatorImplBase"*)*, i1 (%"class.blink::ModulatorImplBase"*)** %10, i64 8
  %12 = load i1 (%"class.blink::ModulatorImplBase"*)*, i1 (%"class.blink::ModulatorImplBase"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::ModulatorImplBase"* %0) #11
  br i1 %13, label %47, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  %19 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %17, align 8
  %20 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %19, i64 0, i32 0
  %22 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %20, %"class.v8::Isolate"* %22) #11
  %23 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.v8::Context"*, %"class.v8::Context"** %23, align 8
  %25 = icmp eq %"class.v8::Context"* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %14
  %27 = bitcast %"class.blink::ScriptState"* %19 to %"class.v8::internal::Isolate"**
  %28 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %27, align 8
  %29 = bitcast %"class.v8::Context"* %24 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %28, i64 %30) #11
  %32 = bitcast i64* %31 to %"class.v8::Context"*
  br label %33

33:                                               ; preds = %14, %26
  %34 = phi %"class.v8::Context"* [ %32, %26 ], [ null, %14 ]
  store %"class.v8::Context"* %34, %"class.v8::Context"** %16, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %34) #11
  %35 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %17, align 8
  %36 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #11
  call void @_ZN5blink12ModuleRecord15ReportExceptionEPNS_11ScriptStateEN2v85LocalINS3_5ValueEEE(%"class.blink::ScriptState"* %35, %"class.v8::Value"* %36) #11
  %37 = load %"class.v8::Context"*, %"class.v8::Context"** %16, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %37) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  br label %47

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 7
  %40 = ptrtoint %"class.blink::ImportMap"* %1 to i64
  %41 = bitcast %"class.blink::Member.342"* %39 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.blink::ImportMap"* %1 to i8*
  %46 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #11
  br label %47

47:                                               ; preds = %44, %38, %8, %33
  ret void
}

declare void @_ZN5blink12ModuleRecord15ReportExceptionEPNS_11ScriptStateEN2v85LocalINS3_5ValueEEE(%"class.blink::ScriptState"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink17ModulatorImplBase15HasValidContextEv(%"class.blink::ModulatorImplBase"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.v8::Context"*, %"class.v8::Context"** %4, align 8
  %6 = icmp eq %"class.v8::Context"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %3, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %8, align 8
  %10 = icmp ne %"class.blink::V8PerContextData"* %9, null
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ModulatorImplBase18ResolveDynamicallyERKNS_13ModuleRequestERKNS_4KURLERKNS_18ReferrerScriptInfoEPNS_21ScriptPromiseResolverE(%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"* dereferenceable(32), %"class.blink::KURL"* dereferenceable(112), %"class.blink::ReferrerScriptInfo"*, %"class.blink::ScriptPromiseResolver"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = bitcast %"class.blink::ModulatorImplBase"* %0 to i1 (%"class.blink::ModulatorImplBase"*, %"class.WTF::String"*)***
  %10 = load i1 (%"class.blink::ModulatorImplBase"*, %"class.WTF::String"*)**, i1 (%"class.blink::ModulatorImplBase"*, %"class.WTF::String"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::ModulatorImplBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::ModulatorImplBase"*, %"class.WTF::String"*)** %10, i64 28
  %12 = load i1 (%"class.blink::ModulatorImplBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::ModulatorImplBase"*, %"class.WTF::String"*)** %11, align 8
  %13 = call zeroext i1 %12(%"class.blink::ModulatorImplBase"* %0, %"class.WTF::String"* nonnull %6) #11
  br i1 %13, label %14, label %23

14:                                               ; preds = %5
  %15 = bitcast %"class.blink::ModulatorImplBase"* %0 to %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)***
  %16 = load %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)**, %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)*, %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)** %16, i64 6
  %18 = load %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)*, %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)** %17, align 8
  %19 = call %"class.blink::ScriptState"* %18(%"class.blink::ModulatorImplBase"* %0) #11
  %20 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %19, i64 0, i32 0
  %21 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8
  %22 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException15CreateTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %21, %"class.WTF::String"* nonnull dereferenceable(8) %6) #11
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIN2v85LocalINS2_5ValueEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %4, %"class.v8::Value"* %22, i32 2) #11
  br label %39

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %24, align 8
  %26 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %25) #11
  %27 = icmp eq %"class.blink::ExecutionContext"* %26, null
  %28 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %26, i64 0, i32 3
  %29 = icmp eq %"class.blink::UseCounter"* %28, null
  %30 = or i1 %27, %29
  br i1 %30, label %36, label %31

31:                                               ; preds = %23
  %32 = bitcast %"class.blink::UseCounter"* %28 to void (%"class.blink::UseCounter"*, i32)***
  %33 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %33, i64 3
  %35 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %34, align 8
  call void %35(%"class.blink::UseCounter"* nonnull %28, i32 2616) #11
  br label %36

36:                                               ; preds = %23, %31
  %37 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::DynamicModuleResolver"*, %"class.blink::DynamicModuleResolver"** %37, align 8
  call void @_ZN5blink21DynamicModuleResolver18ResolveDynamicallyERKNS_13ModuleRequestERKNS_4KURLERKNS_18ReferrerScriptInfoEPNS_21ScriptPromiseResolverE(%"class.blink::DynamicModuleResolver"* %38, %"struct.blink::ModuleRequest"* dereferenceable(32) %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.blink::ReferrerScriptInfo"* %3, %"class.blink::ScriptPromiseResolver"* %4) #11
  br label %39

39:                                               ; preds = %36, %14
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #11
  br label %55

55:                                               ; preds = %39, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

declare void @_ZN5blink21DynamicModuleResolver18ResolveDynamicallyERKNS_13ModuleRequestERKNS_4KURLERKNS_18ReferrerScriptInfoEPNS_21ScriptPromiseResolverE(%"class.blink::DynamicModuleResolver"*, %"struct.blink::ModuleRequest"* dereferenceable(32), %"class.blink::KURL"* dereferenceable(112), %"class.blink::ReferrerScriptInfo"*, %"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17ModulatorImplBase27HostGetImportMetaPropertiesEN2v85LocalINS1_6ModuleEEE(%"class.blink::ModulatorImplBase"* nocapture readonly, %"class.v8::Module"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.blink::ModuleRecordResolver"*, %"class.blink::ModuleRecordResolver"** %3, align 8
  %5 = bitcast %"class.blink::ModuleRecordResolver"* %4 to %"class.blink::ModuleScript"* (%"class.blink::ModuleRecordResolver"*, %"class.v8::Module"*)***
  %6 = load %"class.blink::ModuleScript"* (%"class.blink::ModuleRecordResolver"*, %"class.v8::Module"*)**, %"class.blink::ModuleScript"* (%"class.blink::ModuleRecordResolver"*, %"class.v8::Module"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ModuleScript"* (%"class.blink::ModuleRecordResolver"*, %"class.v8::Module"*)*, %"class.blink::ModuleScript"* (%"class.blink::ModuleRecordResolver"*, %"class.v8::Module"*)** %6, i64 5
  %8 = load %"class.blink::ModuleScript"* (%"class.blink::ModuleRecordResolver"*, %"class.v8::Module"*)*, %"class.blink::ModuleScript"* (%"class.blink::ModuleRecordResolver"*, %"class.v8::Module"*)** %7, align 8
  %9 = tail call %"class.blink::ModuleScript"* %8(%"class.blink::ModuleRecordResolver"* %4, %"class.v8::Module"* %1) #11
  %10 = getelementptr inbounds %"class.blink::ModuleScript", %"class.blink::ModuleScript"* %9, i64 0, i32 0, i32 2, i32 4, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %58, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #11
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %18
  tail call void @llvm.trap() #11
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %13, %28
  %31 = load atomic i32, i32* %14 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %46

36:                                               ; preds = %30
  %37 = zext i32 %35 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #11
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %36
  tail call void @llvm.trap() #11
  unreachable

44:                                               ; preds = %36
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %34, align 4
  br label %46

46:                                               ; preds = %30, %44
  %47 = phi i32 [ %45, %44 ], [ %35, %30 ]
  %48 = load atomic i32, i32* %14 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %53 = add i32 %47, -1
  store i32 %53, i32* %52, align 4
  br label %54

54:                                               ; preds = %51, %46
  %55 = phi i32 [ %53, %51 ], [ %47, %46 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #11
  br label %58

58:                                               ; preds = %2, %54, %57
  ret %"class.WTF::StringImpl"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ModulatorImplBase17InstantiateModuleEN2v85LocalINS1_6ModuleEEERKNS_4KURLE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::ModulatorImplBase"* nocapture readonly, %"class.v8::Module"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %7) #11
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 2615) #11
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %21 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  %22 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %6, align 8
  %23 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %22, i64 0, i32 0
  %25 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %24, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %23, %"class.v8::Isolate"* %25) #11
  %26 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.v8::Context"*, %"class.v8::Context"** %26, align 8
  %28 = icmp eq %"class.v8::Context"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %18
  %30 = bitcast %"class.blink::ScriptState"* %22 to %"class.v8::internal::Isolate"**
  %31 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %30, align 8
  %32 = bitcast %"class.v8::Context"* %27 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %31, i64 %33) #11
  %35 = bitcast i64* %34 to %"class.v8::Context"*
  br label %36

36:                                               ; preds = %18, %29
  %37 = phi %"class.v8::Context"* [ %35, %29 ], [ null, %18 ]
  store %"class.v8::Context"* %37, %"class.v8::Context"** %20, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %37) #11
  %38 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %6, align 8
  call void @_ZN5blink12ModuleRecord11InstantiateEPNS_11ScriptStateEN2v85LocalINS3_6ModuleEEERKNS_4KURLE(%"class.blink::ScriptValue"* sret %0, %"class.blink::ScriptState"* %38, %"class.v8::Module"* %2, %"class.blink::KURL"* dereferenceable(112) %3) #11
  %39 = load %"class.v8::Context"*, %"class.v8::Context"** %20, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %39) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #11
  ret void
}

declare void @_ZN5blink12ModuleRecord11InstantiateEPNS_11ScriptStateEN2v85LocalINS3_6ModuleEEERKNS_4KURLE(%"class.blink::ScriptValue"* sret, %"class.blink::ScriptState"*, %"class.v8::Module"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ModulatorImplBase30ModuleRequestsFromModuleRecordEN2v85LocalINS1_6ModuleEEE(%"class.WTF::Vector.420"* noalias sret, %"class.blink::ModulatorImplBase"* nocapture readonly, %"class.v8::Module"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ScriptState::Scope", align 8
  %5 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %7, align 8
  %10 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %9, i64 0, i32 0
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %10, %"class.v8::Isolate"* %12) #11
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::ScriptState"* %9 to %"class.v8::internal::Isolate"**
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = bitcast %"class.v8::Context"* %14 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %18, i64 %20) #11
  %22 = bitcast i64* %21 to %"class.v8::Context"*
  br label %23

23:                                               ; preds = %3, %16
  %24 = phi %"class.v8::Context"* [ %22, %16 ], [ null, %3 ]
  store %"class.v8::Context"* %24, %"class.v8::Context"** %6, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %24) #11
  %25 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %7, align 8
  call void @_ZN5blink12ModuleRecord14ModuleRequestsEPNS_11ScriptStateEN2v85LocalINS3_6ModuleEEE(%"class.WTF::Vector.420"* sret %0, %"class.blink::ScriptState"* %25, %"class.v8::Module"* %2) #11
  %26 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #11
  ret void
}

declare void @_ZN5blink12ModuleRecord14ModuleRequestsEPNS_11ScriptStateEN2v85LocalINS3_6ModuleEEE(%"class.WTF::Vector.420"* sret, %"class.blink::ScriptState"*, %"class.v8::Module"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17ModulatorImplBase21ModuleTypeFromRequestERKNS_13ModuleRequestE(%"class.blink::ModulatorImplBase"* nocapture readnone, %"struct.blink::ModuleRequest"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13ModuleRequest19GetModuleTypeStringEv(%"struct.blink::ModuleRequest"* %1) #11
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %59, label %9

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features12kJSONModulesE) #11
  br i1 %10, label %11, label %26

11:                                               ; preds = %9
  %12 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %15, i32* %19, align 8
  %20 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %22 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 4, i32* %24, align 8
  %25 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  br i1 %25, label %45, label %26

26:                                               ; preds = %11, %9
  %27 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase23is_css_modules_enabled_E, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %44, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %33, i32* %37, align 8
  %38 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 3, i32* %42, align 8
  %43 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  br i1 %43, label %45, label %44

44:                                               ; preds = %26, %29
  br label %45

45:                                               ; preds = %29, %11, %44
  %46 = phi i32 [ 3, %29 ], [ 2, %11 ], [ 0, %44 ]
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %45
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %45
  %56 = phi i32 [ %54, %53 ], [ %52, %45 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #11
  br label %59

59:                                               ; preds = %2, %55, %58
  %60 = phi i32 [ %46, %55 ], [ %46, %58 ], [ 1, %2 ]
  ret i32 %60
}

declare %"class.WTF::StringImpl"* @_ZNK5blink13ModuleRequest19GetModuleTypeStringEv(%"struct.blink::ModuleRequest"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ModulatorImplBase30ProduceCacheModuleTreeTopLevelEPNS_12ModuleScriptE(%"class.blink::ModulatorImplBase"*, %"class.blink::ModuleScript"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapHashSet.425", align 8
  %4 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %5, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %10, align 8
  %12 = icmp eq %"class.blink::V8PerContextData"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::HeapHashSet.425"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = bitcast %"class.blink::HeapHashSet.425"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 20, i1 false) #11
  call void @_ZN5blink17ModulatorImplBase22ProduceCacheModuleTreeEPNS_12ModuleScriptEPNS_11HeapHashSetINS_6MemberIKS1_EEN3WTF10MemberHashIS5_EENS7_10HashTraitsIS6_EEEE(%"class.blink::ModulatorImplBase"* %0, %"class.blink::ModuleScript"* %1, %"class.blink::HeapHashSet.425"* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  br label %16

16:                                               ; preds = %9, %2, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ModulatorImplBase22ProduceCacheModuleTreeEPNS_12ModuleScriptEPNS_11HeapHashSetINS_6MemberIKS1_EEN3WTF10MemberHashIS5_EENS7_10HashTraitsIS6_EEEE(%"class.blink::ModulatorImplBase"*, %"class.blink::ModuleScript"*, %"class.blink::HeapHashSet.425"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.blink::ModuleScript"*, align 8
  %6 = alloca %"class.v8::HandleScope", align 8
  %7 = alloca %"class.WTF::Vector.420", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  store %"class.blink::ModuleScript"* %1, %"class.blink::ModuleScript"** %5, align 8
  %13 = bitcast %"class.blink::ModulatorImplBase"* %0 to %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)***
  %14 = load %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)**, %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)*, %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)** %14, i64 6
  %16 = load %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)*, %"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)** %15, align 8
  %17 = tail call %"class.blink::ScriptState"* %16(%"class.blink::ModulatorImplBase"* %0) #11
  %18 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %17, i64 0, i32 0
  %19 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %20 = bitcast %"class.v8::HandleScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = bitcast %"class.v8::HandleScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %6, %"class.v8::Isolate"* %19) #11
  %22 = getelementptr inbounds %"class.blink::HeapHashSet.425", %"class.blink::HeapHashSet.425"* %2, i64 0, i32 0, i32 0
  %23 = call { %"class.blink::Member.431"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS3_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.429"* %22, %"class.blink::ModuleScript"** nonnull dereferenceable(8) %5, %"class.blink::ModuleScript"** nonnull dereferenceable(8) %5) #11
  %24 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %5, align 8
  %25 = call %"class.v8::Module"* @_ZNK5blink12ModuleScript8V8ModuleEv(%"class.blink::ModuleScript"* %24) #11
  %26 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %5, align 8
  %27 = bitcast %"class.blink::ModuleScript"* %26 to void (%"class.blink::ModuleScript"*)***
  %28 = load void (%"class.blink::ModuleScript"*)**, void (%"class.blink::ModuleScript"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::ModuleScript"*)*, void (%"class.blink::ModuleScript"*)** %28, i64 7
  %30 = load void (%"class.blink::ModuleScript"*)*, void (%"class.blink::ModuleScript"*)** %29, align 8
  call void %30(%"class.blink::ModuleScript"* %26) #11
  %31 = bitcast %"class.WTF::Vector.420"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.WTF::Vector.420", %"class.WTF::Vector.420"* %7, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::Vector.420", %"class.WTF::Vector.420"* %7, i64 0, i32 0, i32 0, i32 2
  %34 = bitcast %"class.blink::ModulatorImplBase"* %0 to void (%"class.WTF::Vector.420"*, %"class.blink::ModulatorImplBase"*, %"class.v8::Module"*)***
  %35 = bitcast %"class.WTF::Vector.420"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false)
  %36 = load void (%"class.WTF::Vector.420"*, %"class.blink::ModulatorImplBase"*, %"class.v8::Module"*)**, void (%"class.WTF::Vector.420"*, %"class.blink::ModulatorImplBase"*, %"class.v8::Module"*)*** %34, align 8
  %37 = getelementptr inbounds void (%"class.WTF::Vector.420"*, %"class.blink::ModulatorImplBase"*, %"class.v8::Module"*)*, void (%"class.WTF::Vector.420"*, %"class.blink::ModulatorImplBase"*, %"class.v8::Module"*)** %36, i64 24
  %38 = load void (%"class.WTF::Vector.420"*, %"class.blink::ModulatorImplBase"*, %"class.v8::Module"*)*, void (%"class.WTF::Vector.420"*, %"class.blink::ModulatorImplBase"*, %"class.v8::Module"*)** %37, align 8
  call void %38(%"class.WTF::Vector.420"* nonnull sret %7, %"class.blink::ModulatorImplBase"* %0, %"class.v8::Module"* %25) #11
  %39 = load %"struct.blink::ModuleRequest"*, %"struct.blink::ModuleRequest"** %32, align 8
  %40 = load i32, i32* %33, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %39, i64 %41
  %43 = icmp eq i32 %40, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %3
  %45 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  %46 = bitcast %"class.blink::ModulatorImplBase"* %0 to i32 (%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"*)***
  %47 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  %49 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  %50 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %51 = bitcast %"class.logging::CheckError"* %10 to i8*
  %52 = bitcast %"class.logging::CheckError"* %11 to i8*
  %53 = bitcast %"class.blink::ModulatorImplBase"* %0 to %"class.blink::ModuleScript"* (%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"*, i32)***
  %54 = bitcast %"class.logging::CheckError"* %12 to i8*
  %55 = getelementptr inbounds %"class.blink::HeapHashSet.425", %"class.blink::HeapHashSet.425"* %2, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::HeapHashSet.425", %"class.blink::HeapHashSet.425"* %2, i64 0, i32 0, i32 0, i32 1
  br label %79

57:                                               ; preds = %174
  %58 = load %"struct.blink::ModuleRequest"*, %"struct.blink::ModuleRequest"** %32, align 8
  br label %59

59:                                               ; preds = %57, %3
  %60 = phi %"struct.blink::ModuleRequest"* [ %58, %57 ], [ %39, %3 ]
  %61 = icmp eq %"struct.blink::ModuleRequest"* %60, null
  br i1 %61, label %78, label %62, !prof !4

62:                                               ; preds = %59
  %63 = bitcast %"struct.blink::ModuleRequest"* %60 to i8*
  %64 = load i32, i32* %33, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %76, label %66, !prof !3

66:                                               ; preds = %62
  %67 = zext i32 %64 to i64
  %68 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %60, i64 %67
  br label %69

69:                                               ; preds = %69, %66
  %70 = phi %"struct.blink::ModuleRequest"* [ %71, %69 ], [ %60, %66 ]
  call void @_ZN5blink13ModuleRequestD2Ev(%"struct.blink::ModuleRequest"* %70) #11
  %71 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %70, i64 1
  %72 = icmp eq %"struct.blink::ModuleRequest"* %71, %68
  br i1 %72, label %73, label %69

73:                                               ; preds = %69
  store i32 0, i32* %33, align 4
  %74 = bitcast %"class.WTF::Vector.420"* %7 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %73, %62
  %77 = phi i8* [ %75, %73 ], [ %63, %62 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %77) #11
  store %"struct.blink::ModuleRequest"* null, %"struct.blink::ModuleRequest"** %32, align 8
  br label %78

78:                                               ; preds = %59, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  ret void

79:                                               ; preds = %44, %174
  %80 = phi %"struct.blink::ModuleRequest"* [ %39, %44 ], [ %175, %174 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %45) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 112, i1 false)
  %81 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %5, align 8
  %82 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %80, i64 0, i32 0
  call void @_ZNK5blink12ModuleScript22ResolveModuleSpecifierERKN3WTF6StringEPS2_(%"class.blink::KURL"* nonnull sret %8, %"class.blink::ModuleScript"* %81, %"class.WTF::String"* dereferenceable(8) %82, %"class.WTF::String"* null) #11
  %83 = load i32 (%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"*)**, i32 (%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"*)*** %46, align 8
  %84 = getelementptr inbounds i32 (%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"*)*, i32 (%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"*)** %83, i64 25
  %85 = load i32 (%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"*)*, i32 (%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"*)** %84, align 8
  %86 = call i32 %85(%"class.blink::ModulatorImplBase"* %0, %"struct.blink::ModuleRequest"* dereferenceable(32) %80) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49)
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  store i8* null, i8** %48, align 8
  br label %96

89:                                               ; preds = %79
  %90 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #11
  %91 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i8* %90, i8* %91) #11
  %92 = load i8*, i8** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  store i8* %92, i8** %48, align 8
  %93 = icmp eq i8* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %89
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 333, %"class.logging::CheckOpResult"* nonnull %9) #11
  %95 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %96

96:                                               ; preds = %88, %89, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  %97 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %8) #11
  br i1 %97, label %101, label %98

98:                                               ; preds = %96
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 335, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0)) #11
  %99 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #11
  %100 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %99, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.7, i64 0, i64 0), i64 68) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  br label %101

101:                                              ; preds = %96, %98
  %102 = load %"class.blink::ModuleScript"* (%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"*, i32)**, %"class.blink::ModuleScript"* (%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"*, i32)*** %53, align 8
  %103 = getelementptr inbounds %"class.blink::ModuleScript"* (%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"*, i32)*, %"class.blink::ModuleScript"* (%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"*, i32)** %102, i64 12
  %104 = load %"class.blink::ModuleScript"* (%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"*, i32)*, %"class.blink::ModuleScript"* (%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"*, i32)** %103, align 8
  %105 = call %"class.blink::ModuleScript"* %104(%"class.blink::ModulatorImplBase"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %8, i32 %86) #11
  %106 = icmp eq %"class.blink::ModuleScript"* %105, null
  br i1 %106, label %107, label %109

107:                                              ; preds = %101
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 341, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0)) #11
  %108 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  br label %109

109:                                              ; preds = %101, %107
  %110 = ptrtoint %"class.blink::ModuleScript"* %105 to i64
  %111 = load %"class.blink::Member.431"*, %"class.blink::Member.431"** %55, align 8
  %112 = icmp eq %"class.blink::Member.431"* %111, null
  br i1 %112, label %173, label %113

113:                                              ; preds = %109
  %114 = load i32, i32* %56, align 8
  %115 = add i32 %114, -1
  %116 = zext i32 %115 to i64
  %117 = shl i64 %110, 32
  %118 = xor i64 %117, -1
  %119 = add i64 %118, %110
  %120 = lshr i64 %119, 22
  %121 = xor i64 %120, %119
  %122 = shl i64 %121, 13
  %123 = xor i64 %122, -1
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 8
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, 9
  %128 = lshr i64 %127, 15
  %129 = xor i64 %128, %127
  %130 = shl i64 %129, 27
  %131 = xor i64 %130, -1
  %132 = add i64 %129, %131
  %133 = lshr i64 %132, 31
  %134 = xor i64 %133, %132
  %135 = trunc i64 %134 to i32
  %136 = and i32 %115, %135
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %111, i64 %137
  %139 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %139, align 8
  %141 = icmp eq %"class.blink::ModuleScript"* %140, %105
  br i1 %141, label %170, label %142

142:                                              ; preds = %113
  %143 = xor i32 %135, -1
  %144 = lshr i32 %135, 23
  %145 = add i32 %144, %143
  %146 = shl i32 %145, 12
  %147 = xor i32 %146, %145
  %148 = lshr i32 %147, 7
  %149 = xor i32 %148, %147
  %150 = shl i32 %149, 2
  %151 = xor i32 %150, %149
  %152 = lshr i32 %151, 20
  %153 = xor i32 %152, %151
  %154 = or i32 %153, 1
  %155 = zext i32 %154 to i64
  br label %156

156:                                              ; preds = %161, %142
  %157 = phi %"class.blink::ModuleScript"* [ %140, %142 ], [ %168, %161 ]
  %158 = phi i64 [ %137, %142 ], [ %165, %161 ]
  %159 = phi i64 [ 0, %142 ], [ %163, %161 ]
  %160 = icmp eq %"class.blink::ModuleScript"* %157, null
  br i1 %160, label %173, label %161

161:                                              ; preds = %156
  %162 = icmp eq i64 %159, 0
  %163 = select i1 %162, i64 %155, i64 %159
  %164 = add i64 %163, %158
  %165 = and i64 %164, %116
  %166 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %111, i64 %165
  %167 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %166, i64 0, i32 0, i32 0
  %168 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %167, align 8
  %169 = icmp eq %"class.blink::ModuleScript"* %168, %105
  br i1 %169, label %170, label %156

170:                                              ; preds = %161, %113
  %171 = phi %"class.blink::Member.431"* [ %138, %113 ], [ %166, %161 ]
  %172 = icmp eq %"class.blink::Member.431"* %171, null
  br i1 %172, label %173, label %174

173:                                              ; preds = %156, %170, %109
  call void @_ZN5blink17ModulatorImplBase22ProduceCacheModuleTreeEPNS_12ModuleScriptEPNS_11HeapHashSetINS_6MemberIKS1_EEN3WTF10MemberHashIS5_EENS7_10HashTraitsIS6_EEEE(%"class.blink::ModulatorImplBase"* %0, %"class.blink::ModuleScript"* %105, %"class.blink::HeapHashSet.425"* %2)
  br label %174

174:                                              ; preds = %170, %173
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %45) #11
  %175 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %80, i64 1
  %176 = icmp eq %"struct.blink::ModuleRequest"* %175, %42
  br i1 %176, label %57, label %79
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Module"* @_ZNK5blink12ModuleScript8V8ModuleEv(%"class.blink::ModuleScript"*) local_unnamed_addr #1

declare void @_ZNK5blink12ModuleScript22ResolveModuleSpecifierERKN3WTF6StringEPS2_(%"class.blink::KURL"* sret, %"class.blink::ModuleScript"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17ModulatorImplBase5TraceEPNS_7VisitorE(%"class.blink::ModulatorImplBase"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.54"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.308"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModuleMapEE5TraceEPNS_7VisitorEPKv) #11
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 4
  %26 = bitcast %"class.blink::Member.323"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_24ModuleTreeLinkerRegistryEE5TraceEPNS_7VisitorEPKv) #11
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 5
  %37 = bitcast %"class.blink::Member.334"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20ModuleRecordResolverEE5TraceEPNS_7VisitorEPKv) #11
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 6
  %48 = bitcast %"class.blink::Member.338"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %1, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21DynamicModuleResolverEE5TraceEPNS_7VisitorEPKv) #11
  br label %57

57:                                               ; preds = %46, %51
  %58 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 7
  %59 = bitcast %"class.blink::Member.342"* %58 to i64*
  %60 = load atomic i64, i64* %59 monotonic, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = inttoptr i64 %60 to i8*
  %64 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %65, i64 5
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, align 8
  tail call void %67(%"class.blink::Visitor"* %1, i8* nonnull %63, i8* nonnull %63, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ImportMapEE5TraceEPNS_7VisitorEPKv) #11
  br label %68

68:                                               ; preds = %57, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink9Modulator18NameInHeapSnapshotEv(%"class.blink::Modulator"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ModuleRecordResolver"* @_ZN5blink17ModulatorImplBase23GetModuleRecordResolverEv(%"class.blink::ModulatorImplBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::ModuleRecordResolver"*, %"class.blink::ModuleRecordResolver"** %2, align 8
  ret %"class.blink::ModuleRecordResolver"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::SingleThreadTaskRunner"* @_ZN5blink17ModulatorImplBase10TaskRunnerEv(%"class.blink::ModulatorImplBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %2, align 8
  ret %"class.base::SingleThreadTaskRunner"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink17ModulatorImplBase14GetScriptStateEv(%"class.blink::ModulatorImplBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %2, align 8
  ret %"class.blink::ScriptState"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ImportMap"* @_ZNK5blink17ModulatorImplBase19GetImportMapForTestEv(%"class.blink::ModulatorImplBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::ImportMap"*, %"class.blink::ImportMap"** %2, align 8
  ret %"class.blink::ImportMap"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink17ModulatorImplBase27GetAcquiringImportMapsStateEv(%"class.blink::ModulatorImplBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ModulatorImplBase27SetAcquiringImportMapsStateENS_9Modulator24AcquiringImportMapsStateE(%"class.blink::ModulatorImplBase"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 8
  store i32 %1, i32* %3, align 8
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZThn8_NK5blink9Modulator18NameInHeapSnapshotEv(%"class.blink::Modulator"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0)
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.393, %class.scoped_refptr.393* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #11
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.390"* dereferenceable(8) %9) #11
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #11
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #11
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #11
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #11
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.393* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #11
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #11
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #11
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #11
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #11
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #11
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #11
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.393* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #11
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #11
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #11
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.9, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0)) #11
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.9, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0)) #11
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.390"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #1

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ModuleRequestD2Ev(%"struct.blink::ModuleRequest"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.408", %"class.WTF::Vector.408"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::ImportAssertion"*, %"struct.blink::ImportAssertion"** %3, align 8
  %5 = icmp eq %"struct.blink::ImportAssertion"* %4, null
  br i1 %5, label %57, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %"struct.blink::ImportAssertion"* %4 to i8*
  %8 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %55, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %4, i64 %12
  br label %14

14:                                               ; preds = %11, %49
  %15 = phi %"struct.blink::ImportAssertion"* [ %50, %49 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #11
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #11
  br label %49

49:                                               ; preds = %48, %45, %32
  %50 = getelementptr inbounds %"struct.blink::ImportAssertion", %"struct.blink::ImportAssertion"* %15, i64 1
  %51 = icmp eq %"struct.blink::ImportAssertion"* %50, %13
  br i1 %51, label %52, label %14

52:                                               ; preds = %49
  store i32 0, i32* %8, align 4
  %53 = bitcast %"class.WTF::Vector.408"* %2 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %6
  %56 = phi i8* [ %54, %52 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #11
  store %"struct.blink::ImportAssertion"* null, %"struct.blink::ImportAssertion"** %3, align 8
  br label %57

57:                                               ; preds = %1, %55
  %58 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %0, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #11
  br label %74

74:                                               ; preds = %57, %70, %73
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptState"*
  tail call void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN5blink9ModuleMapC1EPNS_9ModulatorE(%"class.blink::ModuleMap"*, %"class.blink::Modulator"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_9ModuleMapEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_9ModuleMapEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_9ModuleMapEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_9ModuleMapEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9ModuleMapEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9ModuleMapEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ModuleMap"*
  tail call void @_ZNK5blink9ModuleMap5TraceEPNS_7VisitorE(%"class.blink::ModuleMap"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_9ModuleMapEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink9ModuleMap5TraceEPNS_7VisitorE(%"class.blink::ModuleMap"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_24ModuleTreeLinkerRegistryEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_24ModuleTreeLinkerRegistryEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_24ModuleTreeLinkerRegistryEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_24ModuleTreeLinkerRegistryEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24ModuleTreeLinkerRegistryEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_24ModuleTreeLinkerRegistryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ModuleTreeLinkerRegistry"*
  tail call void @_ZNK5blink24ModuleTreeLinkerRegistry5TraceEPNS_7VisitorE(%"class.blink::ModuleTreeLinkerRegistry"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_24ModuleTreeLinkerRegistryEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZNK5blink24ModuleTreeLinkerRegistry5TraceEPNS_7VisitorE(%"class.blink::ModuleTreeLinkerRegistry"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink24ModuleTreeLinkerRegistry18NameInHeapSnapshotEv(%"class.blink::ModuleTreeLinkerRegistry"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20ModuleRecordResolverEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20ModuleRecordResolverEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20ModuleRecordResolverEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20ModuleRecordResolverEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20ModuleRecordResolverEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20ModuleRecordResolverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ModuleRecordResolver"*
  %4 = bitcast i8* %1 to void (%"class.blink::ModuleRecordResolver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ModuleRecordResolver"*, %"class.blink::Visitor"*)**, void (%"class.blink::ModuleRecordResolver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ModuleRecordResolver"*, %"class.blink::Visitor"*)*, void (%"class.blink::ModuleRecordResolver"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::ModuleRecordResolver"*, %"class.blink::Visitor"*)*, void (%"class.blink::ModuleRecordResolver"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ModuleRecordResolver"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20ModuleRecordResolverEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ModuleRecordResolver"*
  %3 = bitcast i8* %0 to void (%"class.blink::ModuleRecordResolver"*)***
  %4 = load void (%"class.blink::ModuleRecordResolver"*)**, void (%"class.blink::ModuleRecordResolver"*)*** %3, align 8
  %5 = load void (%"class.blink::ModuleRecordResolver"*)*, void (%"class.blink::ModuleRecordResolver"*)** %4, align 8
  tail call void %5(%"class.blink::ModuleRecordResolver"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20ModuleRecordResolverEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink33ExecutionContextLifecycleObserverC2EPNS_16ExecutionContextENS0_4TypeE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20ModuleRecordResolverD2Ev(%"class.blink::ModuleRecordResolver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20ModuleRecordResolverD0Ev(%"class.blink::ModuleRecordResolver"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20ModuleRecordResolver5TraceEPNS_7VisitorE(%"class.blink::ModuleRecordResolver"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21DynamicModuleResolverEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21DynamicModuleResolverEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21DynamicModuleResolverEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21DynamicModuleResolverEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21DynamicModuleResolverEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21DynamicModuleResolverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DynamicModuleResolver"*
  tail call void @_ZNK5blink21DynamicModuleResolver5TraceEPNS_7VisitorE(%"class.blink::DynamicModuleResolver"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21DynamicModuleResolverEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink21DynamicModuleResolver5TraceEPNS_7VisitorE(%"class.blink::DynamicModuleResolver"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIN2v85LocalINS2_5ValueEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.v8::Value"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %108

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %108, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %108, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %108, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %108

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #11
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #11
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #11
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #11
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #11
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %58 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %57, i64 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"class.v8::Context"*, %"class.v8::Context"** %58, align 8
  %60 = icmp eq %"class.v8::Context"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %47
  %62 = bitcast %"class.blink::ScriptState"* %57 to %"class.v8::internal::Isolate"**
  %63 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %62, align 8
  %64 = bitcast %"class.v8::Context"* %59 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %63, i64 %65) #11
  %67 = bitcast i64* %66 to %"class.v8::Context"*
  br label %68

68:                                               ; preds = %47, %61
  %69 = phi %"class.v8::Context"* [ %67, %61 ], [ null, %47 ]
  %70 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %69) #11
  %71 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.390", %"class.blink::TraceWrapperV8Reference.390"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %72) #11
  %75 = bitcast %"class.blink::TraceWrapperV8Reference.390"* %56 to i64*
  store atomic i64 0, i64* %75 monotonic, align 8
  br label %76

76:                                               ; preds = %74, %68
  %77 = icmp eq %"class.v8::Value"* %1, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.v8::Value"* %1 to i64*
  %80 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %81 = bitcast %"class.blink::TraceWrapperV8Reference.390"* %56 to i64*
  %82 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %80, i64* nonnull %79, i64* %81, i1 zeroext false) #11
  %83 = ptrtoint i64* %82 to i64
  store atomic i64 %83, i64* %81 monotonic, align 8
  br label %84

84:                                               ; preds = %76, %78
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.390"* dereferenceable(8) %56) #11
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #11
  %85 = icmp eq i32* %49, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %84
  store i32 %50, i32* %49, align 4
  br label %87

87:                                               ; preds = %84, %86
  %88 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %89 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %88) #11
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %106

91:                                               ; preds = %87
  %92 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %94 = ptrtoint i64* %4 to i64
  %95 = sub i64 %93, %94
  %96 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %97 = icmp ult i64 %95, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  br i1 %97, label %100, label %98, !prof !4

98:                                               ; preds = %91
  %99 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %100

100:                                              ; preds = %91, %98
  %101 = phi i32* [ %99, %98 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %91 ]
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %100
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %106

105:                                              ; preds = %100
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %106

106:                                              ; preds = %105, %104, %90
  %107 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %107) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #11
  br label %108

108:                                              ; preds = %24, %16, %10, %20, %3, %106
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #1

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #1

declare void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #1

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.431"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS3_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.429"*, %"class.blink::ModuleScript"** dereferenceable(8), %"class.blink::ModuleScript"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.429", %"class.WTF::HashTable.429"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.431"*, %"class.blink::Member.431"** %4, align 8
  %6 = icmp eq %"class.blink::Member.431"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.431"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.429"* %0, %"class.blink::Member.431"* null)
  %9 = load %"class.blink::Member.431"*, %"class.blink::Member.431"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.431"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.429", %"class.WTF::HashTable.429"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::ModuleScript"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %40, align 8
  %42 = icmp eq %"class.blink::ModuleScript"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::ModuleScript"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::ModuleScript"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.431"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.431"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::ModuleScript"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::ModuleScript"* %59, inttoptr (i64 -1 to %"class.blink::ModuleScript"*)
  %67 = select i1 %66, %"class.blink::Member.431"* %60, %"class.blink::Member.431"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %73, align 8
  %75 = icmp eq %"class.blink::ModuleScript"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.431"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.431"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.429", %"class.WTF::HashTable.429"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.431"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %2, align 8
  %89 = ptrtoint %"class.blink::ModuleScript"* %88 to i64
  %90 = bitcast %"class.blink::Member.431"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::ModuleScript"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #11
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.431"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #11
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.429", %"class.WTF::HashTable.429"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.429", %"class.WTF::HashTable.429"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.431"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.429"* %0, %"class.blink::Member.431"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.431"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.431"*, i8 } undef, %"class.blink::Member.431"* %117, 0
  %119 = insertvalue { %"class.blink::Member.431"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.431"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.431"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.429"*, %"class.blink::Member.431"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.429", %"class.WTF::HashTable.429"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.429", %"class.WTF::HashTable.429"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.431"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.429"* %0, i32 %35, %"class.blink::Member.431"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.431"*
  %44 = call %"class.blink::Member.431"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.429"* %0, %"class.blink::Member.431"* %43, i32 %40, %"class.blink::Member.431"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.431"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.431"* %46
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.431"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.429"*, i32, %"class.blink::Member.431"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.429", %"class.WTF::HashTable.429"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.431"*, %"class.blink::Member.431"** %31, align 8
  %33 = icmp eq %"class.blink::Member.431"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.431"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.429", %"class.WTF::HashTable.429"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.431"*, %"class.blink::Member.431"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.431"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.431"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.431"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.431"*, %"class.blink::Member.431"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.431"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.431"* %61, %"class.blink::Member.431"* %55
  %63 = bitcast %"class.blink::Member.431"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.431"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.431"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.429"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #11
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.431"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.431"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.429"* %0, %"class.blink::Member.431"* %42, i32 %1, %"class.blink::Member.431"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.431"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.431"*, %"class.blink::Member.431"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.431"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.431"* %87, %"class.blink::Member.431"* %82
  %89 = bitcast %"class.blink::Member.431"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.431"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.431"*, %"class.blink::Member.431"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.431"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.431"* %99, %"class.blink::Member.431"* %88
  %101 = bitcast %"class.blink::Member.431"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.431"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.431"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.431"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.431"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_12ModuleScriptEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.429"*, %"class.blink::Member.431"*, i32, %"class.blink::Member.431"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.431"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.429", %"class.WTF::HashTable.429"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.429", %"class.WTF::HashTable.429"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.431"*, %"class.blink::Member.431"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.431"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.431"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #11
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.429", %"class.WTF::HashTable.429"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.431"*, %"class.blink::Member.431"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.429"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.431"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #11
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.431"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.431"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #11
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.429", %"class.WTF::HashTable.429"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.431"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.431"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.431"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.431"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.431"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %70, align 8
  %72 = icmp eq %"class.blink::ModuleScript"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::ModuleScript"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.431"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.431"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.431"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.431"* %93, null
  %95 = ptrtoint %"class.blink::Member.431"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::ModuleScript"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::ModuleScript"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::ModuleScript"* %99, inttoptr (i64 -1 to %"class.blink::ModuleScript"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.431"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %113, align 8
  %115 = icmp eq %"class.blink::ModuleScript"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.431"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.431"*, %"class.blink::Member.431"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.431"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.431"* %118, %"class.blink::Member.431"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.431"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.431"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.22, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([386 x i8], [386 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberIKNS1_12ModuleScriptEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.431"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.431", %"class.blink::Member.431"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.431"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_12ModuleScriptEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ModuleScript"*
  %4 = bitcast i8* %1 to void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)**, void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)*, void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::ModuleScript"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9ImportMapEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
