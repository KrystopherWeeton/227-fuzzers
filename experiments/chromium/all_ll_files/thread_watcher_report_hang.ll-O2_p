; ModuleID = '../../chrome/browser/metrics/thread_watcher_report_hang.cc'
source_filename = "../../chrome/browser/metrics/thread_watcher_report_hang.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.0 }
%struct.anon.0 = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic", i32, i64, i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@.str = private unnamed_addr constant [13 x i8] c"timestamp_us\00", align 1

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN7metrics16ReportThreadHangEv() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = alloca %"class.base::debug::ScopedActivity", align 8
  %3 = bitcast %"class.base::debug::ScopedActivity"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 32, i1 false)
  %4 = tail call i8* @_ZN4base17GetProgramCounterEv() #4
  call void @_ZN4base5debug14ScopedActivityC2EPKvhji(%"class.base::debug::ScopedActivity"* nonnull %2, i8* %4, i8 zeroext 0, i32 -823390147, i32 0) #4
  %5 = getelementptr inbounds %"class.base::debug::ScopedActivity", %"class.base::debug::ScopedActivity"* %2, i64 0, i32 0
  %6 = call dereferenceable(80) %"class.base::debug::ActivityUserData"* @_ZN4base5debug21GlobalActivityTracker20ScopedThreadActivity9user_dataEv(%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity"* nonnull %5) #4
  %7 = call i64 @_ZN4base9TimeTicks3NowEv() #4
  %8 = bitcast i64* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  store i64 %7, i64* %1, align 8
  %9 = bitcast %"class.base::debug::ActivityUserData"* %6 to i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)***
  %10 = load i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)**, i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)*** %9, align 8
  %11 = getelementptr inbounds i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)*, i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)** %10, i64 2
  %12 = load i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)*, i8* (%"class.base::debug::ActivityUserData"*, i8*, i64, i8, i8*, i64)** %11, align 8
  %13 = call i8* %12(%"class.base::debug::ActivityUserData"* %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12, i8 zeroext 8, i8* nonnull %8, i64 8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  %14 = notail call zeroext i1 @_ZN4base5debug19DumpWithoutCrashingEv() #4
  call void @_ZN4base5debug21GlobalActivityTracker20ScopedThreadActivityD2Ev(%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(80) %"class.base::debug::ActivityUserData"* @_ZN4base5debug21GlobalActivityTracker20ScopedThreadActivity9user_dataEv(%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity"*) local_unnamed_addr #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base5debug19DumpWithoutCrashingEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5debug21GlobalActivityTracker20ScopedThreadActivityD2Ev(%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity"*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN7metrics11StartupHangEv() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2)
  store volatile i32 -1431655766, i32* %1, align 4
  store volatile i32 44, i32* %1, align 4
  %3 = load volatile i32, i32* %1, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2)
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN7metrics12ShutdownHangEv() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  notail call void @_ZN7metrics16ReportThreadHangEv()
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2)
  store volatile i32 -1431655766, i32* %1, align 4
  store volatile i32 50, i32* %1, align 4
  %3 = load volatile i32, i32* %1, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2)
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN7metrics21ThreadUnresponsive_UIEv() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  notail call void @_ZN7metrics16ReportThreadHangEv()
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2)
  store volatile i32 -1431655766, i32* %1, align 4
  store volatile i32 58, i32* %1, align 4
  %3 = load volatile i32, i32* %1, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2)
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN7metrics21ThreadUnresponsive_IOEv() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  notail call void @_ZN7metrics16ReportThreadHangEv()
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2)
  store volatile i32 -1431655766, i32* %1, align 4
  store volatile i32 64, i32* %1, align 4
  %3 = load volatile i32, i32* %1, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2)
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN7metrics33CrashBecauseThreadWasUnresponsiveEN7content13BrowserThread2IDE(i32) local_unnamed_addr #0 {
  switch i32 %0, label %4 [
    i32 0, label %2
    i32 1, label %3
  ]

2:                                                ; preds = %1
  tail call void @_ZN7metrics21ThreadUnresponsive_UIEv()
  br label %4

3:                                                ; preds = %1
  tail call void @_ZN7metrics21ThreadUnresponsive_IOEv()
  br label %4

4:                                                ; preds = %2, %3, %1
  ret void
}

declare i8* @_ZN4base17GetProgramCounterEv() local_unnamed_addr #2

declare void @_ZN4base5debug14ScopedActivityC2EPKvhji(%"class.base::debug::ScopedActivity"*, i8*, i8 zeroext, i32, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
