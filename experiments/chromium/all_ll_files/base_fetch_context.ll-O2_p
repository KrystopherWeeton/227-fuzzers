; ModuleID = '../../third_party/blink/renderer/core/loader/base_fetch_context.cc'
source_filename = "../../third_party/blink/renderer/core/loader/base_fetch_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%union.anon.453 = type { double }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.80", i32, [4 x i8], %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.253", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.260", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.198", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__cxx_atomic_impl.119" }
%"struct.std::__1::__cxx_atomic_impl.119" = type { %"struct.std::__1::__cxx_atomic_base_impl.120" }
%"struct.std::__1::__cxx_atomic_base_impl.120" = type { i64 }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::Worklist.155"* }
%"class.blink::Worklist.155" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::Worklist.162"* }
%"class.blink::Worklist.162" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist.169"* }
%"class.blink::Worklist.169" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.176", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.192", [4 x i8] }>
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { i64 }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { float }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.201", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.210" }
%"class.WTF::Vector.210" = type { %"class.WTF::VectorBuffer.211" }
%"class.WTF::VectorBuffer.211" = type { %"class.WTF::VectorBufferBase.212" }
%"class.WTF::VectorBufferBase.212" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227" }
%"class.WTF::VectorBufferBase.227" = type { %"struct.std::__1::pair.228"*, i32, i32 }
%"struct.std::__1::pair.228" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.241" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.141"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.148"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.155"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.268", i64 }
%"class.std::__1::vector.268" = type { %"class.std::__1::__vector_base.269" }
%"class.std::__1::__vector_base.269" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.270" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.259 }
%class.scoped_refptr.259 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.260" = type { %"struct.std::__1::__atomic_base.261" }
%"struct.std::__1::__atomic_base.261" = type { %"struct.std::__1::__cxx_atomic_impl.262" }
%"struct.std::__1::__cxx_atomic_impl.262" = type { %"struct.std::__1::__cxx_atomic_base_impl.263" }
%"struct.std::__1::__cxx_atomic_base_impl.263" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::BaseFetchContext" = type { %"class.blink::FetchContext", %"class.blink::Member" }
%"class.blink::FetchContext" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type <{ %"class.blink::ResourceFetcherProperties", %"class.blink::Member.2", %"class.blink::Member.4", i8, i8, i8, i8, i8, [3 x i8], %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::ResourceFetcherProperties" = type { i32 (...)** }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::ResourceFetcherProperties"* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::FetchClientSettingsObject"* }
%"class.blink::FetchClientSettingsObject" = type { i32 (...)** }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.19, %class.scoped_refptr.19, %class.scoped_refptr.19, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.20, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.33", %"class.absl::optional.38", %"class.absl::optional.50", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.60", %"class.absl::optional.50", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.50", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.60", %"class.absl::optional.65", i8, %class.scoped_refptr.70 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.14" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.12 }
%union.anon.12 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.14" = type { %"class.absl::optional_internal::optional_data.15" }
%"class.absl::optional_internal::optional_data.15" = type { %"class.absl::optional_internal::optional_data_base.16" }
%"class.absl::optional_internal::optional_data_base.16" = type { %"class.absl::optional_internal::optional_data_dtor_base.17" }
%"class.absl::optional_internal::optional_data_dtor_base.17" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.19 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.14", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.19 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.73" }
%"class.base::RefCounted.73" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.20 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.27, i8, %"class.url::Origin" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::unique_ptr.21"* }
%class.scoped_refptr.27 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.absl::optional.33" = type { %"class.absl::optional_internal::optional_data.34" }
%"class.absl::optional_internal::optional_data.34" = type { %"class.absl::optional_internal::optional_data_base.35" }
%"class.absl::optional_internal::optional_data_base.35" = type { %"class.absl::optional_internal::optional_data_dtor_base.36" }
%"class.absl::optional_internal::optional_data_dtor_base.36" = type { i8, %union.anon.37 }
%union.anon.37 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.38" = type { %"class.absl::optional_internal::optional_data.39" }
%"class.absl::optional_internal::optional_data.39" = type { %"class.absl::optional_internal::optional_data_base.40" }
%"class.absl::optional_internal::optional_data_base.40" = type { %"class.absl::optional_internal::optional_data_dtor_base.41" }
%"class.absl::optional_internal::optional_data_dtor_base.41" = type { i8, %union.anon.42 }
%union.anon.42 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector", %"class.WTF::Vector.45", %"class.WTF::String" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.19*, i32, i32 }
%"class.WTF::Vector.45" = type { %"class.WTF::VectorBuffer.46" }
%"class.WTF::VectorBuffer.46" = type { %"class.WTF::VectorBufferBase.47" }
%"class.WTF::VectorBufferBase.47" = type { %"class.WTF::String"*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.55", %"class.absl::optional.55" }
%"class.absl::optional.55" = type { %"class.absl::optional_internal::optional_data.56" }
%"class.absl::optional_internal::optional_data.56" = type { %"class.absl::optional_internal::optional_data_base.57" }
%"class.absl::optional_internal::optional_data_base.57" = type { %"class.absl::optional_internal::optional_data_dtor_base.58" }
%"class.absl::optional_internal::optional_data_dtor_base.58" = type { i8, %union.anon.59 }
%union.anon.59 = type { %"class.base::TimeDelta" }
%"class.absl::optional.50" = type { %"class.absl::optional_internal::optional_data.51" }
%"class.absl::optional_internal::optional_data.51" = type { %"class.absl::optional_internal::optional_data_base.52" }
%"class.absl::optional_internal::optional_data_base.52" = type { %"class.absl::optional_internal::optional_data_dtor_base.53" }
%"class.absl::optional_internal::optional_data_dtor_base.53" = type { i8, %union.anon.54 }
%union.anon.54 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, %union.anon.64 }
%union.anon.64 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.65" = type { %"class.absl::optional_internal::optional_data.66" }
%"class.absl::optional_internal::optional_data.66" = type { %"class.absl::optional_internal::optional_data_base.67" }
%"class.absl::optional_internal::optional_data_base.67" = type { %"class.absl::optional_internal::optional_data_dtor_base.68" }
%"class.absl::optional_internal::optional_data_dtor_base.68" = type { i8, %union.anon.69 }
%union.anon.69 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.70 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.549", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.549" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.550" }
%"class.std::__1::vector.550" = type { %"class.std::__1::__vector_base.551" }
%"class.std::__1::__vector_base.551" = type { i32*, i32*, %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.71, %"class.mojo::PendingRemote.72" }
%class.scoped_refptr.71 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.72" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet", i8, i8, %class.scoped_refptr.77, %class.scoped_refptr.264, %class.scoped_refptr.266 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.74" }
%"class.WTF::HashTable.74" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.77 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.78", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.78" = type { %"class.base::RefCounted.79" }
%"class.base::RefCounted.79" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.264 = type { %"class.base::RefCountedData.265"* }
%"class.base::RefCountedData.265" = type opaque
%class.scoped_refptr.266 = type { %"class.base::RefCountedData.267"* }
%"class.base::RefCountedData.267" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.464" = type { i8*, %"class.WTF::String" }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.470", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.482", %"class.WTF::Vector.484" }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.473", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.WTF::Vector.484" = type { %"class.WTF::VectorBuffer.485" }
%"class.WTF::VectorBuffer.485" = type { %"class.WTF::VectorBufferBase.486" }
%"class.WTF::VectorBufferBase.486" = type { i32*, i32, i32 }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.353", i8, [7 x i8], %"class.WTF::Vector.374", %"class.blink::HeapVector.409", i8, [7 x i8], %"class.WTF::HashSet.338", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.WTF::Vector.374" = type { %"class.WTF::VectorBuffer.375" }
%"class.WTF::VectorBuffer.375" = type { %"class.WTF::VectorBufferBase.376" }
%"class.WTF::VectorBufferBase.376" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.377" }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.380", %"class.WTF::HashMap.387", %"class.WTF::HashMap.392", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.45", i32, %"class.mojo::StructPtr.397", %"class.WTF::Vector.45" }
%"class.mojo::StructPtr.380" = type { %"class.std::__1::unique_ptr.381" }
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.387" = type { %"class.WTF::HashTable.388" }
%"class.WTF::HashTable.388" = type <{ %"struct.WTF::KeyValuePair.391"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.391" = type opaque
%"class.WTF::HashMap.392" = type { %"class.WTF::HashTable.393" }
%"class.WTF::HashTable.393" = type <{ %"struct.WTF::KeyValuePair.396"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.396" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.397" = type { %"class.std::__1::unique_ptr.398" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.45", i8, i8, [6 x i8] }>
%"class.blink::HeapVector.409" = type { %"class.WTF::Vector.412" }
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::Member.415"*, i32, i32 }
%"class.blink::Member.415" = type opaque
%"class.WTF::HashSet.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::DocumentLoader" = type opaque
%"class.blink::SubresourceFilter" = type { i32 (...)**, %"class.blink::Member.277", %"class.std::__1::unique_ptr.279", %"struct.std::__1::pair.285" }
%"class.blink::Member.277" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.342", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.351", %"class.blink::Member.353", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.362", %"class.blink::Member.368", %"class.blink::Member.370", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.290" }
%"class.WTF::HashMap.290" = type { %"class.WTF::HashTable.291" }
%"class.WTF::HashTable.291" = type <{ %"struct.WTF::KeyValuePair.293"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.293" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.299" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.296" }
%"class.WTF::HashSet.296" = type { %"class.WTF::HashTable.297" }
%"class.WTF::HashTable.297" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.299" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.300" }
%"class.blink::HeapHashMap.300" = type { %"class.WTF::HashMap.303" }
%"class.WTF::HashMap.303" = type { %"class.WTF::HashTable.304" }
%"class.WTF::HashTable.304" = type <{ %"struct.WTF::KeyValuePair.306"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.306" = type { i8*, %"class.blink::Member.558" }
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.560" }
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.307, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.332", %"class.std::__1::unique_ptr.332", %"class.blink::Member.277", i32, [4 x i8], %"class.WTF::HashSet.338", i32, i32 }
%class.scoped_refptr.307 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.319", %"class.std::__1::map.328"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.311", %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.std::__1::map.319" = type { %"class.std::__1::__tree.320" }
%"class.std::__1::__tree.320" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.std::__1::map.328" = type opaque
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.346" }
%"class.WTF::Vector.346" = type { %"class.WTF::VectorBuffer.347" }
%"class.WTF::VectorBuffer.347" = type { %"class.WTF::VectorBufferBase.348" }
%"class.WTF::VectorBufferBase.348" = type { %"class.blink::Member.349"*, i32, i32 }
%"class.blink::Member.349" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.355", i32, i32 }
%"class.blink::HeapHashMap.355" = type { %"class.WTF::HashMap.358" }
%"class.WTF::HashMap.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"struct.WTF::KeyValuePair.361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.361" = type opaque
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::WebDocumentSubresourceFilter"* }
%"class.blink::WebDocumentSubresourceFilter" = type { i32 (...)** }
%"struct.std::__1::pair.285" = type { %"struct.std::__1::pair.286", i32, [4 x i8] }
%"struct.std::__1::pair.286" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.absl::optional.417" = type { %"class.absl::optional_internal::optional_data.418" }
%"class.absl::optional_internal::optional_data.418" = type { %"class.absl::optional_internal::optional_data_base.419" }
%"class.absl::optional_internal::optional_data_base.419" = type { %"class.absl::optional_internal::optional_data_dtor_base.420" }
%"class.absl::optional_internal::optional_data_dtor_base.420" = type { i8, %union.anon.421 }
%union.anon.421 = type { %"class.blink::KURL" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.absl::optional.437" = type { %"class.absl::optional_internal::optional_data.438" }
%"class.absl::optional_internal::optional_data.438" = type { %"class.absl::optional_internal::optional_data_base.439" }
%"class.absl::optional_internal::optional_data_base.439" = type { %"class.absl::optional_internal::optional_data_dtor_base.440" }
%"class.absl::optional_internal::optional_data_dtor_base.440" = type { i8, [7 x i8], %union.anon.441 }
%union.anon.441 = type { %"struct.blink::UserAgentMetadata" }
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.442", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.442" = type { %"class.std::__1::__vector_base.443" }
%"class.std::__1::__vector_base.443" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.444" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.absl::optional.422" = type { %"class.absl::optional_internal::optional_data.423" }
%"class.absl::optional_internal::optional_data.423" = type { %"class.absl::optional_internal::optional_data_base.424" }
%"class.absl::optional_internal::optional_data_base.424" = type { %"class.absl::optional_internal::optional_data_dtor_base.425" }
%"class.absl::optional_internal::optional_data_dtor_base.425" = type { i8, %union.anon.426 }
%union.anon.426 = type { %"struct.blink::ClientHintImageInfo" }
%"struct.blink::ClientHintImageInfo" = type { float, %"struct.blink::FetchParameters::ResourceWidth", %"class.absl::optional.427" }
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.absl::optional.427" = type { %"class.absl::optional_internal::optional_data.428" }
%"class.absl::optional_internal::optional_data.428" = type { %"class.absl::optional_internal::optional_data_base.429" }
%"class.absl::optional_internal::optional_data_base.429" = type { %"class.absl::optional_internal::optional_data_dtor_base.430" }
%"class.absl::optional_internal::optional_data_dtor_base.430" = type { i8, %union.anon.431 }
%union.anon.431 = type { i32 }
%"class.absl::optional.432" = type { %"class.absl::optional_internal::optional_data.433" }
%"class.absl::optional_internal::optional_data.433" = type { %"class.absl::optional_internal::optional_data_base.434" }
%"class.absl::optional_internal::optional_data_base.434" = type { %"class.absl::optional_internal::optional_data_dtor_base.435" }
%"class.absl::optional_internal::optional_data_dtor_base.435" = type { i8, %union.anon.436 }
%union.anon.436 = type { %"class.WTF::AtomicString" }
%"class.WTF::IntegerToStringConverter.605" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.absl::optional.449" = type { %"class.absl::optional_internal::optional_data.450" }
%"class.absl::optional_internal::optional_data.450" = type { %"class.absl::optional_internal::optional_data_base.451" }
%"class.absl::optional_internal::optional_data_base.451" = type { %"class.absl::optional_internal::optional_data_dtor_base.452" }
%"class.absl::optional_internal::optional_data_dtor_base.452" = type { i8, %union.anon.453 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::NetworkStateNotifier" = type <{ %"class.WTF::Mutex", %"struct.blink::NetworkStateNotifier::NetworkState", i8, [7 x i8], %"struct.blink::NetworkStateNotifier::NetworkState", %"class.WTF::HashMap.459", %"class.WTF::HashMap.459", i8, [7 x i8] }>
%"struct.blink::NetworkStateNotifier::NetworkState" = type <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], %"class.absl::optional.55", %"class.absl::optional.55", %"class.absl::optional.449", i8, [3 x i8], %"class.absl::optional.454", [4 x i8] }>
%"class.absl::optional.454" = type { %"class.absl::optional_internal::optional_data.455" }
%"class.absl::optional_internal::optional_data.455" = type { %"class.absl::optional_internal::optional_data_base.456" }
%"class.absl::optional_internal::optional_data_base.456" = type { %"class.absl::optional_internal::optional_data_dtor_base.457" }
%"class.absl::optional_internal::optional_data_dtor_base.457" = type { i8, %union.anon.458 }
%union.anon.458 = type { i32 }
%"class.WTF::HashMap.459" = type { %"class.WTF::HashTable.460" }
%"class.WTF::HashTable.460" = type <{ %"struct.WTF::KeyValuePair.463"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.463" = type { %class.scoped_refptr.499, %"class.std::__1::unique_ptr.562" }
%class.scoped_refptr.499 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.500" }>
%"class.base::RefCountedThreadSafe.500" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"struct.blink::NetworkStateNotifier::ObserverList"* }
%"struct.blink::NetworkStateNotifier::ObserverList" = type { i8, %"class.WTF::Vector.565", %"class.WTF::Vector.570" }
%"class.WTF::Vector.565" = type { %"class.WTF::VectorBuffer.566" }
%"class.WTF::VectorBuffer.566" = type { %"class.WTF::VectorBufferBase.567" }
%"class.WTF::VectorBufferBase.567" = type { %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, i32, i32 }
%"class.blink::NetworkStateNotifier::NetworkStateObserver" = type { i32 (...)** }
%"class.WTF::Vector.570" = type { %"class.WTF::VectorBuffer.571" }
%"class.WTF::VectorBuffer.571" = type { %"class.WTF::VectorBufferBase.572" }
%"class.WTF::VectorBufferBase.572" = type { i32*, i32, i32 }
%"class.absl::optional.578" = type { %"class.absl::optional_internal::optional_data.579" }
%"class.absl::optional_internal::optional_data.579" = type { %"class.absl::optional_internal::optional_data_base.580" }
%"class.absl::optional_internal::optional_data_base.580" = type { %"class.absl::optional_internal::optional_data_dtor_base.581" }
%"class.absl::optional_internal::optional_data_dtor_base.581" = type { i8, %union.anon.582 }
%union.anon.582 = type { %"class.std::__1::basic_string" }
%"class.net::structured_headers::Item" = type <{ i32, [4 x i8], i64, %"class.std::__1::basic_string", double, i8, [7 x i8] }>
%"class.WTF::StringAppend.466" = type { %"class.WTF::StringAppend.467", %"class.WTF::String" }
%"class.WTF::StringAppend.467" = type { %"class.WTF::StringAppend.464", i8* }
%"class.WTF::StringAppend" = type <{ %"class.WTF::StringAppend.464", i8, [7 x i8] }>
%"class.WTF::StringAppend.465" = type { %"class.WTF::StringAppend.466", i8* }
%"class.WTF::StringTypeAdapter.608" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.609" = type { %"class.WTF::StringTypeAdapter.610" }
%"class.WTF::StringTypeAdapter.610" = type { %"class.WTF::StringView" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::ResourceLoadInfoNotifierWrapper" = type { %"class.base::WeakPtr", %class.scoped_refptr.499, %"class.mojo::StructPtr.501" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.492 }
%class.scoped_refptr.492 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.493", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.493" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.494" }
%"struct.std::__1::atomic.494" = type { %"struct.std::__1::__atomic_base.495" }
%"struct.std::__1::__atomic_base.495" = type { %"struct.std::__1::__atomic_base.496" }
%"struct.std::__1::__atomic_base.496" = type { %"struct.std::__1::__cxx_atomic_impl.497" }
%"struct.std::__1::__cxx_atomic_impl.497" = type { %"struct.std::__1::__cxx_atomic_base_impl.498" }
%"struct.std::__1::__cxx_atomic_base_impl.498" = type { i8 }
%"class.mojo::StructPtr.501" = type { %"class.std::__1::unique_ptr.502" }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::mojom::ResourceLoadInfo"* }
%"class.blink::mojom::ResourceLoadInfo" = type { i64, %class.GURL, %class.GURL, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", i8, %"class.mojo::StructPtr.511", i32, %"struct.net::LoadTimingInfo", i64, i64, %"class.std::__1::vector.524" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.505" }
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %class.GURL* }
%"class.mojo::StructPtr.511" = type { %"class.std::__1::unique_ptr.512" }
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.blink::mojom::CommonNetworkInfo"* }
%"class.blink::mojom::CommonNetworkInfo" = type { i8, i8, %"class.absl::optional.515" }
%"class.absl::optional.515" = type { %"class.absl::optional_internal::optional_data.516" }
%"class.absl::optional_internal::optional_data.516" = type { %"class.absl::optional_internal::optional_data_base.517" }
%"class.absl::optional_internal::optional_data_base.517" = type { %"class.absl::optional_internal::optional_data_dtor_base.518" }
%"class.absl::optional_internal::optional_data_dtor_base.518" = type { i8, %union.anon.519 }
%union.anon.519 = type { %"class.net::IPEndPoint" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.523" }
%"class.base::time_internal::TimeBase.523" = type { i64 }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.std::__1::vector.524" = type { %"class.std::__1::__vector_base.525" }
%"class.std::__1::__vector_base.525" = type { %"class.mojo::StructPtr.526"*, %"class.mojo::StructPtr.526"*, %"class.std::__1::__compressed_pair.533" }
%"class.mojo::StructPtr.526" = type { %"class.std::__1::unique_ptr.527" }
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::mojom::RedirectInfo"* }
%"class.blink::mojom::RedirectInfo" = type { %"class.url::Origin", %"class.mojo::StructPtr.511" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.mojo::StructPtr.526"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEEcEcvS3_Ev = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN5blink12FetchContextD2Ev = comdat any

$_ZN5blink16BaseFetchContextD0Ev = comdat any

$_ZNK5blink12FetchContext10AllowImageEbRKNS_4KURLE = comdat any

$_ZN5blink12FetchContext6DetachEv = comdat any

$_ZNK5blink12FetchContext20GetPermissionsPolicyEv = comdat any

$_ZNK5blink12FetchContext14previews_stateEv = comdat any

$_ZN5blink12FetchContext37CreateResourceLoadInfoNotifierWrapperEv = comdat any

$_ZNK5blink12FetchContext14IsPrerenderingEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12FetchContextEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_12FetchContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_12FetchContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_12FetchContextEE7GetNameEPKv = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEEcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN5blink10TraceTraitINS_35DetachableResourceFetcherPropertiesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink25kClientHintsHeaderMappingE = external local_unnamed_addr constant [0 x i8*], align 8
@.str = private unnamed_addr constant [3 x i8] c"?1\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"?0\00", align 1
@_ZN5blink8features29kAllowClientHintsToThirdPartyE = external global %"struct.base::Feature", align 8
@.str.2 = private unnamed_addr constant [14 x i8] c"Device-Memory\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"DPR\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"Viewport-Width\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"Width\00", align 1
@__const._ZN5blink16BaseFetchContext25AddClientHintsIfNecessaryERKNS_22ClientHintsPreferencesERKN3url6OriginEbN4absl8optionalINS_17UserAgentMetadataEEEPKNS_17PermissionsPolicyERKNS9_INS_19ClientHintImageInfoEEERKNS9_IN3WTF12AtomicStringEEESN_RNS_15ResourceRequestE.throughput_mbps = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.453 } } } } { { { { i8, [7 x i8], %union.anon.453 } } } { { { i8, [7 x i8], %union.anon.453 } } { { i8, [7 x i8], %union.anon.453 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.453 { double 0xFFFFFFFFFFFFFFFF } } } } }, align 8
@.str.6 = private unnamed_addr constant [28 x i8] c"Unsafe attempt to load URL \00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c" from frame with URL \00", align 1
@.str.8 = private unnamed_addr constant [56 x i8] c". 'file:' URLs are treated as unique security origins.\0A\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c". Domains, protocols and ports must match.\0A\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"Not allowed to load local resource: \00", align 1
@_ZN5blink26fetch_initiator_type_names6kUacssE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink36kClientHintsPermissionsPolicyMappingE = external local_unnamed_addr constant [0 x i32], align 4
@_ZN5blink8features36kBackForwardCacheABExperimentControlE = external global %"struct.base::Feature", align 8
@_ZN5blink8features34kBackForwardCacheABExperimentGroupE = external constant [0 x i8], align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"Sec-bfcache-experiment\00", align 1
@_ZTVN5blink16BaseFetchContextE = hidden unnamed_addr constant { [40 x i8*] } { [40 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FetchContext"*)* @_ZN5blink12FetchContextD2Ev to i8*), i8* bitcast (void (%"class.blink::BaseFetchContext"*)* @_ZN5blink16BaseFetchContextD0Ev to i8*), i8* bitcast (void (%"class.blink::BaseFetchContext"*, %"class.blink::Visitor"*)* @_ZNK5blink16BaseFetchContext5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::FetchContext"*, %"class.blink::ResourceRequest"*)* @_ZN5blink12FetchContext27AddAdditionalRequestHeadersERNS_15ResourceRequestE to i8*), i8* bitcast (i32 (%"class.blink::FetchContext"*, %"class.blink::ResourceRequest"*, i8, i32)* @_ZNK5blink12FetchContext26ResourceRequestCachePolicyERKNS_15ResourceRequestENS_12ResourceTypeENS_15FetchParameters11DeferOptionE to i8*), i8* bitcast (void (%"class.blink::FetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, %"class.blink::WebScopedVirtualTimePauser"*, i8)* @_ZN5blink12FetchContext14PrepareRequestERNS_15ResourceRequestERNS_21ResourceLoaderOptionsERNS_26WebScopedVirtualTimePauserENS_12ResourceTypeE to i8*), i8* bitcast (void (%"class.blink::FetchContext"*, %"class.blink::ResourceTimingInfo"*)* @_ZN5blink12FetchContext17AddResourceTimingERKNS_18ResourceTimingInfoE to i8*), i8* bitcast (i1 (%"class.blink::FetchContext"*, i1, %"class.blink::KURL"*)* @_ZNK5blink12FetchContext10AllowImageEbRKNS_4KURLE to i8*), i8* bitcast (i64 (%"class.blink::BaseFetchContext"*, i8, %"class.blink::ResourceRequest"*, %"class.blink::KURL"*, %"struct.blink::ResourceLoaderOptions"*, i32, %"class.absl::optional.33"*)* @_ZNK5blink16BaseFetchContext10CanRequestENS_12ResourceTypeERKNS_15ResourceRequestERKNS_4KURLERKNS_21ResourceLoaderOptionsENS_20ReportingDispositionERKN4absl8optionalINS_19ResourceRequestHead12RedirectInfoEEE to i8*), i8* bitcast (i64 (%"class.blink::BaseFetchContext"*, i8, %"class.blink::ResourceRequest"*, %"class.blink::KURL"*, %"struct.blink::ResourceLoaderOptions"*, i32, %"class.absl::optional.33"*)* @_ZNK5blink16BaseFetchContext38CanRequestBasedOnSubresourceFilterOnlyENS_12ResourceTypeERKNS_15ResourceRequestERKNS_4KURLERKNS_21ResourceLoaderOptionsENS_20ReportingDispositionERKN4absl8optionalINS_19ResourceRequestHead12RedirectInfoEEE to i8*), i8* bitcast (i64 (%"class.blink::BaseFetchContext"*, i32, i32, %"class.blink::KURL"*, %"struct.blink::ResourceLoaderOptions"*, i32, %"class.blink::KURL"*, i8)* @_ZNK5blink16BaseFetchContext18CheckCSPForRequestENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_4KURLERKNS_21ResourceLoaderOptionsENS_20ReportingDispositionES8_NS_19ResourceRequestHead14RedirectStatusE to i8*), i8* bitcast (void (%"class.blink::FetchContext"*, i8, %"class.blink::ClientHintsPreferences"*, %"struct.blink::FetchParameters::ResourceWidth"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*)* @_ZN5blink12FetchContext23PopulateResourceRequestENS_12ResourceTypeERKNS_22ClientHintsPreferencesERKNS_15FetchParameters13ResourceWidthERNS_15ResourceRequestERKNS_21ResourceLoaderOptionsE to i8*), i8* bitcast (%"class.blink::FetchContext"* (%"class.blink::FetchContext"*)* @_ZN5blink12FetchContext6DetachEv to i8*), i8* bitcast (%"class.blink::PermissionsPolicy"* (%"class.blink::FetchContext"*)* @_ZNK5blink12FetchContext20GetPermissionsPolicyEv to i8*), i8* bitcast (i1 (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequestHead"*, %"class.absl::optional.417"*, i8, %"struct.blink::FetchInitiatorInfo"*)* @_ZN5blink16BaseFetchContext24CalculateIfAdSubresourceERKNS_19ResourceRequestHeadERKN4absl8optionalINS_4KURLEEENS_12ResourceTypeERKNS_18FetchInitiatorInfoE to i8*), i8* bitcast (i32 (%"class.blink::FetchContext"*)* @_ZNK5blink12FetchContext14previews_stateEv to i8*), i8* bitcast (void ()* @_ZN5blink12FetchContext31TakePendingWorkerTimingReceiverEi to i8*), i8* bitcast (%"class.blink::ResourceLoadInfoNotifierWrapper"* (%"class.blink::FetchContext"*)* @_ZN5blink12FetchContext37CreateResourceLoadInfoNotifierWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::FetchContext"*)* @_ZNK5blink12FetchContext14IsPrerenderingEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*, %"class.absl::optional.33"*, i32, %"class.WTF::String"*)* @_ZNK5blink16BaseFetchContext41SendConversionRequestInsteadOfRedirectingERKNS_4KURLERKN4absl8optionalINS_19ResourceRequestHead12RedirectInfoEEENS_20ReportingDispositionERKN3WTF6StringE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E = external local_unnamed_addr global i8, align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FetchContextEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FetchContext]\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.14 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12FetchContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12FetchContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12FetchContextEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.15 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink12FetchContextE = external unnamed_addr constant { [21 x i8*] }, align 8
@.str.17 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.18 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink16BaseFetchContext10CanRequestENS_12ResourceTypeERKNS_15ResourceRequestERKNS_4KURLERKNS_21ResourceLoaderOptionsENS_20ReportingDispositionERKN4absl8optionalINS_19ResourceRequestHead12RedirectInfoEEE(%"class.blink::BaseFetchContext"*, i8 zeroext, %"class.blink::ResourceRequest"* dereferenceable(1032), %"class.blink::KURL"* dereferenceable(112), %"struct.blink::ResourceLoaderOptions"* dereferenceable(112), i32, %"class.absl::optional.33"* dereferenceable(232)) unnamed_addr #0 align 2 {
  %8 = tail call i64 @_ZNK5blink16BaseFetchContext18CanRequestInternalENS_12ResourceTypeERKNS_15ResourceRequestERKNS_4KURLERKNS_21ResourceLoaderOptionsENS_20ReportingDispositionERKN4absl8optionalINS_19ResourceRequestHead12RedirectInfoEEE(%"class.blink::BaseFetchContext"* %0, i8 zeroext %1, %"class.blink::ResourceRequest"* dereferenceable(1032) %2, %"class.blink::KURL"* dereferenceable(112) %3, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112) %4, i32 %5, %"class.absl::optional.33"* dereferenceable(232) %6)
  %9 = trunc i64 %8 to i8
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq i32 %5, 1
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %20

13:                                               ; preds = %7
  %14 = lshr i64 %8, 32
  %15 = trunc i64 %14 to i32
  %16 = bitcast %"class.blink::BaseFetchContext"* %0 to void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)***
  %17 = load void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)**, void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)*, void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)** %17, i64 29
  %19 = load void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)*, void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)** %18, align 8
  tail call void %19(%"class.blink::BaseFetchContext"* %0, %"class.blink::ResourceRequest"* dereferenceable(1032) %2, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112) %4, i32 %15, i8 zeroext %1) #12
  br label %20

20:                                               ; preds = %13, %7
  ret i64 %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink16BaseFetchContext18CanRequestInternalENS_12ResourceTypeERKNS_15ResourceRequestERKNS_4KURLERKNS_21ResourceLoaderOptionsENS_20ReportingDispositionERKN4absl8optionalINS_19ResourceRequestHead12RedirectInfoEEE(%"class.blink::BaseFetchContext"*, i8 zeroext, %"class.blink::ResourceRequest"* dereferenceable(1032), %"class.blink::KURL"* dereferenceable(112), %"struct.blink::ResourceLoaderOptions"* dereferenceable(112), i32, %"class.absl::optional.33"* dereferenceable(232)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.WTF::StringAppend.464", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = getelementptr inbounds %"class.blink::BaseFetchContext", %"class.blink::BaseFetchContext"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::DetachableResourceFetcherProperties"*, %"class.blink::DetachableResourceFetcherProperties"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %18, align 8
  %20 = icmp eq %"class.blink::ResourceFetcherProperties"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %7
  %22 = bitcast %"class.blink::ResourceFetcherProperties"* %19 to i1 (%"class.blink::ResourceFetcherProperties"*)***
  %23 = load i1 (%"class.blink::ResourceFetcherProperties"*)**, i1 (%"class.blink::ResourceFetcherProperties"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %23, i64 9
  %25 = load i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::ResourceFetcherProperties"* nonnull %19) #12
  br i1 %26, label %27, label %36

27:                                               ; preds = %7, %21
  %28 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 8
  %29 = load i16, i16* %28, align 8
  %30 = trunc i16 %29 to i8
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %374

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.absl::optional.33", %"class.absl::optional.33"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %374, label %36

36:                                               ; preds = %32, %21
  %37 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0
  %38 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %37) #12
  %39 = bitcast %"class.blink::BaseFetchContext"* %0 to i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*)***
  %40 = load i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*)**, i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*)*, i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*)** %40, i64 28
  %42 = load i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*)*, i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::BaseFetchContext"* %0, %"class.blink::KURL"* dereferenceable(112) %38) #12
  br i1 %43, label %374, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 4, i32 0
  %46 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %45, align 8
  %47 = icmp eq %"class.blink::SecurityOrigin"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %46, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 17
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 4
  br i1 %53, label %139, label %54

54:                                               ; preds = %50
  %55 = tail call zeroext i1 @_ZNK5blink19ResourceRequestHead10CanDisplayERKNS_4KURLE(%"class.blink::ResourceRequestHead"* %37, %"class.blink::KURL"* dereferenceable(112) %3) #12
  br i1 %55, label %132, label %56

56:                                               ; preds = %54
  %57 = icmp eq i32 %5, 1
  br i1 %57, label %58, label %364

58:                                               ; preds = %56
  %59 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #12
  store i32 1, i32* %10, align 4
  %60 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #12
  store i32 3, i32* %11, align 4
  %61 = bitcast %"class.WTF::StringAppend.464"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #12
  %62 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %108, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %82

72:                                               ; preds = %65
  %73 = zext i32 %71 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #12
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %72
  tail call void @llvm.trap() #12
  unreachable

80:                                               ; preds = %72
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %70, align 4
  br label %82

82:                                               ; preds = %80, %65
  %83 = phi i32 [ %81, %80 ], [ %71, %65 ]
  %84 = load atomic i32, i32* %66 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %97

87:                                               ; preds = %82
  %88 = zext i32 %83 to i33
  %89 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #12
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !3

94:                                               ; preds = %87
  tail call void @llvm.trap() #12
  unreachable

95:                                               ; preds = %87
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %70, align 4
  br label %97

97:                                               ; preds = %95, %82
  %98 = phi i32 [ %96, %95 ], [ %83, %82 ]
  %99 = load atomic i32, i32* %66 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %97
  %103 = add i32 %98, -1
  store i32 %103, i32* %70, align 4
  br label %104

104:                                              ; preds = %102, %97
  %105 = phi i32 [ %103, %102 ], [ %98, %97 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #12
  br label %108

108:                                              ; preds = %58, %104, %107
  %109 = getelementptr inbounds %"class.WTF::StringAppend.464", %"class.WTF::StringAppend.464"* %12, i64 0, i32 0
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0), i8** %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringAppend.464", %"class.WTF::StringAppend.464"* %12, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %110, align 8
  %111 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %10, i32* nonnull dereferenceable(4) %11, %"class.WTF::StringAppend.464"* nonnull dereferenceable(16) %12) #12
  %112 = bitcast %"class.blink::BaseFetchContext"* %0 to void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)***
  %113 = load void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)**, void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)*, void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)** %113, i64 37
  %115 = load void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)*, void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)** %114, align 8
  call void %115(%"class.blink::BaseFetchContext"* %0, %"class.blink::ConsoleMessage"* %111) #12
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %108
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #12
  br label %131

131:                                              ; preds = %108, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #12
  br label %364

132:                                              ; preds = %54
  %133 = icmp eq i32 %52, 0
  br i1 %133, label %134, label %139

134:                                              ; preds = %132
  %135 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 5, i32 0
  %136 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %135, align 8
  %137 = tail call zeroext i1 @_ZN5blink4cors17CalculateCorsFlagERKNS_4KURLEPKNS_14SecurityOriginES6_N7network5mojom11RequestModeE(%"class.blink::KURL"* dereferenceable(112) %3, %"class.blink::SecurityOrigin"* %46, %"class.blink::SecurityOrigin"* %136, i32 0) #12
  br i1 %137, label %138, label %139

138:                                              ; preds = %134
  tail call void @_ZNK5blink16BaseFetchContext24PrintAccessDeniedMessageERKNS_4KURLE(%"class.blink::BaseFetchContext"* %0, %"class.blink::KURL"* dereferenceable(112) %3)
  br label %364

139:                                              ; preds = %50, %134, %132
  %140 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names6kUacssE, align 8
  %141 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %140, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %142, %144
  br i1 %145, label %146, label %156

146:                                              ; preds = %139
  %147 = icmp eq i8 %1, 1
  br i1 %147, label %148, label %155

148:                                              ; preds = %146
  %149 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149)
  %150 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %151 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8** %152, align 8
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 4, i32* %153, align 8
  %154 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %3, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %9) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149)
  br i1 %154, label %364, label %155

155:                                              ; preds = %148, %146
  br label %364

156:                                              ; preds = %139
  %157 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 15
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 16
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"class.absl::optional.33", %"class.absl::optional.33"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8, i8* %161, align 8, !range !2
  %163 = icmp ne i8 %162, 0
  %164 = getelementptr inbounds %"class.absl::optional.33", %"class.absl::optional.33"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %165 = select i1 %163, %"class.blink::KURL"* %164, %"class.blink::KURL"* %3
  %166 = xor i1 %163, true
  %167 = zext i1 %166 to i8
  %168 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 1
  br i1 %170, label %186, label %171

171:                                              ; preds = %156
  %172 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 10, i32 0
  %173 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %172, align 8
  %174 = bitcast %"class.blink::BaseFetchContext"* %0 to %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)***
  %175 = load %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)**, %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)*** %174, align 8
  %176 = getelementptr inbounds %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)*, %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)** %175, i64 30
  %177 = load %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)*, %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)** %176, align 8
  %178 = tail call %"class.blink::ContentSecurityPolicy"* %177(%"class.blink::BaseFetchContext"* %0, %"class.blink::DOMWrapperWorld"* %173) #12
  %179 = icmp eq %"class.blink::ContentSecurityPolicy"* %178, null
  br i1 %179, label %186, label %180

180:                                              ; preds = %171
  %181 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 6
  %182 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 7
  %183 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 8
  %184 = load i8, i8* %183, align 8
  %185 = tail call zeroext i1 @_ZN5blink21ContentSecurityPolicy12AllowRequestENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_4KURLERKN3WTF6StringERKNS9_7HashSetINSt3__14pairISA_NS_18IntegrityAlgorithmEEENS9_8PairHashISA_SG_EENS9_10HashTraitsISH_EENS9_18PartitionAllocatorEEENS_17ParserDispositionES8_NS_19ResourceRequestHead14RedirectStatusENS_20ReportingDispositionENS0_15CheckHeaderTypeE(%"class.blink::ContentSecurityPolicy"* nonnull %178, i32 %158, i32 %160, %"class.blink::KURL"* dereferenceable(112) %3, %"class.WTF::String"* dereferenceable(8) %181, %"class.WTF::HashSet"* dereferenceable(24) %182, i8 zeroext %184, %"class.blink::KURL"* dereferenceable(112) %165, i8 zeroext %167, i32 %5, i32 1) #12
  br i1 %185, label %186, label %364

186:                                              ; preds = %171, %180, %156
  %187 = icmp eq i8 %1, 3
  br i1 %187, label %188, label %193

188:                                              ; preds = %186
  %189 = load i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*)**, i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*)*** %39, align 8
  %190 = getelementptr inbounds i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*)*, i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*)** %189, i64 27
  %191 = load i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*)*, i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*)** %190, align 8
  %192 = tail call zeroext i1 %191(%"class.blink::BaseFetchContext"* %0, %"class.blink::KURL"* dereferenceable(112) %3) #12
  br i1 %192, label %193, label %364

193:                                              ; preds = %188, %186
  %194 = bitcast %"class.blink::BaseFetchContext"* %0 to i1 (%"class.blink::BaseFetchContext"*)***
  %195 = load i1 (%"class.blink::BaseFetchContext"*)**, i1 (%"class.blink::BaseFetchContext"*)*** %194, align 8
  %196 = getelementptr inbounds i1 (%"class.blink::BaseFetchContext"*)*, i1 (%"class.blink::BaseFetchContext"*)** %195, i64 31
  %197 = load i1 (%"class.blink::BaseFetchContext"*)*, i1 (%"class.blink::BaseFetchContext"*)** %196, align 8
  %198 = tail call zeroext i1 %197(%"class.blink::BaseFetchContext"* %0) #12
  br i1 %198, label %199, label %206

199:                                              ; preds = %193
  %200 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200)
  %201 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %202 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %201, i64* %202, align 8
  %203 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8** %203, align 8
  %204 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 4, i32* %204, align 8
  %205 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %3, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200)
  br i1 %205, label %206, label %364

206:                                              ; preds = %199, %193
  %207 = load %"class.blink::DetachableResourceFetcherProperties"*, %"class.blink::DetachableResourceFetcherProperties"** %16, align 8
  %208 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %207, i64 0, i32 1, i32 0, i32 0
  %209 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %208, align 8
  %210 = icmp eq %"class.blink::ResourceFetcherProperties"* %209, null
  br i1 %210, label %217, label %211

211:                                              ; preds = %206
  %212 = bitcast %"class.blink::ResourceFetcherProperties"* %209 to %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)***
  %213 = load %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)**, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*** %212, align 8
  %214 = getelementptr inbounds %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)** %213, i64 3
  %215 = load %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)** %214, align 8
  %216 = tail call dereferenceable(8) %"class.blink::FetchClientSettingsObject"* %215(%"class.blink::ResourceFetcherProperties"* nonnull %209) #12
  br label %220

217:                                              ; preds = %206
  %218 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %207, i64 0, i32 2, i32 0, i32 0
  %219 = load %"class.blink::FetchClientSettingsObject"*, %"class.blink::FetchClientSettingsObject"** %218, align 8
  br label %220

220:                                              ; preds = %211, %217
  %221 = phi %"class.blink::FetchClientSettingsObject"* [ %216, %211 ], [ %219, %217 ]
  %222 = bitcast %"class.blink::FetchClientSettingsObject"* %221 to %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)***
  %223 = load %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)**, %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)*** %222, align 8
  %224 = getelementptr inbounds %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)** %223, i64 4
  %225 = load %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)** %224, align 8
  %226 = tail call %"class.blink::SecurityOrigin"* %225(%"class.blink::FetchClientSettingsObject"* %221) #12
  %227 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #12
  %228 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"* %3) #12
  %229 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %228, %"class.WTF::StringImpl"** %229, align 8
  %230 = call zeroext i1 @_ZN5blink14SchemeRegistry28ShouldTreatURLSchemeAsLegacyERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %13) #12
  br i1 %230, label %231, label %273

231:                                              ; preds = %220
  %232 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232) #12
  %233 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %226, i64 0, i32 1, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %253, label %236

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %253

241:                                              ; preds = %236
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = zext i32 %243 to i33
  %245 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %244, i33 1) #12
  %246 = extractvalue { i33, i1 } %245, 1
  %247 = extractvalue { i33, i1 } %245, 0
  %248 = icmp slt i33 %247, 0
  %249 = or i1 %246, %248
  br i1 %249, label %250, label %251, !prof !3

250:                                              ; preds = %241
  call void @llvm.trap() #12
  unreachable

251:                                              ; preds = %241
  %252 = trunc i33 %247 to i32
  store i32 %252, i32* %242, align 4
  br label %253

253:                                              ; preds = %251, %236, %231
  %254 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %234, %"class.WTF::StringImpl"** %254, align 8
  %255 = call zeroext i1 @_ZN5blink14SchemeRegistry28ShouldTreatURLSchemeAsLegacyERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %14) #12
  %256 = xor i1 %255, true
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %272, label %259

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  br i1 %263, label %266, label %268

266:                                              ; preds = %259
  %267 = add i32 %265, -1
  store i32 %267, i32* %264, align 4
  br label %268

268:                                              ; preds = %266, %259
  %269 = phi i32 [ %267, %266 ], [ %265, %259 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %257) #12
  br label %272

272:                                              ; preds = %253, %268, %271
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #12
  br label %273

273:                                              ; preds = %220, %272
  %274 = phi i1 [ %256, %272 ], [ false, %220 ]
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %229, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #12
  br label %290

290:                                              ; preds = %273, %286, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #12
  br i1 %274, label %291, label %296

291:                                              ; preds = %290
  %292 = bitcast %"class.blink::BaseFetchContext"* %0 to void (%"class.blink::BaseFetchContext"*, i32)***
  %293 = load void (%"class.blink::BaseFetchContext"*, i32)**, void (%"class.blink::BaseFetchContext"*, i32)*** %292, align 8
  %294 = getelementptr inbounds void (%"class.blink::BaseFetchContext"*, i32)*, void (%"class.blink::BaseFetchContext"*, i32)** %293, i64 20
  %295 = load void (%"class.blink::BaseFetchContext"*, i32)*, void (%"class.blink::BaseFetchContext"*, i32)** %294, align 8
  call void %295(%"class.blink::BaseFetchContext"* %0, i32 531) #12
  br label %364

296:                                              ; preds = %290
  %297 = bitcast %"class.blink::BaseFetchContext"* %0 to i1 (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"class.blink::KURL"*)***
  %298 = load i1 (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"class.blink::KURL"*)**, i1 (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"class.blink::KURL"*)*** %297, align 8
  %299 = getelementptr inbounds i1 (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"class.blink::KURL"*)*, i1 (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"class.blink::KURL"*)** %298, i64 33
  %300 = load i1 (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"class.blink::KURL"*)*, i1 (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"class.blink::KURL"*)** %299, align 8
  %301 = call zeroext i1 %300(%"class.blink::BaseFetchContext"* %0, %"class.blink::ResourceRequest"* dereferenceable(1032) %2, %"class.blink::KURL"* dereferenceable(112) %3) #12
  br i1 %301, label %364, label %302

302:                                              ; preds = %296
  %303 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 35
  %304 = bitcast %"class.blink::BaseFetchContext"* %0 to i1 (%"class.blink::BaseFetchContext"*, i32, %"class.absl::optional.33"*, %"class.blink::KURL"*, i32, %"class.absl::optional.50"*)***
  %305 = load i1 (%"class.blink::BaseFetchContext"*, i32, %"class.absl::optional.33"*, %"class.blink::KURL"*, i32, %"class.absl::optional.50"*)**, i1 (%"class.blink::BaseFetchContext"*, i32, %"class.absl::optional.33"*, %"class.blink::KURL"*, i32, %"class.absl::optional.50"*)*** %304, align 8
  %306 = getelementptr inbounds i1 (%"class.blink::BaseFetchContext"*, i32, %"class.absl::optional.33"*, %"class.blink::KURL"*, i32, %"class.absl::optional.50"*)*, i1 (%"class.blink::BaseFetchContext"*, i32, %"class.absl::optional.33"*, %"class.blink::KURL"*, i32, %"class.absl::optional.50"*)** %305, i64 32
  %307 = load i1 (%"class.blink::BaseFetchContext"*, i32, %"class.absl::optional.33"*, %"class.blink::KURL"*, i32, %"class.absl::optional.50"*)*, i1 (%"class.blink::BaseFetchContext"*, i32, %"class.absl::optional.33"*, %"class.blink::KURL"*, i32, %"class.absl::optional.50"*)** %306, align 8
  %308 = call zeroext i1 %307(%"class.blink::BaseFetchContext"* %0, i32 %158, %"class.absl::optional.33"* dereferenceable(232) %6, %"class.blink::KURL"* dereferenceable(112) %3, i32 %5, %"class.absl::optional.50"* dereferenceable(16) %303) #12
  br i1 %308, label %364, label %309

309:                                              ; preds = %302
  %310 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 3, i32 8
  %311 = load i8, i8* %310, align 8, !range !2
  %312 = icmp eq i8 %311, 0
  br i1 %312, label %320, label %313

313:                                              ; preds = %309
  %314 = call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %3) #12
  br i1 %314, label %315, label %320

315:                                              ; preds = %313
  %316 = bitcast %"class.blink::BaseFetchContext"* %0 to void (%"class.blink::BaseFetchContext"*, i32)***
  %317 = load void (%"class.blink::BaseFetchContext"*, i32)**, void (%"class.blink::BaseFetchContext"*, i32)*** %316, align 8
  %318 = getelementptr inbounds void (%"class.blink::BaseFetchContext"*, i32)*, void (%"class.blink::BaseFetchContext"*, i32)** %317, i64 20
  %319 = load void (%"class.blink::BaseFetchContext"*, i32)*, void (%"class.blink::BaseFetchContext"*, i32)** %318, align 8
  call void %319(%"class.blink::BaseFetchContext"* %0, i32 1914) #12
  br label %364

320:                                              ; preds = %309, %313
  %321 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %321) #12
  %322 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %323 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 42
  %324 = load i64, i64* %323, align 8
  %325 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* null, i64 %324) #12
  store %"class.WTF::StringImpl"* %325, %"class.WTF::StringImpl"** %322, align 8
  %326 = bitcast %"class.blink::BaseFetchContext"* %0 to i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*, %"class.absl::optional.33"*, i32, %"class.WTF::String"*)***
  %327 = load i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*, %"class.absl::optional.33"*, i32, %"class.WTF::String"*)**, i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*, %"class.absl::optional.33"*, i32, %"class.WTF::String"*)*** %326, align 8
  %328 = getelementptr inbounds i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*, %"class.absl::optional.33"*, i32, %"class.WTF::String"*)*, i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*, %"class.absl::optional.33"*, i32, %"class.WTF::String"*)** %327, i64 26
  %329 = load i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*, %"class.absl::optional.33"*, i32, %"class.WTF::String"*)*, i1 (%"class.blink::BaseFetchContext"*, %"class.blink::KURL"*, %"class.absl::optional.33"*, i32, %"class.WTF::String"*)** %328, align 8
  %330 = call zeroext i1 %329(%"class.blink::BaseFetchContext"* %0, %"class.blink::KURL"* dereferenceable(112) %3, %"class.absl::optional.33"* dereferenceable(232) %6, i32 %5, %"class.WTF::String"* nonnull dereferenceable(8) %15) #12
  br i1 %330, label %345, label %331

331:                                              ; preds = %320
  %332 = bitcast %"class.blink::BaseFetchContext"* %0 to %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)***
  %333 = load %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)**, %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)*** %332, align 8
  %334 = getelementptr inbounds %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)** %333, i64 23
  %335 = load %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)** %334, align 8
  %336 = call %"class.blink::SubresourceFilter"* %335(%"class.blink::BaseFetchContext"* %0) #12
  %337 = icmp eq %"class.blink::SubresourceFilter"* %336, null
  br i1 %337, label %344, label %338

338:                                              ; preds = %331
  %339 = load %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)**, %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)*** %332, align 8
  %340 = getelementptr inbounds %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)** %339, i64 23
  %341 = load %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)** %340, align 8
  %342 = call %"class.blink::SubresourceFilter"* %341(%"class.blink::BaseFetchContext"* %0) #12
  %343 = call zeroext i1 @_ZN5blink17SubresourceFilter9AllowLoadERKNS_4KURLENS_5mojom18RequestContextTypeENS_20ReportingDispositionE(%"class.blink::SubresourceFilter"* %342, %"class.blink::KURL"* dereferenceable(112) %3, i32 %158, i32 %5) #12
  br i1 %343, label %344, label %345

344:                                              ; preds = %331, %338
  br label %345

345:                                              ; preds = %338, %320, %344
  %346 = phi i8 [ 0, %344 ], [ 1, %320 ], [ 1, %338 ]
  %347 = phi i32 [ undef, %344 ], [ 12, %320 ], [ 5, %338 ]
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %322, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %363, label %350

350:                                              ; preds = %345
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %350
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %350
  %360 = phi i32 [ %358, %357 ], [ %356, %350 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %348) #12
  br label %363

363:                                              ; preds = %345, %359, %362
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %321) #12
  br label %364

364:                                              ; preds = %180, %302, %296, %199, %188, %148, %56, %131, %363, %315, %291, %155, %138
  %365 = phi i8 [ 1, %155 ], [ 1, %291 ], [ 1, %315 ], [ %346, %363 ], [ 1, %138 ], [ 1, %131 ], [ 1, %56 ], [ 0, %148 ], [ 1, %188 ], [ 1, %199 ], [ 1, %296 ], [ 1, %302 ], [ 1, %180 ]
  %366 = phi i32 [ 0, %155 ], [ 3, %291 ], [ 0, %315 ], [ %347, %363 ], [ 3, %138 ], [ 0, %131 ], [ 0, %56 ], [ undef, %148 ], [ 1, %188 ], [ 3, %199 ], [ 3, %296 ], [ 2, %302 ], [ 1, %180 ]
  br i1 %47, label %374, label %367

367:                                              ; preds = %364
  %368 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %46, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %368) #12
  %369 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %370 = load i32, i32* %369, align 4
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %374

372:                                              ; preds = %367
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %46) #12
  %373 = bitcast %"class.blink::SecurityOrigin"* %46 to i8*
  call void @free(i8* %373) #12
  br label %374

374:                                              ; preds = %32, %372, %367, %364, %36, %27
  %375 = phi i8 [ 1, %32 ], [ 1, %27 ], [ 1, %36 ], [ %365, %364 ], [ %365, %367 ], [ %365, %372 ]
  %376 = phi i32 [ 0, %32 ], [ 0, %27 ], [ 4, %36 ], [ %366, %364 ], [ %366, %367 ], [ %366, %372 ]
  %377 = zext i32 %376 to i64
  %378 = shl nuw i64 %377, 32
  %379 = zext i8 %375 to i64
  %380 = or i64 %378, %379
  ret i64 %380
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink16BaseFetchContext38CanRequestBasedOnSubresourceFilterOnlyENS_12ResourceTypeERKNS_15ResourceRequestERKNS_4KURLERKNS_21ResourceLoaderOptionsENS_20ReportingDispositionERKN4absl8optionalINS_19ResourceRequestHead12RedirectInfoEEE(%"class.blink::BaseFetchContext"*, i8 zeroext, %"class.blink::ResourceRequest"* dereferenceable(1032), %"class.blink::KURL"* dereferenceable(112), %"struct.blink::ResourceLoaderOptions"* dereferenceable(112), i32, %"class.absl::optional.33"* nocapture readnone dereferenceable(232)) unnamed_addr #0 align 2 {
  %8 = bitcast %"class.blink::BaseFetchContext"* %0 to %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)***
  %9 = load %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)**, %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)** %9, i64 23
  %11 = load %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)** %10, align 8
  %12 = tail call %"class.blink::SubresourceFilter"* %11(%"class.blink::BaseFetchContext"* %0) #12
  %13 = icmp eq %"class.blink::SubresourceFilter"* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 15
  %16 = load i32, i32* %15, align 8
  %17 = tail call zeroext i1 @_ZN5blink17SubresourceFilter9AllowLoadERKNS_4KURLENS_5mojom18RequestContextTypeENS_20ReportingDispositionE(%"class.blink::SubresourceFilter"* nonnull %12, %"class.blink::KURL"* dereferenceable(112) %3, i32 %16, i32 %5) #12
  br i1 %17, label %25, label %18

18:                                               ; preds = %14
  %19 = icmp eq i32 %5, 1
  br i1 %19, label %20, label %25

20:                                               ; preds = %18
  %21 = bitcast %"class.blink::BaseFetchContext"* %0 to void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)***
  %22 = load void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)**, void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)*, void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)** %22, i64 29
  %24 = load void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)*, void (%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, i32, i8)** %23, align 8
  tail call void %24(%"class.blink::BaseFetchContext"* %0, %"class.blink::ResourceRequest"* dereferenceable(1032) %2, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112) %4, i32 5, i8 zeroext %1) #12
  br label %25

25:                                               ; preds = %14, %7, %18, %20
  %26 = phi i64 [ 21474836481, %20 ], [ 21474836481, %18 ], [ 21474836480, %7 ], [ 21474836480, %14 ]
  ret i64 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN5blink17SubresourceFilter9AllowLoadERKNS_4KURLENS_5mojom18RequestContextTypeENS_20ReportingDispositionE(%"class.blink::SubresourceFilter"*, %"class.blink::KURL"* dereferenceable(112), i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16BaseFetchContext24CalculateIfAdSubresourceERKNS_19ResourceRequestHeadERKN4absl8optionalINS_4KURLEEENS_12ResourceTypeERKNS_18FetchInitiatorInfoE(%"class.blink::BaseFetchContext"*, %"class.blink::ResourceRequestHead"* dereferenceable(1016), %"class.absl::optional.417"* dereferenceable(120), i8 zeroext, %"struct.blink::FetchInitiatorInfo"* nocapture readnone dereferenceable(32)) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.blink::BaseFetchContext"* %0 to %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)***
  %7 = load %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)**, %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)** %7, i64 23
  %9 = load %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::SubresourceFilter"* (%"class.blink::BaseFetchContext"*)** %8, align 8
  %10 = tail call %"class.blink::SubresourceFilter"* %9(%"class.blink::BaseFetchContext"* %0) #12
  %11 = getelementptr inbounds %"class.absl::optional.417", %"class.absl::optional.417"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.absl::optional.417", %"class.absl::optional.417"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %18

16:                                               ; preds = %5
  %17 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %1) #12
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi %"class.blink::KURL"* [ %15, %14 ], [ %17, %16 ]
  %20 = getelementptr inbounds %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestHead"* %1, i64 0, i32 30
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %18
  %24 = icmp eq %"class.blink::SubresourceFilter"* %10, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestHead"* %1, i64 0, i32 15
  %27 = load i32, i32* %26, align 8
  %28 = tail call zeroext i1 @_ZN5blink17SubresourceFilter12IsAdResourceERKNS_4KURLENS_5mojom18RequestContextTypeE(%"class.blink::SubresourceFilter"* nonnull %10, %"class.blink::KURL"* dereferenceable(112) %19, i32 %27) #12
  br label %29

29:                                               ; preds = %18, %23, %25
  %30 = phi i1 [ true, %18 ], [ false, %23 ], [ %28, %25 ]
  ret i1 %30
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink17SubresourceFilter12IsAdResourceERKNS_4KURLENS_5mojom18RequestContextTypeE(%"class.blink::SubresourceFilter"*, %"class.blink::KURL"* dereferenceable(112), i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink16BaseFetchContext41SendConversionRequestInsteadOfRedirectingERKNS_4KURLERKN4absl8optionalINS_19ResourceRequestHead12RedirectInfoEEENS_20ReportingDispositionERKN3WTF6StringE(%"class.blink::BaseFetchContext"* nocapture readnone, %"class.blink::KURL"* nocapture readnone dereferenceable(112), %"class.absl::optional.33"* nocapture readnone dereferenceable(232), i32, %"class.WTF::String"* nocapture readnone dereferenceable(8)) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16BaseFetchContext25AddClientHintsIfNecessaryERKNS_22ClientHintsPreferencesERKN3url6OriginEbN4absl8optionalINS_17UserAgentMetadataEEEPKNS_17PermissionsPolicyERKNS9_INS_19ClientHintImageInfoEEERKNS9_IN3WTF12AtomicStringEEESN_RNS_15ResourceRequestE(%"class.blink::BaseFetchContext"* nocapture readnone, %"class.blink::ClientHintsPreferences"* nocapture readonly dereferenceable(16), %"class.url::Origin"* dereferenceable(80), i1 zeroext, %"class.absl::optional.437"*, %"class.blink::PermissionsPolicy"*, %"class.absl::optional.422"* nocapture readonly dereferenceable(24), %"class.absl::optional.432"* dereferenceable(16), %"class.absl::optional.432"* dereferenceable(16), %"class.blink::ResourceRequest"* dereferenceable(1032)) local_unnamed_addr #0 align 2 {
  %11 = alloca %"class.WTF::IntegerToStringConverter.605", align 8
  %12 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %13 = alloca %"class.WTF::AtomicString", align 8
  %14 = alloca %"class.WTF::AtomicString", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.WTF::AtomicString", align 8
  %17 = alloca %"class.WTF::AtomicString", align 8
  %18 = alloca %"class.WTF::AtomicString", align 8
  %19 = alloca %"class.WTF::AtomicString", align 8
  %20 = alloca %"class.WTF::AtomicString", align 8
  %21 = alloca %"class.WTF::AtomicString", align 8
  %22 = alloca %"class.WTF::AtomicString", align 8
  %23 = alloca %"class.WTF::AtomicString", align 8
  %24 = alloca %"class.WTF::AtomicString", align 8
  %25 = alloca %"class.WTF::AtomicString", align 8
  %26 = alloca %"class.absl::optional.55", align 8
  %27 = alloca %"class.WTF::String", align 8
  %28 = alloca %"class.WTF::AtomicString", align 8
  %29 = alloca %"class.WTF::AtomicString", align 8
  %30 = alloca %"class.absl::optional.449", align 8
  %31 = alloca %"class.WTF::String", align 8
  %32 = alloca %"class.WTF::AtomicString", align 8
  %33 = alloca %"class.WTF::AtomicString", align 8
  %34 = alloca %"class.WTF::AtomicString", align 8
  %35 = alloca %"class.WTF::AtomicString", align 8
  %36 = alloca %"class.WTF::AtomicString", align 8
  %37 = alloca %"class.WTF::AtomicString", align 8
  %38 = alloca %"class.WTF::AtomicString", align 8
  %39 = alloca %"class.std::__1::basic_string", align 8
  %40 = alloca %"class.WTF::AtomicString", align 8
  %41 = alloca %"class.WTF::AtomicString", align 8
  %42 = alloca %"class.std::__1::basic_string", align 8
  %43 = alloca %"class.WTF::AtomicString", align 8
  %44 = alloca %"class.WTF::AtomicString", align 8
  %45 = alloca %"class.std::__1::basic_string", align 8
  %46 = alloca %"class.WTF::AtomicString", align 8
  %47 = alloca %"class.WTF::AtomicString", align 8
  %48 = alloca %"class.std::__1::basic_string", align 8
  %49 = alloca %"class.WTF::AtomicString", align 8
  %50 = alloca %"class.WTF::AtomicString", align 8
  %51 = alloca %"class.std::__1::basic_string", align 8
  %52 = alloca %"class.WTF::AtomicString", align 8
  %53 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %9, i64 0, i32 0
  %54 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %53) #12
  %55 = tail call zeroext i1 @_ZN5blink22ClientHintsPreferences20IsClientHintsAllowedERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112) %54) #12
  br i1 %55, label %56, label %1654

56:                                               ; preds = %10
  %57 = tail call zeroext i1 @_ZN5blink22ClientHintsPreferences26UserAgentClientHintEnabledEv() #12
  br i1 %57, label %58, label %213

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %213, label %62

62:                                               ; preds = %58
  %63 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %62
  %66 = icmp eq %"class.blink::PermissionsPolicy"* %5, null
  br i1 %66, label %1654, label %67

67:                                               ; preds = %65
  %68 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 8), align 4
  %69 = tail call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %68, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %69, label %71, label %146

70:                                               ; preds = %62
  br i1 %3, label %71, label %213

71:                                               ; preds = %70, %67
  %72 = tail call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 8) #12
  br i1 %72, label %77, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 8
  %75 = load i8, i8* %74, align 1, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %146, label %77

77:                                               ; preds = %73, %71
  %78 = bitcast %"class.WTF::AtomicString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #12
  %79 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN5blink25kClientHintsHeaderMappingE, i64 0, i64 8), align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = tail call i64 @strlen(i8* nonnull %79) #13
  br label %83

83:                                               ; preds = %77, %81
  %84 = phi i64 [ %82, %81 ], [ 0, %77 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %13, i8* %79, i64 %84) #12
  %85 = bitcast %"class.WTF::AtomicString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #12
  %86 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #12
  %87 = load i8, i8* %59, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %90, !prof !3

89:                                               ; preds = %83
  call void @llvm.trap() #12
  unreachable

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink17UserAgentMetadata25SerializeBrandVersionListEv(%"class.std::__1::basic_string"* nonnull sret %15, %"struct.blink::UserAgentMetadata"* %91) #12
  %92 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = icmp eq i8* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %90, %96
  %101 = phi i8* [ %98, %96 ], [ %86, %90 ]
  %102 = call i64 @strlen(i8* nonnull %101) #13
  br label %103

103:                                              ; preds = %96, %100
  %104 = phi i8* [ %101, %100 ], [ null, %96 ]
  %105 = phi i64 [ %102, %100 ], [ 0, %96 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %14, i8* %104, i64 %105) #12
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %13, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %14) #12
  %106 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #12
  br label %122

122:                                              ; preds = %103, %118, %121
  %123 = load i8, i8* %93, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %127) #14
  br label %128

128:                                              ; preds = %122, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #12
  %129 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #12
  br label %145

145:                                              ; preds = %128, %141, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #12
  br label %146

146:                                              ; preds = %73, %67, %145
  %147 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %154, label %149

149:                                              ; preds = %146
  %150 = icmp eq %"class.blink::PermissionsPolicy"* %5, null
  br i1 %150, label %1654, label %151

151:                                              ; preds = %149
  %152 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 12), align 4
  %153 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %152, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %153, label %155, label %215

154:                                              ; preds = %146
  br i1 %3, label %155, label %213

155:                                              ; preds = %154, %151
  %156 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 12) #12
  br i1 %156, label %161, label %157

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 12
  %159 = load i8, i8* %158, align 1, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %213, label %161

161:                                              ; preds = %157, %155
  %162 = bitcast %"class.WTF::AtomicString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #12
  %163 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN5blink25kClientHintsHeaderMappingE, i64 0, i64 12), align 8
  %164 = icmp eq i8* %163, null
  br i1 %164, label %167, label %165

165:                                              ; preds = %161
  %166 = call i64 @strlen(i8* nonnull %163) #13
  br label %167

167:                                              ; preds = %161, %165
  %168 = phi i64 [ %166, %165 ], [ 0, %161 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %16, i8* %163, i64 %168) #12
  %169 = bitcast %"class.WTF::AtomicString"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #12
  %170 = load i8, i8* %59, align 8, !range !2
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %172, label %173, !prof !3

172:                                              ; preds = %167
  call void @llvm.trap() #12
  unreachable

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6
  %175 = load i8, i8* %174, align 8, !range !2
  %176 = icmp eq i8 %175, 0
  %177 = select i1 %176, [3 x i8]* @.str.1, [3 x i8]* @.str
  %178 = getelementptr inbounds [3 x i8], [3 x i8]* %177, i64 0, i64 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %17, i8* nonnull %178, i64 2) #12
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %16, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %17) #12
  %179 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %173
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #12
  br label %195

195:                                              ; preds = %173, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #12
  %196 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %196, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #12
  br label %212

212:                                              ; preds = %195, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #12
  br label %213

213:                                              ; preds = %157, %58, %70, %154, %212, %56
  %214 = icmp eq %"class.blink::PermissionsPolicy"* %5, null
  br i1 %214, label %1654, label %215

215:                                              ; preds = %151, %213
  %216 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1, !range !2
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %221

218:                                              ; preds = %215
  %219 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features29kAllowClientHintsToThirdPartyE) #12
  %220 = or i1 %219, %3
  br i1 %220, label %221, label %1654

221:                                              ; preds = %215, %218
  %222 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features29kAllowClientHintsToThirdPartyE) #12
  br i1 %222, label %230, label %223

223:                                              ; preds = %221
  %224 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1, !range !2
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %229, label %226

226:                                              ; preds = %223
  %227 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 0), align 4
  %228 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %227, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %228, label %230, label %317

229:                                              ; preds = %223
  br i1 %3, label %230, label %317

230:                                              ; preds = %229, %226, %221
  %231 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 0) #12
  br i1 %231, label %236, label %232

232:                                              ; preds = %230
  %233 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 0
  %234 = load i8, i8* %233, align 1, !range !2
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %317, label %236

236:                                              ; preds = %232, %230
  %237 = bitcast %"class.WTF::AtomicString"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %237) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13) #12
  %238 = bitcast %"class.WTF::AtomicString"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %238) #12
  %239 = call float @_ZN5blink24ApproximatedDeviceMemory27GetApproximatedDeviceMemoryEv() #12
  %240 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %239) #12
  %241 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %241, label %265, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 acquire, align 4
  %245 = and i32 %244, 4
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %263, label %247

247:                                              ; preds = %242
  %248 = load atomic i32, i32* %243 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %265

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = zext i32 %253 to i33
  %255 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %254, i33 1) #12
  %256 = extractvalue { i33, i1 } %255, 1
  %257 = extractvalue { i33, i1 } %255, 0
  %258 = icmp slt i33 %257, 0
  %259 = or i1 %256, %258
  br i1 %259, label %260, label %261, !prof !3

260:                                              ; preds = %251
  call void @llvm.trap() #12
  unreachable

261:                                              ; preds = %251
  %262 = trunc i33 %257 to i32
  store i32 %262, i32* %252, align 4
  br label %265

263:                                              ; preds = %242
  %264 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %240) #12
  br label %265

265:                                              ; preds = %236, %247, %261, %263
  %266 = phi %"class.WTF::StringImpl"* [ %264, %263 ], [ %240, %247 ], [ %240, %261 ], [ null, %236 ]
  %267 = ptrtoint %"class.WTF::StringImpl"* %266 to i64
  %268 = bitcast %"class.WTF::AtomicString"* %19 to i64*
  store i64 %267, i64* %268, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %18, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %19) #12
  %269 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %269, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %285, label %272

272:                                              ; preds = %265
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  br i1 %276, label %279, label %281

279:                                              ; preds = %272
  %280 = add i32 %278, -1
  store i32 %280, i32* %277, align 4
  br label %281

281:                                              ; preds = %279, %272
  %282 = phi i32 [ %280, %279 ], [ %278, %272 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %270) #12
  br label %285

285:                                              ; preds = %265, %281, %284
  br i1 %241, label %299, label %286

286:                                              ; preds = %285
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = and i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  br i1 %290, label %293, label %295

293:                                              ; preds = %286
  %294 = add i32 %292, -1
  store i32 %294, i32* %291, align 4
  br label %295

295:                                              ; preds = %293, %286
  %296 = phi i32 [ %294, %293 ], [ %292, %286 ]
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %295
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %240) #12
  br label %299

299:                                              ; preds = %285, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %238) #12
  %300 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %302 = icmp eq %"class.WTF::StringImpl"* %301, null
  br i1 %302, label %316, label %303

303:                                              ; preds = %299
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = and i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  br i1 %307, label %310, label %312

310:                                              ; preds = %303
  %311 = add i32 %309, -1
  store i32 %311, i32* %308, align 4
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi i32 [ %311, %310 ], [ %309, %303 ]
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %312
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %301) #12
  br label %316

316:                                              ; preds = %299, %312, %315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %237) #12
  br label %317

317:                                              ; preds = %232, %226, %229, %316
  %318 = getelementptr inbounds %"class.absl::optional.422", %"class.absl::optional.422"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %319 = load i8, i8* %318, align 4, !range !2
  %320 = icmp eq i8 %319, 0
  br i1 %320, label %690, label %321

321:                                              ; preds = %317
  %322 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features29kAllowClientHintsToThirdPartyE) #12
  br i1 %322, label %330, label %323

323:                                              ; preds = %321
  %324 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1, !range !2
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %329, label %326

326:                                              ; preds = %323
  %327 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 1), align 4
  %328 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %327, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %328, label %330, label %422

329:                                              ; preds = %323
  br i1 %3, label %330, label %422

330:                                              ; preds = %329, %326, %321
  %331 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 1) #12
  br i1 %331, label %336, label %332

332:                                              ; preds = %330
  %333 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 1
  %334 = load i8, i8* %333, align 1, !range !2
  %335 = icmp eq i8 %334, 0
  br i1 %335, label %422, label %336

336:                                              ; preds = %332, %330
  %337 = bitcast %"class.WTF::AtomicString"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %337) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3) #12
  %338 = bitcast %"class.WTF::AtomicString"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %338) #12
  %339 = load i8, i8* %318, align 4, !range !2
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %341, label %342, !prof !3

341:                                              ; preds = %336
  call void @llvm.trap() #12
  unreachable

342:                                              ; preds = %336
  %343 = getelementptr inbounds %"class.absl::optional.422", %"class.absl::optional.422"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %344 = load float, float* %343, align 4
  %345 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %344) #12
  %346 = icmp eq %"class.WTF::StringImpl"* %345, null
  br i1 %346, label %370, label %347

347:                                              ; preds = %342
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load atomic i32, i32* %348 acquire, align 4
  %350 = and i32 %349, 4
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %368, label %352

352:                                              ; preds = %347
  %353 = load atomic i32, i32* %348 monotonic, align 4
  %354 = and i32 %353, 2
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %370

356:                                              ; preds = %352
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 0
  %358 = load i32, i32* %357, align 4
  %359 = zext i32 %358 to i33
  %360 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %359, i33 1) #12
  %361 = extractvalue { i33, i1 } %360, 1
  %362 = extractvalue { i33, i1 } %360, 0
  %363 = icmp slt i33 %362, 0
  %364 = or i1 %361, %363
  br i1 %364, label %365, label %366, !prof !3

365:                                              ; preds = %356
  call void @llvm.trap() #12
  unreachable

366:                                              ; preds = %356
  %367 = trunc i33 %362 to i32
  store i32 %367, i32* %357, align 4
  br label %370

368:                                              ; preds = %347
  %369 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %345) #12
  br label %370

370:                                              ; preds = %342, %352, %366, %368
  %371 = phi %"class.WTF::StringImpl"* [ %369, %368 ], [ %345, %352 ], [ %345, %366 ], [ null, %342 ]
  %372 = ptrtoint %"class.WTF::StringImpl"* %371 to i64
  %373 = bitcast %"class.WTF::AtomicString"* %21 to i64*
  store i64 %372, i64* %373, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %20, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %21) #12
  %374 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %374, align 8
  %376 = icmp eq %"class.WTF::StringImpl"* %375, null
  br i1 %376, label %390, label %377

377:                                              ; preds = %370
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %390

389:                                              ; preds = %386
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %375) #12
  br label %390

390:                                              ; preds = %370, %386, %389
  br i1 %346, label %404, label %391

391:                                              ; preds = %390
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %393 = load atomic i32, i32* %392 monotonic, align 4
  %394 = and i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 0
  %397 = load i32, i32* %396, align 4
  br i1 %395, label %398, label %400

398:                                              ; preds = %391
  %399 = add i32 %397, -1
  store i32 %399, i32* %396, align 4
  br label %400

400:                                              ; preds = %398, %391
  %401 = phi i32 [ %399, %398 ], [ %397, %391 ]
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %404

403:                                              ; preds = %400
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %345) #12
  br label %404

404:                                              ; preds = %390, %400, %403
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %338) #12
  %405 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %405, align 8
  %407 = icmp eq %"class.WTF::StringImpl"* %406, null
  br i1 %407, label %421, label %408

408:                                              ; preds = %404
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load atomic i32, i32* %409 monotonic, align 4
  %411 = and i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 0
  %414 = load i32, i32* %413, align 4
  br i1 %412, label %415, label %417

415:                                              ; preds = %408
  %416 = add i32 %414, -1
  store i32 %416, i32* %413, align 4
  br label %417

417:                                              ; preds = %415, %408
  %418 = phi i32 [ %416, %415 ], [ %414, %408 ]
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %417
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %406) #12
  br label %421

421:                                              ; preds = %404, %417, %420
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %337) #12
  br label %422

422:                                              ; preds = %332, %326, %329, %421
  %423 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features29kAllowClientHintsToThirdPartyE) #12
  br i1 %423, label %431, label %424

424:                                              ; preds = %422
  %425 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1, !range !2
  %426 = icmp eq i8 %425, 0
  br i1 %426, label %430, label %427

427:                                              ; preds = %424
  %428 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 3), align 4
  %429 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %428, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %429, label %431, label %581

430:                                              ; preds = %424
  br i1 %3, label %431, label %581

431:                                              ; preds = %430, %427, %422
  %432 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 3) #12
  br i1 %432, label %437, label %433

433:                                              ; preds = %431
  %434 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 3
  %435 = load i8, i8* %434, align 1, !range !2
  %436 = icmp eq i8 %435, 0
  br i1 %436, label %581, label %437

437:                                              ; preds = %433, %431
  %438 = load i8, i8* %318, align 4, !range !2
  %439 = icmp eq i8 %438, 0
  br i1 %439, label %440, label %441, !prof !3

440:                                              ; preds = %437
  call void @llvm.trap() #12
  unreachable

441:                                              ; preds = %437
  %442 = getelementptr inbounds %"class.absl::optional.422", %"class.absl::optional.422"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %443 = load i8, i8* %442, align 4, !range !2
  %444 = icmp eq i8 %443, 0
  br i1 %444, label %581, label %445

445:                                              ; preds = %441
  %446 = bitcast %"class.WTF::AtomicString"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %446) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i64 14) #12
  %447 = bitcast %"class.WTF::AtomicString"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %447) #12
  %448 = load i8, i8* %318, align 4, !range !2
  %449 = icmp eq i8 %448, 0
  br i1 %449, label %450, label %451, !prof !3

450:                                              ; preds = %445
  call void @llvm.trap() #12
  unreachable

451:                                              ; preds = %445
  %452 = load i8, i8* %442, align 4, !range !2
  %453 = icmp eq i8 %452, 0
  br i1 %453, label %454, label %455

454:                                              ; preds = %451
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

455:                                              ; preds = %451
  %456 = getelementptr inbounds %"class.absl::optional.422", %"class.absl::optional.422"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %457 = load i32, i32* %456, align 4
  %458 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %458) #12
  %459 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 12
  %460 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 2
  %461 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 3
  %462 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 13
  %463 = icmp slt i32 %457, 0
  %464 = sub i32 0, %457
  %465 = select i1 %463, i32 %464, i32 %457
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %458, i8 -86, i64 32, i1 false) #12
  store i8* %459, i8** %460, align 8
  %466 = urem i32 %465, 10
  %467 = udiv i32 %465, 10
  %468 = trunc i32 %466 to i8
  %469 = or i8 %468, 48
  store i8 %469, i8* %459, align 4
  %470 = icmp ugt i32 %465, 9
  br i1 %470, label %471, label %493

471:                                              ; preds = %455
  %472 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 11
  store i8* %472, i8** %460, align 8
  %473 = urem i32 %467, 10
  %474 = trunc i32 %473 to i8
  %475 = or i8 %474, 48
  store i8 %475, i8* %472, align 1
  %476 = icmp ugt i32 %465, 99
  br i1 %476, label %477, label %493

477:                                              ; preds = %471
  %478 = udiv i32 %465, 100
  %479 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 10
  store i8* %479, i8** %460, align 8
  %480 = urem i32 %478, 10
  %481 = trunc i32 %480 to i8
  %482 = or i8 %481, 48
  store i8 %482, i8* %479, align 2
  %483 = icmp ugt i32 %465, 999
  br i1 %483, label %484, label %493

484:                                              ; preds = %477, %484
  %485 = phi i32 [ %487, %484 ], [ %478, %477 ]
  %486 = load i8*, i8** %460, align 8
  %487 = udiv i32 %485, 10
  %488 = getelementptr inbounds i8, i8* %486, i64 -1
  store i8* %488, i8** %460, align 8
  %489 = urem i32 %487, 10
  %490 = trunc i32 %489 to i8
  %491 = or i8 %490, 48
  store i8 %491, i8* %488, align 1
  %492 = icmp ugt i32 %485, 99
  br i1 %492, label %484, label %493

493:                                              ; preds = %484, %477, %471, %455
  br i1 %463, label %494, label %497

494:                                              ; preds = %493
  %495 = load i8*, i8** %460, align 8
  %496 = getelementptr inbounds i8, i8* %495, i64 -1
  store i8* %496, i8** %460, align 8
  store i8 45, i8* %496, align 1
  br label %497

497:                                              ; preds = %493, %494
  %498 = bitcast i8** %460 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = ptrtoint i8* %462 to i64
  %501 = sub i64 %500, %499
  %502 = trunc i64 %501 to i32
  store i32 %502, i32* %461, align 8
  %503 = inttoptr i64 %499 to i8*
  %504 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %503, i32 %502) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %458) #12
  %505 = icmp eq %"class.WTF::StringImpl"* %504, null
  br i1 %505, label %529, label %506

506:                                              ; preds = %497
  %507 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %508 = load atomic i32, i32* %507 acquire, align 4
  %509 = and i32 %508, 4
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %527, label %511

511:                                              ; preds = %506
  %512 = load atomic i32, i32* %507 monotonic, align 4
  %513 = and i32 %512, 2
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %515, label %529

515:                                              ; preds = %511
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 0, i32 0
  %517 = load i32, i32* %516, align 4
  %518 = zext i32 %517 to i33
  %519 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %518, i33 1) #12
  %520 = extractvalue { i33, i1 } %519, 1
  %521 = extractvalue { i33, i1 } %519, 0
  %522 = icmp slt i33 %521, 0
  %523 = or i1 %520, %522
  br i1 %523, label %524, label %525, !prof !3

524:                                              ; preds = %515
  call void @llvm.trap() #12
  unreachable

525:                                              ; preds = %515
  %526 = trunc i33 %521 to i32
  store i32 %526, i32* %516, align 4
  br label %529

527:                                              ; preds = %506
  %528 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %504) #12
  br label %529

529:                                              ; preds = %497, %511, %525, %527
  %530 = phi %"class.WTF::StringImpl"* [ %528, %527 ], [ %504, %511 ], [ %504, %525 ], [ null, %497 ]
  %531 = ptrtoint %"class.WTF::StringImpl"* %530 to i64
  %532 = bitcast %"class.WTF::AtomicString"* %23 to i64*
  store i64 %531, i64* %532, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %22, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %23) #12
  %533 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %534 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %533, align 8
  %535 = icmp eq %"class.WTF::StringImpl"* %534, null
  br i1 %535, label %549, label %536

536:                                              ; preds = %529
  %537 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %538 = load atomic i32, i32* %537 monotonic, align 4
  %539 = and i32 %538, 2
  %540 = icmp eq i32 %539, 0
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 0
  %542 = load i32, i32* %541, align 4
  br i1 %540, label %543, label %545

543:                                              ; preds = %536
  %544 = add i32 %542, -1
  store i32 %544, i32* %541, align 4
  br label %545

545:                                              ; preds = %543, %536
  %546 = phi i32 [ %544, %543 ], [ %542, %536 ]
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %548, label %549

548:                                              ; preds = %545
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %534) #12
  br label %549

549:                                              ; preds = %529, %545, %548
  br i1 %505, label %563, label %550

550:                                              ; preds = %549
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %552 = load atomic i32, i32* %551 monotonic, align 4
  %553 = and i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 0, i32 0
  %556 = load i32, i32* %555, align 4
  br i1 %554, label %557, label %559

557:                                              ; preds = %550
  %558 = add i32 %556, -1
  store i32 %558, i32* %555, align 4
  br label %559

559:                                              ; preds = %557, %550
  %560 = phi i32 [ %558, %557 ], [ %556, %550 ]
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %562, label %563

562:                                              ; preds = %559
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %504) #12
  br label %563

563:                                              ; preds = %549, %559, %562
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %447) #12
  %564 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %565 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %564, align 8
  %566 = icmp eq %"class.WTF::StringImpl"* %565, null
  br i1 %566, label %580, label %567

567:                                              ; preds = %563
  %568 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %569 = load atomic i32, i32* %568 monotonic, align 4
  %570 = and i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 0
  %573 = load i32, i32* %572, align 4
  br i1 %571, label %574, label %576

574:                                              ; preds = %567
  %575 = add i32 %573, -1
  store i32 %575, i32* %572, align 4
  br label %576

576:                                              ; preds = %574, %567
  %577 = phi i32 [ %575, %574 ], [ %573, %567 ]
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %579, label %580

579:                                              ; preds = %576
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %565) #12
  br label %580

580:                                              ; preds = %563, %576, %579
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %446) #12
  br label %581

581:                                              ; preds = %441, %433, %427, %430, %580
  %582 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features29kAllowClientHintsToThirdPartyE) #12
  br i1 %582, label %590, label %583

583:                                              ; preds = %581
  %584 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1
  %585 = icmp eq i8 %584, 0
  br i1 %585, label %589, label %586

586:                                              ; preds = %583
  %587 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 2), align 4
  %588 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %587, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %588, label %590, label %690

589:                                              ; preds = %583
  br i1 %3, label %590, label %1186

590:                                              ; preds = %589, %586, %581
  %591 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 2) #12
  br i1 %591, label %596, label %592

592:                                              ; preds = %590
  %593 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 2
  %594 = load i8, i8* %593, align 1, !range !2
  %595 = icmp eq i8 %594, 0
  br i1 %595, label %690, label %596

596:                                              ; preds = %592, %590
  %597 = load i8, i8* %318, align 4, !range !2
  %598 = icmp eq i8 %597, 0
  br i1 %598, label %599, label %600, !prof !3

599:                                              ; preds = %596
  call void @llvm.trap() #12
  unreachable

600:                                              ; preds = %596
  %601 = getelementptr inbounds %"class.absl::optional.422", %"class.absl::optional.422"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %602 = load i8, i8* %601, align 4, !range !2
  %603 = icmp eq i8 %602, 0
  br i1 %603, label %690, label %604

604:                                              ; preds = %600
  %605 = getelementptr inbounds %"class.absl::optional.422", %"class.absl::optional.422"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %606 = load float, float* %605, align 4
  %607 = getelementptr inbounds %"class.absl::optional.422", %"class.absl::optional.422"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %608 = load float, float* %607, align 4
  %609 = fmul float %606, %608
  %610 = bitcast %"class.WTF::AtomicString"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %610) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5) #12
  %611 = bitcast %"class.WTF::AtomicString"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %611) #12
  %612 = call float @llvm.ceil.f32(float %609) #12
  %613 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %612) #12
  %614 = icmp eq %"class.WTF::StringImpl"* %613, null
  br i1 %614, label %638, label %615

615:                                              ; preds = %604
  %616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load atomic i32, i32* %616 acquire, align 4
  %618 = and i32 %617, 4
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %636, label %620

620:                                              ; preds = %615
  %621 = load atomic i32, i32* %616 monotonic, align 4
  %622 = and i32 %621, 2
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %624, label %638

624:                                              ; preds = %620
  %625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 0
  %626 = load i32, i32* %625, align 4
  %627 = zext i32 %626 to i33
  %628 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %627, i33 1) #12
  %629 = extractvalue { i33, i1 } %628, 1
  %630 = extractvalue { i33, i1 } %628, 0
  %631 = icmp slt i33 %630, 0
  %632 = or i1 %629, %631
  br i1 %632, label %633, label %634, !prof !3

633:                                              ; preds = %624
  call void @llvm.trap() #12
  unreachable

634:                                              ; preds = %624
  %635 = trunc i33 %630 to i32
  store i32 %635, i32* %625, align 4
  br label %638

636:                                              ; preds = %615
  %637 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %613) #12
  br label %638

638:                                              ; preds = %604, %620, %634, %636
  %639 = phi %"class.WTF::StringImpl"* [ %637, %636 ], [ %613, %620 ], [ %613, %634 ], [ null, %604 ]
  %640 = ptrtoint %"class.WTF::StringImpl"* %639 to i64
  %641 = bitcast %"class.WTF::AtomicString"* %25 to i64*
  store i64 %640, i64* %641, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %24, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %25) #12
  %642 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 0, i32 0, i32 0, i32 0
  %643 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %642, align 8
  %644 = icmp eq %"class.WTF::StringImpl"* %643, null
  br i1 %644, label %658, label %645

645:                                              ; preds = %638
  %646 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %643, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %647 = load atomic i32, i32* %646 monotonic, align 4
  %648 = and i32 %647, 2
  %649 = icmp eq i32 %648, 0
  %650 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %643, i64 0, i32 0
  %651 = load i32, i32* %650, align 4
  br i1 %649, label %652, label %654

652:                                              ; preds = %645
  %653 = add i32 %651, -1
  store i32 %653, i32* %650, align 4
  br label %654

654:                                              ; preds = %652, %645
  %655 = phi i32 [ %653, %652 ], [ %651, %645 ]
  %656 = icmp eq i32 %655, 0
  br i1 %656, label %657, label %658

657:                                              ; preds = %654
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %643) #12
  br label %658

658:                                              ; preds = %638, %654, %657
  br i1 %614, label %672, label %659

659:                                              ; preds = %658
  %660 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load atomic i32, i32* %660 monotonic, align 4
  %662 = and i32 %661, 2
  %663 = icmp eq i32 %662, 0
  %664 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 0
  %665 = load i32, i32* %664, align 4
  br i1 %663, label %666, label %668

666:                                              ; preds = %659
  %667 = add i32 %665, -1
  store i32 %667, i32* %664, align 4
  br label %668

668:                                              ; preds = %666, %659
  %669 = phi i32 [ %667, %666 ], [ %665, %659 ]
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %671, label %672

671:                                              ; preds = %668
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %613) #12
  br label %672

672:                                              ; preds = %658, %668, %671
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %611) #12
  %673 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0, i32 0, i32 0
  %674 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %673, align 8
  %675 = icmp eq %"class.WTF::StringImpl"* %674, null
  br i1 %675, label %689, label %676

676:                                              ; preds = %672
  %677 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %678 = load atomic i32, i32* %677 monotonic, align 4
  %679 = and i32 %678, 2
  %680 = icmp eq i32 %679, 0
  %681 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 0
  %682 = load i32, i32* %681, align 4
  br i1 %680, label %683, label %685

683:                                              ; preds = %676
  %684 = add i32 %682, -1
  store i32 %684, i32* %681, align 4
  br label %685

685:                                              ; preds = %683, %676
  %686 = phi i32 [ %684, %683 ], [ %682, %676 ]
  %687 = icmp eq i32 %686, 0
  br i1 %687, label %688, label %689

688:                                              ; preds = %685
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %674) #12
  br label %689

689:                                              ; preds = %672, %685, %688
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %610) #12
  br label %690

690:                                              ; preds = %592, %317, %586, %600, %689
  %691 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1
  %692 = icmp eq i8 %691, 0
  br i1 %692, label %696, label %693

693:                                              ; preds = %690
  %694 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 4), align 4
  %695 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %694, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %695, label %697, label %877

696:                                              ; preds = %690
  br i1 %3, label %697, label %1186

697:                                              ; preds = %696, %693
  %698 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 4) #12
  br i1 %698, label %703, label %699

699:                                              ; preds = %697
  %700 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 4
  %701 = load i8, i8* %700, align 1, !range !2
  %702 = icmp eq i8 %701, 0
  br i1 %702, label %877, label %703

703:                                              ; preds = %699, %697
  %704 = getelementptr inbounds %"class.absl::optional.55", %"class.absl::optional.55"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %704) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %704, i8 -86, i64 16, i1 false)
  %705 = call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #12
  %706 = call { i8, i64 } @_ZNK5blink20NetworkStateNotifier21GetWebHoldbackHttpRttEv(%"class.blink::NetworkStateNotifier"* %705) #12
  %707 = extractvalue { i8, i64 } %706, 0
  store i8 %707, i8* %704, align 8
  %708 = getelementptr inbounds %"class.absl::optional.55", %"class.absl::optional.55"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %709 = extractvalue { i8, i64 } %706, 1
  store i64 %709, i64* %708, align 8
  %710 = icmp eq i8 %707, 0
  br i1 %710, label %711, label %724

711:                                              ; preds = %703
  %712 = call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #12
  %713 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %712, i64 0, i32 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %713) #12
  %714 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %712, i64 0, i32 2
  %715 = load i8, i8* %714, align 8, !range !2
  %716 = icmp eq i8 %715, 0
  %717 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %712, i64 0, i32 4
  %718 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %712, i64 0, i32 1
  %719 = select i1 %716, %"struct.blink::NetworkStateNotifier::NetworkState"* %718, %"struct.blink::NetworkStateNotifier::NetworkState"* %717
  %720 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %719, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %721 = load i8, i8* %720, align 8
  %722 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %719, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %723 = load i64, i64* %722, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %713) #12
  store i8 %721, i8* %704, align 8
  store i64 %723, i64* %708, align 8
  br label %724

724:                                              ; preds = %703, %711
  %725 = call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #12
  %726 = bitcast %"class.WTF::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %726) #12
  %727 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %53) #12
  %728 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* %727) #12
  %729 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %728, %"class.WTF::StringImpl"** %729, align 8
  %730 = call i32 @_ZNK5blink20NetworkStateNotifier8RoundRttERKN3WTF6StringERKN4absl8optionalIN4base9TimeDeltaEEE(%"class.blink::NetworkStateNotifier"* %725, %"class.WTF::String"* nonnull dereferenceable(8) %27, %"class.absl::optional.55"* nonnull dereferenceable(16) %26) #12
  %731 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %729, align 8
  %732 = icmp eq %"class.WTF::StringImpl"* %731, null
  br i1 %732, label %746, label %733

733:                                              ; preds = %724
  %734 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %731, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %735 = load atomic i32, i32* %734 monotonic, align 4
  %736 = and i32 %735, 2
  %737 = icmp eq i32 %736, 0
  %738 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %731, i64 0, i32 0
  %739 = load i32, i32* %738, align 4
  br i1 %737, label %740, label %742

740:                                              ; preds = %733
  %741 = add i32 %739, -1
  store i32 %741, i32* %738, align 4
  br label %742

742:                                              ; preds = %740, %733
  %743 = phi i32 [ %741, %740 ], [ %739, %733 ]
  %744 = icmp eq i32 %743, 0
  br i1 %744, label %745, label %746

745:                                              ; preds = %742
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %731) #12
  br label %746

746:                                              ; preds = %724, %742, %745
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %726) #12
  %747 = bitcast %"class.WTF::AtomicString"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %747) #12
  %748 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN5blink25kClientHintsHeaderMappingE, i64 0, i64 4), align 8
  %749 = icmp eq i8* %748, null
  br i1 %749, label %752, label %750

750:                                              ; preds = %746
  %751 = call i64 @strlen(i8* nonnull %748) #13
  br label %752

752:                                              ; preds = %746, %750
  %753 = phi i64 [ %751, %750 ], [ 0, %746 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %28, i8* %748, i64 %753) #12
  %754 = bitcast %"class.WTF::AtomicString"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %754) #12
  %755 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.605", %"class.WTF::IntegerToStringConverter.605"* %11, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %755) #12
  %756 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.605", %"class.WTF::IntegerToStringConverter.605"* %11, i64 0, i32 0, i64 11
  %757 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.605", %"class.WTF::IntegerToStringConverter.605"* %11, i64 0, i32 2
  %758 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.605", %"class.WTF::IntegerToStringConverter.605"* %11, i64 0, i32 3
  %759 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.605", %"class.WTF::IntegerToStringConverter.605"* %11, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %755, i8 -86, i64 32, i1 false) #12
  store i8* %756, i8** %757, align 8
  %760 = urem i32 %730, 10
  %761 = udiv i32 %730, 10
  %762 = trunc i32 %760 to i8
  %763 = or i8 %762, 48
  store i8 %763, i8* %756, align 1
  %764 = icmp ugt i32 %730, 9
  br i1 %764, label %765, label %780

765:                                              ; preds = %752
  %766 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.605", %"class.WTF::IntegerToStringConverter.605"* %11, i64 0, i32 0, i64 10
  store i8* %766, i8** %757, align 8
  %767 = urem i32 %761, 10
  %768 = trunc i32 %767 to i8
  %769 = or i8 %768, 48
  store i8 %769, i8* %766, align 2
  %770 = icmp ugt i32 %730, 99
  br i1 %770, label %771, label %778

771:                                              ; preds = %765
  %772 = udiv i32 %730, 100
  %773 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.605", %"class.WTF::IntegerToStringConverter.605"* %11, i64 0, i32 0, i64 9
  store i8* %773, i8** %757, align 8
  %774 = urem i32 %772, 10
  %775 = trunc i32 %774 to i8
  %776 = or i8 %775, 48
  store i8 %776, i8* %773, align 1
  %777 = icmp ugt i32 %730, 999
  br i1 %777, label %782, label %791

778:                                              ; preds = %765
  %779 = ptrtoint i8* %766 to i64
  br label %794

780:                                              ; preds = %752
  %781 = ptrtoint i8* %756 to i64
  br label %794

782:                                              ; preds = %771, %782
  %783 = phi i32 [ %785, %782 ], [ %772, %771 ]
  %784 = load i8*, i8** %757, align 8
  %785 = udiv i32 %783, 10
  %786 = getelementptr inbounds i8, i8* %784, i64 -1
  store i8* %786, i8** %757, align 8
  %787 = urem i32 %785, 10
  %788 = trunc i32 %787 to i8
  %789 = or i8 %788, 48
  store i8 %789, i8* %786, align 1
  %790 = icmp ugt i32 %783, 99
  br i1 %790, label %782, label %791

791:                                              ; preds = %782, %771
  %792 = bitcast i8** %757 to i64*
  %793 = load i64, i64* %792, align 8
  br label %794

794:                                              ; preds = %791, %778, %780
  %795 = phi i64 [ %781, %780 ], [ %793, %791 ], [ %779, %778 ]
  %796 = ptrtoint i8* %759 to i64
  %797 = sub i64 %796, %795
  %798 = trunc i64 %797 to i32
  store i32 %798, i32* %758, align 8
  %799 = inttoptr i64 %795 to i8*
  %800 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %799, i32 %798) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %755) #12
  %801 = icmp eq %"class.WTF::StringImpl"* %800, null
  br i1 %801, label %825, label %802

802:                                              ; preds = %794
  %803 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %800, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %804 = load atomic i32, i32* %803 acquire, align 4
  %805 = and i32 %804, 4
  %806 = icmp eq i32 %805, 0
  br i1 %806, label %823, label %807

807:                                              ; preds = %802
  %808 = load atomic i32, i32* %803 monotonic, align 4
  %809 = and i32 %808, 2
  %810 = icmp eq i32 %809, 0
  br i1 %810, label %811, label %825

811:                                              ; preds = %807
  %812 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %800, i64 0, i32 0
  %813 = load i32, i32* %812, align 4
  %814 = zext i32 %813 to i33
  %815 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %814, i33 1) #12
  %816 = extractvalue { i33, i1 } %815, 1
  %817 = extractvalue { i33, i1 } %815, 0
  %818 = icmp slt i33 %817, 0
  %819 = or i1 %816, %818
  br i1 %819, label %820, label %821, !prof !3

820:                                              ; preds = %811
  call void @llvm.trap() #12
  unreachable

821:                                              ; preds = %811
  %822 = trunc i33 %817 to i32
  store i32 %822, i32* %812, align 4
  br label %825

823:                                              ; preds = %802
  %824 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %800) #12
  br label %825

825:                                              ; preds = %794, %807, %821, %823
  %826 = phi %"class.WTF::StringImpl"* [ %824, %823 ], [ %800, %807 ], [ %800, %821 ], [ null, %794 ]
  %827 = ptrtoint %"class.WTF::StringImpl"* %826 to i64
  %828 = bitcast %"class.WTF::AtomicString"* %29 to i64*
  store i64 %827, i64* %828, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %28, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %29) #12
  %829 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %29, i64 0, i32 0, i32 0, i32 0
  %830 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %829, align 8
  %831 = icmp eq %"class.WTF::StringImpl"* %830, null
  br i1 %831, label %845, label %832

832:                                              ; preds = %825
  %833 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %834 = load atomic i32, i32* %833 monotonic, align 4
  %835 = and i32 %834, 2
  %836 = icmp eq i32 %835, 0
  %837 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 0
  %838 = load i32, i32* %837, align 4
  br i1 %836, label %839, label %841

839:                                              ; preds = %832
  %840 = add i32 %838, -1
  store i32 %840, i32* %837, align 4
  br label %841

841:                                              ; preds = %839, %832
  %842 = phi i32 [ %840, %839 ], [ %838, %832 ]
  %843 = icmp eq i32 %842, 0
  br i1 %843, label %844, label %845

844:                                              ; preds = %841
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %830) #12
  br label %845

845:                                              ; preds = %825, %841, %844
  br i1 %801, label %859, label %846

846:                                              ; preds = %845
  %847 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %800, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %848 = load atomic i32, i32* %847 monotonic, align 4
  %849 = and i32 %848, 2
  %850 = icmp eq i32 %849, 0
  %851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %800, i64 0, i32 0
  %852 = load i32, i32* %851, align 4
  br i1 %850, label %853, label %855

853:                                              ; preds = %846
  %854 = add i32 %852, -1
  store i32 %854, i32* %851, align 4
  br label %855

855:                                              ; preds = %853, %846
  %856 = phi i32 [ %854, %853 ], [ %852, %846 ]
  %857 = icmp eq i32 %856, 0
  br i1 %857, label %858, label %859

858:                                              ; preds = %855
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %800) #12
  br label %859

859:                                              ; preds = %845, %855, %858
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %754) #12
  %860 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %28, i64 0, i32 0, i32 0, i32 0
  %861 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %860, align 8
  %862 = icmp eq %"class.WTF::StringImpl"* %861, null
  br i1 %862, label %876, label %863

863:                                              ; preds = %859
  %864 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %861, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %865 = load atomic i32, i32* %864 monotonic, align 4
  %866 = and i32 %865, 2
  %867 = icmp eq i32 %866, 0
  %868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %861, i64 0, i32 0
  %869 = load i32, i32* %868, align 4
  br i1 %867, label %870, label %872

870:                                              ; preds = %863
  %871 = add i32 %869, -1
  store i32 %871, i32* %868, align 4
  br label %872

872:                                              ; preds = %870, %863
  %873 = phi i32 [ %871, %870 ], [ %869, %863 ]
  %874 = icmp eq i32 %873, 0
  br i1 %874, label %875, label %876

875:                                              ; preds = %872
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %861) #12
  br label %876

876:                                              ; preds = %859, %872, %875
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %747) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %704) #12
  br label %877

877:                                              ; preds = %699, %693, %876
  %878 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1
  %879 = icmp eq i8 %878, 0
  br i1 %879, label %883, label %880

880:                                              ; preds = %877
  %881 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 5), align 4
  %882 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %881, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %882, label %884, label %1021

883:                                              ; preds = %877
  br i1 %3, label %884, label %1186

884:                                              ; preds = %883, %880
  %885 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 5) #12
  br i1 %885, label %890, label %886

886:                                              ; preds = %884
  %887 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 5
  %888 = load i8, i8* %887, align 1, !range !2
  %889 = icmp eq i8 %888, 0
  br i1 %889, label %1021, label %890

890:                                              ; preds = %886, %884
  %891 = getelementptr inbounds %"class.absl::optional.449", %"class.absl::optional.449"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %891) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %891, i8* align 8 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.453 } } } }, { { { { i8, [7 x i8], %union.anon.453 } } } }* @__const._ZN5blink16BaseFetchContext25AddClientHintsIfNecessaryERKNS_22ClientHintsPreferencesERKN3url6OriginEbN4absl8optionalINS_17UserAgentMetadataEEEPKNS_17PermissionsPolicyERKNS9_INS_19ClientHintImageInfoEEERKNS9_IN3WTF12AtomicStringEEESN_RNS_15ResourceRequestE.throughput_mbps, i64 0, i32 0, i32 0, i32 0, i32 0), i64 16, i1 false)
  %892 = call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #12
  %893 = call { i8, double } @_ZNK5blink20NetworkStateNotifier36GetWebHoldbackDownlinkThroughputMbpsEv(%"class.blink::NetworkStateNotifier"* %892) #12
  %894 = extractvalue { i8, double } %893, 0
  store i8 %894, i8* %891, align 8
  %895 = getelementptr inbounds %"class.absl::optional.449", %"class.absl::optional.449"* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %896 = extractvalue { i8, double } %893, 1
  store double %896, double* %895, align 8
  %897 = icmp eq i8 %894, 0
  br i1 %897, label %898, label %913

898:                                              ; preds = %890
  %899 = call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #12
  %900 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %899, i64 0, i32 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %900) #12
  %901 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %899, i64 0, i32 2
  %902 = load i8, i8* %901, align 8, !range !2
  %903 = icmp eq i8 %902, 0
  %904 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %899, i64 0, i32 4
  %905 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %899, i64 0, i32 1
  %906 = select i1 %903, %"struct.blink::NetworkStateNotifier::NetworkState"* %905, %"struct.blink::NetworkStateNotifier::NetworkState"* %904
  %907 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %906, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %908 = load i8, i8* %907, align 8
  %909 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %906, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %910 = bitcast double* %909 to i64*
  %911 = load i64, i64* %910, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %900) #12
  store i8 %908, i8* %891, align 8
  %912 = bitcast double* %895 to i64*
  store i64 %911, i64* %912, align 8
  br label %913

913:                                              ; preds = %890, %898
  %914 = call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #12
  %915 = bitcast %"class.WTF::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %915) #12
  %916 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %53) #12
  %917 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* %916) #12
  %918 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %917, %"class.WTF::StringImpl"** %918, align 8
  %919 = call double @_ZNK5blink20NetworkStateNotifier9RoundMbpsERKN3WTF6StringERKN4absl8optionalIdEE(%"class.blink::NetworkStateNotifier"* %914, %"class.WTF::String"* nonnull dereferenceable(8) %31, %"class.absl::optional.449"* nonnull dereferenceable(16) %30) #12
  %920 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %918, align 8
  %921 = icmp eq %"class.WTF::StringImpl"* %920, null
  br i1 %921, label %935, label %922

922:                                              ; preds = %913
  %923 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %920, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %924 = load atomic i32, i32* %923 monotonic, align 4
  %925 = and i32 %924, 2
  %926 = icmp eq i32 %925, 0
  %927 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %920, i64 0, i32 0
  %928 = load i32, i32* %927, align 4
  br i1 %926, label %929, label %931

929:                                              ; preds = %922
  %930 = add i32 %928, -1
  store i32 %930, i32* %927, align 4
  br label %931

931:                                              ; preds = %929, %922
  %932 = phi i32 [ %930, %929 ], [ %928, %922 ]
  %933 = icmp eq i32 %932, 0
  br i1 %933, label %934, label %935

934:                                              ; preds = %931
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %920) #12
  br label %935

935:                                              ; preds = %913, %931, %934
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %915) #12
  %936 = bitcast %"class.WTF::AtomicString"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %936) #12
  %937 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN5blink25kClientHintsHeaderMappingE, i64 0, i64 5), align 8
  %938 = icmp eq i8* %937, null
  br i1 %938, label %941, label %939

939:                                              ; preds = %935
  %940 = call i64 @strlen(i8* nonnull %937) #13
  br label %941

941:                                              ; preds = %935, %939
  %942 = phi i64 [ %940, %939 ], [ 0, %935 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %32, i8* %937, i64 %942) #12
  %943 = bitcast %"class.WTF::AtomicString"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %943) #12
  %944 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %919, i32 6) #12
  %945 = icmp eq %"class.WTF::StringImpl"* %944, null
  br i1 %945, label %969, label %946

946:                                              ; preds = %941
  %947 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %944, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %948 = load atomic i32, i32* %947 acquire, align 4
  %949 = and i32 %948, 4
  %950 = icmp eq i32 %949, 0
  br i1 %950, label %967, label %951

951:                                              ; preds = %946
  %952 = load atomic i32, i32* %947 monotonic, align 4
  %953 = and i32 %952, 2
  %954 = icmp eq i32 %953, 0
  br i1 %954, label %955, label %969

955:                                              ; preds = %951
  %956 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %944, i64 0, i32 0
  %957 = load i32, i32* %956, align 4
  %958 = zext i32 %957 to i33
  %959 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %958, i33 1) #12
  %960 = extractvalue { i33, i1 } %959, 1
  %961 = extractvalue { i33, i1 } %959, 0
  %962 = icmp slt i33 %961, 0
  %963 = or i1 %960, %962
  br i1 %963, label %964, label %965, !prof !3

964:                                              ; preds = %955
  call void @llvm.trap() #12
  unreachable

965:                                              ; preds = %955
  %966 = trunc i33 %961 to i32
  store i32 %966, i32* %956, align 4
  br label %969

967:                                              ; preds = %946
  %968 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %944) #12
  br label %969

969:                                              ; preds = %941, %951, %965, %967
  %970 = phi %"class.WTF::StringImpl"* [ %968, %967 ], [ %944, %951 ], [ %944, %965 ], [ null, %941 ]
  %971 = ptrtoint %"class.WTF::StringImpl"* %970 to i64
  %972 = bitcast %"class.WTF::AtomicString"* %33 to i64*
  store i64 %971, i64* %972, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %32, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %33) #12
  %973 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %33, i64 0, i32 0, i32 0, i32 0
  %974 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %973, align 8
  %975 = icmp eq %"class.WTF::StringImpl"* %974, null
  br i1 %975, label %989, label %976

976:                                              ; preds = %969
  %977 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %974, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %978 = load atomic i32, i32* %977 monotonic, align 4
  %979 = and i32 %978, 2
  %980 = icmp eq i32 %979, 0
  %981 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %974, i64 0, i32 0
  %982 = load i32, i32* %981, align 4
  br i1 %980, label %983, label %985

983:                                              ; preds = %976
  %984 = add i32 %982, -1
  store i32 %984, i32* %981, align 4
  br label %985

985:                                              ; preds = %983, %976
  %986 = phi i32 [ %984, %983 ], [ %982, %976 ]
  %987 = icmp eq i32 %986, 0
  br i1 %987, label %988, label %989

988:                                              ; preds = %985
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %974) #12
  br label %989

989:                                              ; preds = %969, %985, %988
  br i1 %945, label %1003, label %990

990:                                              ; preds = %989
  %991 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %944, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %992 = load atomic i32, i32* %991 monotonic, align 4
  %993 = and i32 %992, 2
  %994 = icmp eq i32 %993, 0
  %995 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %944, i64 0, i32 0
  %996 = load i32, i32* %995, align 4
  br i1 %994, label %997, label %999

997:                                              ; preds = %990
  %998 = add i32 %996, -1
  store i32 %998, i32* %995, align 4
  br label %999

999:                                              ; preds = %997, %990
  %1000 = phi i32 [ %998, %997 ], [ %996, %990 ]
  %1001 = icmp eq i32 %1000, 0
  br i1 %1001, label %1002, label %1003

1002:                                             ; preds = %999
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %944) #12
  br label %1003

1003:                                             ; preds = %989, %999, %1002
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %943) #12
  %1004 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %32, i64 0, i32 0, i32 0, i32 0
  %1005 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1004, align 8
  %1006 = icmp eq %"class.WTF::StringImpl"* %1005, null
  br i1 %1006, label %1020, label %1007

1007:                                             ; preds = %1003
  %1008 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1005, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1009 = load atomic i32, i32* %1008 monotonic, align 4
  %1010 = and i32 %1009, 2
  %1011 = icmp eq i32 %1010, 0
  %1012 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1005, i64 0, i32 0
  %1013 = load i32, i32* %1012, align 4
  br i1 %1011, label %1014, label %1016

1014:                                             ; preds = %1007
  %1015 = add i32 %1013, -1
  store i32 %1015, i32* %1012, align 4
  br label %1016

1016:                                             ; preds = %1014, %1007
  %1017 = phi i32 [ %1015, %1014 ], [ %1013, %1007 ]
  %1018 = icmp eq i32 %1017, 0
  br i1 %1018, label %1019, label %1020

1019:                                             ; preds = %1016
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1005) #12
  br label %1020

1020:                                             ; preds = %1003, %1016, %1019
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %936) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %891) #12
  br label %1021

1021:                                             ; preds = %886, %880, %1020
  %1022 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1
  %1023 = icmp eq i8 %1022, 0
  br i1 %1023, label %1027, label %1024

1024:                                             ; preds = %1021
  %1025 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 6), align 4
  %1026 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %1025, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %1026, label %1028, label %1139

1027:                                             ; preds = %1021
  br i1 %3, label %1028, label %1186

1028:                                             ; preds = %1027, %1024
  %1029 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 6) #12
  br i1 %1029, label %1034, label %1030

1030:                                             ; preds = %1028
  %1031 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 6
  %1032 = load i8, i8* %1031, align 1, !range !2
  %1033 = icmp eq i8 %1032, 0
  br i1 %1033, label %1139, label %1034

1034:                                             ; preds = %1030, %1028
  %1035 = call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #12
  %1036 = call i64 @_ZNK5blink20NetworkStateNotifier27GetWebHoldbackEffectiveTypeEv(%"class.blink::NetworkStateNotifier"* %1035) #12
  %1037 = trunc i64 %1036 to i8
  %1038 = lshr i64 %1036, 32
  %1039 = trunc i64 %1038 to i32
  %1040 = icmp eq i8 %1037, 0
  br i1 %1040, label %1041, label %1052

1041:                                             ; preds = %1034
  %1042 = call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #12
  %1043 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %1042, i64 0, i32 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %1043) #12
  %1044 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %1042, i64 0, i32 2
  %1045 = load i8, i8* %1044, align 8, !range !2
  %1046 = icmp eq i8 %1045, 0
  %1047 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %1042, i64 0, i32 4
  %1048 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %1042, i64 0, i32 1
  %1049 = select i1 %1046, %"struct.blink::NetworkStateNotifier::NetworkState"* %1048, %"struct.blink::NetworkStateNotifier::NetworkState"* %1047
  %1050 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %1049, i64 0, i32 6
  %1051 = load i32, i32* %1050, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %1043) #12
  br label %1052

1052:                                             ; preds = %1034, %1041
  %1053 = phi i32 [ %1039, %1034 ], [ %1051, %1041 ]
  %1054 = bitcast %"class.WTF::AtomicString"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1054) #12
  %1055 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN5blink25kClientHintsHeaderMappingE, i64 0, i64 6), align 8
  %1056 = icmp eq i8* %1055, null
  br i1 %1056, label %1059, label %1057

1057:                                             ; preds = %1052
  %1058 = call i64 @strlen(i8* nonnull %1055) #13
  br label %1059

1059:                                             ; preds = %1057, %1052
  %1060 = phi i64 [ %1058, %1057 ], [ 0, %1052 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %34, i8* %1055, i64 %1060) #12
  %1061 = bitcast %"class.WTF::AtomicString"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1061) #12
  %1062 = call %"class.WTF::StringImpl"* @_ZN5blink20NetworkStateNotifier31EffectiveConnectionTypeToStringENS_26WebEffectiveConnectionTypeE(i32 %1053) #12
  %1063 = icmp eq %"class.WTF::StringImpl"* %1062, null
  br i1 %1063, label %1087, label %1064

1064:                                             ; preds = %1059
  %1065 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1062, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1066 = load atomic i32, i32* %1065 acquire, align 4
  %1067 = and i32 %1066, 4
  %1068 = icmp eq i32 %1067, 0
  br i1 %1068, label %1085, label %1069

1069:                                             ; preds = %1064
  %1070 = load atomic i32, i32* %1065 monotonic, align 4
  %1071 = and i32 %1070, 2
  %1072 = icmp eq i32 %1071, 0
  br i1 %1072, label %1073, label %1087

1073:                                             ; preds = %1069
  %1074 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1062, i64 0, i32 0
  %1075 = load i32, i32* %1074, align 4
  %1076 = zext i32 %1075 to i33
  %1077 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1076, i33 1) #12
  %1078 = extractvalue { i33, i1 } %1077, 1
  %1079 = extractvalue { i33, i1 } %1077, 0
  %1080 = icmp slt i33 %1079, 0
  %1081 = or i1 %1078, %1080
  br i1 %1081, label %1082, label %1083, !prof !3

1082:                                             ; preds = %1073
  call void @llvm.trap() #12
  unreachable

1083:                                             ; preds = %1073
  %1084 = trunc i33 %1079 to i32
  store i32 %1084, i32* %1074, align 4
  br label %1087

1085:                                             ; preds = %1064
  %1086 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %1062) #12
  br label %1087

1087:                                             ; preds = %1059, %1069, %1083, %1085
  %1088 = phi %"class.WTF::StringImpl"* [ %1086, %1085 ], [ %1062, %1069 ], [ %1062, %1083 ], [ null, %1059 ]
  %1089 = ptrtoint %"class.WTF::StringImpl"* %1088 to i64
  %1090 = bitcast %"class.WTF::AtomicString"* %35 to i64*
  store i64 %1089, i64* %1090, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %34, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %35) #12
  %1091 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %35, i64 0, i32 0, i32 0, i32 0
  %1092 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1091, align 8
  %1093 = icmp eq %"class.WTF::StringImpl"* %1092, null
  br i1 %1093, label %1107, label %1094

1094:                                             ; preds = %1087
  %1095 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1092, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1096 = load atomic i32, i32* %1095 monotonic, align 4
  %1097 = and i32 %1096, 2
  %1098 = icmp eq i32 %1097, 0
  %1099 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1092, i64 0, i32 0
  %1100 = load i32, i32* %1099, align 4
  br i1 %1098, label %1101, label %1103

1101:                                             ; preds = %1094
  %1102 = add i32 %1100, -1
  store i32 %1102, i32* %1099, align 4
  br label %1103

1103:                                             ; preds = %1101, %1094
  %1104 = phi i32 [ %1102, %1101 ], [ %1100, %1094 ]
  %1105 = icmp eq i32 %1104, 0
  br i1 %1105, label %1106, label %1107

1106:                                             ; preds = %1103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1092) #12
  br label %1107

1107:                                             ; preds = %1087, %1103, %1106
  br i1 %1063, label %1121, label %1108

1108:                                             ; preds = %1107
  %1109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1062, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1110 = load atomic i32, i32* %1109 monotonic, align 4
  %1111 = and i32 %1110, 2
  %1112 = icmp eq i32 %1111, 0
  %1113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1062, i64 0, i32 0
  %1114 = load i32, i32* %1113, align 4
  br i1 %1112, label %1115, label %1117

1115:                                             ; preds = %1108
  %1116 = add i32 %1114, -1
  store i32 %1116, i32* %1113, align 4
  br label %1117

1117:                                             ; preds = %1115, %1108
  %1118 = phi i32 [ %1116, %1115 ], [ %1114, %1108 ]
  %1119 = icmp eq i32 %1118, 0
  br i1 %1119, label %1120, label %1121

1120:                                             ; preds = %1117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1062) #12
  br label %1121

1121:                                             ; preds = %1107, %1117, %1120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1061) #12
  %1122 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %1123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1122, align 8
  %1124 = icmp eq %"class.WTF::StringImpl"* %1123, null
  br i1 %1124, label %1138, label %1125

1125:                                             ; preds = %1121
  %1126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1127 = load atomic i32, i32* %1126 monotonic, align 4
  %1128 = and i32 %1127, 2
  %1129 = icmp eq i32 %1128, 0
  %1130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1123, i64 0, i32 0
  %1131 = load i32, i32* %1130, align 4
  br i1 %1129, label %1132, label %1134

1132:                                             ; preds = %1125
  %1133 = add i32 %1131, -1
  store i32 %1133, i32* %1130, align 4
  br label %1134

1134:                                             ; preds = %1132, %1125
  %1135 = phi i32 [ %1133, %1132 ], [ %1131, %1125 ]
  %1136 = icmp eq i32 %1135, 0
  br i1 %1136, label %1137, label %1138

1137:                                             ; preds = %1134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1123) #12
  br label %1138

1138:                                             ; preds = %1121, %1134, %1137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1054) #12
  br label %1139

1139:                                             ; preds = %1030, %1024, %1138
  %1140 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1
  %1141 = icmp eq i8 %1140, 0
  br i1 %1141, label %1145, label %1142

1142:                                             ; preds = %1139
  %1143 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 7), align 4
  %1144 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %1143, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %1144, label %1146, label %1186

1145:                                             ; preds = %1139
  br i1 %3, label %1146, label %1186

1146:                                             ; preds = %1145, %1142
  %1147 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 7) #12
  br i1 %1147, label %1152, label %1148

1148:                                             ; preds = %1146
  %1149 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 7
  %1150 = load i8, i8* %1149, align 1, !range !2
  %1151 = icmp eq i8 %1150, 0
  br i1 %1151, label %1186, label %1152

1152:                                             ; preds = %1148, %1146
  %1153 = getelementptr inbounds %"class.absl::optional.432", %"class.absl::optional.432"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %1154 = load i8, i8* %1153, align 8, !range !2
  %1155 = icmp eq i8 %1154, 0
  br i1 %1155, label %1186, label %1156

1156:                                             ; preds = %1152
  %1157 = bitcast %"class.WTF::AtomicString"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1157) #12
  %1158 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN5blink25kClientHintsHeaderMappingE, i64 0, i64 7), align 8
  %1159 = icmp eq i8* %1158, null
  br i1 %1159, label %1162, label %1160

1160:                                             ; preds = %1156
  %1161 = call i64 @strlen(i8* nonnull %1158) #13
  br label %1162

1162:                                             ; preds = %1156, %1160
  %1163 = phi i64 [ %1161, %1160 ], [ 0, %1156 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %36, i8* %1158, i64 %1163) #12
  %1164 = load i8, i8* %1153, align 8, !range !2
  %1165 = icmp eq i8 %1164, 0
  br i1 %1165, label %1166, label %1167

1166:                                             ; preds = %1162
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

1167:                                             ; preds = %1162
  %1168 = getelementptr inbounds %"class.absl::optional.432", %"class.absl::optional.432"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %36, %"class.WTF::AtomicString"* dereferenceable(8) %1168) #12
  %1169 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %36, i64 0, i32 0, i32 0, i32 0
  %1170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1169, align 8
  %1171 = icmp eq %"class.WTF::StringImpl"* %1170, null
  br i1 %1171, label %1185, label %1172

1172:                                             ; preds = %1167
  %1173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1174 = load atomic i32, i32* %1173 monotonic, align 4
  %1175 = and i32 %1174, 2
  %1176 = icmp eq i32 %1175, 0
  %1177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1170, i64 0, i32 0
  %1178 = load i32, i32* %1177, align 4
  br i1 %1176, label %1179, label %1181

1179:                                             ; preds = %1172
  %1180 = add i32 %1178, -1
  store i32 %1180, i32* %1177, align 4
  br label %1181

1181:                                             ; preds = %1179, %1172
  %1182 = phi i32 [ %1180, %1179 ], [ %1178, %1172 ]
  %1183 = icmp eq i32 %1182, 0
  br i1 %1183, label %1184, label %1185

1184:                                             ; preds = %1181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1170) #12
  br label %1185

1185:                                             ; preds = %1167, %1181, %1184
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1157) #12
  br label %1186

1186:                                             ; preds = %1152, %1148, %696, %589, %1027, %883, %1142, %1145, %1185
  %1187 = call zeroext i1 @_ZN5blink22ClientHintsPreferences26UserAgentClientHintEnabledEv() #12
  br i1 %1187, label %1188, label %1607

1188:                                             ; preds = %1186
  %1189 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %1190 = load i8, i8* %1189, align 8, !range !2
  %1191 = icmp eq i8 %1190, 0
  br i1 %1191, label %1607, label %1192

1192:                                             ; preds = %1188
  %1193 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1
  %1194 = icmp eq i8 %1193, 0
  br i1 %1194, label %1198, label %1195

1195:                                             ; preds = %1192
  %1196 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 9), align 4
  %1197 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %1196, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %1197, label %1199, label %1275

1198:                                             ; preds = %1192
  br i1 %3, label %1199, label %1654

1199:                                             ; preds = %1198, %1195
  %1200 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 9) #12
  br i1 %1200, label %1205, label %1201

1201:                                             ; preds = %1199
  %1202 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 9
  %1203 = load i8, i8* %1202, align 1, !range !2
  %1204 = icmp eq i8 %1203, 0
  br i1 %1204, label %1275, label %1205

1205:                                             ; preds = %1201, %1199
  %1206 = bitcast %"class.WTF::AtomicString"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1206) #12
  %1207 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN5blink25kClientHintsHeaderMappingE, i64 0, i64 9), align 8
  %1208 = icmp eq i8* %1207, null
  br i1 %1208, label %1211, label %1209

1209:                                             ; preds = %1205
  %1210 = call i64 @strlen(i8* nonnull %1207) #13
  br label %1211

1211:                                             ; preds = %1205, %1209
  %1212 = phi i64 [ %1210, %1209 ], [ 0, %1205 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %37, i8* %1207, i64 %1212) #12
  %1213 = bitcast %"class.WTF::AtomicString"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1213) #12
  %1214 = load i8, i8* %1189, align 8, !range !2
  %1215 = icmp eq i8 %1214, 0
  br i1 %1215, label %1216, label %1217, !prof !3

1216:                                             ; preds = %1211
  call void @llvm.trap() #12
  unreachable

1217:                                             ; preds = %1211
  %1218 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %1219 = bitcast %"class.std::__1::basic_string"* %1218 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1220 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1219, i64 0, i32 1, i32 0
  %1221 = load i8, i8* %1220, align 1
  %1222 = icmp slt i8 %1221, 0
  br i1 %1222, label %1226, label %1223

1223:                                             ; preds = %1217
  %1224 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %1225 = bitcast %"class.std::__1::basic_string"* %1218 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1224, i8* align 8 %1225, i64 24, i1 false) #12
  br label %1231

1226:                                             ; preds = %1217
  %1227 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1218, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1228 = load i8*, i8** %1227, align 8
  %1229 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1230 = load i64, i64* %1229, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %39, i8* %1228, i64 %1230) #12
  br label %1231

1231:                                             ; preds = %1223, %1226
  %1232 = call fastcc %"class.WTF::StringImpl"* @_ZN12_GLOBAL__N_121SerializeHeaderStringENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %39)
  %1233 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %38, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1232, %"class.WTF::StringImpl"** %1233, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %37, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %38) #12
  %1234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1233, align 8
  %1235 = icmp eq %"class.WTF::StringImpl"* %1234, null
  br i1 %1235, label %1249, label %1236

1236:                                             ; preds = %1231
  %1237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1238 = load atomic i32, i32* %1237 monotonic, align 4
  %1239 = and i32 %1238, 2
  %1240 = icmp eq i32 %1239, 0
  %1241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1234, i64 0, i32 0
  %1242 = load i32, i32* %1241, align 4
  br i1 %1240, label %1243, label %1245

1243:                                             ; preds = %1236
  %1244 = add i32 %1242, -1
  store i32 %1244, i32* %1241, align 4
  br label %1245

1245:                                             ; preds = %1243, %1236
  %1246 = phi i32 [ %1244, %1243 ], [ %1242, %1236 ]
  %1247 = icmp eq i32 %1246, 0
  br i1 %1247, label %1248, label %1249

1248:                                             ; preds = %1245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1234) #12
  br label %1249

1249:                                             ; preds = %1231, %1245, %1248
  %1250 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1251 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1250, i64 0, i32 1, i32 0
  %1252 = load i8, i8* %1251, align 1
  %1253 = icmp slt i8 %1252, 0
  br i1 %1253, label %1254, label %1257

1254:                                             ; preds = %1249
  %1255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1256 = load i8*, i8** %1255, align 8
  call void @_ZdlPv(i8* %1256) #14
  br label %1257

1257:                                             ; preds = %1249, %1254
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1213) #12
  %1258 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %37, i64 0, i32 0, i32 0, i32 0
  %1259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1258, align 8
  %1260 = icmp eq %"class.WTF::StringImpl"* %1259, null
  br i1 %1260, label %1274, label %1261

1261:                                             ; preds = %1257
  %1262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1263 = load atomic i32, i32* %1262 monotonic, align 4
  %1264 = and i32 %1263, 2
  %1265 = icmp eq i32 %1264, 0
  %1266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1259, i64 0, i32 0
  %1267 = load i32, i32* %1266, align 4
  br i1 %1265, label %1268, label %1270

1268:                                             ; preds = %1261
  %1269 = add i32 %1267, -1
  store i32 %1269, i32* %1266, align 4
  br label %1270

1270:                                             ; preds = %1268, %1261
  %1271 = phi i32 [ %1269, %1268 ], [ %1267, %1261 ]
  %1272 = icmp eq i32 %1271, 0
  br i1 %1272, label %1273, label %1274

1273:                                             ; preds = %1270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1259) #12
  br label %1274

1274:                                             ; preds = %1257, %1270, %1273
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1206) #12
  br label %1275

1275:                                             ; preds = %1201, %1195, %1274
  %1276 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1
  %1277 = icmp eq i8 %1276, 0
  br i1 %1277, label %1281, label %1278

1278:                                             ; preds = %1275
  %1279 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 10), align 4
  %1280 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %1279, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %1280, label %1282, label %1358

1281:                                             ; preds = %1275
  br i1 %3, label %1282, label %1654

1282:                                             ; preds = %1281, %1278
  %1283 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 10) #12
  br i1 %1283, label %1288, label %1284

1284:                                             ; preds = %1282
  %1285 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 10
  %1286 = load i8, i8* %1285, align 1, !range !2
  %1287 = icmp eq i8 %1286, 0
  br i1 %1287, label %1358, label %1288

1288:                                             ; preds = %1284, %1282
  %1289 = bitcast %"class.WTF::AtomicString"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1289) #12
  %1290 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN5blink25kClientHintsHeaderMappingE, i64 0, i64 10), align 8
  %1291 = icmp eq i8* %1290, null
  br i1 %1291, label %1294, label %1292

1292:                                             ; preds = %1288
  %1293 = call i64 @strlen(i8* nonnull %1290) #13
  br label %1294

1294:                                             ; preds = %1288, %1292
  %1295 = phi i64 [ %1293, %1292 ], [ 0, %1288 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %40, i8* %1290, i64 %1295) #12
  %1296 = bitcast %"class.WTF::AtomicString"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1296) #12
  %1297 = load i8, i8* %1189, align 8, !range !2
  %1298 = icmp eq i8 %1297, 0
  br i1 %1298, label %1299, label %1300, !prof !3

1299:                                             ; preds = %1294
  call void @llvm.trap() #12
  unreachable

1300:                                             ; preds = %1294
  %1301 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %1302 = bitcast %"class.std::__1::basic_string"* %1301 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1303 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1302, i64 0, i32 1, i32 0
  %1304 = load i8, i8* %1303, align 1
  %1305 = icmp slt i8 %1304, 0
  br i1 %1305, label %1309, label %1306

1306:                                             ; preds = %1300
  %1307 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %1308 = bitcast %"class.std::__1::basic_string"* %1301 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1307, i8* align 8 %1308, i64 24, i1 false) #12
  br label %1314

1309:                                             ; preds = %1300
  %1310 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1311 = load i8*, i8** %1310, align 8
  %1312 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1313 = load i64, i64* %1312, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %42, i8* %1311, i64 %1313) #12
  br label %1314

1314:                                             ; preds = %1306, %1309
  %1315 = call fastcc %"class.WTF::StringImpl"* @_ZN12_GLOBAL__N_121SerializeHeaderStringENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %42)
  %1316 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %41, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1315, %"class.WTF::StringImpl"** %1316, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %40, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %41) #12
  %1317 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1316, align 8
  %1318 = icmp eq %"class.WTF::StringImpl"* %1317, null
  br i1 %1318, label %1332, label %1319

1319:                                             ; preds = %1314
  %1320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1317, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1321 = load atomic i32, i32* %1320 monotonic, align 4
  %1322 = and i32 %1321, 2
  %1323 = icmp eq i32 %1322, 0
  %1324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1317, i64 0, i32 0
  %1325 = load i32, i32* %1324, align 4
  br i1 %1323, label %1326, label %1328

1326:                                             ; preds = %1319
  %1327 = add i32 %1325, -1
  store i32 %1327, i32* %1324, align 4
  br label %1328

1328:                                             ; preds = %1326, %1319
  %1329 = phi i32 [ %1327, %1326 ], [ %1325, %1319 ]
  %1330 = icmp eq i32 %1329, 0
  br i1 %1330, label %1331, label %1332

1331:                                             ; preds = %1328
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1317) #12
  br label %1332

1332:                                             ; preds = %1314, %1328, %1331
  %1333 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1334 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1333, i64 0, i32 1, i32 0
  %1335 = load i8, i8* %1334, align 1
  %1336 = icmp slt i8 %1335, 0
  br i1 %1336, label %1337, label %1340

1337:                                             ; preds = %1332
  %1338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1339 = load i8*, i8** %1338, align 8
  call void @_ZdlPv(i8* %1339) #14
  br label %1340

1340:                                             ; preds = %1332, %1337
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1296) #12
  %1341 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %40, i64 0, i32 0, i32 0, i32 0
  %1342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1341, align 8
  %1343 = icmp eq %"class.WTF::StringImpl"* %1342, null
  br i1 %1343, label %1357, label %1344

1344:                                             ; preds = %1340
  %1345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1346 = load atomic i32, i32* %1345 monotonic, align 4
  %1347 = and i32 %1346, 2
  %1348 = icmp eq i32 %1347, 0
  %1349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1342, i64 0, i32 0
  %1350 = load i32, i32* %1349, align 4
  br i1 %1348, label %1351, label %1353

1351:                                             ; preds = %1344
  %1352 = add i32 %1350, -1
  store i32 %1352, i32* %1349, align 4
  br label %1353

1353:                                             ; preds = %1351, %1344
  %1354 = phi i32 [ %1352, %1351 ], [ %1350, %1344 ]
  %1355 = icmp eq i32 %1354, 0
  br i1 %1355, label %1356, label %1357

1356:                                             ; preds = %1353
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1342) #12
  br label %1357

1357:                                             ; preds = %1340, %1353, %1356
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1289) #12
  br label %1358

1358:                                             ; preds = %1284, %1278, %1357
  %1359 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1
  %1360 = icmp eq i8 %1359, 0
  br i1 %1360, label %1364, label %1361

1361:                                             ; preds = %1358
  %1362 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 14), align 4
  %1363 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %1362, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %1363, label %1365, label %1441

1364:                                             ; preds = %1358
  br i1 %3, label %1365, label %1654

1365:                                             ; preds = %1364, %1361
  %1366 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 14) #12
  br i1 %1366, label %1371, label %1367

1367:                                             ; preds = %1365
  %1368 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 14
  %1369 = load i8, i8* %1368, align 1, !range !2
  %1370 = icmp eq i8 %1369, 0
  br i1 %1370, label %1441, label %1371

1371:                                             ; preds = %1367, %1365
  %1372 = bitcast %"class.WTF::AtomicString"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1372) #12
  %1373 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN5blink25kClientHintsHeaderMappingE, i64 0, i64 14), align 8
  %1374 = icmp eq i8* %1373, null
  br i1 %1374, label %1377, label %1375

1375:                                             ; preds = %1371
  %1376 = call i64 @strlen(i8* nonnull %1373) #13
  br label %1377

1377:                                             ; preds = %1371, %1375
  %1378 = phi i64 [ %1376, %1375 ], [ 0, %1371 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %43, i8* %1373, i64 %1378) #12
  %1379 = bitcast %"class.WTF::AtomicString"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1379) #12
  %1380 = load i8, i8* %1189, align 8, !range !2
  %1381 = icmp eq i8 %1380, 0
  br i1 %1381, label %1382, label %1383, !prof !3

1382:                                             ; preds = %1377
  call void @llvm.trap() #12
  unreachable

1383:                                             ; preds = %1377
  %1384 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %1385 = bitcast %"class.std::__1::basic_string"* %1384 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1386 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1385, i64 0, i32 1, i32 0
  %1387 = load i8, i8* %1386, align 1
  %1388 = icmp slt i8 %1387, 0
  br i1 %1388, label %1392, label %1389

1389:                                             ; preds = %1383
  %1390 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %1391 = bitcast %"class.std::__1::basic_string"* %1384 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1390, i8* align 8 %1391, i64 24, i1 false) #12
  br label %1397

1392:                                             ; preds = %1383
  %1393 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1384, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1394 = load i8*, i8** %1393, align 8
  %1395 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1396 = load i64, i64* %1395, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %45, i8* %1394, i64 %1396) #12
  br label %1397

1397:                                             ; preds = %1389, %1392
  %1398 = call fastcc %"class.WTF::StringImpl"* @_ZN12_GLOBAL__N_121SerializeHeaderStringENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %45)
  %1399 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1398, %"class.WTF::StringImpl"** %1399, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %43, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %44) #12
  %1400 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1399, align 8
  %1401 = icmp eq %"class.WTF::StringImpl"* %1400, null
  br i1 %1401, label %1415, label %1402

1402:                                             ; preds = %1397
  %1403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1400, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1404 = load atomic i32, i32* %1403 monotonic, align 4
  %1405 = and i32 %1404, 2
  %1406 = icmp eq i32 %1405, 0
  %1407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1400, i64 0, i32 0
  %1408 = load i32, i32* %1407, align 4
  br i1 %1406, label %1409, label %1411

1409:                                             ; preds = %1402
  %1410 = add i32 %1408, -1
  store i32 %1410, i32* %1407, align 4
  br label %1411

1411:                                             ; preds = %1409, %1402
  %1412 = phi i32 [ %1410, %1409 ], [ %1408, %1402 ]
  %1413 = icmp eq i32 %1412, 0
  br i1 %1413, label %1414, label %1415

1414:                                             ; preds = %1411
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1400) #12
  br label %1415

1415:                                             ; preds = %1397, %1411, %1414
  %1416 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1417 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1416, i64 0, i32 1, i32 0
  %1418 = load i8, i8* %1417, align 1
  %1419 = icmp slt i8 %1418, 0
  br i1 %1419, label %1420, label %1423

1420:                                             ; preds = %1415
  %1421 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1422 = load i8*, i8** %1421, align 8
  call void @_ZdlPv(i8* %1422) #14
  br label %1423

1423:                                             ; preds = %1415, %1420
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1379) #12
  %1424 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %43, i64 0, i32 0, i32 0, i32 0
  %1425 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1424, align 8
  %1426 = icmp eq %"class.WTF::StringImpl"* %1425, null
  br i1 %1426, label %1440, label %1427

1427:                                             ; preds = %1423
  %1428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1425, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1429 = load atomic i32, i32* %1428 monotonic, align 4
  %1430 = and i32 %1429, 2
  %1431 = icmp eq i32 %1430, 0
  %1432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1425, i64 0, i32 0
  %1433 = load i32, i32* %1432, align 4
  br i1 %1431, label %1434, label %1436

1434:                                             ; preds = %1427
  %1435 = add i32 %1433, -1
  store i32 %1435, i32* %1432, align 4
  br label %1436

1436:                                             ; preds = %1434, %1427
  %1437 = phi i32 [ %1435, %1434 ], [ %1433, %1427 ]
  %1438 = icmp eq i32 %1437, 0
  br i1 %1438, label %1439, label %1440

1439:                                             ; preds = %1436
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1425) #12
  br label %1440

1440:                                             ; preds = %1423, %1436, %1439
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1372) #12
  br label %1441

1441:                                             ; preds = %1367, %1361, %1440
  %1442 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1
  %1443 = icmp eq i8 %1442, 0
  br i1 %1443, label %1447, label %1444

1444:                                             ; preds = %1441
  %1445 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 11), align 4
  %1446 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %1445, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %1446, label %1448, label %1524

1447:                                             ; preds = %1441
  br i1 %3, label %1448, label %1654

1448:                                             ; preds = %1447, %1444
  %1449 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 11) #12
  br i1 %1449, label %1454, label %1450

1450:                                             ; preds = %1448
  %1451 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 11
  %1452 = load i8, i8* %1451, align 1, !range !2
  %1453 = icmp eq i8 %1452, 0
  br i1 %1453, label %1524, label %1454

1454:                                             ; preds = %1450, %1448
  %1455 = bitcast %"class.WTF::AtomicString"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1455) #12
  %1456 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN5blink25kClientHintsHeaderMappingE, i64 0, i64 11), align 8
  %1457 = icmp eq i8* %1456, null
  br i1 %1457, label %1460, label %1458

1458:                                             ; preds = %1454
  %1459 = call i64 @strlen(i8* nonnull %1456) #13
  br label %1460

1460:                                             ; preds = %1454, %1458
  %1461 = phi i64 [ %1459, %1458 ], [ 0, %1454 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %46, i8* %1456, i64 %1461) #12
  %1462 = bitcast %"class.WTF::AtomicString"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1462) #12
  %1463 = load i8, i8* %1189, align 8, !range !2
  %1464 = icmp eq i8 %1463, 0
  br i1 %1464, label %1465, label %1466, !prof !3

1465:                                             ; preds = %1460
  call void @llvm.trap() #12
  unreachable

1466:                                             ; preds = %1460
  %1467 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %1468 = bitcast %"class.std::__1::basic_string"* %1467 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1469 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1468, i64 0, i32 1, i32 0
  %1470 = load i8, i8* %1469, align 1
  %1471 = icmp slt i8 %1470, 0
  br i1 %1471, label %1475, label %1472

1472:                                             ; preds = %1466
  %1473 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %1474 = bitcast %"class.std::__1::basic_string"* %1467 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1473, i8* align 8 %1474, i64 24, i1 false) #12
  br label %1480

1475:                                             ; preds = %1466
  %1476 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1467, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1477 = load i8*, i8** %1476, align 8
  %1478 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1479 = load i64, i64* %1478, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %48, i8* %1477, i64 %1479) #12
  br label %1480

1480:                                             ; preds = %1472, %1475
  %1481 = call fastcc %"class.WTF::StringImpl"* @_ZN12_GLOBAL__N_121SerializeHeaderStringENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %48)
  %1482 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1481, %"class.WTF::StringImpl"** %1482, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %46, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %47) #12
  %1483 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1482, align 8
  %1484 = icmp eq %"class.WTF::StringImpl"* %1483, null
  br i1 %1484, label %1498, label %1485

1485:                                             ; preds = %1480
  %1486 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1483, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1487 = load atomic i32, i32* %1486 monotonic, align 4
  %1488 = and i32 %1487, 2
  %1489 = icmp eq i32 %1488, 0
  %1490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1483, i64 0, i32 0
  %1491 = load i32, i32* %1490, align 4
  br i1 %1489, label %1492, label %1494

1492:                                             ; preds = %1485
  %1493 = add i32 %1491, -1
  store i32 %1493, i32* %1490, align 4
  br label %1494

1494:                                             ; preds = %1492, %1485
  %1495 = phi i32 [ %1493, %1492 ], [ %1491, %1485 ]
  %1496 = icmp eq i32 %1495, 0
  br i1 %1496, label %1497, label %1498

1497:                                             ; preds = %1494
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1483) #12
  br label %1498

1498:                                             ; preds = %1480, %1494, %1497
  %1499 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1500 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1499, i64 0, i32 1, i32 0
  %1501 = load i8, i8* %1500, align 1
  %1502 = icmp slt i8 %1501, 0
  br i1 %1502, label %1503, label %1506

1503:                                             ; preds = %1498
  %1504 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1505 = load i8*, i8** %1504, align 8
  call void @_ZdlPv(i8* %1505) #14
  br label %1506

1506:                                             ; preds = %1498, %1503
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1462) #12
  %1507 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %46, i64 0, i32 0, i32 0, i32 0
  %1508 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1507, align 8
  %1509 = icmp eq %"class.WTF::StringImpl"* %1508, null
  br i1 %1509, label %1523, label %1510

1510:                                             ; preds = %1506
  %1511 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1508, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1512 = load atomic i32, i32* %1511 monotonic, align 4
  %1513 = and i32 %1512, 2
  %1514 = icmp eq i32 %1513, 0
  %1515 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1508, i64 0, i32 0
  %1516 = load i32, i32* %1515, align 4
  br i1 %1514, label %1517, label %1519

1517:                                             ; preds = %1510
  %1518 = add i32 %1516, -1
  store i32 %1518, i32* %1515, align 4
  br label %1519

1519:                                             ; preds = %1517, %1510
  %1520 = phi i32 [ %1518, %1517 ], [ %1516, %1510 ]
  %1521 = icmp eq i32 %1520, 0
  br i1 %1521, label %1522, label %1523

1522:                                             ; preds = %1519
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1508) #12
  br label %1523

1523:                                             ; preds = %1506, %1519, %1522
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1455) #12
  br label %1524

1524:                                             ; preds = %1450, %1444, %1523
  %1525 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1
  %1526 = icmp eq i8 %1525, 0
  br i1 %1526, label %1530, label %1527

1527:                                             ; preds = %1524
  %1528 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 13), align 4
  %1529 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %1528, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %1529, label %1531, label %1607

1530:                                             ; preds = %1524
  br i1 %3, label %1531, label %1654

1531:                                             ; preds = %1530, %1527
  %1532 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 13) #12
  br i1 %1532, label %1537, label %1533

1533:                                             ; preds = %1531
  %1534 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 13
  %1535 = load i8, i8* %1534, align 1, !range !2
  %1536 = icmp eq i8 %1535, 0
  br i1 %1536, label %1607, label %1537

1537:                                             ; preds = %1533, %1531
  %1538 = bitcast %"class.WTF::AtomicString"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1538) #12
  %1539 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN5blink25kClientHintsHeaderMappingE, i64 0, i64 13), align 8
  %1540 = icmp eq i8* %1539, null
  br i1 %1540, label %1543, label %1541

1541:                                             ; preds = %1537
  %1542 = call i64 @strlen(i8* nonnull %1539) #13
  br label %1543

1543:                                             ; preds = %1537, %1541
  %1544 = phi i64 [ %1542, %1541 ], [ 0, %1537 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %49, i8* %1539, i64 %1544) #12
  %1545 = bitcast %"class.WTF::AtomicString"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1545) #12
  %1546 = load i8, i8* %1189, align 8, !range !2
  %1547 = icmp eq i8 %1546, 0
  br i1 %1547, label %1548, label %1549, !prof !3

1548:                                             ; preds = %1543
  call void @llvm.trap() #12
  unreachable

1549:                                             ; preds = %1543
  %1550 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %1551 = bitcast %"class.std::__1::basic_string"* %1550 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1552 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1551, i64 0, i32 1, i32 0
  %1553 = load i8, i8* %1552, align 1
  %1554 = icmp slt i8 %1553, 0
  br i1 %1554, label %1558, label %1555

1555:                                             ; preds = %1549
  %1556 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %1557 = bitcast %"class.std::__1::basic_string"* %1550 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1556, i8* align 8 %1557, i64 24, i1 false) #12
  br label %1563

1558:                                             ; preds = %1549
  %1559 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1550, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1560 = load i8*, i8** %1559, align 8
  %1561 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1562 = load i64, i64* %1561, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %51, i8* %1560, i64 %1562) #12
  br label %1563

1563:                                             ; preds = %1555, %1558
  %1564 = call fastcc %"class.WTF::StringImpl"* @_ZN12_GLOBAL__N_121SerializeHeaderStringENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %51)
  %1565 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %50, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1564, %"class.WTF::StringImpl"** %1565, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %49, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %50) #12
  %1566 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1565, align 8
  %1567 = icmp eq %"class.WTF::StringImpl"* %1566, null
  br i1 %1567, label %1581, label %1568

1568:                                             ; preds = %1563
  %1569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1566, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1570 = load atomic i32, i32* %1569 monotonic, align 4
  %1571 = and i32 %1570, 2
  %1572 = icmp eq i32 %1571, 0
  %1573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1566, i64 0, i32 0
  %1574 = load i32, i32* %1573, align 4
  br i1 %1572, label %1575, label %1577

1575:                                             ; preds = %1568
  %1576 = add i32 %1574, -1
  store i32 %1576, i32* %1573, align 4
  br label %1577

1577:                                             ; preds = %1575, %1568
  %1578 = phi i32 [ %1576, %1575 ], [ %1574, %1568 ]
  %1579 = icmp eq i32 %1578, 0
  br i1 %1579, label %1580, label %1581

1580:                                             ; preds = %1577
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1566) #12
  br label %1581

1581:                                             ; preds = %1563, %1577, %1580
  %1582 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1583 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1582, i64 0, i32 1, i32 0
  %1584 = load i8, i8* %1583, align 1
  %1585 = icmp slt i8 %1584, 0
  br i1 %1585, label %1586, label %1589

1586:                                             ; preds = %1581
  %1587 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1588 = load i8*, i8** %1587, align 8
  call void @_ZdlPv(i8* %1588) #14
  br label %1589

1589:                                             ; preds = %1581, %1586
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1545) #12
  %1590 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %49, i64 0, i32 0, i32 0, i32 0
  %1591 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1590, align 8
  %1592 = icmp eq %"class.WTF::StringImpl"* %1591, null
  br i1 %1592, label %1606, label %1593

1593:                                             ; preds = %1589
  %1594 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1591, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1595 = load atomic i32, i32* %1594 monotonic, align 4
  %1596 = and i32 %1595, 2
  %1597 = icmp eq i32 %1596, 0
  %1598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1591, i64 0, i32 0
  %1599 = load i32, i32* %1598, align 4
  br i1 %1597, label %1600, label %1602

1600:                                             ; preds = %1593
  %1601 = add i32 %1599, -1
  store i32 %1601, i32* %1598, align 4
  br label %1602

1602:                                             ; preds = %1600, %1593
  %1603 = phi i32 [ %1601, %1600 ], [ %1599, %1593 ]
  %1604 = icmp eq i32 %1603, 0
  br i1 %1604, label %1605, label %1606

1605:                                             ; preds = %1602
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1591) #12
  br label %1606

1606:                                             ; preds = %1589, %1602, %1605
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1538) #12
  br label %1607

1607:                                             ; preds = %1533, %1188, %1527, %1606, %1186
  %1608 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1
  %1609 = icmp eq i8 %1608, 0
  br i1 %1609, label %1613, label %1610

1610:                                             ; preds = %1607
  %1611 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 15), align 4
  %1612 = call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %5, i32 %1611, %"class.url::Origin"* dereferenceable(80) %2) #12
  br i1 %1612, label %1614, label %1654

1613:                                             ; preds = %1607
  br i1 %3, label %1614, label %1654

1614:                                             ; preds = %1613, %1610
  %1615 = call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 15) #12
  br i1 %1615, label %1620, label %1616

1616:                                             ; preds = %1614
  %1617 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %1, i64 0, i32 0, i32 0, i64 15
  %1618 = load i8, i8* %1617, align 1, !range !2
  %1619 = icmp eq i8 %1618, 0
  br i1 %1619, label %1654, label %1620

1620:                                             ; preds = %1616, %1614
  %1621 = getelementptr inbounds %"class.absl::optional.432", %"class.absl::optional.432"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %1622 = load i8, i8* %1621, align 8, !range !2
  %1623 = icmp eq i8 %1622, 0
  br i1 %1623, label %1654, label %1624

1624:                                             ; preds = %1620
  %1625 = bitcast %"class.WTF::AtomicString"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1625) #12
  %1626 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN5blink25kClientHintsHeaderMappingE, i64 0, i64 15), align 8
  %1627 = icmp eq i8* %1626, null
  br i1 %1627, label %1630, label %1628

1628:                                             ; preds = %1624
  %1629 = call i64 @strlen(i8* nonnull %1626) #13
  br label %1630

1630:                                             ; preds = %1624, %1628
  %1631 = phi i64 [ %1629, %1628 ], [ 0, %1624 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %52, i8* %1626, i64 %1631) #12
  %1632 = load i8, i8* %1621, align 8, !range !2
  %1633 = icmp eq i8 %1632, 0
  br i1 %1633, label %1634, label %1635

1634:                                             ; preds = %1630
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

1635:                                             ; preds = %1630
  %1636 = getelementptr inbounds %"class.absl::optional.432", %"class.absl::optional.432"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %53, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %52, %"class.WTF::AtomicString"* dereferenceable(8) %1636) #12
  %1637 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %52, i64 0, i32 0, i32 0, i32 0
  %1638 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1637, align 8
  %1639 = icmp eq %"class.WTF::StringImpl"* %1638, null
  br i1 %1639, label %1653, label %1640

1640:                                             ; preds = %1635
  %1641 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1638, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1642 = load atomic i32, i32* %1641 monotonic, align 4
  %1643 = and i32 %1642, 2
  %1644 = icmp eq i32 %1643, 0
  %1645 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1638, i64 0, i32 0
  %1646 = load i32, i32* %1645, align 4
  br i1 %1644, label %1647, label %1649

1647:                                             ; preds = %1640
  %1648 = add i32 %1646, -1
  store i32 %1648, i32* %1645, align 4
  br label %1649

1649:                                             ; preds = %1647, %1640
  %1650 = phi i32 [ %1648, %1647 ], [ %1646, %1640 ]
  %1651 = icmp eq i32 %1650, 0
  br i1 %1651, label %1652, label %1653

1652:                                             ; preds = %1649
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1638) #12
  br label %1653

1653:                                             ; preds = %1635, %1649, %1652
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1625) #12
  br label %1654

1654:                                             ; preds = %1620, %1616, %1281, %1198, %1447, %1364, %1530, %65, %149, %1610, %1613, %218, %213, %10, %1653
  ret void
}

declare zeroext i1 @_ZN5blink22ClientHintsPreferences20IsClientHintsAllowedERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink22ClientHintsPreferences26UserAgentClientHintEnabledEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16BaseFetchContext20ShouldSendClientHintENS0_15ClientHintsModeEPKNS_17PermissionsPolicyERKN3url6OriginEbN7network5mojom18WebClientHintsTypeERKNS_22ClientHintsPreferencesE(%"class.blink::BaseFetchContext"* nocapture readnone, i32, %"class.blink::PermissionsPolicy"*, %"class.url::Origin"* dereferenceable(80), i1 zeroext, i32, %"class.blink::ClientHintsPreferences"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features29kAllowClientHintsToThirdPartyE) #12
  br i1 %10, label %22, label %11

11:                                               ; preds = %9, %7
  %12 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase43is_feature_policy_for_client_hints_enabled_E, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  %15 = icmp eq %"class.blink::PermissionsPolicy"* %2, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %14
  %17 = sext i32 %5 to i64
  %18 = getelementptr inbounds [0 x i32], [0 x i32]* @_ZN5blink36kClientHintsPermissionsPolicyMappingE, i64 0, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"* nonnull %2, i32 %19, %"class.url::Origin"* dereferenceable(80) %3) #12
  br i1 %20, label %22, label %29

21:                                               ; preds = %11
  br i1 %4, label %22, label %29

22:                                               ; preds = %16, %9, %21
  %23 = tail call zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32 %5) #12
  br i1 %23, label %29, label %24

24:                                               ; preds = %22
  %25 = sext i32 %5 to i64
  %26 = getelementptr inbounds %"class.blink::ClientHintsPreferences", %"class.blink::ClientHintsPreferences"* %6, i64 0, i32 0, i32 0, i64 %25
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp ne i8 %27, 0
  br label %29

29:                                               ; preds = %16, %14, %22, %24, %21
  %30 = phi i1 [ false, %21 ], [ true, %22 ], [ %28, %24 ], [ false, %14 ], [ false, %16 ]
  ret i1 %30
}

declare void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink17UserAgentMetadata25SerializeBrandVersionListEv(%"class.std::__1::basic_string"* sret, %"struct.blink::UserAgentMetadata"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float) local_unnamed_addr #2

declare float @_ZN5blink24ApproximatedDeviceMemory27GetApproximatedDeviceMemoryEv() local_unnamed_addr #2

declare dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() local_unnamed_addr #2

declare { i8, i64 } @_ZNK5blink20NetworkStateNotifier21GetWebHoldbackHttpRttEv(%"class.blink::NetworkStateNotifier"*) local_unnamed_addr #2

declare i32 @_ZNK5blink20NetworkStateNotifier8RoundRttERKN3WTF6StringERKN4absl8optionalIN4base9TimeDeltaEEE(%"class.blink::NetworkStateNotifier"*, %"class.WTF::String"* dereferenceable(8), %"class.absl::optional.55"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare { i8, double } @_ZNK5blink20NetworkStateNotifier36GetWebHoldbackDownlinkThroughputMbpsEv(%"class.blink::NetworkStateNotifier"*) local_unnamed_addr #2

declare double @_ZNK5blink20NetworkStateNotifier9RoundMbpsERKN3WTF6StringERKN4absl8optionalIdEE(%"class.blink::NetworkStateNotifier"*, %"class.WTF::String"* dereferenceable(8), %"class.absl::optional.449"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double, i32) local_unnamed_addr #2

declare i64 @_ZNK5blink20NetworkStateNotifier27GetWebHoldbackEffectiveTypeEv(%"class.blink::NetworkStateNotifier"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink20NetworkStateNotifier31EffectiveConnectionTypeToStringENS_26WebEffectiveConnectionTypeE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN12_GLOBAL__N_121SerializeHeaderStringENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"*) unnamed_addr #0 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca [15 x i8], align 8
  %5 = alloca %"class.absl::optional.578", align 8
  %6 = alloca %"class.net::structured_headers::Item", align 8
  %7 = alloca [15 x i8], align 8
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #12
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  br label %20

18:                                               ; preds = %1
  %19 = zext i8 %13 to i64
  br label %20

20:                                               ; preds = %15, %18
  %21 = phi i64 [ %17, %15 ], [ %19, %18 ]
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %20
  %24 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  br label %84

26:                                               ; preds = %20
  %27 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %27)
  %28 = getelementptr inbounds %"class.absl::optional.578", %"class.absl::optional.578"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #12
  %29 = bitcast %"class.net::structured_headers::Item"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %29) #12
  call void @_ZN3net18structured_headers4ItemC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS1_8ItemTypeE(%"class.net::structured_headers::Item"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %0, i32 3) #12
  call void @_ZN3net18structured_headers13SerializeItemERKNS0_4ItemE(%"class.absl::optional.578"* nonnull sret %5, %"class.net::structured_headers::Item"* nonnull dereferenceable(56) %6) #12
  %30 = getelementptr inbounds [15 x i8], [15 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %30)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 15, i1 false)
  %31 = load i8, i8* %28, align 8, !range !2, !noalias !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.absl::optional.578", %"class.absl::optional.578"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %36 = getelementptr inbounds %"class.absl::optional.578", %"class.absl::optional.578"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.absl::optional.578", %"class.absl::optional.578"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast i64* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %39, i64 15, i1 false)
  %40 = getelementptr inbounds i8, i8* %28, i64 31
  %41 = load i8, i8* %40, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #12, !noalias !4
  br label %43

42:                                               ; preds = %26
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %30, i64 15, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 15, i1 false), !noalias !4
  br label %43

43:                                               ; preds = %33, %42
  %44 = phi i8* [ null, %42 ], [ %37, %33 ]
  %45 = phi i8 [ 0, %42 ], [ %41, %33 ]
  %46 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %51) #14
  %52 = load i8, i8* %28, align 8, !range !2
  br label %53

53:                                               ; preds = %43, %50
  %54 = phi i8 [ %31, %43 ], [ %52, %50 ]
  store i8* %44, i8** %9, align 8
  %55 = bitcast i64* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %27, i64 15, i1 false)
  %56 = getelementptr inbounds i8, i8* %8, i64 23
  store i8 %45, i8* %56, align 1
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %30)
  %57 = icmp eq i8 %54, 0
  br i1 %57, label %68, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.absl::optional.578", %"class.absl::optional.578"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #14
  br label %67

67:                                               ; preds = %64, %58
  store i8 0, i8* %28, align 8
  br label %68

68:                                               ; preds = %53, %67
  %69 = getelementptr inbounds %"class.net::structured_headers::Item", %"class.net::structured_headers::Item"* %6, i64 0, i32 3
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #14
  br label %77

77:                                               ; preds = %74, %68
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %27)
  %78 = load i8, i8* %47, align 1
  %79 = icmp slt i8 %78, 0
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  br i1 %79, label %81, label %84

81:                                               ; preds = %77
  %82 = load i8*, i8** %9, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %23, %77, %81
  %85 = phi i8* [ %80, %81 ], [ %80, %77 ], [ %25, %23 ]
  %86 = phi i8* [ %82, %81 ], [ %8, %77 ], [ %8, %23 ]
  %87 = call i64 @strlen(i8* nonnull %86) #13
  br label %88

88:                                               ; preds = %81, %84
  %89 = phi i8* [ %85, %84 ], [ %80, %81 ]
  %90 = phi i8* [ %86, %84 ], [ null, %81 ]
  %91 = phi i64 [ %87, %84 ], [ 0, %81 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* %90, i64 %91) #12
  %92 = load i8, i8* %89, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %88
  %95 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %88, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  ret %"class.WTF::StringImpl"* %98
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16BaseFetchContext24PrintAccessDeniedMessageERKNS_4KURLE(%"class.blink::BaseFetchContext"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringAppend.466", align 8
  %4 = alloca %"class.WTF::StringAppend.466", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.WTF::StringAppend.465", align 8
  %8 = alloca %"class.WTF::StringAppend.466", align 8
  %9 = alloca %"class.WTF::StringAppend.467", align 8
  %10 = alloca %"class.WTF::StringAppend.465", align 8
  %11 = alloca %"class.WTF::StringAppend.466", align 8
  %12 = alloca %"class.WTF::StringAppend.467", align 8
  %13 = tail call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* %1) #12
  br i1 %13, label %785, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %17 = bitcast %"class.blink::BaseFetchContext"* %0 to %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)***
  %18 = load %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)**, %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)** %18, i64 34
  %20 = load %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)** %19, align 8
  %21 = tail call dereferenceable(112) %"class.blink::KURL"* %20(%"class.blink::BaseFetchContext"* %0) #12
  %22 = tail call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* %21) #12
  br i1 %22, label %23, label %181

23:                                               ; preds = %14
  %24 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  %25 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %1) #12
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %102, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #12
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %34
  tail call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %42, %27
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = load atomic i32, i32* %28 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %59

49:                                               ; preds = %44
  %50 = zext i32 %45 to i33
  %51 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #12
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %49
  tail call void @llvm.trap() #12
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %32, align 4
  br label %59

59:                                               ; preds = %57, %44
  %60 = phi i32 [ %58, %57 ], [ %45, %44 ]
  %61 = load atomic i32, i32* %28 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = add i32 %60, -1
  store i32 %65, i32* %32, align 4
  br label %66

66:                                               ; preds = %64, %59
  %67 = phi i32 [ %65, %64 ], [ %60, %59 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #12
  br label %70

70:                                               ; preds = %66, %69
  %71 = load atomic i32, i32* %28 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %85

74:                                               ; preds = %70
  %75 = load i32, i32* %32, align 4
  %76 = zext i32 %75 to i33
  %77 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #12
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %74
  tail call void @llvm.trap() #12
  unreachable

83:                                               ; preds = %74
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %32, align 4
  br label %85

85:                                               ; preds = %70, %83
  %86 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.6 to i64), i64* %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %87, align 8
  %88 = load atomic i32, i32* %28 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %106

91:                                               ; preds = %85
  %92 = load i32, i32* %32, align 4
  %93 = zext i32 %92 to i33
  %94 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #12
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !3

99:                                               ; preds = %91
  tail call void @llvm.trap() #12
  unreachable

100:                                              ; preds = %91
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %32, align 4
  br label %106

102:                                              ; preds = %23
  %103 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.6 to i64), i64* %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8 46, i8* %105, align 8
  br label %118

106:                                              ; preds = %100, %85
  %107 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8 46, i8* %107, align 8
  %108 = load atomic i32, i32* %28 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = load i32, i32* %32, align 4
  br i1 %110, label %112, label %114

112:                                              ; preds = %106
  %113 = add i32 %111, -1
  store i32 %113, i32* %32, align 4
  br label %114

114:                                              ; preds = %112, %106
  %115 = phi i32 [ %113, %112 ], [ %111, %106 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #12
  br label %118

118:                                              ; preds = %102, %114, %117
  %119 = phi %"class.WTF::StringImpl"** [ %104, %102 ], [ %87, %114 ], [ %87, %117 ]
  %120 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEEcEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %6)
  %121 = ptrtoint %"class.WTF::StringImpl"* %120 to i64
  %122 = bitcast %"class.WTF::String"* %5 to i64*
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %121, i64* %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #12
  br label %138

138:                                              ; preds = %137, %134, %118
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #12
  br label %154

154:                                              ; preds = %138, %150, %153
  br i1 %26, label %180, label %155

155:                                              ; preds = %154
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #12
  %168 = load i32, i32* %160, align 4
  br label %169

169:                                              ; preds = %164, %167
  %170 = phi i32 [ %165, %164 ], [ %168, %167 ]
  %171 = load atomic i32, i32* %156 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %169
  %175 = add i32 %170, -1
  store i32 %175, i32* %160, align 4
  br label %176

176:                                              ; preds = %174, %169
  %177 = phi i32 [ %175, %174 ], [ %170, %169 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #12
  br label %180

180:                                              ; preds = %154, %176, %179
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  br label %757

181:                                              ; preds = %14
  %182 = tail call zeroext i1 @_ZNK5blink4KURL11IsLocalFileEv(%"class.blink::KURL"* %1) #12
  br i1 %182, label %189, label %183

183:                                              ; preds = %181
  %184 = load %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)**, %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)*** %17, align 8
  %185 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)** %184, i64 34
  %186 = load %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)** %185, align 8
  %187 = tail call dereferenceable(112) %"class.blink::KURL"* %186(%"class.blink::BaseFetchContext"* %0) #12
  %188 = tail call zeroext i1 @_ZNK5blink4KURL11IsLocalFileEv(%"class.blink::KURL"* %187) #12
  br i1 %188, label %189, label %473

189:                                              ; preds = %183, %181
  %190 = bitcast %"class.WTF::StringAppend.465"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %190) #12
  %191 = bitcast %"class.WTF::StringAppend.466"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %191) #12
  %192 = bitcast %"class.WTF::StringAppend.467"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %192) #12
  %193 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %1) #12
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %270, label %195

195:                                              ; preds = %189
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %212

202:                                              ; preds = %195
  %203 = zext i32 %201 to i33
  %204 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %203, i33 1) #12
  %205 = extractvalue { i33, i1 } %204, 1
  %206 = extractvalue { i33, i1 } %204, 0
  %207 = icmp slt i33 %206, 0
  %208 = or i1 %205, %207
  br i1 %208, label %209, label %210, !prof !3

209:                                              ; preds = %202
  tail call void @llvm.trap() #12
  unreachable

210:                                              ; preds = %202
  %211 = trunc i33 %206 to i32
  store i32 %211, i32* %200, align 4
  br label %212

212:                                              ; preds = %210, %195
  %213 = phi i32 [ %211, %210 ], [ %201, %195 ]
  %214 = load atomic i32, i32* %196 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %227

217:                                              ; preds = %212
  %218 = zext i32 %213 to i33
  %219 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %218, i33 1) #12
  %220 = extractvalue { i33, i1 } %219, 1
  %221 = extractvalue { i33, i1 } %219, 0
  %222 = icmp slt i33 %221, 0
  %223 = or i1 %220, %222
  br i1 %223, label %224, label %225, !prof !3

224:                                              ; preds = %217
  tail call void @llvm.trap() #12
  unreachable

225:                                              ; preds = %217
  %226 = trunc i33 %221 to i32
  store i32 %226, i32* %200, align 4
  br label %227

227:                                              ; preds = %225, %212
  %228 = phi i32 [ %226, %225 ], [ %213, %212 ]
  %229 = load atomic i32, i32* %196 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %234

232:                                              ; preds = %227
  %233 = add i32 %228, -1
  store i32 %233, i32* %200, align 4
  br label %234

234:                                              ; preds = %232, %227
  %235 = phi i32 [ %233, %232 ], [ %228, %227 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #12
  br label %238

238:                                              ; preds = %234, %237
  %239 = load atomic i32, i32* %196 monotonic, align 4, !noalias !7
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = load i32, i32* %200, align 4
  br i1 %241, label %243, label %253

243:                                              ; preds = %238
  %244 = zext i32 %242 to i33
  %245 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %244, i33 1) #12
  %246 = extractvalue { i33, i1 } %245, 1
  %247 = extractvalue { i33, i1 } %245, 0
  %248 = icmp slt i33 %247, 0
  %249 = or i1 %246, %248
  br i1 %249, label %250, label %251, !prof !3

250:                                              ; preds = %243
  tail call void @llvm.trap() #12, !noalias !7
  unreachable

251:                                              ; preds = %243
  %252 = trunc i33 %247 to i32
  store i32 %252, i32* %200, align 4, !noalias !7
  br label %253

253:                                              ; preds = %238, %251
  %254 = phi i32 [ %252, %251 ], [ %242, %238 ]
  %255 = bitcast %"class.WTF::StringAppend.467"* %9 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.6 to i64), i64* %255, align 8, !alias.scope !7
  %256 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %193, %"class.WTF::StringImpl"** %256, align 8, !alias.scope !7
  %257 = load atomic i32, i32* %196 monotonic, align 4, !noalias !7
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %274

260:                                              ; preds = %253
  %261 = zext i32 %254 to i33
  %262 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %261, i33 1) #12
  %263 = extractvalue { i33, i1 } %262, 1
  %264 = extractvalue { i33, i1 } %262, 0
  %265 = icmp slt i33 %264, 0
  %266 = or i1 %263, %265
  br i1 %266, label %267, label %268, !prof !3

267:                                              ; preds = %260
  tail call void @llvm.trap() #12, !noalias !7
  unreachable

268:                                              ; preds = %260
  %269 = trunc i33 %264 to i32
  store i32 %269, i32* %200, align 4, !noalias !7
  br label %274

270:                                              ; preds = %189
  %271 = bitcast %"class.WTF::StringAppend.467"* %9 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.6 to i64), i64* %271, align 8, !alias.scope !7
  %272 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %272, align 8, !alias.scope !7
  %273 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8** %273, align 8, !alias.scope !7
  br label %286

274:                                              ; preds = %268, %253
  %275 = phi i32 [ %269, %268 ], [ %254, %253 ]
  %276 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8** %276, align 8, !alias.scope !7
  %277 = load atomic i32, i32* %196 monotonic, align 4, !noalias !7
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %274
  %281 = add i32 %275, -1
  store i32 %281, i32* %200, align 4, !noalias !7
  br label %282

282:                                              ; preds = %280, %274
  %283 = phi i32 [ %281, %280 ], [ %275, %274 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #12, !noalias !7
  br label %286

286:                                              ; preds = %270, %282, %285
  %287 = load %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)**, %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)*** %17, align 8
  %288 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)** %287, i64 34
  %289 = load %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)** %288, align 8
  %290 = tail call dereferenceable(112) %"class.blink::KURL"* %289(%"class.blink::BaseFetchContext"* %0) #12
  %291 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %290) #12
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.466"* nonnull sret %8, %"class.WTF::StringAppend.467"* nonnull dereferenceable(24) %9, %"class.WTF::StringImpl"* %291)
  %292 = bitcast %"class.WTF::StringAppend.466"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %292)
  %293 = bitcast %"class.WTF::StringAppend.466"* %8 to i64*
  %294 = load i64, i64* %293, align 8, !noalias !10
  %295 = bitcast %"class.WTF::StringAppend.466"* %4 to i64*
  store i64 %294, i64* %295, align 8, !noalias !10
  %296 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8, !noalias !10
  %298 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %297, %"class.WTF::StringImpl"** %298, align 8, !noalias !10
  %299 = icmp eq %"class.WTF::StringImpl"* %297, null
  br i1 %299, label %317, label %300

300:                                              ; preds = %286
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load atomic i32, i32* %301 monotonic, align 4
  %303 = and i32 %302, 2
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %317

305:                                              ; preds = %300
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = zext i32 %307 to i33
  %309 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %308, i33 1) #12
  %310 = extractvalue { i33, i1 } %309, 1
  %311 = extractvalue { i33, i1 } %309, 0
  %312 = icmp slt i33 %311, 0
  %313 = or i1 %310, %312
  br i1 %313, label %314, label %315, !prof !3

314:                                              ; preds = %305
  call void @llvm.trap() #12
  unreachable

315:                                              ; preds = %305
  %316 = trunc i33 %311 to i32
  store i32 %316, i32* %306, align 4
  br label %317

317:                                              ; preds = %315, %300, %286
  %318 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %4, i64 0, i32 0, i32 1
  %319 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %8, i64 0, i32 0, i32 1
  %320 = bitcast i8** %319 to i64*
  %321 = load i64, i64* %320, align 8, !noalias !10
  %322 = bitcast i8** %318 to i64*
  store i64 %321, i64* %322, align 8, !noalias !10
  %323 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %8, i64 0, i32 1, i32 0, i32 0
  %324 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %323, align 8, !noalias !10
  %325 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %324, %"class.WTF::StringImpl"** %325, align 8, !noalias !10
  %326 = icmp eq %"class.WTF::StringImpl"* %324, null
  br i1 %326, label %344, label %327

327:                                              ; preds = %317
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %324, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 2
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %344

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %324, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  %335 = zext i32 %334 to i33
  %336 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %335, i33 1) #12
  %337 = extractvalue { i33, i1 } %336, 1
  %338 = extractvalue { i33, i1 } %336, 0
  %339 = icmp slt i33 %338, 0
  %340 = or i1 %337, %339
  br i1 %340, label %341, label %342, !prof !3

341:                                              ; preds = %332
  call void @llvm.trap() #12
  unreachable

342:                                              ; preds = %332
  %343 = trunc i33 %338 to i32
  store i32 %343, i32* %333, align 4
  br label %344

344:                                              ; preds = %317, %327, %342
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.465"* nonnull %7, %"class.WTF::StringAppend.466"* nonnull byval(%"class.WTF::StringAppend.466") align 8 %4, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.8, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %292)
  %345 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.465"* nonnull %7)
  %346 = ptrtoint %"class.WTF::StringImpl"* %345 to i64
  %347 = bitcast %"class.WTF::String"* %5 to i64*
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %346, i64* %347, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %363, label %350

350:                                              ; preds = %344
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %350
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %350
  %360 = phi i32 [ %358, %357 ], [ %356, %350 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %348) #12
  br label %363

363:                                              ; preds = %362, %359, %344
  %364 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %365 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %364, align 8
  %366 = icmp eq %"class.WTF::StringImpl"* %365, null
  br i1 %366, label %380, label %367

367:                                              ; preds = %363
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %369 = load atomic i32, i32* %368 monotonic, align 4
  %370 = and i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 0
  %373 = load i32, i32* %372, align 4
  br i1 %371, label %374, label %376

374:                                              ; preds = %367
  %375 = add i32 %373, -1
  store i32 %375, i32* %372, align 4
  br label %376

376:                                              ; preds = %374, %367
  %377 = phi i32 [ %375, %374 ], [ %373, %367 ]
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %380

379:                                              ; preds = %376
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %365) #12
  br label %380

380:                                              ; preds = %379, %376, %363
  %381 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %381, align 8
  %383 = icmp eq %"class.WTF::StringImpl"* %382, null
  br i1 %383, label %397, label %384

384:                                              ; preds = %380
  %385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = load atomic i32, i32* %385 monotonic, align 4
  %387 = and i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 0
  %390 = load i32, i32* %389, align 4
  br i1 %388, label %391, label %393

391:                                              ; preds = %384
  %392 = add i32 %390, -1
  store i32 %392, i32* %389, align 4
  br label %393

393:                                              ; preds = %391, %384
  %394 = phi i32 [ %392, %391 ], [ %390, %384 ]
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %397

396:                                              ; preds = %393
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %382) #12
  br label %397

397:                                              ; preds = %380, %393, %396
  %398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %323, align 8
  %399 = icmp eq %"class.WTF::StringImpl"* %398, null
  br i1 %399, label %413, label %400

400:                                              ; preds = %397
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %402 = load atomic i32, i32* %401 monotonic, align 4
  %403 = and i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 0
  %406 = load i32, i32* %405, align 4
  br i1 %404, label %407, label %409

407:                                              ; preds = %400
  %408 = add i32 %406, -1
  store i32 %408, i32* %405, align 4
  br label %409

409:                                              ; preds = %407, %400
  %410 = phi i32 [ %408, %407 ], [ %406, %400 ]
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %413

412:                                              ; preds = %409
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %398) #12
  br label %413

413:                                              ; preds = %412, %409, %397
  %414 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %415 = icmp eq %"class.WTF::StringImpl"* %414, null
  br i1 %415, label %429, label %416

416:                                              ; preds = %413
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %418 = load atomic i32, i32* %417 monotonic, align 4
  %419 = and i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 0
  %422 = load i32, i32* %421, align 4
  br i1 %420, label %423, label %425

423:                                              ; preds = %416
  %424 = add i32 %422, -1
  store i32 %424, i32* %421, align 4
  br label %425

425:                                              ; preds = %423, %416
  %426 = phi i32 [ %424, %423 ], [ %422, %416 ]
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %429

428:                                              ; preds = %425
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %414) #12
  br label %429

429:                                              ; preds = %413, %425, %428
  %430 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %431 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %430, align 8
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %429
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #12
  br label %446

446:                                              ; preds = %429, %442, %445
  br i1 %194, label %472, label %447

447:                                              ; preds = %446
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %449 = load atomic i32, i32* %448 monotonic, align 4
  %450 = and i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %453 = load i32, i32* %452, align 4
  br i1 %451, label %454, label %456

454:                                              ; preds = %447
  %455 = add i32 %453, -1
  store i32 %455, i32* %452, align 4
  br label %456

456:                                              ; preds = %454, %447
  %457 = phi i32 [ %455, %454 ], [ %453, %447 ]
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %461

459:                                              ; preds = %456
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #12
  %460 = load i32, i32* %452, align 4
  br label %461

461:                                              ; preds = %456, %459
  %462 = phi i32 [ %457, %456 ], [ %460, %459 ]
  %463 = load atomic i32, i32* %448 monotonic, align 4
  %464 = and i32 %463, 2
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %468

466:                                              ; preds = %461
  %467 = add i32 %462, -1
  store i32 %467, i32* %452, align 4
  br label %468

468:                                              ; preds = %466, %461
  %469 = phi i32 [ %467, %466 ], [ %462, %461 ]
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %472

471:                                              ; preds = %468
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #12
  br label %472

472:                                              ; preds = %446, %468, %471
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %191) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %190) #12
  br label %757

473:                                              ; preds = %183
  %474 = bitcast %"class.WTF::StringAppend.465"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %474) #12
  %475 = bitcast %"class.WTF::StringAppend.466"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %475) #12
  %476 = bitcast %"class.WTF::StringAppend.467"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %476) #12
  %477 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %1) #12
  %478 = icmp eq %"class.WTF::StringImpl"* %477, null
  br i1 %478, label %554, label %479

479:                                              ; preds = %473
  %480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %481 = load atomic i32, i32* %480 monotonic, align 4
  %482 = and i32 %481, 2
  %483 = icmp eq i32 %482, 0
  %484 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 0
  %485 = load i32, i32* %484, align 4
  br i1 %483, label %486, label %496

486:                                              ; preds = %479
  %487 = zext i32 %485 to i33
  %488 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %487, i33 1) #12
  %489 = extractvalue { i33, i1 } %488, 1
  %490 = extractvalue { i33, i1 } %488, 0
  %491 = icmp slt i33 %490, 0
  %492 = or i1 %489, %491
  br i1 %492, label %493, label %494, !prof !3

493:                                              ; preds = %486
  tail call void @llvm.trap() #12
  unreachable

494:                                              ; preds = %486
  %495 = trunc i33 %490 to i32
  store i32 %495, i32* %484, align 4
  br label %496

496:                                              ; preds = %494, %479
  %497 = phi i32 [ %495, %494 ], [ %485, %479 ]
  %498 = load atomic i32, i32* %480 monotonic, align 4
  %499 = and i32 %498, 2
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %511

501:                                              ; preds = %496
  %502 = zext i32 %497 to i33
  %503 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %502, i33 1) #12
  %504 = extractvalue { i33, i1 } %503, 1
  %505 = extractvalue { i33, i1 } %503, 0
  %506 = icmp slt i33 %505, 0
  %507 = or i1 %504, %506
  br i1 %507, label %508, label %509, !prof !3

508:                                              ; preds = %501
  tail call void @llvm.trap() #12
  unreachable

509:                                              ; preds = %501
  %510 = trunc i33 %505 to i32
  store i32 %510, i32* %484, align 4
  br label %511

511:                                              ; preds = %509, %496
  %512 = phi i32 [ %510, %509 ], [ %497, %496 ]
  %513 = load atomic i32, i32* %480 monotonic, align 4
  %514 = and i32 %513, 2
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %518

516:                                              ; preds = %511
  %517 = add i32 %512, -1
  store i32 %517, i32* %484, align 4
  br label %518

518:                                              ; preds = %516, %511
  %519 = phi i32 [ %517, %516 ], [ %512, %511 ]
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %521, label %522

521:                                              ; preds = %518
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %477) #12
  br label %522

522:                                              ; preds = %518, %521
  %523 = load atomic i32, i32* %480 monotonic, align 4, !noalias !13
  %524 = and i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = load i32, i32* %484, align 4
  br i1 %525, label %527, label %537

527:                                              ; preds = %522
  %528 = zext i32 %526 to i33
  %529 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %528, i33 1) #12
  %530 = extractvalue { i33, i1 } %529, 1
  %531 = extractvalue { i33, i1 } %529, 0
  %532 = icmp slt i33 %531, 0
  %533 = or i1 %530, %532
  br i1 %533, label %534, label %535, !prof !3

534:                                              ; preds = %527
  tail call void @llvm.trap() #12, !noalias !13
  unreachable

535:                                              ; preds = %527
  %536 = trunc i33 %531 to i32
  store i32 %536, i32* %484, align 4, !noalias !13
  br label %537

537:                                              ; preds = %522, %535
  %538 = phi i32 [ %536, %535 ], [ %526, %522 ]
  %539 = bitcast %"class.WTF::StringAppend.467"* %12 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.6 to i64), i64* %539, align 8, !alias.scope !13
  %540 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %477, %"class.WTF::StringImpl"** %540, align 8, !alias.scope !13
  %541 = load atomic i32, i32* %480 monotonic, align 4, !noalias !13
  %542 = and i32 %541, 2
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %544, label %558

544:                                              ; preds = %537
  %545 = zext i32 %538 to i33
  %546 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %545, i33 1) #12
  %547 = extractvalue { i33, i1 } %546, 1
  %548 = extractvalue { i33, i1 } %546, 0
  %549 = icmp slt i33 %548, 0
  %550 = or i1 %547, %549
  br i1 %550, label %551, label %552, !prof !3

551:                                              ; preds = %544
  tail call void @llvm.trap() #12, !noalias !13
  unreachable

552:                                              ; preds = %544
  %553 = trunc i33 %548 to i32
  store i32 %553, i32* %484, align 4, !noalias !13
  br label %558

554:                                              ; preds = %473
  %555 = bitcast %"class.WTF::StringAppend.467"* %12 to i64*
  store i64 ptrtoint ([28 x i8]* @.str.6 to i64), i64* %555, align 8, !alias.scope !13
  %556 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %556, align 8, !alias.scope !13
  %557 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8** %557, align 8, !alias.scope !13
  br label %570

558:                                              ; preds = %552, %537
  %559 = phi i32 [ %553, %552 ], [ %538, %537 ]
  %560 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8** %560, align 8, !alias.scope !13
  %561 = load atomic i32, i32* %480 monotonic, align 4, !noalias !13
  %562 = and i32 %561, 2
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %564, label %566

564:                                              ; preds = %558
  %565 = add i32 %559, -1
  store i32 %565, i32* %484, align 4, !noalias !13
  br label %566

566:                                              ; preds = %564, %558
  %567 = phi i32 [ %565, %564 ], [ %559, %558 ]
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %569, label %570

569:                                              ; preds = %566
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %477) #12, !noalias !13
  br label %570

570:                                              ; preds = %554, %566, %569
  %571 = load %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)**, %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)*** %17, align 8
  %572 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)** %571, i64 34
  %573 = load %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)*, %"class.blink::KURL"* (%"class.blink::BaseFetchContext"*)** %572, align 8
  %574 = tail call dereferenceable(112) %"class.blink::KURL"* %573(%"class.blink::BaseFetchContext"* %0) #12
  %575 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %574) #12
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.466"* nonnull sret %11, %"class.WTF::StringAppend.467"* nonnull dereferenceable(24) %12, %"class.WTF::StringImpl"* %575)
  %576 = bitcast %"class.WTF::StringAppend.466"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %576)
  %577 = bitcast %"class.WTF::StringAppend.466"* %11 to i64*
  %578 = load i64, i64* %577, align 8, !noalias !16
  %579 = bitcast %"class.WTF::StringAppend.466"* %3 to i64*
  store i64 %578, i64* %579, align 8, !noalias !16
  %580 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %581 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %580, align 8, !noalias !16
  %582 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %581, %"class.WTF::StringImpl"** %582, align 8, !noalias !16
  %583 = icmp eq %"class.WTF::StringImpl"* %581, null
  br i1 %583, label %601, label %584

584:                                              ; preds = %570
  %585 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %581, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %586 = load atomic i32, i32* %585 monotonic, align 4
  %587 = and i32 %586, 2
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %601

589:                                              ; preds = %584
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %581, i64 0, i32 0
  %591 = load i32, i32* %590, align 4
  %592 = zext i32 %591 to i33
  %593 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %592, i33 1) #12
  %594 = extractvalue { i33, i1 } %593, 1
  %595 = extractvalue { i33, i1 } %593, 0
  %596 = icmp slt i33 %595, 0
  %597 = or i1 %594, %596
  br i1 %597, label %598, label %599, !prof !3

598:                                              ; preds = %589
  call void @llvm.trap() #12
  unreachable

599:                                              ; preds = %589
  %600 = trunc i33 %595 to i32
  store i32 %600, i32* %590, align 4
  br label %601

601:                                              ; preds = %599, %584, %570
  %602 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %3, i64 0, i32 0, i32 1
  %603 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %11, i64 0, i32 0, i32 1
  %604 = bitcast i8** %603 to i64*
  %605 = load i64, i64* %604, align 8, !noalias !16
  %606 = bitcast i8** %602 to i64*
  store i64 %605, i64* %606, align 8, !noalias !16
  %607 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %11, i64 0, i32 1, i32 0, i32 0
  %608 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %607, align 8, !noalias !16
  %609 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %608, %"class.WTF::StringImpl"** %609, align 8, !noalias !16
  %610 = icmp eq %"class.WTF::StringImpl"* %608, null
  br i1 %610, label %628, label %611

611:                                              ; preds = %601
  %612 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %613 = load atomic i32, i32* %612 monotonic, align 4
  %614 = and i32 %613, 2
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %616, label %628

616:                                              ; preds = %611
  %617 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 0
  %618 = load i32, i32* %617, align 4
  %619 = zext i32 %618 to i33
  %620 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %619, i33 1) #12
  %621 = extractvalue { i33, i1 } %620, 1
  %622 = extractvalue { i33, i1 } %620, 0
  %623 = icmp slt i33 %622, 0
  %624 = or i1 %621, %623
  br i1 %624, label %625, label %626, !prof !3

625:                                              ; preds = %616
  call void @llvm.trap() #12
  unreachable

626:                                              ; preds = %616
  %627 = trunc i33 %622 to i32
  store i32 %627, i32* %617, align 4
  br label %628

628:                                              ; preds = %601, %611, %626
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.465"* nonnull %10, %"class.WTF::StringAppend.466"* nonnull byval(%"class.WTF::StringAppend.466") align 8 %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %576)
  %629 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.465"* nonnull %10)
  %630 = ptrtoint %"class.WTF::StringImpl"* %629 to i64
  %631 = bitcast %"class.WTF::String"* %5 to i64*
  %632 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %630, i64* %631, align 8
  %633 = icmp eq %"class.WTF::StringImpl"* %632, null
  br i1 %633, label %647, label %634

634:                                              ; preds = %628
  %635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %632, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load atomic i32, i32* %635 monotonic, align 4
  %637 = and i32 %636, 2
  %638 = icmp eq i32 %637, 0
  %639 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %632, i64 0, i32 0
  %640 = load i32, i32* %639, align 4
  br i1 %638, label %641, label %643

641:                                              ; preds = %634
  %642 = add i32 %640, -1
  store i32 %642, i32* %639, align 4
  br label %643

643:                                              ; preds = %641, %634
  %644 = phi i32 [ %642, %641 ], [ %640, %634 ]
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %646, label %647

646:                                              ; preds = %643
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %632) #12
  br label %647

647:                                              ; preds = %646, %643, %628
  %648 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %649 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %648, align 8
  %650 = icmp eq %"class.WTF::StringImpl"* %649, null
  br i1 %650, label %664, label %651

651:                                              ; preds = %647
  %652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %649, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %653 = load atomic i32, i32* %652 monotonic, align 4
  %654 = and i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %649, i64 0, i32 0
  %657 = load i32, i32* %656, align 4
  br i1 %655, label %658, label %660

658:                                              ; preds = %651
  %659 = add i32 %657, -1
  store i32 %659, i32* %656, align 4
  br label %660

660:                                              ; preds = %658, %651
  %661 = phi i32 [ %659, %658 ], [ %657, %651 ]
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %663, label %664

663:                                              ; preds = %660
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %649) #12
  br label %664

664:                                              ; preds = %663, %660, %647
  %665 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %666 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %665, align 8
  %667 = icmp eq %"class.WTF::StringImpl"* %666, null
  br i1 %667, label %681, label %668

668:                                              ; preds = %664
  %669 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %666, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %670 = load atomic i32, i32* %669 monotonic, align 4
  %671 = and i32 %670, 2
  %672 = icmp eq i32 %671, 0
  %673 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %666, i64 0, i32 0
  %674 = load i32, i32* %673, align 4
  br i1 %672, label %675, label %677

675:                                              ; preds = %668
  %676 = add i32 %674, -1
  store i32 %676, i32* %673, align 4
  br label %677

677:                                              ; preds = %675, %668
  %678 = phi i32 [ %676, %675 ], [ %674, %668 ]
  %679 = icmp eq i32 %678, 0
  br i1 %679, label %680, label %681

680:                                              ; preds = %677
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %666) #12
  br label %681

681:                                              ; preds = %664, %677, %680
  %682 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %607, align 8
  %683 = icmp eq %"class.WTF::StringImpl"* %682, null
  br i1 %683, label %697, label %684

684:                                              ; preds = %681
  %685 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %682, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %686 = load atomic i32, i32* %685 monotonic, align 4
  %687 = and i32 %686, 2
  %688 = icmp eq i32 %687, 0
  %689 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %682, i64 0, i32 0
  %690 = load i32, i32* %689, align 4
  br i1 %688, label %691, label %693

691:                                              ; preds = %684
  %692 = add i32 %690, -1
  store i32 %692, i32* %689, align 4
  br label %693

693:                                              ; preds = %691, %684
  %694 = phi i32 [ %692, %691 ], [ %690, %684 ]
  %695 = icmp eq i32 %694, 0
  br i1 %695, label %696, label %697

696:                                              ; preds = %693
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %682) #12
  br label %697

697:                                              ; preds = %696, %693, %681
  %698 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %580, align 8
  %699 = icmp eq %"class.WTF::StringImpl"* %698, null
  br i1 %699, label %713, label %700

700:                                              ; preds = %697
  %701 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %698, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %702 = load atomic i32, i32* %701 monotonic, align 4
  %703 = and i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %698, i64 0, i32 0
  %706 = load i32, i32* %705, align 4
  br i1 %704, label %707, label %709

707:                                              ; preds = %700
  %708 = add i32 %706, -1
  store i32 %708, i32* %705, align 4
  br label %709

709:                                              ; preds = %707, %700
  %710 = phi i32 [ %708, %707 ], [ %706, %700 ]
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %712, label %713

712:                                              ; preds = %709
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %698) #12
  br label %713

713:                                              ; preds = %697, %709, %712
  %714 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %715 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %714, align 8
  %716 = icmp eq %"class.WTF::StringImpl"* %715, null
  br i1 %716, label %730, label %717

717:                                              ; preds = %713
  %718 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %715, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %719 = load atomic i32, i32* %718 monotonic, align 4
  %720 = and i32 %719, 2
  %721 = icmp eq i32 %720, 0
  %722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %715, i64 0, i32 0
  %723 = load i32, i32* %722, align 4
  br i1 %721, label %724, label %726

724:                                              ; preds = %717
  %725 = add i32 %723, -1
  store i32 %725, i32* %722, align 4
  br label %726

726:                                              ; preds = %724, %717
  %727 = phi i32 [ %725, %724 ], [ %723, %717 ]
  %728 = icmp eq i32 %727, 0
  br i1 %728, label %729, label %730

729:                                              ; preds = %726
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %715) #12
  br label %730

730:                                              ; preds = %713, %726, %729
  br i1 %478, label %756, label %731

731:                                              ; preds = %730
  %732 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %733 = load atomic i32, i32* %732 monotonic, align 4
  %734 = and i32 %733, 2
  %735 = icmp eq i32 %734, 0
  %736 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 0
  %737 = load i32, i32* %736, align 4
  br i1 %735, label %738, label %740

738:                                              ; preds = %731
  %739 = add i32 %737, -1
  store i32 %739, i32* %736, align 4
  br label %740

740:                                              ; preds = %738, %731
  %741 = phi i32 [ %739, %738 ], [ %737, %731 ]
  %742 = icmp eq i32 %741, 0
  br i1 %742, label %743, label %745

743:                                              ; preds = %740
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %477) #12
  %744 = load i32, i32* %736, align 4
  br label %745

745:                                              ; preds = %740, %743
  %746 = phi i32 [ %741, %740 ], [ %744, %743 ]
  %747 = load atomic i32, i32* %732 monotonic, align 4
  %748 = and i32 %747, 2
  %749 = icmp eq i32 %748, 0
  br i1 %749, label %750, label %752

750:                                              ; preds = %745
  %751 = add i32 %746, -1
  store i32 %751, i32* %736, align 4
  br label %752

752:                                              ; preds = %750, %745
  %753 = phi i32 [ %751, %750 ], [ %746, %745 ]
  %754 = icmp eq i32 %753, 0
  br i1 %754, label %755, label %756

755:                                              ; preds = %752
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %477) #12
  br label %756

756:                                              ; preds = %730, %752, %755
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %476) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %475) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %474) #12
  br label %757

757:                                              ; preds = %472, %756, %180
  %758 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #12
  %759 = bitcast i8* %758 to %"class.blink::ConsoleMessage"*
  %760 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #12
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %759, i32 7, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::SourceLocation"* %760) #12
  %761 = getelementptr inbounds i8, i8* %758, i64 -4
  %762 = bitcast i8* %761 to i16*
  %763 = load atomic i16, i16* %762 monotonic, align 2
  %764 = or i16 %763, 1
  store atomic i16 %764, i16* %762 release, align 2
  %765 = bitcast %"class.blink::BaseFetchContext"* %0 to void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)***
  %766 = load void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)**, void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)*** %765, align 8
  %767 = getelementptr inbounds void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)*, void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)** %766, i64 37
  %768 = load void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)*, void (%"class.blink::BaseFetchContext"*, %"class.blink::ConsoleMessage"*)** %767, align 8
  call void %768(%"class.blink::BaseFetchContext"* %0, %"class.blink::ConsoleMessage"* %759) #12
  %769 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %770 = icmp eq %"class.WTF::StringImpl"* %769, null
  br i1 %770, label %784, label %771

771:                                              ; preds = %757
  %772 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %769, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %773 = load atomic i32, i32* %772 monotonic, align 4
  %774 = and i32 %773, 2
  %775 = icmp eq i32 %774, 0
  %776 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %769, i64 0, i32 0
  %777 = load i32, i32* %776, align 4
  br i1 %775, label %778, label %780

778:                                              ; preds = %771
  %779 = add i32 %777, -1
  store i32 %779, i32* %776, align 4
  br label %780

780:                                              ; preds = %778, %771
  %781 = phi i32 [ %779, %778 ], [ %777, %771 ]
  %782 = icmp eq i32 %781, 0
  br i1 %782, label %783, label %784

783:                                              ; preds = %780
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %769) #12
  br label %784

784:                                              ; preds = %757, %780, %783
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  br label %785

785:                                              ; preds = %2, %784
  ret void
}

declare zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEEcEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.609", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.609", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.608"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #12
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %6, i8* %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  br i1 %20, label %88, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEEcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #12
  %25 = load i8*, i8** %7, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %28 = load i8, i8* %27, align 8
  %29 = bitcast %"class.WTF::StringTypeAdapter.608"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.608", %"class.WTF::StringTypeAdapter.608"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false) #12
  %31 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %4, i8* %31) #12
  %32 = bitcast %"class.WTF::StringTypeAdapter.609"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %5, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false) #12
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %21
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %45

39:                                               ; preds = %21
  %40 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %44 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  br label %45

45:                                               ; preds = %37, %39
  %46 = phi i8* [ null, %37 ], [ %44, %39 ]
  %47 = phi i64 [ %38, %37 ], [ %40, %39 ]
  %48 = phi i32 [ 0, %37 ], [ %42, %39 ]
  %49 = bitcast %"class.WTF::StringTypeAdapter.609"* %5 to i64*
  store i64 %47, i64* %49, align 8
  store i8* %46, i8** %33, align 8
  store i32 %48, i32* %34, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.608"* nonnull %4, i8* %25) #12
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %5, i64 0, i32 0
  %51 = load i32, i32* %30, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %25, i64 %52
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.610"* nonnull %50, i8* %53) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  %54 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.464"* %26) #12
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %25, i64 %55
  store i8 %28, i8* %56, align 1
  %57 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %57, label %156, label %58

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %75

65:                                               ; preds = %58
  %66 = zext i32 %64 to i33
  %67 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #12
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !3

72:                                               ; preds = %65
  call void @llvm.trap() #12
  unreachable

73:                                               ; preds = %65
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %63, align 4
  br label %75

75:                                               ; preds = %58, %73
  %76 = phi i32 [ %74, %73 ], [ %64, %58 ]
  %77 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %78 = load atomic i32, i32* %59 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %83 = add i32 %76, -1
  store i32 %83, i32* %82, align 4
  br label %84

84:                                               ; preds = %81, %75
  %85 = phi i32 [ %83, %81 ], [ %76, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %156

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %156

88:                                               ; preds = %1
  %89 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %90 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEEcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %91 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %90, i16** nonnull dereferenceable(8) %8) #12
  %92 = load i16*, i16** %8, align 8
  %93 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %94 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %95 = load i8, i8* %94, align 8
  %96 = bitcast %"class.WTF::StringTypeAdapter.608"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #12
  %97 = getelementptr inbounds %"class.WTF::StringTypeAdapter.608", %"class.WTF::StringTypeAdapter.608"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 16, i1 false) #12
  %98 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %2, i8* %98) #12
  %99 = bitcast %"class.WTF::StringTypeAdapter.609"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #12
  %100 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %3, i64 0, i32 0, i32 0, i32 1
  %101 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 24, i1 false) #12
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %88
  %105 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %112

106:                                              ; preds = %88
  %107 = ptrtoint %"class.WTF::StringImpl"* %102 to i64
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 1
  %111 = bitcast %"class.WTF::StringImpl"* %110 to i8*
  br label %112

112:                                              ; preds = %104, %106
  %113 = phi i8* [ null, %104 ], [ %111, %106 ]
  %114 = phi i64 [ %105, %104 ], [ %107, %106 ]
  %115 = phi i32 [ 0, %104 ], [ %109, %106 ]
  %116 = bitcast %"class.WTF::StringTypeAdapter.609"* %3 to i64*
  store i64 %114, i64* %116, align 8
  store i8* %113, i8** %100, align 8
  store i32 %115, i32* %101, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.608"* nonnull %2, i16* %92) #12
  %117 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %3, i64 0, i32 0
  %118 = load i32, i32* %97, align 8
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds i16, i16* %92, i64 %119
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.610"* nonnull %117, i16* %120) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #12
  %121 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.464"* %93) #12
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %92, i64 %122
  %124 = zext i8 %95 to i16
  store i16 %124, i16* %123, align 2
  %125 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %125, label %156, label %126

126:                                              ; preds = %112
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %143

133:                                              ; preds = %126
  %134 = zext i32 %132 to i33
  %135 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #12
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !3

140:                                              ; preds = %133
  call void @llvm.trap() #12
  unreachable

141:                                              ; preds = %133
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %131, align 4
  br label %143

143:                                              ; preds = %126, %141
  %144 = phi i32 [ %142, %141 ], [ %132, %126 ]
  %145 = ptrtoint %"class.WTF::StringImpl"* %91 to i64
  %146 = load atomic i32, i32* %127 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %151 = add i32 %144, -1
  store i32 %151, i32* %150, align 4
  br label %152

152:                                              ; preds = %149, %143
  %153 = phi i32 [ %151, %149 ], [ %144, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #12
  br label %156

156:                                              ; preds = %155, %152, %112, %87, %84, %45
  %157 = phi i8* [ %22, %45 ], [ %22, %84 ], [ %22, %87 ], [ %89, %112 ], [ %89, %152 ], [ %89, %155 ]
  %158 = phi i64 [ 0, %45 ], [ %77, %84 ], [ %77, %87 ], [ 0, %112 ], [ %145, %152 ], [ %145, %155 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #12
  %159 = inttoptr i64 %158 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %159
}

declare zeroext i1 @_ZNK5blink4KURL11IsLocalFileEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.466"* noalias sret, %"class.WTF::StringAppend.467"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.467", align 8
  %5 = bitcast %"class.WTF::StringAppend.467"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.467"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.466"* %0, %"class.WTF::StringAppend.467"* nonnull byval(%"class.WTF::StringAppend.467") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.466"* %0, %"class.WTF::StringAppend.467"* nonnull byval(%"class.WTF::StringAppend.467") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.465"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.608"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #12
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.608"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #12
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %3, i8* %15) #12
  %16 = bitcast %"class.WTF::StringTypeAdapter.608"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #12
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %2, i8* %18) #12
  %19 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #12
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.465"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #12
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.465"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #12
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %49
  call void @llvm.trap() #12
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #12
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.465"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #12
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.465"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #12
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %85
  call void @llvm.trap() #12
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #12
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #12
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink16BaseFetchContext18CheckCSPForRequestENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_4KURLERKNS_21ResourceLoaderOptionsENS_20ReportingDispositionES8_NS_19ResourceRequestHead14RedirectStatusE(%"class.blink::BaseFetchContext"*, i32, i32, %"class.blink::KURL"* dereferenceable(112), %"struct.blink::ResourceLoaderOptions"* dereferenceable(112), i32, %"class.blink::KURL"* dereferenceable(112), i8 zeroext) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 10, i32 0
  %14 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %13, align 8
  %15 = bitcast %"class.blink::BaseFetchContext"* %0 to %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)***
  %16 = load %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)**, %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)*, %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)** %16, i64 30
  %18 = load %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)*, %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)** %17, align 8
  %19 = tail call %"class.blink::ContentSecurityPolicy"* %18(%"class.blink::BaseFetchContext"* %0, %"class.blink::DOMWrapperWorld"* %14) #12
  %20 = icmp eq %"class.blink::ContentSecurityPolicy"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 6
  %23 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 7
  %24 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 8
  %25 = load i8, i8* %24, align 8
  %26 = tail call zeroext i1 @_ZN5blink21ContentSecurityPolicy12AllowRequestENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_4KURLERKN3WTF6StringERKNS9_7HashSetINSt3__14pairISA_NS_18IntegrityAlgorithmEEENS9_8PairHashISA_SG_EENS9_10HashTraitsISH_EENS9_18PartitionAllocatorEEENS_17ParserDispositionES8_NS_19ResourceRequestHead14RedirectStatusENS_20ReportingDispositionENS0_15CheckHeaderTypeE(%"class.blink::ContentSecurityPolicy"* nonnull %19, i32 %1, i32 %2, %"class.blink::KURL"* dereferenceable(112) %3, %"class.WTF::String"* dereferenceable(8) %22, %"class.WTF::HashSet"* dereferenceable(24) %23, i8 zeroext %25, %"class.blink::KURL"* dereferenceable(112) %6, i8 zeroext %7, i32 %5, i32 2) #12
  br i1 %26, label %27, label %28

27:                                               ; preds = %21, %12
  br label %28

28:                                               ; preds = %8, %21, %27
  %29 = phi i64 [ 4294967296, %27 ], [ 4294967296, %8 ], [ 4294967297, %21 ]
  ret i64 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink16BaseFetchContext26CheckCSPForRequestInternalENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_4KURLERKNS_21ResourceLoaderOptionsENS_20ReportingDispositionES8_NS_19ResourceRequestHead14RedirectStatusENS_21ContentSecurityPolicy15CheckHeaderTypeE(%"class.blink::BaseFetchContext"*, i32, i32, %"class.blink::KURL"* dereferenceable(112), %"struct.blink::ResourceLoaderOptions"* dereferenceable(112), i32, %"class.blink::KURL"* dereferenceable(112), i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 10, i32 0
  %15 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %14, align 8
  %16 = bitcast %"class.blink::BaseFetchContext"* %0 to %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)***
  %17 = load %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)**, %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)*, %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)** %17, i64 30
  %19 = load %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)*, %"class.blink::ContentSecurityPolicy"* (%"class.blink::BaseFetchContext"*, %"class.blink::DOMWrapperWorld"*)** %18, align 8
  %20 = tail call %"class.blink::ContentSecurityPolicy"* %19(%"class.blink::BaseFetchContext"* %0, %"class.blink::DOMWrapperWorld"* %15) #12
  %21 = icmp eq %"class.blink::ContentSecurityPolicy"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 6
  %24 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 7
  %25 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %4, i64 0, i32 8
  %26 = load i8, i8* %25, align 8
  %27 = tail call zeroext i1 @_ZN5blink21ContentSecurityPolicy12AllowRequestENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_4KURLERKN3WTF6StringERKNS9_7HashSetINSt3__14pairISA_NS_18IntegrityAlgorithmEEENS9_8PairHashISA_SG_EENS9_10HashTraitsISH_EENS9_18PartitionAllocatorEEENS_17ParserDispositionES8_NS_19ResourceRequestHead14RedirectStatusENS_20ReportingDispositionENS0_15CheckHeaderTypeE(%"class.blink::ContentSecurityPolicy"* nonnull %20, i32 %1, i32 %2, %"class.blink::KURL"* dereferenceable(112) %3, %"class.WTF::String"* dereferenceable(8) %23, %"class.WTF::HashSet"* dereferenceable(24) %24, i8 zeroext %26, %"class.blink::KURL"* dereferenceable(112) %6, i8 zeroext %7, i32 %5, i32 %8) #12
  br i1 %27, label %28, label %29

28:                                               ; preds = %13, %22
  br label %29

29:                                               ; preds = %22, %9, %28
  %30 = phi i64 [ 4294967296, %28 ], [ 4294967296, %9 ], [ 4294967297, %22 ]
  ret i64 %30
}

declare zeroext i1 @_ZN5blink21ContentSecurityPolicy12AllowRequestENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_4KURLERKN3WTF6StringERKNS9_7HashSetINSt3__14pairISA_NS_18IntegrityAlgorithmEEENS9_8PairHashISA_SG_EENS9_10HashTraitsISH_EENS9_18PartitionAllocatorEEENS_17ParserDispositionES8_NS_19ResourceRequestHead14RedirectStatusENS_20ReportingDispositionENS0_15CheckHeaderTypeE(%"class.blink::ContentSecurityPolicy"*, i32, i32, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::HashSet"* dereferenceable(24), i8 zeroext, %"class.blink::KURL"* dereferenceable(112), i8 zeroext, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink19ResourceRequestHead10CanDisplayERKNS_4KURLE(%"class.blink::ResourceRequestHead"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink4cors17CalculateCorsFlagERKNS_4KURLEPKNS_14SecurityOriginES6_N7network5mojom11RequestModeE(%"class.blink::KURL"* dereferenceable(112), %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14SchemeRegistry28ShouldTreatURLSchemeAsLegacyERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17PermissionsPolicy25IsFeatureEnabledForOriginENS_5mojom24PermissionsPolicyFeatureERKN3url6OriginE(%"class.blink::PermissionsPolicy"*, i32, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink25IsClientHintSentByDefaultEN7network5mojom18WebClientHintsTypeE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16BaseFetchContext47AddBackForwardCacheExperimentHTTPHeaderIfNeededEPNS_16ExecutionContextERNS_15ResourceRequestE(%"class.blink::BaseFetchContext"* nocapture readnone, %"class.blink::ExecutionContext"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = icmp eq %"class.blink::ExecutionContext"* %1, null
  %9 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 4
  %10 = select i1 %8, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %9
  %11 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase43BackForwardCacheExperimentHTTPHeaderEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %10) #12
  br i1 %11, label %12, label %117

12:                                               ; preds = %3
  %13 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features36kBackForwardCacheABExperimentControlE) #12
  br i1 %13, label %14, label %117

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 3
  %16 = icmp eq %"class.blink::UseCounter"* %15, null
  %17 = or i1 %8, %16
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::UseCounter"* %15 to void (%"class.blink::UseCounter"*, i32)***
  %20 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %20, i64 3
  %22 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, align 8
  tail call void %22(%"class.blink::UseCounter"* nonnull %15, i32 3461) #12
  br label %23

23:                                               ; preds = %14, %18
  %24 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %28 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features34kBackForwardCacheABExperimentGroupE, i64 0, i64 0)) #12
  %29 = icmp ugt i64 %28, -17
  br i1 %29, label %30, label %32

30:                                               ; preds = %23
  %31 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %31) #15
  unreachable

32:                                               ; preds = %23
  %33 = icmp ult i64 %28, 23
  br i1 %33, label %43, label %34

34:                                               ; preds = %32
  %35 = add nuw i64 %28, 16
  %36 = and i64 %35, -16
  %37 = tail call i8* @_Znwm(i64 %36) #14
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %37, i8** %38, align 8
  %39 = or i64 %36, -9223372036854775808
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %28, i64* %41, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %48

43:                                               ; preds = %32
  %44 = trunc i64 %28 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  %47 = icmp eq i64 %28, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %43, %34
  %49 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %45, %43 ], [ %42, %34 ]
  %50 = phi i8* [ %26, %43 ], [ %37, %34 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %50, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features34kBackForwardCacheABExperimentGroupE, i64 0, i64 0), i64 %28, i1 false) #12
  br label %51

51:                                               ; preds = %43, %48
  %52 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %45, %43 ], [ %49, %48 ]
  %53 = phi i8* [ %26, %43 ], [ %50, %48 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 %28
  store i8 0, i8* %54, align 1
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features36kBackForwardCacheABExperimentControlE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #12
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #14
  br label %61

61:                                               ; preds = %51, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %62 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0
  %63 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i64 22) #12
  %64 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #12
  %65 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %61
  %70 = load i8*, i8** %25, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %61, %69
  %73 = phi i8* [ %70, %69 ], [ %24, %61 ]
  %74 = call i64 @strlen(i8* nonnull %73) #13
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi i8* [ %73, %72 ], [ null, %69 ]
  %77 = phi i64 [ %74, %72 ], [ 0, %69 ]
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %7, i8* %76, i64 %77) #12
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %62, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #12
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #12
  br label %94

94:                                               ; preds = %75, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #12
  %95 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #12
  br label %111

111:                                              ; preds = %94, %107, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #12
  %112 = load i8, i8* %66, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %115) #14
  br label %116

116:                                              ; preds = %111, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  br label %117

117:                                              ; preds = %12, %3, %116
  ret void
}

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase43BackForwardCacheExperimentHTTPHeaderEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #2

declare void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16BaseFetchContext5TraceEPNS_7VisitorE(%"class.blink::BaseFetchContext"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BaseFetchContext", %"class.blink::BaseFetchContext"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_35DetachableResourceFetcherPropertiesEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12FetchContextD2Ev(%"class.blink::FetchContext"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16BaseFetchContextD0Ev(%"class.blink::BaseFetchContext"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @_ZN5blink12FetchContext27AddAdditionalRequestHeadersERNS_15ResourceRequestE(%"class.blink::FetchContext"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #2

declare i32 @_ZNK5blink12FetchContext26ResourceRequestCachePolicyERKNS_15ResourceRequestENS_12ResourceTypeENS_15FetchParameters11DeferOptionE(%"class.blink::FetchContext"*, %"class.blink::ResourceRequest"* dereferenceable(1032), i8 zeroext, i32) unnamed_addr #2

declare void @_ZN5blink12FetchContext14PrepareRequestERNS_15ResourceRequestERNS_21ResourceLoaderOptionsERNS_26WebScopedVirtualTimePauserENS_12ResourceTypeE(%"class.blink::FetchContext"*, %"class.blink::ResourceRequest"* dereferenceable(1032), %"struct.blink::ResourceLoaderOptions"* dereferenceable(112), %"class.blink::WebScopedVirtualTimePauser"* dereferenceable(40), i8 zeroext) unnamed_addr #2

declare void @_ZN5blink12FetchContext17AddResourceTimingERKNS_18ResourceTimingInfoE(%"class.blink::FetchContext"*, %"class.blink::ResourceTimingInfo"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12FetchContext10AllowImageEbRKNS_4KURLE(%"class.blink::FetchContext"*, i1 zeroext, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12FetchContext23PopulateResourceRequestENS_12ResourceTypeERKNS_22ClientHintsPreferencesERKNS_15FetchParameters13ResourceWidthERNS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchContext"*, i8 zeroext, %"class.blink::ClientHintsPreferences"* dereferenceable(16), %"struct.blink::FetchParameters::ResourceWidth"* dereferenceable(8), %"class.blink::ResourceRequest"* dereferenceable(1032), %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FetchContext"* @_ZN5blink12FetchContext6DetachEv(%"class.blink::FetchContext"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12FetchContextEEEPhm(i64 8) #12
  %3 = bitcast i8* %2 to %"class.blink::FetchContext"*
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN5blink12FetchContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  ret %"class.blink::FetchContext"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PermissionsPolicy"* @_ZNK5blink12FetchContext20GetPermissionsPolicyEv(%"class.blink::FetchContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::PermissionsPolicy"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12FetchContext14previews_stateEv(%"class.blink::FetchContext"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare void @_ZN5blink12FetchContext31TakePendingWorkerTimingReceiverEi() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ResourceLoadInfoNotifierWrapper"* @_ZN5blink12FetchContext37CreateResourceLoadInfoNotifierWrapperEv(%"class.blink::FetchContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::ResourceLoadInfoNotifierWrapper"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12FetchContext14IsPrerenderingEv(%"class.blink::FetchContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare void @_ZN3net18structured_headers13SerializeItemERKNS0_4ItemE(%"class.absl::optional.578"* sret, %"class.net::structured_headers::Item"* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN3net18structured_headers4ItemC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS1_8ItemTypeE(%"class.net::structured_headers::Item"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12FetchContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12FetchContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12FetchContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #10

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12FetchContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FetchContext"*
  %4 = bitcast i8* %1 to void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)**, void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchContext"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FetchContext"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_12FetchContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FetchContext"*
  %3 = bitcast i8* %0 to void (%"class.blink::FetchContext"*)***
  %4 = load void (%"class.blink::FetchContext"*)**, void (%"class.blink::FetchContext"*)*** %3, align 8
  %5 = load void (%"class.blink::FetchContext"*)*, void (%"class.blink::FetchContext"*)** %4, align 8
  tail call void %5(%"class.blink::FetchContext"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12FetchContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #12
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #12
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #12
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #12
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #12
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEEcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = tail call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.464"* %8) #12
  %10 = add i32 %9, 1
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = tail call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.464"* %8) #12
  %14 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = icmp ult i32 %10, %13
  br i1 %15, label %17, label %16

16:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* null, i8** %12, align 8
  br label %26

17:                                               ; preds = %1
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #12
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %18, i8* %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* %21, i8** %12, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %16, %17, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  %27 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = icmp eq i32 %10, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  store i8* null, i8** %28, align 8
  br label %41

32:                                               ; preds = %26
  %33 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  %34 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %33, i8* %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  store i8* %36, i8** %28, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  br label %41

41:                                               ; preds = %31, %32, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  ret i32 %10
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.464"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.608"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.608", %"class.WTF::StringTypeAdapter.608"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.464", %"class.WTF::StringAppend.464"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.608"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %4, i8* %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.464", %"class.WTF::StringAppend.464"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %45, i8* %46) #12
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.608"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.610"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.608"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.610"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.466"*, %"class.WTF::StringAppend.467"* byval(%"class.WTF::StringAppend.467") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.467"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.466"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #12
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.465"*, %"class.WTF::StringAppend.466"* byval(%"class.WTF::StringAppend.466") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.466"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.465"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #12
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #12
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #12
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.465"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.608"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.608", %"class.WTF::StringTypeAdapter.608"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.608"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.466"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.466"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.465"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.609", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.608"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.608"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.609"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.609"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.467"* %10, i8* %1) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.467"* %10) #12
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.610"* nonnull %30, i8* %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.466"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.608"* nonnull %4, i8* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.465"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.609", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.608"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.608"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.609"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.465", %"class.WTF::StringAppend.465"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.609"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.467"* %10, i16* %1) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.467"* %10) #12
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.610"* nonnull %30, i16* %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.466"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.608"* nonnull %4, i16* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.466"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.466", %"class.WTF::StringAppend.466"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.467"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.467"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.467"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.608"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.608", %"class.WTF::StringTypeAdapter.608"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.608"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.464"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.464"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.467"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.609", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.608"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.608"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.608"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.608", %"class.WTF::StringTypeAdapter.608"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.609"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.609"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.608"* nonnull %3, i8* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.610"* nonnull %34, i8* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.464"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.608"* nonnull %5, i8* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.467"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.609", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.608"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.608"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.608"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.608", %"class.WTF::StringTypeAdapter.608"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.609"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.467", %"class.WTF::StringAppend.467"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.609"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.608"* nonnull %3, i16* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.610"* nonnull %34, i16* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.464"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.608"* nonnull %5, i16* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #10

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend.464"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #12
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.464"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #12
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #12
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #12
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.464"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.609", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.609", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.608", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.608"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.464", %"class.WTF::StringAppend.464"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #12
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %6, i8* %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend.464", %"class.WTF::StringAppend.464"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.464"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #12
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.608"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.608", %"class.WTF::StringTypeAdapter.608"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #12
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %4, i8* %28) #12
  %29 = bitcast %"class.WTF::StringTypeAdapter.609"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #12
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.609"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.608"* nonnull %4, i8* %25) #12
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.610"* nonnull %47, i8* %50) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #12
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %59
  call void @llvm.trap() #12
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.464"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #12
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter.608"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #12
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.608", %"class.WTF::StringTypeAdapter.608"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #12
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.608"* nonnull %2, i8* %89) #12
  %90 = bitcast %"class.WTF::StringTypeAdapter.609"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #12
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #12
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.609"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.608"* nonnull %2, i16* %86) #12
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.609", %"class.WTF::StringTypeAdapter.609"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.610"* nonnull %108, i16* %111) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #12
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #12
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %120
  call void @llvm.trap() #12
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #12
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #12
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_35DetachableResourceFetcherPropertiesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DetachableResourceFetcherProperties"*
  tail call void @_ZNK5blink35DetachableResourceFetcherProperties5TraceEPNS_7VisitorE(%"class.blink::DetachableResourceFetcherProperties"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink35DetachableResourceFetcherProperties5TraceEPNS_7VisitorE(%"class.blink::DetachableResourceFetcherProperties"*, %"class.blink::Visitor"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNO4absl8optionalINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE8value_orIS7_EES7_OT_: argument 0"}
!6 = distinct !{!6, !"_ZNO4absl8optionalINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE8value_orIS7_EES7_OT_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!12 = distinct !{!12, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!18 = distinct !{!18, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
