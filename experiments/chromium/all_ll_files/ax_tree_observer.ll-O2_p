; ModuleID = '../../ui/accessibility/ax_tree_observer.cc'
source_filename = "../../ui/accessibility/ax_tree_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::AXTreeObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.ui::AXTree" = type opaque
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector", %"class.std::__1::vector.7", %"class.std::__1::vector.15", %"class.std::__1::vector.23", %"class.std::__1::vector.31", %"class.std::__1::vector.39", %"class.std::__1::vector.47", %"class.std::__1::vector.55", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"struct.std::__1::pair.9"*, %"struct.std::__1::pair.9"*, %"class.std::__1::__compressed_pair.10" }
%"struct.std::__1::pair.9" = type opaque
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::pair.9"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"*, %"class.std::__1::__compressed_pair.18" }
%"struct.std::__1::pair.17" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::pair.17"* }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"struct.std::__1::pair.25"*, %"struct.std::__1::pair.25"*, %"class.std::__1::__compressed_pair.26" }
%"struct.std::__1::pair.25" = type opaque
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::pair.25"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"struct.std::__1::pair.33"*, %"struct.std::__1::pair.33"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair.33" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair.33"* }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"*, %"class.std::__1::__compressed_pair.42" }
%"struct.std::__1::pair.41" = type opaque
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::pair.41"* }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"struct.std::__1::pair.49"*, %"struct.std::__1::pair.49"*, %"class.std::__1::__compressed_pair.50" }
%"struct.std::__1::pair.49" = type opaque
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::pair.49"* }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { i32*, i32*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.ui::AXNode" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.70" = type opaque
%"struct.ui::AXTreeData" = type opaque
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.71 }
%union.anon.71 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::vector.72" = type opaque

$_ZN2ui14AXTreeObserver20OnNodeDataWillChangeEPNS_6AXTreeERKNS_10AXNodeDataES5_ = comdat any

$_ZN2ui14AXTreeObserver17OnNodeDataChangedEPNS_6AXTreeERKNS_10AXNodeDataES5_ = comdat any

$_ZN2ui14AXTreeObserver13OnRoleChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom4RoleES7_ = comdat any

$_ZN2ui14AXTreeObserver14OnStateChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom5StateEb = comdat any

$_ZN2ui14AXTreeObserver24OnStringAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESG_ = comdat any

$_ZN2ui14AXTreeObserver21OnIntAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom12IntAttributeEii = comdat any

$_ZN2ui14AXTreeObserver23OnFloatAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom14FloatAttributeEff = comdat any

$_ZN2ui14AXTreeObserver22OnBoolAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom13BoolAttributeEb = comdat any

$_ZN2ui14AXTreeObserver25OnIntListAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS8_9allocatorIiEEEESE_ = comdat any

$_ZN2ui14AXTreeObserver28OnStringListAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom19StringListAttributeERKNSt3__16vectorINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENSD_ISF_EEEESJ_ = comdat any

$_ZN2ui14AXTreeObserver17OnTreeDataChangedEPNS_6AXTreeERKNS_10AXTreeDataES5_ = comdat any

$_ZN2ui14AXTreeObserver19OnNodeWillBeDeletedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver22OnSubtreeWillBeDeletedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver22OnNodeWillBeReparentedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver25OnSubtreeWillBeReparentedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver13OnNodeCreatedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver13OnNodeDeletedEPNS_6AXTreeEi = comdat any

$_ZN2ui14AXTreeObserver16OnNodeReparentedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver13OnNodeChangedEPNS_6AXTreeEPNS_6AXNodeE = comdat any

$_ZN2ui14AXTreeObserver26OnTreeManagerWillBeRemovedENS_8AXTreeIDE = comdat any

$_ZN2ui14AXTreeObserver22OnAtomicUpdateFinishedEPNS_6AXTreeEbRKNSt3__16vectorINS0_6ChangeENS3_9allocatorIS5_EEEE = comdat any

@_ZTVN2ui14AXTreeObserverE = hidden unnamed_addr constant { [25 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::AXTreeObserver"*)* @_ZN2ui14AXTreeObserverD2Ev to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*)* @_ZN2ui14AXTreeObserverD0Ev to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*)* @_ZN2ui14AXTreeObserver20OnNodeDataWillChangeEPNS_6AXTreeERKNS_10AXNodeDataES5_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*)* @_ZN2ui14AXTreeObserver17OnNodeDataChangedEPNS_6AXTreeERKNS_10AXNodeDataES5_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i32)* @_ZN2ui14AXTreeObserver13OnRoleChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom4RoleES7_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i1)* @_ZN2ui14AXTreeObserver14OnStateChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom5StateEb to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN2ui14AXTreeObserver24OnStringAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESG_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i32, i32)* @_ZN2ui14AXTreeObserver21OnIntAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom12IntAttributeEii to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, float, float)* @_ZN2ui14AXTreeObserver23OnFloatAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom14FloatAttributeEff to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i1)* @_ZN2ui14AXTreeObserver22OnBoolAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom13BoolAttributeEb to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, %"class.std::__1::vector.55"*, %"class.std::__1::vector.55"*)* @_ZN2ui14AXTreeObserver25OnIntListAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS8_9allocatorIiEEEESE_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, %"class.std::__1::vector.70"*, %"class.std::__1::vector.70"*)* @_ZN2ui14AXTreeObserver28OnStringListAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom19StringListAttributeERKNSt3__16vectorINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENSD_ISF_EEEESJ_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"struct.ui::AXTreeData"*, %"struct.ui::AXTreeData"*)* @_ZN2ui14AXTreeObserver17OnTreeDataChangedEPNS_6AXTreeERKNS_10AXTreeDataES5_ to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver19OnNodeWillBeDeletedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver22OnSubtreeWillBeDeletedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver22OnNodeWillBeReparentedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver25OnSubtreeWillBeReparentedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver13OnNodeCreatedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i32)* @_ZN2ui14AXTreeObserver13OnNodeDeletedEPNS_6AXTreeEi to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver16OnNodeReparentedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui14AXTreeObserver13OnNodeChangedEPNS_6AXTreeEPNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTreeID"*)* @_ZN2ui14AXTreeObserver26OnTreeManagerWillBeRemovedENS_8AXTreeIDE to i8*), i8* bitcast (void (%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1, %"class.std::__1::vector.72"*)* @_ZN2ui14AXTreeObserver22OnAtomicUpdateFinishedEPNS_6AXTreeEbRKNSt3__16vectorINS0_6ChangeENS3_9allocatorIS5_EEEE to i8*)] }, align 8

@_ZN2ui14AXTreeObserverC1Ev = hidden unnamed_addr alias void (%"class.ui::AXTreeObserver"*), void (%"class.ui::AXTreeObserver"*)* @_ZN2ui14AXTreeObserverC2Ev
@_ZN2ui14AXTreeObserverD1Ev = hidden unnamed_addr alias void (%"class.ui::AXTreeObserver"*), void (%"class.ui::AXTreeObserver"*)* @_ZN2ui14AXTreeObserverD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXTreeObserverC2Ev(%"class.ui::AXTreeObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXTreeObserver", %"class.ui::AXTreeObserver"* %0, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %2) #4
  %3 = getelementptr inbounds %"class.ui::AXTreeObserver", %"class.ui::AXTreeObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2ui14AXTreeObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXTreeObserverD2Ev(%"class.ui::AXTreeObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXTreeObserver", %"class.ui::AXTreeObserver"* %0, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXTreeObserverD0Ev(%"class.ui::AXTreeObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXTreeObserver", %"class.ui::AXTreeObserver"* %0, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %2) #4
  %3 = bitcast %"class.ui::AXTreeObserver"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver20OnNodeDataWillChangeEPNS_6AXTreeERKNS_10AXNodeDataES5_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"struct.ui::AXNodeData"* dereferenceable(264), %"struct.ui::AXNodeData"* dereferenceable(264)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver17OnNodeDataChangedEPNS_6AXTreeERKNS_10AXNodeDataES5_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"struct.ui::AXNodeData"* dereferenceable(264), %"struct.ui::AXNodeData"* dereferenceable(264)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver13OnRoleChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom4RoleES7_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver14OnStateChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom5StateEb(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver24OnStringAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom15StringAttributeERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESG_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver21OnIntAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom12IntAttributeEii(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver23OnFloatAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom14FloatAttributeEff(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, float, float) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver22OnBoolAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom13BoolAttributeEb(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver25OnIntListAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS8_9allocatorIiEEEESE_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, %"class.std::__1::vector.55"* dereferenceable(24), %"class.std::__1::vector.55"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver28OnStringListAttributeChangedEPNS_6AXTreeEPNS_6AXNodeEN2ax5mojom19StringListAttributeERKNSt3__16vectorINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENSD_ISF_EEEESJ_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i32, %"class.std::__1::vector.70"*, %"class.std::__1::vector.70"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver17OnTreeDataChangedEPNS_6AXTreeERKNS_10AXTreeDataES5_(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"struct.ui::AXTreeData"*, %"struct.ui::AXTreeData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver19OnNodeWillBeDeletedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver22OnSubtreeWillBeDeletedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver22OnNodeWillBeReparentedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver25OnSubtreeWillBeReparentedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver13OnNodeCreatedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver13OnNodeDeletedEPNS_6AXTreeEi(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver16OnNodeReparentedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver13OnNodeChangedEPNS_6AXTreeEPNS_6AXNodeE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver26OnTreeManagerWillBeRemovedENS_8AXTreeIDE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTreeID"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui14AXTreeObserver22OnAtomicUpdateFinishedEPNS_6AXTreeEbRKNSt3__16vectorINS0_6ChangeENS3_9allocatorIS5_EEEE(%"class.ui::AXTreeObserver"*, %"class.ui::AXTree"*, i1 zeroext, %"class.std::__1::vector.72"*) unnamed_addr #0 comdat align 2 {
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
