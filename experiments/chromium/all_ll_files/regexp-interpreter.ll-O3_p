; ModuleID = '../../v8/src/regexp/regexp-interpreter.cc'
source_filename = "../../v8/src/regexp/regexp-interpreter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.969"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.978", i32, i8, i8, i32, i32, %"class.std::__1::vector.984", %"class.std::__1::vector.984", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.991", i64, %"class.std::__1::unordered_map.992", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1048", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1086", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1120", %"class.std::__1::vector.1124", %"class.std::__1::vector.1124", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1142" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.1143" }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type { [512 x i8], %"struct.v8::internal::RegExpStack::ThreadLocal", %"class.v8::internal::Isolate"* }
%"struct.v8::internal::RegExpStack::ThreadLocal" = type <{ i8*, i8*, i64, i64, i8, i8, [6 x i8] }>
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1141, i32, [4 x i8] }>
%union.anon.1141 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.956, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon.956 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.964" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"class.std::__1::__compressed_pair.959" }
%"struct.std::__1::pair.958" = type opaque
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"struct.std::__1::pair.958"** }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.969" = type { %"class.std::__1::__vector_base.970" }
%"class.std::__1::__vector_base.970" = type { %"class.v8::internal::Handle.971"*, %"class.v8::internal::Handle.971"*, %"class.std::__1::__compressed_pair.972" }
%"class.v8::internal::Handle.971" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.v8::internal::Handle.971"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.977", [128 x i8] }
%"class.v8::internal::Vector.977" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.984" = type { %"class.std::__1::__vector_base.985" }
%"class.std::__1::__vector_base.985" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.991" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.992" = type { %"class.std::__1::__hash_table.993" }
%"class.std::__1::__hash_table.993" = type <{ %"class.std::__1::unique_ptr.994", %"class.std::__1::__compressed_pair.1004", %"class.std::__1::__compressed_pair.1009", %"class.std::__1::__compressed_pair.1012", [4 x i8] }>
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996", %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"struct.std::__1::__hash_node_base.997"** }
%"struct.std::__1::__hash_node_base.997" = type { %"struct.std::__1::__hash_node_base.997"* }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.std::__1::__bucket_list_deallocator.999" }
%"class.std::__1::__bucket_list_deallocator.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"struct.std::__1::__hash_node_base.997" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1016", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1045", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1046", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1016" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1041, %union.anon.1043, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1041 = type { i64 }
%union.anon.1043 = type { i64 }
%"class.std::__1::weak_ptr.1045" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1046" = type { %"class.v8::PersistentBase.1047" }
%"class.v8::PersistentBase.1047" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1017", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1017" = type { %"class.std::__1::__hash_table.1018" }
%"class.std::__1::__hash_table.1018" = type <{ %"class.std::__1::unique_ptr.1019", %"class.std::__1::__compressed_pair.1029", %"class.std::__1::__compressed_pair.1034", %"class.std::__1::__compressed_pair.1037", [4 x i8] }>
%"class.std::__1::unique_ptr.1019" = type { %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021", %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"struct.std::__1::__hash_node_base.1022"** }
%"struct.std::__1::__hash_node_base.1022" = type { %"struct.std::__1::__hash_node_base.1022"* }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.std::__1::__bucket_list_deallocator.1024" }
%"class.std::__1::__bucket_list_deallocator.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"struct.std::__1::__hash_node_base.1022" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1077", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1053", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1057", %"class.std::__1::unique_ptr.1063", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1069", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1053" = type { %"struct.std::__1::__atomic_base.1054" }
%"struct.std::__1::__atomic_base.1054" = type { %"struct.std::__1::__cxx_atomic_impl.1055" }
%"struct.std::__1::__cxx_atomic_impl.1055" = type { %"struct.std::__1::__cxx_atomic_base_impl.1056" }
%"struct.std::__1::__cxx_atomic_base_impl.1056" = type { i32 }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1069" = type { %"class.std::__1::__vector_base.1070" }
%"class.std::__1::__vector_base.1070" = type { %"struct.std::__1::pair.1071"*, %"struct.std::__1::pair.1071"*, %"class.std::__1::__compressed_pair.1072" }
%"struct.std::__1::pair.1071" = type opaque
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"struct.std::__1::pair.1071"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1094" }
%"class.std::__1::unordered_map.1094" = type { %"class.std::__1::__hash_table.1095" }
%"class.std::__1::__hash_table.1095" = type <{ %"class.std::__1::unique_ptr.1096", %"class.std::__1::__compressed_pair.1106", %"class.std::__1::__compressed_pair.1111", %"class.std::__1::__compressed_pair.1114", [4 x i8] }>
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098", %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"struct.std::__1::__hash_node_base.1099"** }
%"struct.std::__1::__hash_node_base.1099" = type { %"struct.std::__1::__hash_node_base.1099"* }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.std::__1::__bucket_list_deallocator.1101" }
%"class.std::__1::__bucket_list_deallocator.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"struct.std::__1::__hash_node_base.1099" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1120" = type { %"struct.std::__1::__atomic_base.1121" }
%"struct.std::__1::__atomic_base.1121" = type { %"struct.std::__1::__cxx_atomic_impl.1122" }
%"struct.std::__1::__cxx_atomic_impl.1122" = type { %"struct.std::__1::__cxx_atomic_base_impl.1123" }
%"struct.std::__1::__cxx_atomic_base_impl.1123" = type { %"class.std::__1::vector.1124"* }
%"class.std::__1::vector.1124" = type { %"class.std::__1::__vector_base.1125" }
%"class.std::__1::__vector_base.1125" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1126" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::JSRegExp" = type { %"class.v8::internal::TorqueGeneratedJSRegExp" }
%"class.v8::internal::TorqueGeneratedJSRegExp" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::CombinationAssertScope" = type { i8 }
%"class.v8::internal::String::FlatContent" = type { %union.anon.1134, i32, i32, %"class.v8::internal::CombinationAssertScope"* }
%union.anon.1134 = type { i8* }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::StackLimitCheck" = type { %"class.v8::internal::Isolate"* }
%"class.v8::internal::(anonymous namespace)::InterpreterRegisters" = type <{ %"class.v8::base::SmallVector", i32*, i32, [4 x i8] }>
%"class.v8::base::SmallVector" = type { i32*, i32*, i32*, %"struct.std::__1::aligned_storage<256, 4>::type" }
%"struct.std::__1::aligned_storage<256, 4>::type" = type { [256 x i8] }
%"class.v8::internal::(anonymous namespace)::BacktrackStack" = type { %"class.v8::base::SmallVector" }
%"class.v8::internal::PerIsolateAssertScope" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>

$_ZN2v84base11SmallVectorIiLm64EE4GrowEm = comdat any

$_ZN2v84base11SmallVectorIiLm64EE4GrowEv = comdat any

@_ZN2v88internal19FLAG_regexp_tier_upE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"TypeTag() == IRREGEXP\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table = internal unnamed_addr constant [64 x i8*] [i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %86), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %87), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %126), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %155), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %220), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %237), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %251), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %269), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %186), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %202), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %296), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %308), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %472), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %488), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %492), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %515), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %526), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %584), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %616), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %632), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %672), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %695), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %749), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %786), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %809), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %831), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %854), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %876), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %903), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %928), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %955), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %980), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1011), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1041), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1071), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1101), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1123), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1258), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1432), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1359), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1309), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1577), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1505), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1227), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1145), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1173), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1201), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1649), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1672), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %556), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %540), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1695), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1716), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1939), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1804), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1742), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1874), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %2098), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %2008), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %86), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %86), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %86), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %86), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %86)], align 16
@.str.2 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.3 = private unnamed_addr constant [53 x i8] c"Fatal process out of memory: base::SmallVector::Grow\00", align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"call_origin == RegExp::CallOrigin::kFromRuntime\00", align 1
@_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table = internal unnamed_addr constant [64 x i8*] [i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %86), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %87), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %126), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %155), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %220), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %237), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %251), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %269), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %186), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %202), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %296), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %308), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %472), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %488), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %492), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %515), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %526), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %584), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %616), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %632), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %672), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %695), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %749), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %786), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %809), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %831), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %854), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %876), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %903), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %928), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %955), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %980), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1011), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1041), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1071), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1101), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1123), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1258), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1419), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1365), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1312), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1526), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1473), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1227), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1145), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1173), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1201), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1579), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1602), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %556), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %540), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1625), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1646), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1867), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1733), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1672), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1803), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %2025), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %1936), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %86), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %86), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %86), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %86), i8* blockaddress(@_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj, %86)], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal19IrregexpInterpreter5MatchEPNS0_7IsolateENS0_8JSRegExpENS0_6StringEPiiiNS0_6RegExp10CallOriginE(%"class.v8::internal::Isolate"*, i64, i64, i32*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::JSRegExp", align 8
  %9 = getelementptr inbounds %"class.v8::internal::JSRegExp", %"class.v8::internal::JSRegExp"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %9, align 8
  %10 = load i8, i8* @_ZN2v88internal19FLAG_regexp_tier_upE, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  call void @_ZN2v88internal8JSRegExp10TierUpTickEv(%"class.v8::internal::JSRegExp"* nonnull %8) #8
  br label %13

13:                                               ; preds = %7, %12
  br label %14

14:                                               ; preds = %13, %27
  %15 = phi i64 [ %32, %27 ], [ %2, %13 ]
  %16 = and i64 %15, -4294967296
  %17 = add i64 %15, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %16, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = and i16 %24, 9
  %26 = zext i16 %25 to i32
  switch i32 %26, label %27 [
    i32 8, label %34
    i32 0, label %33
  ]

27:                                               ; preds = %14
  %28 = add i64 %15, 11
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %16, %31
  br label %14

33:                                               ; preds = %14
  br label %34

34:                                               ; preds = %14, %33
  %35 = phi i1 [ false, %33 ], [ true, %14 ]
  %36 = call i64 @_ZNK2v88internal8JSRegExp8BytecodeEb(%"class.v8::internal::JSRegExp"* nonnull %8, i1 zeroext %35) #8
  %37 = load i64, i64* %9, align 8
  %38 = and i64 %37, -4294967296
  %39 = add i64 %37, 11
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = and i64 %42, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %69, label %46

46:                                               ; preds = %34
  %47 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %48 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %47, i64 0, i32 0, i32 1
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %47, i64 0, i32 1, i64 0
  br label %63

55:                                               ; preds = %49, %46
  %56 = and i64 %43, -262144
  %57 = or i64 %56, 16
  %58 = inttoptr i64 %57 to i64*
  %59 = load i64, i64* %58, align 16
  %60 = add i64 %59, -41416
  %61 = inttoptr i64 %60 to %"class.v8::internal::Isolate"*
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %63

63:                                               ; preds = %55, %53
  %64 = phi i64* [ %62, %55 ], [ %54, %53 ]
  %65 = getelementptr inbounds i64, i64* %64, i64 4
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %41, %67
  br i1 %68, label %75, label %69

69:                                               ; preds = %63, %34
  %70 = add i64 %43, 7
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, -2
  %74 = icmp eq i32 %73, 4
  br i1 %74, label %76, label %75, !prof !3

75:                                               ; preds = %69, %63
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0)) #9
  unreachable

76:                                               ; preds = %69
  %77 = add i64 %43, 35
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = ashr i32 %79, 1
  %81 = call i32 @_ZNK2v88internal8JSRegExp14BacktrackLimitEv(%"class.v8::internal::JSRegExp"* nonnull %8) #8
  %82 = call i32 @_ZN2v88internal19IrregexpInterpreter13MatchInternalEPNS0_7IsolateENS0_9ByteArrayENS0_6StringEPiiiiNS0_6RegExp10CallOriginEj(%"class.v8::internal::Isolate"* %0, i64 %36, i64 %2, i32* %3, i32 %4, i32 %80, i32 %5, i32 %6, i32 %81)
  ret i32 %82
}

declare void @_ZN2v88internal8JSRegExp10TierUpTickEv(%"class.v8::internal::JSRegExp"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i64 @_ZNK2v88internal8JSRegExp8BytecodeEb(%"class.v8::internal::JSRegExp"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal19IrregexpInterpreter13MatchInternalEPNS0_7IsolateENS0_9ByteArrayENS0_6StringEPiiiiNS0_6RegExp10CallOriginEj(%"class.v8::internal::Isolate"*, i64, i64, i32*, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.v8::internal::String", align 8
  %11 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %12 = alloca %"class.v8::internal::String::FlatContent", align 8
  %13 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #8
  %15 = bitcast %"class.v8::internal::String::FlatContent"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %12, %"class.v8::internal::String"* nonnull %10, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %11) #8
  %16 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %12, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %37

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %12, i64 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %12, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = sext i32 %23 to i64
  %25 = icmp eq i32 %6, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = load i64, i64* %13, align 8
  %28 = call fastcc i32 @_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj(%"class.v8::internal::Isolate"* %0, i64 %1, i64 %27, i8* %21, i64 %24, i32* %3, i32 %4, i32 %5, i32 0, i32 10, i32 %7, i32 %8)
  br label %55

29:                                               ; preds = %19
  %30 = add nsw i32 %6, -1
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %21, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = load i64, i64* %13, align 8
  %35 = zext i8 %33 to i32
  %36 = call fastcc i32 @_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj(%"class.v8::internal::Isolate"* %0, i64 %1, i64 %34, i8* %21, i64 %24, i32* %3, i32 %4, i32 %5, i32 %6, i32 %35, i32 %7, i32 %8)
  br label %55

37:                                               ; preds = %9
  %38 = bitcast %"class.v8::internal::String::FlatContent"* %12 to i16**
  %39 = load i16*, i16** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %12, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = icmp eq i32 %6, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = load i64, i64* %13, align 8
  %46 = call fastcc i32 @_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj(%"class.v8::internal::Isolate"* %0, i64 %1, i64 %45, i16* %39, i64 %42, i32* %3, i32 %4, i32 %5, i32 0, i32 10, i32 %7, i32 %8)
  br label %55

47:                                               ; preds = %37
  %48 = add nsw i32 %6, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i16, i16* %39, i64 %49
  %51 = load i16, i16* %50, align 2
  %52 = load i64, i64* %13, align 8
  %53 = zext i16 %51 to i32
  %54 = call fastcc i32 @_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj(%"class.v8::internal::Isolate"* %0, i64 %1, i64 %52, i16* %39, i64 %42, i32* %3, i32 %4, i32 %5, i32 %6, i32 %53, i32 %7, i32 %8)
  br label %55

55:                                               ; preds = %47, %44, %29, %26
  %56 = phi i32 [ %28, %26 ], [ %36, %29 ], [ %46, %44 ], [ %54, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #8
  ret i32 %56
}

declare i32 @_ZNK2v88internal8JSRegExp14BacktrackLimitEv(%"class.v8::internal::JSRegExp"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* sret, %"class.v8::internal::String"*, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj(%"class.v8::internal::Isolate"*, i64, i64, i8*, i64, i32*, i32, i32, i32, i32, i32, i32) #0 {
  %13 = alloca %"class.v8::internal::String::FlatContent", align 8
  %14 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %15 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %16 = alloca %"class.v8::internal::StackLimitCheck", align 8
  %17 = alloca %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", align 8
  %18 = alloca %"class.v8::internal::(anonymous namespace)::BacktrackStack", align 8
  %19 = ptrtoint i8* %3 to i64
  %20 = add i64 %1, 7
  %21 = sext i32 %7 to i64
  %22 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 0, i32 3
  %23 = bitcast %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17 to %"struct.std::__1::aligned_storage<256, 4>::type"**
  store %"struct.std::__1::aligned_storage<256, 4>::type"* %22, %"struct.std::__1::aligned_storage<256, 4>::type"** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 0, i32 1
  %25 = bitcast i32** %24 to %"struct.std::__1::aligned_storage<256, 4>::type"**
  store %"struct.std::__1::aligned_storage<256, 4>::type"* %22, %"struct.std::__1::aligned_storage<256, 4>::type"** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 0, i32 2
  %27 = getelementptr inbounds %"struct.std::__1::aligned_storage<256, 4>::type", %"struct.std::__1::aligned_storage<256, 4>::type"* %22, i64 1
  %28 = bitcast i32** %26 to %"struct.std::__1::aligned_storage<256, 4>::type"**
  store %"struct.std::__1::aligned_storage<256, 4>::type"* %27, %"struct.std::__1::aligned_storage<256, 4>::type"** %28, align 8
  %29 = icmp ugt i32 %7, 64
  %30 = bitcast %"struct.std::__1::aligned_storage<256, 4>::type"* %22 to i32*
  %31 = getelementptr inbounds %"struct.std::__1::aligned_storage<256, 4>::type", %"struct.std::__1::aligned_storage<256, 4>::type"* %22, i64 0, i32 0, i64 0
  br i1 %29, label %32, label %38

32:                                               ; preds = %12
  %33 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 0, i32 0
  %35 = call i32* @_ZN2v84base11SmallVectorIiLm64EE4GrowEm(%"class.v8::base::SmallVector"* nonnull %33, i64 %21) #8
  %36 = load i32*, i32** %34, align 8
  %37 = bitcast i32* %36 to i8*
  br label %38

38:                                               ; preds = %12, %32
  %39 = phi i8* [ %37, %32 ], [ %31, %12 ]
  %40 = phi i32* [ %36, %32 ], [ %30, %12 ]
  %41 = getelementptr inbounds i32, i32* %40, i64 %21
  store i32* %41, i32** %24, align 8
  %42 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 1
  store i32* %5, i32** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 2
  store i32 %6, i32* %43, align 8
  %44 = sext i32 %6 to i64
  %45 = shl nsw i64 %44, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 -1, i64 %45, i1 false) #8
  %46 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BacktrackStack", %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18, i64 0, i32 0, i32 3
  %47 = bitcast %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18 to %"struct.std::__1::aligned_storage<256, 4>::type"**
  store %"struct.std::__1::aligned_storage<256, 4>::type"* %46, %"struct.std::__1::aligned_storage<256, 4>::type"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BacktrackStack", %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18, i64 0, i32 0, i32 1
  %49 = bitcast i32** %48 to %"struct.std::__1::aligned_storage<256, 4>::type"**
  store %"struct.std::__1::aligned_storage<256, 4>::type"* %46, %"struct.std::__1::aligned_storage<256, 4>::type"** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BacktrackStack", %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18, i64 0, i32 0, i32 2
  %51 = getelementptr inbounds %"struct.std::__1::aligned_storage<256, 4>::type", %"struct.std::__1::aligned_storage<256, 4>::type"* %46, i64 1
  %52 = bitcast i32** %50 to %"struct.std::__1::aligned_storage<256, 4>::type"**
  store %"struct.std::__1::aligned_storage<256, 4>::type"* %51, %"struct.std::__1::aligned_storage<256, 4>::type"** %52, align 8
  %53 = inttoptr i64 %20 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 63
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %56
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 0, i32 0
  %60 = bitcast %"class.v8::internal::StackLimitCheck"* %16 to i8*
  %61 = getelementptr inbounds %"class.v8::internal::StackLimitCheck", %"class.v8::internal::StackLimitCheck"* %16, i64 0, i32 0
  %62 = icmp eq i32 %10, 1
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %64 = bitcast %"struct.v8::internal::HandleScopeData"* %63 to i64*
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %71 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %14, i64 0, i32 0
  %72 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %15 to i8*
  %73 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %15, i64 0, i32 0
  %75 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i8*
  %76 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i64*
  %77 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 1
  %78 = icmp eq i32 %10, 0
  %79 = icmp eq %"class.v8::internal::Isolate"* %0, null
  %80 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %63, i64 0, i32 0
  %81 = bitcast i32** %50 to i64*
  %82 = bitcast %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18 to i64*
  %83 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BacktrackStack", %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18, i64 0, i32 0
  %84 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BacktrackStack", %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18, i64 0, i32 0, i32 0
  %85 = bitcast i32** %48 to i64*
  br label %2193

86:                                               ; preds = %2193
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

87:                                               ; preds = %2193
  %88 = inttoptr i64 %2198 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 4
  %90 = bitcast i8* %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, 63
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %93
  %95 = load i8*, i8** %94, align 8
  %96 = load i32*, i32** %48, align 8
  %97 = load i32*, i32** %50, align 8
  %98 = icmp eq i32* %96, %97
  br i1 %98, label %99, label %101, !prof !4

99:                                               ; preds = %87
  %100 = call i32* @_ZN2v84base11SmallVectorIiLm64EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %83) #8
  br label %101

101:                                              ; preds = %87, %99
  %102 = phi i32* [ %100, %99 ], [ %96, %87 ]
  store i32 %2203, i32* %102, align 4
  %103 = getelementptr inbounds i32, i32* %102, i64 1
  store i32* %103, i32** %48, align 8
  %104 = ptrtoint i32* %103 to i64
  %105 = load i64, i64* %82, align 8
  %106 = sub i64 %104, %105
  %107 = lshr exact i64 %106, 2
  %108 = trunc i64 %107 to i32
  %109 = icmp slt i32 %108, 16777217
  br i1 %109, label %113, label %110

110:                                              ; preds = %101
  br i1 %78, label %111, label %2180

111:                                              ; preds = %110
  %112 = call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #8
  br label %2180

113:                                              ; preds = %1695, %1708, %561, %575, %174, %143, %101, %186, %202, %220, %237, %251, %293, %296, %454, %472, %515, %526, %540, %607, %616, %663, %672, %740, %749, %801, %823, %846, %868, %895, %920, %947, %972, %1003, %1033, %1063, %1093, %1115, %1137, %1165, %1193, %1219, %1250, %1285, %1299, %1335, %1349, %1408, %1422, %1481, %1495, %1553, %1567, %1625, %1639, %1664, %1687, %1734, %1767, %1789, %1836, %1859, %1902, %1924, %1970, %1993, %2034, %2060, %2083, %2127, %2143, %2165
  %114 = phi i64 [ %2194, %2034 ], [ %2194, %2060 ], [ %2194, %2083 ], [ %2194, %2127 ], [ %2194, %2143 ], [ %2194, %2165 ], [ %2194, %1924 ], [ %2194, %1902 ], [ %2194, %1767 ], [ %2194, %1789 ], [ %2194, %1859 ], [ %2194, %1836 ], [ %2194, %1970 ], [ %2194, %1993 ], [ %2194, %1734 ], [ %2194, %540 ], [ %2194, %1687 ], [ %2194, %1664 ], [ %2194, %1219 ], [ %2194, %1193 ], [ %2194, %1165 ], [ %2194, %1250 ], [ %2194, %1553 ], [ %2194, %1567 ], [ %2194, %1625 ], [ %2194, %1639 ], [ %2194, %1335 ], [ %2194, %1349 ], [ %2194, %1408 ], [ %2194, %1422 ], [ %2194, %1481 ], [ %2194, %1495 ], [ %2194, %1285 ], [ %2194, %1299 ], [ %2194, %1137 ], [ %2194, %1115 ], [ %2194, %1093 ], [ %2194, %1063 ], [ %2194, %1033 ], [ %2194, %1003 ], [ %2194, %972 ], [ %2194, %947 ], [ %2194, %920 ], [ %2194, %895 ], [ %2194, %868 ], [ %2194, %846 ], [ %2194, %823 ], [ %2194, %801 ], [ %2194, %749 ], [ %2194, %740 ], [ %2194, %672 ], [ %2194, %663 ], [ %2194, %616 ], [ %2194, %607 ], [ %2194, %526 ], [ %2194, %515 ], [ %2194, %472 ], [ %455, %454 ], [ %2194, %296 ], [ %2194, %202 ], [ %2194, %186 ], [ %2194, %293 ], [ %2194, %251 ], [ %2194, %237 ], [ %2194, %220 ], [ %2194, %101 ], [ %2194, %143 ], [ %2194, %174 ], [ %2194, %575 ], [ %2194, %561 ], [ %2194, %1708 ], [ %2194, %1695 ]
  %115 = phi i64 [ %2195, %2034 ], [ %2195, %2060 ], [ %2195, %2083 ], [ %2195, %2127 ], [ %2195, %2143 ], [ %2195, %2165 ], [ %2195, %1924 ], [ %2195, %1902 ], [ %2195, %1767 ], [ %2195, %1789 ], [ %2195, %1859 ], [ %2195, %1836 ], [ %2195, %1970 ], [ %2195, %1993 ], [ %2195, %1734 ], [ %2195, %540 ], [ %2195, %1687 ], [ %2195, %1664 ], [ %2195, %1219 ], [ %2195, %1193 ], [ %2195, %1165 ], [ %2195, %1250 ], [ %2195, %1553 ], [ %2195, %1567 ], [ %2195, %1625 ], [ %2195, %1639 ], [ %2195, %1335 ], [ %2195, %1349 ], [ %2195, %1408 ], [ %2195, %1422 ], [ %2195, %1481 ], [ %2195, %1495 ], [ %2195, %1285 ], [ %2195, %1299 ], [ %2195, %1137 ], [ %2195, %1115 ], [ %2195, %1093 ], [ %2195, %1063 ], [ %2195, %1033 ], [ %2195, %1003 ], [ %2195, %972 ], [ %2195, %947 ], [ %2195, %920 ], [ %2195, %895 ], [ %2195, %868 ], [ %2195, %846 ], [ %2195, %823 ], [ %2195, %801 ], [ %2195, %749 ], [ %2195, %740 ], [ %2195, %672 ], [ %2195, %663 ], [ %2195, %616 ], [ %2195, %607 ], [ %2195, %526 ], [ %2195, %515 ], [ %2195, %472 ], [ %456, %454 ], [ %2195, %296 ], [ %2195, %202 ], [ %2195, %186 ], [ %2195, %293 ], [ %2195, %251 ], [ %2195, %237 ], [ %2195, %220 ], [ %2195, %101 ], [ %2195, %143 ], [ %2195, %174 ], [ %2195, %575 ], [ %2195, %561 ], [ %2195, %1708 ], [ %2195, %1695 ]
  %116 = phi i64 [ %2196, %2034 ], [ %2196, %2060 ], [ %2196, %2083 ], [ %2196, %2127 ], [ %2196, %2143 ], [ %2196, %2165 ], [ %2196, %1924 ], [ %2196, %1902 ], [ %2196, %1767 ], [ %2196, %1789 ], [ %2196, %1859 ], [ %2196, %1836 ], [ %2196, %1970 ], [ %2196, %1993 ], [ %2196, %1734 ], [ %2196, %540 ], [ %2196, %1687 ], [ %2196, %1664 ], [ %2196, %1219 ], [ %2196, %1193 ], [ %2196, %1165 ], [ %2196, %1250 ], [ %2196, %1553 ], [ %2196, %1567 ], [ %2196, %1625 ], [ %2196, %1639 ], [ %2196, %1335 ], [ %2196, %1349 ], [ %2196, %1408 ], [ %2196, %1422 ], [ %2196, %1481 ], [ %2196, %1495 ], [ %2196, %1285 ], [ %2196, %1299 ], [ %2196, %1137 ], [ %2196, %1115 ], [ %2196, %1093 ], [ %2196, %1063 ], [ %2196, %1033 ], [ %2196, %1003 ], [ %2196, %972 ], [ %2196, %947 ], [ %2196, %920 ], [ %2196, %895 ], [ %2196, %868 ], [ %2196, %846 ], [ %2196, %823 ], [ %2196, %801 ], [ %2196, %749 ], [ %2196, %740 ], [ %2196, %672 ], [ %2196, %663 ], [ %2196, %616 ], [ %2196, %607 ], [ %2196, %526 ], [ %2196, %515 ], [ %2196, %472 ], [ %457, %454 ], [ %2196, %296 ], [ %2196, %202 ], [ %2196, %186 ], [ %2196, %293 ], [ %2196, %251 ], [ %2196, %237 ], [ %2196, %220 ], [ %2196, %101 ], [ %2196, %143 ], [ %2196, %174 ], [ %2196, %575 ], [ %2196, %561 ], [ %2196, %1708 ], [ %2196, %1695 ]
  %117 = phi i64 [ %2197, %2034 ], [ %2197, %2060 ], [ %2197, %2083 ], [ %2197, %2127 ], [ %2197, %2143 ], [ %2197, %2165 ], [ %2197, %1924 ], [ %2197, %1902 ], [ %2197, %1767 ], [ %2197, %1789 ], [ %2197, %1859 ], [ %2197, %1836 ], [ %2197, %1970 ], [ %2197, %1993 ], [ %2197, %1734 ], [ %2197, %540 ], [ %2197, %1687 ], [ %2197, %1664 ], [ %2197, %1219 ], [ %2197, %1193 ], [ %2197, %1165 ], [ %2197, %1250 ], [ %2197, %1553 ], [ %2197, %1567 ], [ %2197, %1625 ], [ %2197, %1639 ], [ %2197, %1335 ], [ %2197, %1349 ], [ %2197, %1408 ], [ %2197, %1422 ], [ %2197, %1481 ], [ %2197, %1495 ], [ %2197, %1285 ], [ %2197, %1299 ], [ %2197, %1137 ], [ %2197, %1115 ], [ %2197, %1093 ], [ %2197, %1063 ], [ %2197, %1033 ], [ %2197, %1003 ], [ %2197, %972 ], [ %2197, %947 ], [ %2197, %920 ], [ %2197, %895 ], [ %2197, %868 ], [ %2197, %846 ], [ %2197, %823 ], [ %2197, %801 ], [ %2197, %749 ], [ %2197, %740 ], [ %2197, %672 ], [ %2197, %663 ], [ %2197, %616 ], [ %2197, %607 ], [ %2197, %526 ], [ %2197, %515 ], [ %2197, %472 ], [ %458, %454 ], [ %2197, %296 ], [ %2197, %202 ], [ %2197, %186 ], [ %2197, %293 ], [ %2197, %251 ], [ %2197, %237 ], [ %2197, %220 ], [ %2197, %101 ], [ %2197, %143 ], [ %2197, %174 ], [ %2197, %575 ], [ %2197, %561 ], [ %2197, %1708 ], [ %2197, %1695 ]
  %118 = phi i8* [ %2042, %2034 ], [ %2068, %2060 ], [ %2091, %2083 ], [ %2134, %2127 ], [ %2150, %2143 ], [ %2173, %2165 ], [ %1932, %1924 ], [ %1909, %1902 ], [ %1774, %1767 ], [ %1797, %1789 ], [ %1867, %1859 ], [ %1844, %1836 ], [ %1978, %1970 ], [ %2001, %1993 ], [ %1735, %1734 ], [ %547, %540 ], [ %1688, %1687 ], [ %1665, %1664 ], [ %1220, %1219 ], [ %1194, %1193 ], [ %1166, %1165 ], [ %1251, %1250 ], [ %1560, %1553 ], [ %1570, %1567 ], [ %1632, %1625 ], [ %1642, %1639 ], [ %1342, %1335 ], [ %1352, %1349 ], [ %1415, %1408 ], [ %1425, %1422 ], [ %1488, %1481 ], [ %1498, %1495 ], [ %1292, %1285 ], [ %1302, %1299 ], [ %1138, %1137 ], [ %1116, %1115 ], [ %1094, %1093 ], [ %1064, %1063 ], [ %1034, %1033 ], [ %1004, %1003 ], [ %973, %972 ], [ %948, %947 ], [ %921, %920 ], [ %896, %895 ], [ %869, %868 ], [ %847, %846 ], [ %824, %823 ], [ %802, %801 ], [ %751, %749 ], [ %741, %740 ], [ %674, %672 ], [ %664, %663 ], [ %618, %616 ], [ %608, %607 ], [ %533, %526 ], [ %517, %515 ], [ %474, %472 ], [ %465, %454 ], [ %298, %296 ], [ %204, %202 ], [ %188, %186 ], [ %271, %293 ], [ %253, %251 ], [ %239, %237 ], [ %222, %220 ], [ %89, %101 ], [ %128, %143 ], [ %157, %174 ], [ %577, %575 ], [ %568, %561 ], [ %1697, %1708 ], [ %1697, %1695 ]
  %119 = phi i64 [ %2199, %2034 ], [ %2199, %2060 ], [ %2199, %2083 ], [ %2199, %2127 ], [ %2199, %2143 ], [ %2199, %2165 ], [ %2199, %1924 ], [ %2199, %1902 ], [ %2199, %1767 ], [ %2199, %1789 ], [ %2199, %1859 ], [ %2199, %1836 ], [ %2199, %1970 ], [ %2199, %1993 ], [ %2199, %1734 ], [ %2199, %540 ], [ %2199, %1687 ], [ %2199, %1664 ], [ %2199, %1219 ], [ %2199, %1193 ], [ %2199, %1165 ], [ %2199, %1250 ], [ %2199, %1553 ], [ %2199, %1567 ], [ %2199, %1625 ], [ %2199, %1639 ], [ %2199, %1335 ], [ %2199, %1349 ], [ %2199, %1408 ], [ %2199, %1422 ], [ %2199, %1481 ], [ %2199, %1495 ], [ %2199, %1285 ], [ %2199, %1299 ], [ %2199, %1137 ], [ %2199, %1115 ], [ %2199, %1093 ], [ %2199, %1063 ], [ %2199, %1033 ], [ %2199, %1003 ], [ %2199, %972 ], [ %2199, %947 ], [ %2199, %920 ], [ %2199, %895 ], [ %2199, %868 ], [ %2199, %846 ], [ %2199, %823 ], [ %2199, %801 ], [ %2199, %749 ], [ %2199, %740 ], [ %2199, %672 ], [ %2199, %663 ], [ %2199, %616 ], [ %2199, %607 ], [ %2199, %526 ], [ %2199, %515 ], [ %2199, %472 ], [ %459, %454 ], [ %2199, %296 ], [ %2199, %202 ], [ %2199, %186 ], [ %2199, %293 ], [ %2199, %251 ], [ %2199, %237 ], [ %2199, %220 ], [ %2199, %101 ], [ %2199, %143 ], [ %2199, %174 ], [ %2199, %575 ], [ %2199, %561 ], [ %2199, %1708 ], [ %2199, %1695 ]
  %120 = phi i32 [ %2044, %2034 ], [ %2070, %2060 ], [ %2093, %2083 ], [ %2136, %2127 ], [ %2152, %2143 ], [ %2175, %2165 ], [ %1934, %1924 ], [ %1911, %1902 ], [ %1776, %1767 ], [ %1799, %1789 ], [ %1869, %1859 ], [ %1846, %1836 ], [ %1980, %1970 ], [ %2003, %1993 ], [ %1737, %1734 ], [ %549, %540 ], [ %1690, %1687 ], [ %1667, %1664 ], [ %1222, %1219 ], [ %1196, %1193 ], [ %1168, %1165 ], [ %1253, %1250 ], [ %1562, %1553 ], [ %1572, %1567 ], [ %1634, %1625 ], [ %1644, %1639 ], [ %1344, %1335 ], [ %1354, %1349 ], [ %1417, %1408 ], [ %1427, %1422 ], [ %1490, %1481 ], [ %1500, %1495 ], [ %1294, %1285 ], [ %1304, %1299 ], [ %1140, %1137 ], [ %1118, %1115 ], [ %1096, %1093 ], [ %1066, %1063 ], [ %1036, %1033 ], [ %1006, %1003 ], [ %975, %972 ], [ %950, %947 ], [ %923, %920 ], [ %898, %895 ], [ %871, %868 ], [ %849, %846 ], [ %826, %823 ], [ %804, %801 ], [ %753, %749 ], [ %744, %740 ], [ %676, %672 ], [ %667, %663 ], [ %620, %616 ], [ %611, %607 ], [ %535, %526 ], [ %519, %515 ], [ %476, %472 ], [ %467, %454 ], [ %300, %296 ], [ %206, %202 ], [ %190, %186 ], [ %273, %293 ], [ %255, %251 ], [ %241, %237 ], [ %224, %220 ], [ %91, %101 ], [ %130, %143 ], [ %159, %174 ], [ %579, %575 ], [ %570, %561 ], [ %1699, %1708 ], [ %1699, %1695 ]
  %121 = phi i32 [ %2201, %2034 ], [ %2201, %2060 ], [ %2201, %2083 ], [ %2201, %2127 ], [ %2201, %2143 ], [ %2201, %2165 ], [ %2201, %1924 ], [ %2201, %1902 ], [ %2201, %1767 ], [ %2201, %1789 ], [ %2201, %1859 ], [ %2201, %1836 ], [ %2201, %1970 ], [ %2201, %1993 ], [ %2201, %1734 ], [ %2201, %540 ], [ %2201, %1687 ], [ %2201, %1664 ], [ %2201, %1219 ], [ %2201, %1193 ], [ %2201, %1165 ], [ %2201, %1250 ], [ %2201, %1553 ], [ %2201, %1567 ], [ %2201, %1625 ], [ %2201, %1639 ], [ %2201, %1335 ], [ %2201, %1349 ], [ %2201, %1408 ], [ %2201, %1422 ], [ %2201, %1481 ], [ %2201, %1495 ], [ %2201, %1285 ], [ %2201, %1299 ], [ %2201, %1137 ], [ %2201, %1115 ], [ %2201, %1093 ], [ %2201, %1063 ], [ %2201, %1033 ], [ %2201, %1003 ], [ %2201, %972 ], [ %2201, %947 ], [ %2201, %920 ], [ %2201, %895 ], [ %2201, %868 ], [ %2201, %846 ], [ %2201, %823 ], [ %2201, %801 ], [ %2201, %749 ], [ %2201, %740 ], [ %2201, %672 ], [ %2201, %663 ], [ %2201, %616 ], [ %2201, %607 ], [ %2201, %526 ], [ %2201, %515 ], [ %2201, %472 ], [ %309, %454 ], [ %2201, %296 ], [ %2201, %202 ], [ %2201, %186 ], [ %2201, %293 ], [ %2201, %251 ], [ %2201, %237 ], [ %2201, %220 ], [ %2201, %101 ], [ %2201, %143 ], [ %2201, %174 ], [ %2201, %575 ], [ %2201, %561 ], [ %2201, %1708 ], [ %2201, %1695 ]
  %122 = phi i32 [ %2035, %2034 ], [ %2061, %2060 ], [ %2084, %2083 ], [ %2104, %2127 ], [ %2108, %2143 ], [ %2166, %2165 ], [ %1925, %1924 ], [ %1879, %1902 ], [ %1748, %1767 ], [ %1790, %1789 ], [ %1860, %1859 ], [ %1837, %1836 ], [ %1971, %1970 ], [ %1994, %1993 ], [ %2202, %1734 ], [ %2202, %540 ], [ %2202, %1687 ], [ %2202, %1664 ], [ %2202, %1219 ], [ %2202, %1193 ], [ %2202, %1165 ], [ %2202, %1250 ], [ %2202, %1553 ], [ %2202, %1567 ], [ %2202, %1625 ], [ %2202, %1639 ], [ %2202, %1335 ], [ %2202, %1349 ], [ %2202, %1408 ], [ %2202, %1422 ], [ %2202, %1481 ], [ %2202, %1495 ], [ %2202, %1285 ], [ %2202, %1299 ], [ %2202, %1137 ], [ %2202, %1115 ], [ %2202, %1093 ], [ %2202, %1063 ], [ %2202, %1033 ], [ %2202, %1003 ], [ %2202, %972 ], [ %2202, %947 ], [ %2202, %920 ], [ %2202, %895 ], [ %2202, %868 ], [ %2202, %846 ], [ %2202, %823 ], [ %2202, %801 ], [ %785, %749 ], [ %742, %740 ], [ %694, %672 ], [ %665, %663 ], [ %631, %616 ], [ %609, %607 ], [ %2202, %526 ], [ %2202, %515 ], [ %2202, %472 ], [ %2202, %454 ], [ %2202, %296 ], [ %2202, %202 ], [ %2202, %186 ], [ %2202, %293 ], [ %2202, %251 ], [ %2202, %237 ], [ %2202, %220 ], [ %2202, %101 ], [ %2202, %143 ], [ %2202, %174 ], [ %2202, %575 ], [ %2202, %561 ], [ %1715, %1708 ], [ %2202, %1695 ]
  %123 = phi i32 [ %2036, %2034 ], [ %2062, %2060 ], [ %2085, %2083 ], [ %2128, %2127 ], [ %2144, %2143 ], [ %2167, %2165 ], [ %1926, %1924 ], [ %1903, %1902 ], [ %1768, %1767 ], [ %1791, %1789 ], [ %1861, %1859 ], [ %1838, %1836 ], [ %1972, %1970 ], [ %1995, %1993 ], [ %2203, %1734 ], [ %555, %540 ], [ %2203, %1687 ], [ %2203, %1664 ], [ %2203, %1219 ], [ %2203, %1193 ], [ %2203, %1165 ], [ %2203, %1250 ], [ %2203, %1553 ], [ %1568, %1567 ], [ %2203, %1625 ], [ %1640, %1639 ], [ %2203, %1335 ], [ %1350, %1349 ], [ %2203, %1408 ], [ %1423, %1422 ], [ %2203, %1481 ], [ %1496, %1495 ], [ %2203, %1285 ], [ %1300, %1299 ], [ %2203, %1137 ], [ %2203, %1115 ], [ %2203, %1093 ], [ %2203, %1063 ], [ %2203, %1033 ], [ %2203, %1003 ], [ %2203, %972 ], [ %2203, %947 ], [ %2203, %920 ], [ %2203, %895 ], [ %2203, %868 ], [ %2203, %846 ], [ %2203, %823 ], [ %2203, %801 ], [ %2203, %749 ], [ %2203, %740 ], [ %2203, %672 ], [ %2203, %663 ], [ %2203, %616 ], [ %2203, %607 ], [ %2203, %526 ], [ %525, %515 ], [ %2203, %472 ], [ %2203, %454 ], [ %307, %296 ], [ %2203, %202 ], [ %2203, %186 ], [ %2203, %293 ], [ %2203, %251 ], [ %250, %237 ], [ %2203, %220 ], [ %2203, %101 ], [ %2203, %143 ], [ %2203, %174 ], [ %2203, %575 ], [ %2203, %561 ], [ %1709, %1708 ], [ %2203, %1695 ]
  %124 = phi i8* [ %2048, %2034 ], [ %2074, %2060 ], [ %2097, %2083 ], [ %2140, %2127 ], [ %2156, %2143 ], [ %2179, %2165 ], [ %1938, %1924 ], [ %1915, %1902 ], [ %1780, %1767 ], [ %1803, %1789 ], [ %1873, %1859 ], [ %1850, %1836 ], [ %1984, %1970 ], [ %2007, %1993 ], [ %1741, %1734 ], [ %553, %540 ], [ %1694, %1687 ], [ %1671, %1664 ], [ %1226, %1219 ], [ %1200, %1193 ], [ %1172, %1165 ], [ %1257, %1250 ], [ %1566, %1553 ], [ %1576, %1567 ], [ %1638, %1625 ], [ %1648, %1639 ], [ %1348, %1335 ], [ %1358, %1349 ], [ %1421, %1408 ], [ %1431, %1422 ], [ %1494, %1481 ], [ %1504, %1495 ], [ %1298, %1285 ], [ %1308, %1299 ], [ %1144, %1137 ], [ %1122, %1115 ], [ %1100, %1093 ], [ %1070, %1063 ], [ %1040, %1033 ], [ %1010, %1003 ], [ %979, %972 ], [ %954, %947 ], [ %927, %920 ], [ %902, %895 ], [ %875, %868 ], [ %853, %846 ], [ %830, %823 ], [ %808, %801 ], [ %757, %749 ], [ %748, %740 ], [ %680, %672 ], [ %671, %663 ], [ %624, %616 ], [ %615, %607 ], [ %539, %526 ], [ %523, %515 ], [ %480, %472 ], [ %471, %454 ], [ %304, %296 ], [ %210, %202 ], [ %194, %186 ], [ %277, %293 ], [ %259, %251 ], [ %245, %237 ], [ %228, %220 ], [ %95, %101 ], [ %134, %143 ], [ %163, %174 ], [ %583, %575 ], [ %574, %561 ], [ %1703, %1708 ], [ %1703, %1695 ]
  %125 = ptrtoint i8* %118 to i64
  br label %2193

126:                                              ; preds = %2193
  %127 = inttoptr i64 %2198 to i8*
  %128 = getelementptr inbounds i8, i8* %127, i64 8
  %129 = bitcast i8* %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = and i32 %130, 63
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %132
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr inbounds i8, i8* %127, i64 4
  %136 = bitcast i8* %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = load i32*, i32** %48, align 8
  %139 = load i32*, i32** %50, align 8
  %140 = icmp eq i32* %138, %139
  br i1 %140, label %141, label %143, !prof !4

141:                                              ; preds = %126
  %142 = call i32* @_ZN2v84base11SmallVectorIiLm64EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %83) #8
  br label %143

143:                                              ; preds = %126, %141
  %144 = phi i32* [ %142, %141 ], [ %138, %126 ]
  store i32 %137, i32* %144, align 4
  %145 = getelementptr inbounds i32, i32* %144, i64 1
  store i32* %145, i32** %48, align 8
  %146 = ptrtoint i32* %145 to i64
  %147 = load i64, i64* %82, align 8
  %148 = sub i64 %146, %147
  %149 = lshr exact i64 %148, 2
  %150 = trunc i64 %149 to i32
  %151 = icmp slt i32 %150, 16777217
  br i1 %151, label %113, label %152

152:                                              ; preds = %143
  br i1 %78, label %153, label %2180

153:                                              ; preds = %152
  %154 = call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #8
  br label %2180

155:                                              ; preds = %2193
  %156 = inttoptr i64 %2198 to i8*
  %157 = getelementptr inbounds i8, i8* %156, i64 4
  %158 = bitcast i8* %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = and i32 %159, 63
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %161
  %163 = load i8*, i8** %162, align 8
  %164 = lshr i32 %2200, 8
  %165 = zext i32 %164 to i64
  %166 = load i32*, i32** %59, align 8
  %167 = getelementptr inbounds i32, i32* %166, i64 %165
  %168 = load i32, i32* %167, align 4
  %169 = load i32*, i32** %48, align 8
  %170 = load i32*, i32** %50, align 8
  %171 = icmp eq i32* %169, %170
  br i1 %171, label %172, label %174, !prof !4

172:                                              ; preds = %155
  %173 = call i32* @_ZN2v84base11SmallVectorIiLm64EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %83) #8
  br label %174

174:                                              ; preds = %155, %172
  %175 = phi i32* [ %173, %172 ], [ %169, %155 ]
  store i32 %168, i32* %175, align 4
  %176 = getelementptr inbounds i32, i32* %175, i64 1
  store i32* %176, i32** %48, align 8
  %177 = ptrtoint i32* %176 to i64
  %178 = load i64, i64* %82, align 8
  %179 = sub i64 %177, %178
  %180 = lshr exact i64 %179, 2
  %181 = trunc i64 %180 to i32
  %182 = icmp slt i32 %181, 16777217
  br i1 %182, label %113, label %183

183:                                              ; preds = %174
  br i1 %78, label %184, label %2180

184:                                              ; preds = %183
  %185 = call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #8
  br label %2180

186:                                              ; preds = %2193
  %187 = inttoptr i64 %2198 to i8*
  %188 = getelementptr inbounds i8, i8* %187, i64 8
  %189 = bitcast i8* %188 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = and i32 %190, 63
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %192
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr inbounds i8, i8* %187, i64 4
  %196 = bitcast i8* %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = lshr i32 %2200, 8
  %199 = zext i32 %198 to i64
  %200 = load i32*, i32** %59, align 8
  %201 = getelementptr inbounds i32, i32* %200, i64 %199
  store i32 %197, i32* %201, align 4
  br label %113

202:                                              ; preds = %2193
  %203 = inttoptr i64 %2198 to i8*
  %204 = getelementptr inbounds i8, i8* %203, i64 8
  %205 = bitcast i8* %204 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = and i32 %206, 63
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %208
  %210 = load i8*, i8** %209, align 8
  %211 = getelementptr inbounds i8, i8* %203, i64 4
  %212 = bitcast i8* %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = lshr i32 %2200, 8
  %215 = zext i32 %214 to i64
  %216 = load i32*, i32** %59, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 %215
  %218 = load i32, i32* %217, align 4
  %219 = add nsw i32 %218, %213
  store i32 %219, i32* %217, align 4
  br label %113

220:                                              ; preds = %2193
  %221 = inttoptr i64 %2198 to i8*
  %222 = getelementptr inbounds i8, i8* %221, i64 8
  %223 = bitcast i8* %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = and i32 %224, 63
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %226
  %228 = load i8*, i8** %227, align 8
  %229 = getelementptr inbounds i8, i8* %221, i64 4
  %230 = bitcast i8* %229 to i32*
  %231 = load i32, i32* %230, align 4
  %232 = add nsw i32 %231, %2203
  %233 = lshr i32 %2200, 8
  %234 = zext i32 %233 to i64
  %235 = load i32*, i32** %59, align 8
  %236 = getelementptr inbounds i32, i32* %235, i64 %234
  store i32 %232, i32* %236, align 4
  br label %113

237:                                              ; preds = %2193
  %238 = inttoptr i64 %2198 to i8*
  %239 = getelementptr inbounds i8, i8* %238, i64 4
  %240 = bitcast i8* %239 to i32*
  %241 = load i32, i32* %240, align 4
  %242 = and i32 %241, 63
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %243
  %245 = load i8*, i8** %244, align 8
  %246 = lshr i32 %2200, 8
  %247 = zext i32 %246 to i64
  %248 = load i32*, i32** %59, align 8
  %249 = getelementptr inbounds i32, i32* %248, i64 %247
  %250 = load i32, i32* %249, align 4
  br label %113

251:                                              ; preds = %2193
  %252 = inttoptr i64 %2198 to i8*
  %253 = getelementptr inbounds i8, i8* %252, i64 4
  %254 = bitcast i8* %253 to i32*
  %255 = load i32, i32* %254, align 4
  %256 = and i32 %255, 63
  %257 = zext i32 %256 to i64
  %258 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %257
  %259 = load i8*, i8** %258, align 8
  %260 = load i64, i64* %85, align 8
  %261 = load i64, i64* %82, align 8
  %262 = sub i64 %260, %261
  %263 = lshr exact i64 %262, 2
  %264 = trunc i64 %263 to i32
  %265 = lshr i32 %2200, 8
  %266 = zext i32 %265 to i64
  %267 = load i32*, i32** %59, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 %266
  store i32 %264, i32* %268, align 4
  br label %113

269:                                              ; preds = %2193
  %270 = inttoptr i64 %2198 to i8*
  %271 = getelementptr inbounds i8, i8* %270, i64 4
  %272 = bitcast i8* %271 to i32*
  %273 = load i32, i32* %272, align 4
  %274 = and i32 %273, 63
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %275
  %277 = load i8*, i8** %276, align 8
  %278 = lshr i32 %2200, 8
  %279 = zext i32 %278 to i64
  %280 = load i32*, i32** %59, align 8
  %281 = getelementptr inbounds i32, i32* %280, i64 %279
  %282 = load i32, i32* %281, align 4
  %283 = sext i32 %282 to i64
  %284 = load i64, i64* %81, align 8
  %285 = load i64, i64* %82, align 8
  %286 = sub i64 %284, %285
  %287 = ashr exact i64 %286, 2
  %288 = icmp ult i64 %287, %283
  %289 = inttoptr i64 %285 to i32*
  br i1 %288, label %290, label %293

290:                                              ; preds = %269
  %291 = call i32* @_ZN2v84base11SmallVectorIiLm64EE4GrowEm(%"class.v8::base::SmallVector"* nonnull %83, i64 %283) #8
  %292 = load i32*, i32** %84, align 8
  br label %293

293:                                              ; preds = %269, %290
  %294 = phi i32* [ %292, %290 ], [ %289, %269 ]
  %295 = getelementptr inbounds i32, i32* %294, i64 %283
  store i32* %295, i32** %48, align 8
  br label %113

296:                                              ; preds = %2193
  %297 = inttoptr i64 %2198 to i8*
  %298 = getelementptr inbounds i8, i8* %297, i64 4
  %299 = bitcast i8* %298 to i32*
  %300 = load i32, i32* %299, align 4
  %301 = and i32 %300, 63
  %302 = zext i32 %301 to i64
  %303 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %302
  %304 = load i8*, i8** %303, align 8
  %305 = load i32*, i32** %48, align 8
  %306 = getelementptr inbounds i32, i32* %305, i64 -1
  %307 = load i32, i32* %306, align 4
  store i32* %306, i32** %48, align 8
  br label %113

308:                                              ; preds = %2193
  %309 = add i32 %2201, 1
  %310 = icmp eq i32 %309, %11
  br i1 %310, label %311, label %313

311:                                              ; preds = %308
  %312 = ashr i32 %2200, 8
  br label %2180

313:                                              ; preds = %308
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %61, align 8
  %314 = call zeroext i1 @_ZNK2v88internal15StackLimitCheck15JsHasOverflowedEm(%"class.v8::internal::StackLimitCheck"* nonnull %16, i64 0) #8
  br i1 %62, label %315, label %322

315:                                              ; preds = %313
  br i1 %314, label %452, label %316

316:                                              ; preds = %315
  %317 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %61, align 8
  %318 = call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #8
  %319 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %317, i64 0, i32 0, i32 6, i32 1, i32 3
  %320 = load atomic i64, i64* %319 monotonic, align 8
  %321 = icmp ult i64 %318, %320
  br i1 %321, label %452, label %454

322:                                              ; preds = %313
  %323 = load i64, i64* %64, align 8
  %324 = load i64*, i64** %65, align 8
  %325 = load i32, i32* %66, align 8
  %326 = add nsw i32 %325, 1
  store i32 %326, i32* %66, align 8
  %327 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %328 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %327, null
  %329 = inttoptr i64 %323 to i64*
  br i1 %328, label %332, label %330

330:                                              ; preds = %322
  %331 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %327, i64 %2194) #8
  br label %341

332:                                              ; preds = %322
  %333 = icmp eq i64* %324, %329
  br i1 %333, label %334, label %336

334:                                              ; preds = %332
  %335 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %336

336:                                              ; preds = %334, %332
  %337 = phi i64* [ %335, %334 ], [ %329, %332 ]
  %338 = ptrtoint i64* %337 to i64
  %339 = add i64 %338, 8
  %340 = inttoptr i64 %339 to i64*
  store i64* %340, i64** %68, align 8
  store i64 %2194, i64* %337, align 8
  br label %341

341:                                              ; preds = %336, %330
  %342 = phi i64* [ %331, %330 ], [ %337, %336 ]
  %343 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %344 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %343, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %341
  %346 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %343, i64 %2195) #8
  br label %358

347:                                              ; preds = %341
  %348 = load i64*, i64** %68, align 8
  %349 = load i64*, i64** %65, align 8
  %350 = icmp eq i64* %348, %349
  br i1 %350, label %351, label %353

351:                                              ; preds = %347
  %352 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %353

353:                                              ; preds = %351, %347
  %354 = phi i64* [ %352, %351 ], [ %348, %347 ]
  %355 = ptrtoint i64* %354 to i64
  %356 = add i64 %355, 8
  %357 = inttoptr i64 %356 to i64*
  store i64* %357, i64** %68, align 8
  store i64 %2195, i64* %354, align 8
  br label %358

358:                                              ; preds = %353, %345
  %359 = phi i64* [ %346, %345 ], [ %354, %353 ]
  br i1 %314, label %360, label %364

360:                                              ; preds = %358
  br i1 %78, label %362, label %361, !prof !3

361:                                              ; preds = %360
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0)) #9
  unreachable

362:                                              ; preds = %360
  %363 = call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #8
  br label %431

364:                                              ; preds = %358
  %365 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %61, align 8
  %366 = call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #8
  %367 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %365, i64 0, i32 0, i32 6, i32 1, i32 3
  %368 = load atomic i64, i64* %367 monotonic, align 8
  %369 = icmp ult i64 %366, %368
  br i1 %369, label %370, label %431

370:                                              ; preds = %364, %383
  %371 = phi i64 [ %388, %383 ], [ %2195, %364 ]
  %372 = and i64 %371, -4294967296
  %373 = add i64 %371, -1
  %374 = inttoptr i64 %373 to i32*
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = zext i32 %375 to i64
  %377 = or i64 %372, %376
  %378 = add i64 %377, 7
  %379 = inttoptr i64 %378 to i16*
  %380 = load atomic i16, i16* %379 monotonic, align 2
  %381 = and i16 %380, 9
  %382 = zext i16 %381 to i32
  switch i32 %382, label %383 [
    i32 8, label %389
    i32 0, label %390
  ]

383:                                              ; preds = %370
  %384 = add i64 %371, 11
  %385 = inttoptr i64 %384 to i32*
  %386 = load i32, i32* %385, align 4
  %387 = zext i32 %386 to i64
  %388 = or i64 %372, %387
  br label %370

389:                                              ; preds = %370
  br label %390

390:                                              ; preds = %370, %389
  %391 = phi i1 [ true, %389 ], [ false, %370 ]
  %392 = call i64 @_ZN2v88internal10StackGuard16HandleInterruptsEv(%"class.v8::internal::StackGuard"* %69) #8
  %393 = load i64, i64* %70, align 8
  %394 = trunc i64 %392 to i32
  %395 = trunc i64 %393 to i32
  %396 = icmp eq i32 %394, %395
  br i1 %396, label %431, label %397

397:                                              ; preds = %390
  %398 = load i64, i64* %359, align 8
  br label %399

399:                                              ; preds = %413, %397
  %400 = phi i64 [ %398, %397 ], [ %418, %413 ]
  %401 = and i64 %400, -4294967296
  %402 = add i64 %400, -1
  %403 = inttoptr i64 %402 to i32*
  %404 = load atomic i32, i32* %403 monotonic, align 4
  %405 = zext i32 %404 to i64
  %406 = or i64 %401, %405
  %407 = add i64 %406, 7
  %408 = inttoptr i64 %407 to i16*
  %409 = load atomic i16, i16* %408 monotonic, align 2
  %410 = and i16 %409, 9
  %411 = zext i16 %410 to i32
  switch i32 %411, label %413 [
    i32 8, label %419
    i32 0, label %412
  ]

412:                                              ; preds = %399
  br i1 %391, label %431, label %420

413:                                              ; preds = %399
  %414 = add i64 %400, 11
  %415 = inttoptr i64 %414 to i32*
  %416 = load i32, i32* %415, align 4
  %417 = zext i32 %416 to i64
  %418 = or i64 %401, %417
  br label %399

419:                                              ; preds = %399
  br i1 %391, label %420, label %431

420:                                              ; preds = %419, %412
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %71) #8
  %421 = inttoptr i64 %2199 to i8*
  %422 = load i64, i64* %342, align 8
  %423 = add i64 %422, 7
  %424 = inttoptr i64 %423 to i8*
  %425 = icmp eq i8* %421, %424
  %426 = select i1 %425, i64 %2194, i64 %422
  %427 = select i1 %425, i64 %2199, i64 %423
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #8
  store i64 %398, i64* %73, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #8
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %13, %"class.v8::internal::String"* nonnull %74, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %14) #8
  %428 = load i64, i64* %76, align 8
  %429 = load i32, i32* %77, align 8
  %430 = sext i32 %429 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71) #8
  br label %431

431:                                              ; preds = %420, %419, %412, %390, %364, %362
  %432 = phi i64 [ %2194, %362 ], [ %2194, %390 ], [ %2194, %412 ], [ %426, %420 ], [ %2194, %419 ], [ %2194, %364 ]
  %433 = phi i64 [ %2195, %362 ], [ %2195, %390 ], [ %2195, %412 ], [ %398, %420 ], [ %2195, %419 ], [ %2195, %364 ]
  %434 = phi i64 [ %2196, %362 ], [ %2196, %390 ], [ %2196, %412 ], [ %430, %420 ], [ %2196, %419 ], [ %2196, %364 ]
  %435 = phi i64 [ %2197, %362 ], [ %2197, %390 ], [ %2197, %412 ], [ %428, %420 ], [ %2197, %419 ], [ %2197, %364 ]
  %436 = phi i64 [ %2199, %362 ], [ %2199, %390 ], [ %2199, %412 ], [ %427, %420 ], [ %2199, %419 ], [ %2199, %364 ]
  %437 = phi i32 [ 1, %362 ], [ 1, %390 ], [ 1, %412 ], [ 0, %420 ], [ 1, %419 ], [ 0, %364 ]
  %438 = phi i32 [ -1, %362 ], [ -1, %390 ], [ -2, %412 ], [ undef, %420 ], [ -2, %419 ], [ undef, %364 ]
  br i1 %79, label %450, label %439

439:                                              ; preds = %431
  %440 = load i64*, i64** %80, align 8
  store i64 %323, i64* %64, align 8
  %441 = load i32, i32* %66, align 8
  %442 = add nsw i32 %441, -1
  store i32 %442, i32* %66, align 8
  %443 = load i64*, i64** %65, align 8
  %444 = icmp eq i64* %443, %324
  br i1 %444, label %447, label %445

445:                                              ; preds = %439
  store i64* %324, i64** %65, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #8
  %446 = load i64*, i64** %80, align 8
  br label %447

447:                                              ; preds = %445, %439
  %448 = phi i64* [ %446, %445 ], [ %329, %439 ]
  %449 = phi i64* [ %324, %445 ], [ %440, %439 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %448, i64* %449) #8
  br label %450

450:                                              ; preds = %447, %431
  %451 = icmp eq i32 %437, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450, %315, %316
  %453 = phi i32 [ -2, %316 ], [ -1, %315 ], [ %438, %450 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  br label %2180

454:                                              ; preds = %450, %316
  %455 = phi i64 [ %2194, %316 ], [ %432, %450 ]
  %456 = phi i64 [ %2195, %316 ], [ %433, %450 ]
  %457 = phi i64 [ %2196, %316 ], [ %434, %450 ]
  %458 = phi i64 [ %2197, %316 ], [ %435, %450 ]
  %459 = phi i64 [ %2199, %316 ], [ %436, %450 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %460 = inttoptr i64 %459 to i8*
  %461 = load i32*, i32** %48, align 8
  %462 = getelementptr inbounds i32, i32* %461, i64 -1
  %463 = load i32, i32* %462, align 4
  store i32* %462, i32** %48, align 8
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds i8, i8* %460, i64 %464
  %466 = bitcast i8* %465 to i32*
  %467 = load i32, i32* %466, align 4
  %468 = and i32 %467, 63
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %469
  %471 = load i8*, i8** %470, align 8
  br label %113

472:                                              ; preds = %2193
  %473 = inttoptr i64 %2198 to i8*
  %474 = getelementptr inbounds i8, i8* %473, i64 4
  %475 = bitcast i8* %474 to i32*
  %476 = load i32, i32* %475, align 4
  %477 = and i32 %476, 63
  %478 = zext i32 %477 to i64
  %479 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %478
  %480 = load i8*, i8** %479, align 8
  %481 = load i32*, i32** %48, align 8
  %482 = getelementptr inbounds i32, i32* %481, i64 -1
  %483 = load i32, i32* %482, align 4
  store i32* %482, i32** %48, align 8
  %484 = lshr i32 %2200, 8
  %485 = zext i32 %484 to i64
  %486 = load i32*, i32** %59, align 8
  %487 = getelementptr inbounds i32, i32* %486, i64 %485
  store i32 %483, i32* %487, align 4
  br label %113

488:                                              ; preds = %2193
  %489 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %490 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %489, align 8
  %491 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %490, i64 0, i32 55
  call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %491, i32 %2201) #8
  br label %2180

492:                                              ; preds = %2193
  %493 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %494 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %493, align 8
  %495 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %494, i64 0, i32 55
  call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %495, i32 %2201) #8
  %496 = bitcast i32** %42 to i8**
  %497 = load i8*, i8** %496, align 8
  %498 = load i32*, i32** %59, align 8
  %499 = bitcast i32* %498 to i8*
  %500 = load i32, i32* %43, align 8
  %501 = sext i32 %500 to i64
  %502 = shl nsw i64 %501, 2
  %503 = add nsw i64 %502, -4
  %504 = lshr exact i64 %503, 2
  switch i64 %504, label %514 [
    i64 3, label %513
    i64 1, label %508
    i64 2, label %512
    i64 0, label %505
  ]

505:                                              ; preds = %492
  %506 = bitcast i8* %497 to i32*
  %507 = load i32, i32* %498, align 1
  store i32 %507, i32* %506, align 1
  br label %2180

508:                                              ; preds = %492
  %509 = bitcast i32* %498 to i64*
  %510 = bitcast i8* %497 to i64*
  %511 = load i64, i64* %509, align 1
  store i64 %511, i64* %510, align 1
  br label %2180

512:                                              ; preds = %492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %497, i8* align 1 %499, i64 12, i1 false) #8
  br label %2180

513:                                              ; preds = %492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %497, i8* align 1 %499, i64 16, i1 false) #8
  br label %2180

514:                                              ; preds = %492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %497, i8* align 1 %499, i64 %502, i1 false) #8
  br label %2180

515:                                              ; preds = %2193
  %516 = inttoptr i64 %2198 to i8*
  %517 = getelementptr inbounds i8, i8* %516, i64 4
  %518 = bitcast i8* %517 to i32*
  %519 = load i32, i32* %518, align 4
  %520 = and i32 %519, 63
  %521 = zext i32 %520 to i64
  %522 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %521
  %523 = load i8*, i8** %522, align 8
  %524 = ashr i32 %2200, 8
  %525 = add nsw i32 %2203, %524
  br label %113

526:                                              ; preds = %2193
  %527 = inttoptr i64 %2199 to i8*
  %528 = inttoptr i64 %2198 to i8*
  %529 = getelementptr inbounds i8, i8* %528, i64 4
  %530 = bitcast i8* %529 to i32*
  %531 = load i32, i32* %530, align 4
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds i8, i8* %527, i64 %532
  %534 = bitcast i8* %533 to i32*
  %535 = load i32, i32* %534, align 4
  %536 = and i32 %535, 63
  %537 = zext i32 %536 to i64
  %538 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %537
  %539 = load i8*, i8** %538, align 8
  br label %113

540:                                              ; preds = %2193
  %541 = inttoptr i64 %2199 to i8*
  %542 = inttoptr i64 %2198 to i8*
  %543 = getelementptr inbounds i8, i8* %542, i64 4
  %544 = bitcast i8* %543 to i32*
  %545 = load i32, i32* %544, align 4
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds i8, i8* %541, i64 %546
  %548 = bitcast i8* %547 to i32*
  %549 = load i32, i32* %548, align 4
  %550 = and i32 %549, 63
  %551 = zext i32 %550 to i64
  %552 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %551
  %553 = load i8*, i8** %552, align 8
  %554 = ashr i32 %2200, 8
  %555 = add nsw i32 %2203, %554
  br label %113

556:                                              ; preds = %2193
  %557 = load i32*, i32** %48, align 8
  %558 = getelementptr inbounds i32, i32* %557, i64 -1
  %559 = load i32, i32* %558, align 4
  %560 = icmp eq i32 %2203, %559
  br i1 %560, label %561, label %575

561:                                              ; preds = %556
  %562 = inttoptr i64 %2199 to i8*
  %563 = inttoptr i64 %2198 to i8*
  %564 = getelementptr inbounds i8, i8* %563, i64 4
  %565 = bitcast i8* %564 to i32*
  %566 = load i32, i32* %565, align 4
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds i8, i8* %562, i64 %567
  %569 = bitcast i8* %568 to i32*
  %570 = load i32, i32* %569, align 4
  %571 = and i32 %570, 63
  %572 = zext i32 %571 to i64
  %573 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %572
  %574 = load i8*, i8** %573, align 8
  store i32* %558, i32** %48, align 8
  br label %113

575:                                              ; preds = %556
  %576 = inttoptr i64 %2198 to i8*
  %577 = getelementptr inbounds i8, i8* %576, i64 8
  %578 = bitcast i8* %577 to i32*
  %579 = load i32, i32* %578, align 4
  %580 = and i32 %579, 63
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %581
  %583 = load i8*, i8** %582, align 8
  br label %113

584:                                              ; preds = %2193
  %585 = ashr i32 %2200, 8
  %586 = add nsw i32 %2203, %585
  %587 = trunc i64 %2196 to i32
  %588 = icmp sge i32 %586, %587
  %589 = icmp slt i32 %586, 0
  %590 = or i1 %588, %589
  br i1 %590, label %591, label %599

591:                                              ; preds = %584
  %592 = inttoptr i64 %2199 to i8*
  %593 = inttoptr i64 %2198 to i8*
  %594 = getelementptr inbounds i8, i8* %593, i64 4
  %595 = bitcast i8* %594 to i32*
  %596 = load i32, i32* %595, align 4
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds i8, i8* %592, i64 %597
  br label %607

599:                                              ; preds = %584
  %600 = inttoptr i64 %2198 to i8*
  %601 = getelementptr inbounds i8, i8* %600, i64 8
  %602 = sext i32 %586 to i64
  %603 = inttoptr i64 %2197 to i8*
  %604 = getelementptr inbounds i8, i8* %603, i64 %602
  %605 = load i8, i8* %604, align 1
  %606 = zext i8 %605 to i32
  br label %607

607:                                              ; preds = %599, %591
  %608 = phi i8* [ %598, %591 ], [ %601, %599 ]
  %609 = phi i32 [ %2202, %591 ], [ %606, %599 ]
  %610 = bitcast i8* %608 to i32*
  %611 = load i32, i32* %610, align 4
  %612 = and i32 %611, 63
  %613 = zext i32 %612 to i64
  %614 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %613
  %615 = load i8*, i8** %614, align 8
  br label %113

616:                                              ; preds = %2193
  %617 = inttoptr i64 %2198 to i8*
  %618 = getelementptr inbounds i8, i8* %617, i64 4
  %619 = bitcast i8* %618 to i32*
  %620 = load i32, i32* %619, align 4
  %621 = and i32 %620, 63
  %622 = zext i32 %621 to i64
  %623 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %622
  %624 = load i8*, i8** %623, align 8
  %625 = ashr i32 %2200, 8
  %626 = add nsw i32 %2203, %625
  %627 = sext i32 %626 to i64
  %628 = inttoptr i64 %2197 to i8*
  %629 = getelementptr inbounds i8, i8* %628, i64 %627
  %630 = load i8, i8* %629, align 1
  %631 = zext i8 %630 to i32
  br label %113

632:                                              ; preds = %2193
  %633 = ashr i32 %2200, 8
  %634 = add nsw i32 %2203, %633
  %635 = add nsw i32 %634, 2
  %636 = trunc i64 %2196 to i32
  %637 = icmp sgt i32 %635, %636
  %638 = icmp slt i32 %634, 0
  %639 = or i1 %638, %637
  br i1 %639, label %640, label %648

640:                                              ; preds = %632
  %641 = inttoptr i64 %2199 to i8*
  %642 = inttoptr i64 %2198 to i8*
  %643 = getelementptr inbounds i8, i8* %642, i64 4
  %644 = bitcast i8* %643 to i32*
  %645 = load i32, i32* %644, align 4
  %646 = sext i32 %645 to i64
  %647 = getelementptr inbounds i8, i8* %641, i64 %646
  br label %663

648:                                              ; preds = %632
  %649 = inttoptr i64 %2198 to i8*
  %650 = getelementptr inbounds i8, i8* %649, i64 8
  %651 = add nuw nsw i32 %634, 1
  %652 = sext i32 %651 to i64
  %653 = inttoptr i64 %2197 to i8*
  %654 = getelementptr inbounds i8, i8* %653, i64 %652
  %655 = load i8, i8* %654, align 1
  %656 = sext i32 %634 to i64
  %657 = getelementptr inbounds i8, i8* %653, i64 %656
  %658 = load i8, i8* %657, align 1
  %659 = zext i8 %658 to i32
  %660 = zext i8 %655 to i32
  %661 = shl nuw nsw i32 %660, 8
  %662 = or i32 %661, %659
  br label %663

663:                                              ; preds = %648, %640
  %664 = phi i8* [ %647, %640 ], [ %650, %648 ]
  %665 = phi i32 [ %2202, %640 ], [ %662, %648 ]
  %666 = bitcast i8* %664 to i32*
  %667 = load i32, i32* %666, align 4
  %668 = and i32 %667, 63
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %669
  %671 = load i8*, i8** %670, align 8
  br label %113

672:                                              ; preds = %2193
  %673 = inttoptr i64 %2198 to i8*
  %674 = getelementptr inbounds i8, i8* %673, i64 4
  %675 = bitcast i8* %674 to i32*
  %676 = load i32, i32* %675, align 4
  %677 = and i32 %676, 63
  %678 = zext i32 %677 to i64
  %679 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %678
  %680 = load i8*, i8** %679, align 8
  %681 = ashr i32 %2200, 8
  %682 = add nsw i32 %2203, %681
  %683 = add nsw i32 %682, 1
  %684 = sext i32 %683 to i64
  %685 = inttoptr i64 %2197 to i8*
  %686 = getelementptr inbounds i8, i8* %685, i64 %684
  %687 = load i8, i8* %686, align 1
  %688 = sext i32 %682 to i64
  %689 = getelementptr inbounds i8, i8* %685, i64 %688
  %690 = load i8, i8* %689, align 1
  %691 = zext i8 %690 to i32
  %692 = zext i8 %687 to i32
  %693 = shl nuw nsw i32 %692, 8
  %694 = or i32 %693, %691
  br label %113

695:                                              ; preds = %2193
  %696 = ashr i32 %2200, 8
  %697 = add nsw i32 %2203, %696
  %698 = add nsw i32 %697, 4
  %699 = trunc i64 %2196 to i32
  %700 = icmp sgt i32 %698, %699
  %701 = icmp slt i32 %697, 0
  %702 = or i1 %701, %700
  br i1 %702, label %703, label %711

703:                                              ; preds = %695
  %704 = inttoptr i64 %2199 to i8*
  %705 = inttoptr i64 %2198 to i8*
  %706 = getelementptr inbounds i8, i8* %705, i64 4
  %707 = bitcast i8* %706 to i32*
  %708 = load i32, i32* %707, align 4
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds i8, i8* %704, i64 %709
  br label %740

711:                                              ; preds = %695
  %712 = inttoptr i64 %2198 to i8*
  %713 = getelementptr inbounds i8, i8* %712, i64 8
  %714 = add nuw nsw i32 %697, 1
  %715 = sext i32 %714 to i64
  %716 = inttoptr i64 %2197 to i8*
  %717 = getelementptr inbounds i8, i8* %716, i64 %715
  %718 = load i8, i8* %717, align 1
  %719 = add nuw nsw i32 %697, 2
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds i8, i8* %716, i64 %720
  %722 = load i8, i8* %721, align 1
  %723 = add nuw nsw i32 %697, 3
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds i8, i8* %716, i64 %724
  %726 = load i8, i8* %725, align 1
  %727 = sext i32 %697 to i64
  %728 = getelementptr inbounds i8, i8* %716, i64 %727
  %729 = load i8, i8* %728, align 1
  %730 = zext i8 %729 to i32
  %731 = zext i8 %718 to i32
  %732 = shl nuw nsw i32 %731, 8
  %733 = zext i8 %722 to i32
  %734 = shl nuw nsw i32 %733, 16
  %735 = zext i8 %726 to i32
  %736 = shl nuw i32 %735, 24
  %737 = or i32 %734, %732
  %738 = or i32 %737, %730
  %739 = or i32 %738, %736
  br label %740

740:                                              ; preds = %711, %703
  %741 = phi i8* [ %710, %703 ], [ %713, %711 ]
  %742 = phi i32 [ %2202, %703 ], [ %739, %711 ]
  %743 = bitcast i8* %741 to i32*
  %744 = load i32, i32* %743, align 4
  %745 = and i32 %744, 63
  %746 = zext i32 %745 to i64
  %747 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %746
  %748 = load i8*, i8** %747, align 8
  br label %113

749:                                              ; preds = %2193
  %750 = inttoptr i64 %2198 to i8*
  %751 = getelementptr inbounds i8, i8* %750, i64 4
  %752 = bitcast i8* %751 to i32*
  %753 = load i32, i32* %752, align 4
  %754 = and i32 %753, 63
  %755 = zext i32 %754 to i64
  %756 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %755
  %757 = load i8*, i8** %756, align 8
  %758 = ashr i32 %2200, 8
  %759 = add nsw i32 %2203, %758
  %760 = add nsw i32 %759, 1
  %761 = sext i32 %760 to i64
  %762 = inttoptr i64 %2197 to i8*
  %763 = getelementptr inbounds i8, i8* %762, i64 %761
  %764 = load i8, i8* %763, align 1
  %765 = add nsw i32 %759, 2
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds i8, i8* %762, i64 %766
  %768 = load i8, i8* %767, align 1
  %769 = add nsw i32 %759, 3
  %770 = sext i32 %769 to i64
  %771 = getelementptr inbounds i8, i8* %762, i64 %770
  %772 = load i8, i8* %771, align 1
  %773 = sext i32 %759 to i64
  %774 = getelementptr inbounds i8, i8* %762, i64 %773
  %775 = load i8, i8* %774, align 1
  %776 = zext i8 %775 to i32
  %777 = zext i8 %764 to i32
  %778 = shl nuw nsw i32 %777, 8
  %779 = zext i8 %768 to i32
  %780 = shl nuw nsw i32 %779, 16
  %781 = zext i8 %772 to i32
  %782 = shl nuw i32 %781, 24
  %783 = or i32 %780, %778
  %784 = or i32 %783, %776
  %785 = or i32 %784, %782
  br label %113

786:                                              ; preds = %2193
  %787 = inttoptr i64 %2198 to i8*
  %788 = getelementptr inbounds i8, i8* %787, i64 4
  %789 = bitcast i8* %788 to i32*
  %790 = load i32, i32* %789, align 4
  %791 = icmp eq i32 %790, %2202
  br i1 %791, label %792, label %799

792:                                              ; preds = %786
  %793 = inttoptr i64 %2199 to i8*
  %794 = getelementptr inbounds i8, i8* %787, i64 8
  %795 = bitcast i8* %794 to i32*
  %796 = load i32, i32* %795, align 4
  %797 = sext i32 %796 to i64
  %798 = getelementptr inbounds i8, i8* %793, i64 %797
  br label %801

799:                                              ; preds = %786
  %800 = getelementptr inbounds i8, i8* %787, i64 12
  br label %801

801:                                              ; preds = %799, %792
  %802 = phi i8* [ %798, %792 ], [ %800, %799 ]
  %803 = bitcast i8* %802 to i32*
  %804 = load i32, i32* %803, align 4
  %805 = and i32 %804, 63
  %806 = zext i32 %805 to i64
  %807 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %806
  %808 = load i8*, i8** %807, align 8
  br label %113

809:                                              ; preds = %2193
  %810 = lshr i32 %2200, 8
  %811 = icmp eq i32 %810, %2202
  br i1 %811, label %812, label %820

812:                                              ; preds = %809
  %813 = inttoptr i64 %2199 to i8*
  %814 = inttoptr i64 %2198 to i8*
  %815 = getelementptr inbounds i8, i8* %814, i64 4
  %816 = bitcast i8* %815 to i32*
  %817 = load i32, i32* %816, align 4
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds i8, i8* %813, i64 %818
  br label %823

820:                                              ; preds = %809
  %821 = inttoptr i64 %2198 to i8*
  %822 = getelementptr inbounds i8, i8* %821, i64 8
  br label %823

823:                                              ; preds = %820, %812
  %824 = phi i8* [ %819, %812 ], [ %822, %820 ]
  %825 = bitcast i8* %824 to i32*
  %826 = load i32, i32* %825, align 4
  %827 = and i32 %826, 63
  %828 = zext i32 %827 to i64
  %829 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %828
  %830 = load i8*, i8** %829, align 8
  br label %113

831:                                              ; preds = %2193
  %832 = inttoptr i64 %2198 to i8*
  %833 = getelementptr inbounds i8, i8* %832, i64 4
  %834 = bitcast i8* %833 to i32*
  %835 = load i32, i32* %834, align 4
  %836 = icmp eq i32 %835, %2202
  br i1 %836, label %844, label %837

837:                                              ; preds = %831
  %838 = inttoptr i64 %2199 to i8*
  %839 = getelementptr inbounds i8, i8* %832, i64 8
  %840 = bitcast i8* %839 to i32*
  %841 = load i32, i32* %840, align 4
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds i8, i8* %838, i64 %842
  br label %846

844:                                              ; preds = %831
  %845 = getelementptr inbounds i8, i8* %832, i64 12
  br label %846

846:                                              ; preds = %844, %837
  %847 = phi i8* [ %843, %837 ], [ %845, %844 ]
  %848 = bitcast i8* %847 to i32*
  %849 = load i32, i32* %848, align 4
  %850 = and i32 %849, 63
  %851 = zext i32 %850 to i64
  %852 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %851
  %853 = load i8*, i8** %852, align 8
  br label %113

854:                                              ; preds = %2193
  %855 = lshr i32 %2200, 8
  %856 = icmp eq i32 %855, %2202
  br i1 %856, label %865, label %857

857:                                              ; preds = %854
  %858 = inttoptr i64 %2199 to i8*
  %859 = inttoptr i64 %2198 to i8*
  %860 = getelementptr inbounds i8, i8* %859, i64 4
  %861 = bitcast i8* %860 to i32*
  %862 = load i32, i32* %861, align 4
  %863 = sext i32 %862 to i64
  %864 = getelementptr inbounds i8, i8* %858, i64 %863
  br label %868

865:                                              ; preds = %854
  %866 = inttoptr i64 %2198 to i8*
  %867 = getelementptr inbounds i8, i8* %866, i64 8
  br label %868

868:                                              ; preds = %865, %857
  %869 = phi i8* [ %864, %857 ], [ %867, %865 ]
  %870 = bitcast i8* %869 to i32*
  %871 = load i32, i32* %870, align 4
  %872 = and i32 %871, 63
  %873 = zext i32 %872 to i64
  %874 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %873
  %875 = load i8*, i8** %874, align 8
  br label %113

876:                                              ; preds = %2193
  %877 = inttoptr i64 %2198 to i8*
  %878 = getelementptr inbounds i8, i8* %877, i64 4
  %879 = bitcast i8* %878 to i32*
  %880 = load i32, i32* %879, align 4
  %881 = getelementptr inbounds i8, i8* %877, i64 8
  %882 = bitcast i8* %881 to i32*
  %883 = load i32, i32* %882, align 4
  %884 = and i32 %883, %2202
  %885 = icmp eq i32 %880, %884
  br i1 %885, label %886, label %893

886:                                              ; preds = %876
  %887 = inttoptr i64 %2199 to i8*
  %888 = getelementptr inbounds i8, i8* %877, i64 12
  %889 = bitcast i8* %888 to i32*
  %890 = load i32, i32* %889, align 4
  %891 = sext i32 %890 to i64
  %892 = getelementptr inbounds i8, i8* %887, i64 %891
  br label %895

893:                                              ; preds = %876
  %894 = getelementptr inbounds i8, i8* %877, i64 16
  br label %895

895:                                              ; preds = %893, %886
  %896 = phi i8* [ %892, %886 ], [ %894, %893 ]
  %897 = bitcast i8* %896 to i32*
  %898 = load i32, i32* %897, align 4
  %899 = and i32 %898, 63
  %900 = zext i32 %899 to i64
  %901 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %900
  %902 = load i8*, i8** %901, align 8
  br label %113

903:                                              ; preds = %2193
  %904 = lshr i32 %2200, 8
  %905 = inttoptr i64 %2198 to i8*
  %906 = getelementptr inbounds i8, i8* %905, i64 4
  %907 = bitcast i8* %906 to i32*
  %908 = load i32, i32* %907, align 4
  %909 = and i32 %908, %2202
  %910 = icmp eq i32 %904, %909
  br i1 %910, label %911, label %918

911:                                              ; preds = %903
  %912 = inttoptr i64 %2199 to i8*
  %913 = getelementptr inbounds i8, i8* %905, i64 8
  %914 = bitcast i8* %913 to i32*
  %915 = load i32, i32* %914, align 4
  %916 = sext i32 %915 to i64
  %917 = getelementptr inbounds i8, i8* %912, i64 %916
  br label %920

918:                                              ; preds = %903
  %919 = getelementptr inbounds i8, i8* %905, i64 12
  br label %920

920:                                              ; preds = %918, %911
  %921 = phi i8* [ %917, %911 ], [ %919, %918 ]
  %922 = bitcast i8* %921 to i32*
  %923 = load i32, i32* %922, align 4
  %924 = and i32 %923, 63
  %925 = zext i32 %924 to i64
  %926 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %925
  %927 = load i8*, i8** %926, align 8
  br label %113

928:                                              ; preds = %2193
  %929 = inttoptr i64 %2198 to i8*
  %930 = getelementptr inbounds i8, i8* %929, i64 4
  %931 = bitcast i8* %930 to i32*
  %932 = load i32, i32* %931, align 4
  %933 = getelementptr inbounds i8, i8* %929, i64 8
  %934 = bitcast i8* %933 to i32*
  %935 = load i32, i32* %934, align 4
  %936 = and i32 %935, %2202
  %937 = icmp eq i32 %932, %936
  br i1 %937, label %945, label %938

938:                                              ; preds = %928
  %939 = inttoptr i64 %2199 to i8*
  %940 = getelementptr inbounds i8, i8* %929, i64 12
  %941 = bitcast i8* %940 to i32*
  %942 = load i32, i32* %941, align 4
  %943 = sext i32 %942 to i64
  %944 = getelementptr inbounds i8, i8* %939, i64 %943
  br label %947

945:                                              ; preds = %928
  %946 = getelementptr inbounds i8, i8* %929, i64 16
  br label %947

947:                                              ; preds = %945, %938
  %948 = phi i8* [ %944, %938 ], [ %946, %945 ]
  %949 = bitcast i8* %948 to i32*
  %950 = load i32, i32* %949, align 4
  %951 = and i32 %950, 63
  %952 = zext i32 %951 to i64
  %953 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %952
  %954 = load i8*, i8** %953, align 8
  br label %113

955:                                              ; preds = %2193
  %956 = lshr i32 %2200, 8
  %957 = inttoptr i64 %2198 to i8*
  %958 = getelementptr inbounds i8, i8* %957, i64 4
  %959 = bitcast i8* %958 to i32*
  %960 = load i32, i32* %959, align 4
  %961 = and i32 %960, %2202
  %962 = icmp eq i32 %956, %961
  br i1 %962, label %970, label %963

963:                                              ; preds = %955
  %964 = inttoptr i64 %2199 to i8*
  %965 = getelementptr inbounds i8, i8* %957, i64 8
  %966 = bitcast i8* %965 to i32*
  %967 = load i32, i32* %966, align 4
  %968 = sext i32 %967 to i64
  %969 = getelementptr inbounds i8, i8* %964, i64 %968
  br label %972

970:                                              ; preds = %955
  %971 = getelementptr inbounds i8, i8* %957, i64 12
  br label %972

972:                                              ; preds = %970, %963
  %973 = phi i8* [ %969, %963 ], [ %971, %970 ]
  %974 = bitcast i8* %973 to i32*
  %975 = load i32, i32* %974, align 4
  %976 = and i32 %975, 63
  %977 = zext i32 %976 to i64
  %978 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %977
  %979 = load i8*, i8** %978, align 8
  br label %113

980:                                              ; preds = %2193
  %981 = lshr i32 %2200, 8
  %982 = inttoptr i64 %2198 to i8*
  %983 = getelementptr inbounds i8, i8* %982, i64 4
  %984 = bitcast i8* %983 to i16*
  %985 = load i16, i16* %984, align 2
  %986 = zext i16 %985 to i32
  %987 = getelementptr inbounds i8, i8* %982, i64 6
  %988 = bitcast i8* %987 to i16*
  %989 = load i16, i16* %988, align 2
  %990 = zext i16 %989 to i32
  %991 = sub i32 %2202, %986
  %992 = and i32 %991, %990
  %993 = icmp eq i32 %981, %992
  br i1 %993, label %1001, label %994

994:                                              ; preds = %980
  %995 = inttoptr i64 %2199 to i8*
  %996 = getelementptr inbounds i8, i8* %982, i64 8
  %997 = bitcast i8* %996 to i32*
  %998 = load i32, i32* %997, align 4
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds i8, i8* %995, i64 %999
  br label %1003

1001:                                             ; preds = %980
  %1002 = getelementptr inbounds i8, i8* %982, i64 12
  br label %1003

1003:                                             ; preds = %1001, %994
  %1004 = phi i8* [ %1000, %994 ], [ %1002, %1001 ]
  %1005 = bitcast i8* %1004 to i32*
  %1006 = load i32, i32* %1005, align 4
  %1007 = and i32 %1006, 63
  %1008 = zext i32 %1007 to i64
  %1009 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1008
  %1010 = load i8*, i8** %1009, align 8
  br label %113

1011:                                             ; preds = %2193
  %1012 = inttoptr i64 %2198 to i8*
  %1013 = getelementptr inbounds i8, i8* %1012, i64 4
  %1014 = bitcast i8* %1013 to i16*
  %1015 = load i16, i16* %1014, align 2
  %1016 = zext i16 %1015 to i32
  %1017 = getelementptr inbounds i8, i8* %1012, i64 6
  %1018 = bitcast i8* %1017 to i16*
  %1019 = load i16, i16* %1018, align 2
  %1020 = zext i16 %1019 to i32
  %1021 = icmp ult i32 %2202, %1016
  %1022 = icmp ugt i32 %2202, %1020
  %1023 = or i1 %1021, %1022
  br i1 %1023, label %1031, label %1024

1024:                                             ; preds = %1011
  %1025 = inttoptr i64 %2199 to i8*
  %1026 = getelementptr inbounds i8, i8* %1012, i64 8
  %1027 = bitcast i8* %1026 to i32*
  %1028 = load i32, i32* %1027, align 4
  %1029 = sext i32 %1028 to i64
  %1030 = getelementptr inbounds i8, i8* %1025, i64 %1029
  br label %1033

1031:                                             ; preds = %1011
  %1032 = getelementptr inbounds i8, i8* %1012, i64 12
  br label %1033

1033:                                             ; preds = %1031, %1024
  %1034 = phi i8* [ %1030, %1024 ], [ %1032, %1031 ]
  %1035 = bitcast i8* %1034 to i32*
  %1036 = load i32, i32* %1035, align 4
  %1037 = and i32 %1036, 63
  %1038 = zext i32 %1037 to i64
  %1039 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1038
  %1040 = load i8*, i8** %1039, align 8
  br label %113

1041:                                             ; preds = %2193
  %1042 = inttoptr i64 %2198 to i8*
  %1043 = getelementptr inbounds i8, i8* %1042, i64 4
  %1044 = bitcast i8* %1043 to i16*
  %1045 = load i16, i16* %1044, align 2
  %1046 = zext i16 %1045 to i32
  %1047 = getelementptr inbounds i8, i8* %1042, i64 6
  %1048 = bitcast i8* %1047 to i16*
  %1049 = load i16, i16* %1048, align 2
  %1050 = zext i16 %1049 to i32
  %1051 = icmp ult i32 %2202, %1046
  %1052 = icmp ugt i32 %2202, %1050
  %1053 = or i1 %1051, %1052
  br i1 %1053, label %1054, label %1061

1054:                                             ; preds = %1041
  %1055 = inttoptr i64 %2199 to i8*
  %1056 = getelementptr inbounds i8, i8* %1042, i64 8
  %1057 = bitcast i8* %1056 to i32*
  %1058 = load i32, i32* %1057, align 4
  %1059 = sext i32 %1058 to i64
  %1060 = getelementptr inbounds i8, i8* %1055, i64 %1059
  br label %1063

1061:                                             ; preds = %1041
  %1062 = getelementptr inbounds i8, i8* %1042, i64 12
  br label %1063

1063:                                             ; preds = %1061, %1054
  %1064 = phi i8* [ %1060, %1054 ], [ %1062, %1061 ]
  %1065 = bitcast i8* %1064 to i32*
  %1066 = load i32, i32* %1065, align 4
  %1067 = and i32 %1066, 63
  %1068 = zext i32 %1067 to i64
  %1069 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1068
  %1070 = load i8*, i8** %1069, align 8
  br label %113

1071:                                             ; preds = %2193
  %1072 = inttoptr i64 %2198 to i8*
  %1073 = getelementptr inbounds i8, i8* %1072, i64 8
  %1074 = lshr i32 %2202, 3
  %1075 = and i32 %1074, 15
  %1076 = zext i32 %1075 to i64
  %1077 = getelementptr inbounds i8, i8* %1073, i64 %1076
  %1078 = load i8, i8* %1077, align 1
  %1079 = zext i8 %1078 to i32
  %1080 = and i32 %2202, 7
  %1081 = shl i32 1, %1080
  %1082 = and i32 %1081, %1079
  %1083 = icmp eq i32 %1082, 0
  br i1 %1083, label %1091, label %1084

1084:                                             ; preds = %1071
  %1085 = inttoptr i64 %2199 to i8*
  %1086 = getelementptr inbounds i8, i8* %1072, i64 4
  %1087 = bitcast i8* %1086 to i32*
  %1088 = load i32, i32* %1087, align 4
  %1089 = sext i32 %1088 to i64
  %1090 = getelementptr inbounds i8, i8* %1085, i64 %1089
  br label %1093

1091:                                             ; preds = %1071
  %1092 = getelementptr inbounds i8, i8* %1072, i64 24
  br label %1093

1093:                                             ; preds = %1091, %1084
  %1094 = phi i8* [ %1090, %1084 ], [ %1092, %1091 ]
  %1095 = bitcast i8* %1094 to i32*
  %1096 = load i32, i32* %1095, align 4
  %1097 = and i32 %1096, 63
  %1098 = zext i32 %1097 to i64
  %1099 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1098
  %1100 = load i8*, i8** %1099, align 8
  br label %113

1101:                                             ; preds = %2193
  %1102 = lshr i32 %2200, 8
  %1103 = icmp ult i32 %2202, %1102
  br i1 %1103, label %1104, label %1112

1104:                                             ; preds = %1101
  %1105 = inttoptr i64 %2199 to i8*
  %1106 = inttoptr i64 %2198 to i8*
  %1107 = getelementptr inbounds i8, i8* %1106, i64 4
  %1108 = bitcast i8* %1107 to i32*
  %1109 = load i32, i32* %1108, align 4
  %1110 = sext i32 %1109 to i64
  %1111 = getelementptr inbounds i8, i8* %1105, i64 %1110
  br label %1115

1112:                                             ; preds = %1101
  %1113 = inttoptr i64 %2198 to i8*
  %1114 = getelementptr inbounds i8, i8* %1113, i64 8
  br label %1115

1115:                                             ; preds = %1112, %1104
  %1116 = phi i8* [ %1111, %1104 ], [ %1114, %1112 ]
  %1117 = bitcast i8* %1116 to i32*
  %1118 = load i32, i32* %1117, align 4
  %1119 = and i32 %1118, 63
  %1120 = zext i32 %1119 to i64
  %1121 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1120
  %1122 = load i8*, i8** %1121, align 8
  br label %113

1123:                                             ; preds = %2193
  %1124 = lshr i32 %2200, 8
  %1125 = icmp ugt i32 %2202, %1124
  br i1 %1125, label %1126, label %1134

1126:                                             ; preds = %1123
  %1127 = inttoptr i64 %2199 to i8*
  %1128 = inttoptr i64 %2198 to i8*
  %1129 = getelementptr inbounds i8, i8* %1128, i64 4
  %1130 = bitcast i8* %1129 to i32*
  %1131 = load i32, i32* %1130, align 4
  %1132 = sext i32 %1131 to i64
  %1133 = getelementptr inbounds i8, i8* %1127, i64 %1132
  br label %1137

1134:                                             ; preds = %1123
  %1135 = inttoptr i64 %2198 to i8*
  %1136 = getelementptr inbounds i8, i8* %1135, i64 8
  br label %1137

1137:                                             ; preds = %1134, %1126
  %1138 = phi i8* [ %1133, %1126 ], [ %1136, %1134 ]
  %1139 = bitcast i8* %1138 to i32*
  %1140 = load i32, i32* %1139, align 4
  %1141 = and i32 %1140, 63
  %1142 = zext i32 %1141 to i64
  %1143 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1142
  %1144 = load i8*, i8** %1143, align 8
  br label %113

1145:                                             ; preds = %2193
  %1146 = lshr i32 %2200, 8
  %1147 = zext i32 %1146 to i64
  %1148 = load i32*, i32** %59, align 8
  %1149 = getelementptr inbounds i32, i32* %1148, i64 %1147
  %1150 = load i32, i32* %1149, align 4
  %1151 = inttoptr i64 %2198 to i8*
  %1152 = getelementptr inbounds i8, i8* %1151, i64 4
  %1153 = bitcast i8* %1152 to i32*
  %1154 = load i32, i32* %1153, align 4
  %1155 = icmp slt i32 %1150, %1154
  br i1 %1155, label %1156, label %1163

1156:                                             ; preds = %1145
  %1157 = inttoptr i64 %2199 to i8*
  %1158 = getelementptr inbounds i8, i8* %1151, i64 8
  %1159 = bitcast i8* %1158 to i32*
  %1160 = load i32, i32* %1159, align 4
  %1161 = sext i32 %1160 to i64
  %1162 = getelementptr inbounds i8, i8* %1157, i64 %1161
  br label %1165

1163:                                             ; preds = %1145
  %1164 = getelementptr inbounds i8, i8* %1151, i64 12
  br label %1165

1165:                                             ; preds = %1163, %1156
  %1166 = phi i8* [ %1162, %1156 ], [ %1164, %1163 ]
  %1167 = bitcast i8* %1166 to i32*
  %1168 = load i32, i32* %1167, align 4
  %1169 = and i32 %1168, 63
  %1170 = zext i32 %1169 to i64
  %1171 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1170
  %1172 = load i8*, i8** %1171, align 8
  br label %113

1173:                                             ; preds = %2193
  %1174 = lshr i32 %2200, 8
  %1175 = zext i32 %1174 to i64
  %1176 = load i32*, i32** %59, align 8
  %1177 = getelementptr inbounds i32, i32* %1176, i64 %1175
  %1178 = load i32, i32* %1177, align 4
  %1179 = inttoptr i64 %2198 to i8*
  %1180 = getelementptr inbounds i8, i8* %1179, i64 4
  %1181 = bitcast i8* %1180 to i32*
  %1182 = load i32, i32* %1181, align 4
  %1183 = icmp slt i32 %1178, %1182
  br i1 %1183, label %1191, label %1184

1184:                                             ; preds = %1173
  %1185 = inttoptr i64 %2199 to i8*
  %1186 = getelementptr inbounds i8, i8* %1179, i64 8
  %1187 = bitcast i8* %1186 to i32*
  %1188 = load i32, i32* %1187, align 4
  %1189 = sext i32 %1188 to i64
  %1190 = getelementptr inbounds i8, i8* %1185, i64 %1189
  br label %1193

1191:                                             ; preds = %1173
  %1192 = getelementptr inbounds i8, i8* %1179, i64 12
  br label %1193

1193:                                             ; preds = %1191, %1184
  %1194 = phi i8* [ %1190, %1184 ], [ %1192, %1191 ]
  %1195 = bitcast i8* %1194 to i32*
  %1196 = load i32, i32* %1195, align 4
  %1197 = and i32 %1196, 63
  %1198 = zext i32 %1197 to i64
  %1199 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1198
  %1200 = load i8*, i8** %1199, align 8
  br label %113

1201:                                             ; preds = %2193
  %1202 = lshr i32 %2200, 8
  %1203 = zext i32 %1202 to i64
  %1204 = load i32*, i32** %59, align 8
  %1205 = getelementptr inbounds i32, i32* %1204, i64 %1203
  %1206 = load i32, i32* %1205, align 4
  %1207 = icmp eq i32 %1206, %2203
  br i1 %1207, label %1208, label %1216

1208:                                             ; preds = %1201
  %1209 = inttoptr i64 %2199 to i8*
  %1210 = inttoptr i64 %2198 to i8*
  %1211 = getelementptr inbounds i8, i8* %1210, i64 4
  %1212 = bitcast i8* %1211 to i32*
  %1213 = load i32, i32* %1212, align 4
  %1214 = sext i32 %1213 to i64
  %1215 = getelementptr inbounds i8, i8* %1209, i64 %1214
  br label %1219

1216:                                             ; preds = %1201
  %1217 = inttoptr i64 %2198 to i8*
  %1218 = getelementptr inbounds i8, i8* %1217, i64 8
  br label %1219

1219:                                             ; preds = %1216, %1208
  %1220 = phi i8* [ %1215, %1208 ], [ %1218, %1216 ]
  %1221 = bitcast i8* %1220 to i32*
  %1222 = load i32, i32* %1221, align 4
  %1223 = and i32 %1222, 63
  %1224 = zext i32 %1223 to i64
  %1225 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1224
  %1226 = load i8*, i8** %1225, align 8
  br label %113

1227:                                             ; preds = %2193
  %1228 = lshr i32 %2200, 8
  %1229 = zext i32 %1228 to i64
  %1230 = load i32*, i32** %59, align 8
  %1231 = getelementptr inbounds i32, i32* %1230, i64 %1229
  %1232 = load i32, i32* %1231, align 4
  %1233 = inttoptr i64 %2198 to i8*
  %1234 = getelementptr inbounds i8, i8* %1233, i64 4
  %1235 = bitcast i8* %1234 to i32*
  %1236 = load i32, i32* %1235, align 4
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds i32, i32* %1230, i64 %1237
  %1239 = load i32, i32* %1238, align 4
  %1240 = icmp eq i32 %1232, %1239
  br i1 %1240, label %1241, label %1243

1241:                                             ; preds = %1227
  %1242 = getelementptr inbounds i8, i8* %1233, i64 12
  br label %1250

1243:                                             ; preds = %1227
  %1244 = inttoptr i64 %2199 to i8*
  %1245 = getelementptr inbounds i8, i8* %1233, i64 8
  %1246 = bitcast i8* %1245 to i32*
  %1247 = load i32, i32* %1246, align 4
  %1248 = sext i32 %1247 to i64
  %1249 = getelementptr inbounds i8, i8* %1244, i64 %1248
  br label %1250

1250:                                             ; preds = %1243, %1241
  %1251 = phi i8* [ %1242, %1241 ], [ %1249, %1243 ]
  %1252 = bitcast i8* %1251 to i32*
  %1253 = load i32, i32* %1252, align 4
  %1254 = and i32 %1253, 63
  %1255 = zext i32 %1254 to i64
  %1256 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1255
  %1257 = load i8*, i8** %1256, align 8
  br label %113

1258:                                             ; preds = %2193
  %1259 = lshr i32 %2200, 8
  %1260 = zext i32 %1259 to i64
  %1261 = load i32*, i32** %59, align 8
  %1262 = getelementptr inbounds i32, i32* %1261, i64 %1260
  %1263 = load i32, i32* %1262, align 4
  %1264 = add nuw nsw i32 %1259, 1
  %1265 = zext i32 %1264 to i64
  %1266 = getelementptr inbounds i32, i32* %1261, i64 %1265
  %1267 = load i32, i32* %1266, align 4
  %1268 = sub nsw i32 %1267, %1263
  %1269 = icmp sgt i32 %1263, -1
  %1270 = icmp sgt i32 %1268, 0
  %1271 = and i1 %1269, %1270
  br i1 %1271, label %1272, label %1299

1272:                                             ; preds = %1258
  %1273 = add nsw i32 %1268, %2203
  %1274 = trunc i64 %2196 to i32
  %1275 = icmp sgt i32 %1273, %1274
  br i1 %1275, label %1285, label %1276

1276:                                             ; preds = %1272
  %1277 = sext i32 %1263 to i64
  %1278 = inttoptr i64 %2197 to i8*
  %1279 = getelementptr inbounds i8, i8* %1278, i64 %1277
  %1280 = sext i32 %2203 to i64
  %1281 = getelementptr inbounds i8, i8* %1278, i64 %1280
  %1282 = sext i32 %1268 to i64
  %1283 = call i32 @bcmp(i8* %1279, i8* %1281, i64 %1282) #8
  %1284 = icmp eq i32 %1283, 0
  br i1 %1284, label %1299, label %1285

1285:                                             ; preds = %1276, %1272
  %1286 = inttoptr i64 %2199 to i8*
  %1287 = inttoptr i64 %2198 to i8*
  %1288 = getelementptr inbounds i8, i8* %1287, i64 4
  %1289 = bitcast i8* %1288 to i32*
  %1290 = load i32, i32* %1289, align 4
  %1291 = sext i32 %1290 to i64
  %1292 = getelementptr inbounds i8, i8* %1286, i64 %1291
  %1293 = bitcast i8* %1292 to i32*
  %1294 = load i32, i32* %1293, align 4
  %1295 = and i32 %1294, 63
  %1296 = zext i32 %1295 to i64
  %1297 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1296
  %1298 = load i8*, i8** %1297, align 8
  br label %113

1299:                                             ; preds = %1276, %1258
  %1300 = phi i32 [ %2203, %1258 ], [ %1273, %1276 ]
  %1301 = inttoptr i64 %2198 to i8*
  %1302 = getelementptr inbounds i8, i8* %1301, i64 8
  %1303 = bitcast i8* %1302 to i32*
  %1304 = load i32, i32* %1303, align 4
  %1305 = and i32 %1304, 63
  %1306 = zext i32 %1305 to i64
  %1307 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1306
  %1308 = load i8*, i8** %1307, align 8
  br label %113

1309:                                             ; preds = %2193
  %1310 = lshr i32 %2200, 8
  %1311 = zext i32 %1310 to i64
  %1312 = load i32*, i32** %59, align 8
  %1313 = getelementptr inbounds i32, i32* %1312, i64 %1311
  %1314 = load i32, i32* %1313, align 4
  %1315 = add nuw nsw i32 %1310, 1
  %1316 = zext i32 %1315 to i64
  %1317 = getelementptr inbounds i32, i32* %1312, i64 %1316
  %1318 = load i32, i32* %1317, align 4
  %1319 = sub nsw i32 %1318, %1314
  %1320 = icmp sgt i32 %1314, -1
  %1321 = icmp sgt i32 %1319, 0
  %1322 = and i1 %1320, %1321
  br i1 %1322, label %1323, label %1349

1323:                                             ; preds = %1309
  %1324 = sub nsw i32 %2203, %1319
  %1325 = icmp slt i32 %1324, 0
  br i1 %1325, label %1335, label %1326

1326:                                             ; preds = %1323
  %1327 = sext i32 %1314 to i64
  %1328 = inttoptr i64 %2197 to i8*
  %1329 = getelementptr inbounds i8, i8* %1328, i64 %1327
  %1330 = sext i32 %1324 to i64
  %1331 = getelementptr inbounds i8, i8* %1328, i64 %1330
  %1332 = sext i32 %1319 to i64
  %1333 = call i32 @bcmp(i8* %1329, i8* %1331, i64 %1332) #8
  %1334 = icmp eq i32 %1333, 0
  br i1 %1334, label %1349, label %1335

1335:                                             ; preds = %1326, %1323
  %1336 = inttoptr i64 %2199 to i8*
  %1337 = inttoptr i64 %2198 to i8*
  %1338 = getelementptr inbounds i8, i8* %1337, i64 4
  %1339 = bitcast i8* %1338 to i32*
  %1340 = load i32, i32* %1339, align 4
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds i8, i8* %1336, i64 %1341
  %1343 = bitcast i8* %1342 to i32*
  %1344 = load i32, i32* %1343, align 4
  %1345 = and i32 %1344, 63
  %1346 = zext i32 %1345 to i64
  %1347 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1346
  %1348 = load i8*, i8** %1347, align 8
  br label %113

1349:                                             ; preds = %1326, %1309
  %1350 = phi i32 [ %2203, %1309 ], [ %1324, %1326 ]
  %1351 = inttoptr i64 %2198 to i8*
  %1352 = getelementptr inbounds i8, i8* %1351, i64 8
  %1353 = bitcast i8* %1352 to i32*
  %1354 = load i32, i32* %1353, align 4
  %1355 = and i32 %1354, 63
  %1356 = zext i32 %1355 to i64
  %1357 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1356
  %1358 = load i8*, i8** %1357, align 8
  br label %113

1359:                                             ; preds = %2193
  %1360 = lshr i32 %2200, 8
  %1361 = zext i32 %1360 to i64
  %1362 = load i32*, i32** %59, align 8
  %1363 = getelementptr inbounds i32, i32* %1362, i64 %1361
  %1364 = load i32, i32* %1363, align 4
  %1365 = add nuw nsw i32 %1360, 1
  %1366 = zext i32 %1365 to i64
  %1367 = getelementptr inbounds i32, i32* %1362, i64 %1366
  %1368 = load i32, i32* %1367, align 4
  %1369 = sub nsw i32 %1368, %1364
  %1370 = icmp sgt i32 %1364, -1
  %1371 = icmp sgt i32 %1369, 0
  %1372 = and i1 %1370, %1371
  br i1 %1372, label %1373, label %1422

1373:                                             ; preds = %1359
  %1374 = add nsw i32 %1369, %2203
  %1375 = trunc i64 %2196 to i32
  %1376 = icmp sgt i32 %1374, %1375
  br i1 %1376, label %1408, label %1377

1377:                                             ; preds = %1373
  %1378 = inttoptr i64 %2197 to i8*
  %1379 = sext i32 %1364 to i64
  %1380 = sext i32 %2203 to i64
  br label %1381

1381:                                             ; preds = %1405, %1377
  %1382 = phi i64 [ %1380, %1377 ], [ %1388, %1405 ]
  %1383 = phi i64 [ %1379, %1377 ], [ %1385, %1405 ]
  %1384 = phi i32 [ 0, %1377 ], [ %1406, %1405 ]
  %1385 = add nsw i64 %1383, 1
  %1386 = getelementptr inbounds i8, i8* %1378, i64 %1383
  %1387 = load i8, i8* %1386, align 1
  %1388 = add nsw i64 %1382, 1
  %1389 = getelementptr inbounds i8, i8* %1378, i64 %1382
  %1390 = load i8, i8* %1389, align 1
  %1391 = icmp eq i8 %1387, %1390
  br i1 %1391, label %1405, label %1392

1392:                                             ; preds = %1381
  %1393 = or i8 %1387, 32
  %1394 = zext i8 %1393 to i32
  %1395 = or i8 %1390, 32
  %1396 = icmp eq i8 %1393, %1395
  br i1 %1396, label %1397, label %1408

1397:                                             ; preds = %1392
  %1398 = add nsw i32 %1394, -97
  %1399 = icmp ult i32 %1398, 26
  br i1 %1399, label %1405, label %1400

1400:                                             ; preds = %1397
  %1401 = add nsw i32 %1394, -224
  %1402 = icmp ult i32 %1401, 31
  %1403 = icmp ne i8 %1393, -9
  %1404 = and i1 %1403, %1402
  br i1 %1404, label %1405, label %1408

1405:                                             ; preds = %1400, %1397, %1381
  %1406 = add nuw nsw i32 %1384, 1
  %1407 = icmp eq i32 %1406, %1369
  br i1 %1407, label %1422, label %1381

1408:                                             ; preds = %1392, %1400, %1373
  %1409 = inttoptr i64 %2199 to i8*
  %1410 = inttoptr i64 %2198 to i8*
  %1411 = getelementptr inbounds i8, i8* %1410, i64 4
  %1412 = bitcast i8* %1411 to i32*
  %1413 = load i32, i32* %1412, align 4
  %1414 = sext i32 %1413 to i64
  %1415 = getelementptr inbounds i8, i8* %1409, i64 %1414
  %1416 = bitcast i8* %1415 to i32*
  %1417 = load i32, i32* %1416, align 4
  %1418 = and i32 %1417, 63
  %1419 = zext i32 %1418 to i64
  %1420 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1419
  %1421 = load i8*, i8** %1420, align 8
  br label %113

1422:                                             ; preds = %1405, %1359
  %1423 = phi i32 [ %2203, %1359 ], [ %1374, %1405 ]
  %1424 = inttoptr i64 %2198 to i8*
  %1425 = getelementptr inbounds i8, i8* %1424, i64 8
  %1426 = bitcast i8* %1425 to i32*
  %1427 = load i32, i32* %1426, align 4
  %1428 = and i32 %1427, 63
  %1429 = zext i32 %1428 to i64
  %1430 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1429
  %1431 = load i8*, i8** %1430, align 8
  br label %113

1432:                                             ; preds = %2193
  %1433 = lshr i32 %2200, 8
  %1434 = zext i32 %1433 to i64
  %1435 = load i32*, i32** %59, align 8
  %1436 = getelementptr inbounds i32, i32* %1435, i64 %1434
  %1437 = load i32, i32* %1436, align 4
  %1438 = add nuw nsw i32 %1433, 1
  %1439 = zext i32 %1438 to i64
  %1440 = getelementptr inbounds i32, i32* %1435, i64 %1439
  %1441 = load i32, i32* %1440, align 4
  %1442 = sub nsw i32 %1441, %1437
  %1443 = icmp sgt i32 %1437, -1
  %1444 = icmp sgt i32 %1442, 0
  %1445 = and i1 %1443, %1444
  br i1 %1445, label %1446, label %1495

1446:                                             ; preds = %1432
  %1447 = add nsw i32 %1442, %2203
  %1448 = trunc i64 %2196 to i32
  %1449 = icmp sgt i32 %1447, %1448
  br i1 %1449, label %1481, label %1450

1450:                                             ; preds = %1446
  %1451 = inttoptr i64 %2197 to i8*
  %1452 = sext i32 %1437 to i64
  %1453 = sext i32 %2203 to i64
  br label %1454

1454:                                             ; preds = %1478, %1450
  %1455 = phi i64 [ %1453, %1450 ], [ %1461, %1478 ]
  %1456 = phi i64 [ %1452, %1450 ], [ %1458, %1478 ]
  %1457 = phi i32 [ 0, %1450 ], [ %1479, %1478 ]
  %1458 = add nsw i64 %1456, 1
  %1459 = getelementptr inbounds i8, i8* %1451, i64 %1456
  %1460 = load i8, i8* %1459, align 1
  %1461 = add nsw i64 %1455, 1
  %1462 = getelementptr inbounds i8, i8* %1451, i64 %1455
  %1463 = load i8, i8* %1462, align 1
  %1464 = icmp eq i8 %1460, %1463
  br i1 %1464, label %1478, label %1465

1465:                                             ; preds = %1454
  %1466 = or i8 %1460, 32
  %1467 = zext i8 %1466 to i32
  %1468 = or i8 %1463, 32
  %1469 = icmp eq i8 %1466, %1468
  br i1 %1469, label %1470, label %1481

1470:                                             ; preds = %1465
  %1471 = add nsw i32 %1467, -97
  %1472 = icmp ult i32 %1471, 26
  br i1 %1472, label %1478, label %1473

1473:                                             ; preds = %1470
  %1474 = add nsw i32 %1467, -224
  %1475 = icmp ult i32 %1474, 31
  %1476 = icmp ne i8 %1466, -9
  %1477 = and i1 %1476, %1475
  br i1 %1477, label %1478, label %1481

1478:                                             ; preds = %1473, %1470, %1454
  %1479 = add nuw nsw i32 %1457, 1
  %1480 = icmp eq i32 %1479, %1442
  br i1 %1480, label %1495, label %1454

1481:                                             ; preds = %1465, %1473, %1446
  %1482 = inttoptr i64 %2199 to i8*
  %1483 = inttoptr i64 %2198 to i8*
  %1484 = getelementptr inbounds i8, i8* %1483, i64 4
  %1485 = bitcast i8* %1484 to i32*
  %1486 = load i32, i32* %1485, align 4
  %1487 = sext i32 %1486 to i64
  %1488 = getelementptr inbounds i8, i8* %1482, i64 %1487
  %1489 = bitcast i8* %1488 to i32*
  %1490 = load i32, i32* %1489, align 4
  %1491 = and i32 %1490, 63
  %1492 = zext i32 %1491 to i64
  %1493 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1492
  %1494 = load i8*, i8** %1493, align 8
  br label %113

1495:                                             ; preds = %1478, %1432
  %1496 = phi i32 [ %2203, %1432 ], [ %1447, %1478 ]
  %1497 = inttoptr i64 %2198 to i8*
  %1498 = getelementptr inbounds i8, i8* %1497, i64 8
  %1499 = bitcast i8* %1498 to i32*
  %1500 = load i32, i32* %1499, align 4
  %1501 = and i32 %1500, 63
  %1502 = zext i32 %1501 to i64
  %1503 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1502
  %1504 = load i8*, i8** %1503, align 8
  br label %113

1505:                                             ; preds = %2193
  %1506 = lshr i32 %2200, 8
  %1507 = zext i32 %1506 to i64
  %1508 = load i32*, i32** %59, align 8
  %1509 = getelementptr inbounds i32, i32* %1508, i64 %1507
  %1510 = load i32, i32* %1509, align 4
  %1511 = add nuw nsw i32 %1506, 1
  %1512 = zext i32 %1511 to i64
  %1513 = getelementptr inbounds i32, i32* %1508, i64 %1512
  %1514 = load i32, i32* %1513, align 4
  %1515 = sub nsw i32 %1514, %1510
  %1516 = icmp sgt i32 %1510, -1
  %1517 = icmp sgt i32 %1515, 0
  %1518 = and i1 %1516, %1517
  br i1 %1518, label %1519, label %1567

1519:                                             ; preds = %1505
  %1520 = sub nsw i32 %2203, %1515
  %1521 = icmp slt i32 %1520, 0
  br i1 %1521, label %1553, label %1522

1522:                                             ; preds = %1519
  %1523 = inttoptr i64 %2197 to i8*
  %1524 = sext i32 %1510 to i64
  %1525 = sext i32 %1520 to i64
  br label %1526

1526:                                             ; preds = %1550, %1522
  %1527 = phi i64 [ %1525, %1522 ], [ %1533, %1550 ]
  %1528 = phi i64 [ %1524, %1522 ], [ %1530, %1550 ]
  %1529 = phi i32 [ 0, %1522 ], [ %1551, %1550 ]
  %1530 = add nsw i64 %1528, 1
  %1531 = getelementptr inbounds i8, i8* %1523, i64 %1528
  %1532 = load i8, i8* %1531, align 1
  %1533 = add nsw i64 %1527, 1
  %1534 = getelementptr inbounds i8, i8* %1523, i64 %1527
  %1535 = load i8, i8* %1534, align 1
  %1536 = icmp eq i8 %1532, %1535
  br i1 %1536, label %1550, label %1537

1537:                                             ; preds = %1526
  %1538 = or i8 %1532, 32
  %1539 = zext i8 %1538 to i32
  %1540 = or i8 %1535, 32
  %1541 = icmp eq i8 %1538, %1540
  br i1 %1541, label %1542, label %1553

1542:                                             ; preds = %1537
  %1543 = add nsw i32 %1539, -97
  %1544 = icmp ult i32 %1543, 26
  br i1 %1544, label %1550, label %1545

1545:                                             ; preds = %1542
  %1546 = add nsw i32 %1539, -224
  %1547 = icmp ult i32 %1546, 31
  %1548 = icmp ne i8 %1538, -9
  %1549 = and i1 %1548, %1547
  br i1 %1549, label %1550, label %1553

1550:                                             ; preds = %1545, %1542, %1526
  %1551 = add nuw nsw i32 %1529, 1
  %1552 = icmp eq i32 %1551, %1515
  br i1 %1552, label %1567, label %1526

1553:                                             ; preds = %1537, %1545, %1519
  %1554 = inttoptr i64 %2199 to i8*
  %1555 = inttoptr i64 %2198 to i8*
  %1556 = getelementptr inbounds i8, i8* %1555, i64 4
  %1557 = bitcast i8* %1556 to i32*
  %1558 = load i32, i32* %1557, align 4
  %1559 = sext i32 %1558 to i64
  %1560 = getelementptr inbounds i8, i8* %1554, i64 %1559
  %1561 = bitcast i8* %1560 to i32*
  %1562 = load i32, i32* %1561, align 4
  %1563 = and i32 %1562, 63
  %1564 = zext i32 %1563 to i64
  %1565 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1564
  %1566 = load i8*, i8** %1565, align 8
  br label %113

1567:                                             ; preds = %1550, %1505
  %1568 = phi i32 [ %2203, %1505 ], [ %1520, %1550 ]
  %1569 = inttoptr i64 %2198 to i8*
  %1570 = getelementptr inbounds i8, i8* %1569, i64 8
  %1571 = bitcast i8* %1570 to i32*
  %1572 = load i32, i32* %1571, align 4
  %1573 = and i32 %1572, 63
  %1574 = zext i32 %1573 to i64
  %1575 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1574
  %1576 = load i8*, i8** %1575, align 8
  br label %113

1577:                                             ; preds = %2193
  %1578 = lshr i32 %2200, 8
  %1579 = zext i32 %1578 to i64
  %1580 = load i32*, i32** %59, align 8
  %1581 = getelementptr inbounds i32, i32* %1580, i64 %1579
  %1582 = load i32, i32* %1581, align 4
  %1583 = add nuw nsw i32 %1578, 1
  %1584 = zext i32 %1583 to i64
  %1585 = getelementptr inbounds i32, i32* %1580, i64 %1584
  %1586 = load i32, i32* %1585, align 4
  %1587 = sub nsw i32 %1586, %1582
  %1588 = icmp sgt i32 %1582, -1
  %1589 = icmp sgt i32 %1587, 0
  %1590 = and i1 %1588, %1589
  br i1 %1590, label %1591, label %1639

1591:                                             ; preds = %1577
  %1592 = sub nsw i32 %2203, %1587
  %1593 = icmp slt i32 %1592, 0
  br i1 %1593, label %1625, label %1594

1594:                                             ; preds = %1591
  %1595 = inttoptr i64 %2197 to i8*
  %1596 = sext i32 %1582 to i64
  %1597 = sext i32 %1592 to i64
  br label %1598

1598:                                             ; preds = %1622, %1594
  %1599 = phi i64 [ %1597, %1594 ], [ %1605, %1622 ]
  %1600 = phi i64 [ %1596, %1594 ], [ %1602, %1622 ]
  %1601 = phi i32 [ 0, %1594 ], [ %1623, %1622 ]
  %1602 = add nsw i64 %1600, 1
  %1603 = getelementptr inbounds i8, i8* %1595, i64 %1600
  %1604 = load i8, i8* %1603, align 1
  %1605 = add nsw i64 %1599, 1
  %1606 = getelementptr inbounds i8, i8* %1595, i64 %1599
  %1607 = load i8, i8* %1606, align 1
  %1608 = icmp eq i8 %1604, %1607
  br i1 %1608, label %1622, label %1609

1609:                                             ; preds = %1598
  %1610 = or i8 %1604, 32
  %1611 = zext i8 %1610 to i32
  %1612 = or i8 %1607, 32
  %1613 = icmp eq i8 %1610, %1612
  br i1 %1613, label %1614, label %1625

1614:                                             ; preds = %1609
  %1615 = add nsw i32 %1611, -97
  %1616 = icmp ult i32 %1615, 26
  br i1 %1616, label %1622, label %1617

1617:                                             ; preds = %1614
  %1618 = add nsw i32 %1611, -224
  %1619 = icmp ult i32 %1618, 31
  %1620 = icmp ne i8 %1610, -9
  %1621 = and i1 %1620, %1619
  br i1 %1621, label %1622, label %1625

1622:                                             ; preds = %1617, %1614, %1598
  %1623 = add nuw nsw i32 %1601, 1
  %1624 = icmp eq i32 %1623, %1587
  br i1 %1624, label %1639, label %1598

1625:                                             ; preds = %1609, %1617, %1591
  %1626 = inttoptr i64 %2199 to i8*
  %1627 = inttoptr i64 %2198 to i8*
  %1628 = getelementptr inbounds i8, i8* %1627, i64 4
  %1629 = bitcast i8* %1628 to i32*
  %1630 = load i32, i32* %1629, align 4
  %1631 = sext i32 %1630 to i64
  %1632 = getelementptr inbounds i8, i8* %1626, i64 %1631
  %1633 = bitcast i8* %1632 to i32*
  %1634 = load i32, i32* %1633, align 4
  %1635 = and i32 %1634, 63
  %1636 = zext i32 %1635 to i64
  %1637 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1636
  %1638 = load i8*, i8** %1637, align 8
  br label %113

1639:                                             ; preds = %1622, %1577
  %1640 = phi i32 [ %2203, %1577 ], [ %1592, %1622 ]
  %1641 = inttoptr i64 %2198 to i8*
  %1642 = getelementptr inbounds i8, i8* %1641, i64 8
  %1643 = bitcast i8* %1642 to i32*
  %1644 = load i32, i32* %1643, align 4
  %1645 = and i32 %1644, 63
  %1646 = zext i32 %1645 to i64
  %1647 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1646
  %1648 = load i8*, i8** %1647, align 8
  br label %113

1649:                                             ; preds = %2193
  %1650 = ashr i32 %2200, 8
  %1651 = sub nsw i32 0, %1650
  %1652 = icmp eq i32 %2203, %1651
  br i1 %1652, label %1653, label %1661

1653:                                             ; preds = %1649
  %1654 = inttoptr i64 %2199 to i8*
  %1655 = inttoptr i64 %2198 to i8*
  %1656 = getelementptr inbounds i8, i8* %1655, i64 4
  %1657 = bitcast i8* %1656 to i32*
  %1658 = load i32, i32* %1657, align 4
  %1659 = sext i32 %1658 to i64
  %1660 = getelementptr inbounds i8, i8* %1654, i64 %1659
  br label %1664

1661:                                             ; preds = %1649
  %1662 = inttoptr i64 %2198 to i8*
  %1663 = getelementptr inbounds i8, i8* %1662, i64 8
  br label %1664

1664:                                             ; preds = %1661, %1653
  %1665 = phi i8* [ %1660, %1653 ], [ %1663, %1661 ]
  %1666 = bitcast i8* %1665 to i32*
  %1667 = load i32, i32* %1666, align 4
  %1668 = and i32 %1667, 63
  %1669 = zext i32 %1668 to i64
  %1670 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1669
  %1671 = load i8*, i8** %1670, align 8
  br label %113

1672:                                             ; preds = %2193
  %1673 = ashr i32 %2200, 8
  %1674 = sub nsw i32 0, %1673
  %1675 = icmp eq i32 %2203, %1674
  br i1 %1675, label %1676, label %1679

1676:                                             ; preds = %1672
  %1677 = inttoptr i64 %2198 to i8*
  %1678 = getelementptr inbounds i8, i8* %1677, i64 8
  br label %1687

1679:                                             ; preds = %1672
  %1680 = inttoptr i64 %2199 to i8*
  %1681 = inttoptr i64 %2198 to i8*
  %1682 = getelementptr inbounds i8, i8* %1681, i64 4
  %1683 = bitcast i8* %1682 to i32*
  %1684 = load i32, i32* %1683, align 4
  %1685 = sext i32 %1684 to i64
  %1686 = getelementptr inbounds i8, i8* %1680, i64 %1685
  br label %1687

1687:                                             ; preds = %1679, %1676
  %1688 = phi i8* [ %1678, %1676 ], [ %1686, %1679 ]
  %1689 = bitcast i8* %1688 to i32*
  %1690 = load i32, i32* %1689, align 4
  %1691 = and i32 %1690, 63
  %1692 = zext i32 %1691 to i64
  %1693 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1692
  %1694 = load i8*, i8** %1693, align 8
  br label %113

1695:                                             ; preds = %2193
  %1696 = inttoptr i64 %2198 to i8*
  %1697 = getelementptr inbounds i8, i8* %1696, i64 4
  %1698 = bitcast i8* %1697 to i32*
  %1699 = load i32, i32* %1698, align 4
  %1700 = and i32 %1699, 63
  %1701 = zext i32 %1700 to i64
  %1702 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1701
  %1703 = load i8*, i8** %1702, align 8
  %1704 = lshr i32 %2200, 8
  %1705 = trunc i64 %2196 to i32
  %1706 = sub nsw i32 %1705, %2203
  %1707 = icmp sgt i32 %1706, %1704
  br i1 %1707, label %1708, label %113

1708:                                             ; preds = %1695
  %1709 = sub nsw i32 %1705, %1704
  %1710 = add nsw i32 %1709, -1
  %1711 = sext i32 %1710 to i64
  %1712 = inttoptr i64 %2197 to i8*
  %1713 = getelementptr inbounds i8, i8* %1712, i64 %1711
  %1714 = load i8, i8* %1713, align 1
  %1715 = zext i8 %1714 to i32
  br label %113

1716:                                             ; preds = %2193
  %1717 = ashr i32 %2200, 8
  %1718 = add nsw i32 %2203, %1717
  %1719 = trunc i64 %2196 to i32
  %1720 = icmp sgt i32 %1718, %1719
  %1721 = icmp slt i32 %1718, 0
  %1722 = or i1 %1720, %1721
  br i1 %1722, label %1723, label %1731

1723:                                             ; preds = %1716
  %1724 = inttoptr i64 %2199 to i8*
  %1725 = inttoptr i64 %2198 to i8*
  %1726 = getelementptr inbounds i8, i8* %1725, i64 4
  %1727 = bitcast i8* %1726 to i32*
  %1728 = load i32, i32* %1727, align 4
  %1729 = sext i32 %1728 to i64
  %1730 = getelementptr inbounds i8, i8* %1724, i64 %1729
  br label %1734

1731:                                             ; preds = %1716
  %1732 = inttoptr i64 %2198 to i8*
  %1733 = getelementptr inbounds i8, i8* %1732, i64 8
  br label %1734

1734:                                             ; preds = %1731, %1723
  %1735 = phi i8* [ %1730, %1723 ], [ %1733, %1731 ]
  %1736 = bitcast i8* %1735 to i32*
  %1737 = load i32, i32* %1736, align 4
  %1738 = and i32 %1737, 63
  %1739 = zext i32 %1738 to i64
  %1740 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1739
  %1741 = load i8*, i8** %1740, align 8
  br label %113

1742:                                             ; preds = %2193
  %1743 = ashr i32 %2200, 8
  %1744 = inttoptr i64 %2198 to i8*
  %1745 = getelementptr inbounds i8, i8* %1744, i64 6
  %1746 = bitcast i8* %1745 to i16*
  %1747 = load i16, i16* %1746, align 2
  %1748 = zext i16 %1747 to i32
  %1749 = add nsw i32 %2203, %1743
  %1750 = trunc i64 %2196 to i32
  %1751 = icmp ult i32 %1749, %1750
  br i1 %1751, label %1752, label %1789

1752:                                             ; preds = %1742
  %1753 = getelementptr inbounds i8, i8* %1744, i64 4
  %1754 = bitcast i8* %1753 to i16*
  %1755 = load i16, i16* %1754, align 2
  %1756 = inttoptr i64 %2197 to i8*
  %1757 = sext i32 %2203 to i64
  %1758 = sext i16 %1755 to i64
  br label %1759

1759:                                             ; preds = %1752, %1781
  %1760 = phi i64 [ %1757, %1752 ], [ %1782, %1781 ]
  %1761 = phi i32 [ %1749, %1752 ], [ %1784, %1781 ]
  %1762 = sext i32 %1761 to i64
  %1763 = getelementptr inbounds i8, i8* %1756, i64 %1762
  %1764 = load i8, i8* %1763, align 1
  %1765 = zext i8 %1764 to i32
  %1766 = icmp eq i32 %1748, %1765
  br i1 %1766, label %1767, label %1781

1767:                                             ; preds = %1759
  %1768 = trunc i64 %1760 to i32
  %1769 = inttoptr i64 %2199 to i8*
  %1770 = getelementptr inbounds i8, i8* %1744, i64 8
  %1771 = bitcast i8* %1770 to i32*
  %1772 = load i32, i32* %1771, align 4
  %1773 = sext i32 %1772 to i64
  %1774 = getelementptr inbounds i8, i8* %1769, i64 %1773
  %1775 = bitcast i8* %1774 to i32*
  %1776 = load i32, i32* %1775, align 4
  %1777 = and i32 %1776, 63
  %1778 = zext i32 %1777 to i64
  %1779 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1778
  %1780 = load i8*, i8** %1779, align 8
  br label %113

1781:                                             ; preds = %1759
  %1782 = add i64 %1760, %1758
  %1783 = trunc i64 %1782 to i32
  %1784 = add i32 %1743, %1783
  %1785 = icmp ult i32 %1784, %1750
  br i1 %1785, label %1759, label %1786

1786:                                             ; preds = %1781
  %1787 = zext i8 %1764 to i32
  %1788 = trunc i64 %1782 to i32
  br label %1789

1789:                                             ; preds = %1786, %1742
  %1790 = phi i32 [ %1787, %1786 ], [ %2202, %1742 ]
  %1791 = phi i32 [ %1788, %1786 ], [ %2203, %1742 ]
  %1792 = inttoptr i64 %2199 to i8*
  %1793 = getelementptr inbounds i8, i8* %1744, i64 12
  %1794 = bitcast i8* %1793 to i32*
  %1795 = load i32, i32* %1794, align 4
  %1796 = sext i32 %1795 to i64
  %1797 = getelementptr inbounds i8, i8* %1792, i64 %1796
  %1798 = bitcast i8* %1797 to i32*
  %1799 = load i32, i32* %1798, align 4
  %1800 = and i32 %1799, 63
  %1801 = zext i32 %1800 to i64
  %1802 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1801
  %1803 = load i8*, i8** %1802, align 8
  br label %113

1804:                                             ; preds = %2193
  %1805 = inttoptr i64 %2198 to i8*
  %1806 = getelementptr inbounds i8, i8* %1805, i64 6
  %1807 = bitcast i8* %1806 to i16*
  %1808 = load i16, i16* %1807, align 2
  %1809 = zext i16 %1808 to i32
  %1810 = getelementptr inbounds i8, i8* %1805, i64 8
  %1811 = bitcast i8* %1810 to i32*
  %1812 = load i32, i32* %1811, align 4
  %1813 = getelementptr inbounds i8, i8* %1805, i64 12
  %1814 = bitcast i8* %1813 to i32*
  %1815 = load i32, i32* %1814, align 4
  %1816 = add nsw i32 %2203, %1815
  %1817 = trunc i64 %2196 to i32
  %1818 = icmp ugt i32 %1816, %1817
  br i1 %1818, label %1859, label %1819

1819:                                             ; preds = %1804
  %1820 = getelementptr inbounds i8, i8* %1805, i64 4
  %1821 = bitcast i8* %1820 to i16*
  %1822 = load i16, i16* %1821, align 2
  %1823 = ashr i32 %2200, 8
  %1824 = inttoptr i64 %2197 to i8*
  %1825 = sext i32 %2203 to i64
  %1826 = sext i16 %1822 to i64
  %1827 = sext i32 %1823 to i64
  br label %1828

1828:                                             ; preds = %1819, %1851
  %1829 = phi i64 [ %1825, %1819 ], [ %1852, %1851 ]
  %1830 = add nsw i64 %1829, %1827
  %1831 = getelementptr inbounds i8, i8* %1824, i64 %1830
  %1832 = load i8, i8* %1831, align 1
  %1833 = zext i8 %1832 to i32
  %1834 = and i32 %1812, %1833
  %1835 = icmp eq i32 %1834, %1809
  br i1 %1835, label %1836, label %1851

1836:                                             ; preds = %1828
  %1837 = zext i8 %1832 to i32
  %1838 = trunc i64 %1829 to i32
  %1839 = inttoptr i64 %2199 to i8*
  %1840 = getelementptr inbounds i8, i8* %1805, i64 16
  %1841 = bitcast i8* %1840 to i32*
  %1842 = load i32, i32* %1841, align 4
  %1843 = sext i32 %1842 to i64
  %1844 = getelementptr inbounds i8, i8* %1839, i64 %1843
  %1845 = bitcast i8* %1844 to i32*
  %1846 = load i32, i32* %1845, align 4
  %1847 = and i32 %1846, 63
  %1848 = zext i32 %1847 to i64
  %1849 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1848
  %1850 = load i8*, i8** %1849, align 8
  br label %113

1851:                                             ; preds = %1828
  %1852 = add i64 %1829, %1826
  %1853 = trunc i64 %1852 to i32
  %1854 = add i32 %1815, %1853
  %1855 = icmp ugt i32 %1854, %1817
  br i1 %1855, label %1856, label %1828

1856:                                             ; preds = %1851
  %1857 = zext i8 %1832 to i32
  %1858 = trunc i64 %1852 to i32
  br label %1859

1859:                                             ; preds = %1856, %1804
  %1860 = phi i32 [ %1857, %1856 ], [ %2202, %1804 ]
  %1861 = phi i32 [ %1858, %1856 ], [ %2203, %1804 ]
  %1862 = inttoptr i64 %2199 to i8*
  %1863 = getelementptr inbounds i8, i8* %1805, i64 20
  %1864 = bitcast i8* %1863 to i32*
  %1865 = load i32, i32* %1864, align 4
  %1866 = sext i32 %1865 to i64
  %1867 = getelementptr inbounds i8, i8* %1862, i64 %1866
  %1868 = bitcast i8* %1867 to i32*
  %1869 = load i32, i32* %1868, align 4
  %1870 = and i32 %1869, 63
  %1871 = zext i32 %1870 to i64
  %1872 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1871
  %1873 = load i8*, i8** %1872, align 8
  br label %113

1874:                                             ; preds = %2193
  %1875 = inttoptr i64 %2198 to i8*
  %1876 = getelementptr inbounds i8, i8* %1875, i64 6
  %1877 = bitcast i8* %1876 to i16*
  %1878 = load i16, i16* %1877, align 2
  %1879 = zext i16 %1878 to i32
  %1880 = getelementptr inbounds i8, i8* %1875, i64 8
  %1881 = bitcast i8* %1880 to i32*
  %1882 = load i32, i32* %1881, align 4
  %1883 = add nsw i32 %2203, %1882
  %1884 = trunc i64 %2196 to i32
  %1885 = icmp ugt i32 %1883, %1884
  br i1 %1885, label %1924, label %1886

1886:                                             ; preds = %1874
  %1887 = getelementptr inbounds i8, i8* %1875, i64 4
  %1888 = bitcast i8* %1887 to i16*
  %1889 = load i16, i16* %1888, align 2
  %1890 = ashr i32 %2200, 8
  %1891 = inttoptr i64 %2197 to i8*
  %1892 = sext i32 %2203 to i64
  %1893 = sext i16 %1889 to i64
  %1894 = sext i32 %1890 to i64
  br label %1895

1895:                                             ; preds = %1886, %1916
  %1896 = phi i64 [ %1892, %1886 ], [ %1917, %1916 ]
  %1897 = add nsw i64 %1896, %1894
  %1898 = getelementptr inbounds i8, i8* %1891, i64 %1897
  %1899 = load i8, i8* %1898, align 1
  %1900 = zext i8 %1899 to i32
  %1901 = icmp eq i32 %1879, %1900
  br i1 %1901, label %1902, label %1916

1902:                                             ; preds = %1895
  %1903 = trunc i64 %1896 to i32
  %1904 = inttoptr i64 %2199 to i8*
  %1905 = getelementptr inbounds i8, i8* %1875, i64 12
  %1906 = bitcast i8* %1905 to i32*
  %1907 = load i32, i32* %1906, align 4
  %1908 = sext i32 %1907 to i64
  %1909 = getelementptr inbounds i8, i8* %1904, i64 %1908
  %1910 = bitcast i8* %1909 to i32*
  %1911 = load i32, i32* %1910, align 4
  %1912 = and i32 %1911, 63
  %1913 = zext i32 %1912 to i64
  %1914 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1913
  %1915 = load i8*, i8** %1914, align 8
  br label %113

1916:                                             ; preds = %1895
  %1917 = add i64 %1896, %1893
  %1918 = trunc i64 %1917 to i32
  %1919 = add i32 %1882, %1918
  %1920 = icmp ugt i32 %1919, %1884
  br i1 %1920, label %1921, label %1895

1921:                                             ; preds = %1916
  %1922 = zext i8 %1899 to i32
  %1923 = trunc i64 %1917 to i32
  br label %1924

1924:                                             ; preds = %1921, %1874
  %1925 = phi i32 [ %1922, %1921 ], [ %2202, %1874 ]
  %1926 = phi i32 [ %1923, %1921 ], [ %2203, %1874 ]
  %1927 = inttoptr i64 %2199 to i8*
  %1928 = getelementptr inbounds i8, i8* %1875, i64 16
  %1929 = bitcast i8* %1928 to i32*
  %1930 = load i32, i32* %1929, align 4
  %1931 = sext i32 %1930 to i64
  %1932 = getelementptr inbounds i8, i8* %1927, i64 %1931
  %1933 = bitcast i8* %1932 to i32*
  %1934 = load i32, i32* %1933, align 4
  %1935 = and i32 %1934, 63
  %1936 = zext i32 %1935 to i64
  %1937 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1936
  %1938 = load i8*, i8** %1937, align 8
  br label %113

1939:                                             ; preds = %2193
  %1940 = ashr i32 %2200, 8
  %1941 = inttoptr i64 %2198 to i8*
  %1942 = getelementptr inbounds i8, i8* %1941, i64 8
  %1943 = add nsw i32 %2203, %1940
  %1944 = trunc i64 %2196 to i32
  %1945 = icmp ult i32 %1943, %1944
  br i1 %1945, label %1946, label %1993

1946:                                             ; preds = %1939
  %1947 = getelementptr inbounds i8, i8* %1941, i64 4
  %1948 = bitcast i8* %1947 to i16*
  %1949 = load i16, i16* %1948, align 2
  %1950 = inttoptr i64 %2197 to i8*
  %1951 = sext i32 %2203 to i64
  %1952 = sext i16 %1949 to i64
  br label %1953

1953:                                             ; preds = %1946, %1985
  %1954 = phi i64 [ %1951, %1946 ], [ %1986, %1985 ]
  %1955 = phi i32 [ %1943, %1946 ], [ %1988, %1985 ]
  %1956 = sext i32 %1955 to i64
  %1957 = getelementptr inbounds i8, i8* %1950, i64 %1956
  %1958 = load i8, i8* %1957, align 1
  %1959 = zext i8 %1958 to i32
  %1960 = lshr i32 %1959, 3
  %1961 = and i32 %1960, 15
  %1962 = zext i32 %1961 to i64
  %1963 = getelementptr inbounds i8, i8* %1942, i64 %1962
  %1964 = load i8, i8* %1963, align 1
  %1965 = zext i8 %1964 to i32
  %1966 = and i32 %1959, 7
  %1967 = shl i32 1, %1966
  %1968 = and i32 %1967, %1965
  %1969 = icmp eq i32 %1968, 0
  br i1 %1969, label %1985, label %1970

1970:                                             ; preds = %1953
  %1971 = zext i8 %1958 to i32
  %1972 = trunc i64 %1954 to i32
  %1973 = inttoptr i64 %2199 to i8*
  %1974 = getelementptr inbounds i8, i8* %1941, i64 24
  %1975 = bitcast i8* %1974 to i32*
  %1976 = load i32, i32* %1975, align 4
  %1977 = sext i32 %1976 to i64
  %1978 = getelementptr inbounds i8, i8* %1973, i64 %1977
  %1979 = bitcast i8* %1978 to i32*
  %1980 = load i32, i32* %1979, align 4
  %1981 = and i32 %1980, 63
  %1982 = zext i32 %1981 to i64
  %1983 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1982
  %1984 = load i8*, i8** %1983, align 8
  br label %113

1985:                                             ; preds = %1953
  %1986 = add i64 %1954, %1952
  %1987 = trunc i64 %1986 to i32
  %1988 = add i32 %1940, %1987
  %1989 = icmp ult i32 %1988, %1944
  br i1 %1989, label %1953, label %1990

1990:                                             ; preds = %1985
  %1991 = zext i8 %1958 to i32
  %1992 = trunc i64 %1986 to i32
  br label %1993

1993:                                             ; preds = %1990, %1939
  %1994 = phi i32 [ %1991, %1990 ], [ %2202, %1939 ]
  %1995 = phi i32 [ %1992, %1990 ], [ %2203, %1939 ]
  %1996 = inttoptr i64 %2199 to i8*
  %1997 = getelementptr inbounds i8, i8* %1941, i64 28
  %1998 = bitcast i8* %1997 to i32*
  %1999 = load i32, i32* %1998, align 4
  %2000 = sext i32 %1999 to i64
  %2001 = getelementptr inbounds i8, i8* %1996, i64 %2000
  %2002 = bitcast i8* %2001 to i32*
  %2003 = load i32, i32* %2002, align 4
  %2004 = and i32 %2003, 63
  %2005 = zext i32 %2004 to i64
  %2006 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %2005
  %2007 = load i8*, i8** %2006, align 8
  br label %113

2008:                                             ; preds = %2193
  %2009 = ashr i32 %2200, 8
  %2010 = inttoptr i64 %2198 to i8*
  %2011 = getelementptr inbounds i8, i8* %2010, i64 6
  %2012 = bitcast i8* %2011 to i16*
  %2013 = load i16, i16* %2012, align 2
  %2014 = zext i16 %2013 to i32
  %2015 = getelementptr inbounds i8, i8* %2010, i64 8
  %2016 = add nsw i32 %2203, %2009
  %2017 = trunc i64 %2196 to i32
  %2018 = icmp ult i32 %2016, %2017
  br i1 %2018, label %2019, label %2083

2019:                                             ; preds = %2008
  %2020 = getelementptr inbounds i8, i8* %2010, i64 4
  %2021 = bitcast i8* %2020 to i16*
  %2022 = load i16, i16* %2021, align 2
  %2023 = inttoptr i64 %2197 to i8*
  %2024 = sext i32 %2203 to i64
  %2025 = sext i16 %2022 to i64
  br label %2026

2026:                                             ; preds = %2019, %2075
  %2027 = phi i64 [ %2024, %2019 ], [ %2076, %2075 ]
  %2028 = phi i32 [ %2016, %2019 ], [ %2078, %2075 ]
  %2029 = sext i32 %2028 to i64
  %2030 = getelementptr inbounds i8, i8* %2023, i64 %2029
  %2031 = load i8, i8* %2030, align 1
  %2032 = zext i8 %2031 to i32
  %2033 = icmp ult i32 %2014, %2032
  br i1 %2033, label %2034, label %2049

2034:                                             ; preds = %2026
  %2035 = zext i8 %2031 to i32
  %2036 = trunc i64 %2027 to i32
  %2037 = inttoptr i64 %2199 to i8*
  %2038 = getelementptr inbounds i8, i8* %2010, i64 24
  %2039 = bitcast i8* %2038 to i32*
  %2040 = load i32, i32* %2039, align 4
  %2041 = sext i32 %2040 to i64
  %2042 = getelementptr inbounds i8, i8* %2037, i64 %2041
  %2043 = bitcast i8* %2042 to i32*
  %2044 = load i32, i32* %2043, align 4
  %2045 = and i32 %2044, 63
  %2046 = zext i32 %2045 to i64
  %2047 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %2046
  %2048 = load i8*, i8** %2047, align 8
  br label %113

2049:                                             ; preds = %2026
  %2050 = lshr i32 %2032, 3
  %2051 = and i32 %2050, 15
  %2052 = zext i32 %2051 to i64
  %2053 = getelementptr inbounds i8, i8* %2015, i64 %2052
  %2054 = load i8, i8* %2053, align 1
  %2055 = zext i8 %2054 to i32
  %2056 = and i32 %2032, 7
  %2057 = shl i32 1, %2056
  %2058 = and i32 %2057, %2055
  %2059 = icmp eq i32 %2058, 0
  br i1 %2059, label %2060, label %2075

2060:                                             ; preds = %2049
  %2061 = zext i8 %2031 to i32
  %2062 = trunc i64 %2027 to i32
  %2063 = inttoptr i64 %2199 to i8*
  %2064 = getelementptr inbounds i8, i8* %2010, i64 24
  %2065 = bitcast i8* %2064 to i32*
  %2066 = load i32, i32* %2065, align 4
  %2067 = sext i32 %2066 to i64
  %2068 = getelementptr inbounds i8, i8* %2063, i64 %2067
  %2069 = bitcast i8* %2068 to i32*
  %2070 = load i32, i32* %2069, align 4
  %2071 = and i32 %2070, 63
  %2072 = zext i32 %2071 to i64
  %2073 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %2072
  %2074 = load i8*, i8** %2073, align 8
  br label %113

2075:                                             ; preds = %2049
  %2076 = add i64 %2027, %2025
  %2077 = trunc i64 %2076 to i32
  %2078 = add i32 %2009, %2077
  %2079 = icmp ult i32 %2078, %2017
  br i1 %2079, label %2026, label %2080

2080:                                             ; preds = %2075
  %2081 = zext i8 %2031 to i32
  %2082 = trunc i64 %2076 to i32
  br label %2083

2083:                                             ; preds = %2080, %2008
  %2084 = phi i32 [ %2081, %2080 ], [ %2202, %2008 ]
  %2085 = phi i32 [ %2082, %2080 ], [ %2203, %2008 ]
  %2086 = inttoptr i64 %2199 to i8*
  %2087 = getelementptr inbounds i8, i8* %2010, i64 28
  %2088 = bitcast i8* %2087 to i32*
  %2089 = load i32, i32* %2088, align 4
  %2090 = sext i32 %2089 to i64
  %2091 = getelementptr inbounds i8, i8* %2086, i64 %2090
  %2092 = bitcast i8* %2091 to i32*
  %2093 = load i32, i32* %2092, align 4
  %2094 = and i32 %2093, 63
  %2095 = zext i32 %2094 to i64
  %2096 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %2095
  %2097 = load i8*, i8** %2096, align 8
  br label %113

2098:                                             ; preds = %2193
  %2099 = ashr i32 %2200, 8
  %2100 = inttoptr i64 %2198 to i8*
  %2101 = getelementptr inbounds i8, i8* %2100, i64 8
  %2102 = bitcast i8* %2101 to i16*
  %2103 = load i16, i16* %2102, align 2
  %2104 = zext i16 %2103 to i32
  %2105 = getelementptr inbounds i8, i8* %2100, i64 10
  %2106 = bitcast i8* %2105 to i16*
  %2107 = load i16, i16* %2106, align 2
  %2108 = zext i16 %2107 to i32
  %2109 = add nsw i32 %2203, %2099
  %2110 = trunc i64 %2196 to i32
  %2111 = icmp ult i32 %2109, %2110
  br i1 %2111, label %2112, label %2165

2112:                                             ; preds = %2098
  %2113 = getelementptr inbounds i8, i8* %2100, i64 4
  %2114 = bitcast i8* %2113 to i32*
  %2115 = load i32, i32* %2114, align 4
  %2116 = inttoptr i64 %2197 to i8*
  %2117 = sext i32 %2203 to i64
  %2118 = sext i32 %2115 to i64
  br label %2119

2119:                                             ; preds = %2112, %2157
  %2120 = phi i64 [ %2117, %2112 ], [ %2158, %2157 ]
  %2121 = phi i32 [ %2109, %2112 ], [ %2160, %2157 ]
  %2122 = sext i32 %2121 to i64
  %2123 = getelementptr inbounds i8, i8* %2116, i64 %2122
  %2124 = load i8, i8* %2123, align 1
  %2125 = zext i8 %2124 to i32
  %2126 = icmp eq i32 %2104, %2125
  br i1 %2126, label %2127, label %2141

2127:                                             ; preds = %2119
  %2128 = trunc i64 %2120 to i32
  %2129 = inttoptr i64 %2199 to i8*
  %2130 = getelementptr inbounds i8, i8* %2100, i64 12
  %2131 = bitcast i8* %2130 to i32*
  %2132 = load i32, i32* %2131, align 4
  %2133 = sext i32 %2132 to i64
  %2134 = getelementptr inbounds i8, i8* %2129, i64 %2133
  %2135 = bitcast i8* %2134 to i32*
  %2136 = load i32, i32* %2135, align 4
  %2137 = and i32 %2136, 63
  %2138 = zext i32 %2137 to i64
  %2139 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %2138
  %2140 = load i8*, i8** %2139, align 8
  br label %113

2141:                                             ; preds = %2119
  %2142 = icmp eq i32 %2108, %2125
  br i1 %2142, label %2143, label %2157

2143:                                             ; preds = %2141
  %2144 = trunc i64 %2120 to i32
  %2145 = inttoptr i64 %2199 to i8*
  %2146 = getelementptr inbounds i8, i8* %2100, i64 12
  %2147 = bitcast i8* %2146 to i32*
  %2148 = load i32, i32* %2147, align 4
  %2149 = sext i32 %2148 to i64
  %2150 = getelementptr inbounds i8, i8* %2145, i64 %2149
  %2151 = bitcast i8* %2150 to i32*
  %2152 = load i32, i32* %2151, align 4
  %2153 = and i32 %2152, 63
  %2154 = zext i32 %2153 to i64
  %2155 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %2154
  %2156 = load i8*, i8** %2155, align 8
  br label %113

2157:                                             ; preds = %2141
  %2158 = add i64 %2120, %2118
  %2159 = trunc i64 %2158 to i32
  %2160 = add i32 %2099, %2159
  %2161 = icmp ult i32 %2160, %2110
  br i1 %2161, label %2119, label %2162

2162:                                             ; preds = %2157
  %2163 = zext i8 %2124 to i32
  %2164 = trunc i64 %2158 to i32
  br label %2165

2165:                                             ; preds = %2162, %2098
  %2166 = phi i32 [ %2163, %2162 ], [ %2202, %2098 ]
  %2167 = phi i32 [ %2164, %2162 ], [ %2203, %2098 ]
  %2168 = inttoptr i64 %2199 to i8*
  %2169 = getelementptr inbounds i8, i8* %2100, i64 16
  %2170 = bitcast i8* %2169 to i32*
  %2171 = load i32, i32* %2170, align 4
  %2172 = sext i32 %2171 to i64
  %2173 = getelementptr inbounds i8, i8* %2168, i64 %2172
  %2174 = bitcast i8* %2173 to i32*
  %2175 = load i32, i32* %2174, align 4
  %2176 = and i32 %2175, 63
  %2177 = zext i32 %2176 to i64
  %2178 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchIhEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %2177
  %2179 = load i8*, i8** %2178, align 8
  br label %113

2180:                                             ; preds = %514, %513, %512, %508, %505, %452, %184, %183, %153, %152, %111, %110, %488, %311
  %2181 = phi i32 [ 0, %488 ], [ %312, %311 ], [ -1, %110 ], [ -1, %111 ], [ -1, %152 ], [ -1, %153 ], [ -1, %183 ], [ -1, %184 ], [ %453, %452 ], [ 1, %505 ], [ 1, %508 ], [ 1, %512 ], [ 1, %513 ], [ 1, %514 ]
  %2182 = load i32*, i32** %84, align 8
  %2183 = bitcast %"struct.std::__1::aligned_storage<256, 4>::type"* %46 to i32*
  %2184 = icmp eq i32* %2182, %2183
  br i1 %2184, label %2187, label %2185

2185:                                             ; preds = %2180
  %2186 = bitcast i32* %2182 to i8*
  call void @free(i8* %2186) #8
  br label %2187

2187:                                             ; preds = %2180, %2185
  %2188 = load i32*, i32** %59, align 8
  %2189 = icmp eq i32* %2188, %30
  br i1 %2189, label %2192, label %2190

2190:                                             ; preds = %2187
  %2191 = bitcast i32* %2188 to i8*
  call void @free(i8* %2191) #8
  br label %2192

2192:                                             ; preds = %2187, %2190
  ret i32 %2181

2193:                                             ; preds = %113, %38
  %2194 = phi i64 [ %1, %38 ], [ %114, %113 ]
  %2195 = phi i64 [ %2, %38 ], [ %115, %113 ]
  %2196 = phi i64 [ %4, %38 ], [ %116, %113 ]
  %2197 = phi i64 [ %19, %38 ], [ %117, %113 ]
  %2198 = phi i64 [ %20, %38 ], [ %125, %113 ]
  %2199 = phi i64 [ %20, %38 ], [ %119, %113 ]
  %2200 = phi i32 [ %54, %38 ], [ %120, %113 ]
  %2201 = phi i32 [ 0, %38 ], [ %121, %113 ]
  %2202 = phi i32 [ %9, %38 ], [ %122, %113 ]
  %2203 = phi i32 [ %8, %38 ], [ %123, %113 ]
  %2204 = phi i8* [ %58, %38 ], [ %124, %113 ]
  indirectbr i8* %2204, [label %86, label %87, label %126, label %155, label %220, label %237, label %251, label %269, label %186, label %202, label %296, label %308, label %472, label %488, label %492, label %515, label %526, label %584, label %616, label %632, label %672, label %695, label %749, label %786, label %809, label %831, label %854, label %876, label %903, label %928, label %955, label %980, label %1011, label %1041, label %1071, label %1101, label %1123, label %1258, label %1432, label %1359, label %1309, label %1577, label %1505, label %1227, label %1145, label %1173, label %1201, label %1649, label %1672, label %556, label %540, label %1695, label %1716, label %1939, label %1804, label %1742, label %1874, label %2098, label %2008]
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEj(%"class.v8::internal::Isolate"*, i64, i64, i16*, i64, i32*, i32, i32, i32, i32, i32, i32) #0 {
  %13 = alloca %"class.v8::internal::String::FlatContent", align 8
  %14 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %15 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %16 = alloca %"class.v8::internal::StackLimitCheck", align 8
  %17 = alloca %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", align 8
  %18 = alloca %"class.v8::internal::(anonymous namespace)::BacktrackStack", align 8
  %19 = ptrtoint i16* %3 to i64
  %20 = add i64 %1, 7
  %21 = sext i32 %7 to i64
  %22 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 0, i32 3
  %23 = bitcast %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17 to %"struct.std::__1::aligned_storage<256, 4>::type"**
  store %"struct.std::__1::aligned_storage<256, 4>::type"* %22, %"struct.std::__1::aligned_storage<256, 4>::type"** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 0, i32 1
  %25 = bitcast i32** %24 to %"struct.std::__1::aligned_storage<256, 4>::type"**
  store %"struct.std::__1::aligned_storage<256, 4>::type"* %22, %"struct.std::__1::aligned_storage<256, 4>::type"** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 0, i32 2
  %27 = getelementptr inbounds %"struct.std::__1::aligned_storage<256, 4>::type", %"struct.std::__1::aligned_storage<256, 4>::type"* %22, i64 1
  %28 = bitcast i32** %26 to %"struct.std::__1::aligned_storage<256, 4>::type"**
  store %"struct.std::__1::aligned_storage<256, 4>::type"* %27, %"struct.std::__1::aligned_storage<256, 4>::type"** %28, align 8
  %29 = icmp ugt i32 %7, 64
  %30 = bitcast %"struct.std::__1::aligned_storage<256, 4>::type"* %22 to i32*
  %31 = getelementptr inbounds %"struct.std::__1::aligned_storage<256, 4>::type", %"struct.std::__1::aligned_storage<256, 4>::type"* %22, i64 0, i32 0, i64 0
  br i1 %29, label %32, label %38

32:                                               ; preds = %12
  %33 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 0, i32 0
  %35 = call i32* @_ZN2v84base11SmallVectorIiLm64EE4GrowEm(%"class.v8::base::SmallVector"* nonnull %33, i64 %21) #8
  %36 = load i32*, i32** %34, align 8
  %37 = bitcast i32* %36 to i8*
  br label %38

38:                                               ; preds = %12, %32
  %39 = phi i8* [ %37, %32 ], [ %31, %12 ]
  %40 = phi i32* [ %36, %32 ], [ %30, %12 ]
  %41 = getelementptr inbounds i32, i32* %40, i64 %21
  store i32* %41, i32** %24, align 8
  %42 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 1
  store i32* %5, i32** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 2
  store i32 %6, i32* %43, align 8
  %44 = sext i32 %6 to i64
  %45 = shl nsw i64 %44, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 -1, i64 %45, i1 false) #8
  %46 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BacktrackStack", %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18, i64 0, i32 0, i32 3
  %47 = bitcast %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18 to %"struct.std::__1::aligned_storage<256, 4>::type"**
  store %"struct.std::__1::aligned_storage<256, 4>::type"* %46, %"struct.std::__1::aligned_storage<256, 4>::type"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BacktrackStack", %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18, i64 0, i32 0, i32 1
  %49 = bitcast i32** %48 to %"struct.std::__1::aligned_storage<256, 4>::type"**
  store %"struct.std::__1::aligned_storage<256, 4>::type"* %46, %"struct.std::__1::aligned_storage<256, 4>::type"** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BacktrackStack", %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18, i64 0, i32 0, i32 2
  %51 = getelementptr inbounds %"struct.std::__1::aligned_storage<256, 4>::type", %"struct.std::__1::aligned_storage<256, 4>::type"* %46, i64 1
  %52 = bitcast i32** %50 to %"struct.std::__1::aligned_storage<256, 4>::type"**
  store %"struct.std::__1::aligned_storage<256, 4>::type"* %51, %"struct.std::__1::aligned_storage<256, 4>::type"** %52, align 8
  %53 = inttoptr i64 %20 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 63
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %56
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::InterpreterRegisters", %"class.v8::internal::(anonymous namespace)::InterpreterRegisters"* %17, i64 0, i32 0, i32 0
  %60 = bitcast %"class.v8::internal::StackLimitCheck"* %16 to i8*
  %61 = getelementptr inbounds %"class.v8::internal::StackLimitCheck", %"class.v8::internal::StackLimitCheck"* %16, i64 0, i32 0
  %62 = icmp eq i32 %10, 1
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %64 = bitcast %"struct.v8::internal::HandleScopeData"* %63 to i64*
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %71 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %14, i64 0, i32 0
  %72 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %15 to i8*
  %73 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %15, i64 0, i32 0
  %75 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i8*
  %76 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i64*
  %77 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 1
  %78 = icmp eq i32 %10, 0
  %79 = icmp eq %"class.v8::internal::Isolate"* %0, null
  %80 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %63, i64 0, i32 0
  %81 = bitcast i32** %50 to i64*
  %82 = bitcast %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18 to i64*
  %83 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BacktrackStack", %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18, i64 0, i32 0
  %84 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::BacktrackStack", %"class.v8::internal::(anonymous namespace)::BacktrackStack"* %18, i64 0, i32 0, i32 0
  %85 = bitcast i32** %48 to i64*
  br label %2119

86:                                               ; preds = %2119
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

87:                                               ; preds = %2119
  %88 = inttoptr i64 %2124 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 4
  %90 = bitcast i8* %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, 63
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %93
  %95 = load i8*, i8** %94, align 8
  %96 = load i32*, i32** %48, align 8
  %97 = load i32*, i32** %50, align 8
  %98 = icmp eq i32* %96, %97
  br i1 %98, label %99, label %101, !prof !4

99:                                               ; preds = %87
  %100 = call i32* @_ZN2v84base11SmallVectorIiLm64EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %83) #8
  br label %101

101:                                              ; preds = %87, %99
  %102 = phi i32* [ %100, %99 ], [ %96, %87 ]
  store i32 %2129, i32* %102, align 4
  %103 = getelementptr inbounds i32, i32* %102, i64 1
  store i32* %103, i32** %48, align 8
  %104 = ptrtoint i32* %103 to i64
  %105 = load i64, i64* %82, align 8
  %106 = sub i64 %104, %105
  %107 = lshr exact i64 %106, 2
  %108 = trunc i64 %107 to i32
  %109 = icmp slt i32 %108, 16777217
  br i1 %109, label %113, label %110

110:                                              ; preds = %101
  br i1 %78, label %111, label %2106

111:                                              ; preds = %110
  %112 = call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #8
  br label %2106

113:                                              ; preds = %1625, %1638, %561, %575, %174, %143, %101, %186, %202, %220, %237, %251, %293, %296, %454, %472, %515, %526, %540, %607, %616, %663, %672, %740, %749, %801, %823, %846, %868, %895, %920, %947, %972, %1003, %1033, %1063, %1093, %1115, %1137, %1165, %1193, %1219, %1250, %1288, %1302, %1341, %1355, %1395, %1409, %1449, %1463, %1502, %1516, %1555, %1569, %1594, %1617, %1664, %1695, %1718, %1765, %1788, %1829, %1852, %1898, %1921, %1961, %1987, %2010, %2051, %2068, %2091
  %114 = phi i64 [ %2120, %1961 ], [ %2120, %1987 ], [ %2120, %2010 ], [ %2120, %2051 ], [ %2120, %2068 ], [ %2120, %2091 ], [ %2120, %1852 ], [ %2120, %1829 ], [ %2120, %1695 ], [ %2120, %1718 ], [ %2120, %1788 ], [ %2120, %1765 ], [ %2120, %1898 ], [ %2120, %1921 ], [ %2120, %1664 ], [ %2120, %540 ], [ %2120, %1617 ], [ %2120, %1594 ], [ %2120, %1219 ], [ %2120, %1193 ], [ %2120, %1165 ], [ %2120, %1250 ], [ %2120, %1502 ], [ %2120, %1516 ], [ %2120, %1555 ], [ %2120, %1569 ], [ %2120, %1341 ], [ %2120, %1355 ], [ %2120, %1395 ], [ %2120, %1409 ], [ %2120, %1449 ], [ %2120, %1463 ], [ %2120, %1288 ], [ %2120, %1302 ], [ %2120, %1137 ], [ %2120, %1115 ], [ %2120, %1093 ], [ %2120, %1063 ], [ %2120, %1033 ], [ %2120, %1003 ], [ %2120, %972 ], [ %2120, %947 ], [ %2120, %920 ], [ %2120, %895 ], [ %2120, %868 ], [ %2120, %846 ], [ %2120, %823 ], [ %2120, %801 ], [ %2120, %749 ], [ %2120, %740 ], [ %2120, %672 ], [ %2120, %663 ], [ %2120, %616 ], [ %2120, %607 ], [ %2120, %526 ], [ %2120, %515 ], [ %2120, %472 ], [ %455, %454 ], [ %2120, %296 ], [ %2120, %202 ], [ %2120, %186 ], [ %2120, %293 ], [ %2120, %251 ], [ %2120, %237 ], [ %2120, %220 ], [ %2120, %101 ], [ %2120, %143 ], [ %2120, %174 ], [ %2120, %575 ], [ %2120, %561 ], [ %2120, %1638 ], [ %2120, %1625 ]
  %115 = phi i64 [ %2121, %1961 ], [ %2121, %1987 ], [ %2121, %2010 ], [ %2121, %2051 ], [ %2121, %2068 ], [ %2121, %2091 ], [ %2121, %1852 ], [ %2121, %1829 ], [ %2121, %1695 ], [ %2121, %1718 ], [ %2121, %1788 ], [ %2121, %1765 ], [ %2121, %1898 ], [ %2121, %1921 ], [ %2121, %1664 ], [ %2121, %540 ], [ %2121, %1617 ], [ %2121, %1594 ], [ %2121, %1219 ], [ %2121, %1193 ], [ %2121, %1165 ], [ %2121, %1250 ], [ %2121, %1502 ], [ %2121, %1516 ], [ %2121, %1555 ], [ %2121, %1569 ], [ %2121, %1341 ], [ %2121, %1355 ], [ %2121, %1395 ], [ %2121, %1409 ], [ %2121, %1449 ], [ %2121, %1463 ], [ %2121, %1288 ], [ %2121, %1302 ], [ %2121, %1137 ], [ %2121, %1115 ], [ %2121, %1093 ], [ %2121, %1063 ], [ %2121, %1033 ], [ %2121, %1003 ], [ %2121, %972 ], [ %2121, %947 ], [ %2121, %920 ], [ %2121, %895 ], [ %2121, %868 ], [ %2121, %846 ], [ %2121, %823 ], [ %2121, %801 ], [ %2121, %749 ], [ %2121, %740 ], [ %2121, %672 ], [ %2121, %663 ], [ %2121, %616 ], [ %2121, %607 ], [ %2121, %526 ], [ %2121, %515 ], [ %2121, %472 ], [ %456, %454 ], [ %2121, %296 ], [ %2121, %202 ], [ %2121, %186 ], [ %2121, %293 ], [ %2121, %251 ], [ %2121, %237 ], [ %2121, %220 ], [ %2121, %101 ], [ %2121, %143 ], [ %2121, %174 ], [ %2121, %575 ], [ %2121, %561 ], [ %2121, %1638 ], [ %2121, %1625 ]
  %116 = phi i64 [ %2122, %1961 ], [ %2122, %1987 ], [ %2122, %2010 ], [ %2122, %2051 ], [ %2122, %2068 ], [ %2122, %2091 ], [ %2122, %1852 ], [ %2122, %1829 ], [ %2122, %1695 ], [ %2122, %1718 ], [ %2122, %1788 ], [ %2122, %1765 ], [ %2122, %1898 ], [ %2122, %1921 ], [ %2122, %1664 ], [ %2122, %540 ], [ %2122, %1617 ], [ %2122, %1594 ], [ %2122, %1219 ], [ %2122, %1193 ], [ %2122, %1165 ], [ %2122, %1250 ], [ %2122, %1502 ], [ %2122, %1516 ], [ %2122, %1555 ], [ %2122, %1569 ], [ %2122, %1341 ], [ %2122, %1355 ], [ %2122, %1395 ], [ %2122, %1409 ], [ %2122, %1449 ], [ %2122, %1463 ], [ %2122, %1288 ], [ %2122, %1302 ], [ %2122, %1137 ], [ %2122, %1115 ], [ %2122, %1093 ], [ %2122, %1063 ], [ %2122, %1033 ], [ %2122, %1003 ], [ %2122, %972 ], [ %2122, %947 ], [ %2122, %920 ], [ %2122, %895 ], [ %2122, %868 ], [ %2122, %846 ], [ %2122, %823 ], [ %2122, %801 ], [ %2122, %749 ], [ %2122, %740 ], [ %2122, %672 ], [ %2122, %663 ], [ %2122, %616 ], [ %2122, %607 ], [ %2122, %526 ], [ %2122, %515 ], [ %2122, %472 ], [ %457, %454 ], [ %2122, %296 ], [ %2122, %202 ], [ %2122, %186 ], [ %2122, %293 ], [ %2122, %251 ], [ %2122, %237 ], [ %2122, %220 ], [ %2122, %101 ], [ %2122, %143 ], [ %2122, %174 ], [ %2122, %575 ], [ %2122, %561 ], [ %2122, %1638 ], [ %2122, %1625 ]
  %117 = phi i64 [ %2123, %1961 ], [ %2123, %1987 ], [ %2123, %2010 ], [ %2123, %2051 ], [ %2123, %2068 ], [ %2123, %2091 ], [ %2123, %1852 ], [ %2123, %1829 ], [ %2123, %1695 ], [ %2123, %1718 ], [ %2123, %1788 ], [ %2123, %1765 ], [ %2123, %1898 ], [ %2123, %1921 ], [ %2123, %1664 ], [ %2123, %540 ], [ %2123, %1617 ], [ %2123, %1594 ], [ %2123, %1219 ], [ %2123, %1193 ], [ %2123, %1165 ], [ %2123, %1250 ], [ %2123, %1502 ], [ %2123, %1516 ], [ %2123, %1555 ], [ %2123, %1569 ], [ %2123, %1341 ], [ %2123, %1355 ], [ %2123, %1395 ], [ %2123, %1409 ], [ %2123, %1449 ], [ %2123, %1463 ], [ %2123, %1288 ], [ %2123, %1302 ], [ %2123, %1137 ], [ %2123, %1115 ], [ %2123, %1093 ], [ %2123, %1063 ], [ %2123, %1033 ], [ %2123, %1003 ], [ %2123, %972 ], [ %2123, %947 ], [ %2123, %920 ], [ %2123, %895 ], [ %2123, %868 ], [ %2123, %846 ], [ %2123, %823 ], [ %2123, %801 ], [ %2123, %749 ], [ %2123, %740 ], [ %2123, %672 ], [ %2123, %663 ], [ %2123, %616 ], [ %2123, %607 ], [ %2123, %526 ], [ %2123, %515 ], [ %2123, %472 ], [ %458, %454 ], [ %2123, %296 ], [ %2123, %202 ], [ %2123, %186 ], [ %2123, %293 ], [ %2123, %251 ], [ %2123, %237 ], [ %2123, %220 ], [ %2123, %101 ], [ %2123, %143 ], [ %2123, %174 ], [ %2123, %575 ], [ %2123, %561 ], [ %2123, %1638 ], [ %2123, %1625 ]
  %118 = phi i8* [ %1969, %1961 ], [ %1995, %1987 ], [ %2018, %2010 ], [ %2059, %2051 ], [ %2076, %2068 ], [ %2099, %2091 ], [ %1860, %1852 ], [ %1837, %1829 ], [ %1703, %1695 ], [ %1726, %1718 ], [ %1796, %1788 ], [ %1773, %1765 ], [ %1906, %1898 ], [ %1929, %1921 ], [ %1665, %1664 ], [ %547, %540 ], [ %1618, %1617 ], [ %1595, %1594 ], [ %1220, %1219 ], [ %1194, %1193 ], [ %1166, %1165 ], [ %1251, %1250 ], [ %1509, %1502 ], [ %1519, %1516 ], [ %1562, %1555 ], [ %1572, %1569 ], [ %1348, %1341 ], [ %1358, %1355 ], [ %1402, %1395 ], [ %1412, %1409 ], [ %1456, %1449 ], [ %1466, %1463 ], [ %1295, %1288 ], [ %1305, %1302 ], [ %1138, %1137 ], [ %1116, %1115 ], [ %1094, %1093 ], [ %1064, %1063 ], [ %1034, %1033 ], [ %1004, %1003 ], [ %973, %972 ], [ %948, %947 ], [ %921, %920 ], [ %896, %895 ], [ %869, %868 ], [ %847, %846 ], [ %824, %823 ], [ %802, %801 ], [ %751, %749 ], [ %741, %740 ], [ %674, %672 ], [ %664, %663 ], [ %618, %616 ], [ %608, %607 ], [ %533, %526 ], [ %517, %515 ], [ %474, %472 ], [ %465, %454 ], [ %298, %296 ], [ %204, %202 ], [ %188, %186 ], [ %271, %293 ], [ %253, %251 ], [ %239, %237 ], [ %222, %220 ], [ %89, %101 ], [ %128, %143 ], [ %157, %174 ], [ %577, %575 ], [ %568, %561 ], [ %1627, %1638 ], [ %1627, %1625 ]
  %119 = phi i64 [ %2125, %1961 ], [ %2125, %1987 ], [ %2125, %2010 ], [ %2125, %2051 ], [ %2125, %2068 ], [ %2125, %2091 ], [ %2125, %1852 ], [ %2125, %1829 ], [ %2125, %1695 ], [ %2125, %1718 ], [ %2125, %1788 ], [ %2125, %1765 ], [ %2125, %1898 ], [ %2125, %1921 ], [ %2125, %1664 ], [ %2125, %540 ], [ %2125, %1617 ], [ %2125, %1594 ], [ %2125, %1219 ], [ %2125, %1193 ], [ %2125, %1165 ], [ %2125, %1250 ], [ %2125, %1502 ], [ %2125, %1516 ], [ %2125, %1555 ], [ %2125, %1569 ], [ %2125, %1341 ], [ %2125, %1355 ], [ %2125, %1395 ], [ %2125, %1409 ], [ %2125, %1449 ], [ %2125, %1463 ], [ %2125, %1288 ], [ %2125, %1302 ], [ %2125, %1137 ], [ %2125, %1115 ], [ %2125, %1093 ], [ %2125, %1063 ], [ %2125, %1033 ], [ %2125, %1003 ], [ %2125, %972 ], [ %2125, %947 ], [ %2125, %920 ], [ %2125, %895 ], [ %2125, %868 ], [ %2125, %846 ], [ %2125, %823 ], [ %2125, %801 ], [ %2125, %749 ], [ %2125, %740 ], [ %2125, %672 ], [ %2125, %663 ], [ %2125, %616 ], [ %2125, %607 ], [ %2125, %526 ], [ %2125, %515 ], [ %2125, %472 ], [ %459, %454 ], [ %2125, %296 ], [ %2125, %202 ], [ %2125, %186 ], [ %2125, %293 ], [ %2125, %251 ], [ %2125, %237 ], [ %2125, %220 ], [ %2125, %101 ], [ %2125, %143 ], [ %2125, %174 ], [ %2125, %575 ], [ %2125, %561 ], [ %2125, %1638 ], [ %2125, %1625 ]
  %120 = phi i32 [ %1971, %1961 ], [ %1997, %1987 ], [ %2020, %2010 ], [ %2061, %2051 ], [ %2078, %2068 ], [ %2101, %2091 ], [ %1862, %1852 ], [ %1839, %1829 ], [ %1705, %1695 ], [ %1728, %1718 ], [ %1798, %1788 ], [ %1775, %1765 ], [ %1908, %1898 ], [ %1931, %1921 ], [ %1667, %1664 ], [ %549, %540 ], [ %1620, %1617 ], [ %1597, %1594 ], [ %1222, %1219 ], [ %1196, %1193 ], [ %1168, %1165 ], [ %1253, %1250 ], [ %1511, %1502 ], [ %1521, %1516 ], [ %1564, %1555 ], [ %1574, %1569 ], [ %1350, %1341 ], [ %1360, %1355 ], [ %1404, %1395 ], [ %1414, %1409 ], [ %1458, %1449 ], [ %1468, %1463 ], [ %1297, %1288 ], [ %1307, %1302 ], [ %1140, %1137 ], [ %1118, %1115 ], [ %1096, %1093 ], [ %1066, %1063 ], [ %1036, %1033 ], [ %1006, %1003 ], [ %975, %972 ], [ %950, %947 ], [ %923, %920 ], [ %898, %895 ], [ %871, %868 ], [ %849, %846 ], [ %826, %823 ], [ %804, %801 ], [ %753, %749 ], [ %744, %740 ], [ %676, %672 ], [ %667, %663 ], [ %620, %616 ], [ %611, %607 ], [ %535, %526 ], [ %519, %515 ], [ %476, %472 ], [ %467, %454 ], [ %300, %296 ], [ %206, %202 ], [ %190, %186 ], [ %273, %293 ], [ %255, %251 ], [ %241, %237 ], [ %224, %220 ], [ %91, %101 ], [ %130, %143 ], [ %159, %174 ], [ %579, %575 ], [ %570, %561 ], [ %1629, %1638 ], [ %1629, %1625 ]
  %121 = phi i32 [ %2127, %1961 ], [ %2127, %1987 ], [ %2127, %2010 ], [ %2127, %2051 ], [ %2127, %2068 ], [ %2127, %2091 ], [ %2127, %1852 ], [ %2127, %1829 ], [ %2127, %1695 ], [ %2127, %1718 ], [ %2127, %1788 ], [ %2127, %1765 ], [ %2127, %1898 ], [ %2127, %1921 ], [ %2127, %1664 ], [ %2127, %540 ], [ %2127, %1617 ], [ %2127, %1594 ], [ %2127, %1219 ], [ %2127, %1193 ], [ %2127, %1165 ], [ %2127, %1250 ], [ %2127, %1502 ], [ %2127, %1516 ], [ %2127, %1555 ], [ %2127, %1569 ], [ %2127, %1341 ], [ %2127, %1355 ], [ %2127, %1395 ], [ %2127, %1409 ], [ %2127, %1449 ], [ %2127, %1463 ], [ %2127, %1288 ], [ %2127, %1302 ], [ %2127, %1137 ], [ %2127, %1115 ], [ %2127, %1093 ], [ %2127, %1063 ], [ %2127, %1033 ], [ %2127, %1003 ], [ %2127, %972 ], [ %2127, %947 ], [ %2127, %920 ], [ %2127, %895 ], [ %2127, %868 ], [ %2127, %846 ], [ %2127, %823 ], [ %2127, %801 ], [ %2127, %749 ], [ %2127, %740 ], [ %2127, %672 ], [ %2127, %663 ], [ %2127, %616 ], [ %2127, %607 ], [ %2127, %526 ], [ %2127, %515 ], [ %2127, %472 ], [ %309, %454 ], [ %2127, %296 ], [ %2127, %202 ], [ %2127, %186 ], [ %2127, %293 ], [ %2127, %251 ], [ %2127, %237 ], [ %2127, %220 ], [ %2127, %101 ], [ %2127, %143 ], [ %2127, %174 ], [ %2127, %575 ], [ %2127, %561 ], [ %2127, %1638 ], [ %2127, %1625 ]
  %122 = phi i32 [ %1962, %1961 ], [ %1988, %1987 ], [ %2011, %2010 ], [ %2053, %2051 ], [ %2070, %2068 ], [ %2092, %2091 ], [ %1853, %1852 ], [ %1831, %1829 ], [ %1697, %1695 ], [ %1719, %1718 ], [ %1789, %1788 ], [ %1766, %1765 ], [ %1899, %1898 ], [ %1922, %1921 ], [ %2128, %1664 ], [ %2128, %540 ], [ %2128, %1617 ], [ %2128, %1594 ], [ %2128, %1219 ], [ %2128, %1193 ], [ %2128, %1165 ], [ %2128, %1250 ], [ %2128, %1502 ], [ %2128, %1516 ], [ %2128, %1555 ], [ %2128, %1569 ], [ %2128, %1341 ], [ %2128, %1355 ], [ %2128, %1395 ], [ %2128, %1409 ], [ %2128, %1449 ], [ %2128, %1463 ], [ %2128, %1288 ], [ %2128, %1302 ], [ %2128, %1137 ], [ %2128, %1115 ], [ %2128, %1093 ], [ %2128, %1063 ], [ %2128, %1033 ], [ %2128, %1003 ], [ %2128, %972 ], [ %2128, %947 ], [ %2128, %920 ], [ %2128, %895 ], [ %2128, %868 ], [ %2128, %846 ], [ %2128, %823 ], [ %2128, %801 ], [ %785, %749 ], [ %742, %740 ], [ %694, %672 ], [ %665, %663 ], [ %631, %616 ], [ %609, %607 ], [ %2128, %526 ], [ %2128, %515 ], [ %2128, %472 ], [ %2128, %454 ], [ %2128, %296 ], [ %2128, %202 ], [ %2128, %186 ], [ %2128, %293 ], [ %2128, %251 ], [ %2128, %237 ], [ %2128, %220 ], [ %2128, %101 ], [ %2128, %143 ], [ %2128, %174 ], [ %2128, %575 ], [ %2128, %561 ], [ %1645, %1638 ], [ %2128, %1625 ]
  %123 = phi i32 [ %1963, %1961 ], [ %1989, %1987 ], [ %2012, %2010 ], [ %2052, %2051 ], [ %2069, %2068 ], [ %2093, %2091 ], [ %1854, %1852 ], [ %1830, %1829 ], [ %1696, %1695 ], [ %1720, %1718 ], [ %1790, %1788 ], [ %1767, %1765 ], [ %1900, %1898 ], [ %1923, %1921 ], [ %2129, %1664 ], [ %555, %540 ], [ %2129, %1617 ], [ %2129, %1594 ], [ %2129, %1219 ], [ %2129, %1193 ], [ %2129, %1165 ], [ %2129, %1250 ], [ %2129, %1502 ], [ %1517, %1516 ], [ %2129, %1555 ], [ %1570, %1569 ], [ %2129, %1341 ], [ %1356, %1355 ], [ %2129, %1395 ], [ %1410, %1409 ], [ %2129, %1449 ], [ %1464, %1463 ], [ %2129, %1288 ], [ %1303, %1302 ], [ %2129, %1137 ], [ %2129, %1115 ], [ %2129, %1093 ], [ %2129, %1063 ], [ %2129, %1033 ], [ %2129, %1003 ], [ %2129, %972 ], [ %2129, %947 ], [ %2129, %920 ], [ %2129, %895 ], [ %2129, %868 ], [ %2129, %846 ], [ %2129, %823 ], [ %2129, %801 ], [ %2129, %749 ], [ %2129, %740 ], [ %2129, %672 ], [ %2129, %663 ], [ %2129, %616 ], [ %2129, %607 ], [ %2129, %526 ], [ %525, %515 ], [ %2129, %472 ], [ %2129, %454 ], [ %307, %296 ], [ %2129, %202 ], [ %2129, %186 ], [ %2129, %293 ], [ %2129, %251 ], [ %250, %237 ], [ %2129, %220 ], [ %2129, %101 ], [ %2129, %143 ], [ %2129, %174 ], [ %2129, %575 ], [ %2129, %561 ], [ %1639, %1638 ], [ %2129, %1625 ]
  %124 = phi i8* [ %1975, %1961 ], [ %2001, %1987 ], [ %2024, %2010 ], [ %2065, %2051 ], [ %2082, %2068 ], [ %2105, %2091 ], [ %1866, %1852 ], [ %1843, %1829 ], [ %1709, %1695 ], [ %1732, %1718 ], [ %1802, %1788 ], [ %1779, %1765 ], [ %1912, %1898 ], [ %1935, %1921 ], [ %1671, %1664 ], [ %553, %540 ], [ %1624, %1617 ], [ %1601, %1594 ], [ %1226, %1219 ], [ %1200, %1193 ], [ %1172, %1165 ], [ %1257, %1250 ], [ %1515, %1502 ], [ %1525, %1516 ], [ %1568, %1555 ], [ %1578, %1569 ], [ %1354, %1341 ], [ %1364, %1355 ], [ %1408, %1395 ], [ %1418, %1409 ], [ %1462, %1449 ], [ %1472, %1463 ], [ %1301, %1288 ], [ %1311, %1302 ], [ %1144, %1137 ], [ %1122, %1115 ], [ %1100, %1093 ], [ %1070, %1063 ], [ %1040, %1033 ], [ %1010, %1003 ], [ %979, %972 ], [ %954, %947 ], [ %927, %920 ], [ %902, %895 ], [ %875, %868 ], [ %853, %846 ], [ %830, %823 ], [ %808, %801 ], [ %757, %749 ], [ %748, %740 ], [ %680, %672 ], [ %671, %663 ], [ %624, %616 ], [ %615, %607 ], [ %539, %526 ], [ %523, %515 ], [ %480, %472 ], [ %471, %454 ], [ %304, %296 ], [ %210, %202 ], [ %194, %186 ], [ %277, %293 ], [ %259, %251 ], [ %245, %237 ], [ %228, %220 ], [ %95, %101 ], [ %134, %143 ], [ %163, %174 ], [ %583, %575 ], [ %574, %561 ], [ %1633, %1638 ], [ %1633, %1625 ]
  %125 = ptrtoint i8* %118 to i64
  br label %2119

126:                                              ; preds = %2119
  %127 = inttoptr i64 %2124 to i8*
  %128 = getelementptr inbounds i8, i8* %127, i64 8
  %129 = bitcast i8* %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = and i32 %130, 63
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %132
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr inbounds i8, i8* %127, i64 4
  %136 = bitcast i8* %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = load i32*, i32** %48, align 8
  %139 = load i32*, i32** %50, align 8
  %140 = icmp eq i32* %138, %139
  br i1 %140, label %141, label %143, !prof !4

141:                                              ; preds = %126
  %142 = call i32* @_ZN2v84base11SmallVectorIiLm64EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %83) #8
  br label %143

143:                                              ; preds = %126, %141
  %144 = phi i32* [ %142, %141 ], [ %138, %126 ]
  store i32 %137, i32* %144, align 4
  %145 = getelementptr inbounds i32, i32* %144, i64 1
  store i32* %145, i32** %48, align 8
  %146 = ptrtoint i32* %145 to i64
  %147 = load i64, i64* %82, align 8
  %148 = sub i64 %146, %147
  %149 = lshr exact i64 %148, 2
  %150 = trunc i64 %149 to i32
  %151 = icmp slt i32 %150, 16777217
  br i1 %151, label %113, label %152

152:                                              ; preds = %143
  br i1 %78, label %153, label %2106

153:                                              ; preds = %152
  %154 = call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #8
  br label %2106

155:                                              ; preds = %2119
  %156 = inttoptr i64 %2124 to i8*
  %157 = getelementptr inbounds i8, i8* %156, i64 4
  %158 = bitcast i8* %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = and i32 %159, 63
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %161
  %163 = load i8*, i8** %162, align 8
  %164 = lshr i32 %2126, 8
  %165 = zext i32 %164 to i64
  %166 = load i32*, i32** %59, align 8
  %167 = getelementptr inbounds i32, i32* %166, i64 %165
  %168 = load i32, i32* %167, align 4
  %169 = load i32*, i32** %48, align 8
  %170 = load i32*, i32** %50, align 8
  %171 = icmp eq i32* %169, %170
  br i1 %171, label %172, label %174, !prof !4

172:                                              ; preds = %155
  %173 = call i32* @_ZN2v84base11SmallVectorIiLm64EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %83) #8
  br label %174

174:                                              ; preds = %155, %172
  %175 = phi i32* [ %173, %172 ], [ %169, %155 ]
  store i32 %168, i32* %175, align 4
  %176 = getelementptr inbounds i32, i32* %175, i64 1
  store i32* %176, i32** %48, align 8
  %177 = ptrtoint i32* %176 to i64
  %178 = load i64, i64* %82, align 8
  %179 = sub i64 %177, %178
  %180 = lshr exact i64 %179, 2
  %181 = trunc i64 %180 to i32
  %182 = icmp slt i32 %181, 16777217
  br i1 %182, label %113, label %183

183:                                              ; preds = %174
  br i1 %78, label %184, label %2106

184:                                              ; preds = %183
  %185 = call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #8
  br label %2106

186:                                              ; preds = %2119
  %187 = inttoptr i64 %2124 to i8*
  %188 = getelementptr inbounds i8, i8* %187, i64 8
  %189 = bitcast i8* %188 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = and i32 %190, 63
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %192
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr inbounds i8, i8* %187, i64 4
  %196 = bitcast i8* %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = lshr i32 %2126, 8
  %199 = zext i32 %198 to i64
  %200 = load i32*, i32** %59, align 8
  %201 = getelementptr inbounds i32, i32* %200, i64 %199
  store i32 %197, i32* %201, align 4
  br label %113

202:                                              ; preds = %2119
  %203 = inttoptr i64 %2124 to i8*
  %204 = getelementptr inbounds i8, i8* %203, i64 8
  %205 = bitcast i8* %204 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = and i32 %206, 63
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %208
  %210 = load i8*, i8** %209, align 8
  %211 = getelementptr inbounds i8, i8* %203, i64 4
  %212 = bitcast i8* %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = lshr i32 %2126, 8
  %215 = zext i32 %214 to i64
  %216 = load i32*, i32** %59, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 %215
  %218 = load i32, i32* %217, align 4
  %219 = add nsw i32 %218, %213
  store i32 %219, i32* %217, align 4
  br label %113

220:                                              ; preds = %2119
  %221 = inttoptr i64 %2124 to i8*
  %222 = getelementptr inbounds i8, i8* %221, i64 8
  %223 = bitcast i8* %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = and i32 %224, 63
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %226
  %228 = load i8*, i8** %227, align 8
  %229 = getelementptr inbounds i8, i8* %221, i64 4
  %230 = bitcast i8* %229 to i32*
  %231 = load i32, i32* %230, align 4
  %232 = add nsw i32 %231, %2129
  %233 = lshr i32 %2126, 8
  %234 = zext i32 %233 to i64
  %235 = load i32*, i32** %59, align 8
  %236 = getelementptr inbounds i32, i32* %235, i64 %234
  store i32 %232, i32* %236, align 4
  br label %113

237:                                              ; preds = %2119
  %238 = inttoptr i64 %2124 to i8*
  %239 = getelementptr inbounds i8, i8* %238, i64 4
  %240 = bitcast i8* %239 to i32*
  %241 = load i32, i32* %240, align 4
  %242 = and i32 %241, 63
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %243
  %245 = load i8*, i8** %244, align 8
  %246 = lshr i32 %2126, 8
  %247 = zext i32 %246 to i64
  %248 = load i32*, i32** %59, align 8
  %249 = getelementptr inbounds i32, i32* %248, i64 %247
  %250 = load i32, i32* %249, align 4
  br label %113

251:                                              ; preds = %2119
  %252 = inttoptr i64 %2124 to i8*
  %253 = getelementptr inbounds i8, i8* %252, i64 4
  %254 = bitcast i8* %253 to i32*
  %255 = load i32, i32* %254, align 4
  %256 = and i32 %255, 63
  %257 = zext i32 %256 to i64
  %258 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %257
  %259 = load i8*, i8** %258, align 8
  %260 = load i64, i64* %85, align 8
  %261 = load i64, i64* %82, align 8
  %262 = sub i64 %260, %261
  %263 = lshr exact i64 %262, 2
  %264 = trunc i64 %263 to i32
  %265 = lshr i32 %2126, 8
  %266 = zext i32 %265 to i64
  %267 = load i32*, i32** %59, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 %266
  store i32 %264, i32* %268, align 4
  br label %113

269:                                              ; preds = %2119
  %270 = inttoptr i64 %2124 to i8*
  %271 = getelementptr inbounds i8, i8* %270, i64 4
  %272 = bitcast i8* %271 to i32*
  %273 = load i32, i32* %272, align 4
  %274 = and i32 %273, 63
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %275
  %277 = load i8*, i8** %276, align 8
  %278 = lshr i32 %2126, 8
  %279 = zext i32 %278 to i64
  %280 = load i32*, i32** %59, align 8
  %281 = getelementptr inbounds i32, i32* %280, i64 %279
  %282 = load i32, i32* %281, align 4
  %283 = sext i32 %282 to i64
  %284 = load i64, i64* %81, align 8
  %285 = load i64, i64* %82, align 8
  %286 = sub i64 %284, %285
  %287 = ashr exact i64 %286, 2
  %288 = icmp ult i64 %287, %283
  %289 = inttoptr i64 %285 to i32*
  br i1 %288, label %290, label %293

290:                                              ; preds = %269
  %291 = call i32* @_ZN2v84base11SmallVectorIiLm64EE4GrowEm(%"class.v8::base::SmallVector"* nonnull %83, i64 %283) #8
  %292 = load i32*, i32** %84, align 8
  br label %293

293:                                              ; preds = %269, %290
  %294 = phi i32* [ %292, %290 ], [ %289, %269 ]
  %295 = getelementptr inbounds i32, i32* %294, i64 %283
  store i32* %295, i32** %48, align 8
  br label %113

296:                                              ; preds = %2119
  %297 = inttoptr i64 %2124 to i8*
  %298 = getelementptr inbounds i8, i8* %297, i64 4
  %299 = bitcast i8* %298 to i32*
  %300 = load i32, i32* %299, align 4
  %301 = and i32 %300, 63
  %302 = zext i32 %301 to i64
  %303 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %302
  %304 = load i8*, i8** %303, align 8
  %305 = load i32*, i32** %48, align 8
  %306 = getelementptr inbounds i32, i32* %305, i64 -1
  %307 = load i32, i32* %306, align 4
  store i32* %306, i32** %48, align 8
  br label %113

308:                                              ; preds = %2119
  %309 = add i32 %2127, 1
  %310 = icmp eq i32 %309, %11
  br i1 %310, label %311, label %313

311:                                              ; preds = %308
  %312 = ashr i32 %2126, 8
  br label %2106

313:                                              ; preds = %308
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %61, align 8
  %314 = call zeroext i1 @_ZNK2v88internal15StackLimitCheck15JsHasOverflowedEm(%"class.v8::internal::StackLimitCheck"* nonnull %16, i64 0) #8
  br i1 %62, label %315, label %322

315:                                              ; preds = %313
  br i1 %314, label %452, label %316

316:                                              ; preds = %315
  %317 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %61, align 8
  %318 = call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #8
  %319 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %317, i64 0, i32 0, i32 6, i32 1, i32 3
  %320 = load atomic i64, i64* %319 monotonic, align 8
  %321 = icmp ult i64 %318, %320
  br i1 %321, label %452, label %454

322:                                              ; preds = %313
  %323 = load i64, i64* %64, align 8
  %324 = load i64*, i64** %65, align 8
  %325 = load i32, i32* %66, align 8
  %326 = add nsw i32 %325, 1
  store i32 %326, i32* %66, align 8
  %327 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %328 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %327, null
  %329 = inttoptr i64 %323 to i64*
  br i1 %328, label %332, label %330

330:                                              ; preds = %322
  %331 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %327, i64 %2120) #8
  br label %341

332:                                              ; preds = %322
  %333 = icmp eq i64* %324, %329
  br i1 %333, label %334, label %336

334:                                              ; preds = %332
  %335 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %336

336:                                              ; preds = %334, %332
  %337 = phi i64* [ %335, %334 ], [ %329, %332 ]
  %338 = ptrtoint i64* %337 to i64
  %339 = add i64 %338, 8
  %340 = inttoptr i64 %339 to i64*
  store i64* %340, i64** %68, align 8
  store i64 %2120, i64* %337, align 8
  br label %341

341:                                              ; preds = %336, %330
  %342 = phi i64* [ %331, %330 ], [ %337, %336 ]
  %343 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %344 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %343, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %341
  %346 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %343, i64 %2121) #8
  br label %358

347:                                              ; preds = %341
  %348 = load i64*, i64** %68, align 8
  %349 = load i64*, i64** %65, align 8
  %350 = icmp eq i64* %348, %349
  br i1 %350, label %351, label %353

351:                                              ; preds = %347
  %352 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %353

353:                                              ; preds = %351, %347
  %354 = phi i64* [ %352, %351 ], [ %348, %347 ]
  %355 = ptrtoint i64* %354 to i64
  %356 = add i64 %355, 8
  %357 = inttoptr i64 %356 to i64*
  store i64* %357, i64** %68, align 8
  store i64 %2121, i64* %354, align 8
  br label %358

358:                                              ; preds = %353, %345
  %359 = phi i64* [ %346, %345 ], [ %354, %353 ]
  br i1 %314, label %360, label %364

360:                                              ; preds = %358
  br i1 %78, label %362, label %361, !prof !3

361:                                              ; preds = %360
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0)) #9
  unreachable

362:                                              ; preds = %360
  %363 = call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #8
  br label %431

364:                                              ; preds = %358
  %365 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %61, align 8
  %366 = call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #8
  %367 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %365, i64 0, i32 0, i32 6, i32 1, i32 3
  %368 = load atomic i64, i64* %367 monotonic, align 8
  %369 = icmp ult i64 %366, %368
  br i1 %369, label %370, label %431

370:                                              ; preds = %364, %383
  %371 = phi i64 [ %388, %383 ], [ %2121, %364 ]
  %372 = and i64 %371, -4294967296
  %373 = add i64 %371, -1
  %374 = inttoptr i64 %373 to i32*
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = zext i32 %375 to i64
  %377 = or i64 %372, %376
  %378 = add i64 %377, 7
  %379 = inttoptr i64 %378 to i16*
  %380 = load atomic i16, i16* %379 monotonic, align 2
  %381 = and i16 %380, 9
  %382 = zext i16 %381 to i32
  switch i32 %382, label %383 [
    i32 8, label %389
    i32 0, label %390
  ]

383:                                              ; preds = %370
  %384 = add i64 %371, 11
  %385 = inttoptr i64 %384 to i32*
  %386 = load i32, i32* %385, align 4
  %387 = zext i32 %386 to i64
  %388 = or i64 %372, %387
  br label %370

389:                                              ; preds = %370
  br label %390

390:                                              ; preds = %370, %389
  %391 = phi i1 [ true, %389 ], [ false, %370 ]
  %392 = call i64 @_ZN2v88internal10StackGuard16HandleInterruptsEv(%"class.v8::internal::StackGuard"* %69) #8
  %393 = load i64, i64* %70, align 8
  %394 = trunc i64 %392 to i32
  %395 = trunc i64 %393 to i32
  %396 = icmp eq i32 %394, %395
  br i1 %396, label %431, label %397

397:                                              ; preds = %390
  %398 = load i64, i64* %359, align 8
  br label %399

399:                                              ; preds = %413, %397
  %400 = phi i64 [ %398, %397 ], [ %418, %413 ]
  %401 = and i64 %400, -4294967296
  %402 = add i64 %400, -1
  %403 = inttoptr i64 %402 to i32*
  %404 = load atomic i32, i32* %403 monotonic, align 4
  %405 = zext i32 %404 to i64
  %406 = or i64 %401, %405
  %407 = add i64 %406, 7
  %408 = inttoptr i64 %407 to i16*
  %409 = load atomic i16, i16* %408 monotonic, align 2
  %410 = and i16 %409, 9
  %411 = zext i16 %410 to i32
  switch i32 %411, label %413 [
    i32 8, label %419
    i32 0, label %412
  ]

412:                                              ; preds = %399
  br i1 %391, label %431, label %420

413:                                              ; preds = %399
  %414 = add i64 %400, 11
  %415 = inttoptr i64 %414 to i32*
  %416 = load i32, i32* %415, align 4
  %417 = zext i32 %416 to i64
  %418 = or i64 %401, %417
  br label %399

419:                                              ; preds = %399
  br i1 %391, label %420, label %431

420:                                              ; preds = %419, %412
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %71) #8
  %421 = inttoptr i64 %2125 to i8*
  %422 = load i64, i64* %342, align 8
  %423 = add i64 %422, 7
  %424 = inttoptr i64 %423 to i8*
  %425 = icmp eq i8* %421, %424
  %426 = select i1 %425, i64 %2120, i64 %422
  %427 = select i1 %425, i64 %2125, i64 %423
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #8
  store i64 %398, i64* %73, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #8
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %13, %"class.v8::internal::String"* nonnull %74, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %14) #8
  %428 = load i64, i64* %76, align 8
  %429 = load i32, i32* %77, align 8
  %430 = sext i32 %429 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71) #8
  br label %431

431:                                              ; preds = %420, %419, %412, %390, %364, %362
  %432 = phi i64 [ %2120, %362 ], [ %2120, %390 ], [ %2120, %412 ], [ %426, %420 ], [ %2120, %419 ], [ %2120, %364 ]
  %433 = phi i64 [ %2121, %362 ], [ %2121, %390 ], [ %2121, %412 ], [ %398, %420 ], [ %2121, %419 ], [ %2121, %364 ]
  %434 = phi i64 [ %2122, %362 ], [ %2122, %390 ], [ %2122, %412 ], [ %430, %420 ], [ %2122, %419 ], [ %2122, %364 ]
  %435 = phi i64 [ %2123, %362 ], [ %2123, %390 ], [ %2123, %412 ], [ %428, %420 ], [ %2123, %419 ], [ %2123, %364 ]
  %436 = phi i64 [ %2125, %362 ], [ %2125, %390 ], [ %2125, %412 ], [ %427, %420 ], [ %2125, %419 ], [ %2125, %364 ]
  %437 = phi i32 [ 1, %362 ], [ 1, %390 ], [ 1, %412 ], [ 0, %420 ], [ 1, %419 ], [ 0, %364 ]
  %438 = phi i32 [ -1, %362 ], [ -1, %390 ], [ -2, %412 ], [ undef, %420 ], [ -2, %419 ], [ undef, %364 ]
  br i1 %79, label %450, label %439

439:                                              ; preds = %431
  %440 = load i64*, i64** %80, align 8
  store i64 %323, i64* %64, align 8
  %441 = load i32, i32* %66, align 8
  %442 = add nsw i32 %441, -1
  store i32 %442, i32* %66, align 8
  %443 = load i64*, i64** %65, align 8
  %444 = icmp eq i64* %443, %324
  br i1 %444, label %447, label %445

445:                                              ; preds = %439
  store i64* %324, i64** %65, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %0) #8
  %446 = load i64*, i64** %80, align 8
  br label %447

447:                                              ; preds = %445, %439
  %448 = phi i64* [ %446, %445 ], [ %329, %439 ]
  %449 = phi i64* [ %324, %445 ], [ %440, %439 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %448, i64* %449) #8
  br label %450

450:                                              ; preds = %447, %431
  %451 = icmp eq i32 %437, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450, %315, %316
  %453 = phi i32 [ -2, %316 ], [ -1, %315 ], [ %438, %450 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  br label %2106

454:                                              ; preds = %450, %316
  %455 = phi i64 [ %2120, %316 ], [ %432, %450 ]
  %456 = phi i64 [ %2121, %316 ], [ %433, %450 ]
  %457 = phi i64 [ %2122, %316 ], [ %434, %450 ]
  %458 = phi i64 [ %2123, %316 ], [ %435, %450 ]
  %459 = phi i64 [ %2125, %316 ], [ %436, %450 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %460 = inttoptr i64 %459 to i8*
  %461 = load i32*, i32** %48, align 8
  %462 = getelementptr inbounds i32, i32* %461, i64 -1
  %463 = load i32, i32* %462, align 4
  store i32* %462, i32** %48, align 8
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds i8, i8* %460, i64 %464
  %466 = bitcast i8* %465 to i32*
  %467 = load i32, i32* %466, align 4
  %468 = and i32 %467, 63
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %469
  %471 = load i8*, i8** %470, align 8
  br label %113

472:                                              ; preds = %2119
  %473 = inttoptr i64 %2124 to i8*
  %474 = getelementptr inbounds i8, i8* %473, i64 4
  %475 = bitcast i8* %474 to i32*
  %476 = load i32, i32* %475, align 4
  %477 = and i32 %476, 63
  %478 = zext i32 %477 to i64
  %479 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %478
  %480 = load i8*, i8** %479, align 8
  %481 = load i32*, i32** %48, align 8
  %482 = getelementptr inbounds i32, i32* %481, i64 -1
  %483 = load i32, i32* %482, align 4
  store i32* %482, i32** %48, align 8
  %484 = lshr i32 %2126, 8
  %485 = zext i32 %484 to i64
  %486 = load i32*, i32** %59, align 8
  %487 = getelementptr inbounds i32, i32* %486, i64 %485
  store i32 %483, i32* %487, align 4
  br label %113

488:                                              ; preds = %2119
  %489 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %490 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %489, align 8
  %491 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %490, i64 0, i32 55
  call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %491, i32 %2127) #8
  br label %2106

492:                                              ; preds = %2119
  %493 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %494 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %493, align 8
  %495 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %494, i64 0, i32 55
  call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %495, i32 %2127) #8
  %496 = bitcast i32** %42 to i8**
  %497 = load i8*, i8** %496, align 8
  %498 = load i32*, i32** %59, align 8
  %499 = bitcast i32* %498 to i8*
  %500 = load i32, i32* %43, align 8
  %501 = sext i32 %500 to i64
  %502 = shl nsw i64 %501, 2
  %503 = add nsw i64 %502, -4
  %504 = lshr exact i64 %503, 2
  switch i64 %504, label %514 [
    i64 3, label %513
    i64 1, label %508
    i64 2, label %512
    i64 0, label %505
  ]

505:                                              ; preds = %492
  %506 = bitcast i8* %497 to i32*
  %507 = load i32, i32* %498, align 1
  store i32 %507, i32* %506, align 1
  br label %2106

508:                                              ; preds = %492
  %509 = bitcast i32* %498 to i64*
  %510 = bitcast i8* %497 to i64*
  %511 = load i64, i64* %509, align 1
  store i64 %511, i64* %510, align 1
  br label %2106

512:                                              ; preds = %492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %497, i8* align 1 %499, i64 12, i1 false) #8
  br label %2106

513:                                              ; preds = %492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %497, i8* align 1 %499, i64 16, i1 false) #8
  br label %2106

514:                                              ; preds = %492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %497, i8* align 1 %499, i64 %502, i1 false) #8
  br label %2106

515:                                              ; preds = %2119
  %516 = inttoptr i64 %2124 to i8*
  %517 = getelementptr inbounds i8, i8* %516, i64 4
  %518 = bitcast i8* %517 to i32*
  %519 = load i32, i32* %518, align 4
  %520 = and i32 %519, 63
  %521 = zext i32 %520 to i64
  %522 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %521
  %523 = load i8*, i8** %522, align 8
  %524 = ashr i32 %2126, 8
  %525 = add nsw i32 %2129, %524
  br label %113

526:                                              ; preds = %2119
  %527 = inttoptr i64 %2125 to i8*
  %528 = inttoptr i64 %2124 to i8*
  %529 = getelementptr inbounds i8, i8* %528, i64 4
  %530 = bitcast i8* %529 to i32*
  %531 = load i32, i32* %530, align 4
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds i8, i8* %527, i64 %532
  %534 = bitcast i8* %533 to i32*
  %535 = load i32, i32* %534, align 4
  %536 = and i32 %535, 63
  %537 = zext i32 %536 to i64
  %538 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %537
  %539 = load i8*, i8** %538, align 8
  br label %113

540:                                              ; preds = %2119
  %541 = inttoptr i64 %2125 to i8*
  %542 = inttoptr i64 %2124 to i8*
  %543 = getelementptr inbounds i8, i8* %542, i64 4
  %544 = bitcast i8* %543 to i32*
  %545 = load i32, i32* %544, align 4
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds i8, i8* %541, i64 %546
  %548 = bitcast i8* %547 to i32*
  %549 = load i32, i32* %548, align 4
  %550 = and i32 %549, 63
  %551 = zext i32 %550 to i64
  %552 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %551
  %553 = load i8*, i8** %552, align 8
  %554 = ashr i32 %2126, 8
  %555 = add nsw i32 %2129, %554
  br label %113

556:                                              ; preds = %2119
  %557 = load i32*, i32** %48, align 8
  %558 = getelementptr inbounds i32, i32* %557, i64 -1
  %559 = load i32, i32* %558, align 4
  %560 = icmp eq i32 %2129, %559
  br i1 %560, label %561, label %575

561:                                              ; preds = %556
  %562 = inttoptr i64 %2125 to i8*
  %563 = inttoptr i64 %2124 to i8*
  %564 = getelementptr inbounds i8, i8* %563, i64 4
  %565 = bitcast i8* %564 to i32*
  %566 = load i32, i32* %565, align 4
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds i8, i8* %562, i64 %567
  %569 = bitcast i8* %568 to i32*
  %570 = load i32, i32* %569, align 4
  %571 = and i32 %570, 63
  %572 = zext i32 %571 to i64
  %573 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %572
  %574 = load i8*, i8** %573, align 8
  store i32* %558, i32** %48, align 8
  br label %113

575:                                              ; preds = %556
  %576 = inttoptr i64 %2124 to i8*
  %577 = getelementptr inbounds i8, i8* %576, i64 8
  %578 = bitcast i8* %577 to i32*
  %579 = load i32, i32* %578, align 4
  %580 = and i32 %579, 63
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %581
  %583 = load i8*, i8** %582, align 8
  br label %113

584:                                              ; preds = %2119
  %585 = ashr i32 %2126, 8
  %586 = add nsw i32 %2129, %585
  %587 = trunc i64 %2122 to i32
  %588 = icmp sge i32 %586, %587
  %589 = icmp slt i32 %586, 0
  %590 = or i1 %588, %589
  br i1 %590, label %591, label %599

591:                                              ; preds = %584
  %592 = inttoptr i64 %2125 to i8*
  %593 = inttoptr i64 %2124 to i8*
  %594 = getelementptr inbounds i8, i8* %593, i64 4
  %595 = bitcast i8* %594 to i32*
  %596 = load i32, i32* %595, align 4
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds i8, i8* %592, i64 %597
  br label %607

599:                                              ; preds = %584
  %600 = inttoptr i64 %2124 to i8*
  %601 = getelementptr inbounds i8, i8* %600, i64 8
  %602 = sext i32 %586 to i64
  %603 = inttoptr i64 %2123 to i16*
  %604 = getelementptr inbounds i16, i16* %603, i64 %602
  %605 = load i16, i16* %604, align 2
  %606 = zext i16 %605 to i32
  br label %607

607:                                              ; preds = %599, %591
  %608 = phi i8* [ %598, %591 ], [ %601, %599 ]
  %609 = phi i32 [ %2128, %591 ], [ %606, %599 ]
  %610 = bitcast i8* %608 to i32*
  %611 = load i32, i32* %610, align 4
  %612 = and i32 %611, 63
  %613 = zext i32 %612 to i64
  %614 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %613
  %615 = load i8*, i8** %614, align 8
  br label %113

616:                                              ; preds = %2119
  %617 = inttoptr i64 %2124 to i8*
  %618 = getelementptr inbounds i8, i8* %617, i64 4
  %619 = bitcast i8* %618 to i32*
  %620 = load i32, i32* %619, align 4
  %621 = and i32 %620, 63
  %622 = zext i32 %621 to i64
  %623 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %622
  %624 = load i8*, i8** %623, align 8
  %625 = ashr i32 %2126, 8
  %626 = add nsw i32 %2129, %625
  %627 = sext i32 %626 to i64
  %628 = inttoptr i64 %2123 to i16*
  %629 = getelementptr inbounds i16, i16* %628, i64 %627
  %630 = load i16, i16* %629, align 2
  %631 = zext i16 %630 to i32
  br label %113

632:                                              ; preds = %2119
  %633 = ashr i32 %2126, 8
  %634 = add nsw i32 %2129, %633
  %635 = add nsw i32 %634, 2
  %636 = trunc i64 %2122 to i32
  %637 = icmp sgt i32 %635, %636
  %638 = icmp slt i32 %634, 0
  %639 = or i1 %638, %637
  br i1 %639, label %640, label %648

640:                                              ; preds = %632
  %641 = inttoptr i64 %2125 to i8*
  %642 = inttoptr i64 %2124 to i8*
  %643 = getelementptr inbounds i8, i8* %642, i64 4
  %644 = bitcast i8* %643 to i32*
  %645 = load i32, i32* %644, align 4
  %646 = sext i32 %645 to i64
  %647 = getelementptr inbounds i8, i8* %641, i64 %646
  br label %663

648:                                              ; preds = %632
  %649 = inttoptr i64 %2124 to i8*
  %650 = getelementptr inbounds i8, i8* %649, i64 8
  %651 = add nuw nsw i32 %634, 1
  %652 = sext i32 %651 to i64
  %653 = inttoptr i64 %2123 to i16*
  %654 = getelementptr inbounds i16, i16* %653, i64 %652
  %655 = load i16, i16* %654, align 2
  %656 = sext i32 %634 to i64
  %657 = getelementptr inbounds i16, i16* %653, i64 %656
  %658 = load i16, i16* %657, align 2
  %659 = zext i16 %658 to i32
  %660 = zext i16 %655 to i32
  %661 = shl nuw i32 %660, 16
  %662 = or i32 %661, %659
  br label %663

663:                                              ; preds = %648, %640
  %664 = phi i8* [ %647, %640 ], [ %650, %648 ]
  %665 = phi i32 [ %2128, %640 ], [ %662, %648 ]
  %666 = bitcast i8* %664 to i32*
  %667 = load i32, i32* %666, align 4
  %668 = and i32 %667, 63
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %669
  %671 = load i8*, i8** %670, align 8
  br label %113

672:                                              ; preds = %2119
  %673 = inttoptr i64 %2124 to i8*
  %674 = getelementptr inbounds i8, i8* %673, i64 4
  %675 = bitcast i8* %674 to i32*
  %676 = load i32, i32* %675, align 4
  %677 = and i32 %676, 63
  %678 = zext i32 %677 to i64
  %679 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %678
  %680 = load i8*, i8** %679, align 8
  %681 = ashr i32 %2126, 8
  %682 = add nsw i32 %2129, %681
  %683 = add nsw i32 %682, 1
  %684 = sext i32 %683 to i64
  %685 = inttoptr i64 %2123 to i16*
  %686 = getelementptr inbounds i16, i16* %685, i64 %684
  %687 = load i16, i16* %686, align 2
  %688 = sext i32 %682 to i64
  %689 = getelementptr inbounds i16, i16* %685, i64 %688
  %690 = load i16, i16* %689, align 2
  %691 = zext i16 %690 to i32
  %692 = zext i16 %687 to i32
  %693 = shl nuw i32 %692, 16
  %694 = or i32 %693, %691
  br label %113

695:                                              ; preds = %2119
  %696 = ashr i32 %2126, 8
  %697 = add nsw i32 %2129, %696
  %698 = add nsw i32 %697, 4
  %699 = trunc i64 %2122 to i32
  %700 = icmp sgt i32 %698, %699
  %701 = icmp slt i32 %697, 0
  %702 = or i1 %701, %700
  br i1 %702, label %703, label %711

703:                                              ; preds = %695
  %704 = inttoptr i64 %2125 to i8*
  %705 = inttoptr i64 %2124 to i8*
  %706 = getelementptr inbounds i8, i8* %705, i64 4
  %707 = bitcast i8* %706 to i32*
  %708 = load i32, i32* %707, align 4
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds i8, i8* %704, i64 %709
  br label %740

711:                                              ; preds = %695
  %712 = inttoptr i64 %2124 to i8*
  %713 = getelementptr inbounds i8, i8* %712, i64 8
  %714 = add nuw nsw i32 %697, 1
  %715 = sext i32 %714 to i64
  %716 = inttoptr i64 %2123 to i16*
  %717 = getelementptr inbounds i16, i16* %716, i64 %715
  %718 = load i16, i16* %717, align 2
  %719 = add nuw nsw i32 %697, 2
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds i16, i16* %716, i64 %720
  %722 = load i16, i16* %721, align 2
  %723 = add nuw nsw i32 %697, 3
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds i16, i16* %716, i64 %724
  %726 = load i16, i16* %725, align 2
  %727 = sext i32 %697 to i64
  %728 = getelementptr inbounds i16, i16* %716, i64 %727
  %729 = load i16, i16* %728, align 2
  %730 = zext i16 %729 to i32
  %731 = zext i16 %718 to i32
  %732 = shl nuw nsw i32 %731, 8
  %733 = zext i16 %722 to i32
  %734 = shl nuw i32 %733, 16
  %735 = zext i16 %726 to i32
  %736 = shl i32 %735, 24
  %737 = or i32 %734, %732
  %738 = or i32 %737, %730
  %739 = or i32 %738, %736
  br label %740

740:                                              ; preds = %711, %703
  %741 = phi i8* [ %710, %703 ], [ %713, %711 ]
  %742 = phi i32 [ %2128, %703 ], [ %739, %711 ]
  %743 = bitcast i8* %741 to i32*
  %744 = load i32, i32* %743, align 4
  %745 = and i32 %744, 63
  %746 = zext i32 %745 to i64
  %747 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %746
  %748 = load i8*, i8** %747, align 8
  br label %113

749:                                              ; preds = %2119
  %750 = inttoptr i64 %2124 to i8*
  %751 = getelementptr inbounds i8, i8* %750, i64 4
  %752 = bitcast i8* %751 to i32*
  %753 = load i32, i32* %752, align 4
  %754 = and i32 %753, 63
  %755 = zext i32 %754 to i64
  %756 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %755
  %757 = load i8*, i8** %756, align 8
  %758 = ashr i32 %2126, 8
  %759 = add nsw i32 %2129, %758
  %760 = add nsw i32 %759, 1
  %761 = sext i32 %760 to i64
  %762 = inttoptr i64 %2123 to i16*
  %763 = getelementptr inbounds i16, i16* %762, i64 %761
  %764 = load i16, i16* %763, align 2
  %765 = add nsw i32 %759, 2
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds i16, i16* %762, i64 %766
  %768 = load i16, i16* %767, align 2
  %769 = add nsw i32 %759, 3
  %770 = sext i32 %769 to i64
  %771 = getelementptr inbounds i16, i16* %762, i64 %770
  %772 = load i16, i16* %771, align 2
  %773 = sext i32 %759 to i64
  %774 = getelementptr inbounds i16, i16* %762, i64 %773
  %775 = load i16, i16* %774, align 2
  %776 = zext i16 %775 to i32
  %777 = zext i16 %764 to i32
  %778 = shl nuw nsw i32 %777, 8
  %779 = zext i16 %768 to i32
  %780 = shl nuw i32 %779, 16
  %781 = zext i16 %772 to i32
  %782 = shl i32 %781, 24
  %783 = or i32 %780, %778
  %784 = or i32 %783, %776
  %785 = or i32 %784, %782
  br label %113

786:                                              ; preds = %2119
  %787 = inttoptr i64 %2124 to i8*
  %788 = getelementptr inbounds i8, i8* %787, i64 4
  %789 = bitcast i8* %788 to i32*
  %790 = load i32, i32* %789, align 4
  %791 = icmp eq i32 %790, %2128
  br i1 %791, label %792, label %799

792:                                              ; preds = %786
  %793 = inttoptr i64 %2125 to i8*
  %794 = getelementptr inbounds i8, i8* %787, i64 8
  %795 = bitcast i8* %794 to i32*
  %796 = load i32, i32* %795, align 4
  %797 = sext i32 %796 to i64
  %798 = getelementptr inbounds i8, i8* %793, i64 %797
  br label %801

799:                                              ; preds = %786
  %800 = getelementptr inbounds i8, i8* %787, i64 12
  br label %801

801:                                              ; preds = %799, %792
  %802 = phi i8* [ %798, %792 ], [ %800, %799 ]
  %803 = bitcast i8* %802 to i32*
  %804 = load i32, i32* %803, align 4
  %805 = and i32 %804, 63
  %806 = zext i32 %805 to i64
  %807 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %806
  %808 = load i8*, i8** %807, align 8
  br label %113

809:                                              ; preds = %2119
  %810 = lshr i32 %2126, 8
  %811 = icmp eq i32 %810, %2128
  br i1 %811, label %812, label %820

812:                                              ; preds = %809
  %813 = inttoptr i64 %2125 to i8*
  %814 = inttoptr i64 %2124 to i8*
  %815 = getelementptr inbounds i8, i8* %814, i64 4
  %816 = bitcast i8* %815 to i32*
  %817 = load i32, i32* %816, align 4
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds i8, i8* %813, i64 %818
  br label %823

820:                                              ; preds = %809
  %821 = inttoptr i64 %2124 to i8*
  %822 = getelementptr inbounds i8, i8* %821, i64 8
  br label %823

823:                                              ; preds = %820, %812
  %824 = phi i8* [ %819, %812 ], [ %822, %820 ]
  %825 = bitcast i8* %824 to i32*
  %826 = load i32, i32* %825, align 4
  %827 = and i32 %826, 63
  %828 = zext i32 %827 to i64
  %829 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %828
  %830 = load i8*, i8** %829, align 8
  br label %113

831:                                              ; preds = %2119
  %832 = inttoptr i64 %2124 to i8*
  %833 = getelementptr inbounds i8, i8* %832, i64 4
  %834 = bitcast i8* %833 to i32*
  %835 = load i32, i32* %834, align 4
  %836 = icmp eq i32 %835, %2128
  br i1 %836, label %844, label %837

837:                                              ; preds = %831
  %838 = inttoptr i64 %2125 to i8*
  %839 = getelementptr inbounds i8, i8* %832, i64 8
  %840 = bitcast i8* %839 to i32*
  %841 = load i32, i32* %840, align 4
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds i8, i8* %838, i64 %842
  br label %846

844:                                              ; preds = %831
  %845 = getelementptr inbounds i8, i8* %832, i64 12
  br label %846

846:                                              ; preds = %844, %837
  %847 = phi i8* [ %843, %837 ], [ %845, %844 ]
  %848 = bitcast i8* %847 to i32*
  %849 = load i32, i32* %848, align 4
  %850 = and i32 %849, 63
  %851 = zext i32 %850 to i64
  %852 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %851
  %853 = load i8*, i8** %852, align 8
  br label %113

854:                                              ; preds = %2119
  %855 = lshr i32 %2126, 8
  %856 = icmp eq i32 %855, %2128
  br i1 %856, label %865, label %857

857:                                              ; preds = %854
  %858 = inttoptr i64 %2125 to i8*
  %859 = inttoptr i64 %2124 to i8*
  %860 = getelementptr inbounds i8, i8* %859, i64 4
  %861 = bitcast i8* %860 to i32*
  %862 = load i32, i32* %861, align 4
  %863 = sext i32 %862 to i64
  %864 = getelementptr inbounds i8, i8* %858, i64 %863
  br label %868

865:                                              ; preds = %854
  %866 = inttoptr i64 %2124 to i8*
  %867 = getelementptr inbounds i8, i8* %866, i64 8
  br label %868

868:                                              ; preds = %865, %857
  %869 = phi i8* [ %864, %857 ], [ %867, %865 ]
  %870 = bitcast i8* %869 to i32*
  %871 = load i32, i32* %870, align 4
  %872 = and i32 %871, 63
  %873 = zext i32 %872 to i64
  %874 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %873
  %875 = load i8*, i8** %874, align 8
  br label %113

876:                                              ; preds = %2119
  %877 = inttoptr i64 %2124 to i8*
  %878 = getelementptr inbounds i8, i8* %877, i64 4
  %879 = bitcast i8* %878 to i32*
  %880 = load i32, i32* %879, align 4
  %881 = getelementptr inbounds i8, i8* %877, i64 8
  %882 = bitcast i8* %881 to i32*
  %883 = load i32, i32* %882, align 4
  %884 = and i32 %883, %2128
  %885 = icmp eq i32 %880, %884
  br i1 %885, label %886, label %893

886:                                              ; preds = %876
  %887 = inttoptr i64 %2125 to i8*
  %888 = getelementptr inbounds i8, i8* %877, i64 12
  %889 = bitcast i8* %888 to i32*
  %890 = load i32, i32* %889, align 4
  %891 = sext i32 %890 to i64
  %892 = getelementptr inbounds i8, i8* %887, i64 %891
  br label %895

893:                                              ; preds = %876
  %894 = getelementptr inbounds i8, i8* %877, i64 16
  br label %895

895:                                              ; preds = %893, %886
  %896 = phi i8* [ %892, %886 ], [ %894, %893 ]
  %897 = bitcast i8* %896 to i32*
  %898 = load i32, i32* %897, align 4
  %899 = and i32 %898, 63
  %900 = zext i32 %899 to i64
  %901 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %900
  %902 = load i8*, i8** %901, align 8
  br label %113

903:                                              ; preds = %2119
  %904 = lshr i32 %2126, 8
  %905 = inttoptr i64 %2124 to i8*
  %906 = getelementptr inbounds i8, i8* %905, i64 4
  %907 = bitcast i8* %906 to i32*
  %908 = load i32, i32* %907, align 4
  %909 = and i32 %908, %2128
  %910 = icmp eq i32 %904, %909
  br i1 %910, label %911, label %918

911:                                              ; preds = %903
  %912 = inttoptr i64 %2125 to i8*
  %913 = getelementptr inbounds i8, i8* %905, i64 8
  %914 = bitcast i8* %913 to i32*
  %915 = load i32, i32* %914, align 4
  %916 = sext i32 %915 to i64
  %917 = getelementptr inbounds i8, i8* %912, i64 %916
  br label %920

918:                                              ; preds = %903
  %919 = getelementptr inbounds i8, i8* %905, i64 12
  br label %920

920:                                              ; preds = %918, %911
  %921 = phi i8* [ %917, %911 ], [ %919, %918 ]
  %922 = bitcast i8* %921 to i32*
  %923 = load i32, i32* %922, align 4
  %924 = and i32 %923, 63
  %925 = zext i32 %924 to i64
  %926 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %925
  %927 = load i8*, i8** %926, align 8
  br label %113

928:                                              ; preds = %2119
  %929 = inttoptr i64 %2124 to i8*
  %930 = getelementptr inbounds i8, i8* %929, i64 4
  %931 = bitcast i8* %930 to i32*
  %932 = load i32, i32* %931, align 4
  %933 = getelementptr inbounds i8, i8* %929, i64 8
  %934 = bitcast i8* %933 to i32*
  %935 = load i32, i32* %934, align 4
  %936 = and i32 %935, %2128
  %937 = icmp eq i32 %932, %936
  br i1 %937, label %945, label %938

938:                                              ; preds = %928
  %939 = inttoptr i64 %2125 to i8*
  %940 = getelementptr inbounds i8, i8* %929, i64 12
  %941 = bitcast i8* %940 to i32*
  %942 = load i32, i32* %941, align 4
  %943 = sext i32 %942 to i64
  %944 = getelementptr inbounds i8, i8* %939, i64 %943
  br label %947

945:                                              ; preds = %928
  %946 = getelementptr inbounds i8, i8* %929, i64 16
  br label %947

947:                                              ; preds = %945, %938
  %948 = phi i8* [ %944, %938 ], [ %946, %945 ]
  %949 = bitcast i8* %948 to i32*
  %950 = load i32, i32* %949, align 4
  %951 = and i32 %950, 63
  %952 = zext i32 %951 to i64
  %953 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %952
  %954 = load i8*, i8** %953, align 8
  br label %113

955:                                              ; preds = %2119
  %956 = lshr i32 %2126, 8
  %957 = inttoptr i64 %2124 to i8*
  %958 = getelementptr inbounds i8, i8* %957, i64 4
  %959 = bitcast i8* %958 to i32*
  %960 = load i32, i32* %959, align 4
  %961 = and i32 %960, %2128
  %962 = icmp eq i32 %956, %961
  br i1 %962, label %970, label %963

963:                                              ; preds = %955
  %964 = inttoptr i64 %2125 to i8*
  %965 = getelementptr inbounds i8, i8* %957, i64 8
  %966 = bitcast i8* %965 to i32*
  %967 = load i32, i32* %966, align 4
  %968 = sext i32 %967 to i64
  %969 = getelementptr inbounds i8, i8* %964, i64 %968
  br label %972

970:                                              ; preds = %955
  %971 = getelementptr inbounds i8, i8* %957, i64 12
  br label %972

972:                                              ; preds = %970, %963
  %973 = phi i8* [ %969, %963 ], [ %971, %970 ]
  %974 = bitcast i8* %973 to i32*
  %975 = load i32, i32* %974, align 4
  %976 = and i32 %975, 63
  %977 = zext i32 %976 to i64
  %978 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %977
  %979 = load i8*, i8** %978, align 8
  br label %113

980:                                              ; preds = %2119
  %981 = lshr i32 %2126, 8
  %982 = inttoptr i64 %2124 to i8*
  %983 = getelementptr inbounds i8, i8* %982, i64 4
  %984 = bitcast i8* %983 to i16*
  %985 = load i16, i16* %984, align 2
  %986 = zext i16 %985 to i32
  %987 = getelementptr inbounds i8, i8* %982, i64 6
  %988 = bitcast i8* %987 to i16*
  %989 = load i16, i16* %988, align 2
  %990 = zext i16 %989 to i32
  %991 = sub i32 %2128, %986
  %992 = and i32 %991, %990
  %993 = icmp eq i32 %981, %992
  br i1 %993, label %1001, label %994

994:                                              ; preds = %980
  %995 = inttoptr i64 %2125 to i8*
  %996 = getelementptr inbounds i8, i8* %982, i64 8
  %997 = bitcast i8* %996 to i32*
  %998 = load i32, i32* %997, align 4
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds i8, i8* %995, i64 %999
  br label %1003

1001:                                             ; preds = %980
  %1002 = getelementptr inbounds i8, i8* %982, i64 12
  br label %1003

1003:                                             ; preds = %1001, %994
  %1004 = phi i8* [ %1000, %994 ], [ %1002, %1001 ]
  %1005 = bitcast i8* %1004 to i32*
  %1006 = load i32, i32* %1005, align 4
  %1007 = and i32 %1006, 63
  %1008 = zext i32 %1007 to i64
  %1009 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1008
  %1010 = load i8*, i8** %1009, align 8
  br label %113

1011:                                             ; preds = %2119
  %1012 = inttoptr i64 %2124 to i8*
  %1013 = getelementptr inbounds i8, i8* %1012, i64 4
  %1014 = bitcast i8* %1013 to i16*
  %1015 = load i16, i16* %1014, align 2
  %1016 = zext i16 %1015 to i32
  %1017 = getelementptr inbounds i8, i8* %1012, i64 6
  %1018 = bitcast i8* %1017 to i16*
  %1019 = load i16, i16* %1018, align 2
  %1020 = zext i16 %1019 to i32
  %1021 = icmp ult i32 %2128, %1016
  %1022 = icmp ugt i32 %2128, %1020
  %1023 = or i1 %1021, %1022
  br i1 %1023, label %1031, label %1024

1024:                                             ; preds = %1011
  %1025 = inttoptr i64 %2125 to i8*
  %1026 = getelementptr inbounds i8, i8* %1012, i64 8
  %1027 = bitcast i8* %1026 to i32*
  %1028 = load i32, i32* %1027, align 4
  %1029 = sext i32 %1028 to i64
  %1030 = getelementptr inbounds i8, i8* %1025, i64 %1029
  br label %1033

1031:                                             ; preds = %1011
  %1032 = getelementptr inbounds i8, i8* %1012, i64 12
  br label %1033

1033:                                             ; preds = %1031, %1024
  %1034 = phi i8* [ %1030, %1024 ], [ %1032, %1031 ]
  %1035 = bitcast i8* %1034 to i32*
  %1036 = load i32, i32* %1035, align 4
  %1037 = and i32 %1036, 63
  %1038 = zext i32 %1037 to i64
  %1039 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1038
  %1040 = load i8*, i8** %1039, align 8
  br label %113

1041:                                             ; preds = %2119
  %1042 = inttoptr i64 %2124 to i8*
  %1043 = getelementptr inbounds i8, i8* %1042, i64 4
  %1044 = bitcast i8* %1043 to i16*
  %1045 = load i16, i16* %1044, align 2
  %1046 = zext i16 %1045 to i32
  %1047 = getelementptr inbounds i8, i8* %1042, i64 6
  %1048 = bitcast i8* %1047 to i16*
  %1049 = load i16, i16* %1048, align 2
  %1050 = zext i16 %1049 to i32
  %1051 = icmp ult i32 %2128, %1046
  %1052 = icmp ugt i32 %2128, %1050
  %1053 = or i1 %1051, %1052
  br i1 %1053, label %1054, label %1061

1054:                                             ; preds = %1041
  %1055 = inttoptr i64 %2125 to i8*
  %1056 = getelementptr inbounds i8, i8* %1042, i64 8
  %1057 = bitcast i8* %1056 to i32*
  %1058 = load i32, i32* %1057, align 4
  %1059 = sext i32 %1058 to i64
  %1060 = getelementptr inbounds i8, i8* %1055, i64 %1059
  br label %1063

1061:                                             ; preds = %1041
  %1062 = getelementptr inbounds i8, i8* %1042, i64 12
  br label %1063

1063:                                             ; preds = %1061, %1054
  %1064 = phi i8* [ %1060, %1054 ], [ %1062, %1061 ]
  %1065 = bitcast i8* %1064 to i32*
  %1066 = load i32, i32* %1065, align 4
  %1067 = and i32 %1066, 63
  %1068 = zext i32 %1067 to i64
  %1069 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1068
  %1070 = load i8*, i8** %1069, align 8
  br label %113

1071:                                             ; preds = %2119
  %1072 = inttoptr i64 %2124 to i8*
  %1073 = getelementptr inbounds i8, i8* %1072, i64 8
  %1074 = lshr i32 %2128, 3
  %1075 = and i32 %1074, 15
  %1076 = zext i32 %1075 to i64
  %1077 = getelementptr inbounds i8, i8* %1073, i64 %1076
  %1078 = load i8, i8* %1077, align 1
  %1079 = zext i8 %1078 to i32
  %1080 = and i32 %2128, 7
  %1081 = shl i32 1, %1080
  %1082 = and i32 %1081, %1079
  %1083 = icmp eq i32 %1082, 0
  br i1 %1083, label %1091, label %1084

1084:                                             ; preds = %1071
  %1085 = inttoptr i64 %2125 to i8*
  %1086 = getelementptr inbounds i8, i8* %1072, i64 4
  %1087 = bitcast i8* %1086 to i32*
  %1088 = load i32, i32* %1087, align 4
  %1089 = sext i32 %1088 to i64
  %1090 = getelementptr inbounds i8, i8* %1085, i64 %1089
  br label %1093

1091:                                             ; preds = %1071
  %1092 = getelementptr inbounds i8, i8* %1072, i64 24
  br label %1093

1093:                                             ; preds = %1091, %1084
  %1094 = phi i8* [ %1090, %1084 ], [ %1092, %1091 ]
  %1095 = bitcast i8* %1094 to i32*
  %1096 = load i32, i32* %1095, align 4
  %1097 = and i32 %1096, 63
  %1098 = zext i32 %1097 to i64
  %1099 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1098
  %1100 = load i8*, i8** %1099, align 8
  br label %113

1101:                                             ; preds = %2119
  %1102 = lshr i32 %2126, 8
  %1103 = icmp ult i32 %2128, %1102
  br i1 %1103, label %1104, label %1112

1104:                                             ; preds = %1101
  %1105 = inttoptr i64 %2125 to i8*
  %1106 = inttoptr i64 %2124 to i8*
  %1107 = getelementptr inbounds i8, i8* %1106, i64 4
  %1108 = bitcast i8* %1107 to i32*
  %1109 = load i32, i32* %1108, align 4
  %1110 = sext i32 %1109 to i64
  %1111 = getelementptr inbounds i8, i8* %1105, i64 %1110
  br label %1115

1112:                                             ; preds = %1101
  %1113 = inttoptr i64 %2124 to i8*
  %1114 = getelementptr inbounds i8, i8* %1113, i64 8
  br label %1115

1115:                                             ; preds = %1112, %1104
  %1116 = phi i8* [ %1111, %1104 ], [ %1114, %1112 ]
  %1117 = bitcast i8* %1116 to i32*
  %1118 = load i32, i32* %1117, align 4
  %1119 = and i32 %1118, 63
  %1120 = zext i32 %1119 to i64
  %1121 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1120
  %1122 = load i8*, i8** %1121, align 8
  br label %113

1123:                                             ; preds = %2119
  %1124 = lshr i32 %2126, 8
  %1125 = icmp ugt i32 %2128, %1124
  br i1 %1125, label %1126, label %1134

1126:                                             ; preds = %1123
  %1127 = inttoptr i64 %2125 to i8*
  %1128 = inttoptr i64 %2124 to i8*
  %1129 = getelementptr inbounds i8, i8* %1128, i64 4
  %1130 = bitcast i8* %1129 to i32*
  %1131 = load i32, i32* %1130, align 4
  %1132 = sext i32 %1131 to i64
  %1133 = getelementptr inbounds i8, i8* %1127, i64 %1132
  br label %1137

1134:                                             ; preds = %1123
  %1135 = inttoptr i64 %2124 to i8*
  %1136 = getelementptr inbounds i8, i8* %1135, i64 8
  br label %1137

1137:                                             ; preds = %1134, %1126
  %1138 = phi i8* [ %1133, %1126 ], [ %1136, %1134 ]
  %1139 = bitcast i8* %1138 to i32*
  %1140 = load i32, i32* %1139, align 4
  %1141 = and i32 %1140, 63
  %1142 = zext i32 %1141 to i64
  %1143 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1142
  %1144 = load i8*, i8** %1143, align 8
  br label %113

1145:                                             ; preds = %2119
  %1146 = lshr i32 %2126, 8
  %1147 = zext i32 %1146 to i64
  %1148 = load i32*, i32** %59, align 8
  %1149 = getelementptr inbounds i32, i32* %1148, i64 %1147
  %1150 = load i32, i32* %1149, align 4
  %1151 = inttoptr i64 %2124 to i8*
  %1152 = getelementptr inbounds i8, i8* %1151, i64 4
  %1153 = bitcast i8* %1152 to i32*
  %1154 = load i32, i32* %1153, align 4
  %1155 = icmp slt i32 %1150, %1154
  br i1 %1155, label %1156, label %1163

1156:                                             ; preds = %1145
  %1157 = inttoptr i64 %2125 to i8*
  %1158 = getelementptr inbounds i8, i8* %1151, i64 8
  %1159 = bitcast i8* %1158 to i32*
  %1160 = load i32, i32* %1159, align 4
  %1161 = sext i32 %1160 to i64
  %1162 = getelementptr inbounds i8, i8* %1157, i64 %1161
  br label %1165

1163:                                             ; preds = %1145
  %1164 = getelementptr inbounds i8, i8* %1151, i64 12
  br label %1165

1165:                                             ; preds = %1163, %1156
  %1166 = phi i8* [ %1162, %1156 ], [ %1164, %1163 ]
  %1167 = bitcast i8* %1166 to i32*
  %1168 = load i32, i32* %1167, align 4
  %1169 = and i32 %1168, 63
  %1170 = zext i32 %1169 to i64
  %1171 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1170
  %1172 = load i8*, i8** %1171, align 8
  br label %113

1173:                                             ; preds = %2119
  %1174 = lshr i32 %2126, 8
  %1175 = zext i32 %1174 to i64
  %1176 = load i32*, i32** %59, align 8
  %1177 = getelementptr inbounds i32, i32* %1176, i64 %1175
  %1178 = load i32, i32* %1177, align 4
  %1179 = inttoptr i64 %2124 to i8*
  %1180 = getelementptr inbounds i8, i8* %1179, i64 4
  %1181 = bitcast i8* %1180 to i32*
  %1182 = load i32, i32* %1181, align 4
  %1183 = icmp slt i32 %1178, %1182
  br i1 %1183, label %1191, label %1184

1184:                                             ; preds = %1173
  %1185 = inttoptr i64 %2125 to i8*
  %1186 = getelementptr inbounds i8, i8* %1179, i64 8
  %1187 = bitcast i8* %1186 to i32*
  %1188 = load i32, i32* %1187, align 4
  %1189 = sext i32 %1188 to i64
  %1190 = getelementptr inbounds i8, i8* %1185, i64 %1189
  br label %1193

1191:                                             ; preds = %1173
  %1192 = getelementptr inbounds i8, i8* %1179, i64 12
  br label %1193

1193:                                             ; preds = %1191, %1184
  %1194 = phi i8* [ %1190, %1184 ], [ %1192, %1191 ]
  %1195 = bitcast i8* %1194 to i32*
  %1196 = load i32, i32* %1195, align 4
  %1197 = and i32 %1196, 63
  %1198 = zext i32 %1197 to i64
  %1199 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1198
  %1200 = load i8*, i8** %1199, align 8
  br label %113

1201:                                             ; preds = %2119
  %1202 = lshr i32 %2126, 8
  %1203 = zext i32 %1202 to i64
  %1204 = load i32*, i32** %59, align 8
  %1205 = getelementptr inbounds i32, i32* %1204, i64 %1203
  %1206 = load i32, i32* %1205, align 4
  %1207 = icmp eq i32 %1206, %2129
  br i1 %1207, label %1208, label %1216

1208:                                             ; preds = %1201
  %1209 = inttoptr i64 %2125 to i8*
  %1210 = inttoptr i64 %2124 to i8*
  %1211 = getelementptr inbounds i8, i8* %1210, i64 4
  %1212 = bitcast i8* %1211 to i32*
  %1213 = load i32, i32* %1212, align 4
  %1214 = sext i32 %1213 to i64
  %1215 = getelementptr inbounds i8, i8* %1209, i64 %1214
  br label %1219

1216:                                             ; preds = %1201
  %1217 = inttoptr i64 %2124 to i8*
  %1218 = getelementptr inbounds i8, i8* %1217, i64 8
  br label %1219

1219:                                             ; preds = %1216, %1208
  %1220 = phi i8* [ %1215, %1208 ], [ %1218, %1216 ]
  %1221 = bitcast i8* %1220 to i32*
  %1222 = load i32, i32* %1221, align 4
  %1223 = and i32 %1222, 63
  %1224 = zext i32 %1223 to i64
  %1225 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1224
  %1226 = load i8*, i8** %1225, align 8
  br label %113

1227:                                             ; preds = %2119
  %1228 = lshr i32 %2126, 8
  %1229 = zext i32 %1228 to i64
  %1230 = load i32*, i32** %59, align 8
  %1231 = getelementptr inbounds i32, i32* %1230, i64 %1229
  %1232 = load i32, i32* %1231, align 4
  %1233 = inttoptr i64 %2124 to i8*
  %1234 = getelementptr inbounds i8, i8* %1233, i64 4
  %1235 = bitcast i8* %1234 to i32*
  %1236 = load i32, i32* %1235, align 4
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds i32, i32* %1230, i64 %1237
  %1239 = load i32, i32* %1238, align 4
  %1240 = icmp eq i32 %1232, %1239
  br i1 %1240, label %1241, label %1243

1241:                                             ; preds = %1227
  %1242 = getelementptr inbounds i8, i8* %1233, i64 12
  br label %1250

1243:                                             ; preds = %1227
  %1244 = inttoptr i64 %2125 to i8*
  %1245 = getelementptr inbounds i8, i8* %1233, i64 8
  %1246 = bitcast i8* %1245 to i32*
  %1247 = load i32, i32* %1246, align 4
  %1248 = sext i32 %1247 to i64
  %1249 = getelementptr inbounds i8, i8* %1244, i64 %1248
  br label %1250

1250:                                             ; preds = %1243, %1241
  %1251 = phi i8* [ %1242, %1241 ], [ %1249, %1243 ]
  %1252 = bitcast i8* %1251 to i32*
  %1253 = load i32, i32* %1252, align 4
  %1254 = and i32 %1253, 63
  %1255 = zext i32 %1254 to i64
  %1256 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1255
  %1257 = load i8*, i8** %1256, align 8
  br label %113

1258:                                             ; preds = %2119
  %1259 = lshr i32 %2126, 8
  %1260 = zext i32 %1259 to i64
  %1261 = load i32*, i32** %59, align 8
  %1262 = getelementptr inbounds i32, i32* %1261, i64 %1260
  %1263 = load i32, i32* %1262, align 4
  %1264 = add nuw nsw i32 %1259, 1
  %1265 = zext i32 %1264 to i64
  %1266 = getelementptr inbounds i32, i32* %1261, i64 %1265
  %1267 = load i32, i32* %1266, align 4
  %1268 = sub nsw i32 %1267, %1263
  %1269 = icmp sgt i32 %1263, -1
  %1270 = icmp sgt i32 %1268, 0
  %1271 = and i1 %1269, %1270
  br i1 %1271, label %1272, label %1302

1272:                                             ; preds = %1258
  %1273 = add nsw i32 %1268, %2129
  %1274 = trunc i64 %2122 to i32
  %1275 = icmp sgt i32 %1273, %1274
  br i1 %1275, label %1288, label %1276

1276:                                             ; preds = %1272
  %1277 = sext i32 %1263 to i64
  %1278 = inttoptr i64 %2123 to i16*
  %1279 = getelementptr inbounds i16, i16* %1278, i64 %1277
  %1280 = sext i32 %2129 to i64
  %1281 = getelementptr inbounds i16, i16* %1278, i64 %1280
  %1282 = sext i32 %1268 to i64
  %1283 = bitcast i16* %1279 to i8*
  %1284 = bitcast i16* %1281 to i8*
  %1285 = shl nsw i64 %1282, 1
  %1286 = call i32 @bcmp(i8* %1283, i8* %1284, i64 %1285) #8
  %1287 = icmp eq i32 %1286, 0
  br i1 %1287, label %1302, label %1288

1288:                                             ; preds = %1276, %1272
  %1289 = inttoptr i64 %2125 to i8*
  %1290 = inttoptr i64 %2124 to i8*
  %1291 = getelementptr inbounds i8, i8* %1290, i64 4
  %1292 = bitcast i8* %1291 to i32*
  %1293 = load i32, i32* %1292, align 4
  %1294 = sext i32 %1293 to i64
  %1295 = getelementptr inbounds i8, i8* %1289, i64 %1294
  %1296 = bitcast i8* %1295 to i32*
  %1297 = load i32, i32* %1296, align 4
  %1298 = and i32 %1297, 63
  %1299 = zext i32 %1298 to i64
  %1300 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1299
  %1301 = load i8*, i8** %1300, align 8
  br label %113

1302:                                             ; preds = %1276, %1258
  %1303 = phi i32 [ %2129, %1258 ], [ %1273, %1276 ]
  %1304 = inttoptr i64 %2124 to i8*
  %1305 = getelementptr inbounds i8, i8* %1304, i64 8
  %1306 = bitcast i8* %1305 to i32*
  %1307 = load i32, i32* %1306, align 4
  %1308 = and i32 %1307, 63
  %1309 = zext i32 %1308 to i64
  %1310 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1309
  %1311 = load i8*, i8** %1310, align 8
  br label %113

1312:                                             ; preds = %2119
  %1313 = lshr i32 %2126, 8
  %1314 = zext i32 %1313 to i64
  %1315 = load i32*, i32** %59, align 8
  %1316 = getelementptr inbounds i32, i32* %1315, i64 %1314
  %1317 = load i32, i32* %1316, align 4
  %1318 = add nuw nsw i32 %1313, 1
  %1319 = zext i32 %1318 to i64
  %1320 = getelementptr inbounds i32, i32* %1315, i64 %1319
  %1321 = load i32, i32* %1320, align 4
  %1322 = sub nsw i32 %1321, %1317
  %1323 = icmp sgt i32 %1317, -1
  %1324 = icmp sgt i32 %1322, 0
  %1325 = and i1 %1323, %1324
  br i1 %1325, label %1326, label %1355

1326:                                             ; preds = %1312
  %1327 = sub nsw i32 %2129, %1322
  %1328 = icmp slt i32 %1327, 0
  br i1 %1328, label %1341, label %1329

1329:                                             ; preds = %1326
  %1330 = sext i32 %1317 to i64
  %1331 = inttoptr i64 %2123 to i16*
  %1332 = getelementptr inbounds i16, i16* %1331, i64 %1330
  %1333 = sext i32 %1327 to i64
  %1334 = getelementptr inbounds i16, i16* %1331, i64 %1333
  %1335 = sext i32 %1322 to i64
  %1336 = bitcast i16* %1332 to i8*
  %1337 = bitcast i16* %1334 to i8*
  %1338 = shl nsw i64 %1335, 1
  %1339 = call i32 @bcmp(i8* %1336, i8* %1337, i64 %1338) #8
  %1340 = icmp eq i32 %1339, 0
  br i1 %1340, label %1355, label %1341

1341:                                             ; preds = %1329, %1326
  %1342 = inttoptr i64 %2125 to i8*
  %1343 = inttoptr i64 %2124 to i8*
  %1344 = getelementptr inbounds i8, i8* %1343, i64 4
  %1345 = bitcast i8* %1344 to i32*
  %1346 = load i32, i32* %1345, align 4
  %1347 = sext i32 %1346 to i64
  %1348 = getelementptr inbounds i8, i8* %1342, i64 %1347
  %1349 = bitcast i8* %1348 to i32*
  %1350 = load i32, i32* %1349, align 4
  %1351 = and i32 %1350, 63
  %1352 = zext i32 %1351 to i64
  %1353 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1352
  %1354 = load i8*, i8** %1353, align 8
  br label %113

1355:                                             ; preds = %1329, %1312
  %1356 = phi i32 [ %2129, %1312 ], [ %1327, %1329 ]
  %1357 = inttoptr i64 %2124 to i8*
  %1358 = getelementptr inbounds i8, i8* %1357, i64 8
  %1359 = bitcast i8* %1358 to i32*
  %1360 = load i32, i32* %1359, align 4
  %1361 = and i32 %1360, 63
  %1362 = zext i32 %1361 to i64
  %1363 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1362
  %1364 = load i8*, i8** %1363, align 8
  br label %113

1365:                                             ; preds = %2119
  %1366 = lshr i32 %2126, 8
  %1367 = zext i32 %1366 to i64
  %1368 = load i32*, i32** %59, align 8
  %1369 = getelementptr inbounds i32, i32* %1368, i64 %1367
  %1370 = load i32, i32* %1369, align 4
  %1371 = add nuw nsw i32 %1366, 1
  %1372 = zext i32 %1371 to i64
  %1373 = getelementptr inbounds i32, i32* %1368, i64 %1372
  %1374 = load i32, i32* %1373, align 4
  %1375 = sub nsw i32 %1374, %1370
  %1376 = icmp sgt i32 %1370, -1
  %1377 = icmp sgt i32 %1375, 0
  %1378 = and i1 %1376, %1377
  br i1 %1378, label %1379, label %1409

1379:                                             ; preds = %1365
  %1380 = add nsw i32 %1375, %2129
  %1381 = trunc i64 %2122 to i32
  %1382 = icmp sgt i32 %1380, %1381
  br i1 %1382, label %1395, label %1383

1383:                                             ; preds = %1379
  %1384 = inttoptr i64 %2123 to i16*
  %1385 = sext i32 %1370 to i64
  %1386 = getelementptr inbounds i16, i16* %1384, i64 %1385
  %1387 = ptrtoint i16* %1386 to i64
  %1388 = sext i32 %2129 to i64
  %1389 = getelementptr inbounds i16, i16* %1384, i64 %1388
  %1390 = ptrtoint i16* %1389 to i64
  %1391 = shl nsw i32 %1375, 1
  %1392 = sext i32 %1391 to i64
  %1393 = call i32 @_ZN2v88internal20RegExpMacroAssembler29CaseInsensitiveCompareUnicodeEmmmPNS0_7IsolateE(i64 %1387, i64 %1390, i64 %1392, %"class.v8::internal::Isolate"* %0) #8
  %1394 = icmp eq i32 %1393, 0
  br i1 %1394, label %1395, label %1409

1395:                                             ; preds = %1383, %1379
  %1396 = inttoptr i64 %2125 to i8*
  %1397 = inttoptr i64 %2124 to i8*
  %1398 = getelementptr inbounds i8, i8* %1397, i64 4
  %1399 = bitcast i8* %1398 to i32*
  %1400 = load i32, i32* %1399, align 4
  %1401 = sext i32 %1400 to i64
  %1402 = getelementptr inbounds i8, i8* %1396, i64 %1401
  %1403 = bitcast i8* %1402 to i32*
  %1404 = load i32, i32* %1403, align 4
  %1405 = and i32 %1404, 63
  %1406 = zext i32 %1405 to i64
  %1407 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1406
  %1408 = load i8*, i8** %1407, align 8
  br label %113

1409:                                             ; preds = %1383, %1365
  %1410 = phi i32 [ %2129, %1365 ], [ %1380, %1383 ]
  %1411 = inttoptr i64 %2124 to i8*
  %1412 = getelementptr inbounds i8, i8* %1411, i64 8
  %1413 = bitcast i8* %1412 to i32*
  %1414 = load i32, i32* %1413, align 4
  %1415 = and i32 %1414, 63
  %1416 = zext i32 %1415 to i64
  %1417 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1416
  %1418 = load i8*, i8** %1417, align 8
  br label %113

1419:                                             ; preds = %2119
  %1420 = lshr i32 %2126, 8
  %1421 = zext i32 %1420 to i64
  %1422 = load i32*, i32** %59, align 8
  %1423 = getelementptr inbounds i32, i32* %1422, i64 %1421
  %1424 = load i32, i32* %1423, align 4
  %1425 = add nuw nsw i32 %1420, 1
  %1426 = zext i32 %1425 to i64
  %1427 = getelementptr inbounds i32, i32* %1422, i64 %1426
  %1428 = load i32, i32* %1427, align 4
  %1429 = sub nsw i32 %1428, %1424
  %1430 = icmp sgt i32 %1424, -1
  %1431 = icmp sgt i32 %1429, 0
  %1432 = and i1 %1430, %1431
  br i1 %1432, label %1433, label %1463

1433:                                             ; preds = %1419
  %1434 = add nsw i32 %1429, %2129
  %1435 = trunc i64 %2122 to i32
  %1436 = icmp sgt i32 %1434, %1435
  br i1 %1436, label %1449, label %1437

1437:                                             ; preds = %1433
  %1438 = inttoptr i64 %2123 to i16*
  %1439 = sext i32 %1424 to i64
  %1440 = getelementptr inbounds i16, i16* %1438, i64 %1439
  %1441 = ptrtoint i16* %1440 to i64
  %1442 = sext i32 %2129 to i64
  %1443 = getelementptr inbounds i16, i16* %1438, i64 %1442
  %1444 = ptrtoint i16* %1443 to i64
  %1445 = shl nsw i32 %1429, 1
  %1446 = sext i32 %1445 to i64
  %1447 = call i32 @_ZN2v88internal20RegExpMacroAssembler32CaseInsensitiveCompareNonUnicodeEmmmPNS0_7IsolateE(i64 %1441, i64 %1444, i64 %1446, %"class.v8::internal::Isolate"* %0) #8
  %1448 = icmp eq i32 %1447, 0
  br i1 %1448, label %1449, label %1463

1449:                                             ; preds = %1437, %1433
  %1450 = inttoptr i64 %2125 to i8*
  %1451 = inttoptr i64 %2124 to i8*
  %1452 = getelementptr inbounds i8, i8* %1451, i64 4
  %1453 = bitcast i8* %1452 to i32*
  %1454 = load i32, i32* %1453, align 4
  %1455 = sext i32 %1454 to i64
  %1456 = getelementptr inbounds i8, i8* %1450, i64 %1455
  %1457 = bitcast i8* %1456 to i32*
  %1458 = load i32, i32* %1457, align 4
  %1459 = and i32 %1458, 63
  %1460 = zext i32 %1459 to i64
  %1461 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1460
  %1462 = load i8*, i8** %1461, align 8
  br label %113

1463:                                             ; preds = %1437, %1419
  %1464 = phi i32 [ %2129, %1419 ], [ %1434, %1437 ]
  %1465 = inttoptr i64 %2124 to i8*
  %1466 = getelementptr inbounds i8, i8* %1465, i64 8
  %1467 = bitcast i8* %1466 to i32*
  %1468 = load i32, i32* %1467, align 4
  %1469 = and i32 %1468, 63
  %1470 = zext i32 %1469 to i64
  %1471 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1470
  %1472 = load i8*, i8** %1471, align 8
  br label %113

1473:                                             ; preds = %2119
  %1474 = lshr i32 %2126, 8
  %1475 = zext i32 %1474 to i64
  %1476 = load i32*, i32** %59, align 8
  %1477 = getelementptr inbounds i32, i32* %1476, i64 %1475
  %1478 = load i32, i32* %1477, align 4
  %1479 = add nuw nsw i32 %1474, 1
  %1480 = zext i32 %1479 to i64
  %1481 = getelementptr inbounds i32, i32* %1476, i64 %1480
  %1482 = load i32, i32* %1481, align 4
  %1483 = sub nsw i32 %1482, %1478
  %1484 = icmp sgt i32 %1478, -1
  %1485 = icmp sgt i32 %1483, 0
  %1486 = and i1 %1484, %1485
  br i1 %1486, label %1487, label %1516

1487:                                             ; preds = %1473
  %1488 = sub nsw i32 %2129, %1483
  %1489 = icmp slt i32 %1488, 0
  br i1 %1489, label %1502, label %1490

1490:                                             ; preds = %1487
  %1491 = inttoptr i64 %2123 to i16*
  %1492 = sext i32 %1478 to i64
  %1493 = getelementptr inbounds i16, i16* %1491, i64 %1492
  %1494 = ptrtoint i16* %1493 to i64
  %1495 = sext i32 %1488 to i64
  %1496 = getelementptr inbounds i16, i16* %1491, i64 %1495
  %1497 = ptrtoint i16* %1496 to i64
  %1498 = shl nsw i32 %1483, 1
  %1499 = sext i32 %1498 to i64
  %1500 = call i32 @_ZN2v88internal20RegExpMacroAssembler29CaseInsensitiveCompareUnicodeEmmmPNS0_7IsolateE(i64 %1494, i64 %1497, i64 %1499, %"class.v8::internal::Isolate"* %0) #8
  %1501 = icmp eq i32 %1500, 0
  br i1 %1501, label %1502, label %1516

1502:                                             ; preds = %1490, %1487
  %1503 = inttoptr i64 %2125 to i8*
  %1504 = inttoptr i64 %2124 to i8*
  %1505 = getelementptr inbounds i8, i8* %1504, i64 4
  %1506 = bitcast i8* %1505 to i32*
  %1507 = load i32, i32* %1506, align 4
  %1508 = sext i32 %1507 to i64
  %1509 = getelementptr inbounds i8, i8* %1503, i64 %1508
  %1510 = bitcast i8* %1509 to i32*
  %1511 = load i32, i32* %1510, align 4
  %1512 = and i32 %1511, 63
  %1513 = zext i32 %1512 to i64
  %1514 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1513
  %1515 = load i8*, i8** %1514, align 8
  br label %113

1516:                                             ; preds = %1490, %1473
  %1517 = phi i32 [ %2129, %1473 ], [ %1488, %1490 ]
  %1518 = inttoptr i64 %2124 to i8*
  %1519 = getelementptr inbounds i8, i8* %1518, i64 8
  %1520 = bitcast i8* %1519 to i32*
  %1521 = load i32, i32* %1520, align 4
  %1522 = and i32 %1521, 63
  %1523 = zext i32 %1522 to i64
  %1524 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1523
  %1525 = load i8*, i8** %1524, align 8
  br label %113

1526:                                             ; preds = %2119
  %1527 = lshr i32 %2126, 8
  %1528 = zext i32 %1527 to i64
  %1529 = load i32*, i32** %59, align 8
  %1530 = getelementptr inbounds i32, i32* %1529, i64 %1528
  %1531 = load i32, i32* %1530, align 4
  %1532 = add nuw nsw i32 %1527, 1
  %1533 = zext i32 %1532 to i64
  %1534 = getelementptr inbounds i32, i32* %1529, i64 %1533
  %1535 = load i32, i32* %1534, align 4
  %1536 = sub nsw i32 %1535, %1531
  %1537 = icmp sgt i32 %1531, -1
  %1538 = icmp sgt i32 %1536, 0
  %1539 = and i1 %1537, %1538
  br i1 %1539, label %1540, label %1569

1540:                                             ; preds = %1526
  %1541 = sub nsw i32 %2129, %1536
  %1542 = icmp slt i32 %1541, 0
  br i1 %1542, label %1555, label %1543

1543:                                             ; preds = %1540
  %1544 = inttoptr i64 %2123 to i16*
  %1545 = sext i32 %1531 to i64
  %1546 = getelementptr inbounds i16, i16* %1544, i64 %1545
  %1547 = ptrtoint i16* %1546 to i64
  %1548 = sext i32 %1541 to i64
  %1549 = getelementptr inbounds i16, i16* %1544, i64 %1548
  %1550 = ptrtoint i16* %1549 to i64
  %1551 = shl nsw i32 %1536, 1
  %1552 = sext i32 %1551 to i64
  %1553 = call i32 @_ZN2v88internal20RegExpMacroAssembler32CaseInsensitiveCompareNonUnicodeEmmmPNS0_7IsolateE(i64 %1547, i64 %1550, i64 %1552, %"class.v8::internal::Isolate"* %0) #8
  %1554 = icmp eq i32 %1553, 0
  br i1 %1554, label %1555, label %1569

1555:                                             ; preds = %1543, %1540
  %1556 = inttoptr i64 %2125 to i8*
  %1557 = inttoptr i64 %2124 to i8*
  %1558 = getelementptr inbounds i8, i8* %1557, i64 4
  %1559 = bitcast i8* %1558 to i32*
  %1560 = load i32, i32* %1559, align 4
  %1561 = sext i32 %1560 to i64
  %1562 = getelementptr inbounds i8, i8* %1556, i64 %1561
  %1563 = bitcast i8* %1562 to i32*
  %1564 = load i32, i32* %1563, align 4
  %1565 = and i32 %1564, 63
  %1566 = zext i32 %1565 to i64
  %1567 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1566
  %1568 = load i8*, i8** %1567, align 8
  br label %113

1569:                                             ; preds = %1543, %1526
  %1570 = phi i32 [ %2129, %1526 ], [ %1541, %1543 ]
  %1571 = inttoptr i64 %2124 to i8*
  %1572 = getelementptr inbounds i8, i8* %1571, i64 8
  %1573 = bitcast i8* %1572 to i32*
  %1574 = load i32, i32* %1573, align 4
  %1575 = and i32 %1574, 63
  %1576 = zext i32 %1575 to i64
  %1577 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1576
  %1578 = load i8*, i8** %1577, align 8
  br label %113

1579:                                             ; preds = %2119
  %1580 = ashr i32 %2126, 8
  %1581 = sub nsw i32 0, %1580
  %1582 = icmp eq i32 %2129, %1581
  br i1 %1582, label %1583, label %1591

1583:                                             ; preds = %1579
  %1584 = inttoptr i64 %2125 to i8*
  %1585 = inttoptr i64 %2124 to i8*
  %1586 = getelementptr inbounds i8, i8* %1585, i64 4
  %1587 = bitcast i8* %1586 to i32*
  %1588 = load i32, i32* %1587, align 4
  %1589 = sext i32 %1588 to i64
  %1590 = getelementptr inbounds i8, i8* %1584, i64 %1589
  br label %1594

1591:                                             ; preds = %1579
  %1592 = inttoptr i64 %2124 to i8*
  %1593 = getelementptr inbounds i8, i8* %1592, i64 8
  br label %1594

1594:                                             ; preds = %1591, %1583
  %1595 = phi i8* [ %1590, %1583 ], [ %1593, %1591 ]
  %1596 = bitcast i8* %1595 to i32*
  %1597 = load i32, i32* %1596, align 4
  %1598 = and i32 %1597, 63
  %1599 = zext i32 %1598 to i64
  %1600 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1599
  %1601 = load i8*, i8** %1600, align 8
  br label %113

1602:                                             ; preds = %2119
  %1603 = ashr i32 %2126, 8
  %1604 = sub nsw i32 0, %1603
  %1605 = icmp eq i32 %2129, %1604
  br i1 %1605, label %1606, label %1609

1606:                                             ; preds = %1602
  %1607 = inttoptr i64 %2124 to i8*
  %1608 = getelementptr inbounds i8, i8* %1607, i64 8
  br label %1617

1609:                                             ; preds = %1602
  %1610 = inttoptr i64 %2125 to i8*
  %1611 = inttoptr i64 %2124 to i8*
  %1612 = getelementptr inbounds i8, i8* %1611, i64 4
  %1613 = bitcast i8* %1612 to i32*
  %1614 = load i32, i32* %1613, align 4
  %1615 = sext i32 %1614 to i64
  %1616 = getelementptr inbounds i8, i8* %1610, i64 %1615
  br label %1617

1617:                                             ; preds = %1609, %1606
  %1618 = phi i8* [ %1608, %1606 ], [ %1616, %1609 ]
  %1619 = bitcast i8* %1618 to i32*
  %1620 = load i32, i32* %1619, align 4
  %1621 = and i32 %1620, 63
  %1622 = zext i32 %1621 to i64
  %1623 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1622
  %1624 = load i8*, i8** %1623, align 8
  br label %113

1625:                                             ; preds = %2119
  %1626 = inttoptr i64 %2124 to i8*
  %1627 = getelementptr inbounds i8, i8* %1626, i64 4
  %1628 = bitcast i8* %1627 to i32*
  %1629 = load i32, i32* %1628, align 4
  %1630 = and i32 %1629, 63
  %1631 = zext i32 %1630 to i64
  %1632 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1631
  %1633 = load i8*, i8** %1632, align 8
  %1634 = lshr i32 %2126, 8
  %1635 = trunc i64 %2122 to i32
  %1636 = sub nsw i32 %1635, %2129
  %1637 = icmp sgt i32 %1636, %1634
  br i1 %1637, label %1638, label %113

1638:                                             ; preds = %1625
  %1639 = sub nsw i32 %1635, %1634
  %1640 = add nsw i32 %1639, -1
  %1641 = sext i32 %1640 to i64
  %1642 = inttoptr i64 %2123 to i16*
  %1643 = getelementptr inbounds i16, i16* %1642, i64 %1641
  %1644 = load i16, i16* %1643, align 2
  %1645 = zext i16 %1644 to i32
  br label %113

1646:                                             ; preds = %2119
  %1647 = ashr i32 %2126, 8
  %1648 = add nsw i32 %2129, %1647
  %1649 = trunc i64 %2122 to i32
  %1650 = icmp sgt i32 %1648, %1649
  %1651 = icmp slt i32 %1648, 0
  %1652 = or i1 %1650, %1651
  br i1 %1652, label %1653, label %1661

1653:                                             ; preds = %1646
  %1654 = inttoptr i64 %2125 to i8*
  %1655 = inttoptr i64 %2124 to i8*
  %1656 = getelementptr inbounds i8, i8* %1655, i64 4
  %1657 = bitcast i8* %1656 to i32*
  %1658 = load i32, i32* %1657, align 4
  %1659 = sext i32 %1658 to i64
  %1660 = getelementptr inbounds i8, i8* %1654, i64 %1659
  br label %1664

1661:                                             ; preds = %1646
  %1662 = inttoptr i64 %2124 to i8*
  %1663 = getelementptr inbounds i8, i8* %1662, i64 8
  br label %1664

1664:                                             ; preds = %1661, %1653
  %1665 = phi i8* [ %1660, %1653 ], [ %1663, %1661 ]
  %1666 = bitcast i8* %1665 to i32*
  %1667 = load i32, i32* %1666, align 4
  %1668 = and i32 %1667, 63
  %1669 = zext i32 %1668 to i64
  %1670 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1669
  %1671 = load i8*, i8** %1670, align 8
  br label %113

1672:                                             ; preds = %2119
  %1673 = ashr i32 %2126, 8
  %1674 = inttoptr i64 %2124 to i8*
  %1675 = getelementptr inbounds i8, i8* %1674, i64 6
  %1676 = bitcast i8* %1675 to i16*
  %1677 = load i16, i16* %1676, align 2
  %1678 = add nsw i32 %2129, %1673
  %1679 = trunc i64 %2122 to i32
  %1680 = icmp ult i32 %1678, %1679
  br i1 %1680, label %1681, label %1718

1681:                                             ; preds = %1672
  %1682 = getelementptr inbounds i8, i8* %1674, i64 4
  %1683 = bitcast i8* %1682 to i16*
  %1684 = load i16, i16* %1683, align 2
  %1685 = inttoptr i64 %2123 to i16*
  %1686 = sext i32 %2129 to i64
  %1687 = sext i16 %1684 to i64
  br label %1688

1688:                                             ; preds = %1681, %1710
  %1689 = phi i64 [ %1686, %1681 ], [ %1711, %1710 ]
  %1690 = phi i32 [ %1678, %1681 ], [ %1713, %1710 ]
  %1691 = sext i32 %1690 to i64
  %1692 = getelementptr inbounds i16, i16* %1685, i64 %1691
  %1693 = load i16, i16* %1692, align 2
  %1694 = icmp eq i16 %1677, %1693
  br i1 %1694, label %1695, label %1710

1695:                                             ; preds = %1688
  %1696 = trunc i64 %1689 to i32
  %1697 = zext i16 %1677 to i32
  %1698 = inttoptr i64 %2125 to i8*
  %1699 = getelementptr inbounds i8, i8* %1674, i64 8
  %1700 = bitcast i8* %1699 to i32*
  %1701 = load i32, i32* %1700, align 4
  %1702 = sext i32 %1701 to i64
  %1703 = getelementptr inbounds i8, i8* %1698, i64 %1702
  %1704 = bitcast i8* %1703 to i32*
  %1705 = load i32, i32* %1704, align 4
  %1706 = and i32 %1705, 63
  %1707 = zext i32 %1706 to i64
  %1708 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1707
  %1709 = load i8*, i8** %1708, align 8
  br label %113

1710:                                             ; preds = %1688
  %1711 = add i64 %1689, %1687
  %1712 = trunc i64 %1711 to i32
  %1713 = add i32 %1673, %1712
  %1714 = icmp ult i32 %1713, %1679
  br i1 %1714, label %1688, label %1715

1715:                                             ; preds = %1710
  %1716 = trunc i64 %1711 to i32
  %1717 = zext i16 %1693 to i32
  br label %1718

1718:                                             ; preds = %1715, %1672
  %1719 = phi i32 [ %1717, %1715 ], [ %2128, %1672 ]
  %1720 = phi i32 [ %1716, %1715 ], [ %2129, %1672 ]
  %1721 = inttoptr i64 %2125 to i8*
  %1722 = getelementptr inbounds i8, i8* %1674, i64 12
  %1723 = bitcast i8* %1722 to i32*
  %1724 = load i32, i32* %1723, align 4
  %1725 = sext i32 %1724 to i64
  %1726 = getelementptr inbounds i8, i8* %1721, i64 %1725
  %1727 = bitcast i8* %1726 to i32*
  %1728 = load i32, i32* %1727, align 4
  %1729 = and i32 %1728, 63
  %1730 = zext i32 %1729 to i64
  %1731 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1730
  %1732 = load i8*, i8** %1731, align 8
  br label %113

1733:                                             ; preds = %2119
  %1734 = inttoptr i64 %2124 to i8*
  %1735 = getelementptr inbounds i8, i8* %1734, i64 6
  %1736 = bitcast i8* %1735 to i16*
  %1737 = load i16, i16* %1736, align 2
  %1738 = zext i16 %1737 to i32
  %1739 = getelementptr inbounds i8, i8* %1734, i64 8
  %1740 = bitcast i8* %1739 to i32*
  %1741 = load i32, i32* %1740, align 4
  %1742 = getelementptr inbounds i8, i8* %1734, i64 12
  %1743 = bitcast i8* %1742 to i32*
  %1744 = load i32, i32* %1743, align 4
  %1745 = add nsw i32 %2129, %1744
  %1746 = trunc i64 %2122 to i32
  %1747 = icmp ugt i32 %1745, %1746
  br i1 %1747, label %1788, label %1748

1748:                                             ; preds = %1733
  %1749 = getelementptr inbounds i8, i8* %1734, i64 4
  %1750 = bitcast i8* %1749 to i16*
  %1751 = load i16, i16* %1750, align 2
  %1752 = ashr i32 %2126, 8
  %1753 = inttoptr i64 %2123 to i16*
  %1754 = sext i32 %2129 to i64
  %1755 = sext i16 %1751 to i64
  %1756 = sext i32 %1752 to i64
  br label %1757

1757:                                             ; preds = %1748, %1780
  %1758 = phi i64 [ %1754, %1748 ], [ %1781, %1780 ]
  %1759 = add nsw i64 %1758, %1756
  %1760 = getelementptr inbounds i16, i16* %1753, i64 %1759
  %1761 = load i16, i16* %1760, align 2
  %1762 = zext i16 %1761 to i32
  %1763 = and i32 %1741, %1762
  %1764 = icmp eq i32 %1763, %1738
  br i1 %1764, label %1765, label %1780

1765:                                             ; preds = %1757
  %1766 = zext i16 %1761 to i32
  %1767 = trunc i64 %1758 to i32
  %1768 = inttoptr i64 %2125 to i8*
  %1769 = getelementptr inbounds i8, i8* %1734, i64 16
  %1770 = bitcast i8* %1769 to i32*
  %1771 = load i32, i32* %1770, align 4
  %1772 = sext i32 %1771 to i64
  %1773 = getelementptr inbounds i8, i8* %1768, i64 %1772
  %1774 = bitcast i8* %1773 to i32*
  %1775 = load i32, i32* %1774, align 4
  %1776 = and i32 %1775, 63
  %1777 = zext i32 %1776 to i64
  %1778 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1777
  %1779 = load i8*, i8** %1778, align 8
  br label %113

1780:                                             ; preds = %1757
  %1781 = add i64 %1758, %1755
  %1782 = trunc i64 %1781 to i32
  %1783 = add i32 %1744, %1782
  %1784 = icmp ugt i32 %1783, %1746
  br i1 %1784, label %1785, label %1757

1785:                                             ; preds = %1780
  %1786 = zext i16 %1761 to i32
  %1787 = trunc i64 %1781 to i32
  br label %1788

1788:                                             ; preds = %1785, %1733
  %1789 = phi i32 [ %1786, %1785 ], [ %2128, %1733 ]
  %1790 = phi i32 [ %1787, %1785 ], [ %2129, %1733 ]
  %1791 = inttoptr i64 %2125 to i8*
  %1792 = getelementptr inbounds i8, i8* %1734, i64 20
  %1793 = bitcast i8* %1792 to i32*
  %1794 = load i32, i32* %1793, align 4
  %1795 = sext i32 %1794 to i64
  %1796 = getelementptr inbounds i8, i8* %1791, i64 %1795
  %1797 = bitcast i8* %1796 to i32*
  %1798 = load i32, i32* %1797, align 4
  %1799 = and i32 %1798, 63
  %1800 = zext i32 %1799 to i64
  %1801 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1800
  %1802 = load i8*, i8** %1801, align 8
  br label %113

1803:                                             ; preds = %2119
  %1804 = inttoptr i64 %2124 to i8*
  %1805 = getelementptr inbounds i8, i8* %1804, i64 6
  %1806 = bitcast i8* %1805 to i16*
  %1807 = load i16, i16* %1806, align 2
  %1808 = getelementptr inbounds i8, i8* %1804, i64 8
  %1809 = bitcast i8* %1808 to i32*
  %1810 = load i32, i32* %1809, align 4
  %1811 = add nsw i32 %2129, %1810
  %1812 = trunc i64 %2122 to i32
  %1813 = icmp ugt i32 %1811, %1812
  br i1 %1813, label %1852, label %1814

1814:                                             ; preds = %1803
  %1815 = getelementptr inbounds i8, i8* %1804, i64 4
  %1816 = bitcast i8* %1815 to i16*
  %1817 = load i16, i16* %1816, align 2
  %1818 = ashr i32 %2126, 8
  %1819 = inttoptr i64 %2123 to i16*
  %1820 = sext i32 %2129 to i64
  %1821 = sext i16 %1817 to i64
  %1822 = sext i32 %1818 to i64
  br label %1823

1823:                                             ; preds = %1814, %1844
  %1824 = phi i64 [ %1820, %1814 ], [ %1845, %1844 ]
  %1825 = add nsw i64 %1824, %1822
  %1826 = getelementptr inbounds i16, i16* %1819, i64 %1825
  %1827 = load i16, i16* %1826, align 2
  %1828 = icmp eq i16 %1807, %1827
  br i1 %1828, label %1829, label %1844

1829:                                             ; preds = %1823
  %1830 = trunc i64 %1824 to i32
  %1831 = zext i16 %1807 to i32
  %1832 = inttoptr i64 %2125 to i8*
  %1833 = getelementptr inbounds i8, i8* %1804, i64 12
  %1834 = bitcast i8* %1833 to i32*
  %1835 = load i32, i32* %1834, align 4
  %1836 = sext i32 %1835 to i64
  %1837 = getelementptr inbounds i8, i8* %1832, i64 %1836
  %1838 = bitcast i8* %1837 to i32*
  %1839 = load i32, i32* %1838, align 4
  %1840 = and i32 %1839, 63
  %1841 = zext i32 %1840 to i64
  %1842 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1841
  %1843 = load i8*, i8** %1842, align 8
  br label %113

1844:                                             ; preds = %1823
  %1845 = add i64 %1824, %1821
  %1846 = trunc i64 %1845 to i32
  %1847 = add i32 %1810, %1846
  %1848 = icmp ugt i32 %1847, %1812
  br i1 %1848, label %1849, label %1823

1849:                                             ; preds = %1844
  %1850 = trunc i64 %1845 to i32
  %1851 = zext i16 %1827 to i32
  br label %1852

1852:                                             ; preds = %1849, %1803
  %1853 = phi i32 [ %1851, %1849 ], [ %2128, %1803 ]
  %1854 = phi i32 [ %1850, %1849 ], [ %2129, %1803 ]
  %1855 = inttoptr i64 %2125 to i8*
  %1856 = getelementptr inbounds i8, i8* %1804, i64 16
  %1857 = bitcast i8* %1856 to i32*
  %1858 = load i32, i32* %1857, align 4
  %1859 = sext i32 %1858 to i64
  %1860 = getelementptr inbounds i8, i8* %1855, i64 %1859
  %1861 = bitcast i8* %1860 to i32*
  %1862 = load i32, i32* %1861, align 4
  %1863 = and i32 %1862, 63
  %1864 = zext i32 %1863 to i64
  %1865 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1864
  %1866 = load i8*, i8** %1865, align 8
  br label %113

1867:                                             ; preds = %2119
  %1868 = ashr i32 %2126, 8
  %1869 = inttoptr i64 %2124 to i8*
  %1870 = getelementptr inbounds i8, i8* %1869, i64 8
  %1871 = add nsw i32 %2129, %1868
  %1872 = trunc i64 %2122 to i32
  %1873 = icmp ult i32 %1871, %1872
  br i1 %1873, label %1874, label %1921

1874:                                             ; preds = %1867
  %1875 = getelementptr inbounds i8, i8* %1869, i64 4
  %1876 = bitcast i8* %1875 to i16*
  %1877 = load i16, i16* %1876, align 2
  %1878 = inttoptr i64 %2123 to i16*
  %1879 = sext i32 %2129 to i64
  %1880 = sext i16 %1877 to i64
  br label %1881

1881:                                             ; preds = %1874, %1913
  %1882 = phi i64 [ %1879, %1874 ], [ %1914, %1913 ]
  %1883 = phi i32 [ %1871, %1874 ], [ %1916, %1913 ]
  %1884 = sext i32 %1883 to i64
  %1885 = getelementptr inbounds i16, i16* %1878, i64 %1884
  %1886 = load i16, i16* %1885, align 2
  %1887 = zext i16 %1886 to i32
  %1888 = lshr i32 %1887, 3
  %1889 = and i32 %1888, 15
  %1890 = zext i32 %1889 to i64
  %1891 = getelementptr inbounds i8, i8* %1870, i64 %1890
  %1892 = load i8, i8* %1891, align 1
  %1893 = zext i8 %1892 to i32
  %1894 = and i32 %1887, 7
  %1895 = shl i32 1, %1894
  %1896 = and i32 %1895, %1893
  %1897 = icmp eq i32 %1896, 0
  br i1 %1897, label %1913, label %1898

1898:                                             ; preds = %1881
  %1899 = zext i16 %1886 to i32
  %1900 = trunc i64 %1882 to i32
  %1901 = inttoptr i64 %2125 to i8*
  %1902 = getelementptr inbounds i8, i8* %1869, i64 24
  %1903 = bitcast i8* %1902 to i32*
  %1904 = load i32, i32* %1903, align 4
  %1905 = sext i32 %1904 to i64
  %1906 = getelementptr inbounds i8, i8* %1901, i64 %1905
  %1907 = bitcast i8* %1906 to i32*
  %1908 = load i32, i32* %1907, align 4
  %1909 = and i32 %1908, 63
  %1910 = zext i32 %1909 to i64
  %1911 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1910
  %1912 = load i8*, i8** %1911, align 8
  br label %113

1913:                                             ; preds = %1881
  %1914 = add i64 %1882, %1880
  %1915 = trunc i64 %1914 to i32
  %1916 = add i32 %1868, %1915
  %1917 = icmp ult i32 %1916, %1872
  br i1 %1917, label %1881, label %1918

1918:                                             ; preds = %1913
  %1919 = zext i16 %1886 to i32
  %1920 = trunc i64 %1914 to i32
  br label %1921

1921:                                             ; preds = %1918, %1867
  %1922 = phi i32 [ %1919, %1918 ], [ %2128, %1867 ]
  %1923 = phi i32 [ %1920, %1918 ], [ %2129, %1867 ]
  %1924 = inttoptr i64 %2125 to i8*
  %1925 = getelementptr inbounds i8, i8* %1869, i64 28
  %1926 = bitcast i8* %1925 to i32*
  %1927 = load i32, i32* %1926, align 4
  %1928 = sext i32 %1927 to i64
  %1929 = getelementptr inbounds i8, i8* %1924, i64 %1928
  %1930 = bitcast i8* %1929 to i32*
  %1931 = load i32, i32* %1930, align 4
  %1932 = and i32 %1931, 63
  %1933 = zext i32 %1932 to i64
  %1934 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1933
  %1935 = load i8*, i8** %1934, align 8
  br label %113

1936:                                             ; preds = %2119
  %1937 = ashr i32 %2126, 8
  %1938 = inttoptr i64 %2124 to i8*
  %1939 = getelementptr inbounds i8, i8* %1938, i64 6
  %1940 = bitcast i8* %1939 to i16*
  %1941 = load i16, i16* %1940, align 2
  %1942 = getelementptr inbounds i8, i8* %1938, i64 8
  %1943 = add nsw i32 %2129, %1937
  %1944 = trunc i64 %2122 to i32
  %1945 = icmp ult i32 %1943, %1944
  br i1 %1945, label %1946, label %2010

1946:                                             ; preds = %1936
  %1947 = getelementptr inbounds i8, i8* %1938, i64 4
  %1948 = bitcast i8* %1947 to i16*
  %1949 = load i16, i16* %1948, align 2
  %1950 = inttoptr i64 %2123 to i16*
  %1951 = sext i32 %2129 to i64
  %1952 = sext i16 %1949 to i64
  br label %1953

1953:                                             ; preds = %1946, %2002
  %1954 = phi i64 [ %1951, %1946 ], [ %2003, %2002 ]
  %1955 = phi i32 [ %1943, %1946 ], [ %2005, %2002 ]
  %1956 = sext i32 %1955 to i64
  %1957 = getelementptr inbounds i16, i16* %1950, i64 %1956
  %1958 = load i16, i16* %1957, align 2
  %1959 = zext i16 %1958 to i32
  %1960 = icmp ult i16 %1941, %1958
  br i1 %1960, label %1961, label %1976

1961:                                             ; preds = %1953
  %1962 = zext i16 %1958 to i32
  %1963 = trunc i64 %1954 to i32
  %1964 = inttoptr i64 %2125 to i8*
  %1965 = getelementptr inbounds i8, i8* %1938, i64 24
  %1966 = bitcast i8* %1965 to i32*
  %1967 = load i32, i32* %1966, align 4
  %1968 = sext i32 %1967 to i64
  %1969 = getelementptr inbounds i8, i8* %1964, i64 %1968
  %1970 = bitcast i8* %1969 to i32*
  %1971 = load i32, i32* %1970, align 4
  %1972 = and i32 %1971, 63
  %1973 = zext i32 %1972 to i64
  %1974 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1973
  %1975 = load i8*, i8** %1974, align 8
  br label %113

1976:                                             ; preds = %1953
  %1977 = lshr i32 %1959, 3
  %1978 = and i32 %1977, 15
  %1979 = zext i32 %1978 to i64
  %1980 = getelementptr inbounds i8, i8* %1942, i64 %1979
  %1981 = load i8, i8* %1980, align 1
  %1982 = zext i8 %1981 to i32
  %1983 = and i32 %1959, 7
  %1984 = shl i32 1, %1983
  %1985 = and i32 %1984, %1982
  %1986 = icmp eq i32 %1985, 0
  br i1 %1986, label %1987, label %2002

1987:                                             ; preds = %1976
  %1988 = zext i16 %1958 to i32
  %1989 = trunc i64 %1954 to i32
  %1990 = inttoptr i64 %2125 to i8*
  %1991 = getelementptr inbounds i8, i8* %1938, i64 24
  %1992 = bitcast i8* %1991 to i32*
  %1993 = load i32, i32* %1992, align 4
  %1994 = sext i32 %1993 to i64
  %1995 = getelementptr inbounds i8, i8* %1990, i64 %1994
  %1996 = bitcast i8* %1995 to i32*
  %1997 = load i32, i32* %1996, align 4
  %1998 = and i32 %1997, 63
  %1999 = zext i32 %1998 to i64
  %2000 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %1999
  %2001 = load i8*, i8** %2000, align 8
  br label %113

2002:                                             ; preds = %1976
  %2003 = add i64 %1954, %1952
  %2004 = trunc i64 %2003 to i32
  %2005 = add i32 %1937, %2004
  %2006 = icmp ult i32 %2005, %1944
  br i1 %2006, label %1953, label %2007

2007:                                             ; preds = %2002
  %2008 = zext i16 %1958 to i32
  %2009 = trunc i64 %2003 to i32
  br label %2010

2010:                                             ; preds = %2007, %1936
  %2011 = phi i32 [ %2008, %2007 ], [ %2128, %1936 ]
  %2012 = phi i32 [ %2009, %2007 ], [ %2129, %1936 ]
  %2013 = inttoptr i64 %2125 to i8*
  %2014 = getelementptr inbounds i8, i8* %1938, i64 28
  %2015 = bitcast i8* %2014 to i32*
  %2016 = load i32, i32* %2015, align 4
  %2017 = sext i32 %2016 to i64
  %2018 = getelementptr inbounds i8, i8* %2013, i64 %2017
  %2019 = bitcast i8* %2018 to i32*
  %2020 = load i32, i32* %2019, align 4
  %2021 = and i32 %2020, 63
  %2022 = zext i32 %2021 to i64
  %2023 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %2022
  %2024 = load i8*, i8** %2023, align 8
  br label %113

2025:                                             ; preds = %2119
  %2026 = ashr i32 %2126, 8
  %2027 = inttoptr i64 %2124 to i8*
  %2028 = getelementptr inbounds i8, i8* %2027, i64 8
  %2029 = bitcast i8* %2028 to i16*
  %2030 = load i16, i16* %2029, align 2
  %2031 = getelementptr inbounds i8, i8* %2027, i64 10
  %2032 = bitcast i8* %2031 to i16*
  %2033 = load i16, i16* %2032, align 2
  %2034 = add nsw i32 %2129, %2026
  %2035 = trunc i64 %2122 to i32
  %2036 = icmp ult i32 %2034, %2035
  br i1 %2036, label %2037, label %2091

2037:                                             ; preds = %2025
  %2038 = getelementptr inbounds i8, i8* %2027, i64 4
  %2039 = bitcast i8* %2038 to i32*
  %2040 = load i32, i32* %2039, align 4
  %2041 = inttoptr i64 %2123 to i16*
  %2042 = sext i32 %2129 to i64
  %2043 = sext i32 %2040 to i64
  br label %2044

2044:                                             ; preds = %2037, %2083
  %2045 = phi i64 [ %2042, %2037 ], [ %2084, %2083 ]
  %2046 = phi i32 [ %2034, %2037 ], [ %2086, %2083 ]
  %2047 = sext i32 %2046 to i64
  %2048 = getelementptr inbounds i16, i16* %2041, i64 %2047
  %2049 = load i16, i16* %2048, align 2
  %2050 = icmp eq i16 %2030, %2049
  br i1 %2050, label %2051, label %2066

2051:                                             ; preds = %2044
  %2052 = trunc i64 %2045 to i32
  %2053 = zext i16 %2030 to i32
  %2054 = inttoptr i64 %2125 to i8*
  %2055 = getelementptr inbounds i8, i8* %2027, i64 12
  %2056 = bitcast i8* %2055 to i32*
  %2057 = load i32, i32* %2056, align 4
  %2058 = sext i32 %2057 to i64
  %2059 = getelementptr inbounds i8, i8* %2054, i64 %2058
  %2060 = bitcast i8* %2059 to i32*
  %2061 = load i32, i32* %2060, align 4
  %2062 = and i32 %2061, 63
  %2063 = zext i32 %2062 to i64
  %2064 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %2063
  %2065 = load i8*, i8** %2064, align 8
  br label %113

2066:                                             ; preds = %2044
  %2067 = icmp eq i16 %2033, %2049
  br i1 %2067, label %2068, label %2083

2068:                                             ; preds = %2066
  %2069 = trunc i64 %2045 to i32
  %2070 = zext i16 %2033 to i32
  %2071 = inttoptr i64 %2125 to i8*
  %2072 = getelementptr inbounds i8, i8* %2027, i64 12
  %2073 = bitcast i8* %2072 to i32*
  %2074 = load i32, i32* %2073, align 4
  %2075 = sext i32 %2074 to i64
  %2076 = getelementptr inbounds i8, i8* %2071, i64 %2075
  %2077 = bitcast i8* %2076 to i32*
  %2078 = load i32, i32* %2077, align 4
  %2079 = and i32 %2078, 63
  %2080 = zext i32 %2079 to i64
  %2081 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %2080
  %2082 = load i8*, i8** %2081, align 8
  br label %113

2083:                                             ; preds = %2066
  %2084 = add i64 %2045, %2043
  %2085 = trunc i64 %2084 to i32
  %2086 = add i32 %2026, %2085
  %2087 = icmp ult i32 %2086, %2035
  br i1 %2087, label %2044, label %2088

2088:                                             ; preds = %2083
  %2089 = trunc i64 %2084 to i32
  %2090 = zext i16 %2049 to i32
  br label %2091

2091:                                             ; preds = %2088, %2025
  %2092 = phi i32 [ %2090, %2088 ], [ %2128, %2025 ]
  %2093 = phi i32 [ %2089, %2088 ], [ %2129, %2025 ]
  %2094 = inttoptr i64 %2125 to i8*
  %2095 = getelementptr inbounds i8, i8* %2027, i64 16
  %2096 = bitcast i8* %2095 to i32*
  %2097 = load i32, i32* %2096, align 4
  %2098 = sext i32 %2097 to i64
  %2099 = getelementptr inbounds i8, i8* %2094, i64 %2098
  %2100 = bitcast i8* %2099 to i32*
  %2101 = load i32, i32* %2100, align 4
  %2102 = and i32 %2101, 63
  %2103 = zext i32 %2102 to i64
  %2104 = getelementptr inbounds [64 x i8*], [64 x i8*]* @_ZZN2v88internal12_GLOBAL__N_18RawMatchItEENS0_19IrregexpInterpreter6ResultEPNS0_7IsolateENS0_9ByteArrayENS0_6StringENS0_6VectorIKT_EEPiiiijNS0_6RegExp10CallOriginEjE14dispatch_table, i64 0, i64 %2103
  %2105 = load i8*, i8** %2104, align 8
  br label %113

2106:                                             ; preds = %514, %513, %512, %508, %505, %452, %184, %183, %153, %152, %111, %110, %488, %311
  %2107 = phi i32 [ 0, %488 ], [ %312, %311 ], [ -1, %110 ], [ -1, %111 ], [ -1, %152 ], [ -1, %153 ], [ -1, %183 ], [ -1, %184 ], [ %453, %452 ], [ 1, %505 ], [ 1, %508 ], [ 1, %512 ], [ 1, %513 ], [ 1, %514 ]
  %2108 = load i32*, i32** %84, align 8
  %2109 = bitcast %"struct.std::__1::aligned_storage<256, 4>::type"* %46 to i32*
  %2110 = icmp eq i32* %2108, %2109
  br i1 %2110, label %2113, label %2111

2111:                                             ; preds = %2106
  %2112 = bitcast i32* %2108 to i8*
  call void @free(i8* %2112) #8
  br label %2113

2113:                                             ; preds = %2106, %2111
  %2114 = load i32*, i32** %59, align 8
  %2115 = icmp eq i32* %2114, %30
  br i1 %2115, label %2118, label %2116

2116:                                             ; preds = %2113
  %2117 = bitcast i32* %2114 to i8*
  call void @free(i8* %2117) #8
  br label %2118

2118:                                             ; preds = %2113, %2116
  ret i32 %2107

2119:                                             ; preds = %113, %38
  %2120 = phi i64 [ %1, %38 ], [ %114, %113 ]
  %2121 = phi i64 [ %2, %38 ], [ %115, %113 ]
  %2122 = phi i64 [ %4, %38 ], [ %116, %113 ]
  %2123 = phi i64 [ %19, %38 ], [ %117, %113 ]
  %2124 = phi i64 [ %20, %38 ], [ %125, %113 ]
  %2125 = phi i64 [ %20, %38 ], [ %119, %113 ]
  %2126 = phi i32 [ %54, %38 ], [ %120, %113 ]
  %2127 = phi i32 [ 0, %38 ], [ %121, %113 ]
  %2128 = phi i32 [ %9, %38 ], [ %122, %113 ]
  %2129 = phi i32 [ %8, %38 ], [ %123, %113 ]
  %2130 = phi i8* [ %58, %38 ], [ %124, %113 ]
  indirectbr i8* %2130, [label %86, label %87, label %126, label %155, label %220, label %237, label %251, label %269, label %186, label %202, label %296, label %308, label %472, label %488, label %492, label %515, label %526, label %584, label %616, label %632, label %672, label %695, label %749, label %786, label %809, label %831, label %854, label %876, label %903, label %928, label %955, label %980, label %1011, label %1041, label %1071, label %1101, label %1123, label %1258, label %1419, label %1365, label %1312, label %1526, label %1473, label %1227, label %1145, label %1173, label %1201, label %1579, label %1602, label %556, label %540, label %1625, label %1646, label %1867, label %1733, label %1672, label %1803, label %2025, label %1936]
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal19IrregexpInterpreter18MatchForCallFromJsEmimmPiimNS0_6RegExp10CallOriginEPNS0_7IsolateEm(i64, i32, i64, i64, i32*, i32, i64, i32, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #0 align 2 {
  %11 = alloca %"class.v8::internal::PerIsolateAssertScope", align 8
  %12 = alloca %"class.v8::internal::JSRegExp", align 8
  %13 = bitcast %"class.v8::internal::PerIsolateAssertScope"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"* nonnull %11, %"class.v8::internal::Isolate"* %8) #8
  %14 = bitcast %"class.v8::internal::JSRegExp"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.v8::internal::JSRegExp", %"class.v8::internal::JSRegExp"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %9, i64* %15, align 8
  %16 = call zeroext i1 @_ZN2v88internal8JSRegExp15MarkedForTierUpEv(%"class.v8::internal::JSRegExp"* nonnull %12) #8
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  %18 = load i64, i64* %15, align 8
  %19 = call i32 @_ZN2v88internal19IrregexpInterpreter5MatchEPNS0_7IsolateENS0_8JSRegExpENS0_6StringEPiiiNS0_6RegExp10CallOriginE(%"class.v8::internal::Isolate"* %8, i64 %18, i64 %0, i32* %4, i32 %5, i32 %1, i32 %7)
  br label %20

20:                                               ; preds = %10, %17
  %21 = phi i32 [ %19, %17 ], [ -2, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  ret i32 %21
}

declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"*, %"class.v8::internal::Isolate"*) unnamed_addr #1

declare zeroext i1 @_ZN2v88internal8JSRegExp15MarkedForTierUpEv(%"class.v8::internal::JSRegExp"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal19IrregexpInterpreter23MatchForCallFromRuntimeEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEPiii(%"class.v8::internal::Isolate"*, i64*, i64*, i32*, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = load i64, i64* %1, align 8
  %8 = load i64, i64* %2, align 8
  %9 = tail call i32 @_ZN2v88internal19IrregexpInterpreter5MatchEPNS0_7IsolateENS0_8JSRegExpENS0_6StringEPiiiNS0_6RegExp10CallOriginE(%"class.v8::internal::Isolate"* %0, i64 %7, i64 %8, i32* %3, i32 %4, i32 %5, i32 0)
  ret i32 %9
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN2v84base11SmallVectorIiLm64EE4GrowEm(%"class.v8::base::SmallVector"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::base::SmallVector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 2
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %7
  %14 = ashr exact i64 %13, 1
  %15 = icmp ugt i64 %14, %1
  %16 = select i1 %15, i64 %14, i64 %1
  %17 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %16) #8
  %18 = shl i64 %17, 2
  %19 = tail call noalias i8* @malloc(i64 %18) #8
  %20 = bitcast i8* %19 to i32*
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0)) #9
  unreachable

23:                                               ; preds = %2
  %24 = bitcast %"class.v8::base::SmallVector"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 %25, i64 %8, i1 false) #8
  %26 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 3, i32 0, i64 0
  %27 = icmp eq i8* %25, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  tail call void @free(i8* %25) #8
  br label %29

29:                                               ; preds = %23, %28
  store i8* %19, i8** %24, align 8
  %30 = getelementptr inbounds i32, i32* %20, i64 %9
  store i32* %30, i32** %3, align 8
  %31 = getelementptr inbounds i32, i32* %20, i64 %17
  store i32* %31, i32** %10, align 8
  ret i32* %30
}

declare i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN2v84base11SmallVectorIiLm64EE4GrowEv(%"class.v8::base::SmallVector"*) local_unnamed_addr #5 comdat align 2 {
  %2 = tail call i32* @_ZN2v84base11SmallVectorIiLm64EE4GrowEm(%"class.v8::base::SmallVector"* %0, i64 0)
  ret i32* %2
}

declare i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v88internal15StackLimitCheck15JsHasOverflowedEm(%"class.v8::internal::StackLimitCheck"*, i64) local_unnamed_addr #1

declare i64 @_ZN2v88internal10StackGuard16HandleInterruptsEv(%"class.v8::internal::StackGuard"*) local_unnamed_addr #1

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #1

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #1

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #1

declare i32 @_ZN2v88internal20RegExpMacroAssembler29CaseInsensitiveCompareUnicodeEmmmPNS0_7IsolateE(i64, i64, i64, %"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare i32 @_ZN2v88internal20RegExpMacroAssembler32CaseInsensitiveCompareNonUnicodeEmmmPNS0_7IsolateE(i64, i64, i64, %"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
