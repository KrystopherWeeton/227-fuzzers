; ModuleID = '../../components/profile_metrics/counts.cc'
source_filename = "../../components/profile_metrics/counts.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.profile_metrics::Counts" = type { i32, i32, i32, i32, i32, i32 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.1", [4 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }

@.str = private unnamed_addr constant [25 x i8] c"Profile.NumberOfProfiles\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"Profile.NumberOfManagedProfiles\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"Profile.PercentageOfManagedProfiles\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Profile.NumberOfSignedInProfiles\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"Profile.NumberOfActiveProfiles\00", align 1
@.str.5 = private unnamed_addr constant [31 x i8] c"Profile.NumberOfUnusedProfiles\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"Profile.ColorsUniqueness\00", align 1
@_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_3.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_4.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_5.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsE(%"struct.profile_metrics::Counts"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %3 = inttoptr i64 %2 to %"class.base::HistogramBase"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #2
  %7 = ptrtoint %"class.base::HistogramBase"* %6 to i64
  store atomic i64 %7, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.base::HistogramBase"* [ %3, %1 ], [ %6, %5 ]
  %10 = getelementptr inbounds %"struct.profile_metrics::Counts", %"struct.profile_metrics::Counts"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %"class.base::HistogramBase"* %9 to void (%"class.base::HistogramBase"*, i32)***
  %13 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, i64 6
  %15 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %14, align 8
  tail call void %15(%"class.base::HistogramBase"* %9, i32 %11) #2
  %16 = load i32, i32* %10, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %105

18:                                               ; preds = %8
  %19 = load atomic i64, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %20 = inttoptr i64 %19 to %"class.base::HistogramBase"*
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #2
  %24 = ptrtoint %"class.base::HistogramBase"* %23 to i64
  store atomic i64 %24, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %25

25:                                               ; preds = %18, %22
  %26 = phi %"class.base::HistogramBase"* [ %20, %18 ], [ %23, %22 ]
  %27 = getelementptr inbounds %"struct.profile_metrics::Counts", %"struct.profile_metrics::Counts"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = bitcast %"class.base::HistogramBase"* %26 to void (%"class.base::HistogramBase"*, i32)***
  %30 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %30, i64 6
  %32 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %31, align 8
  tail call void %32(%"class.base::HistogramBase"* %26, i32 %28) #2
  %33 = load atomic i64, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %34 = inttoptr i64 %33 to %"class.base::HistogramBase"*
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %25
  %37 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #2
  %38 = ptrtoint %"class.base::HistogramBase"* %37 to i64
  store atomic i64 %38, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %39

39:                                               ; preds = %25, %36
  %40 = phi %"class.base::HistogramBase"* [ %34, %25 ], [ %37, %36 ]
  %41 = load i32, i32* %27, align 4
  %42 = mul nsw i32 %41, 100
  %43 = load i32, i32* %10, align 4
  %44 = sdiv i32 %42, %43
  %45 = bitcast %"class.base::HistogramBase"* %40 to void (%"class.base::HistogramBase"*, i32)***
  %46 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %46, i64 6
  %48 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %47, align 8
  tail call void %48(%"class.base::HistogramBase"* %40, i32 %44) #2
  %49 = load atomic i64, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %50 = inttoptr i64 %49 to %"class.base::HistogramBase"*
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %39
  %53 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #2
  %54 = ptrtoint %"class.base::HistogramBase"* %53 to i64
  store atomic i64 %54, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %55

55:                                               ; preds = %39, %52
  %56 = phi %"class.base::HistogramBase"* [ %50, %39 ], [ %53, %52 ]
  %57 = getelementptr inbounds %"struct.profile_metrics::Counts", %"struct.profile_metrics::Counts"* %0, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = bitcast %"class.base::HistogramBase"* %56 to void (%"class.base::HistogramBase"*, i32)***
  %60 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %60, i64 6
  %62 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %61, align 8
  tail call void %62(%"class.base::HistogramBase"* %56, i32 %58) #2
  %63 = load atomic i64, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_3.0.0.0.0.0 acquire, align 8
  %64 = inttoptr i64 %63 to %"class.base::HistogramBase"*
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %55
  %67 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #2
  %68 = ptrtoint %"class.base::HistogramBase"* %67 to i64
  store atomic i64 %68, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_3.0.0.0.0.0 release, align 8
  br label %69

69:                                               ; preds = %55, %66
  %70 = phi %"class.base::HistogramBase"* [ %64, %55 ], [ %67, %66 ]
  %71 = getelementptr inbounds %"struct.profile_metrics::Counts", %"struct.profile_metrics::Counts"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 4
  %73 = bitcast %"class.base::HistogramBase"* %70 to void (%"class.base::HistogramBase"*, i32)***
  %74 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %74, i64 6
  %76 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %75, align 8
  tail call void %76(%"class.base::HistogramBase"* %70, i32 %72) #2
  %77 = load atomic i64, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_4.0.0.0.0.0 acquire, align 8
  %78 = inttoptr i64 %77 to %"class.base::HistogramBase"*
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %69
  %81 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #2
  %82 = ptrtoint %"class.base::HistogramBase"* %81 to i64
  store atomic i64 %82, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_4.0.0.0.0.0 release, align 8
  br label %83

83:                                               ; preds = %69, %80
  %84 = phi %"class.base::HistogramBase"* [ %78, %69 ], [ %81, %80 ]
  %85 = getelementptr inbounds %"struct.profile_metrics::Counts", %"struct.profile_metrics::Counts"* %0, i64 0, i32 4
  %86 = load i32, i32* %85, align 4
  %87 = bitcast %"class.base::HistogramBase"* %84 to void (%"class.base::HistogramBase"*, i32)***
  %88 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %88, i64 6
  %90 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %89, align 8
  tail call void %90(%"class.base::HistogramBase"* %84, i32 %86) #2
  %91 = load atomic i64, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_5.0.0.0.0.0 acquire, align 8
  %92 = inttoptr i64 %91 to %"class.base::HistogramBase"*
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %83
  %95 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #2
  %96 = ptrtoint %"class.base::HistogramBase"* %95 to i64
  store atomic i64 %96, i64* @_ZZN15profile_metrics23LogProfileMetricsCountsERKNS_6CountsEE24atomic_histogram_pointer_5.0.0.0.0.0 release, align 8
  br label %97

97:                                               ; preds = %83, %94
  %98 = phi %"class.base::HistogramBase"* [ %92, %83 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"struct.profile_metrics::Counts", %"struct.profile_metrics::Counts"* %0, i64 0, i32 5
  %100 = load i32, i32* %99, align 4
  %101 = bitcast %"class.base::HistogramBase"* %98 to void (%"class.base::HistogramBase"*, i32)***
  %102 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %102, i64 6
  %104 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %103, align 8
  tail call void %104(%"class.base::HistogramBase"* %98, i32 %100) #2
  br label %105

105:                                              ; preds = %97, %8
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
