; ModuleID = '../../third_party/webrtc/video/encoder_bitrate_adjuster.cc'
source_filename = "../../third_party/webrtc/video/encoder_bitrate_adjuster.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::EncoderBitrateAdjuster" = type <{ i8, [7 x i8], %"struct.webrtc::VideoEncoder::RateControlParameters", [5 x %"class.absl::InlinedVector"], i64, [5 x [4 x %"class.std::__1::unique_ptr"]], [5 x i32], [4 x i8] }>
%"struct.webrtc::VideoEncoder::RateControlParameters" = type { i32 (...)**, %"class.webrtc::VideoBitrateAllocation", %"class.webrtc::VideoBitrateAllocation", double, %"class.webrtc::DataRate" }
%"class.webrtc::VideoBitrateAllocation" = type <{ i32, [5 x [4 x %"class.absl::optional"]], i8, [3 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.webrtc::DataRate" = type { %"class.webrtc::rtc_units_impl::RelativeUnit" }
%"class.webrtc::rtc_units_impl::RelativeUnit" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.0" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Allocated" }
%"struct.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Allocated" = type { i8*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::EncoderOvershootDetector"* }
%"class.webrtc::EncoderOvershootDetector" = type { i64, i64, %"class.std::__1::deque", double, double, %"class.webrtc::DataRate", double, i64, i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.6" }
%"struct.std::__1::__split_buffer" = type { %"struct.webrtc::EncoderOvershootDetector::BitrateUpdate"**, %"struct.webrtc::EncoderOvershootDetector::BitrateUpdate"**, %"struct.webrtc::EncoderOvershootDetector::BitrateUpdate"**, %"class.std::__1::__compressed_pair.1" }
%"struct.webrtc::EncoderOvershootDetector::BitrateUpdate" = type { double, double, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.webrtc::EncoderOvershootDetector::BitrateUpdate"** }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.webrtc::VideoCodec" = type { i32, i16, i16, i32, i32, i32, i32, i8, i32, i8, [3 x %"struct.webrtc::SpatialLayer"], [5 x %"struct.webrtc::SpatialLayer"], i32, i8, %"class.absl::optional.12", %"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds", i8, %"union.webrtc::VideoCodecUnion", %"class.std::__1::basic_string" }
%"struct.webrtc::SpatialLayer" = type { i16, i16, float, i8, i32, i32, i32, i32, i8 }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { i32 }
%"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds" = type { i64, i16 }
%"union.webrtc::VideoCodecUnion" = type { %"struct.webrtc::VideoCodecVP9" }
%"struct.webrtc::VideoCodecVP9" = type { i32, i8, i8, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.19 }
%union.anon.19 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webrtc::RateControlSettings" = type { %"struct.webrtc::CongestionWindowConfig", %"struct.webrtc::VideoRateControlConfig" }
%"struct.webrtc::CongestionWindowConfig" = type <{ %"class.absl::optional.12", %"class.absl::optional.12", %"class.absl::optional.23", i8, [7 x i8] }>
%"class.absl::optional.23" = type { %"class.absl::optional_internal::optional_data.24" }
%"class.absl::optional_internal::optional_data.24" = type { %"class.absl::optional_internal::optional_data_base.25" }
%"class.absl::optional_internal::optional_data_base.25" = type { %"class.absl::optional_internal::optional_data_dtor_base.26" }
%"class.absl::optional_internal::optional_data_dtor_base.26" = type { i8, %union.anon.27 }
%union.anon.27 = type { %"class.webrtc::DataSize" }
%"class.webrtc::DataSize" = type { %"class.webrtc::rtc_units_impl::RelativeUnit.28" }
%"class.webrtc::rtc_units_impl::RelativeUnit.28" = type { %"class.webrtc::rtc_units_impl::UnitBase.29" }
%"class.webrtc::rtc_units_impl::UnitBase.29" = type { i64 }
%"struct.webrtc::VideoRateControlConfig" = type <{ %"class.absl::optional.30", i8, [3 x i8], %"class.absl::optional.12", %"class.absl::optional.12", i8, i8, [2 x i8], double, double, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.absl::optional.30" = type { %"class.absl::optional_internal::optional_data.31" }
%"class.absl::optional_internal::optional_data.31" = type { %"class.absl::optional_internal::optional_data_base.32" }
%"class.absl::optional_internal::optional_data_base.32" = type { %"class.absl::optional_internal::optional_data_dtor_base.33" }
%"class.absl::optional_internal::optional_data_dtor_base.33" = type { i8, %union.anon.34 }
%union.anon.34 = type { double }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::(anonymous namespace)::LayerRateInfo"*, %"struct.webrtc::(anonymous namespace)::LayerRateInfo"*, %"class.std::__1::__compressed_pair.35" }
%"struct.webrtc::(anonymous namespace)::LayerRateInfo" = type { double, double, %"class.webrtc::DataRate" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.webrtc::VideoEncoder::EncoderInfo" = type { %"struct.webrtc::VideoEncoder::ScalingSettings", i32, i8, i8, %"class.std::__1::basic_string", i8, i8, i8, [5 x %"class.absl::InlinedVector"], %"class.std::__1::vector.45", i8, %"class.absl::InlinedVector.52" }
%"struct.webrtc::VideoEncoder::ScalingSettings" = type { %"class.absl::optional.40", i32 }
%"class.absl::optional.40" = type { %"class.absl::optional_internal::optional_data.41" }
%"class.absl::optional_internal::optional_data.41" = type { %"class.absl::optional_internal::optional_data_base.42" }
%"class.absl::optional_internal::optional_data_base.42" = type { %"class.absl::optional_internal::optional_data_dtor_base.43" }
%"class.absl::optional_internal::optional_data_dtor_base.43" = type { i8, %union.anon.44 }
%union.anon.44 = type { %"struct.webrtc::VideoEncoder::QpThresholds" }
%"struct.webrtc::VideoEncoder::QpThresholds" = type { i32, i32 }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"class.std::__1::__compressed_pair.47" }
%"struct.webrtc::VideoEncoder::ResolutionBitrateLimits" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* }
%"class.absl::InlinedVector.52" = type { %"class.absl::inlined_vector_internal::Storage.53" }
%"class.absl::inlined_vector_internal::Storage.53" = type { %"class.absl::container_internal::CompressedTuple.54", %"union.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Data" }
%"class.absl::container_internal::CompressedTuple.54" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.55" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.55" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"union.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Allocated", [8 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Allocated" = type { i32*, i64 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE6AssignINS0_20IteratorValueAdapterIS4_PKhEEEEvT_m = comdat any

@_ZN6webrtc22EncoderBitrateAdjuster13kWindowSizeMsE = hidden local_unnamed_addr constant i64 3000, align 8
@_ZN6webrtc22EncoderBitrateAdjuster27kMinFramesSinceLayoutChangeE = hidden local_unnamed_addr constant i64 30, align 8
@_ZN6webrtc22EncoderBitrateAdjuster25kDefaultUtilizationFactorE = hidden local_unnamed_addr constant double 1.200000e+00, align 8
@.str = private unnamed_addr constant [59 x i8] c"../../third_party/webrtc/video/encoder_bitrate_adjuster.cc\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"Utilization factors for spatial index \00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c": link = \00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c", media = \00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c", wanted overshoot = \00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c" bps, available headroom = \00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c" bps, total utilization factor = \00", align 1
@.str.7 = private unnamed_addr constant [98 x i8] c"Encoder config has temporal layer with non-zero bitrate allocation but zero framerate allocation.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6webrtc22EncoderBitrateAdjusterC1ERKNS_10VideoCodecE = hidden unnamed_addr alias void (%"class.webrtc::EncoderBitrateAdjuster"*, %"class.webrtc::VideoCodec"*), void (%"class.webrtc::EncoderBitrateAdjuster"*, %"class.webrtc::VideoCodec"*)* @_ZN6webrtc22EncoderBitrateAdjusterC2ERKNS_10VideoCodecE
@_ZN6webrtc22EncoderBitrateAdjusterD1Ev = hidden unnamed_addr alias void (%"class.webrtc::EncoderBitrateAdjuster"*), void (%"class.webrtc::EncoderBitrateAdjuster"*)* @_ZN6webrtc22EncoderBitrateAdjusterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22EncoderBitrateAdjusterC2ERKNS_10VideoCodecE(%"class.webrtc::EncoderBitrateAdjuster"*, %"class.webrtc::VideoCodec"* dereferenceable(376)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.webrtc::RateControlSettings", align 8
  %4 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.webrtc::RateControlSettings", %"class.webrtc::RateControlSettings"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %5) #9
  call void @_ZN6webrtc19RateControlSettings20ParseFromFieldTrialsEv(%"class.webrtc::RateControlSettings"* nonnull sret %3) #9
  %6 = call zeroext i1 @_ZNK6webrtc19RateControlSettings36BitrateAdjusterCanUseNetworkHeadroomEv(%"class.webrtc::RateControlSettings"* nonnull %3) #9
  call void @_ZN6webrtc19RateControlSettingsD1Ev(%"class.webrtc::RateControlSettings"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %5) #9
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %4, align 8
  %8 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 2
  call void @_ZN6webrtc12VideoEncoder21RateControlParametersC1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* %8) #9
  %9 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 0
  %16 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 188, i1 false)
  %17 = load i32, i32* %15, align 8
  %18 = icmp eq i32 %17, 2
  br i1 %18, label %25, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 9
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %74, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 5
  br label %53

25:                                               ; preds = %2
  %26 = call dereferenceable(20) %"struct.webrtc::VideoCodecVP9"* @_ZNK6webrtc10VideoCodec3VP9Ev(%"class.webrtc::VideoCodec"* %1) #9
  %27 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %26, i64 0, i32 7
  %28 = load i8, i8* %27, align 2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %74, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 5
  br label %32

32:                                               ; preds = %30, %46
  %33 = phi i64 [ 0, %30 ], [ %47, %46 ]
  %34 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 %33, i32 8
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = load i32, i32* %31, align 8
  %39 = mul i32 %38, 1000
  %40 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 11, i64 %33, i32 6
  %41 = load i32, i32* %40, align 4
  %42 = mul i32 %41, 1000
  %43 = icmp ult i32 %39, %42
  %44 = select i1 %43, i32 %42, i32 %39
  %45 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 6, i64 %33
  store i32 %44, i32* %45, align 4
  br label %46

46:                                               ; preds = %32, %37
  %47 = add nuw nsw i64 %33, 1
  %48 = call dereferenceable(20) %"struct.webrtc::VideoCodecVP9"* @_ZNK6webrtc10VideoCodec3VP9Ev(%"class.webrtc::VideoCodec"* %1) #9
  %49 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %48, i64 0, i32 7
  %50 = load i8, i8* %49, align 2
  %51 = zext i8 %50 to i64
  %52 = icmp ult i64 %47, %51
  br i1 %52, label %32, label %74

53:                                               ; preds = %23, %69
  %54 = phi i8 [ %21, %23 ], [ %70, %69 ]
  %55 = phi i64 [ 0, %23 ], [ %71, %69 ]
  %56 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %55, i32 8
  %57 = load i8, i8* %56, align 4, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  %60 = load i32, i32* %24, align 8
  %61 = mul i32 %60, 1000
  %62 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %55, i32 6
  %63 = load i32, i32* %62, align 4
  %64 = mul i32 %63, 1000
  %65 = icmp ult i32 %61, %64
  %66 = select i1 %65, i32 %64, i32 %61
  %67 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 6, i64 %55
  store i32 %66, i32* %67, align 4
  %68 = load i8, i8* %20, align 8
  br label %69

69:                                               ; preds = %53, %59
  %70 = phi i8 [ %54, %53 ], [ %68, %59 ]
  %71 = add nuw nsw i64 %55, 1
  %72 = zext i8 %70 to i64
  %73 = icmp ult i64 %71, %72
  br i1 %73, label %53, label %74

74:                                               ; preds = %69, %46, %25, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6webrtc19RateControlSettings20ParseFromFieldTrialsEv(%"class.webrtc::RateControlSettings"* sret) local_unnamed_addr #2

declare zeroext i1 @_ZNK6webrtc19RateControlSettings36BitrateAdjusterCanUseNetworkHeadroomEv(%"class.webrtc::RateControlSettings"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc19RateControlSettingsD1Ev(%"class.webrtc::RateControlSettings"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6webrtc12VideoEncoder21RateControlParametersC1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(20) %"struct.webrtc::VideoCodecVP9"* @_ZNK6webrtc10VideoCodec3VP9Ev(%"class.webrtc::VideoCodec"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22EncoderBitrateAdjusterD2Ev(%"class.webrtc::EncoderBitrateAdjuster"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 5, i64 0, i64 0
  %3 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 5, i64 0, i64 20
  br label %4

4:                                                ; preds = %12, %1
  %5 = phi %"class.std::__1::unique_ptr"* [ %3, %1 ], [ %6, %12 ]
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 -1
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %7, align 8
  store %"class.webrtc::EncoderOvershootDetector"* null, %"class.webrtc::EncoderOvershootDetector"** %7, align 8
  %9 = icmp eq %"class.webrtc::EncoderOvershootDetector"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %4
  tail call void @_ZN6webrtc24EncoderOvershootDetectorD1Ev(%"class.webrtc::EncoderOvershootDetector"* nonnull %8) #9
  %11 = bitcast %"class.webrtc::EncoderOvershootDetector"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %4, %10
  %13 = icmp eq %"class.std::__1::unique_ptr"* %6, %2
  br i1 %13, label %14, label %4

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 4, i32 0, i32 1, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #10
  br label %22

22:                                               ; preds = %14, %19
  %23 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 3, i32 0, i32 1, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %27, %22
  %31 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 2, i32 0, i32 1, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %35, %30
  %39 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 1, i32 0, i32 1, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %43, %38
  %47 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 0, i32 0, i32 1, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  tail call void @_ZdlPv(i8* %53) #10
  br label %54

54:                                               ; preds = %51, %46
  %55 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 2
  tail call void @_ZN6webrtc12VideoEncoder21RateControlParametersD1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* %55) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6webrtc12VideoEncoder21RateControlParametersD1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22EncoderBitrateAdjuster20AdjustRateAllocationERKNS_12VideoEncoder21RateControlParametersE(%"class.webrtc::VideoBitrateAllocation"* noalias sret, %"class.webrtc::EncoderBitrateAdjuster"* nocapture, %"struct.webrtc::VideoEncoder::RateControlParameters"* dereferenceable(360)) local_unnamed_addr #0 align 2 {
  %4 = alloca [5 x i64], align 16
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca double, align 8
  %7 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %8 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %9 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 2, i32 1
  %10 = getelementptr inbounds %"struct.webrtc::VideoEncoder::RateControlParameters", %"struct.webrtc::VideoEncoder::RateControlParameters"* %2, i64 0, i32 1
  %11 = bitcast %"class.webrtc::VideoBitrateAllocation"* %9 to i8*
  %12 = bitcast %"class.webrtc::VideoBitrateAllocation"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 352, i1 false) #9
  %13 = bitcast [5 x i64]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 0, i64 40, i1 false)
  %14 = getelementptr inbounds %"struct.webrtc::VideoEncoder::RateControlParameters", %"struct.webrtc::VideoEncoder::RateControlParameters"* %2, i64 0, i32 2
  %15 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 4
  br label %27

16:                                               ; preds = %34
  %17 = tail call i64 @_ZN3rtc10TimeMillisEv() #9
  %18 = bitcast %"class.webrtc::VideoBitrateAllocation"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 -86, i64 168, i1 false)
  tail call void @_ZN6webrtc22VideoBitrateAllocationC1Ev(%"class.webrtc::VideoBitrateAllocation"* %0) #9
  %19 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #9
  %23 = bitcast %"struct.webrtc::(anonymous namespace)::LayerRateInfo"** %21 to i64*
  %24 = bitcast %"class.std::__1::vector"* %5 to i64*
  %25 = bitcast %"struct.webrtc::(anonymous namespace)::LayerRateInfo"** %22 to i64*
  %26 = bitcast double* %6 to i8*
  br label %86

27:                                               ; preds = %34, %3
  %28 = phi i64 [ 0, %3 ], [ %35, %34 ]
  %29 = getelementptr inbounds [5 x i64], [5 x i64]* %4, i64 0, i64 %28
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 3, i64 %28, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 3, i64 %28, i32 0, i32 1, i32 0, i32 0
  %32 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 3, i64 %28, i32 0, i32 1
  %33 = bitcast %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %32 to i8*
  br label %37

34:                                               ; preds = %78
  %35 = add nuw nsw i64 %28, 1
  %36 = icmp eq i64 %35, 5
  br i1 %36, label %16, label %27

37:                                               ; preds = %78, %27
  %38 = phi i64 [ 0, %27 ], [ %79, %78 ]
  %39 = phi i64 [ 0, %27 ], [ %80, %78 ]
  %40 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %28, i64 %39) #9
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %72, label %42

42:                                               ; preds = %37
  %43 = load i64, i64* %30, align 8
  %44 = lshr i64 %43, 1
  %45 = icmp ugt i64 %44, %39
  br i1 %45, label %46, label %72

46:                                               ; preds = %42
  %47 = and i64 %43, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %46
  %50 = load i8*, i8** %31, align 8
  br label %51

51:                                               ; preds = %46, %49
  %52 = phi i8* [ %50, %49 ], [ %33, %46 ]
  %53 = getelementptr inbounds i8, i8* %52, i64 %39
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %72, label %56

56:                                               ; preds = %51
  %57 = add i64 %38, 1
  store i64 %57, i64* %29, align 8
  %58 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 5, i64 %28, i64 %39
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %59, align 8
  %61 = icmp eq %"class.webrtc::EncoderOvershootDetector"* %60, null
  br i1 %61, label %62, label %78

62:                                               ; preds = %56
  %63 = tail call i8* @_Znwm(i64 112) #10
  %64 = bitcast i8* %63 to %"class.webrtc::EncoderOvershootDetector"*
  tail call void @_ZN6webrtc24EncoderOvershootDetectorC1El(%"class.webrtc::EncoderOvershootDetector"* nonnull %64, i64 3000) #9
  %65 = ptrtoint i8* %63 to i64
  %66 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %59, align 8
  %67 = bitcast %"class.std::__1::unique_ptr"* %58 to i64*
  store i64 %65, i64* %67, align 8
  %68 = icmp eq %"class.webrtc::EncoderOvershootDetector"* %66, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %62
  tail call void @_ZN6webrtc24EncoderOvershootDetectorD1Ev(%"class.webrtc::EncoderOvershootDetector"* nonnull %66) #9
  %70 = bitcast %"class.webrtc::EncoderOvershootDetector"* %66 to i8*
  tail call void @_ZdlPv(i8* %70) #10
  br label %71

71:                                               ; preds = %69, %62
  store i64 0, i64* %15, align 8
  br label %78

72:                                               ; preds = %51, %37, %42
  %73 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 5, i64 %28, i64 %39, i32 0, i32 0, i32 0
  %74 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %73, align 8
  %75 = icmp eq %"class.webrtc::EncoderOvershootDetector"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  store %"class.webrtc::EncoderOvershootDetector"* null, %"class.webrtc::EncoderOvershootDetector"** %73, align 8
  tail call void @_ZN6webrtc24EncoderOvershootDetectorD1Ev(%"class.webrtc::EncoderOvershootDetector"* nonnull %74) #9
  %77 = bitcast %"class.webrtc::EncoderOvershootDetector"* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #10
  store i64 0, i64* %15, align 8
  br label %78

78:                                               ; preds = %56, %72, %71, %76
  %79 = phi i64 [ %57, %56 ], [ %38, %72 ], [ %57, %71 ], [ %38, %76 ]
  %80 = add nuw nsw i64 %39, 1
  %81 = icmp eq i64 %80, 4
  br i1 %81, label %34, label %37

82:                                               ; preds = %253
  %83 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 0
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %272, label %261

86:                                               ; preds = %257, %16
  %87 = phi i64 [ 0, %16 ], [ %260, %257 ]
  %88 = phi %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* [ null, %16 ], [ %259, %257 ]
  %89 = phi %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* [ null, %16 ], [ %258, %257 ]
  %90 = phi i64 [ 0, %16 ], [ %255, %257 ]
  %91 = phi i64 [ 0, %16 ], [ %254, %257 ]
  %92 = icmp ult %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %89, %88
  %93 = ptrtoint %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %88 to i64
  br i1 %92, label %94, label %98

94:                                               ; preds = %86
  %95 = bitcast %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #9
  %96 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %89, i64 1
  %97 = ptrtoint %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %96 to i64
  store i64 %97, i64* %23, align 8
  br label %142

98:                                               ; preds = %86
  %99 = ptrtoint %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %89 to i64
  %100 = load i64, i64* %24, align 8
  %101 = sub i64 %99, %100
  %102 = sdiv exact i64 %101, 24
  %103 = add nsw i64 %102, 1
  %104 = icmp ugt i64 %103, 768614336404564650
  br i1 %104, label %105, label %107

105:                                              ; preds = %98
  %106 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %106) #11
  unreachable

107:                                              ; preds = %98
  %108 = sub i64 %93, %100
  %109 = sdiv exact i64 %108, 24
  %110 = icmp ult i64 %109, 384307168202282325
  br i1 %110, label %111, label %116

111:                                              ; preds = %107
  %112 = shl nsw i64 %109, 1
  %113 = icmp ult i64 %112, %103
  %114 = select i1 %113, i64 %103, i64 %112
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %111, %107
  %117 = phi i64 [ %114, %111 ], [ 768614336404564650, %107 ]
  %118 = mul i64 %117, 24
  %119 = tail call i8* @_Znwm(i64 %118) #10
  %120 = bitcast i8* %119 to %"struct.webrtc::(anonymous namespace)::LayerRateInfo"*
  br label %121

121:                                              ; preds = %116, %111
  %122 = phi i64 [ %117, %116 ], [ 0, %111 ]
  %123 = phi %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* [ %120, %116 ], [ null, %111 ]
  %124 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %123, i64 %102
  %125 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %123, i64 %122
  %126 = ptrtoint %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %125 to i64
  %127 = bitcast %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %124 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 24, i1 false) #9
  %128 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %124, i64 1
  %129 = ptrtoint %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %128 to i64
  %130 = sub i64 %87, %100
  %131 = sdiv exact i64 %130, -24
  %132 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %124, i64 %131
  %133 = ptrtoint %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %132 to i64
  %134 = icmp sgt i64 %130, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %121
  %136 = bitcast %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %132 to i8*
  %137 = inttoptr i64 %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 %130, i1 false) #9
  br label %138

138:                                              ; preds = %135, %121
  store i64 %133, i64* %24, align 8
  store i64 %129, i64* %23, align 8
  store i64 %126, i64* %25, align 8
  %139 = icmp eq i64 %100, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %138
  %141 = inttoptr i64 %100 to i8*
  tail call void @_ZdlPv(i8* %141) #10
  br label %142

142:                                              ; preds = %94, %138, %140
  %143 = phi %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* [ %96, %94 ], [ %128, %138 ], [ %128, %140 ]
  %144 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %143, i64 -1
  %145 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation18GetSpatialLayerSumEm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %90) #9
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %143, i64 -1, i32 2, i32 0, i32 0, i32 0
  store i64 %146, i64* %147, align 8
  %148 = load i64, i64* %15, align 8
  %149 = icmp ult i64 %148, 30
  br i1 %149, label %150, label %152

150:                                              ; preds = %142
  %151 = bitcast %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %144 to <2 x double>*
  store <2 x double> <double 1.200000e+00, double 1.200000e+00>, <2 x double>* %151, align 8
  br label %214

152:                                              ; preds = %142
  %153 = getelementptr inbounds [5 x i64], [5 x i64]* %4, i64 0, i64 %90
  %154 = load i64, i64* %153, align 8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %159, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %143, i64 -1, i32 2, i32 0, i32 0, i32 0
  %158 = icmp eq i32 %145, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %152, %156
  %160 = bitcast %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %144 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double>* %160, align 8
  br label %214

161:                                              ; preds = %156
  %162 = icmp eq i64 %154, 1
  br i1 %162, label %163, label %179

163:                                              ; preds = %161
  %164 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 5, i64 %90, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %164, align 8
  %166 = tail call { i8, double } @_ZN6webrtc24EncoderOvershootDetector31GetNetworkRateUtilizationFactorEl(%"class.webrtc::EncoderOvershootDetector"* %165, i64 %17) #9
  %167 = extractvalue { i8, double } %166, 0
  %168 = extractvalue { i8, double } %166, 1
  %169 = icmp eq i8 %167, 0
  %170 = select i1 %169, double 1.200000e+00, double %168
  %171 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %144, i64 0, i32 0
  store double %170, double* %171, align 8
  %172 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %164, align 8
  %173 = tail call { i8, double } @_ZN6webrtc24EncoderOvershootDetector29GetMediaRateUtilizationFactorEl(%"class.webrtc::EncoderOvershootDetector"* %172, i64 %17) #9
  %174 = extractvalue { i8, double } %173, 0
  %175 = extractvalue { i8, double } %173, 1
  %176 = icmp eq i8 %174, 0
  %177 = select i1 %176, double 1.200000e+00, double %175
  %178 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %143, i64 -1, i32 1
  store double %177, double* %178, align 8
  br label %214

179:                                              ; preds = %161
  %180 = bitcast %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 16, i1 false)
  %181 = bitcast %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %144 to <2 x double>*
  %182 = bitcast %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %144 to <2 x double>*
  br label %183

183:                                              ; preds = %197, %179
  %184 = phi i64 [ 0, %179 ], [ %212, %197 ]
  %185 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 5, i64 %90, i64 %184, i32 0, i32 0, i32 0
  %186 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %185, align 8
  %187 = tail call { i8, double } @_ZN6webrtc24EncoderOvershootDetector31GetNetworkRateUtilizationFactorEl(%"class.webrtc::EncoderOvershootDetector"* %186, i64 %17) #9
  %188 = extractvalue { i8, double } %187, 0
  %189 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %185, align 8
  %190 = tail call { i8, double } @_ZN6webrtc24EncoderOvershootDetector29GetMediaRateUtilizationFactorEl(%"class.webrtc::EncoderOvershootDetector"* %189, i64 %17) #9
  %191 = extractvalue { i8, double } %190, 0
  %192 = icmp ne i8 %188, 0
  %193 = icmp ne i8 %191, 0
  %194 = and i1 %192, %193
  br i1 %194, label %197, label %195

195:                                              ; preds = %183
  %196 = bitcast %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %144 to <2 x double>*
  store <2 x double> <double 1.200000e+00, double 1.200000e+00>, <2 x double>* %196, align 8
  br label %214

197:                                              ; preds = %183
  %198 = extractvalue { i8, double } %190, 1
  %199 = extractvalue { i8, double } %187, 1
  %200 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %90, i64 %184) #9
  %201 = uitofp i32 %200 to double
  %202 = load i64, i64* %157, align 8
  %203 = sitofp i64 %202 to double
  %204 = fdiv double %201, %203
  %205 = insertelement <2 x double> undef, double %199, i32 0
  %206 = insertelement <2 x double> %205, double %198, i32 1
  %207 = insertelement <2 x double> undef, double %204, i32 0
  %208 = shufflevector <2 x double> %207, <2 x double> undef, <2 x i32> zeroinitializer
  %209 = fmul <2 x double> %206, %208
  %210 = load <2 x double>, <2 x double>* %181, align 8
  %211 = fadd <2 x double> %210, %209
  store <2 x double> %211, <2 x double>* %182, align 8
  %212 = add nuw i64 %184, 1
  %213 = icmp eq i64 %212, %154
  br i1 %213, label %214, label %183

214:                                              ; preds = %197, %195, %159, %163, %150
  %215 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %144, i64 0, i32 0
  %216 = load double, double* %215, align 8
  %217 = fcmp olt double %216, 1.000000e+00
  br i1 %217, label %218, label %219

218:                                              ; preds = %214
  store double 1.000000e+00, double* %215, align 8
  br label %253

219:                                              ; preds = %214
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  store double 2.000000e+00, double* %6, align 8
  %220 = fcmp ogt double %216, 2.000000e+00
  %221 = select i1 %220, double* %6, double* %215
  %222 = bitcast double* %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %144 to i64*
  store i64 %223, i64* %224, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  %225 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %143, i64 -1, i32 1
  %226 = load double, double* %225, align 8
  %227 = fcmp ogt double %226, 1.000000e+00
  %228 = select i1 %227, double %226, double 1.000000e+00
  %229 = bitcast i64 %223 to double
  %230 = fcmp olt double %228, %229
  br i1 %230, label %231, label %242

231:                                              ; preds = %219
  %232 = fsub double %229, %228
  %233 = load i64, i64* %147, align 8
  %234 = sitofp i64 %233 to double
  %235 = fmul double %232, %234
  %236 = tail call double @llvm.round.f64(double %235) #9
  %237 = fcmp oeq double %236, 0x7FF0000000000000
  br i1 %237, label %253, label %238

238:                                              ; preds = %231
  %239 = fcmp oeq double %236, 0xFFF0000000000000
  br i1 %239, label %242, label %240

240:                                              ; preds = %238
  %241 = fptosi double %236 to i64
  br label %242

242:                                              ; preds = %219, %238, %240
  %243 = phi i64 [ %241, %240 ], [ -9223372036854775808, %238 ], [ 0, %219 ]
  %244 = icmp eq i64 %91, 9223372036854775807
  %245 = icmp eq i64 %243, 9223372036854775807
  %246 = or i1 %244, %245
  br i1 %246, label %253, label %247

247:                                              ; preds = %242
  %248 = icmp eq i64 %91, -9223372036854775808
  %249 = icmp eq i64 %243, -9223372036854775808
  %250 = or i1 %248, %249
  %251 = add nsw i64 %243, %91
  %252 = select i1 %250, i64 -9223372036854775808, i64 %251
  br label %253

253:                                              ; preds = %231, %247, %242, %218
  %254 = phi i64 [ %91, %218 ], [ %252, %247 ], [ 9223372036854775807, %242 ], [ 9223372036854775807, %231 ]
  %255 = add nuw nsw i64 %90, 1
  %256 = icmp eq i64 %255, 5
  br i1 %256, label %82, label %257

257:                                              ; preds = %253
  %258 = load %"struct.webrtc::(anonymous namespace)::LayerRateInfo"*, %"struct.webrtc::(anonymous namespace)::LayerRateInfo"** %21, align 8
  %259 = load %"struct.webrtc::(anonymous namespace)::LayerRateInfo"*, %"struct.webrtc::(anonymous namespace)::LayerRateInfo"** %22, align 8
  %260 = ptrtoint %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %258 to i64
  br label %86

261:                                              ; preds = %82
  %262 = getelementptr inbounds %"struct.webrtc::VideoEncoder::RateControlParameters", %"struct.webrtc::VideoEncoder::RateControlParameters"* %2, i64 0, i32 4, i32 0, i32 0, i32 0
  %263 = load i64, i64* %262, align 8
  %264 = icmp eq i64 %263, 9223372036854775807
  br i1 %264, label %272, label %265

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"struct.webrtc::VideoEncoder::RateControlParameters", %"struct.webrtc::VideoEncoder::RateControlParameters"* %2, i64 0, i32 2, i32 0
  %267 = load i32, i32* %266, align 4
  %268 = zext i32 %267 to i64
  %269 = icmp eq i64 %263, -9223372036854775808
  %270 = sub nsw i64 %263, %268
  %271 = select i1 %269, i64 -9223372036854775808, i64 %270
  br label %272

272:                                              ; preds = %265, %261, %82
  %273 = phi i64 [ 0, %82 ], [ %271, %265 ], [ 9223372036854775807, %261 ]
  %274 = icmp eq i64 %254, 0
  br i1 %274, label %285, label %275

275:                                              ; preds = %272
  switch i64 %273, label %276 [
    i64 9223372036854775807, label %279
    i64 -9223372036854775808, label %278
  ]

276:                                              ; preds = %275
  %277 = sitofp i64 %273 to double
  br label %279

278:                                              ; preds = %275
  br label %279

279:                                              ; preds = %275, %276, %278
  %280 = phi double [ %277, %276 ], [ 0x7FF0000000000000, %275 ], [ 0xFFF0000000000000, %278 ]
  %281 = sitofp i64 %254 to double
  %282 = fdiv double %280, %281
  %283 = fcmp olt double %282, 1.000000e+00
  %284 = select i1 %283, double %282, double 1.000000e+00
  br label %285

285:                                              ; preds = %272, %279
  %286 = phi double [ %284, %279 ], [ 0.000000e+00, %272 ]
  %287 = bitcast %"class.rtc::DiagnosticLogMessage"* %7 to i8*
  %288 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %7, i64 0, i32 7
  %289 = bitcast %"class.std::__1::basic_ostringstream"* %288 to %"class.std::__1::basic_ostream"*
  %290 = bitcast %"class.rtc::DiagnosticLogMessage"* %8 to i8*
  %291 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %8, i64 0, i32 7
  %292 = bitcast %"class.std::__1::basic_ostringstream"* %291 to %"class.std::__1::basic_ostream"*
  %293 = getelementptr inbounds %"struct.webrtc::VideoEncoder::RateControlParameters", %"struct.webrtc::VideoEncoder::RateControlParameters"* %2, i64 0, i32 3
  br label %304

294:                                              ; preds = %483
  %295 = getelementptr inbounds %"struct.webrtc::VideoEncoder::RateControlParameters", %"struct.webrtc::VideoEncoder::RateControlParameters"* %2, i64 0, i32 2, i32 2
  %296 = load i8, i8* %295, align 4, !range !2
  %297 = getelementptr inbounds %"class.webrtc::VideoBitrateAllocation", %"class.webrtc::VideoBitrateAllocation"* %0, i64 0, i32 2
  store i8 %296, i8* %297, align 4
  %298 = load %"struct.webrtc::(anonymous namespace)::LayerRateInfo"*, %"struct.webrtc::(anonymous namespace)::LayerRateInfo"** %20, align 8
  %299 = icmp eq %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %298, null
  br i1 %299, label %303, label %300

300:                                              ; preds = %294
  %301 = ptrtoint %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %298 to i64
  store i64 %301, i64* %23, align 8
  %302 = bitcast %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %298 to i8*
  call void @_ZdlPv(i8* %302) #10
  br label %303

303:                                              ; preds = %294, %300
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #9
  ret void

304:                                              ; preds = %483, %285
  %305 = phi i64 [ 0, %285 ], [ %484, %483 ]
  %306 = load %"struct.webrtc::(anonymous namespace)::LayerRateInfo"*, %"struct.webrtc::(anonymous namespace)::LayerRateInfo"** %20, align 8
  %307 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %306, i64 %305
  %308 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %307, i64 0, i32 0
  %309 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %307, i64 0, i32 0
  %310 = load double, double* %309, align 8
  %311 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %306, i64 %305, i32 1
  %312 = load double, double* %311, align 8
  %313 = fcmp ogt double %312, 1.000000e+00
  %314 = select i1 %313, double %312, double 1.000000e+00
  %315 = fcmp olt double %314, %310
  br i1 %315, label %316, label %328

316:                                              ; preds = %304
  %317 = fsub double %310, %314
  %318 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %306, i64 %305, i32 2, i32 0, i32 0, i32 0
  %319 = load i64, i64* %318, align 8
  %320 = sitofp i64 %319 to double
  %321 = fmul double %317, %320
  %322 = call double @llvm.round.f64(double %321) #9
  %323 = fcmp oeq double %322, 0x7FF0000000000000
  br i1 %323, label %328, label %324

324:                                              ; preds = %316
  %325 = fcmp oeq double %322, 0xFFF0000000000000
  br i1 %325, label %328, label %326

326:                                              ; preds = %324
  %327 = fptosi double %322 to i64
  br label %328

328:                                              ; preds = %304, %316, %324, %326
  %329 = phi i64 [ %327, %326 ], [ 9223372036854775807, %316 ], [ -9223372036854775808, %324 ], [ 0, %304 ]
  %330 = sitofp i64 %329 to double
  %331 = fmul double %286, %330
  %332 = call double @llvm.round.f64(double %331) #9
  %333 = fcmp oeq double %332, 0x7FF0000000000000
  br i1 %333, label %339, label %334

334:                                              ; preds = %328
  %335 = fcmp oeq double %332, 0xFFF0000000000000
  br i1 %335, label %364, label %336

336:                                              ; preds = %334
  %337 = fptosi double %332 to i64
  %338 = icmp sgt i64 %337, 0
  br i1 %338, label %339, label %364

339:                                              ; preds = %328, %336
  %340 = phi i64 [ %337, %336 ], [ 9223372036854775807, %328 ]
  %341 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %306, i64 %305, i32 2, i32 0, i32 0, i32 0
  %342 = load i64, i64* %341, align 8
  switch i64 %342, label %351 [
    i64 9223372036854775807, label %343
    i64 -9223372036854775808, label %347
  ]

343:                                              ; preds = %339
  %344 = icmp eq i64 %340, 9223372036854775807
  %345 = sitofp i64 %340 to double
  %346 = select i1 %344, double 0x7FF0000000000000, double %345
  br label %357

347:                                              ; preds = %339
  %348 = icmp eq i64 %340, 9223372036854775807
  %349 = sitofp i64 %340 to double
  %350 = select i1 %348, double 0x7FF0000000000000, double %349
  br label %357

351:                                              ; preds = %339
  %352 = sitofp i64 %342 to double
  %353 = icmp eq i64 %340, 9223372036854775807
  %354 = sitofp i64 %340 to double
  %355 = select i1 %353, double 0x7FF0000000000000, double %354
  %356 = sitofp i64 %342 to double
  br label %357

357:                                              ; preds = %343, %351, %347
  %358 = phi double [ %355, %351 ], [ %350, %347 ], [ %346, %343 ]
  %359 = phi double [ %352, %351 ], [ 0xFFF0000000000000, %347 ], [ 0x7FF0000000000000, %343 ]
  %360 = phi double [ %356, %351 ], [ 0xFFF0000000000000, %347 ], [ 0x7FF0000000000000, %343 ]
  %361 = fadd double %358, %360
  %362 = fdiv double %359, %361
  %363 = fmul double %362, %310
  br label %364

364:                                              ; preds = %334, %357, %336
  %365 = phi double [ %310, %334 ], [ %363, %357 ], [ %310, %336 ]
  %366 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 6, i64 %305
  %367 = load i32, i32* %366, align 4
  %368 = icmp eq i32 %367, 0
  %369 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %306, i64 %305, i32 2, i32 0, i32 0, i32 0
  %370 = load i64, i64* %369, align 8
  br i1 %368, label %389, label %371

371:                                              ; preds = %364
  %372 = icmp sgt i64 %370, 0
  br i1 %372, label %375, label %373

373:                                              ; preds = %371
  %374 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %306, i64 %305, i32 2, i32 0, i32 0, i32 0
  br label %428

375:                                              ; preds = %371
  %376 = zext i32 %367 to i64
  %377 = icmp sgt i64 %370, %376
  br i1 %377, label %378, label %386

378:                                              ; preds = %375
  %379 = icmp eq i64 %370, 9223372036854775807
  %380 = sitofp i64 %370 to double
  %381 = select i1 %379, double 0x7FF0000000000000, double %380
  %382 = uitofp i32 %367 to double
  %383 = fdiv double %381, %382
  %384 = fcmp olt double %383, %365
  %385 = select i1 %384, double %383, double %365
  br label %386

386:                                              ; preds = %378, %375
  %387 = phi double [ %365, %375 ], [ %385, %378 ]
  %388 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %306, i64 %305, i32 2, i32 0, i32 0, i32 0
  br label %392

389:                                              ; preds = %364
  %390 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %306, i64 %305, i32 2, i32 0, i32 0, i32 0
  %391 = icmp sgt i64 %370, 0
  br i1 %391, label %392, label %428

392:                                              ; preds = %386, %389
  %393 = phi i64* [ %388, %386 ], [ %390, %389 ]
  %394 = phi double [ %387, %386 ], [ %365, %389 ]
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %287) #9
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 225, i32 4, i32 0, i32 0) #9
  %395 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %289, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i64 38) #9
  %396 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %395, i64 %305) #9
  %397 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %396, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9) #9
  %398 = load double, double* %308, align 8
  %399 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %397, double %398) #9
  %400 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %399, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i64 10) #9
  %401 = load double, double* %311, align 8
  %402 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %400, double %401) #9
  %403 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %402, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i64 21) #9
  %404 = load double, double* %311, align 8
  %405 = fcmp ogt double %404, 1.000000e+00
  %406 = select i1 %405, double %404, double 1.000000e+00
  %407 = load double, double* %308, align 8
  %408 = fcmp ogt double %407, %406
  br i1 %408, label %409, label %421

409:                                              ; preds = %392
  %410 = fsub double %407, %406
  %411 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::LayerRateInfo", %"struct.webrtc::(anonymous namespace)::LayerRateInfo"* %306, i64 %305, i32 2, i32 0, i32 0, i32 0
  %412 = load i64, i64* %411, align 8
  %413 = sitofp i64 %412 to double
  %414 = fmul double %410, %413
  %415 = call double @llvm.round.f64(double %414) #9
  %416 = fcmp oeq double %415, 0x7FF0000000000000
  br i1 %416, label %421, label %417

417:                                              ; preds = %409
  %418 = fcmp oeq double %415, 0xFFF0000000000000
  br i1 %418, label %421, label %419

419:                                              ; preds = %417
  %420 = fptosi double %415 to i64
  br label %421

421:                                              ; preds = %392, %409, %417, %419
  %422 = phi i64 [ %420, %419 ], [ 9223372036854775807, %409 ], [ -9223372036854775808, %417 ], [ 0, %392 ]
  %423 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %403, i64 %422) #9
  %424 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %423, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i64 27) #9
  %425 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %424, i64 %273) #9
  %426 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %425, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), i64 33) #9
  %427 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %426, double %394) #9
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %287) #9
  br label %428

428:                                              ; preds = %373, %421, %389
  %429 = phi i64* [ %393, %421 ], [ %390, %389 ], [ %374, %373 ]
  %430 = phi double [ %394, %421 ], [ %365, %389 ], [ %365, %373 ]
  %431 = getelementptr inbounds [5 x i64], [5 x i64]* %4, i64 0, i64 %305
  %432 = load i64, i64* %431, align 8
  %433 = icmp eq i64 %432, 1
  br i1 %433, label %434, label %447

434:                                              ; preds = %428
  %435 = call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %305, i64 0) #9
  %436 = zext i32 %435 to i64
  %437 = load i64, i64* %429, align 8
  %438 = icmp sgt i64 %437, %436
  br i1 %438, label %439, label %447

439:                                              ; preds = %434
  %440 = sitofp i64 %437 to double
  %441 = fdiv double %440, %430
  %442 = fadd double %441, 5.000000e-01
  %443 = fptoui double %442 to i32
  %444 = trunc i64 %437 to i32
  %445 = icmp ult i32 %444, %443
  %446 = select i1 %445, i32 %444, i32 %443
  br label %461

447:                                              ; preds = %428, %434
  %448 = call zeroext i1 @_ZNK6webrtc22VideoBitrateAllocation10HasBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %305, i64 0) #9
  br i1 %448, label %449, label %459

449:                                              ; preds = %447
  %450 = call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %305, i64 0) #9
  %451 = uitofp i32 %450 to double
  %452 = fdiv double %451, %430
  %453 = fadd double %452, 5.000000e-01
  %454 = fptoui double %453 to i32
  %455 = call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %305, i64 0) #9
  %456 = icmp ult i32 %455, %454
  %457 = select i1 %456, i32 %455, i32 %454
  %458 = call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %305, i64 0, i32 %457) #9
  br label %459

459:                                              ; preds = %447, %449
  %460 = call zeroext i1 @_ZNK6webrtc22VideoBitrateAllocation10HasBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %305, i64 1) #9
  br i1 %460, label %537, label %547

461:                                              ; preds = %439, %561
  %462 = phi i32 [ %569, %561 ], [ %446, %439 ]
  %463 = phi i64 [ 3, %561 ], [ 0, %439 ]
  %464 = call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %305, i64 %463, i32 %462) #9
  br label %465

465:                                              ; preds = %461, %559
  %466 = call i32 @_ZNK6webrtc22VideoBitrateAllocation18GetSpatialLayerSumEm(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %305) #9
  %467 = load i64, i64* %429, align 8
  %468 = icmp sgt i64 %467, 0
  br i1 %468, label %469, label %478

469:                                              ; preds = %465
  %470 = load i32, i32* %366, align 4
  %471 = icmp ult i32 %466, %470
  br i1 %471, label %472, label %478

472:                                              ; preds = %469
  %473 = call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %305, i64 0) #9
  %474 = load i32, i32* %366, align 4
  %475 = sub i32 %473, %466
  %476 = add i32 %475, %474
  %477 = call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %305, i64 0, i32 %476) #9
  br label %478

478:                                              ; preds = %465, %472, %469
  %479 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 3, i64 %305, i32 0, i32 0, i32 0, i32 0, i32 0
  %480 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 3, i64 %305, i32 0, i32 1, i32 0, i32 0
  %481 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 3, i64 %305, i32 0, i32 1
  %482 = bitcast %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %481 to i8*
  br label %486

483:                                              ; preds = %534
  %484 = add nuw nsw i64 %305, 1
  %485 = icmp eq i64 %484, 5
  br i1 %485, label %294, label %304

486:                                              ; preds = %534, %478
  %487 = phi i64 [ 0, %478 ], [ %535, %534 ]
  %488 = call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %305, i64 %487) #9
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %534, label %490

490:                                              ; preds = %486
  %491 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %1, i64 0, i32 5, i64 %305, i64 %487, i32 0, i32 0, i32 0
  %492 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %491, align 8
  %493 = icmp eq %"class.webrtc::EncoderOvershootDetector"* %492, null
  br i1 %493, label %534, label %494

494:                                              ; preds = %490
  %495 = load i64, i64* %479, align 8
  %496 = lshr i64 %495, 1
  %497 = icmp ugt i64 %496, %487
  br i1 %497, label %499, label %498, !prof !3

498:                                              ; preds = %494
  call void @llvm.trap() #9
  unreachable

499:                                              ; preds = %494
  %500 = and i64 %495, 1
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %504, label %502

502:                                              ; preds = %499
  %503 = load i8*, i8** %480, align 8
  br label %504

504:                                              ; preds = %499, %502
  %505 = phi i8* [ %503, %502 ], [ %482, %499 ]
  %506 = getelementptr inbounds i8, i8* %505, i64 %487
  %507 = load i8, i8* %506, align 1
  %508 = zext i8 %507 to i32
  %509 = icmp eq i64 %487, 0
  br i1 %509, label %522, label %510

510:                                              ; preds = %504
  %511 = add nsw i64 %487, -1
  %512 = icmp ugt i64 %496, %511
  br i1 %512, label %514, label %513, !prof !3

513:                                              ; preds = %510
  call void @llvm.trap() #9
  unreachable

514:                                              ; preds = %510
  br i1 %501, label %517, label %515

515:                                              ; preds = %514
  %516 = load i8*, i8** %480, align 8
  br label %517

517:                                              ; preds = %514, %515
  %518 = phi i8* [ %516, %515 ], [ %482, %514 ]
  %519 = getelementptr inbounds i8, i8* %518, i64 %511
  %520 = load i8, i8* %519, align 1
  %521 = zext i8 %520 to i32
  br label %522

522:                                              ; preds = %504, %517
  %523 = phi i32 [ %521, %517 ], [ 0, %504 ]
  %524 = sub nsw i32 %508, %523
  %525 = sitofp i32 %524 to double
  %526 = fdiv double %525, 2.550000e+02
  %527 = fcmp ugt double %526, 0.000000e+00
  br i1 %527, label %530, label %528

528:                                              ; preds = %522
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %290) #9
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %8, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 286, i32 2, i32 0, i32 0) #9
  %529 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %292, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.7, i64 0, i64 0), i64 97) #9
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %290) #9
  br label %534

530:                                              ; preds = %522
  %531 = zext i32 %488 to i64
  %532 = load double, double* %293, align 8
  %533 = fmul double %526, %532
  call void @_ZN6webrtc24EncoderOvershootDetector13SetTargetRateENS_8DataRateEdl(%"class.webrtc::EncoderOvershootDetector"* nonnull %492, i64 %531, double %533, i64 %17) #9
  br label %534

534:                                              ; preds = %490, %486, %530, %528
  %535 = add nuw nsw i64 %487, 1
  %536 = icmp eq i64 %535, 4
  br i1 %536, label %483, label %486

537:                                              ; preds = %459
  %538 = call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %305, i64 1) #9
  %539 = uitofp i32 %538 to double
  %540 = fdiv double %539, %430
  %541 = fadd double %540, 5.000000e-01
  %542 = fptoui double %541 to i32
  %543 = call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %305, i64 1) #9
  %544 = icmp ult i32 %543, %542
  %545 = select i1 %544, i32 %543, i32 %542
  %546 = call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %305, i64 1, i32 %545) #9
  br label %547

547:                                              ; preds = %537, %459
  %548 = call zeroext i1 @_ZNK6webrtc22VideoBitrateAllocation10HasBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %305, i64 2) #9
  br i1 %548, label %549, label %559

549:                                              ; preds = %547
  %550 = call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %305, i64 2) #9
  %551 = uitofp i32 %550 to double
  %552 = fdiv double %551, %430
  %553 = fadd double %552, 5.000000e-01
  %554 = fptoui double %553 to i32
  %555 = call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %305, i64 2) #9
  %556 = icmp ult i32 %555, %554
  %557 = select i1 %556, i32 %555, i32 %554
  %558 = call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %0, i64 %305, i64 2, i32 %557) #9
  br label %559

559:                                              ; preds = %549, %547
  %560 = call zeroext i1 @_ZNK6webrtc22VideoBitrateAllocation10HasBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %305, i64 3) #9
  br i1 %560, label %561, label %465

561:                                              ; preds = %559
  %562 = call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %305, i64 3) #9
  %563 = uitofp i32 %562 to double
  %564 = fdiv double %563, %430
  %565 = fadd double %564, 5.000000e-01
  %566 = fptoui double %565 to i32
  %567 = call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %14, i64 %305, i64 3) #9
  %568 = icmp ult i32 %567, %566
  %569 = select i1 %568, i32 %567, i32 %566
  br label %461
}

declare i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"*, i64, i64) local_unnamed_addr #2

declare i64 @_ZN3rtc10TimeMillisEv() local_unnamed_addr #2

declare void @_ZN6webrtc22VideoBitrateAllocationC1Ev(%"class.webrtc::VideoBitrateAllocation"*) unnamed_addr #2

declare i32 @_ZNK6webrtc22VideoBitrateAllocation18GetSpatialLayerSumEm(%"class.webrtc::VideoBitrateAllocation"*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare { i8, double } @_ZN6webrtc24EncoderOvershootDetector31GetNetworkRateUtilizationFactorEl(%"class.webrtc::EncoderOvershootDetector"*, i64) local_unnamed_addr #2

declare { i8, double } @_ZN6webrtc24EncoderOvershootDetector29GetMediaRateUtilizationFactorEl(%"class.webrtc::EncoderOvershootDetector"*, i64) local_unnamed_addr #2

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"*, double) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #3

declare zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"*, i64, i64, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK6webrtc22VideoBitrateAllocation10HasBitrateEmm(%"class.webrtc::VideoBitrateAllocation"*, i64, i64) local_unnamed_addr #2

declare void @_ZN6webrtc24EncoderOvershootDetector13SetTargetRateENS_8DataRateEdl(%"class.webrtc::EncoderOvershootDetector"*, i64, double, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22EncoderBitrateAdjuster13OnEncoderInfoERKNS_12VideoEncoder11EncoderInfoE(%"class.webrtc::EncoderBitrateAdjuster"*, %"struct.webrtc::VideoEncoder::EncoderInfo"* dereferenceable(240)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.webrtc::VideoBitrateAllocation", align 4
  %4 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 0
  %5 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 0
  %6 = icmp eq %"class.absl::InlinedVector"* %4, %5
  br i1 %6, label %19, label %7, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  %12 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 0, i32 0, i32 1
  %15 = bitcast %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %14 to i8*
  %16 = select i1 %11, i8* %15, i8* %13
  %17 = lshr i64 %9, 1
  %18 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %5, i64 0, i32 0
  tail call void @_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE6AssignINS0_20IteratorValueAdapterIS4_PKhEEEEvT_m(%"class.absl::inlined_vector_internal::Storage"* %18, i8* %16, i64 %17) #9
  br label %19

19:                                               ; preds = %2, %7
  %20 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 1
  %21 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 1
  %22 = icmp eq %"class.absl::InlinedVector"* %20, %21
  br i1 %22, label %35, label %23, !prof !4

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  %28 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 1, i32 0, i32 1, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 1, i32 0, i32 1
  %31 = bitcast %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %30 to i8*
  %32 = select i1 %27, i8* %31, i8* %29
  %33 = lshr i64 %25, 1
  %34 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %21, i64 0, i32 0
  tail call void @_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE6AssignINS0_20IteratorValueAdapterIS4_PKhEEEEvT_m(%"class.absl::inlined_vector_internal::Storage"* %34, i8* %32, i64 %33) #9
  br label %35

35:                                               ; preds = %23, %19
  %36 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 2
  %37 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 2
  %38 = icmp eq %"class.absl::InlinedVector"* %36, %37
  br i1 %38, label %51, label %39, !prof !4

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  %44 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 2, i32 0, i32 1, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 2, i32 0, i32 1
  %47 = bitcast %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %46 to i8*
  %48 = select i1 %43, i8* %47, i8* %45
  %49 = lshr i64 %41, 1
  %50 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %37, i64 0, i32 0
  tail call void @_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE6AssignINS0_20IteratorValueAdapterIS4_PKhEEEEvT_m(%"class.absl::inlined_vector_internal::Storage"* %50, i8* %48, i64 %49) #9
  br label %51

51:                                               ; preds = %39, %35
  %52 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 3
  %53 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 3
  %54 = icmp eq %"class.absl::InlinedVector"* %52, %53
  br i1 %54, label %67, label %55, !prof !4

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 1
  %59 = icmp eq i64 %58, 0
  %60 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 3, i32 0, i32 1, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 3, i32 0, i32 1
  %63 = bitcast %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %62 to i8*
  %64 = select i1 %59, i8* %63, i8* %61
  %65 = lshr i64 %57, 1
  %66 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %53, i64 0, i32 0
  tail call void @_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE6AssignINS0_20IteratorValueAdapterIS4_PKhEEEEvT_m(%"class.absl::inlined_vector_internal::Storage"* %66, i8* %64, i64 %65) #9
  br label %67

67:                                               ; preds = %55, %51
  %68 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 4
  %69 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 3, i64 4
  %70 = icmp eq %"class.absl::InlinedVector"* %68, %69
  br i1 %70, label %83, label %71, !prof !4

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  %76 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 4, i32 0, i32 1, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %1, i64 0, i32 8, i64 4, i32 0, i32 1
  %79 = bitcast %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %78 to i8*
  %80 = select i1 %75, i8* %79, i8* %77
  %81 = lshr i64 %73, 1
  %82 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %69, i64 0, i32 0
  tail call void @_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE6AssignINS0_20IteratorValueAdapterIS4_PKhEEEEvT_m(%"class.absl::inlined_vector_internal::Storage"* %82, i8* %80, i64 %81) #9
  br label %83

83:                                               ; preds = %71, %67
  %84 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 2
  %85 = bitcast %"class.webrtc::VideoBitrateAllocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %85) #9
  call void @_ZN6webrtc22EncoderBitrateAdjuster20AdjustRateAllocationERKNS_12VideoEncoder21RateControlParametersE(%"class.webrtc::VideoBitrateAllocation"* nonnull sret %3, %"class.webrtc::EncoderBitrateAdjuster"* %0, %"struct.webrtc::VideoEncoder::RateControlParameters"* dereferenceable(360) %84)
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %85) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22EncoderBitrateAdjuster14OnEncodedFrameENS_8DataSizeEii(%"class.webrtc::EncoderBitrateAdjuster"* nocapture, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 1
  store i64 %7, i64* %5, align 8
  %8 = sext i32 %2 to i64
  %9 = sext i32 %3 to i64
  %10 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 5, i64 %8, i64 %9, i32 0, i32 0, i32 0
  %11 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %10, align 8
  %12 = icmp eq %"class.webrtc::EncoderOvershootDetector"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  %14 = tail call i64 @_ZN3rtc10TimeMillisEv() #9
  tail call void @_ZN6webrtc24EncoderOvershootDetector14OnEncodedFrameEml(%"class.webrtc::EncoderOvershootDetector"* nonnull %11, i64 %1, i64 %14) #9
  br label %15

15:                                               ; preds = %4, %13
  ret void
}

declare void @_ZN6webrtc24EncoderOvershootDetector14OnEncodedFrameEml(%"class.webrtc::EncoderOvershootDetector"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22EncoderBitrateAdjuster5ResetEv(%"class.webrtc::EncoderBitrateAdjuster"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.webrtc::VideoBitrateAllocation", align 4
  br label %3

3:                                                ; preds = %31, %1
  %4 = phi i64 [ 0, %1 ], [ %32, %31 ]
  %5 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 5, i64 %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %5, align 8
  store %"class.webrtc::EncoderOvershootDetector"* null, %"class.webrtc::EncoderOvershootDetector"** %5, align 8
  %7 = icmp eq %"class.webrtc::EncoderOvershootDetector"* %6, null
  br i1 %7, label %13, label %11

8:                                                ; preds = %31
  %9 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 2
  %10 = bitcast %"class.webrtc::VideoBitrateAllocation"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %10) #9
  call void @_ZN6webrtc22EncoderBitrateAdjuster20AdjustRateAllocationERKNS_12VideoEncoder21RateControlParametersE(%"class.webrtc::VideoBitrateAllocation"* nonnull sret %2, %"class.webrtc::EncoderBitrateAdjuster"* %0, %"struct.webrtc::VideoEncoder::RateControlParameters"* dereferenceable(360) %9)
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %10) #9
  ret void

11:                                               ; preds = %3
  tail call void @_ZN6webrtc24EncoderOvershootDetectorD1Ev(%"class.webrtc::EncoderOvershootDetector"* nonnull %6) #9
  %12 = bitcast %"class.webrtc::EncoderOvershootDetector"* %6 to i8*
  tail call void @_ZdlPv(i8* %12) #10
  br label %13

13:                                               ; preds = %3, %11
  %14 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 5, i64 %4, i64 1, i32 0, i32 0, i32 0
  %15 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %14, align 8
  store %"class.webrtc::EncoderOvershootDetector"* null, %"class.webrtc::EncoderOvershootDetector"** %14, align 8
  %16 = icmp eq %"class.webrtc::EncoderOvershootDetector"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  tail call void @_ZN6webrtc24EncoderOvershootDetectorD1Ev(%"class.webrtc::EncoderOvershootDetector"* nonnull %15) #9
  %18 = bitcast %"class.webrtc::EncoderOvershootDetector"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 5, i64 %4, i64 2, i32 0, i32 0, i32 0
  %21 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %20, align 8
  store %"class.webrtc::EncoderOvershootDetector"* null, %"class.webrtc::EncoderOvershootDetector"** %20, align 8
  %22 = icmp eq %"class.webrtc::EncoderOvershootDetector"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  tail call void @_ZN6webrtc24EncoderOvershootDetectorD1Ev(%"class.webrtc::EncoderOvershootDetector"* nonnull %21) #9
  %24 = bitcast %"class.webrtc::EncoderOvershootDetector"* %21 to i8*
  tail call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %23, %19
  %26 = getelementptr inbounds %"class.webrtc::EncoderBitrateAdjuster", %"class.webrtc::EncoderBitrateAdjuster"* %0, i64 0, i32 5, i64 %4, i64 3, i32 0, i32 0, i32 0
  %27 = load %"class.webrtc::EncoderOvershootDetector"*, %"class.webrtc::EncoderOvershootDetector"** %26, align 8
  store %"class.webrtc::EncoderOvershootDetector"* null, %"class.webrtc::EncoderOvershootDetector"** %26, align 8
  %28 = icmp eq %"class.webrtc::EncoderOvershootDetector"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  tail call void @_ZN6webrtc24EncoderOvershootDetectorD1Ev(%"class.webrtc::EncoderOvershootDetector"* nonnull %27) #9
  %30 = bitcast %"class.webrtc::EncoderOvershootDetector"* %27 to i8*
  tail call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %29, %25
  %32 = add nuw nsw i64 %4, 1
  %33 = icmp eq i64 %32, 5
  br i1 %33, label %8, label %3
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN6webrtc24EncoderOvershootDetectorC1El(%"class.webrtc::EncoderOvershootDetector"*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc24EncoderOvershootDetectorD1Ev(%"class.webrtc::EncoderOvershootDetector"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE6AssignINS0_20IteratorValueAdapterIS4_PKhEEEEvT_m(%"class.absl::inlined_vector_internal::Storage"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !5
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !5
  %12 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !noalias !5
  br label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %15 to i64
  br label %17

17:                                               ; preds = %8, %14
  %18 = phi i64 [ %16, %14 ], [ %11, %8 ]
  %19 = phi i64 [ 4, %14 ], [ %13, %8 ]
  %20 = lshr i64 %5, 1
  %21 = icmp ult i64 %19, %2
  br i1 %21, label %22, label %28

22:                                               ; preds = %17
  %23 = shl i64 %19, 1
  %24 = icmp ult i64 %23, %2
  %25 = select i1 %24, i64 %2, i64 %23
  %26 = tail call i8* @_Znwm(i64 %25) #10
  %27 = ptrtoint i8* %26 to i64
  br label %169

28:                                               ; preds = %17
  %29 = icmp ult i64 %20, %2
  %30 = inttoptr i64 %18 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 %20
  %32 = call i64 @llvm.usub.sat.i64(i64 %2, i64 %20)
  %33 = select i1 %29, i8* %31, i8* null
  %34 = select i1 %29, i64 %20, i64 %2
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %166, label %36

36:                                               ; preds = %28
  %37 = icmp ult i64 %34, 32
  br i1 %37, label %124, label %38

38:                                               ; preds = %36
  %39 = getelementptr i8, i8* %30, i64 %34
  %40 = getelementptr i8, i8* %1, i64 %34
  %41 = icmp ugt i8* %40, %30
  %42 = icmp ugt i8* %39, %1
  %43 = and i1 %41, %42
  br i1 %43, label %124, label %44

44:                                               ; preds = %38
  %45 = and i64 %34, 9223372036854775776
  %46 = getelementptr i8, i8* %1, i64 %45
  %47 = add nsw i64 %45, -32
  %48 = lshr exact i64 %47, 5
  %49 = add nuw nsw i64 %48, 1
  %50 = and i64 %49, 3
  %51 = icmp ult i64 %47, 96
  br i1 %51, label %103, label %52

52:                                               ; preds = %44
  %53 = sub nsw i64 %49, %50
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %100, %54 ]
  %56 = phi i64 [ %53, %52 ], [ %101, %54 ]
  %57 = getelementptr i8, i8* %1, i64 %55
  %58 = getelementptr inbounds i8, i8* %30, i64 %55
  %59 = bitcast i8* %57 to <16 x i8>*
  %60 = load <16 x i8>, <16 x i8>* %59, align 1, !alias.scope !8
  %61 = getelementptr i8, i8* %57, i64 16
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1, !alias.scope !8
  %64 = bitcast i8* %58 to <16 x i8>*
  store <16 x i8> %60, <16 x i8>* %64, align 1, !alias.scope !11, !noalias !8
  %65 = getelementptr inbounds i8, i8* %58, i64 16
  %66 = bitcast i8* %65 to <16 x i8>*
  store <16 x i8> %63, <16 x i8>* %66, align 1, !alias.scope !11, !noalias !8
  %67 = or i64 %55, 32
  %68 = getelementptr i8, i8* %1, i64 %67
  %69 = getelementptr inbounds i8, i8* %30, i64 %67
  %70 = bitcast i8* %68 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1, !alias.scope !8
  %72 = getelementptr i8, i8* %68, i64 16
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1, !alias.scope !8
  %75 = bitcast i8* %69 to <16 x i8>*
  store <16 x i8> %71, <16 x i8>* %75, align 1, !alias.scope !11, !noalias !8
  %76 = getelementptr inbounds i8, i8* %69, i64 16
  %77 = bitcast i8* %76 to <16 x i8>*
  store <16 x i8> %74, <16 x i8>* %77, align 1, !alias.scope !11, !noalias !8
  %78 = or i64 %55, 64
  %79 = getelementptr i8, i8* %1, i64 %78
  %80 = getelementptr inbounds i8, i8* %30, i64 %78
  %81 = bitcast i8* %79 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !8
  %83 = getelementptr i8, i8* %79, i64 16
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1, !alias.scope !8
  %86 = bitcast i8* %80 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %86, align 1, !alias.scope !11, !noalias !8
  %87 = getelementptr inbounds i8, i8* %80, i64 16
  %88 = bitcast i8* %87 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %88, align 1, !alias.scope !11, !noalias !8
  %89 = or i64 %55, 96
  %90 = getelementptr i8, i8* %1, i64 %89
  %91 = getelementptr inbounds i8, i8* %30, i64 %89
  %92 = bitcast i8* %90 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !8
  %94 = getelementptr i8, i8* %90, i64 16
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1, !alias.scope !8
  %97 = bitcast i8* %91 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %97, align 1, !alias.scope !11, !noalias !8
  %98 = getelementptr inbounds i8, i8* %91, i64 16
  %99 = bitcast i8* %98 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %99, align 1, !alias.scope !11, !noalias !8
  %100 = add i64 %55, 128
  %101 = add i64 %56, -4
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %54, !llvm.loop !13

103:                                              ; preds = %54, %44
  %104 = phi i64 [ 0, %44 ], [ %100, %54 ]
  %105 = icmp eq i64 %50, 0
  br i1 %105, label %122, label %106

106:                                              ; preds = %103, %106
  %107 = phi i64 [ %119, %106 ], [ %104, %103 ]
  %108 = phi i64 [ %120, %106 ], [ %50, %103 ]
  %109 = getelementptr i8, i8* %1, i64 %107
  %110 = getelementptr inbounds i8, i8* %30, i64 %107
  %111 = bitcast i8* %109 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !8
  %113 = getelementptr i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !8
  %116 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !11, !noalias !8
  %117 = getelementptr inbounds i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !11, !noalias !8
  %119 = add i64 %107, 32
  %120 = add i64 %108, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %106, !llvm.loop !15

122:                                              ; preds = %106, %103
  %123 = icmp eq i64 %34, %45
  br i1 %123, label %166, label %124

124:                                              ; preds = %122, %38, %36
  %125 = phi i8* [ %1, %38 ], [ %1, %36 ], [ %46, %122 ]
  %126 = phi i64 [ 0, %38 ], [ 0, %36 ], [ %45, %122 ]
  %127 = xor i64 %126, -1
  %128 = add nsw i64 %34, %127
  %129 = and i64 %34, 3
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %141, label %131

131:                                              ; preds = %124, %131
  %132 = phi i8* [ %137, %131 ], [ %125, %124 ]
  %133 = phi i64 [ %138, %131 ], [ %126, %124 ]
  %134 = phi i64 [ %139, %131 ], [ %129, %124 ]
  %135 = getelementptr inbounds i8, i8* %30, i64 %133
  %136 = load i8, i8* %132, align 1
  store i8 %136, i8* %135, align 1
  %137 = getelementptr inbounds i8, i8* %132, i64 1
  %138 = add nuw i64 %133, 1
  %139 = add i64 %134, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %131, !llvm.loop !17

141:                                              ; preds = %131, %124
  %142 = phi i8* [ undef, %124 ], [ %137, %131 ]
  %143 = phi i8* [ %125, %124 ], [ %137, %131 ]
  %144 = phi i64 [ %126, %124 ], [ %138, %131 ]
  %145 = icmp ult i64 %128, 3
  br i1 %145, label %166, label %146

146:                                              ; preds = %141, %146
  %147 = phi i8* [ %163, %146 ], [ %143, %141 ]
  %148 = phi i64 [ %164, %146 ], [ %144, %141 ]
  %149 = getelementptr inbounds i8, i8* %30, i64 %148
  %150 = load i8, i8* %147, align 1
  store i8 %150, i8* %149, align 1
  %151 = getelementptr inbounds i8, i8* %147, i64 1
  %152 = add nuw i64 %148, 1
  %153 = getelementptr inbounds i8, i8* %30, i64 %152
  %154 = load i8, i8* %151, align 1
  store i8 %154, i8* %153, align 1
  %155 = getelementptr inbounds i8, i8* %147, i64 2
  %156 = add nuw i64 %148, 2
  %157 = getelementptr inbounds i8, i8* %30, i64 %156
  %158 = load i8, i8* %155, align 1
  store i8 %158, i8* %157, align 1
  %159 = getelementptr inbounds i8, i8* %147, i64 3
  %160 = add nuw i64 %148, 3
  %161 = getelementptr inbounds i8, i8* %30, i64 %160
  %162 = load i8, i8* %159, align 1
  store i8 %162, i8* %161, align 1
  %163 = getelementptr inbounds i8, i8* %147, i64 4
  %164 = add nuw i64 %148, 4
  %165 = icmp eq i64 %164, %34
  br i1 %165, label %166, label %146, !llvm.loop !18

166:                                              ; preds = %141, %146, %122, %28
  %167 = phi i8* [ %1, %28 ], [ %46, %122 ], [ %142, %141 ], [ %163, %146 ]
  %168 = icmp eq i64 %32, 0
  br i1 %168, label %305, label %169

169:                                              ; preds = %22, %166
  %170 = phi i8* [ %1, %22 ], [ %167, %166 ]
  %171 = phi i64 [ %2, %22 ], [ %32, %166 ]
  %172 = phi i8* [ %26, %22 ], [ %33, %166 ]
  %173 = phi i64 [ %25, %22 ], [ 0, %166 ]
  %174 = phi i64 [ %27, %22 ], [ 0, %166 ]
  %175 = icmp ult i64 %171, 32
  br i1 %175, label %262, label %176

176:                                              ; preds = %169
  %177 = getelementptr i8, i8* %172, i64 %171
  %178 = getelementptr i8, i8* %170, i64 %171
  %179 = icmp ult i8* %172, %178
  %180 = icmp ult i8* %170, %177
  %181 = and i1 %179, %180
  br i1 %181, label %262, label %182

182:                                              ; preds = %176
  %183 = and i64 %171, -32
  %184 = getelementptr i8, i8* %170, i64 %183
  %185 = add i64 %183, -32
  %186 = lshr exact i64 %185, 5
  %187 = add nuw nsw i64 %186, 1
  %188 = and i64 %187, 3
  %189 = icmp ult i64 %185, 96
  br i1 %189, label %241, label %190

190:                                              ; preds = %182
  %191 = sub nsw i64 %187, %188
  br label %192

192:                                              ; preds = %192, %190
  %193 = phi i64 [ 0, %190 ], [ %238, %192 ]
  %194 = phi i64 [ %191, %190 ], [ %239, %192 ]
  %195 = getelementptr i8, i8* %170, i64 %193
  %196 = getelementptr inbounds i8, i8* %172, i64 %193
  %197 = bitcast i8* %195 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !19
  %199 = getelementptr i8, i8* %195, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  %201 = load <16 x i8>, <16 x i8>* %200, align 1, !alias.scope !19
  %202 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %202, align 1, !alias.scope !22, !noalias !19
  %203 = getelementptr inbounds i8, i8* %196, i64 16
  %204 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %201, <16 x i8>* %204, align 1, !alias.scope !22, !noalias !19
  %205 = or i64 %193, 32
  %206 = getelementptr i8, i8* %170, i64 %205
  %207 = getelementptr inbounds i8, i8* %172, i64 %205
  %208 = bitcast i8* %206 to <16 x i8>*
  %209 = load <16 x i8>, <16 x i8>* %208, align 1, !alias.scope !19
  %210 = getelementptr i8, i8* %206, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  %212 = load <16 x i8>, <16 x i8>* %211, align 1, !alias.scope !19
  %213 = bitcast i8* %207 to <16 x i8>*
  store <16 x i8> %209, <16 x i8>* %213, align 1, !alias.scope !22, !noalias !19
  %214 = getelementptr inbounds i8, i8* %207, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %212, <16 x i8>* %215, align 1, !alias.scope !22, !noalias !19
  %216 = or i64 %193, 64
  %217 = getelementptr i8, i8* %170, i64 %216
  %218 = getelementptr inbounds i8, i8* %172, i64 %216
  %219 = bitcast i8* %217 to <16 x i8>*
  %220 = load <16 x i8>, <16 x i8>* %219, align 1, !alias.scope !19
  %221 = getelementptr i8, i8* %217, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  %223 = load <16 x i8>, <16 x i8>* %222, align 1, !alias.scope !19
  %224 = bitcast i8* %218 to <16 x i8>*
  store <16 x i8> %220, <16 x i8>* %224, align 1, !alias.scope !22, !noalias !19
  %225 = getelementptr inbounds i8, i8* %218, i64 16
  %226 = bitcast i8* %225 to <16 x i8>*
  store <16 x i8> %223, <16 x i8>* %226, align 1, !alias.scope !22, !noalias !19
  %227 = or i64 %193, 96
  %228 = getelementptr i8, i8* %170, i64 %227
  %229 = getelementptr inbounds i8, i8* %172, i64 %227
  %230 = bitcast i8* %228 to <16 x i8>*
  %231 = load <16 x i8>, <16 x i8>* %230, align 1, !alias.scope !19
  %232 = getelementptr i8, i8* %228, i64 16
  %233 = bitcast i8* %232 to <16 x i8>*
  %234 = load <16 x i8>, <16 x i8>* %233, align 1, !alias.scope !19
  %235 = bitcast i8* %229 to <16 x i8>*
  store <16 x i8> %231, <16 x i8>* %235, align 1, !alias.scope !22, !noalias !19
  %236 = getelementptr inbounds i8, i8* %229, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  store <16 x i8> %234, <16 x i8>* %237, align 1, !alias.scope !22, !noalias !19
  %238 = add i64 %193, 128
  %239 = add i64 %194, -4
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %241, label %192, !llvm.loop !24

241:                                              ; preds = %192, %182
  %242 = phi i64 [ 0, %182 ], [ %238, %192 ]
  %243 = icmp eq i64 %188, 0
  br i1 %243, label %260, label %244

244:                                              ; preds = %241, %244
  %245 = phi i64 [ %257, %244 ], [ %242, %241 ]
  %246 = phi i64 [ %258, %244 ], [ %188, %241 ]
  %247 = getelementptr i8, i8* %170, i64 %245
  %248 = getelementptr inbounds i8, i8* %172, i64 %245
  %249 = bitcast i8* %247 to <16 x i8>*
  %250 = load <16 x i8>, <16 x i8>* %249, align 1, !alias.scope !19
  %251 = getelementptr i8, i8* %247, i64 16
  %252 = bitcast i8* %251 to <16 x i8>*
  %253 = load <16 x i8>, <16 x i8>* %252, align 1, !alias.scope !19
  %254 = bitcast i8* %248 to <16 x i8>*
  store <16 x i8> %250, <16 x i8>* %254, align 1, !alias.scope !22, !noalias !19
  %255 = getelementptr inbounds i8, i8* %248, i64 16
  %256 = bitcast i8* %255 to <16 x i8>*
  store <16 x i8> %253, <16 x i8>* %256, align 1, !alias.scope !22, !noalias !19
  %257 = add i64 %245, 32
  %258 = add i64 %246, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %244, !llvm.loop !25

260:                                              ; preds = %244, %241
  %261 = icmp eq i64 %171, %183
  br i1 %261, label %303, label %262

262:                                              ; preds = %260, %176, %169
  %263 = phi i8* [ %170, %176 ], [ %170, %169 ], [ %184, %260 ]
  %264 = phi i64 [ 0, %176 ], [ 0, %169 ], [ %183, %260 ]
  %265 = xor i64 %264, -1
  %266 = add i64 %171, %265
  %267 = and i64 %171, 3
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %279, label %269

269:                                              ; preds = %262, %269
  %270 = phi i8* [ %275, %269 ], [ %263, %262 ]
  %271 = phi i64 [ %276, %269 ], [ %264, %262 ]
  %272 = phi i64 [ %277, %269 ], [ %267, %262 ]
  %273 = getelementptr inbounds i8, i8* %172, i64 %271
  %274 = load i8, i8* %270, align 1
  store i8 %274, i8* %273, align 1
  %275 = getelementptr inbounds i8, i8* %270, i64 1
  %276 = add nuw i64 %271, 1
  %277 = add i64 %272, -1
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %279, label %269, !llvm.loop !26

279:                                              ; preds = %269, %262
  %280 = phi i8* [ %263, %262 ], [ %275, %269 ]
  %281 = phi i64 [ %264, %262 ], [ %276, %269 ]
  %282 = icmp ult i64 %266, 3
  br i1 %282, label %303, label %283

283:                                              ; preds = %279, %283
  %284 = phi i8* [ %300, %283 ], [ %280, %279 ]
  %285 = phi i64 [ %301, %283 ], [ %281, %279 ]
  %286 = getelementptr inbounds i8, i8* %172, i64 %285
  %287 = load i8, i8* %284, align 1
  store i8 %287, i8* %286, align 1
  %288 = getelementptr inbounds i8, i8* %284, i64 1
  %289 = add nuw i64 %285, 1
  %290 = getelementptr inbounds i8, i8* %172, i64 %289
  %291 = load i8, i8* %288, align 1
  store i8 %291, i8* %290, align 1
  %292 = getelementptr inbounds i8, i8* %284, i64 2
  %293 = add nuw i64 %285, 2
  %294 = getelementptr inbounds i8, i8* %172, i64 %293
  %295 = load i8, i8* %292, align 1
  store i8 %295, i8* %294, align 1
  %296 = getelementptr inbounds i8, i8* %284, i64 3
  %297 = add nuw i64 %285, 3
  %298 = getelementptr inbounds i8, i8* %172, i64 %297
  %299 = load i8, i8* %296, align 1
  store i8 %299, i8* %298, align 1
  %300 = getelementptr inbounds i8, i8* %284, i64 4
  %301 = add nuw i64 %285, 4
  %302 = icmp eq i64 %301, %171
  br i1 %302, label %303, label %283, !llvm.loop !27

303:                                              ; preds = %279, %283, %260
  %304 = icmp eq i64 %174, 0
  br i1 %304, label %305, label %307

305:                                              ; preds = %166, %303
  %306 = load i64, i64* %4, align 8
  br label %321

307:                                              ; preds = %303
  %308 = load i64, i64* %4, align 8
  %309 = and i64 %308, 1
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %315, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %313 = load i8*, i8** %312, align 8
  tail call void @_ZdlPv(i8* %313) #10
  %314 = load i64, i64* %4, align 8
  br label %315

315:                                              ; preds = %307, %311
  %316 = phi i64 [ %308, %307 ], [ %314, %311 ]
  %317 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %318 = bitcast i8** %317 to i64*
  store i64 %174, i64* %318, align 8
  %319 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %173, i64* %319, align 8
  %320 = or i64 %316, 1
  store i64 %320, i64* %4, align 8
  br label %321

321:                                              ; preds = %315, %305
  %322 = phi i64 [ %306, %305 ], [ %320, %315 ]
  %323 = shl i64 %2, 1
  %324 = and i64 %322, 1
  %325 = or i64 %324, %323
  store i64 %325, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv: argument 0"}
!7 = distinct !{!7, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv"}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !16}
!18 = distinct !{!18, !14}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !14}
!25 = distinct !{!25, !16}
!26 = distinct !{!26, !16}
!27 = distinct !{!27, !14}
