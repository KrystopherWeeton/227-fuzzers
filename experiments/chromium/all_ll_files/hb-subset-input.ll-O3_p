; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-subset-input.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-subset-input.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_subset_input_t = type <{ %struct.hb_object_header_t, %struct.hb_set_t*, %struct.hb_set_t*, %struct.hb_set_t*, %struct.hb_set_t*, %struct.hb_set_t*, i8, i8, i8, i8, [4 x i8] }>
%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.hb_set_t = type { %struct.hb_object_header_t, i8, i32, %struct.hb_sorted_vector_t, %struct.hb_vector_t.1 }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t.0 }
%struct.hb_vector_t.0 = type { i32, i32, %"struct.hb_set_t::page_map_t"* }
%"struct.hb_set_t::page_map_t" = type { i32, i32 }
%struct.hb_vector_t.1 = type { i32, i32, %"struct.hb_set_t::page_t"* }
%"struct.hb_set_t::page_t" = type { %struct.hb_vector_size_t }
%struct.hb_vector_size_t = type { [8 x i64] }

$_ZN8hb_set_t15page_for_insertEj = comdat any

$_ZN17hb_lockable_set_tIN20hb_user_data_array_t19hb_user_data_item_tE10hb_mutex_tE4finiERS2_ = comdat any

@__const.hb_subset_input_create_or_fail.default_drop_tables = private unnamed_addr constant [18 x i32] [i32 1836020344, i32 1836020340, i32 1801810552, i32 1801810542, i32 1111577413, i32 1246975046, i32 1146308935, i32 1161970772, i32 1161972803, i32 1161974595, i32 1398163232, i32 1346587732, i32 1280594760, i32 1181049204, i32 1198285172, i32 1198288739, i32 1399417958, i32 1399417964], align 16
@_hb_CrapPool = external hidden global [48 x i64], align 16
@_hb_NullPool = external hidden local_unnamed_addr constant [48 x i64], align 16

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.hb_subset_input_t* @hb_subset_input_create_or_fail() local_unnamed_addr #0 {
  %1 = alloca [18 x i32], align 16
  %2 = tail call noalias i8* @calloc(i64 1, i64 64) #8
  %3 = bitcast i8* %2 to %struct.hb_subset_input_t*
  %4 = icmp eq i8* %2, null
  br i1 %4, label %72, label %5, !prof !2

5:                                                ; preds = %0
  %6 = bitcast i8* %2 to i32*
  store atomic i32 1, i32* %6 monotonic, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 4
  %8 = bitcast i8* %7 to i32*
  store atomic i32 1, i32* %8 monotonic, align 4
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = load atomic i32, i32* %6 monotonic, align 4
  %12 = tail call %struct.hb_set_t* @hb_set_create() #8
  %13 = getelementptr inbounds i8, i8* %2, i64 16
  %14 = bitcast i8* %13 to %struct.hb_set_t**
  store %struct.hb_set_t* %12, %struct.hb_set_t** %14, align 8
  %15 = tail call %struct.hb_set_t* @hb_set_create() #8
  %16 = getelementptr inbounds i8, i8* %2, i64 24
  %17 = bitcast i8* %16 to %struct.hb_set_t**
  store %struct.hb_set_t* %15, %struct.hb_set_t** %17, align 8
  %18 = tail call %struct.hb_set_t* @hb_set_create() #8
  %19 = getelementptr inbounds i8, i8* %2, i64 32
  %20 = bitcast i8* %19 to %struct.hb_set_t**
  store %struct.hb_set_t* %18, %struct.hb_set_t** %20, align 8
  tail call void @hb_set_add_range(%struct.hb_set_t* %18, i32 0, i32 6) #8
  %21 = tail call %struct.hb_set_t* @hb_set_create() #8
  %22 = getelementptr inbounds i8, i8* %2, i64 40
  %23 = bitcast i8* %22 to %struct.hb_set_t**
  store %struct.hb_set_t* %21, %struct.hb_set_t** %23, align 8
  tail call void @hb_set_add(%struct.hb_set_t* %21, i32 1033) #8
  %24 = tail call %struct.hb_set_t* @hb_set_create() #8
  %25 = getelementptr inbounds i8, i8* %2, i64 48
  %26 = bitcast i8* %25 to %struct.hb_set_t**
  store %struct.hb_set_t* %24, %struct.hb_set_t** %26, align 8
  %27 = getelementptr inbounds i8, i8* %2, i64 56
  %28 = bitcast [18 x i32]* %1 to i8*
  %29 = bitcast i8* %27 to i32*
  store i32 0, i32* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %28) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %28, i8* align 16 bitcast ([18 x i32]* @__const.hb_subset_input_create_or_fail.default_drop_tables to i8*), i64 72, i1 false)
  %30 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %24, i64 0, i32 1
  %31 = load i8, i8* %30, align 8, !range !3
  %32 = icmp eq i8 %31, 1
  br i1 %32, label %33, label %71

33:                                               ; preds = %5
  %34 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %24, i64 0, i32 2
  store i32 -1, i32* %34, align 4
  %35 = tail call %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t* %24, i32 1836020344) #8
  %36 = icmp eq %"struct.hb_set_t::page_t"* %35, null
  br i1 %36, label %71, label %37, !prof !2

37:                                               ; preds = %33
  %38 = getelementptr inbounds [18 x i32], [18 x i32]* %1, i64 0, i64 0
  br label %42

39:                                               ; preds = %66
  %40 = tail call %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t* %24, i32 %67) #8
  %41 = icmp eq %"struct.hb_set_t::page_t"* %40, null
  br i1 %41, label %71, label %42, !prof !2

42:                                               ; preds = %37, %39
  %43 = phi %"struct.hb_set_t::page_t"* [ %40, %39 ], [ %35, %37 ]
  %44 = phi i32 [ %64, %39 ], [ 18, %37 ]
  %45 = phi i32* [ %63, %39 ], [ %38, %37 ]
  %46 = phi i32 [ %67, %39 ], [ 1836020344, %37 ]
  %47 = and i32 %46, -512
  %48 = add i32 %46, 512
  %49 = and i32 %48, -512
  br label %50

50:                                               ; preds = %66, %42
  %51 = phi i32 [ %44, %42 ], [ %64, %66 ]
  %52 = phi i32* [ %45, %42 ], [ %63, %66 ]
  %53 = phi i32 [ %46, %42 ], [ %67, %66 ]
  %54 = and i32 %53, 63
  %55 = zext i32 %54 to i64
  %56 = shl i64 1, %55
  %57 = lshr i32 %53, 6
  %58 = and i32 %57, 7
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %43, i64 0, i32 0, i32 0, i64 %59
  %61 = load i64, i64* %60, align 8
  %62 = or i64 %56, %61
  store i64 %62, i64* %60, align 8
  %63 = getelementptr inbounds i32, i32* %52, i64 1
  %64 = add i32 %51, -1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %50
  %67 = load i32, i32* %63, align 4
  %68 = icmp ule i32 %47, %67
  %69 = icmp ult i32 %67, %49
  %70 = and i1 %68, %69
  br i1 %70, label %50, label %39

71:                                               ; preds = %39, %50, %33, %5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %28) #8
  br label %72

72:                                               ; preds = %0, %71
  ret %struct.hb_subset_input_t* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.hb_set_t* @hb_set_create() local_unnamed_addr #2

declare void @hb_set_add_range(%struct.hb_set_t*, i32, i32) local_unnamed_addr #2

declare void @hb_set_add(%struct.hb_set_t*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.hb_subset_input_t* @hb_subset_input_reference(%struct.hb_subset_input_t* returned) local_unnamed_addr #3 {
  %2 = icmp eq %struct.hb_subset_input_t* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i32, i32* %4 monotonic, align 4
  %6 = load atomic i32, i32* %4 monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %3
  %9 = atomicrmw add i32* %4, i32 1 acq_rel
  br label %10

10:                                               ; preds = %1, %3, %8
  ret %struct.hb_subset_input_t* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @hb_subset_input_destroy(%struct.hb_subset_input_t*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.hb_subset_input_t* %0, null
  br i1 %2, label %35, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i32, i32* %4 monotonic, align 4
  %6 = load atomic i32, i32* %4 monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %35, label %8, !prof !2

8:                                                ; preds = %3
  %9 = atomicrmw add i32* %4, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %35

11:                                               ; preds = %8
  store atomic i32 -57005, i32* %4 monotonic, align 4
  %12 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 0, i32 2
  %13 = bitcast %struct.hb_atomic_ptr_t* %12 to i64*
  %14 = load atomic i64, i64* %13 acquire, align 8
  %15 = inttoptr i64 %14 to %struct.hb_user_data_array_t*
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %15, i64 0, i32 1
  %19 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %15, i64 0, i32 0
  tail call void @_ZN17hb_lockable_set_tIN20hb_user_data_array_t19hb_user_data_item_tE10hb_mutex_tE4finiERS2_(%struct.hb_lockable_set_t* %18, %struct.hb_mutex_t* dereferenceable(40) %19) #8
  %20 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %15, i64 0, i32 0, i32 0
  %21 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %20) #8
  %22 = inttoptr i64 %14 to i8*
  tail call void @free(i8* %22) #8
  br label %23

23:                                               ; preds = %17, %11
  %24 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 1
  %25 = load %struct.hb_set_t*, %struct.hb_set_t** %24, align 8
  tail call void @hb_set_destroy(%struct.hb_set_t* %25) #8
  %26 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 2
  %27 = load %struct.hb_set_t*, %struct.hb_set_t** %26, align 8
  tail call void @hb_set_destroy(%struct.hb_set_t* %27) #8
  %28 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 3
  %29 = load %struct.hb_set_t*, %struct.hb_set_t** %28, align 8
  tail call void @hb_set_destroy(%struct.hb_set_t* %29) #8
  %30 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 4
  %31 = load %struct.hb_set_t*, %struct.hb_set_t** %30, align 8
  tail call void @hb_set_destroy(%struct.hb_set_t* %31) #8
  %32 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 5
  %33 = load %struct.hb_set_t*, %struct.hb_set_t** %32, align 8
  tail call void @hb_set_destroy(%struct.hb_set_t* %33) #8
  %34 = bitcast %struct.hb_subset_input_t* %0 to i8*
  tail call void @free(i8* %34) #8
  br label %35

35:                                               ; preds = %1, %8, %3, %23
  ret void
}

declare void @hb_set_destroy(%struct.hb_set_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.hb_set_t* @hb_subset_input_unicode_set(%struct.hb_subset_input_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 1
  %3 = load %struct.hb_set_t*, %struct.hb_set_t** %2, align 8
  ret %struct.hb_set_t* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.hb_set_t* @hb_subset_input_glyph_set(%struct.hb_subset_input_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 2
  %3 = load %struct.hb_set_t*, %struct.hb_set_t** %2, align 8
  ret %struct.hb_set_t* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.hb_set_t* @hb_subset_input_nameid_set(%struct.hb_subset_input_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 3
  %3 = load %struct.hb_set_t*, %struct.hb_set_t** %2, align 8
  ret %struct.hb_set_t* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.hb_set_t* @hb_subset_input_namelangid_set(%struct.hb_subset_input_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 4
  %3 = load %struct.hb_set_t*, %struct.hb_set_t** %2, align 8
  ret %struct.hb_set_t* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.hb_set_t* @hb_subset_input_drop_tables_set(%struct.hb_subset_input_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 5
  %3 = load %struct.hb_set_t*, %struct.hb_set_t** %2, align 8
  ret %struct.hb_set_t* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @hb_subset_input_set_drop_hints(%struct.hb_subset_input_t* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 6
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @hb_subset_input_get_drop_hints(%struct.hb_subset_input_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = zext i8 %3 to i32
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @hb_subset_input_set_desubroutinize(%struct.hb_subset_input_t* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 7
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @hb_subset_input_get_desubroutinize(%struct.hb_subset_input_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = zext i8 %3 to i32
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @hb_subset_input_set_retain_gids(%struct.hb_subset_input_t* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 8
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @hb_subset_input_get_retain_gids(%struct.hb_subset_input_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 2, !range !3
  %4 = zext i8 %3 to i32
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @hb_subset_input_set_name_legacy(%struct.hb_subset_input_t* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 9
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @hb_subset_input_get_name_legacy(%struct.hb_subset_input_t* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.hb_subset_input_t, %struct.hb_subset_input_t* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = zext i8 %3 to i32
  ret i32 %4
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = lshr i32 %1, 9
  %4 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 3, i32 0, i32 2
  %7 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %8 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %33, label %11

11:                                               ; preds = %2
  %12 = add nsw i32 %9, -1
  br label %13

13:                                               ; preds = %29, %11
  %14 = phi i32 [ %12, %11 ], [ %31, %29 ]
  %15 = phi i32 [ 0, %11 ], [ %30, %29 ]
  %16 = add i32 %15, %14
  %17 = lshr i32 %16, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %7, i64 %18, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %3, %20
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %13
  %24 = add nsw i32 %17, -1
  br label %29

25:                                               ; preds = %13
  %26 = icmp eq i32 %21, 0
  br i1 %26, label %199, label %27

27:                                               ; preds = %25
  %28 = add nuw nsw i32 %17, 1
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i32 [ %15, %23 ], [ %28, %27 ]
  %31 = phi i32 [ %24, %23 ], [ %14, %27 ]
  %32 = icmp sgt i32 %30, %31
  br i1 %32, label %33, label %13

33:                                               ; preds = %29, %2
  %34 = phi i32 [ 0, %2 ], [ %30, %29 ]
  %35 = add i32 %5, 1
  %36 = icmp eq i32 %5, -1
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 1
  %39 = load i8, i8* %38, align 8, !range !3
  %40 = icmp eq i8 %39, 1
  br i1 %40, label %41, label %222, !prof !4

41:                                               ; preds = %33, %37
  %42 = icmp sgt i32 %35, 0
  %43 = select i1 %42, i32 %35, i32 0
  %44 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %159, label %47, !prof !2

47:                                               ; preds = %41
  %48 = icmp ult i32 %45, %43
  br i1 %48, label %49, label %70, !prof !2

49:                                               ; preds = %47, %49
  %50 = phi i32 [ %53, %49 ], [ %45, %47 ]
  %51 = lshr i32 %50, 1
  %52 = add i32 %50, 8
  %53 = add i32 %52, %51
  %54 = icmp ugt i32 %53, %43
  br i1 %54, label %55, label %49

55:                                               ; preds = %49
  %56 = icmp uge i32 %53, %45
  %57 = icmp ult i32 %53, 67108863
  %58 = and i1 %56, %57
  br i1 %58, label %59, label %67, !prof !5

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %61 = bitcast %"struct.hb_set_t::page_t"** %60 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = zext i32 %53 to i64
  %64 = shl nuw nsw i64 %63, 6
  %65 = tail call i8* @realloc(i8* %62, i64 %64) #8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %68, !prof !2

67:                                               ; preds = %59, %55
  store i32 -1, i32* %44, align 8
  br label %159

68:                                               ; preds = %59
  store i8* %65, i8** %61, align 8
  store i32 %53, i32* %44, align 8
  %69 = load i32, i32* %4, align 4
  br label %70

70:                                               ; preds = %68, %47
  %71 = phi i32 [ %69, %68 ], [ %5, %47 ]
  %72 = icmp ugt i32 %43, %71
  br i1 %72, label %73, label %82

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %75 = load %"struct.hb_set_t::page_t"*, %"struct.hb_set_t::page_t"** %74, align 8
  %76 = zext i32 %71 to i64
  %77 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %75, i64 %76
  %78 = bitcast %"struct.hb_set_t::page_t"* %77 to i8*
  %79 = sub i32 %43, %71
  %80 = zext i32 %79 to i64
  %81 = shl nuw nsw i64 %80, 6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %81, i1 false) #8
  br label %82

82:                                               ; preds = %73, %70
  store i32 %43, i32* %4, align 4
  %83 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 3, i32 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = icmp slt i32 %84, 0
  br i1 %85, label %118, label %86, !prof !2

86:                                               ; preds = %82
  %87 = icmp ult i32 %84, %43
  br i1 %87, label %88, label %107, !prof !2

88:                                               ; preds = %86, %88
  %89 = phi i32 [ %92, %88 ], [ %84, %86 ]
  %90 = lshr i32 %89, 1
  %91 = add i32 %89, 8
  %92 = add i32 %91, %90
  %93 = icmp ugt i32 %92, %43
  br i1 %93, label %94, label %88

94:                                               ; preds = %88
  %95 = icmp uge i32 %92, %84
  %96 = icmp ult i32 %92, 536870911
  %97 = and i1 %95, %96
  br i1 %97, label %98, label %105, !prof !5

98:                                               ; preds = %94
  %99 = bitcast %"struct.hb_set_t::page_map_t"** %6 to i8**
  %100 = load i8*, i8** %99, align 8
  %101 = zext i32 %92 to i64
  %102 = shl nuw nsw i64 %101, 3
  %103 = tail call i8* @realloc(i8* %100, i64 %102) #8
  %104 = icmp eq i8* %103, null
  br i1 %104, label %105, label %106, !prof !2

105:                                              ; preds = %98, %94
  store i32 -1, i32* %83, align 8
  br label %118

106:                                              ; preds = %98
  store i8* %103, i8** %99, align 8
  store i32 %92, i32* %83, align 8
  br label %107

107:                                              ; preds = %106, %86
  %108 = load i32, i32* %8, align 4
  %109 = icmp ugt i32 %43, %108
  br i1 %109, label %110, label %161

110:                                              ; preds = %107
  %111 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %112 = zext i32 %108 to i64
  %113 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %111, i64 %112
  %114 = bitcast %"struct.hb_set_t::page_map_t"* %113 to i8*
  %115 = sub i32 %43, %108
  %116 = zext i32 %115 to i64
  %117 = shl nuw nsw i64 %116, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %114, i8 0, i64 %117, i1 false) #8
  br label %161

118:                                              ; preds = %82, %105
  %119 = load i32, i32* %44, align 8
  %120 = load i32, i32* %8, align 4
  %121 = icmp sgt i32 %120, 0
  %122 = select i1 %121, i32 %120, i32 0
  %123 = icmp slt i32 %119, 0
  br i1 %123, label %159, label %124, !prof !2

124:                                              ; preds = %118
  %125 = icmp ult i32 %119, %122
  br i1 %125, label %126, label %146, !prof !2

126:                                              ; preds = %124, %126
  %127 = phi i32 [ %130, %126 ], [ %119, %124 ]
  %128 = lshr i32 %127, 1
  %129 = add i32 %127, 8
  %130 = add i32 %129, %128
  %131 = icmp ugt i32 %130, %122
  br i1 %131, label %132, label %126

132:                                              ; preds = %126
  %133 = icmp uge i32 %130, %119
  %134 = icmp ult i32 %130, 67108863
  %135 = and i1 %133, %134
  br i1 %135, label %136, label %144, !prof !5

136:                                              ; preds = %132
  %137 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %138 = bitcast %"struct.hb_set_t::page_t"** %137 to i8**
  %139 = load i8*, i8** %138, align 8
  %140 = zext i32 %130 to i64
  %141 = shl nuw nsw i64 %140, 6
  %142 = tail call i8* @realloc(i8* %139, i64 %141) #8
  %143 = icmp eq i8* %142, null
  br i1 %143, label %144, label %145, !prof !2

144:                                              ; preds = %136, %132
  store i32 -1, i32* %44, align 8
  br label %159

145:                                              ; preds = %136
  store i8* %142, i8** %138, align 8
  store i32 %130, i32* %44, align 8
  br label %146

146:                                              ; preds = %145, %124
  %147 = load i32, i32* %4, align 4
  %148 = icmp ugt i32 %122, %147
  br i1 %148, label %149, label %158

149:                                              ; preds = %146
  %150 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %151 = load %"struct.hb_set_t::page_t"*, %"struct.hb_set_t::page_t"** %150, align 8
  %152 = zext i32 %147 to i64
  %153 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %151, i64 %152
  %154 = bitcast %"struct.hb_set_t::page_t"* %153 to i8*
  %155 = sub i32 %122, %147
  %156 = zext i32 %155 to i64
  %157 = shl nuw nsw i64 %156, 6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 %157, i1 false) #8
  br label %158

158:                                              ; preds = %149, %146
  store i32 %122, i32* %4, align 4
  br label %159

159:                                              ; preds = %67, %41, %118, %144, %158
  %160 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 1
  store i8 0, i8* %160, align 8
  br label %222

161:                                              ; preds = %107, %110
  store i32 %43, i32* %8, align 4
  %162 = load i32, i32* %4, align 4
  %163 = icmp ugt i32 %162, %5
  br i1 %163, label %165, label %164, !prof !4

164:                                              ; preds = %161
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 64, i1 false) #8
  br label %170

165:                                              ; preds = %161
  %166 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %167 = load %"struct.hb_set_t::page_t"*, %"struct.hb_set_t::page_t"** %166, align 8
  %168 = zext i32 %5 to i64
  %169 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %167, i64 %168
  br label %170

170:                                              ; preds = %164, %165
  %171 = phi %"struct.hb_set_t::page_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_set_t::page_t"*), %164 ], [ %169, %165 ]
  %172 = bitcast %"struct.hb_set_t::page_t"* %171 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %172, i8 0, i64 64, i1 false) #8
  %173 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %174 = zext i32 %34 to i64
  %175 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %173, i64 %174
  %176 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %175, i64 1
  %177 = bitcast %"struct.hb_set_t::page_map_t"* %176 to i8*
  %178 = bitcast %"struct.hb_set_t::page_map_t"* %175 to i8*
  %179 = load i32, i32* %8, align 4
  %180 = xor i32 %34, 536870911
  %181 = add i32 %179, %180
  %182 = shl i32 %181, 3
  %183 = zext i32 %182 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %177, i8* align 4 %178, i64 %183, i1 false)
  %184 = load i32, i32* %8, align 4
  %185 = icmp ugt i32 %184, %34
  br i1 %185, label %188, label %186, !prof !4

186:                                              ; preds = %170
  %187 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %187, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %191

188:                                              ; preds = %170
  %189 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %190 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %189, i64 %174
  br label %191

191:                                              ; preds = %186, %188
  %192 = phi %"struct.hb_set_t::page_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_set_t::page_map_t"*), %186 ], [ %190, %188 ]
  %193 = bitcast %"struct.hb_set_t::page_map_t"* %192 to i64*
  %194 = zext i32 %5 to i64
  %195 = shl nuw i64 %194, 32
  %196 = zext i32 %3 to i64
  %197 = or i64 %195, %196
  store i64 %197, i64* %193, align 4
  %198 = load i32, i32* %8, align 4
  br label %199

199:                                              ; preds = %25, %191
  %200 = phi i32 [ %198, %191 ], [ %9, %25 ]
  %201 = phi i32 [ %34, %191 ], [ %17, %25 ]
  %202 = icmp ugt i32 %200, %201
  br i1 %202, label %207, label %203, !prof !4

203:                                              ; preds = %199
  %204 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %204, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %205 = lshr i64 %204, 32
  %206 = trunc i64 %205 to i32
  br label %212

207:                                              ; preds = %199
  %208 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %209 = zext i32 %201 to i64
  %210 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %208, i64 %209, i32 1
  %211 = load i32, i32* %210, align 4
  br label %212

212:                                              ; preds = %203, %207
  %213 = phi i32 [ %206, %203 ], [ %211, %207 ]
  %214 = load i32, i32* %4, align 4
  %215 = icmp ugt i32 %214, %213
  br i1 %215, label %217, label %216, !prof !4

216:                                              ; preds = %212
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 64, i1 false) #8
  br label %222

217:                                              ; preds = %212
  %218 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %219 = load %"struct.hb_set_t::page_t"*, %"struct.hb_set_t::page_t"** %218, align 8
  %220 = zext i32 %213 to i64
  %221 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %219, i64 %220
  br label %222

222:                                              ; preds = %37, %159, %217, %216
  %223 = phi %"struct.hb_set_t::page_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_set_t::page_t"*), %216 ], [ %221, %217 ], [ null, %159 ], [ null, %37 ]
  ret %"struct.hb_set_t::page_t"* %223
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17hb_lockable_set_tIN20hb_user_data_array_t19hb_user_data_item_tE10hb_mutex_tE4finiERS2_(%struct.hb_lockable_set_t*, %struct.hb_mutex_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 2
  %8 = bitcast %"struct.hb_user_data_array_t::hb_user_data_item_t"** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #8
  %10 = bitcast %struct.hb_lockable_set_t* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #8
  br label %41

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.hb_mutex_t, %struct.hb_mutex_t* %1, i64 0, i32 0
  %13 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %12) #8
  %14 = load i32, i32* %3, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %35, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 2
  br label %18

18:                                               ; preds = %16, %31
  %19 = phi i32 [ %14, %16 ], [ %33, %31 ]
  %20 = add i32 %19, -1
  %21 = load %"struct.hb_user_data_array_t::hb_user_data_item_t"*, %"struct.hb_user_data_array_t::hb_user_data_item_t"** %17, align 8
  %22 = zext i32 %20 to i64
  %23 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %21, i64 %22, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %21, i64 %22, i32 2
  %26 = load void (i8*)*, void (i8*)** %25, align 8
  %27 = add i32 %19, -1
  store i32 %27, i32* %3, align 4, !noalias !6
  %28 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #8
  %29 = icmp eq void (i8*)* %26, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %18
  tail call void %26(i8* %24) #8
  br label %31

31:                                               ; preds = %18, %30
  %32 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %12) #8
  %33 = load i32, i32* %3, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %18

35:                                               ; preds = %31, %11
  %36 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 2
  %37 = bitcast %"struct.hb_user_data_array_t::hb_user_data_item_t"** %36 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @free(i8* %38) #8
  %39 = bitcast %struct.hb_lockable_set_t* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #8
  %40 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #8
  br label %41

41:                                               ; preds = %35, %6
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 4000000, i32 4001}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN11hb_vector_tIN20hb_user_data_array_t19hb_user_data_item_tEE3popEv: argument 0"}
!8 = distinct !{!8, !"_ZN11hb_vector_tIN20hb_user_data_array_t19hb_user_data_item_tEE3popEv"}
