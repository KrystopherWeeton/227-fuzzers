; ModuleID = '../../third_party/skia/src/gpu/ops/GrDrawAtlasOp.cpp'
source_filename = "../../third_party/skia/src/gpu/ops/GrDrawAtlasOp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%"struct.std::__1::atomic.154" = type { %"struct.std::__1::__atomic_base.155" }
%"struct.std::__1::__atomic_base.155" = type { %"struct.std::__1::__atomic_base.156" }
%"struct.std::__1::__atomic_base.156" = type { %"struct.std::__1::__cxx_atomic_impl.157" }
%"struct.std::__1::__cxx_atomic_impl.157" = type { %"struct.std::__1::__cxx_atomic_base_impl.158" }
%"struct.std::__1::__cxx_atomic_base_impl.158" = type { i32 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrOp* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.2", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.12, %class.SkTArray.21, %class.SkTArray.23, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.5"*, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.23, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.24 }
%class.sk_sp.24 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.12 = type { %class.SkTHashTable.13 }
%class.SkTHashTable.13 = type { i32, i32, %class.SkAutoTArray.14 }
%class.SkAutoTArray.14 = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.65" }
%"struct.std::__1::pair.65" = type { i32, %class.SkTArray.66* }
%class.SkTArray.66 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.21 = type { %"class.std::__1::unique_ptr.22"*, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.66, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.23 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.37 }
%class.SkFibBlockSizes.37 = type { i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.56 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.56 = type { %"class.std::__1::unique_ptr.53"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRSXform = type { float, float, float, float }
%class.GrProcessorSet = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"union.GrProcessorSet::XP", i8, [7 x i8] }>
%"union.GrProcessorSet::XP" = type { %class.GrXPFactory* }
%"class.(anonymous namespace)::DrawAtlasOp" = type { %class.GrMeshDrawOp, %class.SkSTArray.72, %class.GrSimpleMeshDrawOpHelper, %class.SkMatrix, %struct.SkRGBA4f, i32, i8, %struct.GrSimpleMesh*, %class.GrProgramInfo* }
%class.GrMeshDrawOp = type { %class.GrDrawOp }
%class.GrDrawOp = type { %class.GrOp }
%class.SkSTArray.72 = type { %class.SkAlignedSTStorage.73, %class.SkTArray.74 }
%class.SkAlignedSTStorage.73 = type { [32 x i8] }
%class.SkTArray.74 = type { %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"*, i64 }
%"struct.(anonymous namespace)::DrawAtlasOp::Geometry" = type { %struct.SkRGBA4f, %class.SkTArray.75 }
%class.SkTArray.75 = type { i8*, i64 }
%class.GrSimpleMeshDrawOpHelper = type <{ %class.GrProcessorSet*, i8, i8, [6 x i8] }>
%struct.GrSimpleMesh = type { %class.sk_sp.76, i32, i32, i32, i32, i16, i16, i8, %class.sk_sp.76, i32, i32 }
%class.sk_sp.76 = type { %class.GrBuffer* }
%class.GrBuffer = type { i32 (...)** }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.128, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.78, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.78 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.79, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.121" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.79 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.83 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.80, [4 x i8] }>
%union.anon.80 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.81, i8* }
%class.sk_sp.81 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.82, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.82 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.83 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.84, void (i8*)*, i8* }
%class.SkNVRefCnt.84 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.79, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.118, %class.sk_sp.120, %class.sk_sp.120 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.93, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.109, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.85 }
%class.SkTHashTable.85 = type { i32, i32, %class.SkAutoTArray.86 }
%class.SkAutoTArray.86 = type { %"class.std::__1::unique_ptr.87" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.93 = type { %class.SkTHashTable.94 }
%class.SkTHashTable.94 = type { i32, i32, %class.SkAutoTArray.95 }
%class.SkAutoTArray.95 = type { %"class.std::__1::unique_ptr.96" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.102, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.102 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.103" }
%"struct.std::__1::atomic.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__cxx_atomic_impl.106" }
%"struct.std::__1::__cxx_atomic_impl.106" = type { %"struct.std::__1::__cxx_atomic_base_impl.107" }
%"struct.std::__1::__cxx_atomic_base_impl.107" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.108, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.108 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.109 = type { %class.SkTHashTable.110 }
%class.SkTHashTable.110 = type { i32, i32, %class.SkAutoTArray.111 }
%class.SkAutoTArray.111 = type { %"class.std::__1::unique_ptr.112" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.118 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.119, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.119 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.120 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__atomic_base.123" }
%"struct.std::__1::__atomic_base.123" = type { %"struct.std::__1::__cxx_atomic_impl.124" }
%"struct.std::__1::__cxx_atomic_impl.124" = type { %"struct.std::__1::__cxx_atomic_base_impl.125" }
%"struct.std::__1::__cxx_atomic_base_impl.125" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.126 }
%union.anon.126 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.127, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.127 = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.128 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.129"*, [24 x i8] }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %class.GrFragmentProcessor* }
%class.GrSwizzle = type { i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.135, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.135 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::function.136" = type opaque
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.53" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.149, %class.SkArenaAllocList.150, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.153*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.137, %class.sk_sp.139, %class.sk_sp.144, %class.GrGpu*, i32, i8* }
%class.SkTArray.137 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.138 }
%class.sk_sp.138 = type { %class.GrBuffer* }
%class.sk_sp.139 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef.140, [4 x i8], %"class.std::__1::unique_ptr.141", i32, [4 x i8] }>
%class.GrNonAtomicRef.140 = type { i32 }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.144, i8, [7 x i8] }>
%class.sk_sp.144 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.145, i8*, i64 }
%class.GrNonAtomicRef.145 = type { i32 }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.149 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.150 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%class.GrDeferredUploadToken = type { i64 }
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.151, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.sk_sp.151 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.152, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.152 = type { %"struct.std::__1::atomic" }
%class.SkTArray.153 = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.76, %class.sk_sp.76, %class.sk_sp.76, i32, i32 }
%class.GrRenderTarget = type opaque
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%class.GrProcessorAnalysisColor = type { i32, %struct.SkRGBA4f }
%"struct.GrDefaultGeoProcFactory::Color" = type { i32, %struct.SkRGBA4f }
%"struct.GrDefaultGeoProcFactory::Coverage" = type <{ i32, i8, [3 x i8] }>
%"struct.GrDefaultGeoProcFactory::LocalCoords" = type { i32, %class.SkMatrix* }
%"class.GrMeshDrawOp::QuadHelper" = type { %"class.GrMeshDrawOp::PatternHelper.base", [7 x i8] }
%"class.GrMeshDrawOp::PatternHelper.base" = type <{ i8*, %struct.GrSimpleMesh*, i8 }>

$_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN8SkTArrayIhLb1EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZN4GrOpD2Ev = comdat any

$_ZN4GrOpD0Ev = comdat any

$_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps = comdat any

$_ZTV4GrOp = comdat any

@_ZTVN12_GLOBAL__N_111DrawAtlasOpE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::DrawAtlasOp"*)* @_ZN12_GLOBAL__N_111DrawAtlasOpD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DrawAtlasOp"*)* @_ZN12_GLOBAL__N_111DrawAtlasOpD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::DrawAtlasOp"*)* @_ZNK12_GLOBAL__N_111DrawAtlasOp4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DrawAtlasOp"*, %"class.std::__1::function.136"*)* @_ZNK12_GLOBAL__N_111DrawAtlasOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::DrawAtlasOp"*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN12_GLOBAL__N_111DrawAtlasOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DrawAtlasOp"*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN12_GLOBAL__N_111DrawAtlasOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::DrawAtlasOp"*)* @_ZNK12_GLOBAL__N_111DrawAtlasOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::DrawAtlasOp"*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN12_GLOBAL__N_111DrawAtlasOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%"class.(anonymous namespace)::DrawAtlasOp"*)* @_ZN12_GLOBAL__N_111DrawAtlasOp11programInfoEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DrawAtlasOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_111DrawAtlasOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%"class.(anonymous namespace)::DrawAtlasOp"*, %"class.GrMeshDrawOp::Target"*)* @_ZN12_GLOBAL__N_111DrawAtlasOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@__const.DrawAtlasOp.bounds = private unnamed_addr constant %struct.SkRect { float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000, float 0xC7EFFFFFE0000000, float 0xC7EFFFFFE0000000 }, align 4
@_ZZN12_GLOBAL__N_111DrawAtlasOp7ClassIDEvE8kClassID = internal unnamed_addr global i32 0, align 4
@_ZGVZN12_GLOBAL__N_111DrawAtlasOp7ClassIDEvE8kClassID = internal global i64 0, align 8
@_ZN4GrOp14gCurrOpClassIDE = external global %"struct.std::__1::atomic.154", align 4
@.str = private unnamed_addr constant [42 x i8] c"../../third_party/skia/src/gpu/ops/GrOp.h\00", align 1
@.str.1 = private unnamed_addr constant [80 x i8] c"This should never wrap as it should only be called once for each GrOp subclass.\00", align 1
@_ZTV4GrOp = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD2Ev to i8*), i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOp*, %"class.std::__1::function.136"*)* @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [12 x i8] c"DrawAtlasOp\00", align 1
@_ZN21GrUserStencilSettings7kUnusedE = external local_unnamed_addr constant %struct.GrUserStencilSettings*, align 8
@.str.3 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/ops/GrDrawAtlasOp.cpp\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"Could not allocate vertices\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %class.GrOp* @_ZN13GrDrawAtlasOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrix8GrAATypeiPK9SkRSXformPK6SkRectPKj(%class.GrRecordingContext* nocapture readnone, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), i32, i32, %struct.SkRSXform*, %struct.SkRect*, i32*) local_unnamed_addr #0 {
  %9 = alloca %struct.SkRGBA4f, align 4
  %10 = bitcast %struct.SkRGBA4f* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %12 = bitcast %struct.SkRGBA4f* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8* align 4 %12, i64 16, i1 false) #14
  %13 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %8
  %17 = tail call i8* @_Znwm(i64 192) #15
  br label %22

18:                                               ; preds = %8
  %19 = tail call i8* @_Znwm(i64 224) #14
  %20 = getelementptr inbounds i8, i8* %19, i64 192
  %21 = bitcast i8* %20 to %class.GrProcessorSet*
  tail call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %21, %class.GrPaint* dereferenceable(48) %1) #14
  br label %22

22:                                               ; preds = %16, %18
  %23 = phi i8* [ %17, %16 ], [ %19, %18 ]
  %24 = phi %class.GrProcessorSet* [ null, %16 ], [ %21, %18 ]
  %25 = bitcast i8* %23 to %"class.(anonymous namespace)::DrawAtlasOp"*
  call fastcc void @_ZN12_GLOBAL__N_111DrawAtlasOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrix8GrAATypeiPK9SkRSXformPK6SkRectPKj(%"class.(anonymous namespace)::DrawAtlasOp"* nonnull %25, %class.GrProcessorSet* %24, %struct.SkRGBA4f* nonnull dereferenceable(16) %9, %class.SkMatrix* dereferenceable(40) %2, i32 %3, i32 %4, %struct.SkRSXform* %5, %struct.SkRect* %6, i32* %7) #14
  %26 = bitcast i8* %23 to %class.GrOp*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret %class.GrOp* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_111DrawAtlasOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrix8GrAATypeiPK9SkRSXformPK6SkRectPKj(%"class.(anonymous namespace)::DrawAtlasOp"*, %class.GrProcessorSet*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, i32, %struct.SkRSXform*, %struct.SkRect* nocapture readonly, i32*) unnamed_addr #3 align 2 {
  %10 = alloca %struct.SkRect, align 4
  %11 = alloca [4 x %struct.SkPoint], align 16
  %12 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 0
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_111DrawAtlasOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %23, !prof !3

15:                                               ; preds = %9
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_111DrawAtlasOp7ClassIDEvE8kClassID) #14
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %15
  %19 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.154", %"struct.std::__1::atomic.154"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

22:                                               ; preds = %18
  store i32 %19, i32* @_ZZN12_GLOBAL__N_111DrawAtlasOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_111DrawAtlasOp7ClassIDEvE8kClassID) #14
  br label %23

23:                                               ; preds = %9, %15, %22
  %24 = load i32, i32* @_ZZN12_GLOBAL__N_111DrawAtlasOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %12, i32 %24) #14
  %25 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_111DrawAtlasOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 1, i32 0, i32 0, i64 32
  %27 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 1, i32 0, i32 0, i64 0
  %28 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 1, i32 0, i32 0, i64 40
  %29 = bitcast i8* %28 to i64*
  %30 = bitcast i8* %26 to i8**
  store i8* %27, i8** %30, align 8
  store i64 8589934592, i64* %29, align 8
  %31 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper* %31, %class.GrProcessorSet* %1, i32 %4, i8 zeroext 0) #14
  %32 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 3
  %33 = bitcast %class.SkMatrix* %32 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %33, align 4
  %34 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 3, i32 0, i64 4
  %35 = bitcast float* %34 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %35, align 4
  %36 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 3, i32 0, i64 8
  store float 1.000000e+00, float* %36, align 4
  %37 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 3, i32 1
  store i32 16, i32* %37, align 4
  %38 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 4
  %39 = bitcast %struct.SkRGBA4f* %38 to i8*
  %40 = bitcast %struct.SkRGBA4f* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 4 %40, i64 16, i1 false)
  %41 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 7
  %42 = bitcast %class.SkMatrix* %32 to i8*
  %43 = bitcast %class.SkMatrix* %3 to i8*
  %44 = bitcast %struct.GrSimpleMesh** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 4 %43, i64 40, i1 false)
  %45 = bitcast i8* %26 to %class.SkTArray.74*
  tail call fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_111DrawAtlasOp8GeometryELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.74* %45, i32 1) #14
  %46 = bitcast i8* %26 to %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"**
  %47 = load %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"*, %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"** %46, align 8
  %48 = load i64, i64* %29, align 8
  %49 = lshr i64 %48, 1
  %50 = and i64 %49, 2147483647
  %51 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %47, i64 %50
  %52 = add i64 %48, 2
  %53 = and i64 %52, 4294967294
  %54 = and i64 %48, -4294967295
  %55 = or i64 %53, %54
  store i64 %55, i64* %29, align 8
  %56 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %47, i64 %50, i32 1, i32 1
  %57 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %47, i64 %50, i32 1, i32 0
  store i8* null, i8** %57, align 8
  store i64 1, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %51, i64 0, i32 0
  %59 = bitcast %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 4 %40, i64 16, i1 false)
  %60 = icmp ne i32* %8, null
  %61 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 6
  %62 = zext i1 %60 to i8
  store i8 %62, i8* %61, align 4
  %63 = icmp eq i32* %8, null
  %64 = select i1 %63, i64 16, i64 20
  %65 = select i1 %63, i64 8, i64 12
  %66 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 5
  store i32 %5, i32* %66, align 8
  %67 = trunc i64 %64 to i32
  %68 = shl nuw nsw i32 %67, 2
  %69 = mul i32 %68, %5
  %70 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %47, i64 %50, i32 1
  %71 = load i64, i64* %56, align 8
  %72 = and i64 %71, -4294967295
  store i64 %72, i64* %56, align 8
  tail call void @_ZN8SkTArrayIhLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75* %70, i32 %69, i32 0) #14
  %73 = load i64, i64* %56, align 8
  %74 = shl i32 %69, 1
  %75 = zext i32 %74 to i64
  %76 = and i64 %73, -8589934591
  %77 = or i64 %76, %75
  store i64 %77, i64* %56, align 8
  %78 = getelementptr inbounds %class.SkTArray.75, %class.SkTArray.75* %70, i64 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = bitcast %struct.SkRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %80, i8* align 4 bitcast (%struct.SkRect* @__const.DrawAtlasOp.bounds to i8*), i64 16, i1 false)
  %81 = tail call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %58) #14
  %82 = lshr i32 %81, 24
  %83 = icmp sgt i32 %5, 0
  br i1 %83, label %84, label %111

84:                                               ; preds = %23
  %85 = bitcast [4 x %struct.SkPoint]* %11 to i8*
  %86 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 0
  %87 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 0, i32 0
  %88 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 0, i32 1
  %89 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 1
  %90 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %89, i64 0, i32 0
  %91 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 1, i32 1
  %92 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 2
  %93 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %92, i64 0, i32 0
  %94 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 2, i32 1
  %95 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 3
  %96 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %95, i64 0, i32 0
  %97 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 3, i32 1
  %98 = icmp eq i32 %82, 255
  %99 = shl nuw nsw i64 %64, 1
  %100 = mul nuw nsw i64 %64, 3
  %101 = bitcast [4 x %struct.SkPoint]* %11 to i64*
  %102 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 0
  %103 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 2
  %104 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 1
  %105 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 3
  %106 = bitcast %struct.SkPoint* %89 to i64*
  %107 = bitcast %struct.SkPoint* %92 to i64*
  %108 = bitcast %struct.SkPoint* %95 to i64*
  %109 = zext i32 %5 to i64
  %110 = bitcast [4 x %struct.SkPoint]* %11 to i8*
  br label %115

111:                                              ; preds = %161, %23
  %112 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %113 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %3, %struct.SkRect* %112, %struct.SkRect* nonnull dereferenceable(16) %10, i32 1) #14
  %114 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  store i16 0, i16* %114, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #14
  ret void

115:                                              ; preds = %161, %84
  %116 = phi i64 [ 0, %84 ], [ %250, %161 ]
  %117 = phi i8* [ %79, %84 ], [ %249, %161 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %85) #14
  %118 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %6, i64 %116
  %119 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 %116, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %110, i8 -1, i64 32, i1 false)
  %120 = load float, float* %119, align 4
  %121 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 %116, i32 0
  %122 = load float, float* %121, align 4
  %123 = fsub float %120, %122
  %124 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 %116, i32 3
  %125 = load float, float* %124, align 4
  %126 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 %116, i32 1
  %127 = load float, float* %126, align 4
  %128 = fsub float %125, %127
  call void @_ZNK9SkRSXform10toTriStripEffP7SkPoint(%struct.SkRSXform* %118, float %123, float %128, %struct.SkPoint* nonnull %86) #14
  br i1 %63, label %161, label %129

129:                                              ; preds = %115
  %130 = getelementptr inbounds i32, i32* %8, i64 %116
  %131 = load i32, i32* %130, align 4
  br i1 %98, label %142, label %132

132:                                              ; preds = %129
  %133 = lshr i32 %131, 24
  %134 = mul nuw nsw i32 %133, %82
  %135 = add nuw nsw i32 %134, 128
  %136 = lshr i32 %135, 8
  %137 = add nuw nsw i32 %136, %135
  %138 = lshr i32 %137, 8
  %139 = and i32 %131, 16777215
  %140 = shl i32 %138, 24
  %141 = or i32 %140, %139
  br label %142

142:                                              ; preds = %129, %132
  %143 = phi i32 [ %141, %132 ], [ %131, %129 ]
  %144 = call i32 @_Z18SkPreMultiplyColorj(i32 %143) #14
  %145 = lshr i32 %144, 16
  %146 = and i32 %145, 255
  %147 = shl i32 %144, 16
  %148 = and i32 %147, 16711680
  %149 = and i32 %144, -16711936
  %150 = or i32 %146, %149
  %151 = or i32 %150, %148
  %152 = getelementptr inbounds i8, i8* %117, i64 8
  %153 = bitcast i8* %152 to i32*
  store i32 %151, i32* %153, align 4
  %154 = getelementptr inbounds i8, i8* %117, i64 %64
  %155 = getelementptr inbounds i8, i8* %154, i64 8
  %156 = bitcast i8* %155 to i32*
  store i32 %151, i32* %156, align 4
  %157 = getelementptr inbounds i8, i8* %152, i64 %99
  %158 = bitcast i8* %157 to i32*
  store i32 %151, i32* %158, align 4
  %159 = getelementptr inbounds i8, i8* %152, i64 %100
  %160 = bitcast i8* %159 to i32*
  store i32 %151, i32* %160, align 4
  br label %161

161:                                              ; preds = %115, %142
  %162 = bitcast i8* %117 to i64*
  %163 = load i64, i64* %101, align 16
  store i64 %163, i64* %162, align 4
  %164 = bitcast float* %121 to i64*
  %165 = load i64, i64* %164, align 4
  %166 = getelementptr inbounds i8, i8* %117, i64 %65
  %167 = bitcast i8* %166 to i64*
  store i64 %165, i64* %167, align 4
  %168 = load float, float* %102, align 4
  %169 = load float, float* %87, align 16
  %170 = fcmp olt float %168, %169
  %171 = select i1 %170, float %168, float %169
  store float %171, float* %102, align 4
  %172 = load float, float* %103, align 4
  %173 = fcmp olt float %169, %172
  %174 = select i1 %173, float %172, float %169
  store float %174, float* %103, align 4
  %175 = load float, float* %104, align 4
  %176 = load float, float* %88, align 4
  %177 = fcmp olt float %175, %176
  %178 = select i1 %177, float %175, float %176
  store float %178, float* %104, align 4
  %179 = load float, float* %105, align 4
  %180 = fcmp olt float %176, %179
  %181 = select i1 %180, float %179, float %176
  store float %181, float* %105, align 4
  %182 = getelementptr inbounds i8, i8* %117, i64 %64
  %183 = bitcast i8* %182 to i64*
  %184 = load i64, i64* %106, align 8
  store i64 %184, i64* %183, align 4
  %185 = load float, float* %121, align 4
  %186 = load float, float* %124, align 4
  %187 = insertelement <2 x float> undef, float %185, i32 0
  %188 = insertelement <2 x float> %187, float %186, i32 1
  %189 = getelementptr inbounds i8, i8* %182, i64 %65
  %190 = bitcast i8* %189 to <2 x float>*
  store <2 x float> %188, <2 x float>* %190, align 4
  %191 = load float, float* %102, align 4
  %192 = load float, float* %90, align 8
  %193 = fcmp olt float %191, %192
  %194 = select i1 %193, float %191, float %192
  store float %194, float* %102, align 4
  %195 = load float, float* %103, align 4
  %196 = fcmp olt float %192, %195
  %197 = select i1 %196, float %195, float %192
  store float %197, float* %103, align 4
  %198 = load float, float* %104, align 4
  %199 = load float, float* %91, align 4
  %200 = fcmp olt float %198, %199
  %201 = select i1 %200, float %198, float %199
  store float %201, float* %104, align 4
  %202 = load float, float* %105, align 4
  %203 = fcmp olt float %199, %202
  %204 = select i1 %203, float %202, float %199
  store float %204, float* %105, align 4
  %205 = getelementptr inbounds i8, i8* %182, i64 %64
  %206 = bitcast i8* %205 to i64*
  %207 = load i64, i64* %107, align 16
  store i64 %207, i64* %206, align 4
  %208 = load float, float* %119, align 4
  %209 = load float, float* %126, align 4
  %210 = insertelement <2 x float> undef, float %208, i32 0
  %211 = insertelement <2 x float> %210, float %209, i32 1
  %212 = getelementptr inbounds i8, i8* %205, i64 %65
  %213 = bitcast i8* %212 to <2 x float>*
  store <2 x float> %211, <2 x float>* %213, align 4
  %214 = load float, float* %102, align 4
  %215 = load float, float* %93, align 16
  %216 = fcmp olt float %214, %215
  %217 = select i1 %216, float %214, float %215
  store float %217, float* %102, align 4
  %218 = load float, float* %103, align 4
  %219 = fcmp olt float %215, %218
  %220 = select i1 %219, float %218, float %215
  store float %220, float* %103, align 4
  %221 = load float, float* %104, align 4
  %222 = load float, float* %94, align 4
  %223 = fcmp olt float %221, %222
  %224 = select i1 %223, float %221, float %222
  store float %224, float* %104, align 4
  %225 = load float, float* %105, align 4
  %226 = fcmp olt float %222, %225
  %227 = select i1 %226, float %225, float %222
  store float %227, float* %105, align 4
  %228 = getelementptr inbounds i8, i8* %205, i64 %64
  %229 = bitcast i8* %228 to i64*
  %230 = load i64, i64* %108, align 8
  store i64 %230, i64* %229, align 4
  %231 = bitcast float* %119 to i64*
  %232 = load i64, i64* %231, align 4
  %233 = getelementptr inbounds i8, i8* %228, i64 %65
  %234 = bitcast i8* %233 to i64*
  store i64 %232, i64* %234, align 4
  %235 = load float, float* %102, align 4
  %236 = load float, float* %96, align 8
  %237 = fcmp olt float %235, %236
  %238 = select i1 %237, float %235, float %236
  store float %238, float* %102, align 4
  %239 = load float, float* %103, align 4
  %240 = fcmp olt float %236, %239
  %241 = select i1 %240, float %239, float %236
  store float %241, float* %103, align 4
  %242 = load float, float* %104, align 4
  %243 = load float, float* %97, align 4
  %244 = fcmp olt float %242, %243
  %245 = select i1 %244, float %242, float %243
  store float %245, float* %104, align 4
  %246 = load float, float* %105, align 4
  %247 = fcmp olt float %243, %246
  %248 = select i1 %247, float %246, float %243
  store float %248, float* %105, align 4
  %249 = getelementptr inbounds i8, i8* %228, i64 %64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %85) #14
  %250 = add nuw nsw i64 %116, 1
  %251 = icmp eq i64 %250, %109
  br i1 %251, label %111, label %115
}

declare void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp*, i32) unnamed_addr #4

declare void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper*, %class.GrProcessorSet*, i32, i8 zeroext) unnamed_addr #4

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f*) local_unnamed_addr #4

declare void @_ZNK9SkRSXform10toTriStripEffP7SkPoint(%struct.SkRSXform*, float, float, %struct.SkPoint*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111DrawAtlasOpD2Ev(%"class.(anonymous namespace)::DrawAtlasOp"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_111DrawAtlasOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %3) #14
  %4 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 1, i32 0, i32 0, i64 32
  %5 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 1, i32 0, i32 0, i64 40
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 4294967294
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast i8* %4 to %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"**
  br label %16

12:                                               ; preds = %28, %1
  %13 = phi i64 [ %7, %1 ], [ %29, %28 ]
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %37, label %34

16:                                               ; preds = %28, %10
  %17 = phi i64 [ %7, %10 ], [ %29, %28 ]
  %18 = phi i64 [ 0, %10 ], [ %30, %28 ]
  %19 = load %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"*, %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"** %11, align 8
  %20 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %19, i64 %18, i32 1, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %19, i64 %18, i32 1, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_Z7sk_freePv(i8* %26) #14
  %27 = load i64, i64* %6, align 8
  br label %28

28:                                               ; preds = %24, %16
  %29 = phi i64 [ %17, %16 ], [ %27, %24 ]
  %30 = add nuw nsw i64 %18, 1
  %31 = lshr i64 %29, 1
  %32 = and i64 %31, 2147483647
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %16, label %12

34:                                               ; preds = %12
  %35 = bitcast i8* %4 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_Z7sk_freePv(i8* %36) #14
  br label %37

37:                                               ; preds = %12, %34
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %38 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %class.GrOp*, %class.GrOp** %38, align 8
  store %class.GrOp* null, %class.GrOp** %38, align 8
  %40 = icmp eq %class.GrOp* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = bitcast %class.GrOp* %39 to void (%class.GrOp*)***
  %43 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %43, i64 1
  %45 = load void (%class.GrOp*)*, void (%class.GrOp*)** %44, align 8
  tail call void %45(%class.GrOp* nonnull %39) #14
  br label %46

46:                                               ; preds = %37, %41
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111DrawAtlasOpD0Ev(%"class.(anonymous namespace)::DrawAtlasOp"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_111DrawAtlasOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 2
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %3) #14
  %4 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 1, i32 0, i32 0, i64 32
  %5 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 1, i32 0, i32 0, i64 40
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 4294967294
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast i8* %4 to %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"**
  br label %16

12:                                               ; preds = %28, %1
  %13 = phi i64 [ %7, %1 ], [ %29, %28 ]
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %37, label %34

16:                                               ; preds = %28, %10
  %17 = phi i64 [ %7, %10 ], [ %29, %28 ]
  %18 = phi i64 [ 0, %10 ], [ %30, %28 ]
  %19 = load %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"*, %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"** %11, align 8
  %20 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %19, i64 %18, i32 1, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %19, i64 %18, i32 1, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_Z7sk_freePv(i8* %26) #14
  %27 = load i64, i64* %6, align 8
  br label %28

28:                                               ; preds = %24, %16
  %29 = phi i64 [ %17, %16 ], [ %27, %24 ]
  %30 = add nuw nsw i64 %18, 1
  %31 = lshr i64 %29, 1
  %32 = and i64 %31, 2147483647
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %16, label %12

34:                                               ; preds = %12
  %35 = bitcast i8* %4 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_Z7sk_freePv(i8* %36) #14
  br label %37

37:                                               ; preds = %34, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %38 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %class.GrOp*, %class.GrOp** %38, align 8
  store %class.GrOp* null, %class.GrOp** %38, align 8
  %40 = icmp eq %class.GrOp* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = bitcast %class.GrOp* %39 to void (%class.GrOp*)***
  %43 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %43, i64 1
  %45 = load void (%class.GrOp*)*, void (%class.GrOp*)** %44, align 8
  tail call void %45(%class.GrOp* nonnull %39) #14
  br label %46

46:                                               ; preds = %37, %41
  %47 = bitcast %"class.(anonymous namespace)::DrawAtlasOp"* %0 to i8*
  tail call void @_ZdlPv(i8* %47) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_111DrawAtlasOp4nameEv(%"class.(anonymous namespace)::DrawAtlasOp"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_111DrawAtlasOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%"class.(anonymous namespace)::DrawAtlasOp"* nocapture readonly, %"class.std::__1::function.136"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 8
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.136"* %1) #14
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 2, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.136"* %1) #14
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_111DrawAtlasOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%"class.(anonymous namespace)::DrawAtlasOp"*, %class.GrOp*, %class.SkArenaAlloc* nocapture readnone, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 2
  %7 = bitcast %class.GrOp* %6 to %class.GrSimpleMeshDrawOpHelper*
  %8 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %9 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %10 = tail call zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper* %5, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16) %7, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %8, %struct.SkRect* dereferenceable(16) %9, i1 zeroext false) #14
  br i1 %10, label %11, label %153

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 2, i32 2
  %14 = bitcast %class.GrOp** %13 to %class.SkMatrix*
  %15 = icmp eq %class.SkMatrix* %12, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = bitcast %class.SkMatrix* %12 to i8*
  %18 = bitcast %class.GrOp** %13 to i8*
  %19 = tail call i32 @bcmp(i8* %17, i8* %18, i64 36) #14
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %153

21:                                               ; preds = %11, %16
  %22 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 6
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp ne i8 %23, 0
  %25 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 5
  %26 = bitcast i32* %25 to i8*
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp ne i8 %27, 0
  %29 = xor i1 %24, %28
  br i1 %29, label %153, label %30

30:                                               ; preds = %21
  br i1 %24, label %58, label %31

31:                                               ; preds = %30
  %32 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 1
  %33 = bitcast %"class.std::__1::unique_ptr"* %32 to %struct.SkRGBA4f*
  %34 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 4, i32 3
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %33, i64 0, i32 3
  %37 = load float, float* %36, align 4
  %38 = fcmp oeq float %35, %37
  br i1 %38, label %39, label %153

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 4, i32 0
  %41 = load float, float* %40, align 4
  %42 = bitcast %"class.std::__1::unique_ptr"* %32 to float*
  %43 = load float, float* %42, align 4
  %44 = fcmp oeq float %41, %43
  br i1 %44, label %45, label %153

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 4, i32 1
  %47 = load float, float* %46, align 4
  %48 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %33, i64 0, i32 1
  %49 = load float, float* %48, align 4
  %50 = fcmp oeq float %47, %49
  br i1 %50, label %51, label %153

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 4, i32 2
  %53 = load float, float* %52, align 4
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 1
  %55 = bitcast %"class.std::__1::unique_ptr"* %54 to float*
  %56 = load float, float* %55, align 4
  %57 = fcmp une float %53, %56
  br i1 %57, label %153, label %58

58:                                               ; preds = %51, %30
  %59 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 1, i32 0, i32 0, i64 32
  %60 = bitcast i8* %59 to %class.SkTArray.74*
  %61 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 6
  %62 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 6, i32 2
  %63 = bitcast float* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = lshr i64 %64, 1
  %66 = trunc i64 %65 to i32
  %67 = and i32 %66, 2147483647
  %68 = bitcast %struct.SkRect* %61 to %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"**
  %69 = load %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"*, %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"** %68, align 8
  tail call fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_111DrawAtlasOp8GeometryELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.74* %60, i32 %67) #14
  %70 = icmp eq i32 %67, 0
  br i1 %70, label %138, label %71

71:                                               ; preds = %58
  %72 = bitcast i8* %59 to %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"**
  %73 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 1, i32 0, i32 0, i64 40
  %74 = bitcast i8* %73 to i64*
  %75 = zext i32 %67 to i64
  br label %76

76:                                               ; preds = %135, %71
  %77 = phi i64 [ 0, %71 ], [ %136, %135 ]
  %78 = load %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"*, %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"** %72, align 8
  %79 = load i64, i64* %74, align 8
  %80 = lshr i64 %79, 1
  %81 = and i64 %80, 2147483647
  %82 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %78, i64 %81
  %83 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %82, i64 %77
  %84 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %69, i64 %77
  %85 = bitcast %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %83 to i8*
  %86 = bitcast %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #14
  %87 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %69, i64 %77, i32 1, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %69, i64 %77, i32 1, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = lshr i64 %90, 1
  %92 = trunc i64 %91 to i32
  %93 = and i32 %92, 2147483647
  %94 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %83, i64 0, i32 1, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %90, 4294967294
  %97 = and i64 %95, -4294967295
  %98 = or i64 %97, %96
  store i64 %98, i64* %94, align 8
  %99 = icmp eq i32 %93, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %76
  %101 = and i64 %98, 8589934591
  store i64 %101, i64* %94, align 8
  br label %111

102:                                              ; preds = %76
  %103 = icmp ugt i32 %93, 8
  %104 = select i1 %103, i32 %93, i32 8
  %105 = zext i32 %104 to i64
  %106 = shl nuw i64 %105, 33
  %107 = and i64 %98, 8589934591
  %108 = or i64 %106, %107
  store i64 %108, i64* %94, align 8
  %109 = tail call i8* @_Z15sk_malloc_throwmm(i64 %105, i64 1) #14
  %110 = load i64, i64* %94, align 8
  br label %111

111:                                              ; preds = %102, %100
  %112 = phi i64 [ %110, %102 ], [ %101, %100 ]
  %113 = phi i8* [ %109, %102 ], [ null, %100 ]
  %114 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %83, i64 0, i32 1, i32 0
  store i8* %113, i8** %114, align 8
  %115 = and i64 %112, -4294967298
  %116 = or i64 %115, 1
  store i64 %116, i64* %94, align 8
  %117 = and i64 %112, 4294967294
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %111
  %120 = load i8, i8* %88, align 1
  store i8 %120, i8* %113, align 1
  %121 = load i64, i64* %94, align 8
  %122 = and i64 %121, 4294967292
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %135, label %124

124:                                              ; preds = %119, %124
  %125 = phi i64 [ %130, %124 ], [ 1, %119 ]
  %126 = load i8*, i8** %114, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 %125
  %128 = getelementptr inbounds i8, i8* %88, i64 %125
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = add nuw nsw i64 %125, 1
  %131 = load i64, i64* %94, align 8
  %132 = lshr i64 %131, 1
  %133 = and i64 %132, 2147483647
  %134 = icmp ult i64 %130, %133
  br i1 %134, label %124, label %135

135:                                              ; preds = %124, %119, %111
  %136 = add nuw nsw i64 %77, 1
  %137 = icmp eq i64 %136, %75
  br i1 %137, label %138, label %76

138:                                              ; preds = %135, %58
  %139 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 1, i32 0, i32 0, i64 40
  %140 = bitcast i8* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = and i64 %64, 4294967294
  %143 = add i64 %141, %142
  %144 = and i64 %143, 4294967294
  %145 = and i64 %141, -4294967295
  %146 = or i64 %144, %145
  store i64 %146, i64* %140, align 8
  %147 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 3
  %148 = bitcast i16* %147 to i32*
  %149 = load i32, i32* %148, align 8
  %150 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 5
  %151 = load i32, i32* %150, align 8
  %152 = add nsw i32 %151, %149
  store i32 %152, i32* %150, align 8
  br label %153

153:                                              ; preds = %31, %39, %45, %51, %21, %16, %4, %138
  %154 = phi i32 [ 0, %138 ], [ 2, %4 ], [ 2, %16 ], [ 2, %21 ], [ 2, %51 ], [ 2, %45 ], [ 2, %39 ], [ 2, %31 ]
  ret i32 %154
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 comdat align 2 {
  %8 = bitcast %class.GrMeshDrawOp* %0 to void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)***
  %9 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)**, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %9, i64 10
  %11 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %10, align 8
  tail call void %11(%class.GrMeshDrawOp* %0, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #14
  ret void
}

declare void @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState(%class.GrMeshDrawOp*, %class.GrOpFlushState*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111DrawAtlasOp9onExecuteEP14GrOpFlushStateRK6SkRect(%"class.(anonymous namespace)::DrawAtlasOp"* nocapture readonly, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 8
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 7
  %9 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  %10 = icmp eq %struct.GrSimpleMesh* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %13 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %13, %class.GrProgramInfo* nonnull dereferenceable(128) %5, %struct.SkRect* dereferenceable(16) %2) #14
  %14 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %5, i64 0, i32 5
  %15 = load %class.GrPipeline*, %class.GrPipeline** %14, align 8
  %16 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %15, i64 0, i32 5
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 32
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %22 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %21, align 8
  %23 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %22, i64 0, i32 4
  %24 = load %class.GrAppliedClip*, %class.GrAppliedClip** %23, align 8
  %25 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %24, i64 0, i32 0, i32 0, i32 1
  %26 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %26, %struct.SkIRect* dereferenceable(16) %25) #14
  br label %27

27:                                               ; preds = %11, %20
  %28 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %29 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 7
  %30 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %29, align 8
  %31 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 5
  %32 = load %class.GrPipeline*, %class.GrPipeline** %31, align 8
  %33 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %12, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %33, %class.GrGeometryProcessor* dereferenceable(80) %30, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %32) #14
  %34 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %8, align 8
  tail call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %34) #14
  br label %35

35:                                               ; preds = %7, %3, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_111DrawAtlasOp18fixedFunctionFlagsEv(%"class.(anonymous namespace)::DrawAtlasOp"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 2
  %3 = tail call i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper* %2) #14
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_111DrawAtlasOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%"class.(anonymous namespace)::DrawAtlasOp"*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #0 align 2 {
  %5 = alloca %class.GrProcessorAnalysisColor, align 4
  %6 = bitcast %class.GrProcessorAnalysisColor* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #14
  %7 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %5, i64 0, i32 0
  %8 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %5, i64 0, i32 1
  %9 = bitcast %struct.SkRGBA4f* %8 to i8*
  %10 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 6
  %11 = bitcast %class.GrProcessorAnalysisColor* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 20, i1 false)
  %12 = load i8, i8* %10, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 4
  %16 = bitcast %struct.SkRGBA4f* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %16, i64 16, i1 false) #14
  %17 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 4, i32 3
  %18 = load float, float* %17, align 4
  %19 = fcmp oeq float %18, 1.000000e+00
  %20 = select i1 %19, i32 3, i32 1
  br label %21

21:                                               ; preds = %4, %14
  %22 = phi i32 [ %20, %14 ], [ 0, %4 ]
  store i32 %22, i32* %7, align 4
  %23 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 2
  %24 = load %struct.GrUserStencilSettings*, %struct.GrUserStencilSettings** @_ZN21GrUserStencilSettings7kUnusedE, align 8
  %25 = call i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClipPK21GrUserStencilSettings11GrClampType27GrProcessorAnalysisCoverageP24GrProcessorAnalysisColor(%class.GrSimpleMeshDrawOpHelper* %23, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, %struct.GrUserStencilSettings* %24, i32 %3, i32 0, %class.GrProcessorAnalysisColor* nonnull %5) #14
  %26 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 4
  %27 = load i32, i32* %7, align 4
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %21
  %31 = icmp eq %struct.SkRGBA4f* %26, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = bitcast %struct.SkRGBA4f* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %9, i64 16, i1 false) #14
  br label %34

34:                                               ; preds = %30, %32
  store i8 0, i8* %10, align 4
  br label %35

35:                                               ; preds = %21, %34
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #14
  ret i32 %25
}

declare void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.GrProgramInfo* @_ZN12_GLOBAL__N_111DrawAtlasOp11programInfoEv(%"class.(anonymous namespace)::DrawAtlasOp"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 8
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111DrawAtlasOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::DrawAtlasOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 align 2 {
  %9 = alloca %"struct.GrDefaultGeoProcFactory::Color", align 4
  %10 = alloca %"struct.GrDefaultGeoProcFactory::Coverage", align 4
  %11 = alloca %"struct.GrDefaultGeoProcFactory::LocalCoords", align 8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 6
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 3
  %17 = bitcast %"struct.GrDefaultGeoProcFactory::Color"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Color", %"struct.GrDefaultGeoProcFactory::Color"* %9, i64 0, i32 0
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Color", %"struct.GrDefaultGeoProcFactory::Color"* %9, i64 0, i32 1
  %20 = bitcast %struct.SkRGBA4f* %19 to i8*
  %21 = bitcast %struct.SkRGBA4f* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %21, i64 16, i1 false) #14
  br i1 %14, label %23, label %22

22:                                               ; preds = %8
  store i32 1, i32* %18, align 4
  br label %23

23:                                               ; preds = %8, %22
  %24 = bitcast %"struct.GrDefaultGeoProcFactory::Coverage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  %25 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %10, i64 0, i32 0
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %10, i64 0, i32 1
  store i8 -1, i8* %26, align 4
  %27 = bitcast %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #14
  %28 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11, i64 0, i32 0
  store i32 2, i32* %28, align 8
  %29 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %11, i64 0, i32 1
  store %class.SkMatrix* null, %class.SkMatrix** %29, align 8
  %30 = call %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory4MakeEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc* %2, %"struct.GrDefaultGeoProcFactory::Color"* nonnull dereferenceable(20) %9, %"struct.GrDefaultGeoProcFactory::Coverage"* nonnull dereferenceable(8) %10, %"struct.GrDefaultGeoProcFactory::LocalCoords"* nonnull dereferenceable(16) %11, %class.SkMatrix* dereferenceable(40) %16) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %17) #14
  %31 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 2
  %32 = call %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper* %31, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* %30, i8 zeroext 0, i32 %6, i32 %7) #14
  %33 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 8
  store %class.GrProgramInfo* %32, %class.GrProgramInfo** %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111DrawAtlasOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::DrawAtlasOp"*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.GrMeshDrawOp::QuadHelper", align 8
  %4 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 8
  %5 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  %6 = icmp eq %class.GrProgramInfo* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 0
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %8, %"class.GrMeshDrawOp::Target"* %1) #14
  %9 = load %class.GrProgramInfo*, %class.GrProgramInfo** %4, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %class.GrProgramInfo* [ %5, %2 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 1, i32 0, i32 0, i64 32
  %13 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 1, i32 0, i32 0, i64 40
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  %19 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %11, i64 0, i32 7
  %20 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %19, align 8
  %21 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %20, i64 0, i32 3, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = bitcast %"class.GrMeshDrawOp::QuadHelper"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = getelementptr inbounds %"class.GrMeshDrawOp::QuadHelper", %"class.GrMeshDrawOp::QuadHelper"* %3, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.GrMeshDrawOp::QuadHelper", %"class.GrMeshDrawOp::QuadHelper"* %3, i64 0, i32 0, i32 1
  %28 = bitcast %"class.GrMeshDrawOp::QuadHelper"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @_ZN12GrMeshDrawOp10QuadHelperC1EPNS_6TargetEmi(%"class.GrMeshDrawOp::QuadHelper"* nonnull %3, %"class.GrMeshDrawOp::Target"* %1, i64 %22, i32 %24) #14
  %29 = load i8*, i8** %26, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %40, label %31

31:                                               ; preds = %10
  %32 = icmp eq i32 %18, 0
  br i1 %32, label %53, label %33

33:                                               ; preds = %31
  %34 = bitcast i8* %12 to %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"**
  %35 = zext i32 %18 to i64
  %36 = and i64 %35, 1
  %37 = icmp eq i32 %18, 1
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = sub nsw i64 %35, %36
  br label %58

40:                                               ; preds = %10
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0), i32 231, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0)) #14
  br label %82

41:                                               ; preds = %58, %33
  %42 = phi i64 [ 0, %33 ], [ %79, %58 ]
  %43 = phi i8* [ %29, %33 ], [ %78, %58 ]
  %44 = icmp eq i64 %36, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %41
  %46 = load %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"*, %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"** %34, align 8
  %47 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %46, i64 %42, i32 1, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = lshr i64 %48, 1
  %50 = and i64 %49, 2147483647
  %51 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %46, i64 %42, i32 1, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %52, i64 %50, i1 false)
  br label %53

53:                                               ; preds = %45, %41, %31
  %54 = bitcast %struct.GrSimpleMesh** %27 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.(anonymous namespace)::DrawAtlasOp", %"class.(anonymous namespace)::DrawAtlasOp"* %0, i64 0, i32 7
  %57 = bitcast %struct.GrSimpleMesh** %56 to i64*
  store i64 %55, i64* %57, align 8
  br label %82

58:                                               ; preds = %58, %38
  %59 = phi i64 [ 0, %38 ], [ %79, %58 ]
  %60 = phi i8* [ %29, %38 ], [ %78, %58 ]
  %61 = phi i64 [ %39, %38 ], [ %80, %58 ]
  %62 = load %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"*, %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"** %34, align 8
  %63 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %62, i64 %59, i32 1, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = lshr i64 %64, 1
  %66 = and i64 %65, 2147483647
  %67 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %62, i64 %59, i32 1, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %68, i64 %66, i1 false)
  %69 = getelementptr inbounds i8, i8* %60, i64 %66
  %70 = or i64 %59, 1
  %71 = load %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"*, %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"** %34, align 8
  %72 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %71, i64 %70, i32 1, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = lshr i64 %73, 1
  %75 = and i64 %74, 2147483647
  %76 = getelementptr inbounds %"struct.(anonymous namespace)::DrawAtlasOp::Geometry", %"struct.(anonymous namespace)::DrawAtlasOp::Geometry"* %71, i64 %70, i32 1, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %77, i64 %75, i1 false)
  %78 = getelementptr inbounds i8, i8* %69, i64 %75
  %79 = add nuw nsw i64 %59, 2
  %80 = add i64 %61, -2
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %41, label %58

82:                                               ; preds = %53, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #9

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_111DrawAtlasOp8GeometryELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.74* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkTArray.74, %class.SkTArray.74* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 2147483647
  %8 = add nsw i32 %7, %1
  %9 = sext i32 %8 to i64
  %10 = lshr i64 %4, 33
  %11 = icmp slt i64 %10, %9
  %12 = mul nsw i64 %9, 3
  %13 = icmp sle i64 %10, %12
  %14 = and i64 %4, 1
  %15 = icmp eq i64 %14, 0
  %16 = or i1 %15, %13
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = and i64 %4, 4294967296
  %19 = icmp eq i64 %18, 0
  br label %20

20:                                               ; preds = %2, %17
  %21 = phi i1 [ false, %2 ], [ %19, %17 ]
  %22 = or i1 %11, %21
  br i1 %22, label %23, label %60

23:                                               ; preds = %20
  %24 = add nsw i64 %9, 1
  %25 = ashr i64 %24, 1
  %26 = add nsw i64 %9, 7
  %27 = add nsw i64 %26, %25
  %28 = and i64 %27, -8
  %29 = icmp eq i64 %28, %10
  br i1 %29, label %60, label %30

30:                                               ; preds = %23
  %31 = icmp slt i64 %28, 2147483647
  %32 = select i1 %31, i64 %28, i64 2147483647
  %33 = icmp sgt i64 %32, -2147483647
  %34 = select i1 %33, i64 %32, i64 -2147483647
  %35 = shl i64 %34, 33
  %36 = and i64 %4, 8589934591
  %37 = or i64 %35, %36
  store i64 %37, i64* %3, align 8
  %38 = and i64 %34, 2147483647
  %39 = tail call i8* @_Z15sk_malloc_throwmm(i64 %38, i64 32) #14
  %40 = load i64, i64* %3, align 8
  %41 = shl i64 %40, 4
  %42 = and i64 %41, 68719476704
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %30
  %45 = bitcast %class.SkTArray.74* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %46, i64 %42, i1 false) #14
  %47 = load i64, i64* %3, align 8
  br label %48

48:                                               ; preds = %30, %44
  %49 = phi i64 [ %40, %30 ], [ %47, %44 ]
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %50, 0
  %52 = bitcast %class.SkTArray.74* %0 to i8**
  br i1 %51, label %56, label %53

53:                                               ; preds = %48
  %54 = load i8*, i8** %52, align 8
  tail call void @_Z7sk_freePv(i8* %54) #14
  %55 = load i64, i64* %3, align 8
  br label %56

56:                                               ; preds = %48, %53
  %57 = phi i64 [ %55, %53 ], [ %49, %48 ]
  store i8* %39, i8** %52, align 8
  %58 = and i64 %57, -4294967298
  %59 = or i64 %58, 1
  store i64 %59, i64* %3, align 8
  br label %60

60:                                               ; preds = %56, %23, %20
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIhLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.75, %class.SkTArray.75* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 1) #14
  %45 = load i64, i64* %4, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = getelementptr inbounds %class.SkTArray.75, %class.SkTArray.75* %0, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #14
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.SkTArray.75, %class.SkTArray.75* %0, i64 0, i32 0
  %59 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %59) #14
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %57
  %62 = phi i64 [ %54, %53 ], [ %60, %57 ]
  %63 = getelementptr inbounds %class.SkTArray.75, %class.SkTArray.75* %0, i64 0, i32 0
  store i8* %44, i8** %63, align 8
  %64 = and i64 %62, -4294967298
  %65 = or i64 %64, 1
  store i64 %65, i64* %4, align 8
  br label %66

66:                                               ; preds = %61, %32, %21
  ret void
}

declare i32 @_Z18SkPreMultiplyColorj(i32) local_unnamed_addr #4

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD2Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.GrOp*, %class.GrOp** %3, align 8
  store %class.GrOp* null, %class.GrOp** %3, align 8
  %5 = icmp eq %class.GrOp* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrOp* %4 to void (%class.GrOp*)***
  %8 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %8, i64 1
  %10 = load void (%class.GrOp*)*, void (%class.GrOp*)** %9, align 8
  tail call void %10(%class.GrOp* nonnull %4) #14
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD0Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrOp*, %"class.std::__1::function.136"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps(%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline*, %"class.std::__1::function.136"*) local_unnamed_addr #4

declare void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet*, %"class.std::__1::function.136"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper*, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16), %class.GrCaps* dereferenceable(232), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #4

declare void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState*, %struct.GrSimpleMesh* dereferenceable(48)) local_unnamed_addr #4

declare void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass*, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #4

declare i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper*) local_unnamed_addr #4

declare i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClipPK21GrUserStencilSettings11GrClampType27GrProcessorAnalysisCoverageP24GrProcessorAnalysisColor(%class.GrSimpleMeshDrawOpHelper*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, %struct.GrUserStencilSettings*, i32, i32, %class.GrProcessorAnalysisColor*) local_unnamed_addr #4

declare %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), %class.GrGeometryProcessor*, i8 zeroext, i32, i32) local_unnamed_addr #4

declare %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory4MakeEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc*, %"struct.GrDefaultGeoProcFactory::Color"* dereferenceable(20), %"struct.GrDefaultGeoProcFactory::Coverage"* dereferenceable(8), %"struct.GrDefaultGeoProcFactory::LocalCoords"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #4

declare void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp*, %"class.GrMeshDrawOp::Target"*) local_unnamed_addr #4

declare void @_ZN12GrMeshDrawOp10QuadHelperC1EPNS_6TargetEmi(%"class.GrMeshDrawOp::QuadHelper"*, %"class.GrMeshDrawOp::Target"*, i64, i32) unnamed_addr #4

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #4

declare void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet*, %class.GrPaint* dereferenceable(48)) unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
