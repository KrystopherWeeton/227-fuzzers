; ModuleID = '../../v8/src/asmjs/asm-js.cc'
source_filename = "../../v8/src/asmjs/asm-js.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.554" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.170", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.59", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.177", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.192", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.196", %"class.std::__1::vector.196", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.209", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.339", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.390", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.465", %"class.std::__1::unique_ptr.475", %"class.std::__1::unique_ptr.481", %"class.std::__1::unique_ptr.481", %"class.std::__1::unique_ptr.487", %"class.std::__1::unique_ptr.493", %"class.std::__1::unique_ptr.493", %"class.std::__1::unique_ptr.499", %"class.std::__1::unique_ptr.505", %"class.std::__1::shared_ptr.511", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.516", %"class.std::__1::unique_ptr.542", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.548", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.561", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.361", i8, [7 x i8], %"class.std::__1::unordered_map.567", %"class.std::__1::unordered_map.593", %"class.std::__1::unordered_map.567", %"class.std::__1::unordered_map.617", %"class.std::__1::vector.645", i8, %"class.std::__1::unique_ptr.652", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.36", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.51", [4 x i8] }>
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.54", %"struct.std::__1::atomic.54", %"struct.std::__1::atomic.54" }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.30", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.658", %"class.std::__1::unique_ptr.679", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.689", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.773", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.786", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.796", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.807", %"struct.std::__1::atomic.183", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.882", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.925"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.934", i32, i8, i8, i32, i32, %"class.std::__1::vector.940", %"class.std::__1::vector.940", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.947", i64, %"class.std::__1::unordered_map.948", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.554", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.191", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1004", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1168", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1202", %"class.std::__1::vector.1206", %"class.std::__1::vector.1206", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.24", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.28", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.28" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.658" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.170", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.659", %"class.std::__1::unique_ptr.673" }
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.662" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"class.std::__1::unique_ptr.664"*, %"class.std::__1::unique_ptr.664"*, %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.1556" }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.1557" }
%"struct.std::__1::__compressed_pair_elem.1557" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.std::__1::unique_ptr.664"* }
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.682", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.682" = type { %"struct.std::__1::__atomic_base.683" }
%"struct.std::__1::__atomic_base.683" = type { %"struct.std::__1::__cxx_atomic_impl.684" }
%"struct.std::__1::__cxx_atomic_impl.684" = type { %"struct.std::__1::__cxx_atomic_base_impl.685" }
%"struct.std::__1::__cxx_atomic_base_impl.685" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.689" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.690", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.690" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.691", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.691" = type { %"class.std::__1::__vector_base.692" }
%"class.std::__1::__vector_base.692" = type { %"class.std::__1::unique_ptr.693"*, %"class.std::__1::unique_ptr.693"*, %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::unique_ptr.693" = type opaque
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.std::__1::unique_ptr.693"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.699 }
%union.anon.699 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1213", %"class.std::__1::unique_ptr.1219", %"struct.std::__1::atomic.183", %"class.std::__1::unique_ptr.1225", %"class.std::__1::unique_ptr.1231", %"class.std::__1::unique_ptr.1237", %"class.std::__1::unique_ptr.1243", %"class.std::__1::unique_ptr.1249", %"class.std::__1::set.1255", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1213" = type { %"class.std::__1::__compressed_pair.1214" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.1219" = type { %"class.std::__1::__compressed_pair.1220" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.1225" = type { %"class.std::__1::__compressed_pair.1226" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.1231" = type { %"class.std::__1::__compressed_pair.1232" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.1233" }
%"struct.std::__1::__compressed_pair_elem.1233" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.1237" = type { %"class.std::__1::__compressed_pair.1238" }
%"class.std::__1::__compressed_pair.1238" = type { %"struct.std::__1::__compressed_pair_elem.1239" }
%"struct.std::__1::__compressed_pair_elem.1239" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.1243" = type { %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.1249" = type { %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.1251" }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.1255" = type { %"class.std::__1::__tree.1256" }
%"class.std::__1::__tree.1256" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1257", %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.701" }
%"class.v8::internal::TaggedImpl.701" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.700" }
%"class.v8::internal::TaggedImpl.700" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.702", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.708", %"class.v8::internal::DetachableVector.709", %"class.v8::internal::DetachableVector.708", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.709" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.708" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.11" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.710", %"class.std::__1::vector.716", %"class.std::__1::unique_ptr.723", %"class.std::__1::vector.730", %"class.std::__1::unique_ptr.737", i64, %"class.std::__1::vector.743", %"class.std::__1::vector.751", %"class.std::__1::vector.759", i8, i8, i32 }
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.716" = type { %"class.std::__1::__vector_base.717" }
%"class.std::__1::__vector_base.717" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.718" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::GlobalHandles::NodeSpace.726"* }
%"class.v8::internal::GlobalHandles::NodeSpace.726" = type opaque
%"class.std::__1::vector.730" = type { %"class.std::__1::__vector_base.731" }
%"class.std::__1::__vector_base.731" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.732" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.737" = type { %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.743" = type { %"class.std::__1::__vector_base.744" }
%"class.std::__1::__vector_base.744" = type { %"struct.std::__1::pair.745"*, %"struct.std::__1::pair.745"*, %"class.std::__1::__compressed_pair.746" }
%"struct.std::__1::pair.745" = type opaque
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"struct.std::__1::pair.745"* }
%"class.std::__1::vector.751" = type { %"class.std::__1::__vector_base.752" }
%"class.std::__1::__vector_base.752" = type { %"struct.std::__1::pair.753"*, %"struct.std::__1::pair.753"*, %"class.std::__1::__compressed_pair.754" }
%"struct.std::__1::pair.753" = type opaque
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"struct.std::__1::pair.753"* }
%"class.std::__1::vector.759" = type { %"class.std::__1::__vector_base.760" }
%"class.std::__1::__vector_base.760" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.761" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.766", %"class.std::__1::vector.773" }
%"class.std::__1::vector.766" = type { %"class.std::__1::__vector_base.767" }
%"class.std::__1::__vector_base.767" = type { i64**, i64**, %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.780" }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.773" = type { %"class.std::__1::__vector_base.774" }
%"class.std::__1::__vector_base.774" = type { i32*, i32*, %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.786" = type { %"struct.std::__1::__atomic_base.787" }
%"struct.std::__1::__atomic_base.787" = type { %"struct.std::__1::__cxx_atomic_impl.788" }
%"struct.std::__1::__cxx_atomic_impl.788" = type { %"struct.std::__1::__cxx_atomic_base_impl.789" }
%"struct.std::__1::__cxx_atomic_base_impl.789" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.796" = type { %"struct.std::__1::__atomic_base.797" }
%"struct.std::__1::__atomic_base.797" = type { %"struct.std::__1::__cxx_atomic_impl.798" }
%"struct.std::__1::__cxx_atomic_impl.798" = type { %"struct.std::__1::__cxx_atomic_base_impl.799" }
%"struct.std::__1::__cxx_atomic_base_impl.799" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.803 }
%union.anon.803 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.807" = type { %"class.std::__1::__hash_table.808" }
%"class.std::__1::__hash_table.808" = type <{ %"class.std::__1::unique_ptr.809", %"class.std::__1::__compressed_pair.819", %"class.std::__1::__compressed_pair.824", %"class.std::__1::__compressed_pair.827", [4 x i8] }>
%"class.std::__1::unique_ptr.809" = type { %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811", %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"struct.std::__1::__hash_node_base.812"** }
%"struct.std::__1::__hash_node_base.812" = type { %"struct.std::__1::__hash_node_base.812"* }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.std::__1::__bucket_list_deallocator.814" }
%"class.std::__1::__bucket_list_deallocator.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"struct.std::__1::__hash_node_base.812" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::atomic.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__cxx_atomic_impl.185" }
%"struct.std::__1::__cxx_atomic_impl.185" = type { %"struct.std::__1::__cxx_atomic_base_impl.186" }
%"struct.std::__1::__cxx_atomic_base_impl.186" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.833", %"class.v8::internal::Handle.839", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.840", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.833" = type { %"class.std::__1::__compressed_pair.834" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.839" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.840" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.841", %"class.std::__1::vector.847", %"class.std::__1::unique_ptr.855", %"class.std::__1::unique_ptr.861", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.867", %"class.std::__1::vector.873", %"struct.std::__1::pair.881" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.841" = type { %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.843" }
%"struct.std::__1::__compressed_pair_elem.843" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.847" = type { %"class.std::__1::__vector_base.848" }
%"class.std::__1::__vector_base.848" = type { %"class.std::__1::unique_ptr.849"*, %"class.std::__1::unique_ptr.849"*, %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::unique_ptr.849" = type opaque
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.std::__1::unique_ptr.849"* }
%"class.std::__1::unique_ptr.855" = type { %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.873" = type { %"class.std::__1::__vector_base.874" }
%"class.std::__1::__vector_base.874" = type { %"struct.std::__1::pair.875"*, %"struct.std::__1::pair.875"*, %"class.std::__1::__compressed_pair.876" }
%"struct.std::__1::pair.875" = type opaque
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.std::__1::pair.875"* }
%"struct.std::__1::pair.881" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.29"*, i16, i8*)*, i8* }
%"class.v8::Local.29" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.885", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.885" = type { %"class.std::__1::__hash_table.886" }
%"class.std::__1::__hash_table.886" = type <{ %"class.std::__1::unique_ptr.887", %"class.std::__1::__compressed_pair.897", %"class.std::__1::__compressed_pair.902", %"class.std::__1::__compressed_pair.906", [4 x i8] }>
%"class.std::__1::unique_ptr.887" = type { %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889", %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.890"** }
%"struct.std::__1::__hash_node_base.890" = type { %"struct.std::__1::__hash_node_base.890"* }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"class.std::__1::__bucket_list_deallocator.892" }
%"class.std::__1::__bucket_list_deallocator.892" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"struct.std::__1::__hash_node_base.890" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1554, i32, [4 x i8] }>
%union.anon.1554 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.920" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.914"**, %"struct.std::__1::pair.914"**, %"struct.std::__1::pair.914"**, %"class.std::__1::__compressed_pair.915" }
%"struct.std::__1::pair.914" = type opaque
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"struct.std::__1::pair.914"** }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.925" = type { %"class.std::__1::__vector_base.926" }
%"class.std::__1::__vector_base.926" = type { %"class.v8::internal::Handle.927"*, %"class.v8::internal::Handle.927"*, %"class.std::__1::__compressed_pair.928" }
%"class.v8::internal::Handle.927" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.v8::internal::Handle.927"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.933", [128 x i8] }
%"class.v8::internal::Vector.933" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.791", i32, %"class.v8::Local.29" }
%"class.v8::Local.791" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.766", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.940" = type { %"class.std::__1::__vector_base.941" }
%"class.std::__1::__vector_base.941" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.947" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.948" = type { %"class.std::__1::__hash_table.949" }
%"class.std::__1::__hash_table.949" = type <{ %"class.std::__1::unique_ptr.950", %"class.std::__1::__compressed_pair.960", %"class.std::__1::__compressed_pair.965", %"class.std::__1::__compressed_pair.968", [4 x i8] }>
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952", %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"struct.std::__1::__hash_node_base.953"** }
%"struct.std::__1::__hash_node_base.953" = type { %"struct.std::__1::__hash_node_base.953"* }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"class.std::__1::__bucket_list_deallocator.955" }
%"class.std::__1::__bucket_list_deallocator.955" = type { %"class.std::__1::__compressed_pair.956" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"struct.std::__1::__hash_node_base.953" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.191" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.972", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1001", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1002", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.972" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.997, %union.anon.999, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.997 = type { i64 }
%union.anon.999 = type { i64 }
%"class.std::__1::weak_ptr.1001" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.191" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1002" = type { %"class.v8::PersistentBase.1003" }
%"class.v8::PersistentBase.1003" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.973", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.973" = type { %"class.std::__1::__hash_table.974" }
%"class.std::__1::__hash_table.974" = type <{ %"class.std::__1::unique_ptr.975", %"class.std::__1::__compressed_pair.985", %"class.std::__1::__compressed_pair.990", %"class.std::__1::__compressed_pair.993", [4 x i8] }>
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977", %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"struct.std::__1::__hash_node_base.978"** }
%"struct.std::__1::__hash_node_base.978" = type { %"struct.std::__1::__hash_node_base.978"* }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"class.std::__1::__bucket_list_deallocator.980" }
%"class.std::__1::__bucket_list_deallocator.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"struct.std::__1::__hash_node_base.978" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1004" = type { %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1033", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1009", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1013", %"class.std::__1::unique_ptr.1019", %"class.std::__1::unique_ptr.505", %"class.std::__1::vector.1025", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1009" = type { %"struct.std::__1::__atomic_base.1010" }
%"struct.std::__1::__atomic_base.1010" = type { %"struct.std::__1::__cxx_atomic_impl.1011" }
%"struct.std::__1::__cxx_atomic_impl.1011" = type { %"struct.std::__1::__cxx_atomic_base_impl.1012" }
%"struct.std::__1::__cxx_atomic_base_impl.1012" = type { i32 }
%"class.std::__1::unique_ptr.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.766" }
%"class.std::__1::unique_ptr.1019" = type { %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1025" = type { %"class.std::__1::__vector_base.1026" }
%"class.std::__1::__vector_base.1026" = type { %"struct.std::__1::pair.1027"*, %"struct.std::__1::pair.1027"*, %"class.std::__1::__compressed_pair.1028" }
%"struct.std::__1::pair.1027" = type opaque
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"struct.std::__1::pair.1027"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.128" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.68", %"class.std::__1::vector.68", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.70" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.75" }
%"class.std::__1::__hash_table.75" = type <{ %"class.std::__1::unique_ptr.76", %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.93", [4 x i8] }>
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78", %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::__hash_node_base.79"** }
%"struct.std::__1::__hash_node_base.79" = type { %"struct.std::__1::__hash_node_base.79"* }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__bucket_list_deallocator.81" }
%"class.std::__1::__bucket_list_deallocator.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.std::__1::__hash_node_base.79" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.54", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.109"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.117", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.54", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.54", %"struct.std::__1::atomic.98", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.98" = type { %"struct.std::__1::__atomic_base.99" }
%"struct.std::__1::__atomic_base.99" = type { %"struct.std::__1::__cxx_atomic_impl.100" }
%"struct.std::__1::__cxx_atomic_impl.100" = type { %"struct.std::__1::__cxx_atomic_base_impl.101" }
%"struct.std::__1::__cxx_atomic_base_impl.101" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.102" }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.104" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.109" = type { %"class.std::__1::__tree.110" }
%"class.std::__1::__tree.110" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__cxx_atomic_impl.119" }
%"struct.std::__1::__cxx_atomic_impl.119" = type { %"struct.std::__1::__cxx_atomic_base_impl.120" }
%"struct.std::__1::__cxx_atomic_base_impl.120" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.121", i8, [7 x i8] }>
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { i64*, i64*, %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1033" = type { %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type { %"class.v8::internal::wasm::WasmCodeManager", %"class.v8::internal::AccountingAllocator", %"struct.std::__1::atomic.1049", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.1054", %"class.std::__1::unique_ptr.1082", %"class.std::__1::unique_ptr.1088", %"class.std::__1::unordered_map.1094", %"class.std::__1::unordered_map.1122", %"class.std::__1::shared_ptr.1150", i64, %"class.std::__1::unique_ptr.1151", %"class.v8::internal::wasm::NativeModuleCache" }
%"class.v8::internal::wasm::WasmCodeManager" = type { i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", i32, %"class.v8::base::Mutex", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1042" }
%"class.std::__1::__tree.1042" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1043", %"class.std::__1::__compressed_pair.1047" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.1049" = type { %"struct.std::__1::__atomic_base.1050" }
%"struct.std::__1::__atomic_base.1050" = type { %"struct.std::__1::__atomic_base.1051" }
%"struct.std::__1::__atomic_base.1051" = type { %"struct.std::__1::__cxx_atomic_impl.1052" }
%"struct.std::__1::__cxx_atomic_impl.1052" = type { %"struct.std::__1::__cxx_atomic_base_impl.1053" }
%"struct.std::__1::__cxx_atomic_base_impl.1053" = type { i32 }
%"class.std::__1::unordered_map.1054" = type { %"class.std::__1::__hash_table.1055" }
%"class.std::__1::__hash_table.1055" = type <{ %"class.std::__1::unique_ptr.1056", %"class.std::__1::__compressed_pair.1066", %"class.std::__1::__compressed_pair.1071", %"class.std::__1::__compressed_pair.1076", [4 x i8] }>
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058", %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"struct.std::__1::__hash_node_base.1059"** }
%"struct.std::__1::__hash_node_base.1059" = type { %"struct.std::__1::__hash_node_base.1059"* }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.std::__1::__bucket_list_deallocator.1061" }
%"class.std::__1::__bucket_list_deallocator.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"struct.std::__1::__hash_node_base.1059" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"class.v8::internal::CompilationStatistics"* }
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.v8::internal::CodeTracer"* }
%"class.std::__1::unordered_map.1094" = type { %"class.std::__1::__hash_table.1095" }
%"class.std::__1::__hash_table.1095" = type <{ %"class.std::__1::unique_ptr.1096", %"class.std::__1::__compressed_pair.1106", %"class.std::__1::__compressed_pair.1111", %"class.std::__1::__compressed_pair.1116", [4 x i8] }>
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098", %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"struct.std::__1::__hash_node_base.1099"** }
%"struct.std::__1::__hash_node_base.1099" = type { %"struct.std::__1::__hash_node_base.1099"* }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.std::__1::__bucket_list_deallocator.1101" }
%"class.std::__1::__bucket_list_deallocator.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"struct.std::__1::__hash_node_base.1099" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unordered_map.1122" = type { %"class.std::__1::__hash_table.1123" }
%"class.std::__1::__hash_table.1123" = type <{ %"class.std::__1::unique_ptr.1124", %"class.std::__1::__compressed_pair.1134", %"class.std::__1::__compressed_pair.1139", %"class.std::__1::__compressed_pair.1144", [4 x i8] }>
%"class.std::__1::unique_ptr.1124" = type { %"class.std::__1::__compressed_pair.1125" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126", %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"struct.std::__1::__hash_node_base.1127"** }
%"struct.std::__1::__hash_node_base.1127" = type { %"struct.std::__1::__hash_node_base.1127"* }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.std::__1::__bucket_list_deallocator.1129" }
%"class.std::__1::__bucket_list_deallocator.1129" = type { %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1135" = type { %"struct.std::__1::__hash_node_base.1127" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::shared_ptr.1150" = type { %"class.v8::internal::OperationsBarrier"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::OperationsBarrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", i8, i64 }
%"class.std::__1::unique_ptr.1151" = type { %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"struct.v8::internal::wasm::WasmEngine::CurrentGCInfo"* }
%"struct.v8::internal::wasm::WasmEngine::CurrentGCInfo" = type opaque
%"class.v8::internal::wasm::NativeModuleCache" = type { %"class.std::__1::map.1157", %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable" }
%"class.std::__1::map.1157" = type { %"class.std::__1::__tree.1158" }
%"class.std::__1::__tree.1158" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1159", %"class.std::__1::__compressed_pair.1163" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.1168" = type { %"class.std::__1::__compressed_pair.1169" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.792", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.792" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1176" }
%"class.std::__1::unordered_map.1176" = type { %"class.std::__1::__hash_table.1177" }
%"class.std::__1::__hash_table.1177" = type <{ %"class.std::__1::unique_ptr.1178", %"class.std::__1::__compressed_pair.1188", %"class.std::__1::__compressed_pair.1193", %"class.std::__1::__compressed_pair.1196", [4 x i8] }>
%"class.std::__1::unique_ptr.1178" = type { %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180", %"struct.std::__1::__compressed_pair_elem.1182" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"struct.std::__1::__hash_node_base.1181"** }
%"struct.std::__1::__hash_node_base.1181" = type { %"struct.std::__1::__hash_node_base.1181"* }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"class.std::__1::__bucket_list_deallocator.1183" }
%"class.std::__1::__bucket_list_deallocator.1183" = type { %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.1189" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"struct.std::__1::__hash_node_base.1181" }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::atomic.1202" = type { %"struct.std::__1::__atomic_base.1203" }
%"struct.std::__1::__atomic_base.1203" = type { %"struct.std::__1::__cxx_atomic_impl.1204" }
%"struct.std::__1::__cxx_atomic_impl.1204" = type { %"struct.std::__1::__cxx_atomic_base_impl.1205" }
%"struct.std::__1::__cxx_atomic_base_impl.1205" = type { %"class.std::__1::vector.1206"* }
%"class.std::__1::vector.1206" = type { %"class.std::__1::__vector_base.1207" }
%"class.std::__1::__vector_base.1207" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1208" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.63" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.134" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"struct.std::__1::pair.136"*, %"struct.std::__1::pair.136"*, %"class.std::__1::__compressed_pair.137" }
%"struct.std::__1::pair.136" = type { i32, i64 }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::pair.136"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.142" }
%"class.std::__1::unordered_map.142" = type { %"class.std::__1::__hash_table.143" }
%"class.std::__1::__hash_table.143" = type <{ %"class.std::__1::unique_ptr.144", %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.164", [4 x i8] }>
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146", %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.std::__1::__hash_node_base.147"** }
%"struct.std::__1::__hash_node_base.147" = type { %"struct.std::__1::__hash_node_base.147"* }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.std::__1::__bucket_list_deallocator.149" }
%"class.std::__1::__bucket_list_deallocator.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"struct.std::__1::__hash_node_base.147" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.183", %"struct.std::__1::atomic.187", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__cxx_atomic_impl.189" }
%"struct.std::__1::__cxx_atomic_impl.189" = type { %"struct.std::__1::__cxx_atomic_base_impl.190" }
%"struct.std::__1::__cxx_atomic_base_impl.190" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__cxx_atomic_impl.194" }
%"struct.std::__1::__cxx_atomic_impl.194" = type { %"struct.std::__1::__cxx_atomic_base_impl.195" }
%"struct.std::__1::__cxx_atomic_base_impl.195" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.198" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.257", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.311", %"class.std::__1::vector.311", %"class.std::__1::vector.311", %"class.std::__1::vector.318", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.212", %"class.std::__1::vector.213", %"class.std::__1::vector.220", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.212" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.215" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"class.std::__1::unique_ptr.222"*, %"class.std::__1::unique_ptr.222"*, %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::unique_ptr.222" = type opaque
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.std::__1::unique_ptr.222"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.228", %"class.v8::internal::Worklist.230", %"class.v8::internal::Worklist.230", %"class.v8::internal::Worklist.230", %"class.v8::internal::Worklist.232", %"class.v8::internal::Worklist.234", %"class.v8::internal::Worklist.236", %"class.v8::internal::Worklist.238", %"class.v8::internal::Worklist.240", %"class.v8::internal::Worklist.242" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.228" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.230" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.232" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.234" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.236" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.238" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.240" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.242" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.244", i8, i64 }
%"class.std::__1::vector.244" = type { %"class.std::__1::__vector_base.245" }
%"class.std::__1::__vector_base.245" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.260" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.212"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.260" = type { %"class.std::__1::__hash_table.261" }
%"class.std::__1::__hash_table.261" = type <{ %"class.std::__1::unique_ptr.262", %"class.std::__1::__compressed_pair.272", %"class.std::__1::__compressed_pair.277", %"class.std::__1::__compressed_pair.280", [4 x i8] }>
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264", %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::__hash_node_base.265"** }
%"struct.std::__1::__hash_node_base.265" = type { %"struct.std::__1::__hash_node_base.265"* }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.std::__1::__bucket_list_deallocator.267" }
%"class.std::__1::__bucket_list_deallocator.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.std::__1::__hash_node_base.265" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.287" }
%"class.std::__1::unordered_map.287" = type { %"class.std::__1::__hash_table.288" }
%"class.std::__1::__hash_table.288" = type <{ %"class.std::__1::unique_ptr.289", %"class.std::__1::__compressed_pair.299", %"class.std::__1::__compressed_pair.304", %"class.std::__1::__compressed_pair.307", [4 x i8] }>
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291", %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__hash_node_base.292"** }
%"struct.std::__1::__hash_node_base.292" = type { %"struct.std::__1::__hash_node_base.292"* }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.std::__1::__bucket_list_deallocator.294" }
%"class.std::__1::__bucket_list_deallocator.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.std::__1::__hash_node_base.292" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.318" = type { %"class.std::__1::__vector_base.319" }
%"class.std::__1::__vector_base.319" = type { %"struct.std::__1::pair.320"*, %"struct.std::__1::pair.320"*, %"class.std::__1::__compressed_pair.321" }
%"struct.std::__1::pair.320" = type opaque
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.std::__1::pair.320"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.326", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.311"], [3 x %"class.std::__1::vector.311"], i8, %"struct.std::__1::atomic.183", [6 x i8], %"class.std::__1::vector.311", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.336"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.311", %"class.std::__1::vector.311", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.336" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.361", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.354"], %"class.std::__1::unique_ptr.326" }
%"class.std::__1::vector.354" = type { %"class.std::__1::__vector_base.355" }
%"class.std::__1::__vector_base.355" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.393", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.397", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.402" }
%"struct.std::__1::atomic.393" = type { %"struct.std::__1::__atomic_base.394" }
%"struct.std::__1::__atomic_base.394" = type { %"struct.std::__1::__cxx_atomic_impl.395" }
%"struct.std::__1::__cxx_atomic_impl.395" = type { %"struct.std::__1::__cxx_atomic_base_impl.396" }
%"struct.std::__1::__cxx_atomic_base_impl.396" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.397" = type { %"struct.std::__1::__atomic_base.398" }
%"struct.std::__1::__atomic_base.398" = type { %"struct.std::__1::__cxx_atomic_impl.399" }
%"struct.std::__1::__cxx_atomic_impl.399" = type { %"struct.std::__1::__cxx_atomic_base_impl.400" }
%"struct.std::__1::__cxx_atomic_base_impl.400" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.422", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.326", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.183", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.432", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.432" = type { %"class.std::__1::__hash_table.433" }
%"class.std::__1::__hash_table.433" = type <{ %"class.std::__1::unique_ptr.434", %"class.std::__1::__compressed_pair.444", %"class.std::__1::__compressed_pair.449", %"class.std::__1::__compressed_pair.452", [4 x i8] }>
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436", %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"struct.std::__1::__hash_node_base.437"** }
%"struct.std::__1::__hash_node_base.437" = type { %"struct.std::__1::__hash_node_base.437"* }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.std::__1::__bucket_list_deallocator.439" }
%"class.std::__1::__bucket_list_deallocator.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"struct.std::__1::__hash_node_base.437" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.468" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.511" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.512", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.2", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.512" = type { %"struct.std::__1::__atomic_base.513" }
%"struct.std::__1::__atomic_base.513" = type { %"struct.std::__1::__cxx_atomic_impl.514" }
%"struct.std::__1::__cxx_atomic_impl.514" = type { %"struct.std::__1::__cxx_atomic_base_impl.515" }
%"struct.std::__1::__cxx_atomic_base_impl.515" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.516" = type { %"class.std::__1::__hash_table.517" }
%"class.std::__1::__hash_table.517" = type <{ %"class.std::__1::unique_ptr.518", %"class.std::__1::__compressed_pair.528", %"class.std::__1::__compressed_pair.533", %"class.std::__1::__compressed_pair.536", [4 x i8] }>
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520", %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.521"** }
%"struct.std::__1::__hash_node_base.521" = type { %"struct.std::__1::__hash_node_base.521"* }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.std::__1::__bucket_list_deallocator.523" }
%"class.std::__1::__bucket_list_deallocator.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"struct.std::__1::__hash_node_base.521" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.554", %"class.std::__1::vector.554" }
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.361" = type { %"class.std::__1::__hash_table.362" }
%"class.std::__1::__hash_table.362" = type <{ %"class.std::__1::unique_ptr.363", %"class.std::__1::__compressed_pair.373", %"class.std::__1::__compressed_pair.378", %"class.std::__1::__compressed_pair.382", [4 x i8] }>
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365", %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node_base.366"** }
%"struct.std::__1::__hash_node_base.366" = type { %"struct.std::__1::__hash_node_base.366"* }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.std::__1::__bucket_list_deallocator.368" }
%"class.std::__1::__bucket_list_deallocator.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"struct.std::__1::__hash_node_base.366" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unordered_map.593" = type { %"class.std::__1::__hash_table.594" }
%"class.std::__1::__hash_table.594" = type <{ %"class.std::__1::unique_ptr.595", %"class.std::__1::__compressed_pair.605", %"class.std::__1::__compressed_pair.610", %"class.std::__1::__compressed_pair.613", [4 x i8] }>
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597", %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"struct.std::__1::__hash_node_base.598"** }
%"struct.std::__1::__hash_node_base.598" = type { %"struct.std::__1::__hash_node_base.598"* }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.std::__1::__bucket_list_deallocator.600" }
%"class.std::__1::__bucket_list_deallocator.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"struct.std::__1::__hash_node_base.598" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unordered_map.567" = type { %"class.std::__1::__hash_table.568" }
%"class.std::__1::__hash_table.568" = type <{ %"class.std::__1::unique_ptr.569", %"class.std::__1::__compressed_pair.579", %"class.std::__1::__compressed_pair.584", %"class.std::__1::__compressed_pair.587", [4 x i8] }>
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571", %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"struct.std::__1::__hash_node_base.572"** }
%"struct.std::__1::__hash_node_base.572" = type { %"struct.std::__1::__hash_node_base.572"* }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.std::__1::__bucket_list_deallocator.574" }
%"class.std::__1::__bucket_list_deallocator.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"struct.std::__1::__hash_node_base.572" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unordered_map.617" = type { %"class.std::__1::__hash_table.618" }
%"class.std::__1::__hash_table.618" = type <{ %"class.std::__1::unique_ptr.619", %"class.std::__1::__compressed_pair.629", %"class.std::__1::__compressed_pair.634", %"class.std::__1::__compressed_pair.639", [4 x i8] }>
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621", %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"struct.std::__1::__hash_node_base.622"** }
%"struct.std::__1::__hash_node_base.622" = type { %"struct.std::__1::__hash_node_base.622"* }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.std::__1::__bucket_list_deallocator.624" }
%"class.std::__1::__bucket_list_deallocator.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"struct.std::__1::__hash_node_base.622" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::vector.645" = type { %"class.std::__1::__vector_base.646" }
%"class.std::__1::__vector_base.646" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.172" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.554" = type { %"class.std::__1::__vector_base.555" }
%"class.std::__1::__vector_base.555" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.v8::internal::Object"* }
%"struct.std::nothrow_t" = type { i8 }
%"class.v8::internal::AsmJsCompilationJob" = type <{ %"class.v8::internal::UnoptimizedCompilationJob", %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Zone", %"class.v8::internal::UnoptimizedCompilationInfo", %"class.v8::internal::wasm::ZoneBuffer"*, %"class.v8::internal::wasm::ZoneBuffer"*, %"class.v8::base::EnumSet", double, i32, [4 x i8] }>
%"class.v8::internal::UnoptimizedCompilationJob" = type { %"class.v8::internal::CompilationJob", i64, %"class.v8::internal::ParseInfo"*, %"class.v8::internal::UnoptimizedCompilationInfo"*, %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta" }
%"class.v8::internal::CompilationJob" = type { i32 (...)**, i32, %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::ParseInfo" = type <{ %"class.v8::internal::UnoptimizedCompileFlags", [4 x i8], %"class.v8::internal::UnoptimizedCompileState"*, %"class.std::__1::unique_ptr.1279", %"class.v8::Extension"*, %"class.v8::internal::DeclarationScope"*, i64, i32, i32, %"class.std::__1::unique_ptr.1285", %"class.std::__1::unique_ptr.1291", %"class.std::__1::unique_ptr.1297", %"class.v8::internal::AstRawString"*, %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::SourceRangeMap"*, %"class.v8::internal::FunctionLiteral"*, i8, [7 x i8] }>
%"class.v8::internal::UnoptimizedCompileFlags" = type <{ i32, i32, i8, i8, [2 x i8] }>
%"class.v8::internal::UnoptimizedCompileState" = type { i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::PendingCompilationErrorHandler", %"class.v8::internal::Logger"*, %"class.std::__1::unique_ptr.1264" }
%"class.v8::internal::PendingCompilationErrorHandler" = type { i8, i8, i8, [5 x i8], %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails", %"class.std::__1::forward_list" }
%"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" = type <{ i32, i32, i32, [4 x i8], %union.anon.18, i32, [4 x i8] }>
%union.anon.18 = type { %"class.v8::internal::AstRawString"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" }
%"class.std::__1::unique_ptr.1264" = type { %"class.std::__1::__compressed_pair.1265" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.1266" }
%"struct.std::__1::__compressed_pair_elem.1266" = type { %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* }
%"class.v8::internal::UnoptimizedCompileState::ParallelTasks" = type { %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::forward_list.1267" }
%"class.std::__1::forward_list.1267" = type { %"class.std::__1::__forward_list_base.1268" }
%"class.std::__1::__forward_list_base.1268" = type { %"class.std::__1::__compressed_pair.1269" }
%"class.std::__1::__compressed_pair.1269" = type { %"struct.std::__1::__compressed_pair_elem.1270" }
%"struct.std::__1::__compressed_pair_elem.1270" = type { %"struct.std::__1::__forward_begin_node.1271" }
%"struct.std::__1::__forward_begin_node.1271" = type { %"struct.std::__1::__forward_list_node.1272"* }
%"struct.std::__1::__forward_list_node.1272" = type { %"struct.std::__1::__forward_begin_node.1271", %"struct.std::__1::pair.1555" }
%"struct.std::__1::pair.1555" = type { %"class.v8::internal::FunctionLiteral"*, i64 }
%"class.std::__1::unique_ptr.1279" = type { %"class.std::__1::__compressed_pair.1280" }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"class.v8::internal::Zone"* }
%"class.v8::Extension" = type <{ i32 (...)**, i8*, i64, %"class.v8::String::ExternalOneByteStringResource"*, i32, [4 x i8], i8**, i8, [7 x i8] }>
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::internal::DeclarationScope" = type opaque
%"class.std::__1::unique_ptr.1285" = type { %"class.std::__1::__compressed_pair.1286" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.1287" }
%"struct.std::__1::__compressed_pair_elem.1287" = type { %"class.v8::internal::Utf16CharacterStream"* }
%"class.v8::internal::Utf16CharacterStream" = type <{ i32 (...)**, i16*, i16*, i16*, i64, %"class.v8::internal::RuntimeCallStats"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1291" = type { %"class.std::__1::__compressed_pair.1292" }
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.1293" }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %"class.v8::internal::ConsumedPreparseData"* }
%"class.v8::internal::ConsumedPreparseData" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1297" = type { %"class.std::__1::__compressed_pair.1298" }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem.1299" }
%"struct.std::__1::__compressed_pair_elem.1299" = type { %"class.v8::internal::AstValueFactory"* }
%"class.v8::internal::AstValueFactory" = type { %"class.v8::base::TemplateHashMapImpl", %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"**, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstConsString"*, [128 x %"class.v8::internal::AstRawString"*], %"class.v8::internal::Zone"*, i64 }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle", %"struct.v8::internal::AstConsString::Segment" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }
%"class.v8::internal::SourceRangeMap" = type opaque
%"class.v8::internal::FunctionLiteral" = type { %"class.v8::internal::Expression", i32, i32, i32, i32, i32, i32, %"class.v8::internal::AstConsString"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ZoneList", %"class.v8::internal::AstConsString"*, %"class.v8::internal::Handle", %"class.v8::internal::ProducedPreparseData"* }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstNode" = type { i32, i32 }
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Statement"**, i32, i32 }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::ProducedPreparseData" = type { i32 (...)** }
%"class.v8::internal::UnoptimizedCompilationInfo" = type { %"class.v8::internal::UnoptimizedCompileFlags", %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::SourceRangeMap"*, %"class.v8::internal::Handle.1303", %"class.v8::internal::Handle.1304", %"class.v8::internal::Handle.1305", %"class.v8::internal::FeedbackVectorSpec" }
%"class.v8::internal::Handle.1303" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1304" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1305" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVectorSpec" = type <{ %"class.v8::internal::ZoneVector", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1306" }
%"class.std::__1::vector.1306" = type { %"class.std::__1::__vector_base.1307" }
%"class.std::__1::__vector_base.1307" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1308" }
%"class.std::__1::__compressed_pair.1308" = type { %"struct.std::__1::__compressed_pair_elem.1309", %"struct.std::__1::__compressed_pair_elem.1310" }
%"struct.std::__1::__compressed_pair_elem.1309" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.1310" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::wasm::ZoneBuffer" = type { %"class.v8::internal::Zone"*, i8*, i8*, i8* }
%"class.v8::base::EnumSet" = type { i64 }
%"class.v8::internal::wasm::AsmJsParser" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::AsmJsScanner", %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::AsmType"*, i64, %"class.v8::base::EnumSet", %"class.v8::internal::Vector.1478", %"class.v8::internal::Vector.1478", i64, %"class.v8::internal::wasm::AsmJsParser::CachedVectors", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.1487", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.1502", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.1502", i32, i32, i32, i8, i8*, i32, i32, i32, i32, i8, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.1510", %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, i64, %"class.v8::internal::wasm::AsmType"*, i64, i64, i32, i32, %"class.v8::internal::ZoneLinkedList" }
%"class.v8::internal::AsmJsScanner" = type <{ %"class.v8::internal::Utf16CharacterStream"*, i32, i32, i32, [4 x i8], i64, i64, i64, i8, [7 x i8], %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::unordered_map.1327", %"class.std::__1::unordered_map.1327", %"class.std::__1::unordered_map.1327", i32, [4 x i8], double, i32, i8, [3 x i8] }>
%"class.std::__1::unordered_map.1327" = type { %"class.std::__1::__hash_table.1328" }
%"class.std::__1::__hash_table.1328" = type <{ %"class.std::__1::unique_ptr.1329", %"class.std::__1::__compressed_pair.1339", %"class.std::__1::__compressed_pair.1344", %"class.std::__1::__compressed_pair.1349", [4 x i8] }>
%"class.std::__1::unique_ptr.1329" = type { %"class.std::__1::__compressed_pair.1330" }
%"class.std::__1::__compressed_pair.1330" = type { %"struct.std::__1::__compressed_pair_elem.1331", %"struct.std::__1::__compressed_pair_elem.1333" }
%"struct.std::__1::__compressed_pair_elem.1331" = type { %"struct.std::__1::__hash_node_base.1332"** }
%"struct.std::__1::__hash_node_base.1332" = type { %"struct.std::__1::__hash_node_base.1332"* }
%"struct.std::__1::__compressed_pair_elem.1333" = type { %"class.std::__1::__bucket_list_deallocator.1334" }
%"class.std::__1::__bucket_list_deallocator.1334" = type { %"class.std::__1::__compressed_pair.1335" }
%"class.std::__1::__compressed_pair.1335" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1339" = type { %"struct.std::__1::__compressed_pair_elem.1340" }
%"struct.std::__1::__compressed_pair_elem.1340" = type { %"struct.std::__1::__hash_node_base.1332" }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1349" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.v8::internal::wasm::WasmModuleBuilder" = type <{ %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector.1355", %"class.v8::internal::ZoneVector.1363", %"class.v8::internal::ZoneVector.1371", %"class.v8::internal::ZoneVector.1378", %"class.v8::internal::ZoneVector.1385", %"class.v8::internal::ZoneVector.1414", %"class.v8::internal::ZoneVector.1427", %"class.v8::internal::ZoneVector.1396", %"class.v8::internal::ZoneVector.1441", %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneUnorderedMap", i32, i32, i32, i32, i8, i8, [6 x i8] }>
%"class.v8::internal::ZoneVector.1355" = type { %"class.std::__1::vector.1356" }
%"class.std::__1::vector.1356" = type { %"class.std::__1::__vector_base.1357" }
%"class.std::__1::__vector_base.1357" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::Type"*, %"struct.v8::internal::wasm::WasmModuleBuilder::Type"*, %"class.std::__1::__compressed_pair.1359" }
%"struct.v8::internal::wasm::WasmModuleBuilder::Type" = type { i32, %union.anon.1358 }
%union.anon.1358 = type { %"class.v8::internal::Signature"* }
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.std::__1::__compressed_pair.1359" = type { %"struct.std::__1::__compressed_pair_elem.1360", %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1360" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::Type"* }
%"struct.std::__1::__compressed_pair_elem.1361" = type { %"class.v8::internal::ZoneAllocator.1362" }
%"class.v8::internal::ZoneAllocator.1362" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1363" = type { %"class.std::__1::vector.1364" }
%"class.std::__1::vector.1364" = type { %"class.std::__1::__vector_base.1365" }
%"class.std::__1::__vector_base.1365" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmFunctionImport"*, %"struct.v8::internal::wasm::WasmModuleBuilder::WasmFunctionImport"*, %"class.std::__1::__compressed_pair.1367" }
%"struct.v8::internal::wasm::WasmModuleBuilder::WasmFunctionImport" = type <{ %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366", i32, [4 x i8] }>
%"class.v8::internal::Vector.1366" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.1368", %"struct.std::__1::__compressed_pair_elem.1369" }
%"struct.std::__1::__compressed_pair_elem.1368" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmFunctionImport"* }
%"struct.std::__1::__compressed_pair_elem.1369" = type { %"class.v8::internal::ZoneAllocator.1370" }
%"class.v8::internal::ZoneAllocator.1370" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1371" = type { %"class.std::__1::vector.1372" }
%"class.std::__1::vector.1372" = type { %"class.std::__1::__vector_base.1373" }
%"class.std::__1::__vector_base.1373" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobalImport"*, %"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobalImport"*, %"class.std::__1::__compressed_pair.1374" }
%"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobalImport" = type <{ %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.1375", %"struct.std::__1::__compressed_pair_elem.1376" }
%"struct.std::__1::__compressed_pair_elem.1375" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobalImport"* }
%"struct.std::__1::__compressed_pair_elem.1376" = type { %"class.v8::internal::ZoneAllocator.1377" }
%"class.v8::internal::ZoneAllocator.1377" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1378" = type { %"class.std::__1::vector.1379" }
%"class.std::__1::vector.1379" = type { %"class.std::__1::__vector_base.1380" }
%"class.std::__1::__vector_base.1380" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmExport"*, %"struct.v8::internal::wasm::WasmModuleBuilder::WasmExport"*, %"class.std::__1::__compressed_pair.1381" }
%"struct.v8::internal::wasm::WasmModuleBuilder::WasmExport" = type { %"class.v8::internal::Vector.1366", i8, i32 }
%"class.std::__1::__compressed_pair.1381" = type { %"struct.std::__1::__compressed_pair_elem.1382", %"struct.std::__1::__compressed_pair_elem.1383" }
%"struct.std::__1::__compressed_pair_elem.1382" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmExport"* }
%"struct.std::__1::__compressed_pair_elem.1383" = type { %"class.v8::internal::ZoneAllocator.1384" }
%"class.v8::internal::ZoneAllocator.1384" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1385" = type { %"class.std::__1::vector.1386" }
%"class.std::__1::vector.1386" = type { %"class.std::__1::__vector_base.1387" }
%"class.std::__1::__vector_base.1387" = type { %"class.v8::internal::wasm::WasmFunctionBuilder"**, %"class.v8::internal::wasm::WasmFunctionBuilder"**, %"class.std::__1::__compressed_pair.1410" }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.1411", %"struct.std::__1::__compressed_pair_elem.1412" }
%"struct.std::__1::__compressed_pair_elem.1411" = type { %"class.v8::internal::wasm::WasmFunctionBuilder"** }
%"struct.std::__1::__compressed_pair_elem.1412" = type { %"class.v8::internal::ZoneAllocator.1413" }
%"class.v8::internal::ZoneAllocator.1413" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1414" = type { %"class.std::__1::vector.1415" }
%"class.std::__1::vector.1415" = type { %"class.std::__1::__vector_base.1416" }
%"class.std::__1::__vector_base.1416" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmTable"*, %"struct.v8::internal::wasm::WasmModuleBuilder::WasmTable"*, %"class.std::__1::__compressed_pair.1423" }
%"struct.v8::internal::wasm::WasmModuleBuilder::WasmTable" = type { %"class.v8::internal::wasm::ValueType", i32, i32, i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.v8::internal::wasm::WasmInitExpr" = type { %"union.v8::internal::wasm::WasmInitExpr::Immediate", i32, %"class.std::__1::unique_ptr.1417" }
%"union.v8::internal::wasm::WasmInitExpr::Immediate" = type { i64, [8 x i8] }
%"class.std::__1::unique_ptr.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"class.v8::internal::wasm::WasmInitExpr"* }
%"class.std::__1::__compressed_pair.1423" = type { %"struct.std::__1::__compressed_pair_elem.1424", %"struct.std::__1::__compressed_pair_elem.1425" }
%"struct.std::__1::__compressed_pair_elem.1424" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmTable"* }
%"struct.std::__1::__compressed_pair_elem.1425" = type { %"class.v8::internal::ZoneAllocator.1426" }
%"class.v8::internal::ZoneAllocator.1426" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1427" = type { %"class.std::__1::vector.1428" }
%"class.std::__1::vector.1428" = type { %"class.std::__1::__vector_base.1429" }
%"class.std::__1::__vector_base.1429" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmModuleBuilder::WasmDataSegment"*, %"class.std::__1::__compressed_pair.1437" }
%"struct.v8::internal::wasm::WasmModuleBuilder::WasmDataSegment" = type <{ %"class.v8::internal::ZoneVector.1430", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector.1430" = type { %"class.std::__1::vector.1431" }
%"class.std::__1::vector.1431" = type { %"class.std::__1::__vector_base.1432" }
%"class.std::__1::__vector_base.1432" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1433" }
%"class.std::__1::__compressed_pair.1433" = type { %"struct.std::__1::__compressed_pair_elem.1434", %"struct.std::__1::__compressed_pair_elem.1435" }
%"struct.std::__1::__compressed_pair_elem.1434" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.1435" = type { %"class.v8::internal::ZoneAllocator.1436" }
%"class.v8::internal::ZoneAllocator.1436" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438", %"struct.std::__1::__compressed_pair_elem.1439" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmDataSegment"* }
%"struct.std::__1::__compressed_pair_elem.1439" = type { %"class.v8::internal::ZoneAllocator.1440" }
%"class.v8::internal::ZoneAllocator.1440" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1396" = type { %"class.std::__1::vector.1397" }
%"class.std::__1::vector.1397" = type { %"class.std::__1::__vector_base.1398" }
%"class.std::__1::__vector_base.1398" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1399" }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.1400", %"struct.std::__1::__compressed_pair_elem.1401" }
%"struct.std::__1::__compressed_pair_elem.1400" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.1401" = type { %"class.v8::internal::ZoneAllocator.1402" }
%"class.v8::internal::ZoneAllocator.1402" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1441" = type { %"class.std::__1::vector.1442" }
%"class.std::__1::vector.1442" = type { %"class.std::__1::__vector_base.1443" }
%"class.std::__1::__vector_base.1443" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobal"*, %"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobal"*, %"class.std::__1::__compressed_pair.1444" }
%"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobal" = type { %"class.v8::internal::wasm::ValueType", i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.std::__1::__compressed_pair.1444" = type { %"struct.std::__1::__compressed_pair_elem.1445", %"struct.std::__1::__compressed_pair_elem.1446" }
%"struct.std::__1::__compressed_pair_elem.1445" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobal"* }
%"struct.std::__1::__compressed_pair_elem.1446" = type { %"class.v8::internal::ZoneAllocator.1447" }
%"class.v8::internal::ZoneAllocator.1447" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1448" = type { %"class.std::__1::vector.1449" }
%"class.std::__1::vector.1449" = type { %"class.std::__1::__vector_base.1450" }
%"class.std::__1::__vector_base.1450" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1451" }
%"class.std::__1::__compressed_pair.1451" = type { %"struct.std::__1::__compressed_pair_elem.776", %"struct.std::__1::__compressed_pair_elem.1452" }
%"struct.std::__1::__compressed_pair_elem.1452" = type { %"class.v8::internal::ZoneAllocator.1453" }
%"class.v8::internal::ZoneAllocator.1453" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map.1454" }
%"class.std::__1::unordered_map.1454" = type { %"class.std::__1::__hash_table.1455" }
%"class.std::__1::__hash_table.1455" = type <{ %"class.std::__1::unique_ptr.1456", %"class.std::__1::__compressed_pair.1465", %"class.std::__1::__compressed_pair.1469", %"class.std::__1::__compressed_pair.1472", [4 x i8] }>
%"class.std::__1::unique_ptr.1456" = type { %"class.std::__1::__compressed_pair.1457" }
%"class.std::__1::__compressed_pair.1457" = type { %"struct.std::__1::__compressed_pair_elem.1458", %"struct.std::__1::__compressed_pair_elem.1460" }
%"struct.std::__1::__compressed_pair_elem.1458" = type { %"struct.std::__1::__hash_node_base.1459"** }
%"struct.std::__1::__hash_node_base.1459" = type { %"struct.std::__1::__hash_node_base.1459"* }
%"struct.std::__1::__compressed_pair_elem.1460" = type { %"class.std::__1::__bucket_list_deallocator.1461" }
%"class.std::__1::__bucket_list_deallocator.1461" = type { %"class.std::__1::__compressed_pair.1462" }
%"class.std::__1::__compressed_pair.1462" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1463" }
%"struct.std::__1::__compressed_pair_elem.1463" = type { %"class.v8::internal::ZoneAllocator.1464" }
%"class.v8::internal::ZoneAllocator.1464" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1465" = type { %"struct.std::__1::__compressed_pair_elem.1466", %"struct.std::__1::__compressed_pair_elem.1467" }
%"struct.std::__1::__compressed_pair_elem.1466" = type { %"struct.std::__1::__hash_node_base.1459" }
%"struct.std::__1::__compressed_pair_elem.1467" = type { %"class.v8::internal::ZoneAllocator.1468" }
%"class.v8::internal::ZoneAllocator.1468" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1469" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1472" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.v8::internal::wasm::WasmFunctionBuilder" = type <{ %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::LocalDeclEncoder", i32, i32, %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::Vector.1366", %"class.v8::internal::ZoneVector.1396", %"class.v8::internal::ZoneVector.1396", %"class.v8::internal::ZoneVector.1396", %"class.v8::internal::ZoneVector.1396", %"class.v8::internal::ZoneVector.1403", %"class.v8::internal::wasm::ZoneBuffer", i32, i32, i32, i8, [3 x i8] }>
%"class.v8::internal::wasm::LocalDeclEncoder" = type { %"class.v8::internal::Signature"*, %"class.v8::internal::ZoneVector.1388", i64 }
%"class.v8::internal::ZoneVector.1388" = type { %"class.std::__1::vector.1389" }
%"class.std::__1::vector.1389" = type { %"class.std::__1::__vector_base.1390" }
%"class.std::__1::__vector_base.1390" = type { %"struct.std::__1::pair.1391"*, %"struct.std::__1::pair.1391"*, %"class.std::__1::__compressed_pair.1392" }
%"struct.std::__1::pair.1391" = type { i32, %"class.v8::internal::wasm::ValueType" }
%"class.std::__1::__compressed_pair.1392" = type { %"struct.std::__1::__compressed_pair_elem.1393", %"struct.std::__1::__compressed_pair_elem.1394" }
%"struct.std::__1::__compressed_pair_elem.1393" = type { %"struct.std::__1::pair.1391"* }
%"struct.std::__1::__compressed_pair_elem.1394" = type { %"class.v8::internal::ZoneAllocator.1395" }
%"class.v8::internal::ZoneAllocator.1395" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1403" = type { %"class.std::__1::vector.1404" }
%"class.std::__1::vector.1404" = type { %"class.std::__1::__vector_base.1405" }
%"class.std::__1::__vector_base.1405" = type { %"struct.v8::internal::wasm::WasmFunctionBuilder::DirectCallIndex"*, %"struct.v8::internal::wasm::WasmFunctionBuilder::DirectCallIndex"*, %"class.std::__1::__compressed_pair.1406" }
%"struct.v8::internal::wasm::WasmFunctionBuilder::DirectCallIndex" = type { i64, i32 }
%"class.std::__1::__compressed_pair.1406" = type { %"struct.std::__1::__compressed_pair_elem.1407", %"struct.std::__1::__compressed_pair_elem.1408" }
%"struct.std::__1::__compressed_pair_elem.1407" = type { %"struct.v8::internal::wasm::WasmFunctionBuilder::DirectCallIndex"* }
%"struct.std::__1::__compressed_pair_elem.1408" = type { %"class.v8::internal::ZoneAllocator.1409" }
%"class.v8::internal::ZoneAllocator.1409" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Vector.1478" = type { %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, i64 }
%"struct.v8::internal::wasm::AsmJsParser::VarInfo" = type <{ %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"*, i32, i32, i32, i8, i8, [2 x i8] }>
%"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo" = type { %"class.v8::internal::Vector.1366", %"class.v8::internal::ZoneUnorderedMap" }
%"class.v8::internal::wasm::AsmJsParser::CachedVectors" = type { %"class.v8::internal::ZoneVector.1479" }
%"class.v8::internal::ZoneVector.1479" = type { %"class.std::__1::vector.1480" }
%"class.std::__1::vector.1480" = type { %"class.std::__1::__vector_base.1481" }
%"class.std::__1::__vector_base.1481" = type { %"class.v8::internal::ZoneVector.1482"*, %"class.v8::internal::ZoneVector.1482"*, %"class.std::__1::__compressed_pair.1483" }
%"class.v8::internal::ZoneVector.1482" = type { %"class.std::__1::vector.1548" }
%"class.std::__1::vector.1548" = type { %"class.std::__1::__vector_base.1549" }
%"class.std::__1::__vector_base.1549" = type { %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"*, %"class.std::__1::__compressed_pair.1550" }
%"class.std::__1::__compressed_pair.1550" = type { %"struct.std::__1::__compressed_pair_elem.1551", %"struct.std::__1::__compressed_pair_elem.1552" }
%"struct.std::__1::__compressed_pair_elem.1551" = type { %"class.v8::internal::wasm::ValueType"* }
%"struct.std::__1::__compressed_pair_elem.1552" = type { %"class.v8::internal::ZoneAllocator.1553" }
%"class.v8::internal::ZoneAllocator.1553" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1483" = type { %"struct.std::__1::__compressed_pair_elem.1484", %"struct.std::__1::__compressed_pair_elem.1485" }
%"struct.std::__1::__compressed_pair_elem.1484" = type { %"class.v8::internal::ZoneVector.1482"* }
%"struct.std::__1::__compressed_pair_elem.1485" = type { %"class.v8::internal::ZoneAllocator.1486" }
%"class.v8::internal::ZoneAllocator.1486" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::wasm::AsmJsParser::CachedVectors.1487" = type { %"class.v8::internal::ZoneVector.1488" }
%"class.v8::internal::ZoneVector.1488" = type { %"class.std::__1::vector.1489" }
%"class.std::__1::vector.1489" = type { %"class.std::__1::__vector_base.1490" }
%"class.std::__1::__vector_base.1490" = type { %"class.v8::internal::ZoneVector.1491"*, %"class.v8::internal::ZoneVector.1491"*, %"class.std::__1::__compressed_pair.1498" }
%"class.v8::internal::ZoneVector.1491" = type { %"class.std::__1::vector.1492" }
%"class.std::__1::vector.1492" = type { %"class.std::__1::__vector_base.1493" }
%"class.std::__1::__vector_base.1493" = type { %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"**, %"class.std::__1::__compressed_pair.1494" }
%"class.std::__1::__compressed_pair.1494" = type { %"struct.std::__1::__compressed_pair_elem.1495", %"struct.std::__1::__compressed_pair_elem.1496" }
%"struct.std::__1::__compressed_pair_elem.1495" = type { %"class.v8::internal::wasm::AsmType"** }
%"struct.std::__1::__compressed_pair_elem.1496" = type { %"class.v8::internal::ZoneAllocator.1497" }
%"class.v8::internal::ZoneAllocator.1497" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1498" = type { %"struct.std::__1::__compressed_pair_elem.1499", %"struct.std::__1::__compressed_pair_elem.1500" }
%"struct.std::__1::__compressed_pair_elem.1499" = type { %"class.v8::internal::ZoneVector.1491"* }
%"struct.std::__1::__compressed_pair_elem.1500" = type { %"class.v8::internal::ZoneAllocator.1501" }
%"class.v8::internal::ZoneAllocator.1501" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::wasm::AsmJsParser::CachedVectors.1502" = type { %"class.v8::internal::ZoneVector.1503" }
%"class.v8::internal::ZoneVector.1503" = type { %"class.std::__1::vector.1504" }
%"class.std::__1::vector.1504" = type { %"class.std::__1::__vector_base.1505" }
%"class.std::__1::__vector_base.1505" = type { %"class.v8::internal::ZoneVector.1448"*, %"class.v8::internal::ZoneVector.1448"*, %"class.std::__1::__compressed_pair.1506" }
%"class.std::__1::__compressed_pair.1506" = type { %"struct.std::__1::__compressed_pair_elem.1507", %"struct.std::__1::__compressed_pair_elem.1508" }
%"struct.std::__1::__compressed_pair_elem.1507" = type { %"class.v8::internal::ZoneVector.1448"* }
%"struct.std::__1::__compressed_pair_elem.1508" = type { %"class.v8::internal::ZoneAllocator.1509" }
%"class.v8::internal::ZoneAllocator.1509" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1510" = type { %"class.std::__1::vector.1511" }
%"class.std::__1::vector.1511" = type { %"class.std::__1::__vector_base.1512" }
%"class.std::__1::__vector_base.1512" = type { %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"class.std::__1::__compressed_pair.1513" }
%"struct.v8::internal::wasm::AsmJsParser::BlockInfo" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1513" = type { %"struct.std::__1::__compressed_pair_elem.1514", %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1514" = type { %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* }
%"struct.std::__1::__compressed_pair_elem.1515" = type { %"class.v8::internal::ZoneAllocator.1516" }
%"class.v8::internal::ZoneAllocator.1516" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::wasm::AsmType" = type { i8 }
%"class.v8::internal::ZoneLinkedList" = type { %"class.std::__1::list.1517" }
%"class.std::__1::list.1517" = type { %"class.std::__1::__list_imp.1518" }
%"class.std::__1::__list_imp.1518" = type { %"struct.std::__1::__list_node_base.1519", %"class.std::__1::__compressed_pair.1520" }
%"struct.std::__1::__list_node_base.1519" = type { %"struct.std::__1::__list_node_base.1519"*, %"struct.std::__1::__list_node_base.1519"* }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1521" }
%"struct.std::__1::__compressed_pair_elem.1521" = type { %"class.v8::internal::ZoneAllocator.1522" }
%"class.v8::internal::ZoneAllocator.1522" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1525", i32, i32, i32, %"class.v8::internal::Handle.1523" }
%"class.v8::internal::Handle.1525" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1523" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::EmbeddedVector.1562" = type <{ %"class.v8::internal::Vector.933", [100 x i8], [4 x i8] }>
%"class.v8::internal::wasm::ErrorThrower" = type { %"class.v8::internal::Isolate"*, i8*, i32, %"class.std::__1::basic_string" }
%"struct.v8::internal::wasm::ModuleWireBytes" = type { %"class.v8::internal::Vector" }
%"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef" = type { %"class.v8::internal::SharedFunctionInfo" }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::EmbeddedVector.1572" = type <{ %"class.v8::internal::Vector.933", [50 x i8], [6 x i8] }>
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1546", %"class.v8::internal::Handle.1547", %"class.v8::internal::Handle.1547", %"class.v8::internal::Handle.1539", %"class.v8::internal::Handle.1547", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1546" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1539" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1547" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::ScopeInfo" = type { %"class.v8::internal::TorqueGeneratedScopeInfo" }
%"class.v8::internal::TorqueGeneratedScopeInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::Platform" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2v88internal4wasm11AsmJsParserD2Ev = comdat any

$_ZN2v88internal19AsmJsCompilationJobD2Ev = comdat any

$_ZN2v88internal19AsmJsCompilationJobD0Ev = comdat any

$_ZN2v88internal19AsmJsCompilationJob15FinalizeJobImplENS0_6HandleINS0_18SharedFunctionInfoEEEPNS0_12LocalIsolateE = comdat any

$_ZN2v88internal12AsmJsScannerD2Ev = comdat any

$_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE = comdat any

@.str = private unnamed_addr constant [20 x i8] c"__single_function__\00", align 1
@_ZN2v88internal5AsmJs19kSingleFunctionNameE = hidden local_unnamed_addr constant i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), align 8
@__func__._ZN2v88internal19AsmJsCompilationJob14ExecuteJobImplEv = private unnamed_addr constant [15 x i8] c"ExecuteJobImpl\00", align 1
@_ZN2v88internal26FLAG_suppress_asm_messagesE = external local_unnamed_addr global i8, align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"AsmJs::Compile\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"Cannot be instantiated as resumable function\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"Requires standard library\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"Unexpected stdlib member\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"Requires heap buffer\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"Invalid heap type: SharedArrayBuffer\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"Invalid heap size\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"AsmJs::Instantiate\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"Internal wasm failure: %s\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"Internal wasm failure\00", align 1
@_ZTVN2v88internal19AsmJsCompilationJobE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::AsmJsCompilationJob"*)* @_ZN2v88internal19AsmJsCompilationJobD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::AsmJsCompilationJob"*)* @_ZN2v88internal19AsmJsCompilationJobD0Ev to i8*), i8* bitcast (i32 (%"class.v8::internal::AsmJsCompilationJob"*)* @_ZN2v88internal19AsmJsCompilationJob14ExecuteJobImplEv to i8*), i8* bitcast (i32 (%"class.v8::internal::AsmJsCompilationJob"*, i64*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal19AsmJsCompilationJob15FinalizeJobImplENS0_6HandleINS0_18SharedFunctionInfoEEEPNS0_7IsolateE to i8*), i8* bitcast (i32 (%"class.v8::internal::AsmJsCompilationJob"*, i64*, %"class.v8::internal::LocalIsolate"*)* @_ZN2v88internal19AsmJsCompilationJob15FinalizeJobImplENS0_6HandleINS0_18SharedFunctionInfoEEEPNS0_12LocalIsolateE to i8*)] }, align 8
@_ZN2v88internal19FLAG_trace_asm_timeE = external local_unnamed_addr global i8, align 1
@.str.11 = private unnamed_addr constant [42 x i8] c"success, compile time %0.3f ms, %zu bytes\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"-1 != length\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.14 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"fround\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"acos\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"asin\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"atan\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"atan2\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"pow\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"imul\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"clz32\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"ceil\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"LN10\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"LN2\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"LOG2E\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"LOG10E\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"PI\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"SQRT1_2\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"SQRT2\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"Int8Array\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"Uint8Array\00", align 1
@.str.43 = private unnamed_addr constant [11 x i8] c"Int16Array\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"Uint16Array\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"Int32Array\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"Uint32Array\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"Float32Array\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"Float64Array\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"Math\00", align 1
@.str.50 = private unnamed_addr constant [18 x i8] c"success, %0.3f ms\00", align 1
@.str.51 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@__func__._ZN2v88internal19AsmJsCompilationJobC2EPNS0_9ParseInfoEPNS0_15FunctionLiteralEPNS0_19AccountingAllocatorE = private unnamed_addr constant [20 x i8] c"AsmJsCompilationJob\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"NewArray\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal19AsmJsCompilationJob14ExecuteJobImplEv(%"class.v8::internal::AsmJsCompilationJob"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Zone", align 8
  %3 = alloca %"class.v8::internal::wasm::AsmJsParser", align 8
  %4 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 2
  %5 = bitcast %"class.v8::internal::Zone"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %6, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %2, %"class.v8::internal::AccountingAllocator"* %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__._ZN2v88internal19AsmJsCompilationJob14ExecuteJobImplEv, i64 0, i64 0), i1 zeroext false) #7
  %8 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.v8::internal::ParseInfo"*, %"class.v8::internal::ParseInfo"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %9, i64 0, i32 9, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %10, align 8
  %12 = bitcast %"class.v8::internal::Utf16CharacterStream"* %11 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %13 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %13, i64 4
  %15 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.v8::internal::Utf16CharacterStream"* %11) #7
  %17 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 0, i32 3
  %18 = load %"class.v8::internal::UnoptimizedCompilationInfo"*, %"class.v8::internal::UnoptimizedCompilationInfo"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompilationInfo", %"class.v8::internal::UnoptimizedCompilationInfo"* %18, i64 0, i32 1
  %20 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %19, align 8
  %21 = call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %20) #7
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %11, i64 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = icmp ugt i64 %24, %22
  br i1 %25, label %26, label %30, !prof !2

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %11, i64 0, i32 1
  %28 = bitcast i16** %27 to i64*
  %29 = load i64, i64* %28, align 8
  br label %46

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %11, i64 0, i32 3
  %32 = bitcast i16** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %11, i64 0, i32 1
  %35 = bitcast i16** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %33, %36
  %38 = ashr exact i64 %37, 1
  %39 = add i64 %38, %24
  %40 = icmp ugt i64 %39, %22
  br i1 %40, label %41, label %46, !prof !3

41:                                               ; preds = %30
  %42 = inttoptr i64 %36 to i16*
  %43 = sub i64 %22, %24
  %44 = getelementptr inbounds i16, i16* %42, i64 %43
  %45 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %11, i64 0, i32 2
  store i16* %44, i16** %45, align 8
  br label %58

46:                                               ; preds = %30, %26
  %47 = phi i64 [ %29, %26 ], [ %36, %30 ]
  store i64 %22, i64* %23, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %11, i64 0, i32 2
  %49 = bitcast i16** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %11, i64 0, i32 6
  %51 = load i8, i8* %50, align 8, !range !4
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %46
  %54 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %12, align 8
  %55 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %54, i64 5
  %56 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %55, align 8
  %57 = call zeroext i1 %56(%"class.v8::internal::Utf16CharacterStream"* %11) #7
  br label %58

58:                                               ; preds = %41, %46, %53
  %59 = bitcast %"class.v8::internal::wasm::AsmJsParser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 680, i8* nonnull %59) #7
  %60 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  call void @_ZN2v88internal4wasm11AsmJsParserC1EPNS0_4ZoneEmPNS0_20Utf16CharacterStreamE(%"class.v8::internal::wasm::AsmJsParser"* nonnull %3, %"class.v8::internal::Zone"* nonnull %2, i64 %61, %"class.v8::internal::Utf16CharacterStream"* %11) #7
  %62 = call zeroext i1 @_ZN2v88internal4wasm11AsmJsParser3RunEv(%"class.v8::internal::wasm::AsmJsParser"* nonnull %3) #7
  br i1 %62, label %75, label %63

63:                                               ; preds = %58
  %64 = load i8, i8* @_ZN2v88internal26FLAG_suppress_asm_messagesE, align 1, !range !4
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %150

66:                                               ; preds = %63
  %67 = load %"class.v8::internal::ParseInfo"*, %"class.v8::internal::ParseInfo"** %8, align 8
  %68 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %3, i64 0, i32 19
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %3, i64 0, i32 18
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %67, i64 0, i32 2
  %73 = load %"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::UnoptimizedCompileState"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %73, i64 0, i32 3
  call void @_ZN2v88internal30PendingCompilationErrorHandler15ReportWarningAtEiiNS0_15MessageTemplateEPKc(%"class.v8::internal::PendingCompilationErrorHandler"* %74, i32 %69, i32 %69, i32 376, i8* %71) #7
  br label %150

75:                                               ; preds = %58
  %76 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 2, i32 2
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 2, i32 3
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %79, %77
  %81 = icmp ult i64 %80, 32
  br i1 %81, label %82, label %84, !prof !2

82:                                               ; preds = %75
  %83 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 32) #7
  br label %86

84:                                               ; preds = %75
  %85 = add i64 %77, 32
  store i64 %85, i64* %76, align 8
  br label %86

86:                                               ; preds = %84, %82
  %87 = phi i64 [ %83, %82 ], [ %77, %84 ]
  %88 = inttoptr i64 %87 to %"class.v8::internal::wasm::ZoneBuffer"*
  %89 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %88, i64 0, i32 0
  store %"class.v8::internal::Zone"* %4, %"class.v8::internal::Zone"** %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %88, i64 0, i32 1
  %91 = load i64, i64* %76, align 8
  %92 = load i64, i64* %78, align 8
  %93 = sub i64 %92, %91
  %94 = icmp ult i64 %93, 1024
  br i1 %94, label %95, label %97, !prof !2

95:                                               ; preds = %86
  %96 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 1024) #7
  br label %99

97:                                               ; preds = %86
  %98 = add i64 %91, 1024
  store i64 %98, i64* %76, align 8
  br label %99

99:                                               ; preds = %95, %97
  %100 = phi i64 [ %96, %95 ], [ %91, %97 ]
  %101 = inttoptr i64 %100 to i8*
  store i8* %101, i8** %90, align 8
  %102 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %88, i64 0, i32 2
  store i8* %101, i8** %102, align 8
  %103 = getelementptr inbounds i8, i8* %101, i64 1024
  %104 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %88, i64 0, i32 3
  store i8* %103, i8** %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 4
  store %"class.v8::internal::wasm::ZoneBuffer"* %88, %"class.v8::internal::wasm::ZoneBuffer"** %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %3, i64 0, i32 2
  %107 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %106, align 8
  call void @_ZNK2v88internal4wasm17WasmModuleBuilder7WriteToEPNS1_10ZoneBufferE(%"class.v8::internal::wasm::WasmModuleBuilder"* %107, %"class.v8::internal::wasm::ZoneBuffer"* %88) #7
  %108 = load i64, i64* %76, align 8
  %109 = load i64, i64* %78, align 8
  %110 = sub i64 %109, %108
  %111 = icmp ult i64 %110, 32
  br i1 %111, label %112, label %114, !prof !2

112:                                              ; preds = %99
  %113 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 32) #7
  br label %116

114:                                              ; preds = %99
  %115 = add i64 %108, 32
  store i64 %115, i64* %76, align 8
  br label %116

116:                                              ; preds = %114, %112
  %117 = phi i64 [ %113, %112 ], [ %108, %114 ]
  %118 = inttoptr i64 %117 to %"class.v8::internal::wasm::ZoneBuffer"*
  %119 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %118, i64 0, i32 0
  store %"class.v8::internal::Zone"* %4, %"class.v8::internal::Zone"** %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %118, i64 0, i32 1
  %121 = load i64, i64* %76, align 8
  %122 = load i64, i64* %78, align 8
  %123 = sub i64 %122, %121
  %124 = icmp ult i64 %123, 1024
  br i1 %124, label %125, label %127, !prof !2

125:                                              ; preds = %116
  %126 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 1024) #7
  br label %129

127:                                              ; preds = %116
  %128 = add i64 %121, 1024
  store i64 %128, i64* %76, align 8
  br label %129

129:                                              ; preds = %125, %127
  %130 = phi i64 [ %126, %125 ], [ %121, %127 ]
  %131 = inttoptr i64 %130 to i8*
  store i8* %131, i8** %120, align 8
  %132 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %118, i64 0, i32 2
  store i8* %131, i8** %132, align 8
  %133 = getelementptr inbounds i8, i8* %131, i64 1024
  %134 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %118, i64 0, i32 3
  store i8* %133, i8** %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 5
  store %"class.v8::internal::wasm::ZoneBuffer"* %118, %"class.v8::internal::wasm::ZoneBuffer"** %135, align 8
  %136 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %106, align 8
  call void @_ZNK2v88internal4wasm17WasmModuleBuilder21WriteAsmJsOffsetTableEPNS1_10ZoneBufferE(%"class.v8::internal::wasm::WasmModuleBuilder"* %136, %"class.v8::internal::wasm::ZoneBuffer"* %118) #7
  %137 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %3, i64 0, i32 6, i32 0
  %138 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 6, i32 0
  %139 = load i64, i64* %137, align 8
  store i64 %139, i64* %138, align 8
  %140 = load %"class.v8::internal::UnoptimizedCompilationInfo"*, %"class.v8::internal::UnoptimizedCompilationInfo"** %17, align 8
  %141 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompilationInfo", %"class.v8::internal::UnoptimizedCompilationInfo"* %140, i64 0, i32 1
  %142 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %141, align 8
  %143 = call i32 @_ZNK2v88internal15FunctionLiteral12end_positionEv(%"class.v8::internal::FunctionLiteral"* %142) #7
  %144 = load %"class.v8::internal::UnoptimizedCompilationInfo"*, %"class.v8::internal::UnoptimizedCompilationInfo"** %17, align 8
  %145 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompilationInfo", %"class.v8::internal::UnoptimizedCompilationInfo"* %144, i64 0, i32 1
  %146 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %145, align 8
  %147 = call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %146) #7
  %148 = sub nsw i32 %143, %147
  %149 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 8
  store i32 %148, i32* %149, align 8
  br label %150

150:                                              ; preds = %66, %63, %129
  %151 = phi i32 [ 0, %129 ], [ 1, %63 ], [ 1, %66 ]
  call void @_ZN2v88internal4wasm11AsmJsParserD2Ev(%"class.v8::internal::wasm::AsmJsParser"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 680, i8* nonnull %59) #7
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #7
  ret i32 %151
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1 zeroext) unnamed_addr #2

declare i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #2

declare void @_ZN2v88internal4wasm11AsmJsParserC1EPNS0_4ZoneEmPNS0_20Utf16CharacterStreamE(%"class.v8::internal::wasm::AsmJsParser"*, %"class.v8::internal::Zone"*, i64, %"class.v8::internal::Utf16CharacterStream"*) unnamed_addr #2

declare zeroext i1 @_ZN2v88internal4wasm11AsmJsParser3RunEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #2

declare void @_ZNK2v88internal4wasm17WasmModuleBuilder7WriteToEPNS1_10ZoneBufferE(%"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::ZoneBuffer"*) local_unnamed_addr #2

declare void @_ZNK2v88internal4wasm17WasmModuleBuilder21WriteAsmJsOffsetTableEPNS1_10ZoneBufferE(%"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::ZoneBuffer"*) local_unnamed_addr #2

declare i32 @_ZNK2v88internal15FunctionLiteral12end_positionEv(%"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal4wasm11AsmJsParserD2Ev(%"class.v8::internal::wasm::AsmJsParser"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1
  %8 = load %"struct.std::__1::__list_node_base.1519"*, %"struct.std::__1::__list_node_base.1519"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__list_imp.1518", %"class.std::__1::__list_imp.1518"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::__list_imp.1518", %"class.std::__1::__list_imp.1518"* %2, i64 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__list_node_base.1519"*, %"struct.std::__1::__list_node_base.1519"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base.1519", %"struct.std::__1::__list_node_base.1519"* %11, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__list_node_base.1519"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base.1519", %"struct.std::__1::__list_node_base.1519"* %8, i64 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base.1519"*, %"struct.std::__1::__list_node_base.1519"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base.1519", %"struct.std::__1::__list_node_base.1519"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base.1519"** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast %"struct.std::__1::__list_node_base.1519"* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.std::__1::__list_node_base.1519"** %12 to i64**
  %22 = load i64*, i64** %21, align 8
  store i64 %20, i64* %22, align 8
  store i64 0, i64* %3, align 8
  %23 = icmp eq %"struct.std::__1::__list_node_base.1519"* %8, %9
  br i1 %23, label %29, label %24

24:                                               ; preds = %6, %24
  %25 = phi %"struct.std::__1::__list_node_base.1519"* [ %27, %24 ], [ %8, %6 ]
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base.1519", %"struct.std::__1::__list_node_base.1519"* %25, i64 0, i32 1
  %27 = load %"struct.std::__1::__list_node_base.1519"*, %"struct.std::__1::__list_node_base.1519"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__list_node_base.1519"* %27, %9
  br i1 %28, label %29, label %24

29:                                               ; preds = %24, %1, %6
  %30 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %31 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %30, align 8
  %32 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %31 to i64
  %35 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %35 to i64*
  store i64 %34, i64* %36, align 8
  br label %37

37:                                               ; preds = %29, %33
  %38 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.v8::internal::ZoneVector.1448"*, %"class.v8::internal::ZoneVector.1448"** %38, align 8
  %40 = ptrtoint %"class.v8::internal::ZoneVector.1448"* %39 to i64
  %41 = icmp eq %"class.v8::internal::ZoneVector.1448"* %39, null
  br i1 %41, label %85, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %44 = load %"class.v8::internal::ZoneVector.1448"*, %"class.v8::internal::ZoneVector.1448"** %43, align 8
  %45 = icmp eq %"class.v8::internal::ZoneVector.1448"* %44, %39
  br i1 %45, label %84, label %46

46:                                               ; preds = %42
  %47 = getelementptr %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %44, i64 -1, i32 0, i32 0, i32 0
  %48 = ptrtoint i32** %47 to i64
  %49 = sub i64 %48, %40
  %50 = lshr i64 %49, 5
  %51 = add nuw nsw i64 %50, 1
  %52 = and i64 %51, 3
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %68, label %54

54:                                               ; preds = %46, %65
  %55 = phi %"class.v8::internal::ZoneVector.1448"* [ %57, %65 ], [ %44, %46 ]
  %56 = phi i64 [ %66, %65 ], [ %52, %46 ]
  %57 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %55, i64 -1
  %58 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = icmp eq i32* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %54
  %62 = ptrtoint i32* %59 to i64
  %63 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %55, i64 -1, i32 0, i32 0, i32 1
  %64 = bitcast i32** %63 to i64*
  store i64 %62, i64* %64, align 8
  br label %65

65:                                               ; preds = %61, %54
  %66 = add i64 %56, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %54, !llvm.loop !5

68:                                               ; preds = %65, %46
  %69 = phi %"class.v8::internal::ZoneVector.1448"* [ %44, %46 ], [ %57, %65 ]
  %70 = icmp ult i64 %49, 96
  br i1 %70, label %84, label %71

71:                                               ; preds = %68, %321
  %72 = phi %"class.v8::internal::ZoneVector.1448"* [ %313, %321 ], [ %69, %68 ]
  %73 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %72, i64 -1, i32 0, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = icmp eq i32* %74, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %71
  %77 = ptrtoint i32* %74 to i64
  %78 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %72, i64 -1, i32 0, i32 0, i32 1
  %79 = bitcast i32** %78 to i64*
  store i64 %77, i64* %79, align 8
  br label %80

80:                                               ; preds = %76, %71
  %81 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %72, i64 -2, i32 0, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = icmp eq i32* %82, null
  br i1 %83, label %304, label %300

84:                                               ; preds = %68, %321, %42
  store %"class.v8::internal::ZoneVector.1448"* %39, %"class.v8::internal::ZoneVector.1448"** %43, align 8
  br label %85

85:                                               ; preds = %37, %84
  %86 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.v8::internal::ZoneVector.1448"*, %"class.v8::internal::ZoneVector.1448"** %86, align 8
  %88 = ptrtoint %"class.v8::internal::ZoneVector.1448"* %87 to i64
  %89 = icmp eq %"class.v8::internal::ZoneVector.1448"* %87, null
  br i1 %89, label %133, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1
  %92 = load %"class.v8::internal::ZoneVector.1448"*, %"class.v8::internal::ZoneVector.1448"** %91, align 8
  %93 = icmp eq %"class.v8::internal::ZoneVector.1448"* %92, %87
  br i1 %93, label %132, label %94

94:                                               ; preds = %90
  %95 = getelementptr %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %92, i64 -1, i32 0, i32 0, i32 0
  %96 = ptrtoint i32** %95 to i64
  %97 = sub i64 %96, %88
  %98 = lshr i64 %97, 5
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %116, label %102

102:                                              ; preds = %94, %113
  %103 = phi %"class.v8::internal::ZoneVector.1448"* [ %105, %113 ], [ %92, %94 ]
  %104 = phi i64 [ %114, %113 ], [ %100, %94 ]
  %105 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %103, i64 -1
  %106 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load i32*, i32** %106, align 8
  %108 = icmp eq i32* %107, null
  br i1 %108, label %113, label %109

109:                                              ; preds = %102
  %110 = ptrtoint i32* %107 to i64
  %111 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %103, i64 -1, i32 0, i32 0, i32 1
  %112 = bitcast i32** %111 to i64*
  store i64 %110, i64* %112, align 8
  br label %113

113:                                              ; preds = %109, %102
  %114 = add i64 %104, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %102, !llvm.loop !7

116:                                              ; preds = %113, %94
  %117 = phi %"class.v8::internal::ZoneVector.1448"* [ %92, %94 ], [ %105, %113 ]
  %118 = icmp ult i64 %97, 96
  br i1 %118, label %132, label %119

119:                                              ; preds = %116, %298
  %120 = phi %"class.v8::internal::ZoneVector.1448"* [ %290, %298 ], [ %117, %116 ]
  %121 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %120, i64 -1, i32 0, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = icmp eq i32* %122, null
  br i1 %123, label %128, label %124

124:                                              ; preds = %119
  %125 = ptrtoint i32* %122 to i64
  %126 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %120, i64 -1, i32 0, i32 0, i32 1
  %127 = bitcast i32** %126 to i64*
  store i64 %125, i64* %127, align 8
  br label %128

128:                                              ; preds = %124, %119
  %129 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %120, i64 -2, i32 0, i32 0, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %281, label %277

132:                                              ; preds = %116, %298, %90
  store %"class.v8::internal::ZoneVector.1448"* %87, %"class.v8::internal::ZoneVector.1448"** %91, align 8
  br label %133

133:                                              ; preds = %85, %132
  %134 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %135 = load %"class.v8::internal::ZoneVector.1491"*, %"class.v8::internal::ZoneVector.1491"** %134, align 8
  %136 = ptrtoint %"class.v8::internal::ZoneVector.1491"* %135 to i64
  %137 = icmp eq %"class.v8::internal::ZoneVector.1491"* %135, null
  br i1 %137, label %181, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %140 = load %"class.v8::internal::ZoneVector.1491"*, %"class.v8::internal::ZoneVector.1491"** %139, align 8
  %141 = icmp eq %"class.v8::internal::ZoneVector.1491"* %140, %135
  br i1 %141, label %180, label %142

142:                                              ; preds = %138
  %143 = getelementptr %"class.v8::internal::ZoneVector.1491", %"class.v8::internal::ZoneVector.1491"* %140, i64 -1, i32 0, i32 0, i32 0
  %144 = ptrtoint %"class.v8::internal::wasm::AsmType"*** %143 to i64
  %145 = sub i64 %144, %136
  %146 = lshr i64 %145, 5
  %147 = add nuw nsw i64 %146, 1
  %148 = and i64 %147, 3
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %164, label %150

150:                                              ; preds = %142, %161
  %151 = phi %"class.v8::internal::ZoneVector.1491"* [ %153, %161 ], [ %140, %142 ]
  %152 = phi i64 [ %162, %161 ], [ %148, %142 ]
  %153 = getelementptr inbounds %"class.v8::internal::ZoneVector.1491", %"class.v8::internal::ZoneVector.1491"* %151, i64 -1
  %154 = getelementptr inbounds %"class.v8::internal::ZoneVector.1491", %"class.v8::internal::ZoneVector.1491"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %154, align 8
  %156 = icmp eq %"class.v8::internal::wasm::AsmType"** %155, null
  br i1 %156, label %161, label %157

157:                                              ; preds = %150
  %158 = ptrtoint %"class.v8::internal::wasm::AsmType"** %155 to i64
  %159 = getelementptr inbounds %"class.v8::internal::ZoneVector.1491", %"class.v8::internal::ZoneVector.1491"* %151, i64 -1, i32 0, i32 0, i32 1
  %160 = bitcast %"class.v8::internal::wasm::AsmType"*** %159 to i64*
  store i64 %158, i64* %160, align 8
  br label %161

161:                                              ; preds = %157, %150
  %162 = add i64 %152, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %150, !llvm.loop !8

164:                                              ; preds = %161, %142
  %165 = phi %"class.v8::internal::ZoneVector.1491"* [ %140, %142 ], [ %153, %161 ]
  %166 = icmp ult i64 %145, 96
  br i1 %166, label %180, label %167

167:                                              ; preds = %164, %275
  %168 = phi %"class.v8::internal::ZoneVector.1491"* [ %267, %275 ], [ %165, %164 ]
  %169 = getelementptr inbounds %"class.v8::internal::ZoneVector.1491", %"class.v8::internal::ZoneVector.1491"* %168, i64 -1, i32 0, i32 0, i32 0
  %170 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %169, align 8
  %171 = icmp eq %"class.v8::internal::wasm::AsmType"** %170, null
  br i1 %171, label %176, label %172

172:                                              ; preds = %167
  %173 = ptrtoint %"class.v8::internal::wasm::AsmType"** %170 to i64
  %174 = getelementptr inbounds %"class.v8::internal::ZoneVector.1491", %"class.v8::internal::ZoneVector.1491"* %168, i64 -1, i32 0, i32 0, i32 1
  %175 = bitcast %"class.v8::internal::wasm::AsmType"*** %174 to i64*
  store i64 %173, i64* %175, align 8
  br label %176

176:                                              ; preds = %172, %167
  %177 = getelementptr inbounds %"class.v8::internal::ZoneVector.1491", %"class.v8::internal::ZoneVector.1491"* %168, i64 -2, i32 0, i32 0, i32 0
  %178 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %177, align 8
  %179 = icmp eq %"class.v8::internal::wasm::AsmType"** %178, null
  br i1 %179, label %258, label %254

180:                                              ; preds = %164, %275, %138
  store %"class.v8::internal::ZoneVector.1491"* %135, %"class.v8::internal::ZoneVector.1491"** %139, align 8
  br label %181

181:                                              ; preds = %133, %180
  %182 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %183 = load %"class.v8::internal::ZoneVector.1482"*, %"class.v8::internal::ZoneVector.1482"** %182, align 8
  %184 = ptrtoint %"class.v8::internal::ZoneVector.1482"* %183 to i64
  %185 = icmp eq %"class.v8::internal::ZoneVector.1482"* %183, null
  br i1 %185, label %229, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %188 = load %"class.v8::internal::ZoneVector.1482"*, %"class.v8::internal::ZoneVector.1482"** %187, align 8
  %189 = icmp eq %"class.v8::internal::ZoneVector.1482"* %188, %183
  br i1 %189, label %228, label %190

190:                                              ; preds = %186
  %191 = getelementptr %"class.v8::internal::ZoneVector.1482", %"class.v8::internal::ZoneVector.1482"* %188, i64 -1, i32 0, i32 0, i32 0
  %192 = ptrtoint %"class.v8::internal::wasm::ValueType"** %191 to i64
  %193 = sub i64 %192, %184
  %194 = lshr i64 %193, 5
  %195 = add nuw nsw i64 %194, 1
  %196 = and i64 %195, 3
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %212, label %198

198:                                              ; preds = %190, %209
  %199 = phi %"class.v8::internal::ZoneVector.1482"* [ %201, %209 ], [ %188, %190 ]
  %200 = phi i64 [ %210, %209 ], [ %196, %190 ]
  %201 = getelementptr inbounds %"class.v8::internal::ZoneVector.1482", %"class.v8::internal::ZoneVector.1482"* %199, i64 -1
  %202 = getelementptr inbounds %"class.v8::internal::ZoneVector.1482", %"class.v8::internal::ZoneVector.1482"* %201, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %202, align 8
  %204 = icmp eq %"class.v8::internal::wasm::ValueType"* %203, null
  br i1 %204, label %209, label %205

205:                                              ; preds = %198
  %206 = ptrtoint %"class.v8::internal::wasm::ValueType"* %203 to i64
  %207 = getelementptr inbounds %"class.v8::internal::ZoneVector.1482", %"class.v8::internal::ZoneVector.1482"* %199, i64 -1, i32 0, i32 0, i32 1
  %208 = bitcast %"class.v8::internal::wasm::ValueType"** %207 to i64*
  store i64 %206, i64* %208, align 8
  br label %209

209:                                              ; preds = %205, %198
  %210 = add i64 %200, -1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %198, !llvm.loop !9

212:                                              ; preds = %209, %190
  %213 = phi %"class.v8::internal::ZoneVector.1482"* [ %188, %190 ], [ %201, %209 ]
  %214 = icmp ult i64 %193, 96
  br i1 %214, label %228, label %215

215:                                              ; preds = %212, %252
  %216 = phi %"class.v8::internal::ZoneVector.1482"* [ %244, %252 ], [ %213, %212 ]
  %217 = getelementptr inbounds %"class.v8::internal::ZoneVector.1482", %"class.v8::internal::ZoneVector.1482"* %216, i64 -1, i32 0, i32 0, i32 0
  %218 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %217, align 8
  %219 = icmp eq %"class.v8::internal::wasm::ValueType"* %218, null
  br i1 %219, label %224, label %220

220:                                              ; preds = %215
  %221 = ptrtoint %"class.v8::internal::wasm::ValueType"* %218 to i64
  %222 = getelementptr inbounds %"class.v8::internal::ZoneVector.1482", %"class.v8::internal::ZoneVector.1482"* %216, i64 -1, i32 0, i32 0, i32 1
  %223 = bitcast %"class.v8::internal::wasm::ValueType"** %222 to i64*
  store i64 %221, i64* %223, align 8
  br label %224

224:                                              ; preds = %220, %215
  %225 = getelementptr inbounds %"class.v8::internal::ZoneVector.1482", %"class.v8::internal::ZoneVector.1482"* %216, i64 -2, i32 0, i32 0, i32 0
  %226 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %225, align 8
  %227 = icmp eq %"class.v8::internal::wasm::ValueType"* %226, null
  br i1 %227, label %235, label %231

228:                                              ; preds = %212, %252, %186
  store %"class.v8::internal::ZoneVector.1482"* %183, %"class.v8::internal::ZoneVector.1482"** %187, align 8
  br label %229

229:                                              ; preds = %181, %228
  %230 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal12AsmJsScannerD2Ev(%"class.v8::internal::AsmJsScanner"* %230) #7
  ret void

231:                                              ; preds = %224
  %232 = ptrtoint %"class.v8::internal::wasm::ValueType"* %226 to i64
  %233 = getelementptr inbounds %"class.v8::internal::ZoneVector.1482", %"class.v8::internal::ZoneVector.1482"* %216, i64 -2, i32 0, i32 0, i32 1
  %234 = bitcast %"class.v8::internal::wasm::ValueType"** %233 to i64*
  store i64 %232, i64* %234, align 8
  br label %235

235:                                              ; preds = %231, %224
  %236 = getelementptr inbounds %"class.v8::internal::ZoneVector.1482", %"class.v8::internal::ZoneVector.1482"* %216, i64 -3, i32 0, i32 0, i32 0
  %237 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %236, align 8
  %238 = icmp eq %"class.v8::internal::wasm::ValueType"* %237, null
  br i1 %238, label %243, label %239

239:                                              ; preds = %235
  %240 = ptrtoint %"class.v8::internal::wasm::ValueType"* %237 to i64
  %241 = getelementptr inbounds %"class.v8::internal::ZoneVector.1482", %"class.v8::internal::ZoneVector.1482"* %216, i64 -3, i32 0, i32 0, i32 1
  %242 = bitcast %"class.v8::internal::wasm::ValueType"** %241 to i64*
  store i64 %240, i64* %242, align 8
  br label %243

243:                                              ; preds = %239, %235
  %244 = getelementptr inbounds %"class.v8::internal::ZoneVector.1482", %"class.v8::internal::ZoneVector.1482"* %216, i64 -4
  %245 = getelementptr inbounds %"class.v8::internal::ZoneVector.1482", %"class.v8::internal::ZoneVector.1482"* %244, i64 0, i32 0, i32 0, i32 0
  %246 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %245, align 8
  %247 = icmp eq %"class.v8::internal::wasm::ValueType"* %246, null
  br i1 %247, label %252, label %248

248:                                              ; preds = %243
  %249 = ptrtoint %"class.v8::internal::wasm::ValueType"* %246 to i64
  %250 = getelementptr inbounds %"class.v8::internal::ZoneVector.1482", %"class.v8::internal::ZoneVector.1482"* %216, i64 -4, i32 0, i32 0, i32 1
  %251 = bitcast %"class.v8::internal::wasm::ValueType"** %250 to i64*
  store i64 %249, i64* %251, align 8
  br label %252

252:                                              ; preds = %248, %243
  %253 = icmp eq %"class.v8::internal::ZoneVector.1482"* %244, %183
  br i1 %253, label %228, label %215

254:                                              ; preds = %176
  %255 = ptrtoint %"class.v8::internal::wasm::AsmType"** %178 to i64
  %256 = getelementptr inbounds %"class.v8::internal::ZoneVector.1491", %"class.v8::internal::ZoneVector.1491"* %168, i64 -2, i32 0, i32 0, i32 1
  %257 = bitcast %"class.v8::internal::wasm::AsmType"*** %256 to i64*
  store i64 %255, i64* %257, align 8
  br label %258

258:                                              ; preds = %254, %176
  %259 = getelementptr inbounds %"class.v8::internal::ZoneVector.1491", %"class.v8::internal::ZoneVector.1491"* %168, i64 -3, i32 0, i32 0, i32 0
  %260 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %259, align 8
  %261 = icmp eq %"class.v8::internal::wasm::AsmType"** %260, null
  br i1 %261, label %266, label %262

262:                                              ; preds = %258
  %263 = ptrtoint %"class.v8::internal::wasm::AsmType"** %260 to i64
  %264 = getelementptr inbounds %"class.v8::internal::ZoneVector.1491", %"class.v8::internal::ZoneVector.1491"* %168, i64 -3, i32 0, i32 0, i32 1
  %265 = bitcast %"class.v8::internal::wasm::AsmType"*** %264 to i64*
  store i64 %263, i64* %265, align 8
  br label %266

266:                                              ; preds = %262, %258
  %267 = getelementptr inbounds %"class.v8::internal::ZoneVector.1491", %"class.v8::internal::ZoneVector.1491"* %168, i64 -4
  %268 = getelementptr inbounds %"class.v8::internal::ZoneVector.1491", %"class.v8::internal::ZoneVector.1491"* %267, i64 0, i32 0, i32 0, i32 0
  %269 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %268, align 8
  %270 = icmp eq %"class.v8::internal::wasm::AsmType"** %269, null
  br i1 %270, label %275, label %271

271:                                              ; preds = %266
  %272 = ptrtoint %"class.v8::internal::wasm::AsmType"** %269 to i64
  %273 = getelementptr inbounds %"class.v8::internal::ZoneVector.1491", %"class.v8::internal::ZoneVector.1491"* %168, i64 -4, i32 0, i32 0, i32 1
  %274 = bitcast %"class.v8::internal::wasm::AsmType"*** %273 to i64*
  store i64 %272, i64* %274, align 8
  br label %275

275:                                              ; preds = %271, %266
  %276 = icmp eq %"class.v8::internal::ZoneVector.1491"* %267, %135
  br i1 %276, label %180, label %167

277:                                              ; preds = %128
  %278 = ptrtoint i32* %130 to i64
  %279 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %120, i64 -2, i32 0, i32 0, i32 1
  %280 = bitcast i32** %279 to i64*
  store i64 %278, i64* %280, align 8
  br label %281

281:                                              ; preds = %277, %128
  %282 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %120, i64 -3, i32 0, i32 0, i32 0
  %283 = load i32*, i32** %282, align 8
  %284 = icmp eq i32* %283, null
  br i1 %284, label %289, label %285

285:                                              ; preds = %281
  %286 = ptrtoint i32* %283 to i64
  %287 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %120, i64 -3, i32 0, i32 0, i32 1
  %288 = bitcast i32** %287 to i64*
  store i64 %286, i64* %288, align 8
  br label %289

289:                                              ; preds = %285, %281
  %290 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %120, i64 -4
  %291 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %290, i64 0, i32 0, i32 0, i32 0
  %292 = load i32*, i32** %291, align 8
  %293 = icmp eq i32* %292, null
  br i1 %293, label %298, label %294

294:                                              ; preds = %289
  %295 = ptrtoint i32* %292 to i64
  %296 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %120, i64 -4, i32 0, i32 0, i32 1
  %297 = bitcast i32** %296 to i64*
  store i64 %295, i64* %297, align 8
  br label %298

298:                                              ; preds = %294, %289
  %299 = icmp eq %"class.v8::internal::ZoneVector.1448"* %290, %87
  br i1 %299, label %132, label %119

300:                                              ; preds = %80
  %301 = ptrtoint i32* %82 to i64
  %302 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %72, i64 -2, i32 0, i32 0, i32 1
  %303 = bitcast i32** %302 to i64*
  store i64 %301, i64* %303, align 8
  br label %304

304:                                              ; preds = %300, %80
  %305 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %72, i64 -3, i32 0, i32 0, i32 0
  %306 = load i32*, i32** %305, align 8
  %307 = icmp eq i32* %306, null
  br i1 %307, label %312, label %308

308:                                              ; preds = %304
  %309 = ptrtoint i32* %306 to i64
  %310 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %72, i64 -3, i32 0, i32 0, i32 1
  %311 = bitcast i32** %310 to i64*
  store i64 %309, i64* %311, align 8
  br label %312

312:                                              ; preds = %308, %304
  %313 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %72, i64 -4
  %314 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %313, i64 0, i32 0, i32 0, i32 0
  %315 = load i32*, i32** %314, align 8
  %316 = icmp eq i32* %315, null
  br i1 %316, label %321, label %317

317:                                              ; preds = %312
  %318 = ptrtoint i32* %315 to i64
  %319 = getelementptr inbounds %"class.v8::internal::ZoneVector.1448", %"class.v8::internal::ZoneVector.1448"* %72, i64 -4, i32 0, i32 0, i32 1
  %320 = bitcast i32** %319 to i64*
  store i64 %318, i64* %320, align 8
  br label %321

321:                                              ; preds = %317, %312
  %322 = icmp eq %"class.v8::internal::ZoneVector.1448"* %313, %39
  br i1 %322, label %84, label %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal19AsmJsCompilationJob15FinalizeJobImplENS0_6HandleINS0_18SharedFunctionInfoEEEPNS0_7IsolateE(%"class.v8::internal::AsmJsCompilationJob"* nocapture, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Vector.1366", align 8
  %5 = alloca %"class.v8::internal::MessageLocation", align 8
  %6 = alloca %"class.v8::internal::EmbeddedVector.1562", align 8
  %7 = alloca %"class.v8::internal::wasm::ErrorThrower", align 8
  %8 = alloca %"struct.v8::internal::wasm::ModuleWireBytes", align 8
  %9 = alloca %"class.v8::base::TimeDelta", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %11 = tail call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #7
  %12 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %13 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 6, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %12) #7
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 3
  %18 = inttoptr i64 %17 to i64*
  store i64 %14, i64* %18, align 1
  %19 = bitcast %"class.v8::internal::wasm::ErrorThrower"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.v8::internal::wasm::ErrorThrower", %"class.v8::internal::wasm::ErrorThrower"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::wasm::ErrorThrower", %"class.v8::internal::wasm::ErrorThrower"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::wasm::ErrorThrower", %"class.v8::internal::wasm::ErrorThrower"* %7, i64 0, i32 2
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::wasm::ErrorThrower", %"class.v8::internal::wasm::ErrorThrower"* %7, i64 0, i32 3
  %24 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #7
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 160
  %26 = load %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::wasm::WasmEngine"** %25, align 8
  %27 = bitcast %"struct.v8::internal::wasm::ModuleWireBytes"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #7
  %28 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 4
  %29 = load %"class.v8::internal::wasm::ZoneBuffer"*, %"class.v8::internal::wasm::ZoneBuffer"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %29, i64 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %29, i64 0, i32 2
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = ptrtoint i8* %31 to i64
  %36 = sub i64 %34, %35
  %37 = shl i64 %36, 32
  %38 = ashr exact i64 %37, 32
  %39 = getelementptr inbounds %"struct.v8::internal::wasm::ModuleWireBytes", %"struct.v8::internal::wasm::ModuleWireBytes"* %8, i64 0, i32 0, i32 0
  store i8* %31, i8** %39, align 8
  %40 = getelementptr inbounds %"struct.v8::internal::wasm::ModuleWireBytes", %"struct.v8::internal::wasm::ModuleWireBytes"* %8, i64 0, i32 0, i32 1
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 5
  %42 = load %"class.v8::internal::wasm::ZoneBuffer"*, %"class.v8::internal::wasm::ZoneBuffer"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %42, i64 0, i32 1
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %42, i64 0, i32 2
  %46 = bitcast i8** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = ptrtoint i8* %44 to i64
  %49 = sub i64 %47, %48
  %50 = load i64, i64* %1, align 8
  %51 = add i64 %50, 27
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 64
  %55 = icmp ne i32 %54, 0
  %56 = ptrtoint i64* %15 to i64
  %57 = call i64* @_ZN2v88internal4wasm10WasmEngine26SyncCompileTranslatedAsmJsEPNS0_7IsolateEPNS1_12ErrorThrowerERKNS1_15ModuleWireBytesENS0_6VectorIKhEENS0_6HandleINS0_10HeapNumberEEENS0_12LanguageModeE(%"class.v8::internal::wasm::WasmEngine"* %26, %"class.v8::internal::Isolate"* %2, %"class.v8::internal::wasm::ErrorThrower"* nonnull %7, %"struct.v8::internal::wasm::ModuleWireBytes"* nonnull dereferenceable(16) %8, i8* %44, i64 %49, i64 %56, i1 zeroext %55) #7
  %58 = icmp eq i64* %57, null
  br i1 %58, label %59, label %60, !prof !2

59:                                               ; preds = %3
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.51, i64 0, i64 0)) #12
  unreachable

60:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #7
  %61 = bitcast %"class.v8::base::TimeDelta"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #7
  %62 = call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #7
  %63 = sub nsw i64 %62, %11
  %64 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %9, i64 0, i32 0
  store i64 %63, i64* %64, align 8
  %65 = call double @_ZNK2v84base9TimeDelta15InMillisecondsFEv(%"class.v8::base::TimeDelta"* nonnull %9) #7
  %66 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 7
  store double %65, double* %66, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #7
  %67 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 0, i32 3
  %68 = load %"class.v8::internal::UnoptimizedCompilationInfo"*, %"class.v8::internal::UnoptimizedCompilationInfo"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompilationInfo", %"class.v8::internal::UnoptimizedCompilationInfo"* %68, i64 0, i32 5, i32 0, i32 0
  store i64* %57, i64** %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %71 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %71, i64 0, i32 37
  %73 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 8
  %74 = load i32, i32* %73, align 8
  call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %72, i32 %74) #7
  %75 = load i64, i64* %1, align 8
  %76 = and i64 %75, -4294967296
  %77 = add i64 %75, 15
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 acquire, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %76, %80
  %82 = add i64 %81, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %76, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = icmp eq i16 %89, 100
  br i1 %90, label %91, label %97

91:                                               ; preds = %60
  %92 = add i64 %81, 11
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %76, %95
  br label %97

97:                                               ; preds = %60, %91
  %98 = phi i64 [ %96, %91 ], [ %81, %60 ]
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %100 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %99, align 8
  %101 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  %103 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %100, i64 %98) #7
  br label %117

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %106 = load i64*, i64** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %108 = load i64*, i64** %107, align 8
  %109 = icmp eq i64* %106, %108
  br i1 %109, label %110, label %112

110:                                              ; preds = %104
  %111 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #7
  br label %112

112:                                              ; preds = %110, %104
  %113 = phi i64* [ %111, %110 ], [ %106, %104 ]
  %114 = ptrtoint i64* %113 to i64
  %115 = add i64 %114, 8
  %116 = inttoptr i64 %115 to i64*
  store i64* %116, i64** %105, align 8
  store i64 %98, i64* %113, align 8
  br label %117

117:                                              ; preds = %102, %112
  %118 = phi i64* [ %103, %102 ], [ %113, %112 ]
  %119 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #7
  %120 = load i64, i64* %1, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %10, i64 0, i32 0
  %123 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %122) #7
  %124 = load %"class.v8::internal::wasm::ZoneBuffer"*, %"class.v8::internal::wasm::ZoneBuffer"** %28, align 8
  %125 = load i8, i8* @_ZN2v88internal26FLAG_suppress_asm_messagesE, align 1, !range !4
  %126 = icmp ne i8 %125, 0
  %127 = load i8, i8* @_ZN2v88internal19FLAG_trace_asm_timeE, align 1
  %128 = icmp eq i8 %127, 0
  %129 = or i1 %126, %128
  br i1 %129, label %167, label %130

130:                                              ; preds = %117
  %131 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %124, i64 0, i32 2
  %132 = bitcast i8** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::wasm::ZoneBuffer"* %124, i64 0, i32 1
  %135 = bitcast i8** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = sub i64 %133, %136
  %138 = load double, double* %66, align 8
  %139 = bitcast %"class.v8::internal::EmbeddedVector.1562"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %139) #7
  %140 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1562", %"class.v8::internal::EmbeddedVector.1562"* %6, i64 0, i32 1, i64 0
  %141 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1562", %"class.v8::internal::EmbeddedVector.1562"* %6, i64 0, i32 0, i32 0
  store i8* %140, i8** %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1562", %"class.v8::internal::EmbeddedVector.1562"* %6, i64 0, i32 0, i32 1
  store i64 100, i64* %142, align 8
  %143 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %140, i64 100, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0), double %138, i64 %137) #7
  %144 = icmp eq i32 %143, -1
  br i1 %144, label %145, label %146, !prof !2

145:                                              ; preds = %130
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0)) #12
  unreachable

146:                                              ; preds = %130
  %147 = sext i32 %143 to i64
  store i64 %147, i64* %142, align 8
  %148 = bitcast %"class.v8::internal::EmbeddedVector.1562"* %6 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::Vector.1366"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #7
  %151 = bitcast %"class.v8::internal::Vector.1366"* %4 to i64*
  store i64 %149, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %4, i64 0, i32 1
  store i64 %147, i64* %152, align 8
  %153 = load i64, i64* %118, align 8
  %154 = and i64 %153, -262144
  %155 = or i64 %154, 16
  %156 = inttoptr i64 %155 to i64*
  %157 = load i64, i64* %156, align 16
  %158 = add i64 %157, -41416
  %159 = inttoptr i64 %158 to %"class.v8::internal::Isolate"*
  %160 = bitcast %"class.v8::internal::MessageLocation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %160) #7
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %5, i64* %118, i32 %123, i32 %123) #7
  %161 = inttoptr i64 %158 to %"class.v8::internal::Factory"*
  %162 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %161, %"class.v8::internal::Vector.1366"* nonnull dereferenceable(16) %4) #7
  %163 = call i64* @_ZN2v88internal14MessageHandler17MakeMessageObjectEPNS0_7IsolateENS0_15MessageTemplateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS8_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %159, i32 377, %"class.v8::internal::MessageLocation"* nonnull %5, i64* %162, i64* null) #7
  %164 = load i64, i64* %163, align 8
  %165 = add i64 %164, 43
  %166 = inttoptr i64 %165 to i32*
  store atomic volatile i32 8, i32* %166 monotonic, align 4
  call void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"* %159, %"class.v8::internal::MessageLocation"* nonnull %5, i64* %163) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %160) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #7
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %139) #7
  br label %167

167:                                              ; preds = %117, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #7
  call void @_ZN2v88internal4wasm12ErrorThrowerD1Ev(%"class.v8::internal::wasm::ErrorThrower"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #7
  ret i32 0
}

declare i64* @_ZN2v88internal4wasm10WasmEngine26SyncCompileTranslatedAsmJsEPNS0_7IsolateEPNS1_12ErrorThrowerERKNS1_15ModuleWireBytesENS0_6VectorIKhEENS0_6HandleINS0_10HeapNumberEEENS0_12LanguageModeE(%"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::wasm::ErrorThrower"*, %"struct.v8::internal::wasm::ModuleWireBytes"* dereferenceable(16), i8*, i64, i64, i1 zeroext) local_unnamed_addr #2

declare double @_ZNK2v84base9TimeDelta15InMillisecondsFEv(%"class.v8::base::TimeDelta"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19AsmJsCompilationJob16RecordHistogramsEPNS0_7IsolateE(%"class.v8::internal::AsmJsCompilationJob"* nocapture readonly, %"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 14, i32 0
  %4 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %4, i64 0, i32 37
  %6 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  tail call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %5, i32 %7) #7
  ret void
}

declare i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal4wasm12ErrorThrowerD1Ev(%"class.v8::internal::wasm::ErrorThrower"*) unnamed_addr #4

declare void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::UnoptimizedCompilationJob"* @_ZN2v88internal5AsmJs17NewCompilationJobEPNS0_9ParseInfoEPNS0_15FunctionLiteralEPNS0_19AccountingAllocatorE(%"class.v8::internal::ParseInfo"*, %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::AccountingAllocator"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 272) #13
  %5 = bitcast i8* %4 to i32 (...)***
  %6 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 6
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 136
  %9 = bitcast i8* %8 to %"class.v8::internal::UnoptimizedCompilationInfo"*
  %10 = getelementptr inbounds i8, i8* %4, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 16
  %13 = bitcast i8* %12 to i64*
  %14 = tail call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #7
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %4, i64 24
  %16 = bitcast i8* %15 to i64*
  store i64 %7, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %4, i64 32
  %18 = bitcast i8* %17 to %"class.v8::internal::ParseInfo"**
  store %"class.v8::internal::ParseInfo"* %0, %"class.v8::internal::ParseInfo"** %18, align 8
  %19 = getelementptr inbounds i8, i8* %4, i64 40
  %20 = bitcast i8* %19 to i8**
  store i8* %8, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %4, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal19AsmJsCompilationJobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %22 = getelementptr inbounds i8, i8* %4, i64 64
  %23 = bitcast i8* %22 to %"class.v8::internal::AccountingAllocator"**
  store %"class.v8::internal::AccountingAllocator"* %2, %"class.v8::internal::AccountingAllocator"** %23, align 8
  %24 = getelementptr inbounds i8, i8* %4, i64 72
  %25 = bitcast i8* %24 to %"class.v8::internal::Zone"*
  tail call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* %25, %"class.v8::internal::AccountingAllocator"* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZN2v88internal19AsmJsCompilationJobC2EPNS0_9ParseInfoEPNS0_15FunctionLiteralEPNS0_19AccountingAllocatorE, i64 0, i64 0), i1 zeroext false) #7
  tail call void @_ZN2v88internal26UnoptimizedCompilationInfoC1EPNS0_4ZoneEPNS0_9ParseInfoEPNS0_15FunctionLiteralE(%"class.v8::internal::UnoptimizedCompilationInfo"* %9, %"class.v8::internal::Zone"* %25, %"class.v8::internal::ParseInfo"* %0, %"class.v8::internal::FunctionLiteral"* %1) #7
  %26 = getelementptr inbounds i8, i8* %4, i64 232
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 36, i1 false) #7
  %27 = bitcast i8* %4 to %"class.v8::internal::UnoptimizedCompilationJob"*
  ret %"class.v8::internal::UnoptimizedCompilationJob"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal5AsmJs18InstantiateAsmWasmEPNS0_7IsolateENS0_6HandleINS0_18SharedFunctionInfoEEENS4_INS0_11AsmWasmDataEEENS4_INS0_10JSReceiverEEESA_NS4_INS0_13JSArrayBufferEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::Vector.1366", align 8
  %8 = alloca %"class.v8::internal::MessageLocation", align 8
  %9 = alloca %"class.v8::internal::Vector.1366", align 8
  %10 = alloca %"class.v8::internal::MessageLocation", align 8
  %11 = alloca %"class.v8::internal::Vector.1366", align 8
  %12 = alloca %"class.v8::internal::MessageLocation", align 8
  %13 = alloca %"class.v8::internal::Vector.1366", align 8
  %14 = alloca %"class.v8::internal::MessageLocation", align 8
  %15 = alloca %"class.v8::internal::Vector.1366", align 8
  %16 = alloca %"class.v8::internal::MessageLocation", align 8
  %17 = alloca %"class.v8::internal::Vector.1366", align 8
  %18 = alloca %"class.v8::internal::MessageLocation", align 8
  %19 = alloca %"class.v8::internal::Vector", align 8
  %20 = alloca %"class.v8::internal::Vector", align 8
  %21 = alloca %"class.v8::internal::Vector", align 8
  %22 = alloca %"class.v8::internal::Vector", align 8
  %23 = alloca %"class.v8::internal::Vector", align 8
  %24 = alloca %"class.v8::internal::Vector", align 8
  %25 = alloca %"class.v8::internal::Vector", align 8
  %26 = alloca %"class.v8::internal::Vector", align 8
  %27 = alloca %"class.v8::internal::Vector", align 8
  %28 = alloca %"class.v8::internal::Vector", align 8
  %29 = alloca %"class.v8::internal::Vector", align 8
  %30 = alloca %"class.v8::internal::Vector", align 8
  %31 = alloca %"class.v8::internal::Vector", align 8
  %32 = alloca %"class.v8::internal::Vector", align 8
  %33 = alloca %"class.v8::internal::Vector", align 8
  %34 = alloca %"class.v8::internal::Vector", align 8
  %35 = alloca %"class.v8::internal::Vector", align 8
  %36 = alloca %"class.v8::internal::Vector", align 8
  %37 = alloca %"class.v8::internal::Vector", align 8
  %38 = alloca %"class.v8::internal::Vector", align 8
  %39 = alloca %"class.v8::internal::Vector", align 8
  %40 = alloca %"class.v8::internal::Vector", align 8
  %41 = alloca %"class.v8::internal::Vector", align 8
  %42 = alloca %"class.v8::internal::Vector", align 8
  %43 = alloca %"class.v8::internal::Vector", align 8
  %44 = alloca %"class.v8::internal::Vector", align 8
  %45 = alloca %"class.v8::internal::Vector", align 8
  %46 = alloca %"class.v8::internal::Vector", align 8
  %47 = alloca %"class.v8::internal::Vector", align 8
  %48 = alloca %"class.v8::internal::Vector", align 8
  %49 = alloca %"class.v8::internal::Vector", align 8
  %50 = alloca %"class.v8::internal::Vector", align 8
  %51 = alloca %"class.v8::internal::Vector", align 8
  %52 = alloca %"class.v8::internal::Vector", align 8
  %53 = alloca %"class.v8::internal::Vector", align 8
  %54 = alloca %"class.v8::internal::Vector", align 8
  %55 = alloca %"class.v8::internal::Vector", align 8
  %56 = alloca %"class.v8::internal::Vector", align 8
  %57 = alloca %"class.v8::internal::Vector", align 8
  %58 = alloca %"class.v8::internal::Vector", align 8
  %59 = alloca %"class.v8::internal::Vector", align 8
  %60 = alloca %"class.v8::internal::Vector", align 8
  %61 = alloca %"class.v8::internal::Vector", align 8
  %62 = alloca %"class.v8::internal::Vector", align 8
  %63 = alloca %"class.v8::internal::Vector", align 8
  %64 = alloca %"class.v8::internal::Vector", align 8
  %65 = alloca %"class.v8::internal::Vector", align 8
  %66 = alloca %"class.v8::internal::Vector", align 8
  %67 = alloca %"class.v8::internal::Vector", align 8
  %68 = alloca %"class.v8::internal::Vector", align 8
  %69 = alloca %"class.v8::internal::Vector", align 8
  %70 = alloca %"class.v8::internal::Vector", align 8
  %71 = alloca %"class.v8::internal::Vector", align 8
  %72 = alloca %"class.v8::internal::Vector", align 8
  %73 = alloca %"class.v8::internal::Vector", align 8
  %74 = alloca %"class.v8::internal::Vector", align 8
  %75 = alloca %"class.v8::internal::Vector", align 8
  %76 = alloca %"class.v8::internal::Vector", align 8
  %77 = alloca %"class.v8::internal::Vector", align 8
  %78 = alloca %"class.v8::internal::Vector", align 8
  %79 = alloca %"class.v8::internal::Vector", align 8
  %80 = alloca %"class.v8::internal::Vector", align 8
  %81 = alloca %"class.v8::internal::Vector.1366", align 8
  %82 = alloca %"class.v8::internal::MessageLocation", align 8
  %83 = alloca %"class.v8::internal::Vector.1366", align 8
  %84 = alloca %"class.v8::internal::MessageLocation", align 8
  %85 = alloca %"class.v8::internal::Vector.1366", align 8
  %86 = alloca %"class.v8::internal::MessageLocation", align 8
  %87 = alloca %"class.v8::internal::EmbeddedVector.1572", align 8
  %88 = alloca %"class.v8::internal::Vector.1366", align 8
  %89 = alloca %"class.v8::internal::LookupIterator", align 8
  %90 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %91 = alloca %"class.v8::internal::ScopeInfo", align 8
  %92 = alloca %"class.v8::internal::wasm::ErrorThrower", align 8
  %93 = alloca %"class.v8::base::TimeDelta", align 8
  %94 = tail call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #7
  %95 = load i64, i64* %2, align 8
  %96 = and i64 %95, -4294967296
  %97 = add i64 %95, 11
  %98 = inttoptr i64 %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %96, %100
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %103 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %102, align 8
  %104 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %6
  %106 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %103, i64 %101) #7
  br label %120

107:                                              ; preds = %6
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %109 = load i64*, i64** %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %111 = load i64*, i64** %110, align 8
  %112 = icmp eq i64* %109, %111
  br i1 %112, label %113, label %115

113:                                              ; preds = %107
  %114 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %115

115:                                              ; preds = %113, %107
  %116 = phi i64* [ %114, %113 ], [ %109, %107 ]
  %117 = ptrtoint i64* %116 to i64
  %118 = add i64 %117, 8
  %119 = inttoptr i64 %118 to i64*
  store i64* %119, i64** %108, align 8
  store i64 %101, i64* %116, align 8
  br label %120

120:                                              ; preds = %105, %115
  %121 = phi i64* [ %106, %105 ], [ %116, %115 ]
  %122 = load i64, i64* %1, align 8
  %123 = and i64 %122, -4294967296
  %124 = add i64 %122, 15
  %125 = inttoptr i64 %124 to i32*
  %126 = load atomic i32, i32* %125 acquire, align 4
  %127 = zext i32 %126 to i64
  %128 = or i64 %123, %127
  %129 = add i64 %128, -1
  %130 = inttoptr i64 %129 to i32*
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = zext i32 %131 to i64
  %133 = or i64 %123, %132
  %134 = add i64 %133, 7
  %135 = inttoptr i64 %134 to i16*
  %136 = load atomic i16, i16* %135 monotonic, align 2
  %137 = icmp eq i16 %136, 100
  br i1 %137, label %138, label %144

138:                                              ; preds = %120
  %139 = add i64 %128, 11
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %123, %142
  br label %144

144:                                              ; preds = %120, %138
  %145 = phi i64 [ %143, %138 ], [ %128, %120 ]
  %146 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %102, align 8
  %147 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %144
  %149 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %146, i64 %145) #7
  br label %163

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %152 = load i64*, i64** %151, align 8
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %154 = load i64*, i64** %153, align 8
  %155 = icmp eq i64* %152, %154
  br i1 %155, label %156, label %158

156:                                              ; preds = %150
  %157 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %158

158:                                              ; preds = %156, %150
  %159 = phi i64* [ %157, %156 ], [ %152, %150 ]
  %160 = ptrtoint i64* %159 to i64
  %161 = add i64 %160, 8
  %162 = inttoptr i64 %161 to i64*
  store i64* %162, i64** %151, align 8
  store i64 %145, i64* %159, align 8
  br label %163

163:                                              ; preds = %148, %158
  %164 = phi i64* [ %149, %148 ], [ %159, %158 ]
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 160
  %166 = load %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::wasm::WasmEngine"** %165, align 8
  %167 = tail call i64* @_ZN2v88internal4wasm10WasmEngine23FinalizeTranslatedAsmJsEPNS0_7IsolateENS0_6HandleINS0_11AsmWasmDataEEENS5_INS0_6ScriptEEE(%"class.v8::internal::wasm::WasmEngine"* %166, %"class.v8::internal::Isolate"* %0, i64* %2, i64* %164) #7
  %168 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %90 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #7
  %169 = load i64, i64* %1, align 8
  %170 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %169, i64* %170, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %90, i64 0, i32 0
  %172 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %171) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #7
  %173 = bitcast %"class.v8::internal::ScopeInfo"* %91 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #7
  %174 = load i64, i64* %1, align 8
  %175 = and i64 %174, -4294967296
  %176 = add i64 %174, 7
  %177 = inttoptr i64 %176 to i32*
  %178 = load atomic i32, i32* %177 acquire, align 4
  %179 = zext i32 %178 to i64
  %180 = or i64 %175, %179
  %181 = and i64 %179, 1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %193, label %183

183:                                              ; preds = %163
  %184 = add i64 %180, -1
  %185 = inttoptr i64 %184 to i32*
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = zext i32 %186 to i64
  %188 = or i64 %175, %187
  %189 = add i64 %188, 7
  %190 = inttoptr i64 %189 to i16*
  %191 = load atomic i16, i16* %190 monotonic, align 2
  %192 = icmp eq i16 %191, 178
  br i1 %192, label %214, label %193

193:                                              ; preds = %183, %163
  %194 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %195 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %194, null
  br i1 %195, label %202, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %194, i64 0, i32 0, i32 1
  %198 = load i8, i8* %197, align 8, !range !4
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %202, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %194, i64 0, i32 1, i64 0
  br label %210

202:                                              ; preds = %196, %193
  %203 = and i64 %174, -262144
  %204 = or i64 %203, 16
  %205 = inttoptr i64 %204 to i64*
  %206 = load i64, i64* %205, align 16
  %207 = add i64 %206, -41416
  %208 = inttoptr i64 %207 to %"class.v8::internal::Isolate"*
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %208, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %210

210:                                              ; preds = %202, %200
  %211 = phi i64* [ %209, %202 ], [ %201, %200 ]
  %212 = getelementptr inbounds i64, i64* %211, i64 28
  %213 = load i64, i64* %212, align 8
  br label %214

214:                                              ; preds = %183, %210
  %215 = phi i64 [ %213, %210 ], [ %180, %183 ]
  %216 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %215, i64* %216, align 8
  %217 = call zeroext i8 @_ZNK2v88internal9ScopeInfo13function_kindEv(%"class.v8::internal::ScopeInfo"* nonnull %91) #7
  %218 = add i8 %217, -12
  %219 = icmp ult i8 %218, 10
  %220 = add i8 %217, -1
  %221 = icmp ult i8 %220, 2
  %222 = or i1 %219, %221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #7
  br i1 %222, label %223, label %244

223:                                              ; preds = %214
  %224 = load i8, i8* @_ZN2v88internal26FLAG_suppress_asm_messagesE, align 1, !range !4
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %226, label %3057

226:                                              ; preds = %223
  %227 = bitcast %"class.v8::internal::Vector.1366"* %83 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %227)
  %228 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %83, i64 0, i32 0
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i8** %228, align 8
  %229 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %83, i64 0, i32 1
  store i64 44, i64* %229, align 8
  %230 = load i64, i64* %164, align 8
  %231 = and i64 %230, -262144
  %232 = or i64 %231, 16
  %233 = inttoptr i64 %232 to i64*
  %234 = load i64, i64* %233, align 16
  %235 = add i64 %234, -41416
  %236 = inttoptr i64 %235 to %"class.v8::internal::Isolate"*
  %237 = bitcast %"class.v8::internal::MessageLocation"* %84 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %237) #7
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %84, i64* %164, i32 %172, i32 %172) #7
  %238 = inttoptr i64 %235 to %"class.v8::internal::Factory"*
  %239 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %238, %"class.v8::internal::Vector.1366"* nonnull dereferenceable(16) %83) #7
  %240 = call i64* @_ZN2v88internal14MessageHandler17MakeMessageObjectEPNS0_7IsolateENS0_15MessageTemplateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS8_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %236, i32 379, %"class.v8::internal::MessageLocation"* nonnull %84, i64* %239, i64* null) #7
  %241 = load i64, i64* %240, align 8
  %242 = add i64 %241, 43
  %243 = inttoptr i64 %242 to i32*
  store atomic volatile i32 32, i32* %243 monotonic, align 4
  call void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"* %236, %"class.v8::internal::MessageLocation"* nonnull %84, i64* %240) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %237) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %227)
  br label %3057

244:                                              ; preds = %214
  %245 = load i64, i64* %121, align 8
  %246 = add i64 %245, 3
  %247 = inttoptr i64 %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %2811, label %250

250:                                              ; preds = %244
  %251 = icmp eq i64* %3, null
  br i1 %251, label %252, label %273

252:                                              ; preds = %250
  %253 = load i8, i8* @_ZN2v88internal26FLAG_suppress_asm_messagesE, align 1, !range !4
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %255, label %3057

255:                                              ; preds = %252
  %256 = bitcast %"class.v8::internal::Vector.1366"* %81 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %256)
  %257 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %81, i64 0, i32 0
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8** %257, align 8
  %258 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %81, i64 0, i32 1
  store i64 25, i64* %258, align 8
  %259 = load i64, i64* %164, align 8
  %260 = and i64 %259, -262144
  %261 = or i64 %260, 16
  %262 = inttoptr i64 %261 to i64*
  %263 = load i64, i64* %262, align 16
  %264 = add i64 %263, -41416
  %265 = inttoptr i64 %264 to %"class.v8::internal::Isolate"*
  %266 = bitcast %"class.v8::internal::MessageLocation"* %82 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %266) #7
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %82, i64* %164, i32 %172, i32 %172) #7
  %267 = inttoptr i64 %264 to %"class.v8::internal::Factory"*
  %268 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %267, %"class.v8::internal::Vector.1366"* nonnull dereferenceable(16) %81) #7
  %269 = call i64* @_ZN2v88internal14MessageHandler17MakeMessageObjectEPNS0_7IsolateENS0_15MessageTemplateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS8_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %265, i32 379, %"class.v8::internal::MessageLocation"* nonnull %82, i64* %268, i64* null) #7
  %270 = load i64, i64* %269, align 8
  %271 = add i64 %270, 43
  %272 = inttoptr i64 %271 to i32*
  store atomic volatile i32 32, i32* %272 monotonic, align 4
  call void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"* %265, %"class.v8::internal::MessageLocation"* nonnull %82, i64* %269) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %256)
  br label %3057

273:                                              ; preds = %250
  %274 = and i64 %248, 1
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %306, label %276

276:                                              ; preds = %273
  %277 = and i64 %248, -2
  %278 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 352
  %279 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %278) #7
  %280 = load i64, i64* %279, align 8
  %281 = and i64 %280, 1
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %294, label %283

283:                                              ; preds = %276
  %284 = and i64 %280, -4294967296
  %285 = add i64 %280, -1
  %286 = inttoptr i64 %285 to i32*
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = zext i32 %287 to i64
  %289 = or i64 %284, %288
  %290 = add i64 %289, 7
  %291 = inttoptr i64 %290 to i16*
  %292 = load atomic i16, i16* %291 monotonic, align 2
  %293 = icmp eq i16 %292, 66
  br i1 %293, label %298, label %2689

294:                                              ; preds = %276
  %295 = trunc i64 %280 to i32
  %296 = ashr i32 %295, 1
  %297 = sitofp i32 %296 to double
  br label %302

298:                                              ; preds = %283
  %299 = add i64 %280, 3
  %300 = inttoptr i64 %299 to double*
  %301 = load double, double* %300, align 1
  br label %302

302:                                              ; preds = %298, %294
  %303 = phi double [ %297, %294 ], [ %301, %298 ]
  %304 = call double @llvm.fabs.f64(double %303) #14
  %305 = fcmp oeq double %304, 0x7FF0000000000000
  br i1 %305, label %306, label %2689

306:                                              ; preds = %302, %273
  %307 = phi i64 [ %248, %273 ], [ %277, %302 ]
  %308 = and i64 %307, 2
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %333, label %310

310:                                              ; preds = %306
  %311 = and i64 %307, -3
  %312 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 379
  %313 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %312) #7
  %314 = load i64, i64* %313, align 8
  %315 = and i64 %314, 1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %2689, label %317

317:                                              ; preds = %310
  %318 = and i64 %314, -4294967296
  %319 = add i64 %314, -1
  %320 = inttoptr i64 %319 to i32*
  %321 = load atomic i32, i32* %320 monotonic, align 4
  %322 = zext i32 %321 to i64
  %323 = or i64 %318, %322
  %324 = add i64 %323, 7
  %325 = inttoptr i64 %324 to i16*
  %326 = load atomic i16, i16* %325 monotonic, align 2
  %327 = icmp eq i16 %326, 66
  br i1 %327, label %328, label %2689

328:                                              ; preds = %317
  %329 = add i64 %314, 3
  %330 = inttoptr i64 %329 to double*
  %331 = load double, double* %330, align 1
  %332 = fcmp uno double %331, 0.000000e+00
  br i1 %332, label %333, label %2689

333:                                              ; preds = %328, %306
  %334 = phi i64 [ %307, %306 ], [ %311, %328 ]
  %335 = and i64 %334, 4
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %399, label %337

337:                                              ; preds = %333
  %338 = and i64 %334, -5
  %339 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %340 = bitcast %"class.v8::internal::Vector"* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %340) #7
  %341 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %74, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i8** %341, align 8
  %342 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %74, i64 0, i32 1
  store i64 3, i64* %342, align 8
  %343 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %339, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %74, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %340) #7
  %344 = bitcast %"class.v8::internal::Vector"* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %344) #7
  %345 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %73, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %345, align 8
  %346 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %73, i64 0, i32 1
  store i64 4, i64* %346, align 8
  %347 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %339, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %73, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %344) #7
  %348 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %347) #7
  %349 = load i64, i64* %348, align 8
  %350 = and i64 %349, 1
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %363, label %352

352:                                              ; preds = %337
  %353 = and i64 %349, -4294967296
  %354 = add i64 %349, -1
  %355 = inttoptr i64 %354 to i32*
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = zext i32 %356 to i64
  %358 = or i64 %353, %357
  %359 = add i64 %358, 7
  %360 = inttoptr i64 %359 to i16*
  %361 = load atomic i16, i16* %360 monotonic, align 2
  %362 = icmp ugt i16 %361, 185
  br i1 %362, label %365, label %363

363:                                              ; preds = %352, %337
  %364 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %367

365:                                              ; preds = %352
  %366 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %348, i64* %343) #7
  br label %367

367:                                              ; preds = %365, %363
  %368 = phi i64* [ %366, %365 ], [ %364, %363 ]
  %369 = load i64, i64* %368, align 8
  %370 = and i64 %369, 1
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %2689, label %372

372:                                              ; preds = %367
  %373 = and i64 %369, -4294967296
  %374 = add i64 %369, -1
  %375 = inttoptr i64 %374 to i32*
  %376 = load atomic i32, i32* %375 monotonic, align 4
  %377 = zext i32 %376 to i64
  %378 = or i64 %373, %377
  %379 = add i64 %378, 7
  %380 = inttoptr i64 %379 to i16*
  %381 = load atomic i16, i16* %380 monotonic, align 2
  %382 = add i16 %381, -1059
  %383 = icmp ult i16 %382, 15
  br i1 %383, label %384, label %2689

384:                                              ; preds = %372
  %385 = add i64 %369, 11
  %386 = inttoptr i64 %385 to i32*
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = zext i32 %387 to i64
  %389 = or i64 %373, %388
  %390 = add i64 %389, 3
  %391 = inttoptr i64 %390 to i32*
  %392 = load atomic i32, i32* %391 acquire, align 4
  %393 = and i32 %392, 1
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %2689

395:                                              ; preds = %384
  %396 = load atomic i32, i32* %391 acquire, align 4
  %397 = and i32 %396, -2
  %398 = icmp eq i32 %397, 1614
  br i1 %398, label %399, label %2689

399:                                              ; preds = %395, %333
  %400 = phi i64 [ %334, %333 ], [ %338, %395 ]
  %401 = and i64 %400, 8
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %465, label %403

403:                                              ; preds = %399
  %404 = and i64 %400, -9
  %405 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %406 = bitcast %"class.v8::internal::Vector"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %406) #7
  %407 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %68, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), i8** %407, align 8
  %408 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %68, i64 0, i32 1
  store i64 3, i64* %408, align 8
  %409 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %405, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %68, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %406) #7
  %410 = bitcast %"class.v8::internal::Vector"* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %410) #7
  %411 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %66, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %411, align 8
  %412 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %66, i64 0, i32 1
  store i64 4, i64* %412, align 8
  %413 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %405, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %66, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %410) #7
  %414 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %413) #7
  %415 = load i64, i64* %414, align 8
  %416 = and i64 %415, 1
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %429, label %418

418:                                              ; preds = %403
  %419 = and i64 %415, -4294967296
  %420 = add i64 %415, -1
  %421 = inttoptr i64 %420 to i32*
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = zext i32 %422 to i64
  %424 = or i64 %419, %423
  %425 = add i64 %424, 7
  %426 = inttoptr i64 %425 to i16*
  %427 = load atomic i16, i16* %426 monotonic, align 2
  %428 = icmp ugt i16 %427, 185
  br i1 %428, label %431, label %429

429:                                              ; preds = %418, %403
  %430 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %433

431:                                              ; preds = %418
  %432 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %414, i64* %409) #7
  br label %433

433:                                              ; preds = %431, %429
  %434 = phi i64* [ %432, %431 ], [ %430, %429 ]
  %435 = load i64, i64* %434, align 8
  %436 = and i64 %435, 1
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %2689, label %438

438:                                              ; preds = %433
  %439 = and i64 %435, -4294967296
  %440 = add i64 %435, -1
  %441 = inttoptr i64 %440 to i32*
  %442 = load atomic i32, i32* %441 monotonic, align 4
  %443 = zext i32 %442 to i64
  %444 = or i64 %439, %443
  %445 = add i64 %444, 7
  %446 = inttoptr i64 %445 to i16*
  %447 = load atomic i16, i16* %446 monotonic, align 2
  %448 = add i16 %447, -1059
  %449 = icmp ult i16 %448, 15
  br i1 %449, label %450, label %2689

450:                                              ; preds = %438
  %451 = add i64 %435, 11
  %452 = inttoptr i64 %451 to i32*
  %453 = load atomic i32, i32* %452 monotonic, align 4
  %454 = zext i32 %453 to i64
  %455 = or i64 %439, %454
  %456 = add i64 %455, 3
  %457 = inttoptr i64 %456 to i32*
  %458 = load atomic i32, i32* %457 acquire, align 4
  %459 = and i32 %458, 1
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %2689

461:                                              ; preds = %450
  %462 = load atomic i32, i32* %457 acquire, align 4
  %463 = and i32 %462, -2
  %464 = icmp eq i32 %463, 1612
  br i1 %464, label %465, label %2689

465:                                              ; preds = %461, %399
  %466 = phi i64 [ %400, %399 ], [ %404, %461 ]
  %467 = and i64 %466, 16
  %468 = icmp eq i64 %467, 0
  br i1 %468, label %531, label %469

469:                                              ; preds = %465
  %470 = and i64 %466, -17
  %471 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %472 = bitcast %"class.v8::internal::Vector"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %472) #7
  %473 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %60, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i8** %473, align 8
  %474 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %60, i64 0, i32 1
  store i64 3, i64* %474, align 8
  %475 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %471, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %60, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %472) #7
  %476 = bitcast %"class.v8::internal::Vector"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %476) #7
  %477 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %58, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %477, align 8
  %478 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %58, i64 0, i32 1
  store i64 4, i64* %478, align 8
  %479 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %471, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %58, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %476) #7
  %480 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %479) #7
  %481 = load i64, i64* %480, align 8
  %482 = and i64 %481, 1
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %495, label %484

484:                                              ; preds = %469
  %485 = and i64 %481, -4294967296
  %486 = add i64 %481, -1
  %487 = inttoptr i64 %486 to i32*
  %488 = load atomic i32, i32* %487 monotonic, align 4
  %489 = zext i32 %488 to i64
  %490 = or i64 %485, %489
  %491 = add i64 %490, 7
  %492 = inttoptr i64 %491 to i16*
  %493 = load atomic i16, i16* %492 monotonic, align 2
  %494 = icmp ugt i16 %493, 185
  br i1 %494, label %497, label %495

495:                                              ; preds = %484, %469
  %496 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %499

497:                                              ; preds = %484
  %498 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %480, i64* %475) #7
  br label %499

499:                                              ; preds = %497, %495
  %500 = phi i64* [ %498, %497 ], [ %496, %495 ]
  %501 = load i64, i64* %500, align 8
  %502 = and i64 %501, 1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %2689, label %504

504:                                              ; preds = %499
  %505 = and i64 %501, -4294967296
  %506 = add i64 %501, -1
  %507 = inttoptr i64 %506 to i32*
  %508 = load atomic i32, i32* %507 monotonic, align 4
  %509 = zext i32 %508 to i64
  %510 = or i64 %505, %509
  %511 = add i64 %510, 7
  %512 = inttoptr i64 %511 to i16*
  %513 = load atomic i16, i16* %512 monotonic, align 2
  %514 = add i16 %513, -1059
  %515 = icmp ult i16 %514, 15
  br i1 %515, label %516, label %2689

516:                                              ; preds = %504
  %517 = add i64 %501, 11
  %518 = inttoptr i64 %517 to i32*
  %519 = load atomic i32, i32* %518 monotonic, align 4
  %520 = zext i32 %519 to i64
  %521 = or i64 %505, %520
  %522 = add i64 %521, 3
  %523 = inttoptr i64 %522 to i32*
  %524 = load atomic i32, i32* %523 acquire, align 4
  %525 = and i32 %524, 1
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %2689

527:                                              ; preds = %516
  %528 = load atomic i32, i32* %523 acquire, align 4
  %529 = and i32 %528, -2
  %530 = icmp eq i32 %529, 1600
  br i1 %530, label %531, label %2689

531:                                              ; preds = %527, %465
  %532 = phi i64 [ %466, %465 ], [ %470, %527 ]
  %533 = and i64 %532, 32
  %534 = icmp eq i64 %533, 0
  br i1 %534, label %597, label %535

535:                                              ; preds = %531
  %536 = and i64 %532, -33
  %537 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %538 = bitcast %"class.v8::internal::Vector"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %538) #7
  %539 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %52, i64 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i8** %539, align 8
  %540 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %52, i64 0, i32 1
  store i64 6, i64* %540, align 8
  %541 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %537, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %52, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %538) #7
  %542 = bitcast %"class.v8::internal::Vector"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %542) #7
  %543 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %50, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %543, align 8
  %544 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %50, i64 0, i32 1
  store i64 4, i64* %544, align 8
  %545 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %537, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %50, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %542) #7
  %546 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %545) #7
  %547 = load i64, i64* %546, align 8
  %548 = and i64 %547, 1
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %561, label %550

550:                                              ; preds = %535
  %551 = and i64 %547, -4294967296
  %552 = add i64 %547, -1
  %553 = inttoptr i64 %552 to i32*
  %554 = load atomic i32, i32* %553 monotonic, align 4
  %555 = zext i32 %554 to i64
  %556 = or i64 %551, %555
  %557 = add i64 %556, 7
  %558 = inttoptr i64 %557 to i16*
  %559 = load atomic i16, i16* %558 monotonic, align 2
  %560 = icmp ugt i16 %559, 185
  br i1 %560, label %563, label %561

561:                                              ; preds = %550, %535
  %562 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %565

563:                                              ; preds = %550
  %564 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %546, i64* %541) #7
  br label %565

565:                                              ; preds = %563, %561
  %566 = phi i64* [ %564, %563 ], [ %562, %561 ]
  %567 = load i64, i64* %566, align 8
  %568 = and i64 %567, 1
  %569 = icmp eq i64 %568, 0
  br i1 %569, label %2689, label %570

570:                                              ; preds = %565
  %571 = and i64 %567, -4294967296
  %572 = add i64 %567, -1
  %573 = inttoptr i64 %572 to i32*
  %574 = load atomic i32, i32* %573 monotonic, align 4
  %575 = zext i32 %574 to i64
  %576 = or i64 %571, %575
  %577 = add i64 %576, 7
  %578 = inttoptr i64 %577 to i16*
  %579 = load atomic i16, i16* %578 monotonic, align 2
  %580 = add i16 %579, -1059
  %581 = icmp ult i16 %580, 15
  br i1 %581, label %582, label %2689

582:                                              ; preds = %570
  %583 = add i64 %567, 11
  %584 = inttoptr i64 %583 to i32*
  %585 = load atomic i32, i32* %584 monotonic, align 4
  %586 = zext i32 %585 to i64
  %587 = or i64 %571, %586
  %588 = add i64 %587, 3
  %589 = inttoptr i64 %588 to i32*
  %590 = load atomic i32, i32* %589 acquire, align 4
  %591 = and i32 %590, 1
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %593, label %2689

593:                                              ; preds = %582
  %594 = load atomic i32, i32* %589 acquire, align 4
  %595 = and i32 %594, -2
  %596 = icmp eq i32 %595, 1642
  br i1 %596, label %597, label %2689

597:                                              ; preds = %593, %531
  %598 = phi i64 [ %532, %531 ], [ %536, %593 ]
  %599 = and i64 %598, 64
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %663, label %601

601:                                              ; preds = %597
  %602 = and i64 %598, -65
  %603 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %604 = bitcast %"class.v8::internal::Vector"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %604) #7
  %605 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %44, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), i8** %605, align 8
  %606 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %44, i64 0, i32 1
  store i64 4, i64* %606, align 8
  %607 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %603, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %44, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %604) #7
  %608 = bitcast %"class.v8::internal::Vector"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %608) #7
  %609 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %42, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %609, align 8
  %610 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %42, i64 0, i32 1
  store i64 4, i64* %610, align 8
  %611 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %603, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %42, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %608) #7
  %612 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %611) #7
  %613 = load i64, i64* %612, align 8
  %614 = and i64 %613, 1
  %615 = icmp eq i64 %614, 0
  br i1 %615, label %627, label %616

616:                                              ; preds = %601
  %617 = and i64 %613, -4294967296
  %618 = add i64 %613, -1
  %619 = inttoptr i64 %618 to i32*
  %620 = load atomic i32, i32* %619 monotonic, align 4
  %621 = zext i32 %620 to i64
  %622 = or i64 %617, %621
  %623 = add i64 %622, 7
  %624 = inttoptr i64 %623 to i16*
  %625 = load atomic i16, i16* %624 monotonic, align 2
  %626 = icmp ugt i16 %625, 185
  br i1 %626, label %629, label %627

627:                                              ; preds = %616, %601
  %628 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %631

629:                                              ; preds = %616
  %630 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %612, i64* %607) #7
  br label %631

631:                                              ; preds = %629, %627
  %632 = phi i64* [ %630, %629 ], [ %628, %627 ]
  %633 = load i64, i64* %632, align 8
  %634 = and i64 %633, 1
  %635 = icmp eq i64 %634, 0
  br i1 %635, label %2689, label %636

636:                                              ; preds = %631
  %637 = and i64 %633, -4294967296
  %638 = add i64 %633, -1
  %639 = inttoptr i64 %638 to i32*
  %640 = load atomic i32, i32* %639 monotonic, align 4
  %641 = zext i32 %640 to i64
  %642 = or i64 %637, %641
  %643 = add i64 %642, 7
  %644 = inttoptr i64 %643 to i16*
  %645 = load atomic i16, i16* %644 monotonic, align 2
  %646 = add i16 %645, -1059
  %647 = icmp ult i16 %646, 15
  br i1 %647, label %648, label %2689

648:                                              ; preds = %636
  %649 = add i64 %633, 11
  %650 = inttoptr i64 %649 to i32*
  %651 = load atomic i32, i32* %650 monotonic, align 4
  %652 = zext i32 %651 to i64
  %653 = or i64 %637, %652
  %654 = add i64 %653, 3
  %655 = inttoptr i64 %654 to i32*
  %656 = load atomic i32, i32* %655 acquire, align 4
  %657 = and i32 %656, 1
  %658 = icmp eq i32 %657, 0
  br i1 %658, label %659, label %2689

659:                                              ; preds = %648
  %660 = load atomic i32, i32* %655 acquire, align 4
  %661 = and i32 %660, -2
  %662 = icmp eq i32 %661, 1616
  br i1 %662, label %663, label %2689

663:                                              ; preds = %659, %597
  %664 = phi i64 [ %598, %597 ], [ %602, %659 ]
  %665 = trunc i64 %664 to i8
  %666 = icmp slt i8 %665, 0
  br i1 %666, label %667, label %729

667:                                              ; preds = %663
  %668 = and i64 %664, -129
  %669 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %670 = bitcast %"class.v8::internal::Vector"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %670) #7
  %671 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %36, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), i8** %671, align 8
  %672 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %36, i64 0, i32 1
  store i64 4, i64* %672, align 8
  %673 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %669, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %36, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %670) #7
  %674 = bitcast %"class.v8::internal::Vector"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %674) #7
  %675 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %34, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %675, align 8
  %676 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %34, i64 0, i32 1
  store i64 4, i64* %676, align 8
  %677 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %669, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %34, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %674) #7
  %678 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %677) #7
  %679 = load i64, i64* %678, align 8
  %680 = and i64 %679, 1
  %681 = icmp eq i64 %680, 0
  br i1 %681, label %693, label %682

682:                                              ; preds = %667
  %683 = and i64 %679, -4294967296
  %684 = add i64 %679, -1
  %685 = inttoptr i64 %684 to i32*
  %686 = load atomic i32, i32* %685 monotonic, align 4
  %687 = zext i32 %686 to i64
  %688 = or i64 %683, %687
  %689 = add i64 %688, 7
  %690 = inttoptr i64 %689 to i16*
  %691 = load atomic i16, i16* %690 monotonic, align 2
  %692 = icmp ugt i16 %691, 185
  br i1 %692, label %695, label %693

693:                                              ; preds = %682, %667
  %694 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %697

695:                                              ; preds = %682
  %696 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %678, i64* %673) #7
  br label %697

697:                                              ; preds = %695, %693
  %698 = phi i64* [ %696, %695 ], [ %694, %693 ]
  %699 = load i64, i64* %698, align 8
  %700 = and i64 %699, 1
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %2689, label %702

702:                                              ; preds = %697
  %703 = and i64 %699, -4294967296
  %704 = add i64 %699, -1
  %705 = inttoptr i64 %704 to i32*
  %706 = load atomic i32, i32* %705 monotonic, align 4
  %707 = zext i32 %706 to i64
  %708 = or i64 %703, %707
  %709 = add i64 %708, 7
  %710 = inttoptr i64 %709 to i16*
  %711 = load atomic i16, i16* %710 monotonic, align 2
  %712 = add i16 %711, -1059
  %713 = icmp ult i16 %712, 15
  br i1 %713, label %714, label %2689

714:                                              ; preds = %702
  %715 = add i64 %699, 11
  %716 = inttoptr i64 %715 to i32*
  %717 = load atomic i32, i32* %716 monotonic, align 4
  %718 = zext i32 %717 to i64
  %719 = or i64 %703, %718
  %720 = add i64 %719, 3
  %721 = inttoptr i64 %720 to i32*
  %722 = load atomic i32, i32* %721 acquire, align 4
  %723 = and i32 %722, 1
  %724 = icmp eq i32 %723, 0
  br i1 %724, label %725, label %2689

725:                                              ; preds = %714
  %726 = load atomic i32, i32* %721 acquire, align 4
  %727 = and i32 %726, -2
  %728 = icmp eq i32 %727, 1620
  br i1 %728, label %729, label %2689

729:                                              ; preds = %725, %663
  %730 = phi i64 [ %664, %663 ], [ %668, %725 ]
  %731 = and i64 %730, 256
  %732 = icmp eq i64 %731, 0
  br i1 %732, label %795, label %733

733:                                              ; preds = %729
  %734 = and i64 %730, -257
  %735 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %736 = bitcast %"class.v8::internal::Vector"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %736) #7
  %737 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %28, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i8** %737, align 8
  %738 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %28, i64 0, i32 1
  store i64 4, i64* %738, align 8
  %739 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %735, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %28, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %736) #7
  %740 = bitcast %"class.v8::internal::Vector"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %740) #7
  %741 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %26, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %741, align 8
  %742 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %26, i64 0, i32 1
  store i64 4, i64* %742, align 8
  %743 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %735, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %26, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %740) #7
  %744 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %743) #7
  %745 = load i64, i64* %744, align 8
  %746 = and i64 %745, 1
  %747 = icmp eq i64 %746, 0
  br i1 %747, label %759, label %748

748:                                              ; preds = %733
  %749 = and i64 %745, -4294967296
  %750 = add i64 %745, -1
  %751 = inttoptr i64 %750 to i32*
  %752 = load atomic i32, i32* %751 monotonic, align 4
  %753 = zext i32 %752 to i64
  %754 = or i64 %749, %753
  %755 = add i64 %754, 7
  %756 = inttoptr i64 %755 to i16*
  %757 = load atomic i16, i16* %756 monotonic, align 2
  %758 = icmp ugt i16 %757, 185
  br i1 %758, label %761, label %759

759:                                              ; preds = %748, %733
  %760 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %763

761:                                              ; preds = %748
  %762 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %744, i64* %739) #7
  br label %763

763:                                              ; preds = %761, %759
  %764 = phi i64* [ %762, %761 ], [ %760, %759 ]
  %765 = load i64, i64* %764, align 8
  %766 = and i64 %765, 1
  %767 = icmp eq i64 %766, 0
  br i1 %767, label %2689, label %768

768:                                              ; preds = %763
  %769 = and i64 %765, -4294967296
  %770 = add i64 %765, -1
  %771 = inttoptr i64 %770 to i32*
  %772 = load atomic i32, i32* %771 monotonic, align 4
  %773 = zext i32 %772 to i64
  %774 = or i64 %769, %773
  %775 = add i64 %774, 7
  %776 = inttoptr i64 %775 to i16*
  %777 = load atomic i16, i16* %776 monotonic, align 2
  %778 = add i16 %777, -1059
  %779 = icmp ult i16 %778, 15
  br i1 %779, label %780, label %2689

780:                                              ; preds = %768
  %781 = add i64 %765, 11
  %782 = inttoptr i64 %781 to i32*
  %783 = load atomic i32, i32* %782 monotonic, align 4
  %784 = zext i32 %783 to i64
  %785 = or i64 %769, %784
  %786 = add i64 %785, 3
  %787 = inttoptr i64 %786 to i32*
  %788 = load atomic i32, i32* %787 acquire, align 4
  %789 = and i32 %788, 1
  %790 = icmp eq i32 %789, 0
  br i1 %790, label %791, label %2689

791:                                              ; preds = %780
  %792 = load atomic i32, i32* %787 acquire, align 4
  %793 = and i32 %792, -2
  %794 = icmp eq i32 %793, 1624
  br i1 %794, label %795, label %2689

795:                                              ; preds = %791, %729
  %796 = phi i64 [ %730, %729 ], [ %734, %791 ]
  %797 = and i64 %796, 512
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %861, label %799

799:                                              ; preds = %795
  %800 = and i64 %796, -513
  %801 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %802 = bitcast %"class.v8::internal::Vector"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %802) #7
  %803 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %20, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i8** %803, align 8
  %804 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %20, i64 0, i32 1
  store i64 3, i64* %804, align 8
  %805 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %801, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %20, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %802) #7
  %806 = bitcast %"class.v8::internal::Vector"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %806) #7
  %807 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %19, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %807, align 8
  %808 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %19, i64 0, i32 1
  store i64 4, i64* %808, align 8
  %809 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %801, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %19, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %806) #7
  %810 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %809) #7
  %811 = load i64, i64* %810, align 8
  %812 = and i64 %811, 1
  %813 = icmp eq i64 %812, 0
  br i1 %813, label %825, label %814

814:                                              ; preds = %799
  %815 = and i64 %811, -4294967296
  %816 = add i64 %811, -1
  %817 = inttoptr i64 %816 to i32*
  %818 = load atomic i32, i32* %817 monotonic, align 4
  %819 = zext i32 %818 to i64
  %820 = or i64 %815, %819
  %821 = add i64 %820, 7
  %822 = inttoptr i64 %821 to i16*
  %823 = load atomic i16, i16* %822 monotonic, align 2
  %824 = icmp ugt i16 %823, 185
  br i1 %824, label %827, label %825

825:                                              ; preds = %814, %799
  %826 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %829

827:                                              ; preds = %814
  %828 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %810, i64* %805) #7
  br label %829

829:                                              ; preds = %827, %825
  %830 = phi i64* [ %828, %827 ], [ %826, %825 ]
  %831 = load i64, i64* %830, align 8
  %832 = and i64 %831, 1
  %833 = icmp eq i64 %832, 0
  br i1 %833, label %2689, label %834

834:                                              ; preds = %829
  %835 = and i64 %831, -4294967296
  %836 = add i64 %831, -1
  %837 = inttoptr i64 %836 to i32*
  %838 = load atomic i32, i32* %837 monotonic, align 4
  %839 = zext i32 %838 to i64
  %840 = or i64 %835, %839
  %841 = add i64 %840, 7
  %842 = inttoptr i64 %841 to i16*
  %843 = load atomic i16, i16* %842 monotonic, align 2
  %844 = add i16 %843, -1059
  %845 = icmp ult i16 %844, 15
  br i1 %845, label %846, label %2689

846:                                              ; preds = %834
  %847 = add i64 %831, 11
  %848 = inttoptr i64 %847 to i32*
  %849 = load atomic i32, i32* %848 monotonic, align 4
  %850 = zext i32 %849 to i64
  %851 = or i64 %835, %850
  %852 = add i64 %851, 3
  %853 = inttoptr i64 %852 to i32*
  %854 = load atomic i32, i32* %853 acquire, align 4
  %855 = and i32 %854, 1
  %856 = icmp eq i32 %855, 0
  br i1 %856, label %857, label %2689

857:                                              ; preds = %846
  %858 = load atomic i32, i32* %853 acquire, align 4
  %859 = and i32 %858, -2
  %860 = icmp eq i32 %859, 1634
  br i1 %860, label %861, label %2689

861:                                              ; preds = %857, %795
  %862 = phi i64 [ %796, %795 ], [ %800, %857 ]
  %863 = and i64 %862, 1024
  %864 = icmp eq i64 %863, 0
  br i1 %864, label %927, label %865

865:                                              ; preds = %861
  %866 = and i64 %862, -1025
  %867 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %868 = bitcast %"class.v8::internal::Vector"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %868) #7
  %869 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %21, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i8** %869, align 8
  %870 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %21, i64 0, i32 1
  store i64 3, i64* %870, align 8
  %871 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %867, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %21, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %868) #7
  %872 = bitcast %"class.v8::internal::Vector"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %872) #7
  %873 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %22, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %873, align 8
  %874 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %22, i64 0, i32 1
  store i64 4, i64* %874, align 8
  %875 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %867, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %22, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %872) #7
  %876 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %875) #7
  %877 = load i64, i64* %876, align 8
  %878 = and i64 %877, 1
  %879 = icmp eq i64 %878, 0
  br i1 %879, label %891, label %880

880:                                              ; preds = %865
  %881 = and i64 %877, -4294967296
  %882 = add i64 %877, -1
  %883 = inttoptr i64 %882 to i32*
  %884 = load atomic i32, i32* %883 monotonic, align 4
  %885 = zext i32 %884 to i64
  %886 = or i64 %881, %885
  %887 = add i64 %886, 7
  %888 = inttoptr i64 %887 to i16*
  %889 = load atomic i16, i16* %888 monotonic, align 2
  %890 = icmp ugt i16 %889, 185
  br i1 %890, label %893, label %891

891:                                              ; preds = %880, %865
  %892 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %895

893:                                              ; preds = %880
  %894 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %876, i64* %871) #7
  br label %895

895:                                              ; preds = %893, %891
  %896 = phi i64* [ %894, %893 ], [ %892, %891 ]
  %897 = load i64, i64* %896, align 8
  %898 = and i64 %897, 1
  %899 = icmp eq i64 %898, 0
  br i1 %899, label %2689, label %900

900:                                              ; preds = %895
  %901 = and i64 %897, -4294967296
  %902 = add i64 %897, -1
  %903 = inttoptr i64 %902 to i32*
  %904 = load atomic i32, i32* %903 monotonic, align 4
  %905 = zext i32 %904 to i64
  %906 = or i64 %901, %905
  %907 = add i64 %906, 7
  %908 = inttoptr i64 %907 to i16*
  %909 = load atomic i16, i16* %908 monotonic, align 2
  %910 = add i16 %909, -1059
  %911 = icmp ult i16 %910, 15
  br i1 %911, label %912, label %2689

912:                                              ; preds = %900
  %913 = add i64 %897, 11
  %914 = inttoptr i64 %913 to i32*
  %915 = load atomic i32, i32* %914 monotonic, align 4
  %916 = zext i32 %915 to i64
  %917 = or i64 %901, %916
  %918 = add i64 %917, 3
  %919 = inttoptr i64 %918 to i32*
  %920 = load atomic i32, i32* %919 acquire, align 4
  %921 = and i32 %920, 1
  %922 = icmp eq i32 %921, 0
  br i1 %922, label %923, label %2689

923:                                              ; preds = %912
  %924 = load atomic i32, i32* %919 acquire, align 4
  %925 = and i32 %924, -2
  %926 = icmp eq i32 %925, 1654
  br i1 %926, label %927, label %2689

927:                                              ; preds = %923, %861
  %928 = phi i64 [ %862, %861 ], [ %866, %923 ]
  %929 = and i64 %928, 2048
  %930 = icmp eq i64 %929, 0
  br i1 %930, label %993, label %931

931:                                              ; preds = %927
  %932 = and i64 %928, -2049
  %933 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %934 = bitcast %"class.v8::internal::Vector"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %934) #7
  %935 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %23, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0), i8** %935, align 8
  %936 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %23, i64 0, i32 1
  store i64 3, i64* %936, align 8
  %937 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %933, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %23, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %934) #7
  %938 = bitcast %"class.v8::internal::Vector"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %938) #7
  %939 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %24, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %939, align 8
  %940 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %24, i64 0, i32 1
  store i64 4, i64* %940, align 8
  %941 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %933, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %24, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %938) #7
  %942 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %941) #7
  %943 = load i64, i64* %942, align 8
  %944 = and i64 %943, 1
  %945 = icmp eq i64 %944, 0
  br i1 %945, label %957, label %946

946:                                              ; preds = %931
  %947 = and i64 %943, -4294967296
  %948 = add i64 %943, -1
  %949 = inttoptr i64 %948 to i32*
  %950 = load atomic i32, i32* %949 monotonic, align 4
  %951 = zext i32 %950 to i64
  %952 = or i64 %947, %951
  %953 = add i64 %952, 7
  %954 = inttoptr i64 %953 to i16*
  %955 = load atomic i16, i16* %954 monotonic, align 2
  %956 = icmp ugt i16 %955, 185
  br i1 %956, label %959, label %957

957:                                              ; preds = %946, %931
  %958 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %961

959:                                              ; preds = %946
  %960 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %942, i64* %937) #7
  br label %961

961:                                              ; preds = %959, %957
  %962 = phi i64* [ %960, %959 ], [ %958, %957 ]
  %963 = load i64, i64* %962, align 8
  %964 = and i64 %963, 1
  %965 = icmp eq i64 %964, 0
  br i1 %965, label %2689, label %966

966:                                              ; preds = %961
  %967 = and i64 %963, -4294967296
  %968 = add i64 %963, -1
  %969 = inttoptr i64 %968 to i32*
  %970 = load atomic i32, i32* %969 monotonic, align 4
  %971 = zext i32 %970 to i64
  %972 = or i64 %967, %971
  %973 = add i64 %972, 7
  %974 = inttoptr i64 %973 to i16*
  %975 = load atomic i16, i16* %974 monotonic, align 2
  %976 = add i16 %975, -1059
  %977 = icmp ult i16 %976, 15
  br i1 %977, label %978, label %2689

978:                                              ; preds = %966
  %979 = add i64 %963, 11
  %980 = inttoptr i64 %979 to i32*
  %981 = load atomic i32, i32* %980 monotonic, align 4
  %982 = zext i32 %981 to i64
  %983 = or i64 %967, %982
  %984 = add i64 %983, 3
  %985 = inttoptr i64 %984 to i32*
  %986 = load atomic i32, i32* %985 acquire, align 4
  %987 = and i32 %986, 1
  %988 = icmp eq i32 %987, 0
  br i1 %988, label %989, label %2689

989:                                              ; preds = %978
  %990 = load atomic i32, i32* %985 acquire, align 4
  %991 = and i32 %990, -2
  %992 = icmp eq i32 %991, 1662
  br i1 %992, label %993, label %2689

993:                                              ; preds = %989, %927
  %994 = phi i64 [ %928, %927 ], [ %932, %989 ]
  %995 = and i64 %994, 4096
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %1059, label %997

997:                                              ; preds = %993
  %998 = and i64 %994, -4097
  %999 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1000 = bitcast %"class.v8::internal::Vector"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1000) #7
  %1001 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %25, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0), i8** %1001, align 8
  %1002 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %25, i64 0, i32 1
  store i64 3, i64* %1002, align 8
  %1003 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %999, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %25, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1000) #7
  %1004 = bitcast %"class.v8::internal::Vector"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1004) #7
  %1005 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %27, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1005, align 8
  %1006 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %27, i64 0, i32 1
  store i64 4, i64* %1006, align 8
  %1007 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %999, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %27, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1004) #7
  %1008 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1007) #7
  %1009 = load i64, i64* %1008, align 8
  %1010 = and i64 %1009, 1
  %1011 = icmp eq i64 %1010, 0
  br i1 %1011, label %1023, label %1012

1012:                                             ; preds = %997
  %1013 = and i64 %1009, -4294967296
  %1014 = add i64 %1009, -1
  %1015 = inttoptr i64 %1014 to i32*
  %1016 = load atomic i32, i32* %1015 monotonic, align 4
  %1017 = zext i32 %1016 to i64
  %1018 = or i64 %1013, %1017
  %1019 = add i64 %1018, 7
  %1020 = inttoptr i64 %1019 to i16*
  %1021 = load atomic i16, i16* %1020 monotonic, align 2
  %1022 = icmp ugt i16 %1021, 185
  br i1 %1022, label %1025, label %1023

1023:                                             ; preds = %1012, %997
  %1024 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1027

1025:                                             ; preds = %1012
  %1026 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1008, i64* %1003) #7
  br label %1027

1027:                                             ; preds = %1025, %1023
  %1028 = phi i64* [ %1026, %1025 ], [ %1024, %1023 ]
  %1029 = load i64, i64* %1028, align 8
  %1030 = and i64 %1029, 1
  %1031 = icmp eq i64 %1030, 0
  br i1 %1031, label %2689, label %1032

1032:                                             ; preds = %1027
  %1033 = and i64 %1029, -4294967296
  %1034 = add i64 %1029, -1
  %1035 = inttoptr i64 %1034 to i32*
  %1036 = load atomic i32, i32* %1035 monotonic, align 4
  %1037 = zext i32 %1036 to i64
  %1038 = or i64 %1033, %1037
  %1039 = add i64 %1038, 7
  %1040 = inttoptr i64 %1039 to i16*
  %1041 = load atomic i16, i16* %1040 monotonic, align 2
  %1042 = add i16 %1041, -1059
  %1043 = icmp ult i16 %1042, 15
  br i1 %1043, label %1044, label %2689

1044:                                             ; preds = %1032
  %1045 = add i64 %1029, 11
  %1046 = inttoptr i64 %1045 to i32*
  %1047 = load atomic i32, i32* %1046 monotonic, align 4
  %1048 = zext i32 %1047 to i64
  %1049 = or i64 %1033, %1048
  %1050 = add i64 %1049, 3
  %1051 = inttoptr i64 %1050 to i32*
  %1052 = load atomic i32, i32* %1051 acquire, align 4
  %1053 = and i32 %1052, 1
  %1054 = icmp eq i32 %1053, 0
  br i1 %1054, label %1055, label %2689

1055:                                             ; preds = %1044
  %1056 = load atomic i32, i32* %1051 acquire, align 4
  %1057 = and i32 %1056, -2
  %1058 = icmp eq i32 %1057, 1638
  br i1 %1058, label %1059, label %2689

1059:                                             ; preds = %1055, %993
  %1060 = phi i64 [ %994, %993 ], [ %998, %1055 ]
  %1061 = and i64 %1060, 8192
  %1062 = icmp eq i64 %1061, 0
  br i1 %1062, label %1125, label %1063

1063:                                             ; preds = %1059
  %1064 = and i64 %1060, -8193
  %1065 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1066 = bitcast %"class.v8::internal::Vector"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1066) #7
  %1067 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %29, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0), i8** %1067, align 8
  %1068 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %29, i64 0, i32 1
  store i64 3, i64* %1068, align 8
  %1069 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1065, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %29, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1066) #7
  %1070 = bitcast %"class.v8::internal::Vector"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1070) #7
  %1071 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %30, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1071, align 8
  %1072 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %30, i64 0, i32 1
  store i64 4, i64* %1072, align 8
  %1073 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1065, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %30, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1070) #7
  %1074 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1073) #7
  %1075 = load i64, i64* %1074, align 8
  %1076 = and i64 %1075, 1
  %1077 = icmp eq i64 %1076, 0
  br i1 %1077, label %1089, label %1078

1078:                                             ; preds = %1063
  %1079 = and i64 %1075, -4294967296
  %1080 = add i64 %1075, -1
  %1081 = inttoptr i64 %1080 to i32*
  %1082 = load atomic i32, i32* %1081 monotonic, align 4
  %1083 = zext i32 %1082 to i64
  %1084 = or i64 %1079, %1083
  %1085 = add i64 %1084, 7
  %1086 = inttoptr i64 %1085 to i16*
  %1087 = load atomic i16, i16* %1086 monotonic, align 2
  %1088 = icmp ugt i16 %1087, 185
  br i1 %1088, label %1091, label %1089

1089:                                             ; preds = %1078, %1063
  %1090 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1093

1091:                                             ; preds = %1078
  %1092 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1074, i64* %1069) #7
  br label %1093

1093:                                             ; preds = %1091, %1089
  %1094 = phi i64* [ %1092, %1091 ], [ %1090, %1089 ]
  %1095 = load i64, i64* %1094, align 8
  %1096 = and i64 %1095, 1
  %1097 = icmp eq i64 %1096, 0
  br i1 %1097, label %2689, label %1098

1098:                                             ; preds = %1093
  %1099 = and i64 %1095, -4294967296
  %1100 = add i64 %1095, -1
  %1101 = inttoptr i64 %1100 to i32*
  %1102 = load atomic i32, i32* %1101 monotonic, align 4
  %1103 = zext i32 %1102 to i64
  %1104 = or i64 %1099, %1103
  %1105 = add i64 %1104, 7
  %1106 = inttoptr i64 %1105 to i16*
  %1107 = load atomic i16, i16* %1106 monotonic, align 2
  %1108 = add i16 %1107, -1059
  %1109 = icmp ult i16 %1108, 15
  br i1 %1109, label %1110, label %2689

1110:                                             ; preds = %1098
  %1111 = add i64 %1095, 11
  %1112 = inttoptr i64 %1111 to i32*
  %1113 = load atomic i32, i32* %1112 monotonic, align 4
  %1114 = zext i32 %1113 to i64
  %1115 = or i64 %1099, %1114
  %1116 = add i64 %1115, 3
  %1117 = inttoptr i64 %1116 to i32*
  %1118 = load atomic i32, i32* %1117 acquire, align 4
  %1119 = and i32 %1118, 1
  %1120 = icmp eq i32 %1119, 0
  br i1 %1120, label %1121, label %2689

1121:                                             ; preds = %1110
  %1122 = load atomic i32, i32* %1117 acquire, align 4
  %1123 = and i32 %1122, -2
  %1124 = icmp eq i32 %1123, 1646
  br i1 %1124, label %1125, label %2689

1125:                                             ; preds = %1121, %1059
  %1126 = phi i64 [ %1060, %1059 ], [ %1064, %1121 ]
  %1127 = and i64 %1126, 16384
  %1128 = icmp eq i64 %1127, 0
  br i1 %1128, label %1191, label %1129

1129:                                             ; preds = %1125
  %1130 = and i64 %1126, -16385
  %1131 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1132 = bitcast %"class.v8::internal::Vector"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1132) #7
  %1133 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %31, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0), i8** %1133, align 8
  %1134 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %31, i64 0, i32 1
  store i64 5, i64* %1134, align 8
  %1135 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1131, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %31, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1132) #7
  %1136 = bitcast %"class.v8::internal::Vector"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1136) #7
  %1137 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %32, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1137, align 8
  %1138 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %32, i64 0, i32 1
  store i64 4, i64* %1138, align 8
  %1139 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1131, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %32, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1136) #7
  %1140 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1139) #7
  %1141 = load i64, i64* %1140, align 8
  %1142 = and i64 %1141, 1
  %1143 = icmp eq i64 %1142, 0
  br i1 %1143, label %1155, label %1144

1144:                                             ; preds = %1129
  %1145 = and i64 %1141, -4294967296
  %1146 = add i64 %1141, -1
  %1147 = inttoptr i64 %1146 to i32*
  %1148 = load atomic i32, i32* %1147 monotonic, align 4
  %1149 = zext i32 %1148 to i64
  %1150 = or i64 %1145, %1149
  %1151 = add i64 %1150, 7
  %1152 = inttoptr i64 %1151 to i16*
  %1153 = load atomic i16, i16* %1152 monotonic, align 2
  %1154 = icmp ugt i16 %1153, 185
  br i1 %1154, label %1157, label %1155

1155:                                             ; preds = %1144, %1129
  %1156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1159

1157:                                             ; preds = %1144
  %1158 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1140, i64* %1135) #7
  br label %1159

1159:                                             ; preds = %1157, %1155
  %1160 = phi i64* [ %1158, %1157 ], [ %1156, %1155 ]
  %1161 = load i64, i64* %1160, align 8
  %1162 = and i64 %1161, 1
  %1163 = icmp eq i64 %1162, 0
  br i1 %1163, label %2689, label %1164

1164:                                             ; preds = %1159
  %1165 = and i64 %1161, -4294967296
  %1166 = add i64 %1161, -1
  %1167 = inttoptr i64 %1166 to i32*
  %1168 = load atomic i32, i32* %1167 monotonic, align 4
  %1169 = zext i32 %1168 to i64
  %1170 = or i64 %1165, %1169
  %1171 = add i64 %1170, 7
  %1172 = inttoptr i64 %1171 to i16*
  %1173 = load atomic i16, i16* %1172 monotonic, align 2
  %1174 = add i16 %1173, -1059
  %1175 = icmp ult i16 %1174, 15
  br i1 %1175, label %1176, label %2689

1176:                                             ; preds = %1164
  %1177 = add i64 %1161, 11
  %1178 = inttoptr i64 %1177 to i32*
  %1179 = load atomic i32, i32* %1178 monotonic, align 4
  %1180 = zext i32 %1179 to i64
  %1181 = or i64 %1165, %1180
  %1182 = add i64 %1181, 3
  %1183 = inttoptr i64 %1182 to i32*
  %1184 = load atomic i32, i32* %1183 acquire, align 4
  %1185 = and i32 %1184, 1
  %1186 = icmp eq i32 %1185, 0
  br i1 %1186, label %1187, label %2689

1187:                                             ; preds = %1176
  %1188 = load atomic i32, i32* %1183 acquire, align 4
  %1189 = and i32 %1188, -2
  %1190 = icmp eq i32 %1189, 1626
  br i1 %1190, label %1191, label %2689

1191:                                             ; preds = %1187, %1125
  %1192 = phi i64 [ %1126, %1125 ], [ %1130, %1187 ]
  %1193 = trunc i64 %1192 to i16
  %1194 = icmp slt i16 %1193, 0
  br i1 %1194, label %1195, label %1257

1195:                                             ; preds = %1191
  %1196 = and i64 %1192, -32769
  %1197 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1198 = bitcast %"class.v8::internal::Vector"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1198) #7
  %1199 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %33, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), i8** %1199, align 8
  %1200 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %33, i64 0, i32 1
  store i64 3, i64* %1200, align 8
  %1201 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1197, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %33, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1198) #7
  %1202 = bitcast %"class.v8::internal::Vector"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1202) #7
  %1203 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %35, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1203, align 8
  %1204 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %35, i64 0, i32 1
  store i64 4, i64* %1204, align 8
  %1205 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1197, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %35, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1202) #7
  %1206 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1205) #7
  %1207 = load i64, i64* %1206, align 8
  %1208 = and i64 %1207, 1
  %1209 = icmp eq i64 %1208, 0
  br i1 %1209, label %1221, label %1210

1210:                                             ; preds = %1195
  %1211 = and i64 %1207, -4294967296
  %1212 = add i64 %1207, -1
  %1213 = inttoptr i64 %1212 to i32*
  %1214 = load atomic i32, i32* %1213 monotonic, align 4
  %1215 = zext i32 %1214 to i64
  %1216 = or i64 %1211, %1215
  %1217 = add i64 %1216, 7
  %1218 = inttoptr i64 %1217 to i16*
  %1219 = load atomic i16, i16* %1218 monotonic, align 2
  %1220 = icmp ugt i16 %1219, 185
  br i1 %1220, label %1223, label %1221

1221:                                             ; preds = %1210, %1195
  %1222 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1225

1223:                                             ; preds = %1210
  %1224 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1206, i64* %1201) #7
  br label %1225

1225:                                             ; preds = %1223, %1221
  %1226 = phi i64* [ %1224, %1223 ], [ %1222, %1221 ]
  %1227 = load i64, i64* %1226, align 8
  %1228 = and i64 %1227, 1
  %1229 = icmp eq i64 %1228, 0
  br i1 %1229, label %2689, label %1230

1230:                                             ; preds = %1225
  %1231 = and i64 %1227, -4294967296
  %1232 = add i64 %1227, -1
  %1233 = inttoptr i64 %1232 to i32*
  %1234 = load atomic i32, i32* %1233 monotonic, align 4
  %1235 = zext i32 %1234 to i64
  %1236 = or i64 %1231, %1235
  %1237 = add i64 %1236, 7
  %1238 = inttoptr i64 %1237 to i16*
  %1239 = load atomic i16, i16* %1238 monotonic, align 2
  %1240 = add i16 %1239, -1059
  %1241 = icmp ult i16 %1240, 15
  br i1 %1241, label %1242, label %2689

1242:                                             ; preds = %1230
  %1243 = add i64 %1227, 11
  %1244 = inttoptr i64 %1243 to i32*
  %1245 = load atomic i32, i32* %1244 monotonic, align 4
  %1246 = zext i32 %1245 to i64
  %1247 = or i64 %1231, %1246
  %1248 = add i64 %1247, 3
  %1249 = inttoptr i64 %1248 to i32*
  %1250 = load atomic i32, i32* %1249 acquire, align 4
  %1251 = and i32 %1250, 1
  %1252 = icmp eq i32 %1251, 0
  br i1 %1252, label %1253, label %2689

1253:                                             ; preds = %1242
  %1254 = load atomic i32, i32* %1249 acquire, align 4
  %1255 = and i32 %1254, -2
  %1256 = icmp eq i32 %1255, 1610
  br i1 %1256, label %1257, label %2689

1257:                                             ; preds = %1253, %1191
  %1258 = phi i64 [ %1192, %1191 ], [ %1196, %1253 ]
  %1259 = and i64 %1258, 65536
  %1260 = icmp eq i64 %1259, 0
  br i1 %1260, label %1323, label %1261

1261:                                             ; preds = %1257
  %1262 = and i64 %1258, -65537
  %1263 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1264 = bitcast %"class.v8::internal::Vector"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1264) #7
  %1265 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %37, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i8** %1265, align 8
  %1266 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %37, i64 0, i32 1
  store i64 4, i64* %1266, align 8
  %1267 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1263, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %37, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1264) #7
  %1268 = bitcast %"class.v8::internal::Vector"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1268) #7
  %1269 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %38, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1269, align 8
  %1270 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %38, i64 0, i32 1
  store i64 4, i64* %1270, align 8
  %1271 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1263, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %38, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1268) #7
  %1272 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1271) #7
  %1273 = load i64, i64* %1272, align 8
  %1274 = and i64 %1273, 1
  %1275 = icmp eq i64 %1274, 0
  br i1 %1275, label %1287, label %1276

1276:                                             ; preds = %1261
  %1277 = and i64 %1273, -4294967296
  %1278 = add i64 %1273, -1
  %1279 = inttoptr i64 %1278 to i32*
  %1280 = load atomic i32, i32* %1279 monotonic, align 4
  %1281 = zext i32 %1280 to i64
  %1282 = or i64 %1277, %1281
  %1283 = add i64 %1282, 7
  %1284 = inttoptr i64 %1283 to i16*
  %1285 = load atomic i16, i16* %1284 monotonic, align 2
  %1286 = icmp ugt i16 %1285, 185
  br i1 %1286, label %1289, label %1287

1287:                                             ; preds = %1276, %1261
  %1288 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1291

1289:                                             ; preds = %1276
  %1290 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1272, i64* %1267) #7
  br label %1291

1291:                                             ; preds = %1289, %1287
  %1292 = phi i64* [ %1290, %1289 ], [ %1288, %1287 ]
  %1293 = load i64, i64* %1292, align 8
  %1294 = and i64 %1293, 1
  %1295 = icmp eq i64 %1294, 0
  br i1 %1295, label %2689, label %1296

1296:                                             ; preds = %1291
  %1297 = and i64 %1293, -4294967296
  %1298 = add i64 %1293, -1
  %1299 = inttoptr i64 %1298 to i32*
  %1300 = load atomic i32, i32* %1299 monotonic, align 4
  %1301 = zext i32 %1300 to i64
  %1302 = or i64 %1297, %1301
  %1303 = add i64 %1302, 7
  %1304 = inttoptr i64 %1303 to i16*
  %1305 = load atomic i16, i16* %1304 monotonic, align 2
  %1306 = add i16 %1305, -1059
  %1307 = icmp ult i16 %1306, 15
  br i1 %1307, label %1308, label %2689

1308:                                             ; preds = %1296
  %1309 = add i64 %1293, 11
  %1310 = inttoptr i64 %1309 to i32*
  %1311 = load atomic i32, i32* %1310 monotonic, align 4
  %1312 = zext i32 %1311 to i64
  %1313 = or i64 %1297, %1312
  %1314 = add i64 %1313, 3
  %1315 = inttoptr i64 %1314 to i32*
  %1316 = load atomic i32, i32* %1315 acquire, align 4
  %1317 = and i32 %1316, 1
  %1318 = icmp eq i32 %1317, 0
  br i1 %1318, label %1319, label %2689

1319:                                             ; preds = %1308
  %1320 = load atomic i32, i32* %1315 acquire, align 4
  %1321 = and i32 %1320, -2
  %1322 = icmp eq i32 %1321, 1644
  br i1 %1322, label %1323, label %2689

1323:                                             ; preds = %1319, %1257
  %1324 = phi i64 [ %1258, %1257 ], [ %1262, %1319 ]
  %1325 = and i64 %1324, 131072
  %1326 = icmp eq i64 %1325, 0
  br i1 %1326, label %1389, label %1327

1327:                                             ; preds = %1323
  %1328 = and i64 %1324, -131073
  %1329 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1330 = bitcast %"class.v8::internal::Vector"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1330) #7
  %1331 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %39, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i8** %1331, align 8
  %1332 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %39, i64 0, i32 1
  store i64 5, i64* %1332, align 8
  %1333 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1329, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %39, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1330) #7
  %1334 = bitcast %"class.v8::internal::Vector"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1334) #7
  %1335 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %40, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1335, align 8
  %1336 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %40, i64 0, i32 1
  store i64 4, i64* %1336, align 8
  %1337 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1329, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %40, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1334) #7
  %1338 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1337) #7
  %1339 = load i64, i64* %1338, align 8
  %1340 = and i64 %1339, 1
  %1341 = icmp eq i64 %1340, 0
  br i1 %1341, label %1353, label %1342

1342:                                             ; preds = %1327
  %1343 = and i64 %1339, -4294967296
  %1344 = add i64 %1339, -1
  %1345 = inttoptr i64 %1344 to i32*
  %1346 = load atomic i32, i32* %1345 monotonic, align 4
  %1347 = zext i32 %1346 to i64
  %1348 = or i64 %1343, %1347
  %1349 = add i64 %1348, 7
  %1350 = inttoptr i64 %1349 to i16*
  %1351 = load atomic i16, i16* %1350 monotonic, align 2
  %1352 = icmp ugt i16 %1351, 185
  br i1 %1352, label %1355, label %1353

1353:                                             ; preds = %1342, %1327
  %1354 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1357

1355:                                             ; preds = %1342
  %1356 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1338, i64* %1333) #7
  br label %1357

1357:                                             ; preds = %1355, %1353
  %1358 = phi i64* [ %1356, %1355 ], [ %1354, %1353 ]
  %1359 = load i64, i64* %1358, align 8
  %1360 = and i64 %1359, 1
  %1361 = icmp eq i64 %1360, 0
  br i1 %1361, label %2689, label %1362

1362:                                             ; preds = %1357
  %1363 = and i64 %1359, -4294967296
  %1364 = add i64 %1359, -1
  %1365 = inttoptr i64 %1364 to i32*
  %1366 = load atomic i32, i32* %1365 monotonic, align 4
  %1367 = zext i32 %1366 to i64
  %1368 = or i64 %1363, %1367
  %1369 = add i64 %1368, 7
  %1370 = inttoptr i64 %1369 to i16*
  %1371 = load atomic i16, i16* %1370 monotonic, align 2
  %1372 = add i16 %1371, -1059
  %1373 = icmp ult i16 %1372, 15
  br i1 %1373, label %1374, label %2689

1374:                                             ; preds = %1362
  %1375 = add i64 %1359, 11
  %1376 = inttoptr i64 %1375 to i32*
  %1377 = load atomic i32, i32* %1376 monotonic, align 4
  %1378 = zext i32 %1377 to i64
  %1379 = or i64 %1363, %1378
  %1380 = add i64 %1379, 3
  %1381 = inttoptr i64 %1380 to i32*
  %1382 = load atomic i32, i32* %1381 acquire, align 4
  %1383 = and i32 %1382, 1
  %1384 = icmp eq i32 %1383, 0
  br i1 %1384, label %1385, label %2689

1385:                                             ; preds = %1374
  %1386 = load atomic i32, i32* %1381 acquire, align 4
  %1387 = and i32 %1386, -2
  %1388 = icmp eq i32 %1387, 1632
  br i1 %1388, label %1389, label %2689

1389:                                             ; preds = %1385, %1323
  %1390 = phi i64 [ %1324, %1323 ], [ %1328, %1385 ]
  %1391 = and i64 %1390, 262144
  %1392 = icmp eq i64 %1391, 0
  br i1 %1392, label %1455, label %1393

1393:                                             ; preds = %1389
  %1394 = and i64 %1390, -262145
  %1395 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1396 = bitcast %"class.v8::internal::Vector"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1396) #7
  %1397 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %41, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i8** %1397, align 8
  %1398 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %41, i64 0, i32 1
  store i64 4, i64* %1398, align 8
  %1399 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1395, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %41, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1396) #7
  %1400 = bitcast %"class.v8::internal::Vector"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1400) #7
  %1401 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %43, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1401, align 8
  %1402 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %43, i64 0, i32 1
  store i64 4, i64* %1402, align 8
  %1403 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1395, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %43, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1400) #7
  %1404 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1403) #7
  %1405 = load i64, i64* %1404, align 8
  %1406 = and i64 %1405, 1
  %1407 = icmp eq i64 %1406, 0
  br i1 %1407, label %1419, label %1408

1408:                                             ; preds = %1393
  %1409 = and i64 %1405, -4294967296
  %1410 = add i64 %1405, -1
  %1411 = inttoptr i64 %1410 to i32*
  %1412 = load atomic i32, i32* %1411 monotonic, align 4
  %1413 = zext i32 %1412 to i64
  %1414 = or i64 %1409, %1413
  %1415 = add i64 %1414, 7
  %1416 = inttoptr i64 %1415 to i16*
  %1417 = load atomic i16, i16* %1416 monotonic, align 2
  %1418 = icmp ugt i16 %1417, 185
  br i1 %1418, label %1421, label %1419

1419:                                             ; preds = %1408, %1393
  %1420 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1423

1421:                                             ; preds = %1408
  %1422 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1404, i64* %1399) #7
  br label %1423

1423:                                             ; preds = %1421, %1419
  %1424 = phi i64* [ %1422, %1421 ], [ %1420, %1419 ]
  %1425 = load i64, i64* %1424, align 8
  %1426 = and i64 %1425, 1
  %1427 = icmp eq i64 %1426, 0
  br i1 %1427, label %2689, label %1428

1428:                                             ; preds = %1423
  %1429 = and i64 %1425, -4294967296
  %1430 = add i64 %1425, -1
  %1431 = inttoptr i64 %1430 to i32*
  %1432 = load atomic i32, i32* %1431 monotonic, align 4
  %1433 = zext i32 %1432 to i64
  %1434 = or i64 %1429, %1433
  %1435 = add i64 %1434, 7
  %1436 = inttoptr i64 %1435 to i16*
  %1437 = load atomic i16, i16* %1436 monotonic, align 2
  %1438 = add i16 %1437, -1059
  %1439 = icmp ult i16 %1438, 15
  br i1 %1439, label %1440, label %2689

1440:                                             ; preds = %1428
  %1441 = add i64 %1425, 11
  %1442 = inttoptr i64 %1441 to i32*
  %1443 = load atomic i32, i32* %1442 monotonic, align 4
  %1444 = zext i32 %1443 to i64
  %1445 = or i64 %1429, %1444
  %1446 = add i64 %1445, 3
  %1447 = inttoptr i64 %1446 to i32*
  %1448 = load atomic i32, i32* %1447 acquire, align 4
  %1449 = and i32 %1448, 1
  %1450 = icmp eq i32 %1449, 0
  br i1 %1450, label %1451, label %2689

1451:                                             ; preds = %1440
  %1452 = load atomic i32, i32* %1447 acquire, align 4
  %1453 = and i32 %1452, -2
  %1454 = icmp eq i32 %1453, 1602
  br i1 %1454, label %1455, label %2689

1455:                                             ; preds = %1451, %1389
  %1456 = phi i64 [ %1390, %1389 ], [ %1394, %1451 ]
  %1457 = and i64 %1456, 524288
  %1458 = icmp eq i64 %1457, 0
  br i1 %1458, label %1521, label %1459

1459:                                             ; preds = %1455
  %1460 = and i64 %1456, -524289
  %1461 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1462 = bitcast %"class.v8::internal::Vector"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1462) #7
  %1463 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %45, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0), i8** %1463, align 8
  %1464 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %45, i64 0, i32 1
  store i64 5, i64* %1464, align 8
  %1465 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1461, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %45, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1462) #7
  %1466 = bitcast %"class.v8::internal::Vector"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1466) #7
  %1467 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %46, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1467, align 8
  %1468 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %46, i64 0, i32 1
  store i64 4, i64* %1468, align 8
  %1469 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1461, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %46, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1466) #7
  %1470 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1469) #7
  %1471 = load i64, i64* %1470, align 8
  %1472 = and i64 %1471, 1
  %1473 = icmp eq i64 %1472, 0
  br i1 %1473, label %1485, label %1474

1474:                                             ; preds = %1459
  %1475 = and i64 %1471, -4294967296
  %1476 = add i64 %1471, -1
  %1477 = inttoptr i64 %1476 to i32*
  %1478 = load atomic i32, i32* %1477 monotonic, align 4
  %1479 = zext i32 %1478 to i64
  %1480 = or i64 %1475, %1479
  %1481 = add i64 %1480, 7
  %1482 = inttoptr i64 %1481 to i16*
  %1483 = load atomic i16, i16* %1482 monotonic, align 2
  %1484 = icmp ugt i16 %1483, 185
  br i1 %1484, label %1487, label %1485

1485:                                             ; preds = %1474, %1459
  %1486 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1489

1487:                                             ; preds = %1474
  %1488 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1470, i64* %1465) #7
  br label %1489

1489:                                             ; preds = %1487, %1485
  %1490 = phi i64* [ %1488, %1487 ], [ %1486, %1485 ]
  %1491 = load i64, i64* %1490, align 8
  %1492 = and i64 %1491, 1
  %1493 = icmp eq i64 %1492, 0
  br i1 %1493, label %2689, label %1494

1494:                                             ; preds = %1489
  %1495 = and i64 %1491, -4294967296
  %1496 = add i64 %1491, -1
  %1497 = inttoptr i64 %1496 to i32*
  %1498 = load atomic i32, i32* %1497 monotonic, align 4
  %1499 = zext i32 %1498 to i64
  %1500 = or i64 %1495, %1499
  %1501 = add i64 %1500, 7
  %1502 = inttoptr i64 %1501 to i16*
  %1503 = load atomic i16, i16* %1502 monotonic, align 2
  %1504 = add i16 %1503, -1059
  %1505 = icmp ult i16 %1504, 15
  br i1 %1505, label %1506, label %2689

1506:                                             ; preds = %1494
  %1507 = add i64 %1491, 11
  %1508 = inttoptr i64 %1507 to i32*
  %1509 = load atomic i32, i32* %1508 monotonic, align 4
  %1510 = zext i32 %1509 to i64
  %1511 = or i64 %1495, %1510
  %1512 = add i64 %1511, 3
  %1513 = inttoptr i64 %1512 to i32*
  %1514 = load atomic i32, i32* %1513 acquire, align 4
  %1515 = and i32 %1514, 1
  %1516 = icmp eq i32 %1515, 0
  br i1 %1516, label %1517, label %2689

1517:                                             ; preds = %1506
  %1518 = load atomic i32, i32* %1513 acquire, align 4
  %1519 = and i32 %1518, -2
  %1520 = icmp eq i32 %1519, 1604
  br i1 %1520, label %1521, label %2689

1521:                                             ; preds = %1517, %1455
  %1522 = phi i64 [ %1456, %1455 ], [ %1460, %1517 ]
  %1523 = and i64 %1522, 1048576
  %1524 = icmp eq i64 %1523, 0
  br i1 %1524, label %1587, label %1525

1525:                                             ; preds = %1521
  %1526 = and i64 %1522, -1048577
  %1527 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1528 = bitcast %"class.v8::internal::Vector"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1528) #7
  %1529 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %47, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8** %1529, align 8
  %1530 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %47, i64 0, i32 1
  store i64 4, i64* %1530, align 8
  %1531 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1527, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %47, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1528) #7
  %1532 = bitcast %"class.v8::internal::Vector"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1532) #7
  %1533 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %48, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1533, align 8
  %1534 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %48, i64 0, i32 1
  store i64 4, i64* %1534, align 8
  %1535 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1527, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %48, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1532) #7
  %1536 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1535) #7
  %1537 = load i64, i64* %1536, align 8
  %1538 = and i64 %1537, 1
  %1539 = icmp eq i64 %1538, 0
  br i1 %1539, label %1551, label %1540

1540:                                             ; preds = %1525
  %1541 = and i64 %1537, -4294967296
  %1542 = add i64 %1537, -1
  %1543 = inttoptr i64 %1542 to i32*
  %1544 = load atomic i32, i32* %1543 monotonic, align 4
  %1545 = zext i32 %1544 to i64
  %1546 = or i64 %1541, %1545
  %1547 = add i64 %1546, 7
  %1548 = inttoptr i64 %1547 to i16*
  %1549 = load atomic i16, i16* %1548 monotonic, align 2
  %1550 = icmp ugt i16 %1549, 185
  br i1 %1550, label %1553, label %1551

1551:                                             ; preds = %1540, %1525
  %1552 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1555

1553:                                             ; preds = %1540
  %1554 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1536, i64* %1531) #7
  br label %1555

1555:                                             ; preds = %1553, %1551
  %1556 = phi i64* [ %1554, %1553 ], [ %1552, %1551 ]
  %1557 = load i64, i64* %1556, align 8
  %1558 = and i64 %1557, 1
  %1559 = icmp eq i64 %1558, 0
  br i1 %1559, label %2689, label %1560

1560:                                             ; preds = %1555
  %1561 = and i64 %1557, -4294967296
  %1562 = add i64 %1557, -1
  %1563 = inttoptr i64 %1562 to i32*
  %1564 = load atomic i32, i32* %1563 monotonic, align 4
  %1565 = zext i32 %1564 to i64
  %1566 = or i64 %1561, %1565
  %1567 = add i64 %1566, 7
  %1568 = inttoptr i64 %1567 to i16*
  %1569 = load atomic i16, i16* %1568 monotonic, align 2
  %1570 = add i16 %1569, -1059
  %1571 = icmp ult i16 %1570, 15
  br i1 %1571, label %1572, label %2689

1572:                                             ; preds = %1560
  %1573 = add i64 %1557, 11
  %1574 = inttoptr i64 %1573 to i32*
  %1575 = load atomic i32, i32* %1574 monotonic, align 4
  %1576 = zext i32 %1575 to i64
  %1577 = or i64 %1561, %1576
  %1578 = add i64 %1577, 3
  %1579 = inttoptr i64 %1578 to i32*
  %1580 = load atomic i32, i32* %1579 acquire, align 4
  %1581 = and i32 %1580, 1
  %1582 = icmp eq i32 %1581, 0
  br i1 %1582, label %1583, label %2689

1583:                                             ; preds = %1572
  %1584 = load atomic i32, i32* %1579 acquire, align 4
  %1585 = and i32 %1584, -2
  %1586 = icmp eq i32 %1585, 1660
  br i1 %1586, label %1587, label %2689

1587:                                             ; preds = %1583, %1521
  %1588 = phi i64 [ %1522, %1521 ], [ %1526, %1583 ]
  %1589 = and i64 %1588, 2097152
  %1590 = icmp eq i64 %1589, 0
  br i1 %1590, label %1648, label %1591

1591:                                             ; preds = %1587
  %1592 = and i64 %1588, -2097153
  %1593 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1594 = bitcast %"class.v8::internal::Vector"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1594) #7
  %1595 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %49, i64 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0), i8** %1595, align 8
  %1596 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %49, i64 0, i32 1
  store i64 1, i64* %1596, align 8
  %1597 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1593, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %49, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1594) #7
  %1598 = bitcast %"class.v8::internal::Vector"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1598) #7
  %1599 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %51, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1599, align 8
  %1600 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %51, i64 0, i32 1
  store i64 4, i64* %1600, align 8
  %1601 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1593, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %51, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1598) #7
  %1602 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1601) #7
  %1603 = load i64, i64* %1602, align 8
  %1604 = and i64 %1603, 1
  %1605 = icmp eq i64 %1604, 0
  br i1 %1605, label %1617, label %1606

1606:                                             ; preds = %1591
  %1607 = and i64 %1603, -4294967296
  %1608 = add i64 %1603, -1
  %1609 = inttoptr i64 %1608 to i32*
  %1610 = load atomic i32, i32* %1609 monotonic, align 4
  %1611 = zext i32 %1610 to i64
  %1612 = or i64 %1607, %1611
  %1613 = add i64 %1612, 7
  %1614 = inttoptr i64 %1613 to i16*
  %1615 = load atomic i16, i16* %1614 monotonic, align 2
  %1616 = icmp ugt i16 %1615, 185
  br i1 %1616, label %1619, label %1617

1617:                                             ; preds = %1606, %1591
  %1618 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1621

1619:                                             ; preds = %1606
  %1620 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1602, i64* %1597) #7
  br label %1621

1621:                                             ; preds = %1619, %1617
  %1622 = phi i64* [ %1620, %1619 ], [ %1618, %1617 ]
  %1623 = load i64, i64* %1622, align 8
  %1624 = and i64 %1623, 1
  %1625 = icmp eq i64 %1624, 0
  br i1 %1625, label %1637, label %1626

1626:                                             ; preds = %1621
  %1627 = and i64 %1623, -4294967296
  %1628 = add i64 %1623, -1
  %1629 = inttoptr i64 %1628 to i32*
  %1630 = load atomic i32, i32* %1629 monotonic, align 4
  %1631 = zext i32 %1630 to i64
  %1632 = or i64 %1627, %1631
  %1633 = add i64 %1632, 7
  %1634 = inttoptr i64 %1633 to i16*
  %1635 = load atomic i16, i16* %1634 monotonic, align 2
  %1636 = icmp eq i16 %1635, 66
  br i1 %1636, label %1641, label %2689

1637:                                             ; preds = %1621
  %1638 = trunc i64 %1623 to i32
  %1639 = ashr i32 %1638, 1
  %1640 = sitofp i32 %1639 to double
  br label %1645

1641:                                             ; preds = %1626
  %1642 = add i64 %1623, 3
  %1643 = inttoptr i64 %1642 to double*
  %1644 = load double, double* %1643, align 1
  br label %1645

1645:                                             ; preds = %1641, %1637
  %1646 = phi double [ %1640, %1637 ], [ %1644, %1641 ]
  %1647 = fcmp une double %1646, 0x4005BF0A8B145769
  br i1 %1647, label %2689, label %1648

1648:                                             ; preds = %1645, %1587
  %1649 = phi i64 [ %1588, %1587 ], [ %1592, %1645 ]
  %1650 = and i64 %1649, 4194304
  %1651 = icmp eq i64 %1650, 0
  br i1 %1651, label %1709, label %1652

1652:                                             ; preds = %1648
  %1653 = and i64 %1649, -4194305
  %1654 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1655 = bitcast %"class.v8::internal::Vector"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1655) #7
  %1656 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %53, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i64 0, i64 0), i8** %1656, align 8
  %1657 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %53, i64 0, i32 1
  store i64 4, i64* %1657, align 8
  %1658 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1654, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %53, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1655) #7
  %1659 = bitcast %"class.v8::internal::Vector"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1659) #7
  %1660 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %54, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1660, align 8
  %1661 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %54, i64 0, i32 1
  store i64 4, i64* %1661, align 8
  %1662 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1654, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %54, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1659) #7
  %1663 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1662) #7
  %1664 = load i64, i64* %1663, align 8
  %1665 = and i64 %1664, 1
  %1666 = icmp eq i64 %1665, 0
  br i1 %1666, label %1678, label %1667

1667:                                             ; preds = %1652
  %1668 = and i64 %1664, -4294967296
  %1669 = add i64 %1664, -1
  %1670 = inttoptr i64 %1669 to i32*
  %1671 = load atomic i32, i32* %1670 monotonic, align 4
  %1672 = zext i32 %1671 to i64
  %1673 = or i64 %1668, %1672
  %1674 = add i64 %1673, 7
  %1675 = inttoptr i64 %1674 to i16*
  %1676 = load atomic i16, i16* %1675 monotonic, align 2
  %1677 = icmp ugt i16 %1676, 185
  br i1 %1677, label %1680, label %1678

1678:                                             ; preds = %1667, %1652
  %1679 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1682

1680:                                             ; preds = %1667
  %1681 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1663, i64* %1658) #7
  br label %1682

1682:                                             ; preds = %1680, %1678
  %1683 = phi i64* [ %1681, %1680 ], [ %1679, %1678 ]
  %1684 = load i64, i64* %1683, align 8
  %1685 = and i64 %1684, 1
  %1686 = icmp eq i64 %1685, 0
  br i1 %1686, label %1698, label %1687

1687:                                             ; preds = %1682
  %1688 = and i64 %1684, -4294967296
  %1689 = add i64 %1684, -1
  %1690 = inttoptr i64 %1689 to i32*
  %1691 = load atomic i32, i32* %1690 monotonic, align 4
  %1692 = zext i32 %1691 to i64
  %1693 = or i64 %1688, %1692
  %1694 = add i64 %1693, 7
  %1695 = inttoptr i64 %1694 to i16*
  %1696 = load atomic i16, i16* %1695 monotonic, align 2
  %1697 = icmp eq i16 %1696, 66
  br i1 %1697, label %1702, label %2689

1698:                                             ; preds = %1682
  %1699 = trunc i64 %1684 to i32
  %1700 = ashr i32 %1699, 1
  %1701 = sitofp i32 %1700 to double
  br label %1706

1702:                                             ; preds = %1687
  %1703 = add i64 %1684, 3
  %1704 = inttoptr i64 %1703 to double*
  %1705 = load double, double* %1704, align 1
  br label %1706

1706:                                             ; preds = %1702, %1698
  %1707 = phi double [ %1701, %1698 ], [ %1705, %1702 ]
  %1708 = fcmp une double %1707, 0x40026BB1BBB55516
  br i1 %1708, label %2689, label %1709

1709:                                             ; preds = %1706, %1648
  %1710 = phi i64 [ %1649, %1648 ], [ %1653, %1706 ]
  %1711 = and i64 %1710, 8388608
  %1712 = icmp eq i64 %1711, 0
  br i1 %1712, label %1770, label %1713

1713:                                             ; preds = %1709
  %1714 = and i64 %1710, -8388609
  %1715 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1716 = bitcast %"class.v8::internal::Vector"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1716) #7
  %1717 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %55, i64 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i8** %1717, align 8
  %1718 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %55, i64 0, i32 1
  store i64 3, i64* %1718, align 8
  %1719 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1715, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %55, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1716) #7
  %1720 = bitcast %"class.v8::internal::Vector"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1720) #7
  %1721 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %56, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1721, align 8
  %1722 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %56, i64 0, i32 1
  store i64 4, i64* %1722, align 8
  %1723 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1715, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %56, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1720) #7
  %1724 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1723) #7
  %1725 = load i64, i64* %1724, align 8
  %1726 = and i64 %1725, 1
  %1727 = icmp eq i64 %1726, 0
  br i1 %1727, label %1739, label %1728

1728:                                             ; preds = %1713
  %1729 = and i64 %1725, -4294967296
  %1730 = add i64 %1725, -1
  %1731 = inttoptr i64 %1730 to i32*
  %1732 = load atomic i32, i32* %1731 monotonic, align 4
  %1733 = zext i32 %1732 to i64
  %1734 = or i64 %1729, %1733
  %1735 = add i64 %1734, 7
  %1736 = inttoptr i64 %1735 to i16*
  %1737 = load atomic i16, i16* %1736 monotonic, align 2
  %1738 = icmp ugt i16 %1737, 185
  br i1 %1738, label %1741, label %1739

1739:                                             ; preds = %1728, %1713
  %1740 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1743

1741:                                             ; preds = %1728
  %1742 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1724, i64* %1719) #7
  br label %1743

1743:                                             ; preds = %1741, %1739
  %1744 = phi i64* [ %1742, %1741 ], [ %1740, %1739 ]
  %1745 = load i64, i64* %1744, align 8
  %1746 = and i64 %1745, 1
  %1747 = icmp eq i64 %1746, 0
  br i1 %1747, label %1759, label %1748

1748:                                             ; preds = %1743
  %1749 = and i64 %1745, -4294967296
  %1750 = add i64 %1745, -1
  %1751 = inttoptr i64 %1750 to i32*
  %1752 = load atomic i32, i32* %1751 monotonic, align 4
  %1753 = zext i32 %1752 to i64
  %1754 = or i64 %1749, %1753
  %1755 = add i64 %1754, 7
  %1756 = inttoptr i64 %1755 to i16*
  %1757 = load atomic i16, i16* %1756 monotonic, align 2
  %1758 = icmp eq i16 %1757, 66
  br i1 %1758, label %1763, label %2689

1759:                                             ; preds = %1743
  %1760 = trunc i64 %1745 to i32
  %1761 = ashr i32 %1760, 1
  %1762 = sitofp i32 %1761 to double
  br label %1767

1763:                                             ; preds = %1748
  %1764 = add i64 %1745, 3
  %1765 = inttoptr i64 %1764 to double*
  %1766 = load double, double* %1765, align 1
  br label %1767

1767:                                             ; preds = %1763, %1759
  %1768 = phi double [ %1762, %1759 ], [ %1766, %1763 ]
  %1769 = fcmp une double %1768, 0x3FE62E42FEFA39EF
  br i1 %1769, label %2689, label %1770

1770:                                             ; preds = %1767, %1709
  %1771 = phi i64 [ %1710, %1709 ], [ %1714, %1767 ]
  %1772 = and i64 %1771, 16777216
  %1773 = icmp eq i64 %1772, 0
  br i1 %1773, label %1831, label %1774

1774:                                             ; preds = %1770
  %1775 = and i64 %1771, -16777217
  %1776 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1777 = bitcast %"class.v8::internal::Vector"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1777) #7
  %1778 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %57, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0), i8** %1778, align 8
  %1779 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %57, i64 0, i32 1
  store i64 5, i64* %1779, align 8
  %1780 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1776, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %57, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1777) #7
  %1781 = bitcast %"class.v8::internal::Vector"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1781) #7
  %1782 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %59, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1782, align 8
  %1783 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %59, i64 0, i32 1
  store i64 4, i64* %1783, align 8
  %1784 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1776, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %59, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1781) #7
  %1785 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1784) #7
  %1786 = load i64, i64* %1785, align 8
  %1787 = and i64 %1786, 1
  %1788 = icmp eq i64 %1787, 0
  br i1 %1788, label %1800, label %1789

1789:                                             ; preds = %1774
  %1790 = and i64 %1786, -4294967296
  %1791 = add i64 %1786, -1
  %1792 = inttoptr i64 %1791 to i32*
  %1793 = load atomic i32, i32* %1792 monotonic, align 4
  %1794 = zext i32 %1793 to i64
  %1795 = or i64 %1790, %1794
  %1796 = add i64 %1795, 7
  %1797 = inttoptr i64 %1796 to i16*
  %1798 = load atomic i16, i16* %1797 monotonic, align 2
  %1799 = icmp ugt i16 %1798, 185
  br i1 %1799, label %1802, label %1800

1800:                                             ; preds = %1789, %1774
  %1801 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1804

1802:                                             ; preds = %1789
  %1803 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1785, i64* %1780) #7
  br label %1804

1804:                                             ; preds = %1802, %1800
  %1805 = phi i64* [ %1803, %1802 ], [ %1801, %1800 ]
  %1806 = load i64, i64* %1805, align 8
  %1807 = and i64 %1806, 1
  %1808 = icmp eq i64 %1807, 0
  br i1 %1808, label %1820, label %1809

1809:                                             ; preds = %1804
  %1810 = and i64 %1806, -4294967296
  %1811 = add i64 %1806, -1
  %1812 = inttoptr i64 %1811 to i32*
  %1813 = load atomic i32, i32* %1812 monotonic, align 4
  %1814 = zext i32 %1813 to i64
  %1815 = or i64 %1810, %1814
  %1816 = add i64 %1815, 7
  %1817 = inttoptr i64 %1816 to i16*
  %1818 = load atomic i16, i16* %1817 monotonic, align 2
  %1819 = icmp eq i16 %1818, 66
  br i1 %1819, label %1824, label %2689

1820:                                             ; preds = %1804
  %1821 = trunc i64 %1806 to i32
  %1822 = ashr i32 %1821, 1
  %1823 = sitofp i32 %1822 to double
  br label %1828

1824:                                             ; preds = %1809
  %1825 = add i64 %1806, 3
  %1826 = inttoptr i64 %1825 to double*
  %1827 = load double, double* %1826, align 1
  br label %1828

1828:                                             ; preds = %1824, %1820
  %1829 = phi double [ %1823, %1820 ], [ %1827, %1824 ]
  %1830 = fcmp une double %1829, 0x3FF71547652B82FE
  br i1 %1830, label %2689, label %1831

1831:                                             ; preds = %1828, %1770
  %1832 = phi i64 [ %1771, %1770 ], [ %1775, %1828 ]
  %1833 = and i64 %1832, 33554432
  %1834 = icmp eq i64 %1833, 0
  br i1 %1834, label %1892, label %1835

1835:                                             ; preds = %1831
  %1836 = and i64 %1832, -33554433
  %1837 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1838 = bitcast %"class.v8::internal::Vector"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1838) #7
  %1839 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %61, i64 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i64 0, i64 0), i8** %1839, align 8
  %1840 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %61, i64 0, i32 1
  store i64 6, i64* %1840, align 8
  %1841 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1837, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %61, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1838) #7
  %1842 = bitcast %"class.v8::internal::Vector"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1842) #7
  %1843 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %62, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1843, align 8
  %1844 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %62, i64 0, i32 1
  store i64 4, i64* %1844, align 8
  %1845 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1837, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %62, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1842) #7
  %1846 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1845) #7
  %1847 = load i64, i64* %1846, align 8
  %1848 = and i64 %1847, 1
  %1849 = icmp eq i64 %1848, 0
  br i1 %1849, label %1861, label %1850

1850:                                             ; preds = %1835
  %1851 = and i64 %1847, -4294967296
  %1852 = add i64 %1847, -1
  %1853 = inttoptr i64 %1852 to i32*
  %1854 = load atomic i32, i32* %1853 monotonic, align 4
  %1855 = zext i32 %1854 to i64
  %1856 = or i64 %1851, %1855
  %1857 = add i64 %1856, 7
  %1858 = inttoptr i64 %1857 to i16*
  %1859 = load atomic i16, i16* %1858 monotonic, align 2
  %1860 = icmp ugt i16 %1859, 185
  br i1 %1860, label %1863, label %1861

1861:                                             ; preds = %1850, %1835
  %1862 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1865

1863:                                             ; preds = %1850
  %1864 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1846, i64* %1841) #7
  br label %1865

1865:                                             ; preds = %1863, %1861
  %1866 = phi i64* [ %1864, %1863 ], [ %1862, %1861 ]
  %1867 = load i64, i64* %1866, align 8
  %1868 = and i64 %1867, 1
  %1869 = icmp eq i64 %1868, 0
  br i1 %1869, label %1881, label %1870

1870:                                             ; preds = %1865
  %1871 = and i64 %1867, -4294967296
  %1872 = add i64 %1867, -1
  %1873 = inttoptr i64 %1872 to i32*
  %1874 = load atomic i32, i32* %1873 monotonic, align 4
  %1875 = zext i32 %1874 to i64
  %1876 = or i64 %1871, %1875
  %1877 = add i64 %1876, 7
  %1878 = inttoptr i64 %1877 to i16*
  %1879 = load atomic i16, i16* %1878 monotonic, align 2
  %1880 = icmp eq i16 %1879, 66
  br i1 %1880, label %1885, label %2689

1881:                                             ; preds = %1865
  %1882 = trunc i64 %1867 to i32
  %1883 = ashr i32 %1882, 1
  %1884 = sitofp i32 %1883 to double
  br label %1889

1885:                                             ; preds = %1870
  %1886 = add i64 %1867, 3
  %1887 = inttoptr i64 %1886 to double*
  %1888 = load double, double* %1887, align 1
  br label %1889

1889:                                             ; preds = %1885, %1881
  %1890 = phi double [ %1884, %1881 ], [ %1888, %1885 ]
  %1891 = fcmp une double %1890, 0x3FDBCB7B1526E50E
  br i1 %1891, label %2689, label %1892

1892:                                             ; preds = %1889, %1831
  %1893 = phi i64 [ %1832, %1831 ], [ %1836, %1889 ]
  %1894 = and i64 %1893, 67108864
  %1895 = icmp eq i64 %1894, 0
  br i1 %1895, label %1953, label %1896

1896:                                             ; preds = %1892
  %1897 = and i64 %1893, -67108865
  %1898 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1899 = bitcast %"class.v8::internal::Vector"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1899) #7
  %1900 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %63, i64 0, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), i8** %1900, align 8
  %1901 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %63, i64 0, i32 1
  store i64 2, i64* %1901, align 8
  %1902 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1898, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %63, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1899) #7
  %1903 = bitcast %"class.v8::internal::Vector"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1903) #7
  %1904 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %64, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1904, align 8
  %1905 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %64, i64 0, i32 1
  store i64 4, i64* %1905, align 8
  %1906 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1898, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %64, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1903) #7
  %1907 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1906) #7
  %1908 = load i64, i64* %1907, align 8
  %1909 = and i64 %1908, 1
  %1910 = icmp eq i64 %1909, 0
  br i1 %1910, label %1922, label %1911

1911:                                             ; preds = %1896
  %1912 = and i64 %1908, -4294967296
  %1913 = add i64 %1908, -1
  %1914 = inttoptr i64 %1913 to i32*
  %1915 = load atomic i32, i32* %1914 monotonic, align 4
  %1916 = zext i32 %1915 to i64
  %1917 = or i64 %1912, %1916
  %1918 = add i64 %1917, 7
  %1919 = inttoptr i64 %1918 to i16*
  %1920 = load atomic i16, i16* %1919 monotonic, align 2
  %1921 = icmp ugt i16 %1920, 185
  br i1 %1921, label %1924, label %1922

1922:                                             ; preds = %1911, %1896
  %1923 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1926

1924:                                             ; preds = %1911
  %1925 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1907, i64* %1902) #7
  br label %1926

1926:                                             ; preds = %1924, %1922
  %1927 = phi i64* [ %1925, %1924 ], [ %1923, %1922 ]
  %1928 = load i64, i64* %1927, align 8
  %1929 = and i64 %1928, 1
  %1930 = icmp eq i64 %1929, 0
  br i1 %1930, label %1942, label %1931

1931:                                             ; preds = %1926
  %1932 = and i64 %1928, -4294967296
  %1933 = add i64 %1928, -1
  %1934 = inttoptr i64 %1933 to i32*
  %1935 = load atomic i32, i32* %1934 monotonic, align 4
  %1936 = zext i32 %1935 to i64
  %1937 = or i64 %1932, %1936
  %1938 = add i64 %1937, 7
  %1939 = inttoptr i64 %1938 to i16*
  %1940 = load atomic i16, i16* %1939 monotonic, align 2
  %1941 = icmp eq i16 %1940, 66
  br i1 %1941, label %1946, label %2689

1942:                                             ; preds = %1926
  %1943 = trunc i64 %1928 to i32
  %1944 = ashr i32 %1943, 1
  %1945 = sitofp i32 %1944 to double
  br label %1950

1946:                                             ; preds = %1931
  %1947 = add i64 %1928, 3
  %1948 = inttoptr i64 %1947 to double*
  %1949 = load double, double* %1948, align 1
  br label %1950

1950:                                             ; preds = %1946, %1942
  %1951 = phi double [ %1945, %1942 ], [ %1949, %1946 ]
  %1952 = fcmp une double %1951, 0x400921FB54442D18
  br i1 %1952, label %2689, label %1953

1953:                                             ; preds = %1950, %1892
  %1954 = phi i64 [ %1893, %1892 ], [ %1897, %1950 ]
  %1955 = and i64 %1954, 134217728
  %1956 = icmp eq i64 %1955, 0
  br i1 %1956, label %2014, label %1957

1957:                                             ; preds = %1953
  %1958 = and i64 %1954, -134217729
  %1959 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %1960 = bitcast %"class.v8::internal::Vector"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1960) #7
  %1961 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %65, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i8** %1961, align 8
  %1962 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %65, i64 0, i32 1
  store i64 7, i64* %1962, align 8
  %1963 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1959, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %65, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1960) #7
  %1964 = bitcast %"class.v8::internal::Vector"* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1964) #7
  %1965 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %67, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %1965, align 8
  %1966 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %67, i64 0, i32 1
  store i64 4, i64* %1966, align 8
  %1967 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %1959, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %67, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1964) #7
  %1968 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %1967) #7
  %1969 = load i64, i64* %1968, align 8
  %1970 = and i64 %1969, 1
  %1971 = icmp eq i64 %1970, 0
  br i1 %1971, label %1983, label %1972

1972:                                             ; preds = %1957
  %1973 = and i64 %1969, -4294967296
  %1974 = add i64 %1969, -1
  %1975 = inttoptr i64 %1974 to i32*
  %1976 = load atomic i32, i32* %1975 monotonic, align 4
  %1977 = zext i32 %1976 to i64
  %1978 = or i64 %1973, %1977
  %1979 = add i64 %1978, 7
  %1980 = inttoptr i64 %1979 to i16*
  %1981 = load atomic i16, i16* %1980 monotonic, align 2
  %1982 = icmp ugt i16 %1981, 185
  br i1 %1982, label %1985, label %1983

1983:                                             ; preds = %1972, %1957
  %1984 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %1987

1985:                                             ; preds = %1972
  %1986 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1968, i64* %1963) #7
  br label %1987

1987:                                             ; preds = %1985, %1983
  %1988 = phi i64* [ %1986, %1985 ], [ %1984, %1983 ]
  %1989 = load i64, i64* %1988, align 8
  %1990 = and i64 %1989, 1
  %1991 = icmp eq i64 %1990, 0
  br i1 %1991, label %2003, label %1992

1992:                                             ; preds = %1987
  %1993 = and i64 %1989, -4294967296
  %1994 = add i64 %1989, -1
  %1995 = inttoptr i64 %1994 to i32*
  %1996 = load atomic i32, i32* %1995 monotonic, align 4
  %1997 = zext i32 %1996 to i64
  %1998 = or i64 %1993, %1997
  %1999 = add i64 %1998, 7
  %2000 = inttoptr i64 %1999 to i16*
  %2001 = load atomic i16, i16* %2000 monotonic, align 2
  %2002 = icmp eq i16 %2001, 66
  br i1 %2002, label %2007, label %2689

2003:                                             ; preds = %1987
  %2004 = trunc i64 %1989 to i32
  %2005 = ashr i32 %2004, 1
  %2006 = sitofp i32 %2005 to double
  br label %2011

2007:                                             ; preds = %1992
  %2008 = add i64 %1989, 3
  %2009 = inttoptr i64 %2008 to double*
  %2010 = load double, double* %2009, align 1
  br label %2011

2011:                                             ; preds = %2007, %2003
  %2012 = phi double [ %2006, %2003 ], [ %2010, %2007 ]
  %2013 = fcmp une double %2012, 0x3FE6A09E667F3BCD
  br i1 %2013, label %2689, label %2014

2014:                                             ; preds = %2011, %1953
  %2015 = phi i64 [ %1954, %1953 ], [ %1958, %2011 ]
  %2016 = and i64 %2015, 268435456
  %2017 = icmp eq i64 %2016, 0
  br i1 %2017, label %2075, label %2018

2018:                                             ; preds = %2014
  %2019 = and i64 %2015, -268435457
  %2020 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %2021 = bitcast %"class.v8::internal::Vector"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2021) #7
  %2022 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %69, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i8** %2022, align 8
  %2023 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %69, i64 0, i32 1
  store i64 5, i64* %2023, align 8
  %2024 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %2020, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %69, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2021) #7
  %2025 = bitcast %"class.v8::internal::Vector"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2025) #7
  %2026 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %70, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i8** %2026, align 8
  %2027 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %70, i64 0, i32 1
  store i64 4, i64* %2027, align 8
  %2028 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %2020, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %70, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2025) #7
  %2029 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %2028) #7
  %2030 = load i64, i64* %2029, align 8
  %2031 = and i64 %2030, 1
  %2032 = icmp eq i64 %2031, 0
  br i1 %2032, label %2044, label %2033

2033:                                             ; preds = %2018
  %2034 = and i64 %2030, -4294967296
  %2035 = add i64 %2030, -1
  %2036 = inttoptr i64 %2035 to i32*
  %2037 = load atomic i32, i32* %2036 monotonic, align 4
  %2038 = zext i32 %2037 to i64
  %2039 = or i64 %2034, %2038
  %2040 = add i64 %2039, 7
  %2041 = inttoptr i64 %2040 to i16*
  %2042 = load atomic i16, i16* %2041 monotonic, align 2
  %2043 = icmp ugt i16 %2042, 185
  br i1 %2043, label %2046, label %2044

2044:                                             ; preds = %2033, %2018
  %2045 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %2048

2046:                                             ; preds = %2033
  %2047 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %2029, i64* %2024) #7
  br label %2048

2048:                                             ; preds = %2046, %2044
  %2049 = phi i64* [ %2047, %2046 ], [ %2045, %2044 ]
  %2050 = load i64, i64* %2049, align 8
  %2051 = and i64 %2050, 1
  %2052 = icmp eq i64 %2051, 0
  br i1 %2052, label %2064, label %2053

2053:                                             ; preds = %2048
  %2054 = and i64 %2050, -4294967296
  %2055 = add i64 %2050, -1
  %2056 = inttoptr i64 %2055 to i32*
  %2057 = load atomic i32, i32* %2056 monotonic, align 4
  %2058 = zext i32 %2057 to i64
  %2059 = or i64 %2054, %2058
  %2060 = add i64 %2059, 7
  %2061 = inttoptr i64 %2060 to i16*
  %2062 = load atomic i16, i16* %2061 monotonic, align 2
  %2063 = icmp eq i16 %2062, 66
  br i1 %2063, label %2068, label %2689

2064:                                             ; preds = %2048
  %2065 = trunc i64 %2050 to i32
  %2066 = ashr i32 %2065, 1
  %2067 = sitofp i32 %2066 to double
  br label %2072

2068:                                             ; preds = %2053
  %2069 = add i64 %2050, 3
  %2070 = inttoptr i64 %2069 to double*
  %2071 = load double, double* %2070, align 1
  br label %2072

2072:                                             ; preds = %2068, %2064
  %2073 = phi double [ %2067, %2064 ], [ %2071, %2068 ]
  %2074 = fcmp une double %2073, 0x3FF6A09E667F3BCD
  br i1 %2074, label %2689, label %2075

2075:                                             ; preds = %2072, %2014
  %2076 = phi i64 [ %2015, %2014 ], [ %2019, %2072 ]
  %2077 = and i64 %2076, 536870912
  %2078 = icmp eq i64 %2077, 0
  br i1 %2078, label %2151, label %2079

2079:                                             ; preds = %2075
  %2080 = and i64 %2076, -536870913
  %2081 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %2082 = bitcast %"class.v8::internal::Vector"* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2082) #7
  %2083 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %71, i64 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0), i8** %2083, align 8
  %2084 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %71, i64 0, i32 1
  store i64 9, i64* %2084, align 8
  %2085 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %2081, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %71, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2082) #7
  %2086 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %2085) #7
  %2087 = load i64, i64* %2086, align 8
  %2088 = and i64 %2087, 1
  %2089 = icmp eq i64 %2088, 0
  br i1 %2089, label %2689, label %2090

2090:                                             ; preds = %2079
  %2091 = and i64 %2087, -4294967296
  %2092 = add i64 %2087, -1
  %2093 = inttoptr i64 %2092 to i32*
  %2094 = load atomic i32, i32* %2093 monotonic, align 4
  %2095 = zext i32 %2094 to i64
  %2096 = or i64 %2091, %2095
  %2097 = add i64 %2096, 7
  %2098 = inttoptr i64 %2097 to i16*
  %2099 = load atomic i16, i16* %2098 monotonic, align 2
  %2100 = add i16 %2099, -1059
  %2101 = icmp ult i16 %2100, 15
  br i1 %2101, label %2102, label %2689

2102:                                             ; preds = %2090
  %2103 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2104 = load i64, i64* %2103, align 8
  %2105 = and i64 %2104, -4294967296
  %2106 = add i64 %2104, -1
  %2107 = inttoptr i64 %2106 to i32*
  %2108 = load atomic i32, i32* %2107 monotonic, align 4
  %2109 = zext i32 %2108 to i64
  %2110 = or i64 %2105, %2109
  %2111 = add i64 %2110, 19
  %2112 = inttoptr i64 %2111 to i32*
  %2113 = load i32, i32* %2112, align 4
  %2114 = zext i32 %2113 to i64
  %2115 = or i64 %2105, %2114
  %2116 = add i64 %2115, 75
  %2117 = inttoptr i64 %2116 to i32*
  %2118 = load atomic i32, i32* %2117 monotonic, align 4
  %2119 = zext i32 %2118 to i64
  %2120 = or i64 %2105, %2119
  %2121 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %102, align 8
  %2122 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2121, null
  br i1 %2122, label %2125, label %2123

2123:                                             ; preds = %2102
  %2124 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2121, i64 %2120) #7
  br label %2138

2125:                                             ; preds = %2102
  %2126 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %2127 = load i64*, i64** %2126, align 8
  %2128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %2129 = load i64*, i64** %2128, align 8
  %2130 = icmp eq i64* %2127, %2129
  br i1 %2130, label %2131, label %2133

2131:                                             ; preds = %2125
  %2132 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %2133

2133:                                             ; preds = %2131, %2125
  %2134 = phi i64* [ %2132, %2131 ], [ %2127, %2125 ]
  %2135 = ptrtoint i64* %2134 to i64
  %2136 = add i64 %2135, 8
  %2137 = inttoptr i64 %2136 to i64*
  store i64* %2137, i64** %2126, align 8
  store i64 %2120, i64* %2134, align 8
  br label %2138

2138:                                             ; preds = %2133, %2123
  %2139 = phi i64* [ %2124, %2123 ], [ %2134, %2133 ]
  %2140 = icmp eq i64* %2086, %2139
  br i1 %2140, label %2151, label %2141

2141:                                             ; preds = %2138
  %2142 = icmp eq i64* %2086, null
  %2143 = icmp eq i64* %2139, null
  %2144 = or i1 %2142, %2143
  br i1 %2144, label %2689, label %2145

2145:                                             ; preds = %2141
  %2146 = load i64, i64* %2086, align 8
  %2147 = load i64, i64* %2139, align 8
  %2148 = trunc i64 %2146 to i32
  %2149 = trunc i64 %2147 to i32
  %2150 = icmp eq i32 %2148, %2149
  br i1 %2150, label %2151, label %2689

2151:                                             ; preds = %2145, %2138, %2075
  %2152 = phi i8 [ 0, %2075 ], [ 1, %2138 ], [ 1, %2145 ]
  %2153 = phi i64 [ %2076, %2075 ], [ %2080, %2138 ], [ %2080, %2145 ]
  %2154 = and i64 %2153, 1073741824
  %2155 = icmp eq i64 %2154, 0
  br i1 %2155, label %2228, label %2156

2156:                                             ; preds = %2151
  %2157 = and i64 %2153, -1073741825
  %2158 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %2159 = bitcast %"class.v8::internal::Vector"* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2159) #7
  %2160 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %72, i64 0, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i64 0, i64 0), i8** %2160, align 8
  %2161 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %72, i64 0, i32 1
  store i64 10, i64* %2161, align 8
  %2162 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %2158, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %72, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2159) #7
  %2163 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %2162) #7
  %2164 = load i64, i64* %2163, align 8
  %2165 = and i64 %2164, 1
  %2166 = icmp eq i64 %2165, 0
  br i1 %2166, label %2689, label %2167

2167:                                             ; preds = %2156
  %2168 = and i64 %2164, -4294967296
  %2169 = add i64 %2164, -1
  %2170 = inttoptr i64 %2169 to i32*
  %2171 = load atomic i32, i32* %2170 monotonic, align 4
  %2172 = zext i32 %2171 to i64
  %2173 = or i64 %2168, %2172
  %2174 = add i64 %2173, 7
  %2175 = inttoptr i64 %2174 to i16*
  %2176 = load atomic i16, i16* %2175 monotonic, align 2
  %2177 = add i16 %2176, -1059
  %2178 = icmp ult i16 %2177, 15
  br i1 %2178, label %2179, label %2689

2179:                                             ; preds = %2167
  %2180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2181 = load i64, i64* %2180, align 8
  %2182 = and i64 %2181, -4294967296
  %2183 = add i64 %2181, -1
  %2184 = inttoptr i64 %2183 to i32*
  %2185 = load atomic i32, i32* %2184 monotonic, align 4
  %2186 = zext i32 %2185 to i64
  %2187 = or i64 %2182, %2186
  %2188 = add i64 %2187, 19
  %2189 = inttoptr i64 %2188 to i32*
  %2190 = load i32, i32* %2189, align 4
  %2191 = zext i32 %2190 to i64
  %2192 = or i64 %2182, %2191
  %2193 = add i64 %2192, 71
  %2194 = inttoptr i64 %2193 to i32*
  %2195 = load atomic i32, i32* %2194 monotonic, align 4
  %2196 = zext i32 %2195 to i64
  %2197 = or i64 %2182, %2196
  %2198 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %102, align 8
  %2199 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2198, null
  br i1 %2199, label %2202, label %2200

2200:                                             ; preds = %2179
  %2201 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2198, i64 %2197) #7
  br label %2215

2202:                                             ; preds = %2179
  %2203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %2204 = load i64*, i64** %2203, align 8
  %2205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %2206 = load i64*, i64** %2205, align 8
  %2207 = icmp eq i64* %2204, %2206
  br i1 %2207, label %2208, label %2210

2208:                                             ; preds = %2202
  %2209 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %2210

2210:                                             ; preds = %2208, %2202
  %2211 = phi i64* [ %2209, %2208 ], [ %2204, %2202 ]
  %2212 = ptrtoint i64* %2211 to i64
  %2213 = add i64 %2212, 8
  %2214 = inttoptr i64 %2213 to i64*
  store i64* %2214, i64** %2203, align 8
  store i64 %2197, i64* %2211, align 8
  br label %2215

2215:                                             ; preds = %2210, %2200
  %2216 = phi i64* [ %2201, %2200 ], [ %2211, %2210 ]
  %2217 = icmp eq i64* %2163, %2216
  br i1 %2217, label %2228, label %2218

2218:                                             ; preds = %2215
  %2219 = icmp eq i64* %2163, null
  %2220 = icmp eq i64* %2216, null
  %2221 = or i1 %2219, %2220
  br i1 %2221, label %2689, label %2222

2222:                                             ; preds = %2218
  %2223 = load i64, i64* %2163, align 8
  %2224 = load i64, i64* %2216, align 8
  %2225 = trunc i64 %2223 to i32
  %2226 = trunc i64 %2224 to i32
  %2227 = icmp eq i32 %2225, %2226
  br i1 %2227, label %2228, label %2689

2228:                                             ; preds = %2222, %2215, %2151
  %2229 = phi i8 [ %2152, %2151 ], [ 1, %2215 ], [ 1, %2222 ]
  %2230 = phi i64 [ %2153, %2151 ], [ %2157, %2215 ], [ %2157, %2222 ]
  %2231 = trunc i64 %2230 to i32
  %2232 = icmp slt i32 %2231, 0
  br i1 %2232, label %2233, label %2305

2233:                                             ; preds = %2228
  %2234 = and i64 %2230, -2147483649
  %2235 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %2236 = bitcast %"class.v8::internal::Vector"* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2236) #7
  %2237 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %75, i64 0, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i64 0, i64 0), i8** %2237, align 8
  %2238 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %75, i64 0, i32 1
  store i64 10, i64* %2238, align 8
  %2239 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %2235, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %75, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2236) #7
  %2240 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %2239) #7
  %2241 = load i64, i64* %2240, align 8
  %2242 = and i64 %2241, 1
  %2243 = icmp eq i64 %2242, 0
  br i1 %2243, label %2689, label %2244

2244:                                             ; preds = %2233
  %2245 = and i64 %2241, -4294967296
  %2246 = add i64 %2241, -1
  %2247 = inttoptr i64 %2246 to i32*
  %2248 = load atomic i32, i32* %2247 monotonic, align 4
  %2249 = zext i32 %2248 to i64
  %2250 = or i64 %2245, %2249
  %2251 = add i64 %2250, 7
  %2252 = inttoptr i64 %2251 to i16*
  %2253 = load atomic i16, i16* %2252 monotonic, align 2
  %2254 = add i16 %2253, -1059
  %2255 = icmp ult i16 %2254, 15
  br i1 %2255, label %2256, label %2689

2256:                                             ; preds = %2244
  %2257 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2258 = load i64, i64* %2257, align 8
  %2259 = and i64 %2258, -4294967296
  %2260 = add i64 %2258, -1
  %2261 = inttoptr i64 %2260 to i32*
  %2262 = load atomic i32, i32* %2261 monotonic, align 4
  %2263 = zext i32 %2262 to i64
  %2264 = or i64 %2259, %2263
  %2265 = add i64 %2264, 19
  %2266 = inttoptr i64 %2265 to i32*
  %2267 = load i32, i32* %2266, align 4
  %2268 = zext i32 %2267 to i64
  %2269 = or i64 %2259, %2268
  %2270 = add i64 %2269, 83
  %2271 = inttoptr i64 %2270 to i32*
  %2272 = load atomic i32, i32* %2271 monotonic, align 4
  %2273 = zext i32 %2272 to i64
  %2274 = or i64 %2259, %2273
  %2275 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %102, align 8
  %2276 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2275, null
  br i1 %2276, label %2279, label %2277

2277:                                             ; preds = %2256
  %2278 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2275, i64 %2274) #7
  br label %2292

2279:                                             ; preds = %2256
  %2280 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %2281 = load i64*, i64** %2280, align 8
  %2282 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %2283 = load i64*, i64** %2282, align 8
  %2284 = icmp eq i64* %2281, %2283
  br i1 %2284, label %2285, label %2287

2285:                                             ; preds = %2279
  %2286 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %2287

2287:                                             ; preds = %2285, %2279
  %2288 = phi i64* [ %2286, %2285 ], [ %2281, %2279 ]
  %2289 = ptrtoint i64* %2288 to i64
  %2290 = add i64 %2289, 8
  %2291 = inttoptr i64 %2290 to i64*
  store i64* %2291, i64** %2280, align 8
  store i64 %2274, i64* %2288, align 8
  br label %2292

2292:                                             ; preds = %2287, %2277
  %2293 = phi i64* [ %2278, %2277 ], [ %2288, %2287 ]
  %2294 = icmp eq i64* %2240, %2293
  br i1 %2294, label %2305, label %2295

2295:                                             ; preds = %2292
  %2296 = icmp eq i64* %2240, null
  %2297 = icmp eq i64* %2293, null
  %2298 = or i1 %2296, %2297
  br i1 %2298, label %2689, label %2299

2299:                                             ; preds = %2295
  %2300 = load i64, i64* %2240, align 8
  %2301 = load i64, i64* %2293, align 8
  %2302 = trunc i64 %2300 to i32
  %2303 = trunc i64 %2301 to i32
  %2304 = icmp eq i32 %2302, %2303
  br i1 %2304, label %2305, label %2689

2305:                                             ; preds = %2299, %2292, %2228
  %2306 = phi i8 [ 1, %2292 ], [ 1, %2299 ], [ %2229, %2228 ]
  %2307 = phi i64 [ %2234, %2292 ], [ %2234, %2299 ], [ %2230, %2228 ]
  %2308 = and i64 %2307, 4294967296
  %2309 = icmp eq i64 %2308, 0
  br i1 %2309, label %2382, label %2310

2310:                                             ; preds = %2305
  %2311 = and i64 %2307, -4294967297
  %2312 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %2313 = bitcast %"class.v8::internal::Vector"* %76 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2313) #7
  %2314 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %76, i64 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i64 0, i64 0), i8** %2314, align 8
  %2315 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %76, i64 0, i32 1
  store i64 11, i64* %2315, align 8
  %2316 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %2312, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %76, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2313) #7
  %2317 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %2316) #7
  %2318 = load i64, i64* %2317, align 8
  %2319 = and i64 %2318, 1
  %2320 = icmp eq i64 %2319, 0
  br i1 %2320, label %2689, label %2321

2321:                                             ; preds = %2310
  %2322 = and i64 %2318, -4294967296
  %2323 = add i64 %2318, -1
  %2324 = inttoptr i64 %2323 to i32*
  %2325 = load atomic i32, i32* %2324 monotonic, align 4
  %2326 = zext i32 %2325 to i64
  %2327 = or i64 %2322, %2326
  %2328 = add i64 %2327, 7
  %2329 = inttoptr i64 %2328 to i16*
  %2330 = load atomic i16, i16* %2329 monotonic, align 2
  %2331 = add i16 %2330, -1059
  %2332 = icmp ult i16 %2331, 15
  br i1 %2332, label %2333, label %2689

2333:                                             ; preds = %2321
  %2334 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2335 = load i64, i64* %2334, align 8
  %2336 = and i64 %2335, -4294967296
  %2337 = add i64 %2335, -1
  %2338 = inttoptr i64 %2337 to i32*
  %2339 = load atomic i32, i32* %2338 monotonic, align 4
  %2340 = zext i32 %2339 to i64
  %2341 = or i64 %2336, %2340
  %2342 = add i64 %2341, 19
  %2343 = inttoptr i64 %2342 to i32*
  %2344 = load i32, i32* %2343, align 4
  %2345 = zext i32 %2344 to i64
  %2346 = or i64 %2336, %2345
  %2347 = add i64 %2346, 79
  %2348 = inttoptr i64 %2347 to i32*
  %2349 = load atomic i32, i32* %2348 monotonic, align 4
  %2350 = zext i32 %2349 to i64
  %2351 = or i64 %2336, %2350
  %2352 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %102, align 8
  %2353 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2352, null
  br i1 %2353, label %2356, label %2354

2354:                                             ; preds = %2333
  %2355 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2352, i64 %2351) #7
  br label %2369

2356:                                             ; preds = %2333
  %2357 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %2358 = load i64*, i64** %2357, align 8
  %2359 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %2360 = load i64*, i64** %2359, align 8
  %2361 = icmp eq i64* %2358, %2360
  br i1 %2361, label %2362, label %2364

2362:                                             ; preds = %2356
  %2363 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %2364

2364:                                             ; preds = %2362, %2356
  %2365 = phi i64* [ %2363, %2362 ], [ %2358, %2356 ]
  %2366 = ptrtoint i64* %2365 to i64
  %2367 = add i64 %2366, 8
  %2368 = inttoptr i64 %2367 to i64*
  store i64* %2368, i64** %2357, align 8
  store i64 %2351, i64* %2365, align 8
  br label %2369

2369:                                             ; preds = %2364, %2354
  %2370 = phi i64* [ %2355, %2354 ], [ %2365, %2364 ]
  %2371 = icmp eq i64* %2317, %2370
  br i1 %2371, label %2382, label %2372

2372:                                             ; preds = %2369
  %2373 = icmp eq i64* %2317, null
  %2374 = icmp eq i64* %2370, null
  %2375 = or i1 %2373, %2374
  br i1 %2375, label %2689, label %2376

2376:                                             ; preds = %2372
  %2377 = load i64, i64* %2317, align 8
  %2378 = load i64, i64* %2370, align 8
  %2379 = trunc i64 %2377 to i32
  %2380 = trunc i64 %2378 to i32
  %2381 = icmp eq i32 %2379, %2380
  br i1 %2381, label %2382, label %2689

2382:                                             ; preds = %2376, %2369, %2305
  %2383 = phi i8 [ %2306, %2305 ], [ 1, %2369 ], [ 1, %2376 ]
  %2384 = phi i64 [ %2307, %2305 ], [ %2311, %2369 ], [ %2311, %2376 ]
  %2385 = and i64 %2384, 8589934592
  %2386 = icmp eq i64 %2385, 0
  br i1 %2386, label %2459, label %2387

2387:                                             ; preds = %2382
  %2388 = and i64 %2384, -8589934593
  %2389 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %2390 = bitcast %"class.v8::internal::Vector"* %77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2390) #7
  %2391 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %77, i64 0, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0), i8** %2391, align 8
  %2392 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %77, i64 0, i32 1
  store i64 10, i64* %2392, align 8
  %2393 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %2389, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %77, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2390) #7
  %2394 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %2393) #7
  %2395 = load i64, i64* %2394, align 8
  %2396 = and i64 %2395, 1
  %2397 = icmp eq i64 %2396, 0
  br i1 %2397, label %2689, label %2398

2398:                                             ; preds = %2387
  %2399 = and i64 %2395, -4294967296
  %2400 = add i64 %2395, -1
  %2401 = inttoptr i64 %2400 to i32*
  %2402 = load atomic i32, i32* %2401 monotonic, align 4
  %2403 = zext i32 %2402 to i64
  %2404 = or i64 %2399, %2403
  %2405 = add i64 %2404, 7
  %2406 = inttoptr i64 %2405 to i16*
  %2407 = load atomic i16, i16* %2406 monotonic, align 2
  %2408 = add i16 %2407, -1059
  %2409 = icmp ult i16 %2408, 15
  br i1 %2409, label %2410, label %2689

2410:                                             ; preds = %2398
  %2411 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2412 = load i64, i64* %2411, align 8
  %2413 = and i64 %2412, -4294967296
  %2414 = add i64 %2412, -1
  %2415 = inttoptr i64 %2414 to i32*
  %2416 = load atomic i32, i32* %2415 monotonic, align 4
  %2417 = zext i32 %2416 to i64
  %2418 = or i64 %2413, %2417
  %2419 = add i64 %2418, 19
  %2420 = inttoptr i64 %2419 to i32*
  %2421 = load i32, i32* %2420, align 4
  %2422 = zext i32 %2421 to i64
  %2423 = or i64 %2413, %2422
  %2424 = add i64 %2423, 91
  %2425 = inttoptr i64 %2424 to i32*
  %2426 = load atomic i32, i32* %2425 monotonic, align 4
  %2427 = zext i32 %2426 to i64
  %2428 = or i64 %2413, %2427
  %2429 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %102, align 8
  %2430 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2429, null
  br i1 %2430, label %2433, label %2431

2431:                                             ; preds = %2410
  %2432 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2429, i64 %2428) #7
  br label %2446

2433:                                             ; preds = %2410
  %2434 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %2435 = load i64*, i64** %2434, align 8
  %2436 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %2437 = load i64*, i64** %2436, align 8
  %2438 = icmp eq i64* %2435, %2437
  br i1 %2438, label %2439, label %2441

2439:                                             ; preds = %2433
  %2440 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %2441

2441:                                             ; preds = %2439, %2433
  %2442 = phi i64* [ %2440, %2439 ], [ %2435, %2433 ]
  %2443 = ptrtoint i64* %2442 to i64
  %2444 = add i64 %2443, 8
  %2445 = inttoptr i64 %2444 to i64*
  store i64* %2445, i64** %2434, align 8
  store i64 %2428, i64* %2442, align 8
  br label %2446

2446:                                             ; preds = %2441, %2431
  %2447 = phi i64* [ %2432, %2431 ], [ %2442, %2441 ]
  %2448 = icmp eq i64* %2394, %2447
  br i1 %2448, label %2459, label %2449

2449:                                             ; preds = %2446
  %2450 = icmp eq i64* %2394, null
  %2451 = icmp eq i64* %2447, null
  %2452 = or i1 %2450, %2451
  br i1 %2452, label %2689, label %2453

2453:                                             ; preds = %2449
  %2454 = load i64, i64* %2394, align 8
  %2455 = load i64, i64* %2447, align 8
  %2456 = trunc i64 %2454 to i32
  %2457 = trunc i64 %2455 to i32
  %2458 = icmp eq i32 %2456, %2457
  br i1 %2458, label %2459, label %2689

2459:                                             ; preds = %2453, %2446, %2382
  %2460 = phi i8 [ %2383, %2382 ], [ 1, %2446 ], [ 1, %2453 ]
  %2461 = phi i64 [ %2384, %2382 ], [ %2388, %2446 ], [ %2388, %2453 ]
  %2462 = and i64 %2461, 17179869184
  %2463 = icmp eq i64 %2462, 0
  br i1 %2463, label %2536, label %2464

2464:                                             ; preds = %2459
  %2465 = and i64 %2461, -17179869185
  %2466 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %2467 = bitcast %"class.v8::internal::Vector"* %78 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2467) #7
  %2468 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %78, i64 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0), i8** %2468, align 8
  %2469 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %78, i64 0, i32 1
  store i64 11, i64* %2469, align 8
  %2470 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %2466, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %78, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2467) #7
  %2471 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %2470) #7
  %2472 = load i64, i64* %2471, align 8
  %2473 = and i64 %2472, 1
  %2474 = icmp eq i64 %2473, 0
  br i1 %2474, label %2689, label %2475

2475:                                             ; preds = %2464
  %2476 = and i64 %2472, -4294967296
  %2477 = add i64 %2472, -1
  %2478 = inttoptr i64 %2477 to i32*
  %2479 = load atomic i32, i32* %2478 monotonic, align 4
  %2480 = zext i32 %2479 to i64
  %2481 = or i64 %2476, %2480
  %2482 = add i64 %2481, 7
  %2483 = inttoptr i64 %2482 to i16*
  %2484 = load atomic i16, i16* %2483 monotonic, align 2
  %2485 = add i16 %2484, -1059
  %2486 = icmp ult i16 %2485, 15
  br i1 %2486, label %2487, label %2689

2487:                                             ; preds = %2475
  %2488 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2489 = load i64, i64* %2488, align 8
  %2490 = and i64 %2489, -4294967296
  %2491 = add i64 %2489, -1
  %2492 = inttoptr i64 %2491 to i32*
  %2493 = load atomic i32, i32* %2492 monotonic, align 4
  %2494 = zext i32 %2493 to i64
  %2495 = or i64 %2490, %2494
  %2496 = add i64 %2495, 19
  %2497 = inttoptr i64 %2496 to i32*
  %2498 = load i32, i32* %2497, align 4
  %2499 = zext i32 %2498 to i64
  %2500 = or i64 %2490, %2499
  %2501 = add i64 %2500, 87
  %2502 = inttoptr i64 %2501 to i32*
  %2503 = load atomic i32, i32* %2502 monotonic, align 4
  %2504 = zext i32 %2503 to i64
  %2505 = or i64 %2490, %2504
  %2506 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %102, align 8
  %2507 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2506, null
  br i1 %2507, label %2510, label %2508

2508:                                             ; preds = %2487
  %2509 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2506, i64 %2505) #7
  br label %2523

2510:                                             ; preds = %2487
  %2511 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %2512 = load i64*, i64** %2511, align 8
  %2513 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %2514 = load i64*, i64** %2513, align 8
  %2515 = icmp eq i64* %2512, %2514
  br i1 %2515, label %2516, label %2518

2516:                                             ; preds = %2510
  %2517 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %2518

2518:                                             ; preds = %2516, %2510
  %2519 = phi i64* [ %2517, %2516 ], [ %2512, %2510 ]
  %2520 = ptrtoint i64* %2519 to i64
  %2521 = add i64 %2520, 8
  %2522 = inttoptr i64 %2521 to i64*
  store i64* %2522, i64** %2511, align 8
  store i64 %2505, i64* %2519, align 8
  br label %2523

2523:                                             ; preds = %2518, %2508
  %2524 = phi i64* [ %2509, %2508 ], [ %2519, %2518 ]
  %2525 = icmp eq i64* %2471, %2524
  br i1 %2525, label %2536, label %2526

2526:                                             ; preds = %2523
  %2527 = icmp eq i64* %2471, null
  %2528 = icmp eq i64* %2524, null
  %2529 = or i1 %2527, %2528
  br i1 %2529, label %2689, label %2530

2530:                                             ; preds = %2526
  %2531 = load i64, i64* %2471, align 8
  %2532 = load i64, i64* %2524, align 8
  %2533 = trunc i64 %2531 to i32
  %2534 = trunc i64 %2532 to i32
  %2535 = icmp eq i32 %2533, %2534
  br i1 %2535, label %2536, label %2689

2536:                                             ; preds = %2530, %2523, %2459
  %2537 = phi i8 [ %2460, %2459 ], [ 1, %2523 ], [ 1, %2530 ]
  %2538 = phi i64 [ %2461, %2459 ], [ %2465, %2523 ], [ %2465, %2530 ]
  %2539 = and i64 %2538, 34359738368
  %2540 = icmp eq i64 %2539, 0
  br i1 %2540, label %2613, label %2541

2541:                                             ; preds = %2536
  %2542 = and i64 %2538, -34359738369
  %2543 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %2544 = bitcast %"class.v8::internal::Vector"* %79 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2544) #7
  %2545 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %79, i64 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8** %2545, align 8
  %2546 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %79, i64 0, i32 1
  store i64 12, i64* %2546, align 8
  %2547 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %2543, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %79, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2544) #7
  %2548 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %2547) #7
  %2549 = load i64, i64* %2548, align 8
  %2550 = and i64 %2549, 1
  %2551 = icmp eq i64 %2550, 0
  br i1 %2551, label %2689, label %2552

2552:                                             ; preds = %2541
  %2553 = and i64 %2549, -4294967296
  %2554 = add i64 %2549, -1
  %2555 = inttoptr i64 %2554 to i32*
  %2556 = load atomic i32, i32* %2555 monotonic, align 4
  %2557 = zext i32 %2556 to i64
  %2558 = or i64 %2553, %2557
  %2559 = add i64 %2558, 7
  %2560 = inttoptr i64 %2559 to i16*
  %2561 = load atomic i16, i16* %2560 monotonic, align 2
  %2562 = add i16 %2561, -1059
  %2563 = icmp ult i16 %2562, 15
  br i1 %2563, label %2564, label %2689

2564:                                             ; preds = %2552
  %2565 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2566 = load i64, i64* %2565, align 8
  %2567 = and i64 %2566, -4294967296
  %2568 = add i64 %2566, -1
  %2569 = inttoptr i64 %2568 to i32*
  %2570 = load atomic i32, i32* %2569 monotonic, align 4
  %2571 = zext i32 %2570 to i64
  %2572 = or i64 %2567, %2571
  %2573 = add i64 %2572, 19
  %2574 = inttoptr i64 %2573 to i32*
  %2575 = load i32, i32* %2574, align 4
  %2576 = zext i32 %2575 to i64
  %2577 = or i64 %2567, %2576
  %2578 = add i64 %2577, 95
  %2579 = inttoptr i64 %2578 to i32*
  %2580 = load atomic i32, i32* %2579 monotonic, align 4
  %2581 = zext i32 %2580 to i64
  %2582 = or i64 %2567, %2581
  %2583 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %102, align 8
  %2584 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2583, null
  br i1 %2584, label %2587, label %2585

2585:                                             ; preds = %2564
  %2586 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2583, i64 %2582) #7
  br label %2600

2587:                                             ; preds = %2564
  %2588 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %2589 = load i64*, i64** %2588, align 8
  %2590 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %2591 = load i64*, i64** %2590, align 8
  %2592 = icmp eq i64* %2589, %2591
  br i1 %2592, label %2593, label %2595

2593:                                             ; preds = %2587
  %2594 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %2595

2595:                                             ; preds = %2593, %2587
  %2596 = phi i64* [ %2594, %2593 ], [ %2589, %2587 ]
  %2597 = ptrtoint i64* %2596 to i64
  %2598 = add i64 %2597, 8
  %2599 = inttoptr i64 %2598 to i64*
  store i64* %2599, i64** %2588, align 8
  store i64 %2582, i64* %2596, align 8
  br label %2600

2600:                                             ; preds = %2595, %2585
  %2601 = phi i64* [ %2586, %2585 ], [ %2596, %2595 ]
  %2602 = icmp eq i64* %2548, %2601
  br i1 %2602, label %2613, label %2603

2603:                                             ; preds = %2600
  %2604 = icmp eq i64* %2548, null
  %2605 = icmp eq i64* %2601, null
  %2606 = or i1 %2604, %2605
  br i1 %2606, label %2689, label %2607

2607:                                             ; preds = %2603
  %2608 = load i64, i64* %2548, align 8
  %2609 = load i64, i64* %2601, align 8
  %2610 = trunc i64 %2608 to i32
  %2611 = trunc i64 %2609 to i32
  %2612 = icmp eq i32 %2610, %2611
  br i1 %2612, label %2613, label %2689

2613:                                             ; preds = %2607, %2600, %2536
  %2614 = phi i8 [ %2537, %2536 ], [ 1, %2600 ], [ 1, %2607 ]
  %2615 = phi i64 [ %2538, %2536 ], [ %2542, %2600 ], [ %2542, %2607 ]
  %2616 = and i64 %2615, 68719476736
  %2617 = icmp eq i64 %2616, 0
  br i1 %2617, label %2710, label %2618

2618:                                             ; preds = %2613
  %2619 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %2620 = bitcast %"class.v8::internal::Vector"* %80 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2620) #7
  %2621 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %80, i64 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i64 0, i64 0), i8** %2621, align 8
  %2622 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %80, i64 0, i32 1
  store i64 12, i64* %2622, align 8
  %2623 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"* %2619, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %80, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2620) #7
  %2624 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* nonnull %3, i64* %2623) #7
  %2625 = load i64, i64* %2624, align 8
  %2626 = and i64 %2625, 1
  %2627 = icmp eq i64 %2626, 0
  br i1 %2627, label %2689, label %2628

2628:                                             ; preds = %2618
  %2629 = and i64 %2625, -4294967296
  %2630 = add i64 %2625, -1
  %2631 = inttoptr i64 %2630 to i32*
  %2632 = load atomic i32, i32* %2631 monotonic, align 4
  %2633 = zext i32 %2632 to i64
  %2634 = or i64 %2629, %2633
  %2635 = add i64 %2634, 7
  %2636 = inttoptr i64 %2635 to i16*
  %2637 = load atomic i16, i16* %2636 monotonic, align 2
  %2638 = add i16 %2637, -1059
  %2639 = icmp ult i16 %2638, 15
  br i1 %2639, label %2640, label %2689

2640:                                             ; preds = %2628
  %2641 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2642 = load i64, i64* %2641, align 8
  %2643 = and i64 %2642, -4294967296
  %2644 = add i64 %2642, -1
  %2645 = inttoptr i64 %2644 to i32*
  %2646 = load atomic i32, i32* %2645 monotonic, align 4
  %2647 = zext i32 %2646 to i64
  %2648 = or i64 %2643, %2647
  %2649 = add i64 %2648, 19
  %2650 = inttoptr i64 %2649 to i32*
  %2651 = load i32, i32* %2650, align 4
  %2652 = zext i32 %2651 to i64
  %2653 = or i64 %2643, %2652
  %2654 = add i64 %2653, 99
  %2655 = inttoptr i64 %2654 to i32*
  %2656 = load atomic i32, i32* %2655 monotonic, align 4
  %2657 = zext i32 %2656 to i64
  %2658 = or i64 %2643, %2657
  %2659 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %102, align 8
  %2660 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2659, null
  br i1 %2660, label %2663, label %2661

2661:                                             ; preds = %2640
  %2662 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2659, i64 %2658) #7
  br label %2676

2663:                                             ; preds = %2640
  %2664 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %2665 = load i64*, i64** %2664, align 8
  %2666 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %2667 = load i64*, i64** %2666, align 8
  %2668 = icmp eq i64* %2665, %2667
  br i1 %2668, label %2669, label %2671

2669:                                             ; preds = %2663
  %2670 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %2671

2671:                                             ; preds = %2669, %2663
  %2672 = phi i64* [ %2670, %2669 ], [ %2665, %2663 ]
  %2673 = ptrtoint i64* %2672 to i64
  %2674 = add i64 %2673, 8
  %2675 = inttoptr i64 %2674 to i64*
  store i64* %2675, i64** %2664, align 8
  store i64 %2658, i64* %2672, align 8
  br label %2676

2676:                                             ; preds = %2671, %2661
  %2677 = phi i64* [ %2662, %2661 ], [ %2672, %2671 ]
  %2678 = icmp eq i64* %2624, %2677
  br i1 %2678, label %2712, label %2679

2679:                                             ; preds = %2676
  %2680 = icmp eq i64* %2624, null
  %2681 = icmp eq i64* %2677, null
  %2682 = or i1 %2680, %2681
  br i1 %2682, label %2689, label %2683

2683:                                             ; preds = %2679
  %2684 = load i64, i64* %2624, align 8
  %2685 = load i64, i64* %2677, align 8
  %2686 = trunc i64 %2684 to i32
  %2687 = trunc i64 %2685 to i32
  %2688 = icmp eq i32 %2686, %2687
  br i1 %2688, label %2712, label %2689

2689:                                             ; preds = %2618, %2628, %2679, %2683, %283, %302, %1626, %1645, %1687, %1706, %1748, %1767, %1809, %1828, %1870, %1889, %1931, %1950, %1992, %2011, %2053, %2072, %328, %317, %310, %372, %384, %395, %367, %438, %450, %461, %433, %504, %516, %527, %499, %570, %582, %593, %565, %636, %648, %659, %631, %702, %714, %725, %697, %768, %780, %791, %763, %834, %846, %857, %829, %900, %912, %923, %895, %966, %978, %989, %961, %1032, %1044, %1055, %1027, %1098, %1110, %1121, %1093, %1164, %1176, %1187, %1159, %1230, %1242, %1253, %1225, %1296, %1308, %1319, %1291, %1362, %1374, %1385, %1357, %1428, %1440, %1451, %1423, %1494, %1506, %1517, %1489, %1560, %1572, %1583, %1555, %2090, %2145, %2079, %2141, %2167, %2222, %2156, %2218, %2244, %2299, %2233, %2295, %2321, %2376, %2310, %2372, %2398, %2453, %2387, %2449, %2475, %2530, %2464, %2526, %2552, %2607, %2541, %2603
  %2690 = load i8, i8* @_ZN2v88internal26FLAG_suppress_asm_messagesE, align 1, !range !4
  %2691 = icmp eq i8 %2690, 0
  br i1 %2691, label %2692, label %3057

2692:                                             ; preds = %2689
  %2693 = bitcast %"class.v8::internal::Vector.1366"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2693)
  %2694 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %17, i64 0, i32 0
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i8** %2694, align 8
  %2695 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %17, i64 0, i32 1
  store i64 24, i64* %2695, align 8
  %2696 = load i64, i64* %164, align 8
  %2697 = and i64 %2696, -262144
  %2698 = or i64 %2697, 16
  %2699 = inttoptr i64 %2698 to i64*
  %2700 = load i64, i64* %2699, align 16
  %2701 = add i64 %2700, -41416
  %2702 = inttoptr i64 %2701 to %"class.v8::internal::Isolate"*
  %2703 = bitcast %"class.v8::internal::MessageLocation"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2703) #7
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %18, i64* %164, i32 %172, i32 %172) #7
  %2704 = inttoptr i64 %2701 to %"class.v8::internal::Factory"*
  %2705 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %2704, %"class.v8::internal::Vector.1366"* nonnull dereferenceable(16) %17) #7
  %2706 = call i64* @_ZN2v88internal14MessageHandler17MakeMessageObjectEPNS0_7IsolateENS0_15MessageTemplateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS8_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %2702, i32 379, %"class.v8::internal::MessageLocation"* nonnull %18, i64* %2705, i64* null) #7
  %2707 = load i64, i64* %2706, align 8
  %2708 = add i64 %2707, 43
  %2709 = inttoptr i64 %2708 to i32*
  store atomic volatile i32 32, i32* %2709 monotonic, align 4
  call void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"* %2702, %"class.v8::internal::MessageLocation"* nonnull %18, i64* %2706) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2703) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2693)
  br label %3057

2710:                                             ; preds = %2613
  %2711 = icmp eq i8 %2614, 0
  br i1 %2711, label %2811, label %2712

2712:                                             ; preds = %2683, %2676, %2710
  %2713 = icmp eq i64* %5, null
  br i1 %2713, label %2714, label %2735

2714:                                             ; preds = %2712
  %2715 = load i8, i8* @_ZN2v88internal26FLAG_suppress_asm_messagesE, align 1, !range !4
  %2716 = icmp eq i8 %2715, 0
  br i1 %2716, label %2717, label %3057

2717:                                             ; preds = %2714
  %2718 = bitcast %"class.v8::internal::Vector.1366"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2718)
  %2719 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %15, i64 0, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i8** %2719, align 8
  %2720 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %15, i64 0, i32 1
  store i64 20, i64* %2720, align 8
  %2721 = load i64, i64* %164, align 8
  %2722 = and i64 %2721, -262144
  %2723 = or i64 %2722, 16
  %2724 = inttoptr i64 %2723 to i64*
  %2725 = load i64, i64* %2724, align 16
  %2726 = add i64 %2725, -41416
  %2727 = inttoptr i64 %2726 to %"class.v8::internal::Isolate"*
  %2728 = bitcast %"class.v8::internal::MessageLocation"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2728) #7
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %16, i64* %164, i32 %172, i32 %172) #7
  %2729 = inttoptr i64 %2726 to %"class.v8::internal::Factory"*
  %2730 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %2729, %"class.v8::internal::Vector.1366"* nonnull dereferenceable(16) %15) #7
  %2731 = call i64* @_ZN2v88internal14MessageHandler17MakeMessageObjectEPNS0_7IsolateENS0_15MessageTemplateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS8_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %2727, i32 379, %"class.v8::internal::MessageLocation"* nonnull %16, i64* %2730, i64* null) #7
  %2732 = load i64, i64* %2731, align 8
  %2733 = add i64 %2732, 43
  %2734 = inttoptr i64 %2733 to i32*
  store atomic volatile i32 32, i32* %2734 monotonic, align 4
  call void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"* %2727, %"class.v8::internal::MessageLocation"* nonnull %16, i64* %2731) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2728) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2718)
  br label %3057

2735:                                             ; preds = %2712
  %2736 = load i64, i64* %5, align 8
  %2737 = add i64 %2736, 43
  %2738 = inttoptr i64 %2737 to i32*
  %2739 = load atomic i32, i32* %2738 monotonic, align 4
  %2740 = and i32 %2739, 16
  %2741 = icmp eq i32 %2740, 0
  br i1 %2741, label %2763, label %2742

2742:                                             ; preds = %2735
  %2743 = load i8, i8* @_ZN2v88internal26FLAG_suppress_asm_messagesE, align 1, !range !4
  %2744 = icmp eq i8 %2743, 0
  br i1 %2744, label %2745, label %3057

2745:                                             ; preds = %2742
  %2746 = bitcast %"class.v8::internal::Vector.1366"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2746)
  %2747 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %13, i64 0, i32 0
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0), i8** %2747, align 8
  %2748 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %13, i64 0, i32 1
  store i64 36, i64* %2748, align 8
  %2749 = load i64, i64* %164, align 8
  %2750 = and i64 %2749, -262144
  %2751 = or i64 %2750, 16
  %2752 = inttoptr i64 %2751 to i64*
  %2753 = load i64, i64* %2752, align 16
  %2754 = add i64 %2753, -41416
  %2755 = inttoptr i64 %2754 to %"class.v8::internal::Isolate"*
  %2756 = bitcast %"class.v8::internal::MessageLocation"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2756) #7
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %14, i64* %164, i32 %172, i32 %172) #7
  %2757 = inttoptr i64 %2754 to %"class.v8::internal::Factory"*
  %2758 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %2757, %"class.v8::internal::Vector.1366"* nonnull dereferenceable(16) %13) #7
  %2759 = call i64* @_ZN2v88internal14MessageHandler17MakeMessageObjectEPNS0_7IsolateENS0_15MessageTemplateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS8_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %2755, i32 379, %"class.v8::internal::MessageLocation"* nonnull %14, i64* %2758, i64* null) #7
  %2760 = load i64, i64* %2759, align 8
  %2761 = add i64 %2760, 43
  %2762 = inttoptr i64 %2761 to i32*
  store atomic volatile i32 32, i32* %2762 monotonic, align 4
  call void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"* %2755, %"class.v8::internal::MessageLocation"* nonnull %14, i64* %2759) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2756) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2746)
  br label %3057

2763:                                             ; preds = %2735
  %2764 = load atomic i32, i32* %2738 monotonic, align 4
  %2765 = or i32 %2764, 8
  store atomic volatile i32 %2765, i32* %2738 monotonic, align 4
  %2766 = load i64, i64* %5, align 8
  %2767 = add i64 %2766, 43
  %2768 = inttoptr i64 %2767 to i32*
  %2769 = load atomic i32, i32* %2768 monotonic, align 4
  %2770 = and i32 %2769, -3
  store atomic volatile i32 %2770, i32* %2768 monotonic, align 4
  %2771 = load i64, i64* %5, align 8
  %2772 = add i64 %2771, 11
  %2773 = inttoptr i64 %2772 to i64*
  %2774 = load i64, i64* %2773, align 1
  %2775 = icmp ult i64 %2774, 4096
  br i1 %2775, label %2790, label %2776

2776:                                             ; preds = %2763
  %2777 = call i32 @_ZN2v88internal4wasm13max_mem_pagesEv() #7
  %2778 = zext i32 %2777 to i64
  %2779 = shl nuw nsw i64 %2778, 16
  %2780 = icmp ult i64 %2779, %2774
  br i1 %2780, label %2790, label %2781

2781:                                             ; preds = %2776
  %2782 = icmp ult i64 %2774, 16777216
  br i1 %2782, label %2783, label %2787

2783:                                             ; preds = %2781
  %2784 = trunc i64 %2774 to i32
  %2785 = call i32 @llvm.ctpop.i32(i32 %2784) #7, !range !10
  %2786 = icmp eq i32 %2785, 1
  br i1 %2786, label %2811, label %2790

2787:                                             ; preds = %2781
  %2788 = and i64 %2774, 16777215
  %2789 = icmp eq i64 %2788, 0
  br i1 %2789, label %2811, label %2790

2790:                                             ; preds = %2776, %2763, %2783, %2787
  %2791 = load i8, i8* @_ZN2v88internal26FLAG_suppress_asm_messagesE, align 1, !range !4
  %2792 = icmp eq i8 %2791, 0
  br i1 %2792, label %2793, label %3057

2793:                                             ; preds = %2790
  %2794 = bitcast %"class.v8::internal::Vector.1366"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2794)
  %2795 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %11, i64 0, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8** %2795, align 8
  %2796 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %11, i64 0, i32 1
  store i64 17, i64* %2796, align 8
  %2797 = load i64, i64* %164, align 8
  %2798 = and i64 %2797, -262144
  %2799 = or i64 %2798, 16
  %2800 = inttoptr i64 %2799 to i64*
  %2801 = load i64, i64* %2800, align 16
  %2802 = add i64 %2801, -41416
  %2803 = inttoptr i64 %2802 to %"class.v8::internal::Isolate"*
  %2804 = bitcast %"class.v8::internal::MessageLocation"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2804) #7
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %12, i64* %164, i32 %172, i32 %172) #7
  %2805 = inttoptr i64 %2802 to %"class.v8::internal::Factory"*
  %2806 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %2805, %"class.v8::internal::Vector.1366"* nonnull dereferenceable(16) %11) #7
  %2807 = call i64* @_ZN2v88internal14MessageHandler17MakeMessageObjectEPNS0_7IsolateENS0_15MessageTemplateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS8_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %2803, i32 379, %"class.v8::internal::MessageLocation"* nonnull %12, i64* %2806, i64* null) #7
  %2808 = load i64, i64* %2807, align 8
  %2809 = add i64 %2808, 43
  %2810 = inttoptr i64 %2809 to i32*
  store atomic volatile i32 32, i32* %2810 monotonic, align 4
  call void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"* %2803, %"class.v8::internal::MessageLocation"* nonnull %12, i64* %2807) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2804) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2794)
  br label %3057

2811:                                             ; preds = %244, %2710, %2783, %2787
  %2812 = phi i64* [ %5, %2787 ], [ %5, %2783 ], [ null, %2710 ], [ null, %244 ]
  %2813 = bitcast %"class.v8::internal::wasm::ErrorThrower"* %92 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %2813) #7
  %2814 = getelementptr inbounds %"class.v8::internal::wasm::ErrorThrower", %"class.v8::internal::wasm::ErrorThrower"* %92, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %2814, align 8
  %2815 = getelementptr inbounds %"class.v8::internal::wasm::ErrorThrower", %"class.v8::internal::wasm::ErrorThrower"* %92, i64 0, i32 1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i8** %2815, align 8
  %2816 = getelementptr inbounds %"class.v8::internal::wasm::ErrorThrower", %"class.v8::internal::wasm::ErrorThrower"* %92, i64 0, i32 2
  store i32 0, i32* %2816, align 8
  %2817 = getelementptr inbounds %"class.v8::internal::wasm::ErrorThrower", %"class.v8::internal::wasm::ErrorThrower"* %92, i64 0, i32 3
  %2818 = bitcast %"class.std::__1::basic_string"* %2817 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2818, i8 0, i64 24, i1 false) #7
  %2819 = call i64* @_ZN2v88internal4wasm10WasmEngine15SyncInstantiateEPNS0_7IsolateEPNS1_12ErrorThrowerENS0_6HandleINS0_16WasmModuleObjectEEENS0_11MaybeHandleINS0_10JSReceiverEEENSA_INS0_13JSArrayBufferEEE(%"class.v8::internal::wasm::WasmEngine"* %166, %"class.v8::internal::Isolate"* %0, %"class.v8::internal::wasm::ErrorThrower"* nonnull %92, i64* %167, i64* %4, i64* %2812) #7
  %2820 = icmp eq i64* %2819, null
  br i1 %2820, label %2821, label %2899

2821:                                             ; preds = %2811
  %2822 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %2823 = load i64, i64* %2822, align 8
  %2824 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %2825 = load i64, i64* %2824, align 8
  %2826 = trunc i64 %2825 to i32
  %2827 = trunc i64 %2823 to i32
  %2828 = icmp eq i32 %2826, %2827
  br i1 %2828, label %2830, label %2829

2829:                                             ; preds = %2821
  store i64 %2823, i64* %2824, align 8
  br label %2830

2830:                                             ; preds = %2821, %2829
  %2831 = load i32, i32* %2816, align 8
  %2832 = icmp eq i32 %2831, 0
  br i1 %2832, label %2877, label %2833

2833:                                             ; preds = %2830
  %2834 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 100, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %2835 = icmp eq i8* %2834, null
  br i1 %2835, label %2836, label %2845

2836:                                             ; preds = %2833
  %2837 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #7
  %2838 = bitcast %"class.v8::Platform"* %2837 to void (%"class.v8::Platform"*)***
  %2839 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %2838, align 8
  %2840 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %2839, i64 3
  %2841 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %2840, align 8
  call void %2841(%"class.v8::Platform"* %2837) #7
  %2842 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 100, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %2843 = icmp eq i8* %2842, null
  br i1 %2843, label %2844, label %2845

2844:                                             ; preds = %2836
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i64 0, i64 0)) #12
  unreachable

2845:                                             ; preds = %2833, %2836
  %2846 = phi i8* [ %2842, %2836 ], [ %2834, %2833 ]
  %2847 = bitcast %"class.std::__1::basic_string"* %2817 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2848 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2847, i64 0, i32 1, i32 0
  %2849 = load i8, i8* %2848, align 1
  %2850 = icmp slt i8 %2849, 0
  %2851 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2817, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2852 = load i8*, i8** %2851, align 8
  %2853 = select i1 %2850, i8* %2852, i8* %2818
  %2854 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* nonnull %2846, i64 100, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i8* %2853) #7
  %2855 = load i8, i8* @_ZN2v88internal26FLAG_suppress_asm_messagesE, align 1, !range !4
  %2856 = icmp eq i8 %2855, 0
  br i1 %2856, label %2857, label %2876

2857:                                             ; preds = %2845
  %2858 = call i64 @strlen(i8* nonnull %2846) #15
  %2859 = bitcast %"class.v8::internal::Vector.1366"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2859)
  %2860 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %9, i64 0, i32 0
  store i8* %2846, i8** %2860, align 8
  %2861 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %9, i64 0, i32 1
  store i64 %2858, i64* %2861, align 8
  %2862 = load i64, i64* %164, align 8
  %2863 = and i64 %2862, -262144
  %2864 = or i64 %2863, 16
  %2865 = inttoptr i64 %2864 to i64*
  %2866 = load i64, i64* %2865, align 16
  %2867 = add i64 %2866, -41416
  %2868 = inttoptr i64 %2867 to %"class.v8::internal::Isolate"*
  %2869 = bitcast %"class.v8::internal::MessageLocation"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2869) #7
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %10, i64* %164, i32 %172, i32 %172) #7
  %2870 = inttoptr i64 %2867 to %"class.v8::internal::Factory"*
  %2871 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %2870, %"class.v8::internal::Vector.1366"* nonnull dereferenceable(16) %9) #7
  %2872 = call i64* @_ZN2v88internal14MessageHandler17MakeMessageObjectEPNS0_7IsolateENS0_15MessageTemplateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS8_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %2868, i32 379, %"class.v8::internal::MessageLocation"* nonnull %10, i64* %2871, i64* null) #7
  %2873 = load i64, i64* %2872, align 8
  %2874 = add i64 %2873, 43
  %2875 = inttoptr i64 %2874 to i32*
  store atomic volatile i32 32, i32* %2875 monotonic, align 4
  call void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"* %2868, %"class.v8::internal::MessageLocation"* nonnull %10, i64* %2872) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2869) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2859)
  br label %2876

2876:                                             ; preds = %2845, %2857
  call void @_ZdaPv(i8* nonnull %2846) #13
  br label %2898

2877:                                             ; preds = %2830
  %2878 = load i8, i8* @_ZN2v88internal26FLAG_suppress_asm_messagesE, align 1, !range !4
  %2879 = icmp eq i8 %2878, 0
  br i1 %2879, label %2880, label %2898

2880:                                             ; preds = %2877
  %2881 = bitcast %"class.v8::internal::Vector.1366"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2881)
  %2882 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %7, i64 0, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i8** %2882, align 8
  %2883 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %7, i64 0, i32 1
  store i64 21, i64* %2883, align 8
  %2884 = load i64, i64* %164, align 8
  %2885 = and i64 %2884, -262144
  %2886 = or i64 %2885, 16
  %2887 = inttoptr i64 %2886 to i64*
  %2888 = load i64, i64* %2887, align 16
  %2889 = add i64 %2888, -41416
  %2890 = inttoptr i64 %2889 to %"class.v8::internal::Isolate"*
  %2891 = bitcast %"class.v8::internal::MessageLocation"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2891) #7
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %8, i64* %164, i32 %172, i32 %172) #7
  %2892 = inttoptr i64 %2889 to %"class.v8::internal::Factory"*
  %2893 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %2892, %"class.v8::internal::Vector.1366"* nonnull dereferenceable(16) %7) #7
  %2894 = call i64* @_ZN2v88internal14MessageHandler17MakeMessageObjectEPNS0_7IsolateENS0_15MessageTemplateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS8_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %2890, i32 379, %"class.v8::internal::MessageLocation"* nonnull %8, i64* %2893, i64* null) #7
  %2895 = load i64, i64* %2894, align 8
  %2896 = add i64 %2895, 43
  %2897 = inttoptr i64 %2896 to i32*
  store atomic volatile i32 32, i32* %2897 monotonic, align 4
  call void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"* %2890, %"class.v8::internal::MessageLocation"* nonnull %8, i64* %2894) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2891) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2881)
  br label %2898

2898:                                             ; preds = %2880, %2877, %2876
  call void @_ZN2v88internal4wasm12ErrorThrower5ResetEv(%"class.v8::internal::wasm::ErrorThrower"* nonnull %92) #7
  br label %3055

2899:                                             ; preds = %2811
  %2900 = bitcast %"class.v8::base::TimeDelta"* %93 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2900) #7
  %2901 = call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #7
  %2902 = sub nsw i64 %2901, %94
  %2903 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %93, i64 0, i32 0
  store i64 %2902, i64* %2903, align 8
  %2904 = call double @_ZNK2v84base9TimeDelta15InMillisecondsFEv(%"class.v8::base::TimeDelta"* nonnull %93) #7
  %2905 = load i8, i8* @_ZN2v88internal26FLAG_suppress_asm_messagesE, align 1, !range !4
  %2906 = icmp ne i8 %2905, 0
  %2907 = load i8, i8* @_ZN2v88internal19FLAG_trace_asm_timeE, align 1
  %2908 = icmp eq i8 %2907, 0
  %2909 = or i1 %2906, %2908
  br i1 %2909, label %2939, label %2910

2910:                                             ; preds = %2899
  %2911 = bitcast %"class.v8::internal::EmbeddedVector.1572"* %87 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %2911) #7
  %2912 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1572", %"class.v8::internal::EmbeddedVector.1572"* %87, i64 0, i32 1, i64 0
  %2913 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1572", %"class.v8::internal::EmbeddedVector.1572"* %87, i64 0, i32 0, i32 0
  store i8* %2912, i8** %2913, align 8
  %2914 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1572", %"class.v8::internal::EmbeddedVector.1572"* %87, i64 0, i32 0, i32 1
  store i64 50, i64* %2914, align 8
  %2915 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %2912, i64 50, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i64 0, i64 0), double %2904) #7
  %2916 = icmp eq i32 %2915, -1
  br i1 %2916, label %2917, label %2918, !prof !2

2917:                                             ; preds = %2910
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0)) #12
  unreachable

2918:                                             ; preds = %2910
  %2919 = sext i32 %2915 to i64
  store i64 %2919, i64* %2914, align 8
  %2920 = bitcast %"class.v8::internal::EmbeddedVector.1572"* %87 to i64*
  %2921 = load i64, i64* %2920, align 8
  %2922 = bitcast %"class.v8::internal::Vector.1366"* %85 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2922) #7
  %2923 = bitcast %"class.v8::internal::Vector.1366"* %85 to i64*
  store i64 %2921, i64* %2923, align 8
  %2924 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %85, i64 0, i32 1
  store i64 %2919, i64* %2924, align 8
  %2925 = load i64, i64* %164, align 8
  %2926 = and i64 %2925, -262144
  %2927 = or i64 %2926, 16
  %2928 = inttoptr i64 %2927 to i64*
  %2929 = load i64, i64* %2928, align 16
  %2930 = add i64 %2929, -41416
  %2931 = inttoptr i64 %2930 to %"class.v8::internal::Isolate"*
  %2932 = bitcast %"class.v8::internal::MessageLocation"* %86 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2932) #7
  call void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"* nonnull %86, i64* %164, i32 %172, i32 %172) #7
  %2933 = inttoptr i64 %2930 to %"class.v8::internal::Factory"*
  %2934 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %2933, %"class.v8::internal::Vector.1366"* nonnull dereferenceable(16) %85) #7
  %2935 = call i64* @_ZN2v88internal14MessageHandler17MakeMessageObjectEPNS0_7IsolateENS0_15MessageTemplateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS8_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"* %2931, i32 378, %"class.v8::internal::MessageLocation"* nonnull %86, i64* %2934, i64* null) #7
  %2936 = load i64, i64* %2935, align 8
  %2937 = add i64 %2936, 43
  %2938 = inttoptr i64 %2937 to i32*
  store atomic volatile i32 8, i32* %2938 monotonic, align 4
  call void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"* %2931, %"class.v8::internal::MessageLocation"* nonnull %86, i64* %2935) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2932) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2922) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %2911) #7
  br label %2939

2939:                                             ; preds = %2899, %2918
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2900) #7
  %2940 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %2941 = bitcast %"class.v8::internal::Vector.1366"* %88 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2941) #7
  %2942 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %88, i64 0, i32 0
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8** %2942, align 8
  %2943 = getelementptr inbounds %"class.v8::internal::Vector.1366", %"class.v8::internal::Vector.1366"* %88, i64 0, i32 1
  store i64 19, i64* %2943, align 8
  %2944 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %2940, %"class.v8::internal::Vector.1366"* nonnull dereferenceable(16) %88) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2941) #7
  %2945 = bitcast %"class.v8::internal::LookupIterator"* %89 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %2945) #7
  %2946 = ptrtoint i64* %2819 to i64
  %2947 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %89, i64 0, i32 0
  %2948 = icmp eq i64* %2944, null
  br i1 %2948, label %2949, label %2953

2949:                                             ; preds = %2939
  %2950 = load i64, i64* null, align 536870912
  %2951 = add i64 %2950, -1
  %2952 = inttoptr i64 %2951 to i32*
  br label %2974

2953:                                             ; preds = %2939
  %2954 = load i64, i64* %2944, align 8
  %2955 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %2956 = load i64, i64* %2955, align 8
  %2957 = add i64 %2954, -1
  %2958 = inttoptr i64 %2957 to i32*
  %2959 = load atomic i32, i32* %2958 monotonic, align 4
  %2960 = and i64 %2956, 4294967295
  %2961 = icmp eq i64 %2960, 0
  call void @llvm.assume(i1 %2961) #7
  %2962 = zext i32 %2959 to i64
  %2963 = or i64 %2956, %2962
  %2964 = add i64 %2963, 7
  %2965 = inttoptr i64 %2964 to i16*
  %2966 = load atomic i16, i16* %2965 monotonic, align 2
  %2967 = icmp eq i16 %2966, 64
  br i1 %2967, label %2968, label %2974

2968:                                             ; preds = %2953
  %2969 = add i64 %2954, 7
  %2970 = inttoptr i64 %2969 to i32*
  %2971 = load i32, i32* %2970, align 4
  %2972 = and i32 %2971, 1
  %2973 = icmp eq i32 %2972, 0
  br i1 %2973, label %2974, label %2977

2974:                                             ; preds = %2968, %2953, %2949
  %2975 = phi i32* [ %2952, %2949 ], [ %2958, %2968 ], [ %2958, %2953 ]
  %2976 = phi i64 [ %2950, %2949 ], [ %2954, %2968 ], [ %2954, %2953 ]
  br label %2977

2977:                                             ; preds = %2974, %2968
  %2978 = phi i32* [ %2975, %2974 ], [ %2958, %2968 ]
  %2979 = phi i64 [ %2976, %2974 ], [ %2954, %2968 ]
  %2980 = phi i32 [ 3, %2974 ], [ 0, %2968 ]
  store i32 %2980, i32* %2947, align 8
  %2981 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %89, i64 0, i32 1
  store i32 4, i32* %2981, align 4
  %2982 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %89, i64 0, i32 2
  store i8 0, i8* %2982, align 8
  %2983 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %89, i64 0, i32 3
  store i32 0, i32* %2983, align 4
  %2984 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %89, i64 0, i32 4, i32 0
  store i32 0, i32* %2984, align 8
  %2985 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %89, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %2985, align 8
  %2986 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %89, i64 0, i32 6, i32 0, i32 0
  store i64* %2944, i64** %2986, align 8
  %2987 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %89, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %2987, align 8
  %2988 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %89, i64 0, i32 8, i32 0, i32 0
  store i64* %2819, i64** %2988, align 8
  %2989 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %89, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %2989, align 8
  %2990 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %89, i64 0, i32 10
  %2991 = bitcast %"class.v8::internal::Handle.1547"* %2990 to i64*
  store i64 %2946, i64* %2991, align 8
  %2992 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %89, i64 0, i32 11
  %2993 = bitcast i64* %2992 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2993, i8 -1, i64 16, i1 false) #7
  %2994 = and i64 %2979, -4294967296
  %2995 = load atomic i32, i32* %2978 monotonic, align 4
  %2996 = zext i32 %2995 to i64
  %2997 = or i64 %2994, %2996
  %2998 = add i64 %2997, 7
  %2999 = inttoptr i64 %2998 to i16*
  %3000 = load atomic i16, i16* %2999 monotonic, align 2
  %3001 = and i16 %3000, -32
  %3002 = icmp eq i16 %3001, 32
  br i1 %3002, label %3003, label %3007

3003:                                             ; preds = %2977
  %3004 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3005 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %3004, align 8
  %3006 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %3005, %"class.v8::internal::Isolate"* %0, i64* %2944) #7
  br label %3007

3007:                                             ; preds = %3003, %2977
  %3008 = phi i64* [ %3006, %3003 ], [ %2944, %2977 ]
  store i64* %3008, i64** %2986, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %89) #7
  %3009 = load i32, i32* %2981, align 4
  %3010 = icmp eq i32 %3009, 4
  br i1 %3010, label %3011, label %3016

3011:                                             ; preds = %3007
  %3012 = bitcast %"class.v8::internal::Isolate"** %2985 to %"class.v8::internal::Factory"**
  %3013 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %3012, align 8
  %3014 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %3013, i64 160
  %3015 = bitcast %"class.v8::internal::Factory"* %3014 to i64*
  br label %3018

3016:                                             ; preds = %3007
  %3017 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %89, i1 zeroext false) #7
  br label %3018

3018:                                             ; preds = %3011, %3016
  %3019 = phi i64* [ %3017, %3016 ], [ %3015, %3011 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %2945) #7
  %3020 = icmp eq i64* %3019, null
  br i1 %3020, label %3029, label %3021

3021:                                             ; preds = %3018
  %3022 = ptrtoint i64* %3019 to i64
  %3023 = load i64, i64* %3019, align 8
  %3024 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %3025 = load i64, i64* %3024, align 8
  %3026 = trunc i64 %3023 to i32
  %3027 = trunc i64 %3025 to i32
  %3028 = icmp eq i32 %3026, %3027
  br i1 %3028, label %3029, label %3055

3029:                                             ; preds = %3018, %3021
  %3030 = load i64, i64* %2819, align 8
  %3031 = and i64 %3030, -4294967296
  %3032 = add i64 %3030, 115
  %3033 = inttoptr i64 %3032 to i32*
  %3034 = load i32, i32* %3033, align 4
  %3035 = zext i32 %3034 to i64
  %3036 = or i64 %3031, %3035
  %3037 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %102, align 8
  %3038 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %3037, null
  br i1 %3038, label %3042, label %3039

3039:                                             ; preds = %3029
  %3040 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %3037, i64 %3036) #7
  %3041 = ptrtoint i64* %3040 to i64
  br label %3055

3042:                                             ; preds = %3029
  %3043 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %3044 = load i64*, i64** %3043, align 8
  %3045 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %3046 = load i64*, i64** %3045, align 8
  %3047 = icmp eq i64* %3044, %3046
  br i1 %3047, label %3048, label %3050

3048:                                             ; preds = %3042
  %3049 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %3050

3050:                                             ; preds = %3048, %3042
  %3051 = phi i64* [ %3049, %3048 ], [ %3044, %3042 ]
  %3052 = ptrtoint i64* %3051 to i64
  %3053 = add i64 %3052, 8
  %3054 = inttoptr i64 %3053 to i64*
  store i64* %3054, i64** %3043, align 8
  store i64 %3036, i64* %3051, align 8
  br label %3055

3055:                                             ; preds = %3050, %3039, %3021, %2898
  %3056 = phi i64 [ 0, %2898 ], [ %3022, %3021 ], [ %3041, %3039 ], [ %3052, %3050 ]
  call void @_ZN2v88internal4wasm12ErrorThrowerD1Ev(%"class.v8::internal::wasm::ErrorThrower"* nonnull %92) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %2813) #7
  br label %3057

3057:                                             ; preds = %3055, %252, %255, %2689, %2692, %2714, %2717, %2742, %2745, %2790, %2793, %226, %223
  %3058 = phi i64 [ 0, %223 ], [ 0, %226 ], [ %3056, %3055 ], [ 0, %252 ], [ 0, %255 ], [ 0, %2689 ], [ 0, %2692 ], [ 0, %2714 ], [ 0, %2717 ], [ 0, %2742 ], [ 0, %2745 ], [ 0, %2790 ], [ 0, %2793 ]
  %3059 = inttoptr i64 %3058 to i64*
  ret i64* %3059
}

declare i64* @_ZN2v88internal4wasm10WasmEngine23FinalizeTranslatedAsmJsEPNS0_7IsolateENS0_6HandleINS0_11AsmWasmDataEEENS5_INS0_6ScriptEEE(%"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare zeroext i8 @_ZNK2v88internal9ScopeInfo13function_kindEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64* @_ZN2v88internal4wasm10WasmEngine15SyncInstantiateEPNS0_7IsolateEPNS1_12ErrorThrowerENS0_6HandleINS0_16WasmModuleObjectEEENS0_11MaybeHandleINS0_10JSReceiverEEENSA_INS0_13JSArrayBufferEEE(%"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::wasm::ErrorThrower"*, i64*, i64*, i64*) local_unnamed_addr #2

declare i32 @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8*, i64, i8*, ...) local_unnamed_addr #2

declare void @_ZN2v88internal4wasm12ErrorThrower5ResetEv(%"class.v8::internal::wasm::ErrorThrower"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AsmJsCompilationJobD2Ev(%"class.v8::internal::AsmJsCompilationJob"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal19AsmJsCompilationJobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* %11) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19AsmJsCompilationJobD0Ev(%"class.v8::internal::AsmJsCompilationJob"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal19AsmJsCompilationJobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.v8::internal::AsmJsCompilationJob", %"class.v8::internal::AsmJsCompilationJob"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* %11) #7
  %12 = bitcast %"class.v8::internal::AsmJsCompilationJob"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal19AsmJsCompilationJob15FinalizeJobImplENS0_6HandleINS0_18SharedFunctionInfoEEEPNS0_12LocalIsolateE(%"class.v8::internal::AsmJsCompilationJob"*, i64*, %"class.v8::internal::LocalIsolate"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

declare void @_ZN2v88internal30PendingCompilationErrorHandler15ReportWarningAtEiiNS0_15MessageTemplateEPKc(%"class.v8::internal::PendingCompilationErrorHandler"*, i32, i32, i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12AsmJsScannerD2Ev(%"class.v8::internal::AsmJsScanner"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AsmJsScanner", %"class.v8::internal::AsmJsScanner"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.1332"*, %"struct.std::__1::__hash_node_base.1332"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.1332"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1, %17
  %6 = phi %"struct.std::__1::__hash_node_base.1332"* [ %8, %17 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1332", %"struct.std::__1::__hash_node_base.1332"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.1332"*, %"struct.std::__1::__hash_node_base.1332"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1332", %"struct.std::__1::__hash_node_base.1332"* %6, i64 2
  %10 = bitcast %"struct.std::__1::__hash_node_base.1332"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %5
  %15 = bitcast %"struct.std::__1::__hash_node_base.1332"* %9 to i8**
  %16 = load i8*, i8** %15, align 8
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %14, %5
  %18 = bitcast %"struct.std::__1::__hash_node_base.1332"* %6 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  %19 = icmp eq %"struct.std::__1::__hash_node_base.1332"* %8, null
  br i1 %19, label %20, label %5

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %"class.v8::internal::AsmJsScanner", %"class.v8::internal::AsmJsScanner"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1332"**, %"struct.std::__1::__hash_node_base.1332"*** %21, align 8
  store %"struct.std::__1::__hash_node_base.1332"** null, %"struct.std::__1::__hash_node_base.1332"*** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.1332"** %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast %"struct.std::__1::__hash_node_base.1332"** %22 to i8*
  tail call void @_ZdlPv(i8* %25) #13
  br label %26

26:                                               ; preds = %20, %24
  %27 = getelementptr inbounds %"class.v8::internal::AsmJsScanner", %"class.v8::internal::AsmJsScanner"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.1332"*, %"struct.std::__1::__hash_node_base.1332"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.1332"* %28, null
  br i1 %29, label %45, label %30

30:                                               ; preds = %26, %42
  %31 = phi %"struct.std::__1::__hash_node_base.1332"* [ %33, %42 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1332", %"struct.std::__1::__hash_node_base.1332"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1332"*, %"struct.std::__1::__hash_node_base.1332"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1332", %"struct.std::__1::__hash_node_base.1332"* %31, i64 2
  %35 = bitcast %"struct.std::__1::__hash_node_base.1332"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %30
  %40 = bitcast %"struct.std::__1::__hash_node_base.1332"* %34 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %39, %30
  %43 = bitcast %"struct.std::__1::__hash_node_base.1332"* %31 to i8*
  tail call void @_ZdlPv(i8* %43) #13
  %44 = icmp eq %"struct.std::__1::__hash_node_base.1332"* %33, null
  br i1 %44, label %45, label %30

45:                                               ; preds = %42, %26
  %46 = getelementptr inbounds %"class.v8::internal::AsmJsScanner", %"class.v8::internal::AsmJsScanner"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.1332"**, %"struct.std::__1::__hash_node_base.1332"*** %46, align 8
  store %"struct.std::__1::__hash_node_base.1332"** null, %"struct.std::__1::__hash_node_base.1332"*** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.1332"** %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = bitcast %"struct.std::__1::__hash_node_base.1332"** %47 to i8*
  tail call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %45, %49
  %52 = getelementptr inbounds %"class.v8::internal::AsmJsScanner", %"class.v8::internal::AsmJsScanner"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.1332"*, %"struct.std::__1::__hash_node_base.1332"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base.1332"* %53, null
  br i1 %54, label %70, label %55

55:                                               ; preds = %51, %67
  %56 = phi %"struct.std::__1::__hash_node_base.1332"* [ %58, %67 ], [ %53, %51 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1332", %"struct.std::__1::__hash_node_base.1332"* %56, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.1332"*, %"struct.std::__1::__hash_node_base.1332"** %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1332", %"struct.std::__1::__hash_node_base.1332"* %56, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base.1332"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %55
  %65 = bitcast %"struct.std::__1::__hash_node_base.1332"* %59 to i8**
  %66 = load i8*, i8** %65, align 8
  tail call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %64, %55
  %68 = bitcast %"struct.std::__1::__hash_node_base.1332"* %56 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  %69 = icmp eq %"struct.std::__1::__hash_node_base.1332"* %58, null
  br i1 %69, label %70, label %55

70:                                               ; preds = %67, %51
  %71 = getelementptr inbounds %"class.v8::internal::AsmJsScanner", %"class.v8::internal::AsmJsScanner"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.1332"**, %"struct.std::__1::__hash_node_base.1332"*** %71, align 8
  store %"struct.std::__1::__hash_node_base.1332"** null, %"struct.std::__1::__hash_node_base.1332"*** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.1332"** %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  %75 = bitcast %"struct.std::__1::__hash_node_base.1332"** %72 to i8*
  tail call void @_ZdlPv(i8* %75) #13
  br label %76

76:                                               ; preds = %70, %74
  %77 = getelementptr inbounds %"class.v8::internal::AsmJsScanner", %"class.v8::internal::AsmJsScanner"* %0, i64 0, i32 10
  %78 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  tail call void @_ZdlPv(i8* %84) #13
  br label %85

85:                                               ; preds = %76, %82
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

declare void @_ZN2v88internal15MessageLocationC1ENS0_6HandleINS0_6ScriptEEEii(%"class.v8::internal::MessageLocation"*, i64*, i32, i32) unnamed_addr #2

declare i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1366"* dereferenceable(16)) local_unnamed_addr #2

declare i64* @_ZN2v88internal14MessageHandler17MakeMessageObjectEPNS0_7IsolateENS0_15MessageTemplateEPKNS0_15MessageLocationENS0_6HandleINS0_6ObjectEEENS8_INS0_10FixedArrayEEE(%"class.v8::internal::Isolate"*, i32, %"class.v8::internal::MessageLocation"*, i64*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::MessageLocation"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.assume(i1) #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #7
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -262144
  %7 = or i64 %6, 16
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8, align 16
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = ptrtoint i64* %0 to i64
  %13 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %14 = icmp eq i64* %1, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = load i64, i64* null, align 536870912
  %17 = add i64 %16, -1
  %18 = inttoptr i64 %17 to i32*
  br label %40

19:                                               ; preds = %2
  %20 = load i64, i64* %1, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %20, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i64 %22, 4294967295
  %27 = icmp eq i64 %26, 0
  tail call void @llvm.assume(i1 %27) #7
  %28 = zext i32 %25 to i64
  %29 = or i64 %22, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 64
  br i1 %33, label %34, label %40

34:                                               ; preds = %19
  %35 = add i64 %20, 7
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %15, %34, %19
  %41 = phi i32* [ %18, %15 ], [ %24, %34 ], [ %24, %19 ]
  %42 = phi i64 [ %16, %15 ], [ %20, %34 ], [ %20, %19 ]
  br label %43

43:                                               ; preds = %40, %34
  %44 = phi i32* [ %41, %40 ], [ %24, %34 ]
  %45 = phi i64 [ %42, %40 ], [ %20, %34 ]
  %46 = phi i32 [ 2, %40 ], [ 0, %34 ]
  store i32 %46, i32* %13, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  store i32 4, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %11, %"class.v8::internal::Isolate"** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  store i64* %1, i64** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  store i64* %0, i64** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %57 = bitcast %"class.v8::internal::Handle.1547"* %56 to i64*
  store i64 %12, i64* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %59 = bitcast i64* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 -1, i64 16, i1 false) #7
  %60 = and i64 %45, -4294967296
  %61 = load atomic i32, i32* %44 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %60, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = and i16 %66, -32
  %68 = icmp eq i16 %67, 32
  br i1 %68, label %69, label %73

69:                                               ; preds = %43
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 5, i32 0, i32 0, i32 0
  %71 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %70, align 8
  %72 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %71, %"class.v8::internal::Isolate"* %11, i64* %1) #7
  br label %73

73:                                               ; preds = %43, %69
  %74 = phi i64* [ %72, %69 ], [ %1, %43 ]
  store i64* %74, i64** %52, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #7
  %75 = load i32, i32* %47, align 4
  %76 = icmp eq i32 %75, 4
  br i1 %76, label %77, label %82

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::internal::Isolate"** %51 to %"class.v8::internal::Factory"**
  %79 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %79, i64 160
  %81 = bitcast %"class.v8::internal::Factory"* %80 to i64*
  br label %84

82:                                               ; preds = %73
  %83 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyEPNS0_14LookupIteratorENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* nonnull %3, i32 0) #7
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i64* [ %83, %82 ], [ %81, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #7
  ret i64* %85
}

declare i64* @_ZN2v88internal10JSReceiver15GetDataPropertyEPNS0_14LookupIteratorENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #9

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17InternalizeStringERKNS0_6VectorIKhEEb(%"class.v8::internal::FactoryBase"*, %"class.v8::internal::Vector"* dereferenceable(16), i1 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i32 @_ZN2v88internal4wasm13max_mem_pagesEv() local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #2

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN2v88internal26UnoptimizedCompilationInfoC1EPNS0_4ZoneEPNS0_9ParseInfoEPNS0_15FunctionLiteralE(%"class.v8::internal::UnoptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ParseInfo"*, %"class.v8::internal::FunctionLiteral"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #11

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind readnone }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = !{i32 0, i32 33}
