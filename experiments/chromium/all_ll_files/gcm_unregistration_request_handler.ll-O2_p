; ModuleID = '../../google_apis/gcm/engine/gcm_unregistration_request_handler.cc'
source_filename = "../../google_apis/gcm/engine/gcm_unregistration_request_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gcm::GCMUnregistrationRequestHandler" = type { %"class.gcm::UnregistrationRequest::CustomRequestHandler", %"class.std::__1::basic_string" }
%"class.gcm::UnregistrationRequest::CustomRequestHandler" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.2", [4 x i8] }>
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }

@_ZTVN3gcm31GCMUnregistrationRequestHandlerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gcm::GCMUnregistrationRequestHandler"*)* @_ZN3gcm31GCMUnregistrationRequestHandlerD2Ev to i8*), i8* bitcast (void (%"class.gcm::GCMUnregistrationRequestHandler"*)* @_ZN3gcm31GCMUnregistrationRequestHandlerD0Ev to i8*), i8* bitcast (void (%"class.gcm::GCMUnregistrationRequestHandler"*, %"class.std::__1::basic_string"*)* @_ZN3gcm31GCMUnregistrationRequestHandler16BuildRequestBodyEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (i32 (%"class.gcm::GCMUnregistrationRequestHandler"*, %"class.std::__1::basic_string"*)* @_ZN3gcm31GCMUnregistrationRequestHandler13ParseResponseERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.gcm::GCMUnregistrationRequestHandler"*, i32)* @_ZN3gcm31GCMUnregistrationRequestHandler10ReportUMAsENS_21UnregistrationRequest6StatusE to i8*)] }, align 8
@_ZN3gcm12_GLOBAL__N_124kUnregistrationCallerKeyE = internal unnamed_addr constant [17 x i8] c"gcm_unreg_caller\00", align 16
@_ZN3gcm12_GLOBAL__N_126kUnregistrationCallerValueE = internal unnamed_addr constant [6 x i8] c"false\00", align 1
@_ZN3gcm12_GLOBAL__N_114kDeletedPrefixE = internal constant [9 x i8] c"deleted=\00", align 1
@.str = private unnamed_addr constant [32 x i8] c"GCM.UnregistrationRequestStatus\00", align 1
@_ZZN3gcm31GCMUnregistrationRequestHandler10ReportUMAsENS_21UnregistrationRequest6StatusEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3gcm31GCMUnregistrationRequestHandlerC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.gcm::GCMUnregistrationRequestHandler"*, %"class.std::__1::basic_string"*), void (%"class.gcm::GCMUnregistrationRequestHandler"*, %"class.std::__1::basic_string"*)* @_ZN3gcm31GCMUnregistrationRequestHandlerC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN3gcm31GCMUnregistrationRequestHandlerD1Ev = hidden unnamed_addr alias void (%"class.gcm::GCMUnregistrationRequestHandler"*), void (%"class.gcm::GCMUnregistrationRequestHandler"*)* @_ZN3gcm31GCMUnregistrationRequestHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gcm31GCMUnregistrationRequestHandlerC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gcm::GCMUnregistrationRequestHandler"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gcm::GCMUnregistrationRequestHandler", %"class.gcm::GCMUnregistrationRequestHandler"* %0, i64 0, i32 0
  tail call void @_ZN3gcm21UnregistrationRequest20CustomRequestHandlerC2Ev(%"class.gcm::UnregistrationRequest::CustomRequestHandler"* %3) #7
  %4 = getelementptr inbounds %"class.gcm::GCMUnregistrationRequestHandler", %"class.gcm::GCMUnregistrationRequestHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gcm31GCMUnregistrationRequestHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gcm::GCMUnregistrationRequestHandler", %"class.gcm::GCMUnregistrationRequestHandler"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #7
  br label %18

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* %15, i64 %17) #7
  br label %18

18:                                               ; preds = %10, %13
  ret void
}

declare void @_ZN3gcm21UnregistrationRequest20CustomRequestHandlerC2Ev(%"class.gcm::UnregistrationRequest::CustomRequestHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gcm31GCMUnregistrationRequestHandlerD2Ev(%"class.gcm::GCMUnregistrationRequestHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gcm::GCMUnregistrationRequestHandler", %"class.gcm::GCMUnregistrationRequestHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gcm31GCMUnregistrationRequestHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gcm::GCMUnregistrationRequestHandler", %"class.gcm::GCMUnregistrationRequestHandler"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.gcm::GCMUnregistrationRequestHandler", %"class.gcm::GCMUnregistrationRequestHandler"* %0, i64 0, i32 0
  tail call void @_ZN3gcm21UnregistrationRequest20CustomRequestHandlerD2Ev(%"class.gcm::UnregistrationRequest::CustomRequestHandler"* %12) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gcm21UnregistrationRequest20CustomRequestHandlerD2Ev(%"class.gcm::UnregistrationRequest::CustomRequestHandler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gcm31GCMUnregistrationRequestHandlerD0Ev(%"class.gcm::GCMUnregistrationRequestHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gcm::GCMUnregistrationRequestHandler", %"class.gcm::GCMUnregistrationRequestHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gcm31GCMUnregistrationRequestHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gcm::GCMUnregistrationRequestHandler", %"class.gcm::GCMUnregistrationRequestHandler"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.gcm::GCMUnregistrationRequestHandler", %"class.gcm::GCMUnregistrationRequestHandler"* %0, i64 0, i32 0
  tail call void @_ZN3gcm21UnregistrationRequest20CustomRequestHandlerD2Ev(%"class.gcm::UnregistrationRequest::CustomRequestHandler"* %12) #7
  %13 = bitcast %"class.gcm::GCMUnregistrationRequestHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gcm31GCMUnregistrationRequestHandler16BuildRequestBodyEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gcm::GCMUnregistrationRequestHandler"* nocapture readnone, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 16, i8* %7, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 16 getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN3gcm12_GLOBAL__N_124kUnregistrationCallerKeyE, i64 0, i64 0), i64 16, i1 false) #7
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast i64* %8 to i8*
  store i8 0, i8* %9, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7
  %11 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 5, i8* %12, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN3gcm12_GLOBAL__N_126kUnregistrationCallerValueE, i64 0, i64 0), i64 5, i1 false) #7
  %13 = getelementptr inbounds i8, i8* %10, i64 5
  store i8 0, i8* %13, align 1
  call void @_ZN3gcm17BuildFormEncodingERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* %1) #7
  %14 = load i8, i8* %12, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #8
  br label %19

19:                                               ; preds = %2, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7
  %20 = load i8, i8* %7, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #8
  br label %25

25:                                               ; preds = %19, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  ret void
}

declare void @_ZN3gcm17BuildFormEncodingERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gcm31GCMUnregistrationRequestHandler13ParseResponseERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gcm::GCMUnregistrationRequestHandler"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = getelementptr inbounds i8, i8* %11, i64 %15
  %17 = ptrtoint i8* %16 to i64
  %18 = ptrtoint i8* %11 to i64
  %19 = icmp slt i64 %15, 8
  br i1 %19, label %130, label %20

20:                                               ; preds = %2, %31
  %21 = phi i64 [ %34, %31 ], [ %15, %2 ]
  %22 = phi i8* [ %32, %31 ], [ %11, %2 ]
  %23 = add nsw i64 %21, -7
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %130, label %25

25:                                               ; preds = %20
  %26 = tail call i8* @memchr(i8* %22, i32 100, i64 %23) #7
  %27 = icmp eq i8* %26, null
  br i1 %27, label %130, label %28

28:                                               ; preds = %25
  %29 = tail call i32 @bcmp(i8* nonnull %26, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN3gcm12_GLOBAL__N_114kDeletedPrefixE, i64 0, i64 0), i64 8) #7
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds i8, i8* %26, i64 1
  %33 = ptrtoint i8* %32 to i64
  %34 = sub i64 %17, %33
  %35 = icmp slt i64 %34, 8
  br i1 %35, label %130, label %20

36:                                               ; preds = %28
  %37 = ptrtoint i8* %26 to i64
  %38 = icmp eq i8* %26, %16
  %39 = sub i64 %37, %18
  %40 = icmp eq i64 %39, -1
  %41 = or i1 %38, %40
  br i1 %41, label %130, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #7
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false)
  br label %47

47:                                               ; preds = %42, %60
  %48 = phi i64 [ %63, %60 ], [ %15, %42 ]
  %49 = phi i8* [ %61, %60 ], [ %11, %42 ]
  %50 = add nsw i64 %48, -7
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = tail call i8* @memchr(i8* %49, i32 100, i64 %50) #7
  %54 = icmp eq i8* %53, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %52
  %56 = tail call i32 @bcmp(i8* nonnull %53, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN3gcm12_GLOBAL__N_114kDeletedPrefixE, i64 0, i64 0), i64 8) #7
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %55
  %59 = ptrtoint i8* %53 to i64
  br label %65

60:                                               ; preds = %55
  %61 = getelementptr inbounds i8, i8* %53, i64 1
  %62 = ptrtoint i8* %61 to i64
  %63 = sub i64 %17, %62
  %64 = icmp slt i64 %63, 8
  br i1 %64, label %65, label %47

65:                                               ; preds = %60, %52, %47, %58
  %66 = phi i64 [ %59, %58 ], [ %17, %47 ], [ %17, %52 ], [ %17, %60 ]
  %67 = phi i8* [ %53, %58 ], [ %16, %47 ], [ %16, %52 ], [ %16, %60 ]
  %68 = icmp eq i8* %67, %16
  %69 = sub i64 8, %18
  %70 = add i64 %69, %66
  %71 = select i1 %68, i64 7, i64 %70
  %72 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %71, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %72) #7
  %73 = getelementptr inbounds %"class.gcm::GCMUnregistrationRequestHandler", %"class.gcm::GCMUnregistrationRequestHandler"* %0, i64 0, i32 1
  %74 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = load i64, i64* %45, align 8
  %79 = zext i8 %76 to i64
  %80 = select i1 %77, i64 %78, i64 %79
  %81 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  %85 = getelementptr inbounds %"class.gcm::GCMUnregistrationRequestHandler", %"class.gcm::GCMUnregistrationRequestHandler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = zext i8 %83 to i64
  %88 = select i1 %84, i64 %86, i64 %87
  %89 = icmp eq i64 %80, %88
  br i1 %89, label %90, label %121

90:                                               ; preds = %65
  %91 = load i8*, i8** %44, align 8
  %92 = select i1 %77, i8* %91, i8* %43
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  %96 = select i1 %84, i8* %94, i8* %95
  %97 = icmp eq i64 %80, 0
  br i1 %77, label %104, label %98

98:                                               ; preds = %90
  br i1 %97, label %128, label %99

99:                                               ; preds = %98
  %100 = ptrtoint i8* %91 to i64
  %101 = trunc i64 %100 to i8
  %102 = load i8, i8* %96, align 1
  %103 = icmp eq i8 %102, %101
  br i1 %103, label %105, label %121

104:                                              ; preds = %90
  br i1 %97, label %120, label %117

105:                                              ; preds = %99, %112
  %106 = phi i64 [ %109, %112 ], [ %79, %99 ]
  %107 = phi i8* [ %110, %112 ], [ %43, %99 ]
  %108 = phi i8* [ %113, %112 ], [ %96, %99 ]
  %109 = add i64 %106, -1
  %110 = getelementptr inbounds i8, i8* %107, i64 1
  %111 = icmp eq i64 %109, 0
  br i1 %111, label %121, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds i8, i8* %108, i64 1
  %114 = load i8, i8* %110, align 1
  %115 = load i8, i8* %113, align 1
  %116 = icmp eq i8 %114, %115
  br i1 %116, label %105, label %121

117:                                              ; preds = %104
  %118 = call i32 @bcmp(i8* %92, i8* %96, i64 %80) #7
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %125

120:                                              ; preds = %117, %104
  br label %125

121:                                              ; preds = %112, %105, %99, %65
  %122 = phi i32 [ 4, %65 ], [ 4, %99 ], [ 0, %105 ], [ 4, %112 ]
  br i1 %77, label %123, label %128

123:                                              ; preds = %121
  %124 = load i8*, i8** %44, align 8
  br label %125

125:                                              ; preds = %123, %120, %117
  %126 = phi i8* [ %124, %123 ], [ %91, %117 ], [ %91, %120 ]
  %127 = phi i32 [ %122, %123 ], [ 4, %117 ], [ 0, %120 ]
  call void @_ZdlPv(i8* %126) #8
  br label %128

128:                                              ; preds = %98, %121, %125
  %129 = phi i32 [ %122, %121 ], [ %127, %125 ], [ 0, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #7
  br label %130

130:                                              ; preds = %31, %25, %20, %2, %36, %128
  %131 = phi i32 [ %129, %128 ], [ 3, %36 ], [ 3, %2 ], [ 3, %20 ], [ 3, %25 ], [ 3, %31 ]
  ret i32 %131
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gcm31GCMUnregistrationRequestHandler10ReportUMAsENS_21UnregistrationRequest6StatusE(%"class.gcm::GCMUnregistrationRequestHandler"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %3 = load atomic i64, i64* @_ZZN3gcm31GCMUnregistrationRequestHandler10ReportUMAsENS_21UnregistrationRequest6StatusEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %4 = inttoptr i64 %3 to %"class.base::HistogramBase"*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 1, i32 12, i32 13, i32 1) #7
  %8 = ptrtoint %"class.base::HistogramBase"* %7 to i64
  store atomic i64 %8, i64* @_ZZN3gcm31GCMUnregistrationRequestHandler10ReportUMAsENS_21UnregistrationRequest6StatusEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.base::HistogramBase"* [ %4, %2 ], [ %7, %6 ]
  %11 = bitcast %"class.base::HistogramBase"* %10 to void (%"class.base::HistogramBase"*, i32)***
  %12 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %12, i64 6
  %14 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, align 8
  tail call void %14(%"class.base::HistogramBase"* %10, i32 %1) #7
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
