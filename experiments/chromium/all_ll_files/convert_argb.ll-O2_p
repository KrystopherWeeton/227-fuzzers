; ModuleID = '../../third_party/libyuv/source/convert_argb.cc'
source_filename = "../../third_party/libyuv/source/convert_argb.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.libyuv::YuvConstants" = type { [32 x i8], [32 x i8], [32 x i8], [16 x i16], [16 x i16] }

@kYuvI601Constants = external global %"struct.libyuv::YuvConstants", align 2
@kYvuI601Constants = external global %"struct.libyuv::YuvConstants", align 2
@kYuvJPEGConstants = external global %"struct.libyuv::YuvConstants", align 2
@kYvuJPEGConstants = external global %"struct.libyuv::YuvConstants", align 2
@kYuvH709Constants = external global %"struct.libyuv::YuvConstants", align 2
@kYvuH709Constants = external global %"struct.libyuv::YuvConstants", align 2
@kYuv2020Constants = external global %"struct.libyuv::YuvConstants", align 2
@kYvu2020Constants = external global %"struct.libyuv::YuvConstants", align 2
@_ZN6libyuvL22kShuffleMaskBGRAToARGBE = internal constant <16 x i8> <i8 3, i8 2, i8 1, i8 0, i8 7, i8 6, i8 5, i8 4, i8 11, i8 10, i8 9, i8 8, i8 15, i8 14, i8 13, i8 12>, align 16
@_ZN6libyuvL22kShuffleMaskABGRToARGBE = internal constant <16 x i8> <i8 2, i8 1, i8 0, i8 3, i8 6, i8 5, i8 4, i8 7, i8 10, i8 9, i8 8, i8 11, i8 14, i8 13, i8 12, i8 15>, align 16
@_ZN6libyuvL22kShuffleMaskRGBAToARGBE = internal constant <16 x i8> <i8 1, i8 2, i8 3, i8 0, i8 5, i8 6, i8 7, i8 4, i8 9, i8 10, i8 11, i8 8, i8 13, i8 14, i8 15, i8 12>, align 16
@_ZN6libyuvL22kShuffleMaskAR64ToAB64E = internal constant <16 x i8> <i8 4, i8 5, i8 2, i8 3, i8 0, i8 1, i8 6, i8 7, i8 12, i8 13, i8 10, i8 11, i8 8, i8 9, i8 14, i8 15>, align 16
@_ZN6libyuvL14kDither565_4x4E = internal unnamed_addr constant [16 x i8] c"\00\04\01\05\06\02\07\03\01\05\00\04\07\03\06\02", align 16
@cpu_info_ = external local_unnamed_addr global i32, align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ARGBCopy(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %28, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %25 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = shl nsw i32 %4, 2
  tail call void @CopyPlane(i8* %25, i32 %24, i8* nonnull %2, i32 %3, i32 %27, i32 %26) #4
  br label %28

28:                                               ; preds = %6, %23
  %29 = phi i32 [ 0, %23 ], [ -1, %6 ]
  ret i32 %29
}

declare void @CopyPlane(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToARGBMatrix(i8*, i32, i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i8* %0, null
  %13 = icmp ne i8* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i8* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %87, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 7
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGBRow_SSSE3, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGBRow_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I422ToARGBRow_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGBRow_AVX2, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGBRow_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %87

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %85, %71 ]
  %73 = phi i8* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i8* [ %2, %66 ], [ %84, %71 ]
  %76 = phi i8* [ %4, %66 ], [ %83, %71 ]
  tail call void %64(i8* %73, i8* %75, i8* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i8, i8* %73, i64 %68
  %79 = and i32 %72, 1
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds i8, i8* %75, i64 %69
  %82 = getelementptr inbounds i8, i8* %76, i64 %70
  %83 = select i1 %80, i8* %76, i8* %82
  %84 = select i1 %80, i8* %75, i8* %81
  %85 = add nuw nsw i32 %72, 1
  %86 = icmp eq i32 %85, %36
  br i1 %86, label %87, label %71

87:                                               ; preds = %71, %63, %11
  %88 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %88
}

declare void @I422ToARGBRow_C(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToARGBRow_Any_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToARGBRow_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToARGBRow_Any_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToARGBRow_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @J420ToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvJPEGConstants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @J420ToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuJPEGConstants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H420ToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H420ToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U420ToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuv2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U420ToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvu2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I422ToARGBMatrix(i8*, i32, i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i8* %0, null
  %13 = icmp ne i8* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i8* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %100, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = icmp eq i32 %1, %9
  %38 = shl nsw i32 %3, 1
  %39 = icmp eq i32 %38, %9
  %40 = and i1 %37, %39
  %41 = shl nsw i32 %5, 1
  %42 = icmp eq i32 %41, %9
  %43 = and i1 %42, %40
  %44 = shl nsw i32 %9, 2
  %45 = icmp eq i32 %35, %44
  %46 = and i1 %43, %45
  %47 = select i1 %46, i32 %36, i32 1
  %48 = mul nsw i32 %47, %9
  %49 = select i1 %46, i32 1, i32 %36
  %50 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %33
  %53 = tail call i32 @InitCpuFlags() #4
  br label %54

54:                                               ; preds = %33, %52
  %55 = phi i32 [ %53, %52 ], [ %50, %33 ]
  %56 = and i32 %55, 64
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = and i32 %48, 7
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGBRow_SSSE3, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGBRow_Any_SSSE3
  br label %62

62:                                               ; preds = %54, %58
  %63 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %61, %58 ], [ @I422ToARGBRow_C, %54 ]
  %64 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = tail call i32 @InitCpuFlags() #4
  br label %68

68:                                               ; preds = %62, %66
  %69 = phi i32 [ %67, %66 ], [ %64, %62 ]
  %70 = and i32 %69, 1024
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = and i32 %48, 15
  %74 = icmp eq i32 %73, 0
  %75 = select i1 %74, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGBRow_AVX2, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGBRow_Any_AVX2
  br label %76

76:                                               ; preds = %68, %72
  %77 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %75, %72 ], [ %63, %68 ]
  %78 = icmp sgt i32 %49, 0
  br i1 %78, label %79, label %100

79:                                               ; preds = %76
  %80 = sext i32 %35 to i64
  %81 = select i1 %46, i64 0, i64 %80
  %82 = sext i32 %1 to i64
  %83 = select i1 %46, i64 0, i64 %82
  %84 = sext i32 %3 to i64
  %85 = select i1 %46, i64 0, i64 %84
  %86 = sext i32 %5 to i64
  %87 = select i1 %46, i64 0, i64 %86
  br label %88

88:                                               ; preds = %88, %79
  %89 = phi i32 [ 0, %79 ], [ %98, %88 ]
  %90 = phi i8* [ %34, %79 ], [ %94, %88 ]
  %91 = phi i8* [ %4, %79 ], [ %97, %88 ]
  %92 = phi i8* [ %2, %79 ], [ %96, %88 ]
  %93 = phi i8* [ %0, %79 ], [ %95, %88 ]
  tail call void %77(i8* %93, i8* %92, i8* %91, i8* %90, %"struct.libyuv::YuvConstants"* %8, i32 %48) #4
  %94 = getelementptr inbounds i8, i8* %90, i64 %81
  %95 = getelementptr inbounds i8, i8* %93, i64 %83
  %96 = getelementptr inbounds i8, i8* %92, i64 %85
  %97 = getelementptr inbounds i8, i8* %91, i64 %87
  %98 = add nuw nsw i32 %89, 1
  %99 = icmp eq i32 %98, %49
  br i1 %99, label %100, label %88

100:                                              ; preds = %88, %76, %11
  %101 = phi i32 [ -1, %11 ], [ 0, %76 ], [ 0, %88 ]
  ret i32 %101
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I422ToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I422ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I422ToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I422ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @J422ToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I422ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvJPEGConstants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @J422ToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I422ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuJPEGConstants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H422ToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I422ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H422ToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I422ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U422ToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I422ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuv2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U422ToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I422ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvu2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I444ToARGBMatrix(i8*, i32, i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i8* %0, null
  %13 = icmp ne i8* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i8* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %98, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = icmp eq i32 %1, %9
  %38 = icmp eq i32 %3, %9
  %39 = and i1 %37, %38
  %40 = icmp eq i32 %5, %9
  %41 = and i1 %40, %39
  %42 = shl nsw i32 %9, 2
  %43 = icmp eq i32 %35, %42
  %44 = and i1 %41, %43
  %45 = select i1 %44, i32 %36, i32 1
  %46 = mul nsw i32 %45, %9
  %47 = select i1 %44, i32 1, i32 %36
  %48 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %33
  %51 = tail call i32 @InitCpuFlags() #4
  br label %52

52:                                               ; preds = %33, %50
  %53 = phi i32 [ %51, %50 ], [ %48, %33 ]
  %54 = and i32 %53, 64
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = and i32 %46, 7
  %58 = icmp eq i32 %57, 0
  %59 = select i1 %58, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I444ToARGBRow_SSSE3, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I444ToARGBRow_Any_SSSE3
  br label %60

60:                                               ; preds = %52, %56
  %61 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %59, %56 ], [ @I444ToARGBRow_C, %52 ]
  %62 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = tail call i32 @InitCpuFlags() #4
  br label %66

66:                                               ; preds = %60, %64
  %67 = phi i32 [ %65, %64 ], [ %62, %60 ]
  %68 = and i32 %67, 1024
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %66
  %71 = and i32 %46, 15
  %72 = icmp eq i32 %71, 0
  %73 = select i1 %72, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I444ToARGBRow_AVX2, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I444ToARGBRow_Any_AVX2
  br label %74

74:                                               ; preds = %66, %70
  %75 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %73, %70 ], [ %61, %66 ]
  %76 = icmp sgt i32 %47, 0
  br i1 %76, label %77, label %98

77:                                               ; preds = %74
  %78 = sext i32 %35 to i64
  %79 = select i1 %44, i64 0, i64 %78
  %80 = sext i32 %1 to i64
  %81 = select i1 %44, i64 0, i64 %80
  %82 = sext i32 %3 to i64
  %83 = select i1 %44, i64 0, i64 %82
  %84 = sext i32 %5 to i64
  %85 = select i1 %44, i64 0, i64 %84
  br label %86

86:                                               ; preds = %86, %77
  %87 = phi i32 [ 0, %77 ], [ %96, %86 ]
  %88 = phi i8* [ %34, %77 ], [ %92, %86 ]
  %89 = phi i8* [ %4, %77 ], [ %95, %86 ]
  %90 = phi i8* [ %2, %77 ], [ %94, %86 ]
  %91 = phi i8* [ %0, %77 ], [ %93, %86 ]
  tail call void %75(i8* %91, i8* %90, i8* %89, i8* %88, %"struct.libyuv::YuvConstants"* %8, i32 %46) #4
  %92 = getelementptr inbounds i8, i8* %88, i64 %79
  %93 = getelementptr inbounds i8, i8* %91, i64 %81
  %94 = getelementptr inbounds i8, i8* %90, i64 %83
  %95 = getelementptr inbounds i8, i8* %89, i64 %85
  %96 = add nuw nsw i32 %87, 1
  %97 = icmp eq i32 %96, %47
  br i1 %97, label %98, label %86

98:                                               ; preds = %86, %74, %11
  %99 = phi i32 [ -1, %11 ], [ 0, %74 ], [ 0, %86 ]
  ret i32 %99
}

declare void @I444ToARGBRow_C(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I444ToARGBRow_Any_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I444ToARGBRow_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I444ToARGBRow_Any_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I444ToARGBRow_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I444ToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I444ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I444ToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I444ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @J444ToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I444ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvJPEGConstants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @J444ToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I444ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuJPEGConstants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H444ToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I444ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H444ToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I444ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U444ToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I444ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuv2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U444ToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I444ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvu2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I010ToAR30Matrix(i16*, i32, i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i16* %0, null
  %13 = icmp ne i16* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i16* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %87, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 7
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToAR30Row_SSSE3, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToAR30Row_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I210ToAR30Row_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToAR30Row_AVX2, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToAR30Row_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %87

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %85, %71 ]
  %73 = phi i16* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i16* [ %2, %66 ], [ %84, %71 ]
  %76 = phi i16* [ %4, %66 ], [ %83, %71 ]
  tail call void %64(i16* %73, i16* %75, i16* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i16, i16* %73, i64 %68
  %79 = and i32 %72, 1
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds i16, i16* %75, i64 %69
  %82 = getelementptr inbounds i16, i16* %76, i64 %70
  %83 = select i1 %80, i16* %76, i16* %82
  %84 = select i1 %80, i16* %75, i16* %81
  %85 = add nuw nsw i32 %72, 1
  %86 = icmp eq i32 %85, %36
  br i1 %86, label %87, label %71

87:                                               ; preds = %71, %63, %11
  %88 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %88
}

declare void @I210ToAR30Row_C(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I210ToAR30Row_Any_SSSE3(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I210ToAR30Row_SSSE3(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I210ToAR30Row_Any_AVX2(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I210ToAR30Row_AVX2(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I010ToAR30(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I010ToAR30Matrix(i16* %0, i32 %1, i16* %2, i32 %3, i16* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H010ToAR30(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I010ToAR30Matrix(i16* %0, i32 %1, i16* %2, i32 %3, i16* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U010ToAR30(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I010ToAR30Matrix(i16* %0, i32 %1, i16* %2, i32 %3, i16* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuv2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I010ToAB30(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I010ToAR30Matrix(i16* %0, i32 %1, i16* %4, i32 %5, i16* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H010ToAB30(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I010ToAR30Matrix(i16* %0, i32 %1, i16* %4, i32 %5, i16* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U010ToAB30(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I010ToAR30Matrix(i16* %0, i32 %1, i16* %4, i32 %5, i16* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuv2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I012ToAR30Matrix(i16*, i32, i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i16* %0, null
  %13 = icmp ne i16* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i16* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %87, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 7
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I212ToAR30Row_SSSE3, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I212ToAR30Row_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I212ToAR30Row_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I212ToAR30Row_AVX2, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I212ToAR30Row_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %87

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %85, %71 ]
  %73 = phi i16* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i16* [ %2, %66 ], [ %84, %71 ]
  %76 = phi i16* [ %4, %66 ], [ %83, %71 ]
  tail call void %64(i16* %73, i16* %75, i16* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i16, i16* %73, i64 %68
  %79 = and i32 %72, 1
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds i16, i16* %75, i64 %69
  %82 = getelementptr inbounds i16, i16* %76, i64 %70
  %83 = select i1 %80, i16* %76, i16* %82
  %84 = select i1 %80, i16* %75, i16* %81
  %85 = add nuw nsw i32 %72, 1
  %86 = icmp eq i32 %85, %36
  br i1 %86, label %87, label %71

87:                                               ; preds = %71, %63, %11
  %88 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %88
}

declare void @I212ToAR30Row_C(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I212ToAR30Row_Any_SSSE3(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I212ToAR30Row_SSSE3(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I212ToAR30Row_Any_AVX2(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I212ToAR30Row_AVX2(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I210ToAR30Matrix(i16*, i32, i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i16* %0, null
  %13 = icmp ne i16* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i16* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %83, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 7
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToAR30Row_SSSE3, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToAR30Row_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I210ToAR30Row_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToAR30Row_AVX2, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToAR30Row_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %83

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %81, %71 ]
  %73 = phi i16* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i16* [ %2, %66 ], [ %79, %71 ]
  %76 = phi i16* [ %4, %66 ], [ %80, %71 ]
  tail call void %64(i16* %73, i16* %75, i16* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i16, i16* %73, i64 %68
  %79 = getelementptr inbounds i16, i16* %75, i64 %69
  %80 = getelementptr inbounds i16, i16* %76, i64 %70
  %81 = add nuw nsw i32 %72, 1
  %82 = icmp eq i32 %81, %36
  br i1 %82, label %83, label %71

83:                                               ; preds = %71, %63, %11
  %84 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I210ToAR30(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I210ToAR30Matrix(i16* %0, i32 %1, i16* %2, i32 %3, i16* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H210ToAR30(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I210ToAR30Matrix(i16* %0, i32 %1, i16* %2, i32 %3, i16* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U210ToAR30(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I210ToAR30Matrix(i16* %0, i32 %1, i16* %2, i32 %3, i16* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuv2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I210ToAB30(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I210ToAR30Matrix(i16* %0, i32 %1, i16* %4, i32 %5, i16* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H210ToAB30(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I210ToAR30Matrix(i16* %0, i32 %1, i16* %4, i32 %5, i16* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U210ToAB30(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I210ToAR30Matrix(i16* %0, i32 %1, i16* %4, i32 %5, i16* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuv2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I410ToAR30Matrix(i16*, i32, i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i16* %0, null
  %13 = icmp ne i16* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i16* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %83, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 7
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I410ToAR30Row_SSSE3, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I410ToAR30Row_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I410ToAR30Row_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I410ToAR30Row_AVX2, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I410ToAR30Row_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %83

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %81, %71 ]
  %73 = phi i16* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i16* [ %2, %66 ], [ %79, %71 ]
  %76 = phi i16* [ %4, %66 ], [ %80, %71 ]
  tail call void %64(i16* %73, i16* %75, i16* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i16, i16* %73, i64 %68
  %79 = getelementptr inbounds i16, i16* %75, i64 %69
  %80 = getelementptr inbounds i16, i16* %76, i64 %70
  %81 = add nuw nsw i32 %72, 1
  %82 = icmp eq i32 %81, %36
  br i1 %82, label %83, label %71

83:                                               ; preds = %71, %63, %11
  %84 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %84
}

declare void @I410ToAR30Row_C(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I410ToAR30Row_Any_SSSE3(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I410ToAR30Row_SSSE3(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I410ToAR30Row_Any_AVX2(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I410ToAR30Row_AVX2(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I010ToARGBMatrix(i16*, i32, i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i16* %0, null
  %13 = icmp ne i16* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i16* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %87, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 7
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToARGBRow_SSSE3, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToARGBRow_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I210ToARGBRow_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToARGBRow_AVX2, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToARGBRow_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %87

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %85, %71 ]
  %73 = phi i16* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i16* [ %2, %66 ], [ %84, %71 ]
  %76 = phi i16* [ %4, %66 ], [ %83, %71 ]
  tail call void %64(i16* %73, i16* %75, i16* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i16, i16* %73, i64 %68
  %79 = and i32 %72, 1
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds i16, i16* %75, i64 %69
  %82 = getelementptr inbounds i16, i16* %76, i64 %70
  %83 = select i1 %80, i16* %76, i16* %82
  %84 = select i1 %80, i16* %75, i16* %81
  %85 = add nuw nsw i32 %72, 1
  %86 = icmp eq i32 %85, %36
  br i1 %86, label %87, label %71

87:                                               ; preds = %71, %63, %11
  %88 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %88
}

declare void @I210ToARGBRow_C(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I210ToARGBRow_Any_SSSE3(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I210ToARGBRow_SSSE3(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I210ToARGBRow_Any_AVX2(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I210ToARGBRow_AVX2(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I010ToARGB(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I010ToARGBMatrix(i16* %0, i32 %1, i16* %2, i32 %3, i16* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I010ToABGR(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I010ToARGBMatrix(i16* %0, i32 %1, i16* %4, i32 %5, i16* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H010ToARGB(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I010ToARGBMatrix(i16* %0, i32 %1, i16* %2, i32 %3, i16* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H010ToABGR(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I010ToARGBMatrix(i16* %0, i32 %1, i16* %4, i32 %5, i16* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U010ToARGB(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I010ToARGBMatrix(i16* %0, i32 %1, i16* %2, i32 %3, i16* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuv2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U010ToABGR(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I010ToARGBMatrix(i16* %0, i32 %1, i16* %4, i32 %5, i16* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvu2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I012ToARGBMatrix(i16*, i32, i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i16* %0, null
  %13 = icmp ne i16* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i16* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %87, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 7
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I212ToARGBRow_SSSE3, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I212ToARGBRow_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I212ToARGBRow_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I212ToARGBRow_AVX2, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I212ToARGBRow_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %87

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %85, %71 ]
  %73 = phi i16* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i16* [ %2, %66 ], [ %84, %71 ]
  %76 = phi i16* [ %4, %66 ], [ %83, %71 ]
  tail call void %64(i16* %73, i16* %75, i16* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i16, i16* %73, i64 %68
  %79 = and i32 %72, 1
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds i16, i16* %75, i64 %69
  %82 = getelementptr inbounds i16, i16* %76, i64 %70
  %83 = select i1 %80, i16* %76, i16* %82
  %84 = select i1 %80, i16* %75, i16* %81
  %85 = add nuw nsw i32 %72, 1
  %86 = icmp eq i32 %85, %36
  br i1 %86, label %87, label %71

87:                                               ; preds = %71, %63, %11
  %88 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %88
}

declare void @I212ToARGBRow_C(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I212ToARGBRow_Any_SSSE3(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I212ToARGBRow_SSSE3(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I212ToARGBRow_Any_AVX2(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I212ToARGBRow_AVX2(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I210ToARGBMatrix(i16*, i32, i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i16* %0, null
  %13 = icmp ne i16* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i16* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %83, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 7
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToARGBRow_SSSE3, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToARGBRow_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I210ToARGBRow_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToARGBRow_AVX2, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210ToARGBRow_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %83

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %81, %71 ]
  %73 = phi i16* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i16* [ %2, %66 ], [ %79, %71 ]
  %76 = phi i16* [ %4, %66 ], [ %80, %71 ]
  tail call void %64(i16* %73, i16* %75, i16* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i16, i16* %73, i64 %68
  %79 = getelementptr inbounds i16, i16* %75, i64 %69
  %80 = getelementptr inbounds i16, i16* %76, i64 %70
  %81 = add nuw nsw i32 %72, 1
  %82 = icmp eq i32 %81, %36
  br i1 %82, label %83, label %71

83:                                               ; preds = %71, %63, %11
  %84 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I210ToARGB(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I210ToARGBMatrix(i16* %0, i32 %1, i16* %2, i32 %3, i16* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I210ToABGR(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I210ToARGBMatrix(i16* %0, i32 %1, i16* %4, i32 %5, i16* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H210ToARGB(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I210ToARGBMatrix(i16* %0, i32 %1, i16* %2, i32 %3, i16* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H210ToABGR(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I210ToARGBMatrix(i16* %0, i32 %1, i16* %4, i32 %5, i16* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U210ToARGB(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I210ToARGBMatrix(i16* %0, i32 %1, i16* %2, i32 %3, i16* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuv2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @U210ToABGR(i16*, i32, i16*, i32, i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I210ToARGBMatrix(i16* %0, i32 %1, i16* %4, i32 %5, i16* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvu2020Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I410ToARGBMatrix(i16*, i32, i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i16* %0, null
  %13 = icmp ne i16* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i16* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %83, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 7
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I410ToARGBRow_SSSE3, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I410ToARGBRow_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I410ToARGBRow_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I410ToARGBRow_AVX2, void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I410ToARGBRow_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %83

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %81, %71 ]
  %73 = phi i16* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i16* [ %2, %66 ], [ %79, %71 ]
  %76 = phi i16* [ %4, %66 ], [ %80, %71 ]
  tail call void %64(i16* %73, i16* %75, i16* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i16, i16* %73, i64 %68
  %79 = getelementptr inbounds i16, i16* %75, i64 %69
  %80 = getelementptr inbounds i16, i16* %76, i64 %70
  %81 = add nuw nsw i32 %72, 1
  %82 = icmp eq i32 %81, %36
  br i1 %82, label %83, label %71

83:                                               ; preds = %71, %63, %11
  %84 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %84
}

declare void @I410ToARGBRow_C(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I410ToARGBRow_Any_SSSE3(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I410ToARGBRow_SSSE3(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I410ToARGBRow_Any_AVX2(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I410ToARGBRow_AVX2(i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @P010ToARGBMatrix(i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %10 = icmp ne i16* %0, null
  %11 = icmp ne i16* %2, null
  %12 = and i1 %10, %11
  %13 = icmp ne i8* %4, null
  %14 = and i1 %12, %13
  %15 = xor i1 %14, true
  %16 = icmp slt i32 %7, 1
  %17 = or i1 %16, %15
  %18 = icmp eq i32 %8, 0
  %19 = or i1 %17, %18
  br i1 %19, label %79, label %20

20:                                               ; preds = %9
  %21 = icmp slt i32 %8, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %20
  %23 = sub nsw i32 0, %8
  %24 = xor i32 %8, -1
  %25 = mul nsw i32 %24, %5
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = sub nsw i32 0, %5
  br label %29

29:                                               ; preds = %22, %20
  %30 = phi i8* [ %27, %22 ], [ %4, %20 ]
  %31 = phi i32 [ %28, %22 ], [ %5, %20 ]
  %32 = phi i32 [ %23, %22 ], [ %8, %20 ]
  %33 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call i32 @InitCpuFlags() #4
  br label %37

37:                                               ; preds = %29, %35
  %38 = phi i32 [ %36, %35 ], [ %33, %29 ]
  %39 = and i32 %38, 64
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = and i32 %7, 7
  %43 = icmp eq i32 %42, 0
  %44 = select i1 %43, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToARGBRow_SSSE3, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToARGBRow_Any_SSSE3
  br label %45

45:                                               ; preds = %37, %41
  %46 = phi void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %44, %41 ], [ @P210ToARGBRow_C, %37 ]
  %47 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = tail call i32 @InitCpuFlags() #4
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i32 [ %50, %49 ], [ %47, %45 ]
  %53 = and i32 %52, 1024
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = and i32 %7, 15
  %57 = icmp eq i32 %56, 0
  %58 = select i1 %57, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToARGBRow_AVX2, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToARGBRow_Any_AVX2
  br label %59

59:                                               ; preds = %51, %55
  %60 = phi void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %58, %55 ], [ %46, %51 ]
  %61 = icmp sgt i32 %32, 0
  br i1 %61, label %62, label %79

62:                                               ; preds = %59
  %63 = sext i32 %31 to i64
  %64 = sext i32 %1 to i64
  %65 = sext i32 %3 to i64
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i32 [ 0, %62 ], [ %77, %66 ]
  %68 = phi i16* [ %0, %62 ], [ %72, %66 ]
  %69 = phi i8* [ %30, %62 ], [ %71, %66 ]
  %70 = phi i16* [ %2, %62 ], [ %76, %66 ]
  tail call void %60(i16* %68, i16* %70, i8* %69, %"struct.libyuv::YuvConstants"* %6, i32 %7) #4
  %71 = getelementptr inbounds i8, i8* %69, i64 %63
  %72 = getelementptr inbounds i16, i16* %68, i64 %64
  %73 = and i32 %67, 1
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds i16, i16* %70, i64 %65
  %76 = select i1 %74, i16* %70, i16* %75
  %77 = add nuw nsw i32 %67, 1
  %78 = icmp eq i32 %77, %32
  br i1 %78, label %79, label %66

79:                                               ; preds = %66, %59, %9
  %80 = phi i32 [ -1, %9 ], [ 0, %59 ], [ 0, %66 ]
  ret i32 %80
}

declare void @P210ToARGBRow_C(i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @P210ToARGBRow_Any_SSSE3(i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @P210ToARGBRow_SSSE3(i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @P210ToARGBRow_Any_AVX2(i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @P210ToARGBRow_AVX2(i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @P210ToARGBMatrix(i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %10 = icmp ne i16* %0, null
  %11 = icmp ne i16* %2, null
  %12 = and i1 %10, %11
  %13 = icmp ne i8* %4, null
  %14 = and i1 %12, %13
  %15 = xor i1 %14, true
  %16 = icmp slt i32 %7, 1
  %17 = or i1 %16, %15
  %18 = icmp eq i32 %8, 0
  %19 = or i1 %17, %18
  br i1 %19, label %76, label %20

20:                                               ; preds = %9
  %21 = icmp slt i32 %8, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %20
  %23 = sub nsw i32 0, %8
  %24 = xor i32 %8, -1
  %25 = mul nsw i32 %24, %5
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = sub nsw i32 0, %5
  br label %29

29:                                               ; preds = %22, %20
  %30 = phi i8* [ %27, %22 ], [ %4, %20 ]
  %31 = phi i32 [ %28, %22 ], [ %5, %20 ]
  %32 = phi i32 [ %23, %22 ], [ %8, %20 ]
  %33 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call i32 @InitCpuFlags() #4
  br label %37

37:                                               ; preds = %29, %35
  %38 = phi i32 [ %36, %35 ], [ %33, %29 ]
  %39 = and i32 %38, 64
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = and i32 %7, 7
  %43 = icmp eq i32 %42, 0
  %44 = select i1 %43, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToARGBRow_SSSE3, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToARGBRow_Any_SSSE3
  br label %45

45:                                               ; preds = %37, %41
  %46 = phi void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %44, %41 ], [ @P210ToARGBRow_C, %37 ]
  %47 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = tail call i32 @InitCpuFlags() #4
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i32 [ %50, %49 ], [ %47, %45 ]
  %53 = and i32 %52, 1024
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = and i32 %7, 15
  %57 = icmp eq i32 %56, 0
  %58 = select i1 %57, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToARGBRow_AVX2, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToARGBRow_Any_AVX2
  br label %59

59:                                               ; preds = %51, %55
  %60 = phi void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %58, %55 ], [ %46, %51 ]
  %61 = icmp sgt i32 %32, 0
  br i1 %61, label %62, label %76

62:                                               ; preds = %59
  %63 = sext i32 %31 to i64
  %64 = sext i32 %1 to i64
  %65 = sext i32 %3 to i64
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i32 [ 0, %62 ], [ %74, %66 ]
  %68 = phi i16* [ %0, %62 ], [ %72, %66 ]
  %69 = phi i8* [ %30, %62 ], [ %71, %66 ]
  %70 = phi i16* [ %2, %62 ], [ %73, %66 ]
  tail call void %60(i16* %68, i16* %70, i8* %69, %"struct.libyuv::YuvConstants"* %6, i32 %7) #4
  %71 = getelementptr inbounds i8, i8* %69, i64 %63
  %72 = getelementptr inbounds i16, i16* %68, i64 %64
  %73 = getelementptr inbounds i16, i16* %70, i64 %65
  %74 = add nuw nsw i32 %67, 1
  %75 = icmp eq i32 %74, %32
  br i1 %75, label %76, label %66

76:                                               ; preds = %66, %59, %9
  %77 = phi i32 [ -1, %9 ], [ 0, %59 ], [ 0, %66 ]
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @P010ToAR30Matrix(i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %10 = icmp ne i16* %0, null
  %11 = icmp ne i16* %2, null
  %12 = and i1 %10, %11
  %13 = icmp ne i8* %4, null
  %14 = and i1 %12, %13
  %15 = xor i1 %14, true
  %16 = icmp slt i32 %7, 1
  %17 = or i1 %16, %15
  %18 = icmp eq i32 %8, 0
  %19 = or i1 %17, %18
  br i1 %19, label %79, label %20

20:                                               ; preds = %9
  %21 = icmp slt i32 %8, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %20
  %23 = sub nsw i32 0, %8
  %24 = xor i32 %8, -1
  %25 = mul nsw i32 %24, %5
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = sub nsw i32 0, %5
  br label %29

29:                                               ; preds = %22, %20
  %30 = phi i8* [ %27, %22 ], [ %4, %20 ]
  %31 = phi i32 [ %28, %22 ], [ %5, %20 ]
  %32 = phi i32 [ %23, %22 ], [ %8, %20 ]
  %33 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call i32 @InitCpuFlags() #4
  br label %37

37:                                               ; preds = %29, %35
  %38 = phi i32 [ %36, %35 ], [ %33, %29 ]
  %39 = and i32 %38, 64
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = and i32 %7, 7
  %43 = icmp eq i32 %42, 0
  %44 = select i1 %43, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToAR30Row_SSSE3, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToAR30Row_Any_SSSE3
  br label %45

45:                                               ; preds = %37, %41
  %46 = phi void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %44, %41 ], [ @P210ToAR30Row_C, %37 ]
  %47 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = tail call i32 @InitCpuFlags() #4
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i32 [ %50, %49 ], [ %47, %45 ]
  %53 = and i32 %52, 1024
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = and i32 %7, 15
  %57 = icmp eq i32 %56, 0
  %58 = select i1 %57, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToAR30Row_AVX2, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToAR30Row_Any_AVX2
  br label %59

59:                                               ; preds = %51, %55
  %60 = phi void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %58, %55 ], [ %46, %51 ]
  %61 = icmp sgt i32 %32, 0
  br i1 %61, label %62, label %79

62:                                               ; preds = %59
  %63 = sext i32 %31 to i64
  %64 = sext i32 %1 to i64
  %65 = sext i32 %3 to i64
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i32 [ 0, %62 ], [ %77, %66 ]
  %68 = phi i16* [ %0, %62 ], [ %72, %66 ]
  %69 = phi i8* [ %30, %62 ], [ %71, %66 ]
  %70 = phi i16* [ %2, %62 ], [ %76, %66 ]
  tail call void %60(i16* %68, i16* %70, i8* %69, %"struct.libyuv::YuvConstants"* %6, i32 %7) #4
  %71 = getelementptr inbounds i8, i8* %69, i64 %63
  %72 = getelementptr inbounds i16, i16* %68, i64 %64
  %73 = and i32 %67, 1
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds i16, i16* %70, i64 %65
  %76 = select i1 %74, i16* %70, i16* %75
  %77 = add nuw nsw i32 %67, 1
  %78 = icmp eq i32 %77, %32
  br i1 %78, label %79, label %66

79:                                               ; preds = %66, %59, %9
  %80 = phi i32 [ -1, %9 ], [ 0, %59 ], [ 0, %66 ]
  ret i32 %80
}

declare void @P210ToAR30Row_C(i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @P210ToAR30Row_Any_SSSE3(i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @P210ToAR30Row_SSSE3(i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @P210ToAR30Row_Any_AVX2(i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @P210ToAR30Row_AVX2(i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @P210ToAR30Matrix(i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %10 = icmp ne i16* %0, null
  %11 = icmp ne i16* %2, null
  %12 = and i1 %10, %11
  %13 = icmp ne i8* %4, null
  %14 = and i1 %12, %13
  %15 = xor i1 %14, true
  %16 = icmp slt i32 %7, 1
  %17 = or i1 %16, %15
  %18 = icmp eq i32 %8, 0
  %19 = or i1 %17, %18
  br i1 %19, label %76, label %20

20:                                               ; preds = %9
  %21 = icmp slt i32 %8, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %20
  %23 = sub nsw i32 0, %8
  %24 = xor i32 %8, -1
  %25 = mul nsw i32 %24, %5
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = sub nsw i32 0, %5
  br label %29

29:                                               ; preds = %22, %20
  %30 = phi i8* [ %27, %22 ], [ %4, %20 ]
  %31 = phi i32 [ %28, %22 ], [ %5, %20 ]
  %32 = phi i32 [ %23, %22 ], [ %8, %20 ]
  %33 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call i32 @InitCpuFlags() #4
  br label %37

37:                                               ; preds = %29, %35
  %38 = phi i32 [ %36, %35 ], [ %33, %29 ]
  %39 = and i32 %38, 64
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = and i32 %7, 7
  %43 = icmp eq i32 %42, 0
  %44 = select i1 %43, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToAR30Row_SSSE3, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToAR30Row_Any_SSSE3
  br label %45

45:                                               ; preds = %37, %41
  %46 = phi void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %44, %41 ], [ @P210ToAR30Row_C, %37 ]
  %47 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = tail call i32 @InitCpuFlags() #4
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i32 [ %50, %49 ], [ %47, %45 ]
  %53 = and i32 %52, 1024
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = and i32 %7, 15
  %57 = icmp eq i32 %56, 0
  %58 = select i1 %57, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToAR30Row_AVX2, void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @P210ToAR30Row_Any_AVX2
  br label %59

59:                                               ; preds = %51, %55
  %60 = phi void (i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %58, %55 ], [ %46, %51 ]
  %61 = icmp sgt i32 %32, 0
  br i1 %61, label %62, label %76

62:                                               ; preds = %59
  %63 = sext i32 %31 to i64
  %64 = sext i32 %1 to i64
  %65 = sext i32 %3 to i64
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i32 [ 0, %62 ], [ %74, %66 ]
  %68 = phi i16* [ %0, %62 ], [ %72, %66 ]
  %69 = phi i8* [ %30, %62 ], [ %71, %66 ]
  %70 = phi i16* [ %2, %62 ], [ %73, %66 ]
  tail call void %60(i16* %68, i16* %70, i8* %69, %"struct.libyuv::YuvConstants"* %6, i32 %7) #4
  %71 = getelementptr inbounds i8, i8* %69, i64 %63
  %72 = getelementptr inbounds i16, i16* %68, i64 %64
  %73 = getelementptr inbounds i16, i16* %70, i64 %65
  %74 = add nuw nsw i32 %67, 1
  %75 = icmp eq i32 %74, %32
  br i1 %75, label %76, label %66

76:                                               ; preds = %66, %59, %9
  %77 = phi i32 [ -1, %9 ], [ 0, %59 ], [ 0, %66 ]
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420AlphaToARGBMatrix(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32, i32) local_unnamed_addr #0 {
  %15 = icmp ne i8* %0, null
  %16 = icmp ne i8* %2, null
  %17 = and i1 %15, %16
  %18 = icmp ne i8* %4, null
  %19 = and i1 %17, %18
  %20 = icmp ne i8* %8, null
  %21 = and i1 %19, %20
  %22 = xor i1 %21, true
  %23 = icmp slt i32 %11, 1
  %24 = or i1 %23, %22
  %25 = icmp eq i32 %12, 0
  %26 = or i1 %24, %25
  br i1 %26, label %124, label %27

27:                                               ; preds = %14
  %28 = icmp slt i32 %12, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %27
  %30 = sub nsw i32 0, %12
  %31 = xor i32 %12, -1
  %32 = mul nsw i32 %31, %9
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %8, i64 %33
  %35 = sub nsw i32 0, %9
  br label %36

36:                                               ; preds = %29, %27
  %37 = phi i8* [ %34, %29 ], [ %8, %27 ]
  %38 = phi i32 [ %35, %29 ], [ %9, %27 ]
  %39 = phi i32 [ %30, %29 ], [ %12, %27 ]
  %40 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = tail call i32 @InitCpuFlags() #4
  br label %44

44:                                               ; preds = %36, %42
  %45 = phi i32 [ %43, %42 ], [ %40, %36 ]
  %46 = and i32 %45, 64
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = and i32 %11, 7
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422AlphaToARGBRow_SSSE3, void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422AlphaToARGBRow_Any_SSSE3
  br label %52

52:                                               ; preds = %44, %48
  %53 = phi void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %51, %48 ], [ @I422AlphaToARGBRow_C, %44 ]
  %54 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = tail call i32 @InitCpuFlags() #4
  br label %58

58:                                               ; preds = %52, %56
  %59 = phi i32 [ %57, %56 ], [ %54, %52 ]
  %60 = and i32 %59, 1024
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %58
  %63 = and i32 %11, 15
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422AlphaToARGBRow_AVX2, void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422AlphaToARGBRow_Any_AVX2
  br label %66

66:                                               ; preds = %58, %62
  %67 = phi void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %65, %62 ], [ %53, %58 ]
  %68 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = tail call i32 @InitCpuFlags() #4
  br label %72

72:                                               ; preds = %66, %70
  %73 = phi i32 [ %71, %70 ], [ %68, %66 ]
  %74 = and i32 %73, 64
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %72
  %77 = and i32 %11, 3
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %78, void (i8*, i8*, i32)* @ARGBAttenuateRow_SSSE3, void (i8*, i8*, i32)* @ARGBAttenuateRow_Any_SSSE3
  br label %80

80:                                               ; preds = %72, %76
  %81 = phi void (i8*, i8*, i32)* [ %79, %76 ], [ @ARGBAttenuateRow_C, %72 ]
  %82 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = tail call i32 @InitCpuFlags() #4
  br label %86

86:                                               ; preds = %80, %84
  %87 = phi i32 [ %85, %84 ], [ %82, %80 ]
  %88 = and i32 %87, 1024
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = and i32 %11, 7
  %92 = icmp eq i32 %91, 0
  %93 = select i1 %92, void (i8*, i8*, i32)* @ARGBAttenuateRow_AVX2, void (i8*, i8*, i32)* @ARGBAttenuateRow_Any_AVX2
  br label %94

94:                                               ; preds = %86, %90
  %95 = phi void (i8*, i8*, i32)* [ %93, %90 ], [ %81, %86 ]
  %96 = icmp sgt i32 %39, 0
  br i1 %96, label %97, label %124

97:                                               ; preds = %94
  %98 = icmp eq i32 %13, 0
  %99 = sext i32 %38 to i64
  %100 = sext i32 %7 to i64
  %101 = sext i32 %1 to i64
  %102 = sext i32 %3 to i64
  %103 = sext i32 %5 to i64
  br label %104

104:                                              ; preds = %112, %97
  %105 = phi i32 [ 0, %97 ], [ %122, %112 ]
  %106 = phi i8* [ %0, %97 ], [ %115, %112 ]
  %107 = phi i8* [ %2, %97 ], [ %121, %112 ]
  %108 = phi i8* [ %37, %97 ], [ %113, %112 ]
  %109 = phi i8* [ %4, %97 ], [ %120, %112 ]
  %110 = phi i8* [ %6, %97 ], [ %114, %112 ]
  tail call void %67(i8* %106, i8* %107, i8* %109, i8* %110, i8* %108, %"struct.libyuv::YuvConstants"* %10, i32 %11) #4
  br i1 %98, label %112, label %111

111:                                              ; preds = %104
  tail call void %95(i8* %108, i8* %108, i32 %11) #4
  br label %112

112:                                              ; preds = %104, %111
  %113 = getelementptr inbounds i8, i8* %108, i64 %99
  %114 = getelementptr inbounds i8, i8* %110, i64 %100
  %115 = getelementptr inbounds i8, i8* %106, i64 %101
  %116 = and i32 %105, 1
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds i8, i8* %107, i64 %102
  %119 = getelementptr inbounds i8, i8* %109, i64 %103
  %120 = select i1 %117, i8* %109, i8* %119
  %121 = select i1 %117, i8* %107, i8* %118
  %122 = add nuw nsw i32 %105, 1
  %123 = icmp eq i32 %122, %39
  br i1 %123, label %124, label %104

124:                                              ; preds = %112, %94, %14
  %125 = phi i32 [ -1, %14 ], [ 0, %94 ], [ 0, %112 ]
  ret i32 %125
}

declare void @I422AlphaToARGBRow_C(i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @ARGBAttenuateRow_C(i8*, i8*, i32) local_unnamed_addr #1

declare void @I422AlphaToARGBRow_Any_SSSE3(i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422AlphaToARGBRow_SSSE3(i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422AlphaToARGBRow_Any_AVX2(i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422AlphaToARGBRow_AVX2(i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @ARGBAttenuateRow_Any_SSSE3(i8*, i8*, i32) local_unnamed_addr #1

declare void @ARGBAttenuateRow_SSSE3(i8*, i8*, i32) local_unnamed_addr #1

declare void @ARGBAttenuateRow_Any_AVX2(i8*, i8*, i32) local_unnamed_addr #1

declare void @ARGBAttenuateRow_AVX2(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I422AlphaToARGBMatrix(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32, i32) local_unnamed_addr #0 {
  %15 = icmp ne i8* %0, null
  %16 = icmp ne i8* %2, null
  %17 = and i1 %15, %16
  %18 = icmp ne i8* %4, null
  %19 = and i1 %17, %18
  %20 = icmp ne i8* %8, null
  %21 = and i1 %19, %20
  %22 = xor i1 %21, true
  %23 = icmp slt i32 %11, 1
  %24 = or i1 %23, %22
  %25 = icmp eq i32 %12, 0
  %26 = or i1 %24, %25
  br i1 %26, label %120, label %27

27:                                               ; preds = %14
  %28 = icmp slt i32 %12, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %27
  %30 = sub nsw i32 0, %12
  %31 = xor i32 %12, -1
  %32 = mul nsw i32 %31, %9
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %8, i64 %33
  %35 = sub nsw i32 0, %9
  br label %36

36:                                               ; preds = %29, %27
  %37 = phi i8* [ %34, %29 ], [ %8, %27 ]
  %38 = phi i32 [ %35, %29 ], [ %9, %27 ]
  %39 = phi i32 [ %30, %29 ], [ %12, %27 ]
  %40 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = tail call i32 @InitCpuFlags() #4
  br label %44

44:                                               ; preds = %36, %42
  %45 = phi i32 [ %43, %42 ], [ %40, %36 ]
  %46 = and i32 %45, 64
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = and i32 %11, 7
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422AlphaToARGBRow_SSSE3, void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422AlphaToARGBRow_Any_SSSE3
  br label %52

52:                                               ; preds = %44, %48
  %53 = phi void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %51, %48 ], [ @I422AlphaToARGBRow_C, %44 ]
  %54 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = tail call i32 @InitCpuFlags() #4
  br label %58

58:                                               ; preds = %52, %56
  %59 = phi i32 [ %57, %56 ], [ %54, %52 ]
  %60 = and i32 %59, 1024
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %58
  %63 = and i32 %11, 15
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422AlphaToARGBRow_AVX2, void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422AlphaToARGBRow_Any_AVX2
  br label %66

66:                                               ; preds = %58, %62
  %67 = phi void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %65, %62 ], [ %53, %58 ]
  %68 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = tail call i32 @InitCpuFlags() #4
  br label %72

72:                                               ; preds = %66, %70
  %73 = phi i32 [ %71, %70 ], [ %68, %66 ]
  %74 = and i32 %73, 64
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %72
  %77 = and i32 %11, 3
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %78, void (i8*, i8*, i32)* @ARGBAttenuateRow_SSSE3, void (i8*, i8*, i32)* @ARGBAttenuateRow_Any_SSSE3
  br label %80

80:                                               ; preds = %72, %76
  %81 = phi void (i8*, i8*, i32)* [ %79, %76 ], [ @ARGBAttenuateRow_C, %72 ]
  %82 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = tail call i32 @InitCpuFlags() #4
  br label %86

86:                                               ; preds = %80, %84
  %87 = phi i32 [ %85, %84 ], [ %82, %80 ]
  %88 = and i32 %87, 1024
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = and i32 %11, 7
  %92 = icmp eq i32 %91, 0
  %93 = select i1 %92, void (i8*, i8*, i32)* @ARGBAttenuateRow_AVX2, void (i8*, i8*, i32)* @ARGBAttenuateRow_Any_AVX2
  br label %94

94:                                               ; preds = %86, %90
  %95 = phi void (i8*, i8*, i32)* [ %93, %90 ], [ %81, %86 ]
  %96 = icmp sgt i32 %39, 0
  br i1 %96, label %97, label %120

97:                                               ; preds = %94
  %98 = icmp eq i32 %13, 0
  %99 = sext i32 %38 to i64
  %100 = sext i32 %7 to i64
  %101 = sext i32 %1 to i64
  %102 = sext i32 %3 to i64
  %103 = sext i32 %5 to i64
  br label %104

104:                                              ; preds = %112, %97
  %105 = phi i32 [ 0, %97 ], [ %118, %112 ]
  %106 = phi i8* [ %0, %97 ], [ %115, %112 ]
  %107 = phi i8* [ %2, %97 ], [ %116, %112 ]
  %108 = phi i8* [ %37, %97 ], [ %113, %112 ]
  %109 = phi i8* [ %4, %97 ], [ %117, %112 ]
  %110 = phi i8* [ %6, %97 ], [ %114, %112 ]
  tail call void %67(i8* %106, i8* %107, i8* %109, i8* %110, i8* %108, %"struct.libyuv::YuvConstants"* %10, i32 %11) #4
  br i1 %98, label %112, label %111

111:                                              ; preds = %104
  tail call void %95(i8* %108, i8* %108, i32 %11) #4
  br label %112

112:                                              ; preds = %104, %111
  %113 = getelementptr inbounds i8, i8* %108, i64 %99
  %114 = getelementptr inbounds i8, i8* %110, i64 %100
  %115 = getelementptr inbounds i8, i8* %106, i64 %101
  %116 = getelementptr inbounds i8, i8* %107, i64 %102
  %117 = getelementptr inbounds i8, i8* %109, i64 %103
  %118 = add nuw nsw i32 %105, 1
  %119 = icmp eq i32 %118, %39
  br i1 %119, label %120, label %104

120:                                              ; preds = %112, %94, %14
  %121 = phi i32 [ -1, %14 ], [ 0, %94 ], [ 0, %112 ]
  ret i32 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I444AlphaToARGBMatrix(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32, i32) local_unnamed_addr #0 {
  %15 = icmp ne i8* %0, null
  %16 = icmp ne i8* %2, null
  %17 = and i1 %15, %16
  %18 = icmp ne i8* %4, null
  %19 = and i1 %17, %18
  %20 = icmp ne i8* %8, null
  %21 = and i1 %19, %20
  %22 = xor i1 %21, true
  %23 = icmp slt i32 %11, 1
  %24 = or i1 %23, %22
  %25 = icmp eq i32 %12, 0
  %26 = or i1 %24, %25
  br i1 %26, label %120, label %27

27:                                               ; preds = %14
  %28 = icmp slt i32 %12, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %27
  %30 = sub nsw i32 0, %12
  %31 = xor i32 %12, -1
  %32 = mul nsw i32 %31, %9
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %8, i64 %33
  %35 = sub nsw i32 0, %9
  br label %36

36:                                               ; preds = %29, %27
  %37 = phi i8* [ %34, %29 ], [ %8, %27 ]
  %38 = phi i32 [ %35, %29 ], [ %9, %27 ]
  %39 = phi i32 [ %30, %29 ], [ %12, %27 ]
  %40 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = tail call i32 @InitCpuFlags() #4
  br label %44

44:                                               ; preds = %36, %42
  %45 = phi i32 [ %43, %42 ], [ %40, %36 ]
  %46 = and i32 %45, 64
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = and i32 %11, 7
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I444AlphaToARGBRow_SSSE3, void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I444AlphaToARGBRow_Any_SSSE3
  br label %52

52:                                               ; preds = %44, %48
  %53 = phi void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %51, %48 ], [ @I444AlphaToARGBRow_C, %44 ]
  %54 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = tail call i32 @InitCpuFlags() #4
  br label %58

58:                                               ; preds = %52, %56
  %59 = phi i32 [ %57, %56 ], [ %54, %52 ]
  %60 = and i32 %59, 1024
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %58
  %63 = and i32 %11, 15
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I444AlphaToARGBRow_AVX2, void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I444AlphaToARGBRow_Any_AVX2
  br label %66

66:                                               ; preds = %58, %62
  %67 = phi void (i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %65, %62 ], [ %53, %58 ]
  %68 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = tail call i32 @InitCpuFlags() #4
  br label %72

72:                                               ; preds = %66, %70
  %73 = phi i32 [ %71, %70 ], [ %68, %66 ]
  %74 = and i32 %73, 64
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %72
  %77 = and i32 %11, 3
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %78, void (i8*, i8*, i32)* @ARGBAttenuateRow_SSSE3, void (i8*, i8*, i32)* @ARGBAttenuateRow_Any_SSSE3
  br label %80

80:                                               ; preds = %72, %76
  %81 = phi void (i8*, i8*, i32)* [ %79, %76 ], [ @ARGBAttenuateRow_C, %72 ]
  %82 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = tail call i32 @InitCpuFlags() #4
  br label %86

86:                                               ; preds = %80, %84
  %87 = phi i32 [ %85, %84 ], [ %82, %80 ]
  %88 = and i32 %87, 1024
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = and i32 %11, 7
  %92 = icmp eq i32 %91, 0
  %93 = select i1 %92, void (i8*, i8*, i32)* @ARGBAttenuateRow_AVX2, void (i8*, i8*, i32)* @ARGBAttenuateRow_Any_AVX2
  br label %94

94:                                               ; preds = %86, %90
  %95 = phi void (i8*, i8*, i32)* [ %93, %90 ], [ %81, %86 ]
  %96 = icmp sgt i32 %39, 0
  br i1 %96, label %97, label %120

97:                                               ; preds = %94
  %98 = icmp eq i32 %13, 0
  %99 = sext i32 %38 to i64
  %100 = sext i32 %7 to i64
  %101 = sext i32 %1 to i64
  %102 = sext i32 %3 to i64
  %103 = sext i32 %5 to i64
  br label %104

104:                                              ; preds = %112, %97
  %105 = phi i32 [ 0, %97 ], [ %118, %112 ]
  %106 = phi i8* [ %0, %97 ], [ %115, %112 ]
  %107 = phi i8* [ %2, %97 ], [ %116, %112 ]
  %108 = phi i8* [ %37, %97 ], [ %113, %112 ]
  %109 = phi i8* [ %4, %97 ], [ %117, %112 ]
  %110 = phi i8* [ %6, %97 ], [ %114, %112 ]
  tail call void %67(i8* %106, i8* %107, i8* %109, i8* %110, i8* %108, %"struct.libyuv::YuvConstants"* %10, i32 %11) #4
  br i1 %98, label %112, label %111

111:                                              ; preds = %104
  tail call void %95(i8* %108, i8* %108, i32 %11) #4
  br label %112

112:                                              ; preds = %104, %111
  %113 = getelementptr inbounds i8, i8* %108, i64 %99
  %114 = getelementptr inbounds i8, i8* %110, i64 %100
  %115 = getelementptr inbounds i8, i8* %106, i64 %101
  %116 = getelementptr inbounds i8, i8* %107, i64 %102
  %117 = getelementptr inbounds i8, i8* %109, i64 %103
  %118 = add nuw nsw i32 %105, 1
  %119 = icmp eq i32 %118, %39
  br i1 %119, label %120, label %104

120:                                              ; preds = %112, %94, %14
  %121 = phi i32 [ -1, %14 ], [ 0, %94 ], [ 0, %112 ]
  ret i32 %121
}

declare void @I444AlphaToARGBRow_C(i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I444AlphaToARGBRow_Any_SSSE3(i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I444AlphaToARGBRow_SSSE3(i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I444AlphaToARGBRow_Any_AVX2(i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I444AlphaToARGBRow_AVX2(i8*, i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420AlphaToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %14 = tail call i32 @I420AlphaToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, i8* %8, i32 %9, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %10, i32 %11, i32 %12)
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420AlphaToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %14 = tail call i32 @I420AlphaToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, i8* %8, i32 %9, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %10, i32 %11, i32 %12)
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I422AlphaToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %14 = tail call i32 @I422AlphaToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, i8* %8, i32 %9, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %10, i32 %11, i32 %12)
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I422AlphaToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %14 = tail call i32 @I422AlphaToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, i8* %8, i32 %9, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %10, i32 %11, i32 %12)
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I444AlphaToARGB(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %14 = tail call i32 @I444AlphaToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, i8* %8, i32 %9, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %10, i32 %11, i32 %12)
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I444AlphaToABGR(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %14 = tail call i32 @I444AlphaToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, i8* %8, i32 %9, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %10, i32 %11, i32 %12)
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I010AlphaToARGBMatrix(i16*, i32, i16*, i32, i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32, i32) local_unnamed_addr #0 {
  %15 = icmp ne i16* %0, null
  %16 = icmp ne i16* %2, null
  %17 = and i1 %15, %16
  %18 = icmp ne i16* %4, null
  %19 = and i1 %17, %18
  %20 = icmp ne i8* %8, null
  %21 = and i1 %19, %20
  %22 = xor i1 %21, true
  %23 = icmp slt i32 %11, 1
  %24 = or i1 %23, %22
  %25 = icmp eq i32 %12, 0
  %26 = or i1 %24, %25
  br i1 %26, label %124, label %27

27:                                               ; preds = %14
  %28 = icmp slt i32 %12, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %27
  %30 = sub nsw i32 0, %12
  %31 = xor i32 %12, -1
  %32 = mul nsw i32 %31, %9
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %8, i64 %33
  %35 = sub nsw i32 0, %9
  br label %36

36:                                               ; preds = %29, %27
  %37 = phi i8* [ %34, %29 ], [ %8, %27 ]
  %38 = phi i32 [ %35, %29 ], [ %9, %27 ]
  %39 = phi i32 [ %30, %29 ], [ %12, %27 ]
  %40 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = tail call i32 @InitCpuFlags() #4
  br label %44

44:                                               ; preds = %36, %42
  %45 = phi i32 [ %43, %42 ], [ %40, %36 ]
  %46 = and i32 %45, 64
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = and i32 %11, 7
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210AlphaToARGBRow_SSSE3, void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210AlphaToARGBRow_Any_SSSE3
  br label %52

52:                                               ; preds = %44, %48
  %53 = phi void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %51, %48 ], [ @I210AlphaToARGBRow_C, %44 ]
  %54 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = tail call i32 @InitCpuFlags() #4
  br label %58

58:                                               ; preds = %52, %56
  %59 = phi i32 [ %57, %56 ], [ %54, %52 ]
  %60 = and i32 %59, 1024
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %58
  %63 = and i32 %11, 15
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210AlphaToARGBRow_AVX2, void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210AlphaToARGBRow_Any_AVX2
  br label %66

66:                                               ; preds = %58, %62
  %67 = phi void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %65, %62 ], [ %53, %58 ]
  %68 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = tail call i32 @InitCpuFlags() #4
  br label %72

72:                                               ; preds = %66, %70
  %73 = phi i32 [ %71, %70 ], [ %68, %66 ]
  %74 = and i32 %73, 64
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %72
  %77 = and i32 %11, 3
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %78, void (i8*, i8*, i32)* @ARGBAttenuateRow_SSSE3, void (i8*, i8*, i32)* @ARGBAttenuateRow_Any_SSSE3
  br label %80

80:                                               ; preds = %72, %76
  %81 = phi void (i8*, i8*, i32)* [ %79, %76 ], [ @ARGBAttenuateRow_C, %72 ]
  %82 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = tail call i32 @InitCpuFlags() #4
  br label %86

86:                                               ; preds = %80, %84
  %87 = phi i32 [ %85, %84 ], [ %82, %80 ]
  %88 = and i32 %87, 1024
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = and i32 %11, 7
  %92 = icmp eq i32 %91, 0
  %93 = select i1 %92, void (i8*, i8*, i32)* @ARGBAttenuateRow_AVX2, void (i8*, i8*, i32)* @ARGBAttenuateRow_Any_AVX2
  br label %94

94:                                               ; preds = %86, %90
  %95 = phi void (i8*, i8*, i32)* [ %93, %90 ], [ %81, %86 ]
  %96 = icmp sgt i32 %39, 0
  br i1 %96, label %97, label %124

97:                                               ; preds = %94
  %98 = icmp eq i32 %13, 0
  %99 = sext i32 %38 to i64
  %100 = sext i32 %7 to i64
  %101 = sext i32 %1 to i64
  %102 = sext i32 %3 to i64
  %103 = sext i32 %5 to i64
  br label %104

104:                                              ; preds = %112, %97
  %105 = phi i32 [ 0, %97 ], [ %122, %112 ]
  %106 = phi i16* [ %0, %97 ], [ %115, %112 ]
  %107 = phi i16* [ %2, %97 ], [ %121, %112 ]
  %108 = phi i8* [ %37, %97 ], [ %113, %112 ]
  %109 = phi i16* [ %4, %97 ], [ %120, %112 ]
  %110 = phi i16* [ %6, %97 ], [ %114, %112 ]
  tail call void %67(i16* %106, i16* %107, i16* %109, i16* %110, i8* %108, %"struct.libyuv::YuvConstants"* %10, i32 %11) #4
  br i1 %98, label %112, label %111

111:                                              ; preds = %104
  tail call void %95(i8* %108, i8* %108, i32 %11) #4
  br label %112

112:                                              ; preds = %104, %111
  %113 = getelementptr inbounds i8, i8* %108, i64 %99
  %114 = getelementptr inbounds i16, i16* %110, i64 %100
  %115 = getelementptr inbounds i16, i16* %106, i64 %101
  %116 = and i32 %105, 1
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds i16, i16* %107, i64 %102
  %119 = getelementptr inbounds i16, i16* %109, i64 %103
  %120 = select i1 %117, i16* %109, i16* %119
  %121 = select i1 %117, i16* %107, i16* %118
  %122 = add nuw nsw i32 %105, 1
  %123 = icmp eq i32 %122, %39
  br i1 %123, label %124, label %104

124:                                              ; preds = %112, %94, %14
  %125 = phi i32 [ -1, %14 ], [ 0, %94 ], [ 0, %112 ]
  ret i32 %125
}

declare void @I210AlphaToARGBRow_C(i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I210AlphaToARGBRow_Any_SSSE3(i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I210AlphaToARGBRow_SSSE3(i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I210AlphaToARGBRow_Any_AVX2(i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I210AlphaToARGBRow_AVX2(i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I210AlphaToARGBMatrix(i16*, i32, i16*, i32, i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32, i32) local_unnamed_addr #0 {
  %15 = icmp ne i16* %0, null
  %16 = icmp ne i16* %2, null
  %17 = and i1 %15, %16
  %18 = icmp ne i16* %4, null
  %19 = and i1 %17, %18
  %20 = icmp ne i8* %8, null
  %21 = and i1 %19, %20
  %22 = xor i1 %21, true
  %23 = icmp slt i32 %11, 1
  %24 = or i1 %23, %22
  %25 = icmp eq i32 %12, 0
  %26 = or i1 %24, %25
  br i1 %26, label %120, label %27

27:                                               ; preds = %14
  %28 = icmp slt i32 %12, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %27
  %30 = sub nsw i32 0, %12
  %31 = xor i32 %12, -1
  %32 = mul nsw i32 %31, %9
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %8, i64 %33
  %35 = sub nsw i32 0, %9
  br label %36

36:                                               ; preds = %29, %27
  %37 = phi i8* [ %34, %29 ], [ %8, %27 ]
  %38 = phi i32 [ %35, %29 ], [ %9, %27 ]
  %39 = phi i32 [ %30, %29 ], [ %12, %27 ]
  %40 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = tail call i32 @InitCpuFlags() #4
  br label %44

44:                                               ; preds = %36, %42
  %45 = phi i32 [ %43, %42 ], [ %40, %36 ]
  %46 = and i32 %45, 64
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = and i32 %11, 7
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210AlphaToARGBRow_SSSE3, void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210AlphaToARGBRow_Any_SSSE3
  br label %52

52:                                               ; preds = %44, %48
  %53 = phi void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %51, %48 ], [ @I210AlphaToARGBRow_C, %44 ]
  %54 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = tail call i32 @InitCpuFlags() #4
  br label %58

58:                                               ; preds = %52, %56
  %59 = phi i32 [ %57, %56 ], [ %54, %52 ]
  %60 = and i32 %59, 1024
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %58
  %63 = and i32 %11, 15
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210AlphaToARGBRow_AVX2, void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I210AlphaToARGBRow_Any_AVX2
  br label %66

66:                                               ; preds = %58, %62
  %67 = phi void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %65, %62 ], [ %53, %58 ]
  %68 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = tail call i32 @InitCpuFlags() #4
  br label %72

72:                                               ; preds = %66, %70
  %73 = phi i32 [ %71, %70 ], [ %68, %66 ]
  %74 = and i32 %73, 64
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %72
  %77 = and i32 %11, 3
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %78, void (i8*, i8*, i32)* @ARGBAttenuateRow_SSSE3, void (i8*, i8*, i32)* @ARGBAttenuateRow_Any_SSSE3
  br label %80

80:                                               ; preds = %72, %76
  %81 = phi void (i8*, i8*, i32)* [ %79, %76 ], [ @ARGBAttenuateRow_C, %72 ]
  %82 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = tail call i32 @InitCpuFlags() #4
  br label %86

86:                                               ; preds = %80, %84
  %87 = phi i32 [ %85, %84 ], [ %82, %80 ]
  %88 = and i32 %87, 1024
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = and i32 %11, 7
  %92 = icmp eq i32 %91, 0
  %93 = select i1 %92, void (i8*, i8*, i32)* @ARGBAttenuateRow_AVX2, void (i8*, i8*, i32)* @ARGBAttenuateRow_Any_AVX2
  br label %94

94:                                               ; preds = %86, %90
  %95 = phi void (i8*, i8*, i32)* [ %93, %90 ], [ %81, %86 ]
  %96 = icmp sgt i32 %39, 0
  br i1 %96, label %97, label %120

97:                                               ; preds = %94
  %98 = icmp eq i32 %13, 0
  %99 = sext i32 %38 to i64
  %100 = sext i32 %7 to i64
  %101 = sext i32 %1 to i64
  %102 = sext i32 %3 to i64
  %103 = sext i32 %5 to i64
  br label %104

104:                                              ; preds = %112, %97
  %105 = phi i32 [ 0, %97 ], [ %118, %112 ]
  %106 = phi i16* [ %0, %97 ], [ %115, %112 ]
  %107 = phi i16* [ %2, %97 ], [ %116, %112 ]
  %108 = phi i8* [ %37, %97 ], [ %113, %112 ]
  %109 = phi i16* [ %4, %97 ], [ %117, %112 ]
  %110 = phi i16* [ %6, %97 ], [ %114, %112 ]
  tail call void %67(i16* %106, i16* %107, i16* %109, i16* %110, i8* %108, %"struct.libyuv::YuvConstants"* %10, i32 %11) #4
  br i1 %98, label %112, label %111

111:                                              ; preds = %104
  tail call void %95(i8* %108, i8* %108, i32 %11) #4
  br label %112

112:                                              ; preds = %104, %111
  %113 = getelementptr inbounds i8, i8* %108, i64 %99
  %114 = getelementptr inbounds i16, i16* %110, i64 %100
  %115 = getelementptr inbounds i16, i16* %106, i64 %101
  %116 = getelementptr inbounds i16, i16* %107, i64 %102
  %117 = getelementptr inbounds i16, i16* %109, i64 %103
  %118 = add nuw nsw i32 %105, 1
  %119 = icmp eq i32 %118, %39
  br i1 %119, label %120, label %104

120:                                              ; preds = %112, %94, %14
  %121 = phi i32 [ -1, %14 ], [ 0, %94 ], [ 0, %112 ]
  ret i32 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I410AlphaToARGBMatrix(i16*, i32, i16*, i32, i16*, i32, i16*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32, i32) local_unnamed_addr #0 {
  %15 = icmp ne i16* %0, null
  %16 = icmp ne i16* %2, null
  %17 = and i1 %15, %16
  %18 = icmp ne i16* %4, null
  %19 = and i1 %17, %18
  %20 = icmp ne i8* %8, null
  %21 = and i1 %19, %20
  %22 = xor i1 %21, true
  %23 = icmp slt i32 %11, 1
  %24 = or i1 %23, %22
  %25 = icmp eq i32 %12, 0
  %26 = or i1 %24, %25
  br i1 %26, label %120, label %27

27:                                               ; preds = %14
  %28 = icmp slt i32 %12, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %27
  %30 = sub nsw i32 0, %12
  %31 = xor i32 %12, -1
  %32 = mul nsw i32 %31, %9
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %8, i64 %33
  %35 = sub nsw i32 0, %9
  br label %36

36:                                               ; preds = %29, %27
  %37 = phi i8* [ %34, %29 ], [ %8, %27 ]
  %38 = phi i32 [ %35, %29 ], [ %9, %27 ]
  %39 = phi i32 [ %30, %29 ], [ %12, %27 ]
  %40 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = tail call i32 @InitCpuFlags() #4
  br label %44

44:                                               ; preds = %36, %42
  %45 = phi i32 [ %43, %42 ], [ %40, %36 ]
  %46 = and i32 %45, 64
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = and i32 %11, 7
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I410AlphaToARGBRow_SSSE3, void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I410AlphaToARGBRow_Any_SSSE3
  br label %52

52:                                               ; preds = %44, %48
  %53 = phi void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %51, %48 ], [ @I410AlphaToARGBRow_C, %44 ]
  %54 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = tail call i32 @InitCpuFlags() #4
  br label %58

58:                                               ; preds = %52, %56
  %59 = phi i32 [ %57, %56 ], [ %54, %52 ]
  %60 = and i32 %59, 1024
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %58
  %63 = and i32 %11, 15
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I410AlphaToARGBRow_AVX2, void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I410AlphaToARGBRow_Any_AVX2
  br label %66

66:                                               ; preds = %58, %62
  %67 = phi void (i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %65, %62 ], [ %53, %58 ]
  %68 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = tail call i32 @InitCpuFlags() #4
  br label %72

72:                                               ; preds = %66, %70
  %73 = phi i32 [ %71, %70 ], [ %68, %66 ]
  %74 = and i32 %73, 64
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %72
  %77 = and i32 %11, 3
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %78, void (i8*, i8*, i32)* @ARGBAttenuateRow_SSSE3, void (i8*, i8*, i32)* @ARGBAttenuateRow_Any_SSSE3
  br label %80

80:                                               ; preds = %72, %76
  %81 = phi void (i8*, i8*, i32)* [ %79, %76 ], [ @ARGBAttenuateRow_C, %72 ]
  %82 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = tail call i32 @InitCpuFlags() #4
  br label %86

86:                                               ; preds = %80, %84
  %87 = phi i32 [ %85, %84 ], [ %82, %80 ]
  %88 = and i32 %87, 1024
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = and i32 %11, 7
  %92 = icmp eq i32 %91, 0
  %93 = select i1 %92, void (i8*, i8*, i32)* @ARGBAttenuateRow_AVX2, void (i8*, i8*, i32)* @ARGBAttenuateRow_Any_AVX2
  br label %94

94:                                               ; preds = %86, %90
  %95 = phi void (i8*, i8*, i32)* [ %93, %90 ], [ %81, %86 ]
  %96 = icmp sgt i32 %39, 0
  br i1 %96, label %97, label %120

97:                                               ; preds = %94
  %98 = icmp eq i32 %13, 0
  %99 = sext i32 %38 to i64
  %100 = sext i32 %7 to i64
  %101 = sext i32 %1 to i64
  %102 = sext i32 %3 to i64
  %103 = sext i32 %5 to i64
  br label %104

104:                                              ; preds = %112, %97
  %105 = phi i32 [ 0, %97 ], [ %118, %112 ]
  %106 = phi i16* [ %0, %97 ], [ %115, %112 ]
  %107 = phi i16* [ %2, %97 ], [ %116, %112 ]
  %108 = phi i8* [ %37, %97 ], [ %113, %112 ]
  %109 = phi i16* [ %4, %97 ], [ %117, %112 ]
  %110 = phi i16* [ %6, %97 ], [ %114, %112 ]
  tail call void %67(i16* %106, i16* %107, i16* %109, i16* %110, i8* %108, %"struct.libyuv::YuvConstants"* %10, i32 %11) #4
  br i1 %98, label %112, label %111

111:                                              ; preds = %104
  tail call void %95(i8* %108, i8* %108, i32 %11) #4
  br label %112

112:                                              ; preds = %104, %111
  %113 = getelementptr inbounds i8, i8* %108, i64 %99
  %114 = getelementptr inbounds i16, i16* %110, i64 %100
  %115 = getelementptr inbounds i16, i16* %106, i64 %101
  %116 = getelementptr inbounds i16, i16* %107, i64 %102
  %117 = getelementptr inbounds i16, i16* %109, i64 %103
  %118 = add nuw nsw i32 %105, 1
  %119 = icmp eq i32 %118, %39
  br i1 %119, label %120, label %104

120:                                              ; preds = %112, %94, %14
  %121 = phi i32 [ -1, %14 ], [ 0, %94 ], [ 0, %112 ]
  ret i32 %121
}

declare void @I410AlphaToARGBRow_C(i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I410AlphaToARGBRow_Any_SSSE3(i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I410AlphaToARGBRow_SSSE3(i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I410AlphaToARGBRow_Any_AVX2(i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I410AlphaToARGBRow_AVX2(i16*, i16*, i16*, i16*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I400ToARGBMatrix(i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %8 = icmp eq i8* %0, null
  %9 = icmp eq i8* %2, null
  %10 = or i1 %8, %9
  %11 = icmp slt i32 %5, 1
  %12 = or i1 %10, %11
  %13 = icmp eq i32 %6, 0
  %14 = or i1 %12, %13
  br i1 %14, label %77, label %15

15:                                               ; preds = %7
  %16 = icmp slt i32 %6, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %15
  %18 = sub nsw i32 0, %6
  %19 = xor i32 %6, -1
  %20 = mul nsw i32 %19, %3
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %2, i64 %21
  %23 = sub nsw i32 0, %3
  br label %24

24:                                               ; preds = %17, %15
  %25 = phi i8* [ %22, %17 ], [ %2, %15 ]
  %26 = phi i32 [ %23, %17 ], [ %3, %15 ]
  %27 = phi i32 [ %18, %17 ], [ %6, %15 ]
  %28 = icmp eq i32 %1, %5
  %29 = shl nsw i32 %5, 2
  %30 = icmp eq i32 %26, %29
  %31 = and i1 %28, %30
  %32 = select i1 %31, i32 %27, i32 1
  %33 = mul nsw i32 %32, %5
  %34 = select i1 %31, i32 1, i32 %27
  %35 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %24
  %38 = tail call i32 @InitCpuFlags() #4
  br label %39

39:                                               ; preds = %24, %37
  %40 = phi i32 [ %38, %37 ], [ %35, %24 ]
  %41 = and i32 %40, 32
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = and i32 %33, 7
  %45 = icmp eq i32 %44, 0
  %46 = select i1 %45, void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I400ToARGBRow_SSE2, void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I400ToARGBRow_Any_SSE2
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %46, %43 ], [ @I400ToARGBRow_C, %39 ]
  %49 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = tail call i32 @InitCpuFlags() #4
  br label %53

53:                                               ; preds = %47, %51
  %54 = phi i32 [ %52, %51 ], [ %49, %47 ]
  %55 = and i32 %54, 1024
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = and i32 %33, 15
  %59 = icmp eq i32 %58, 0
  %60 = select i1 %59, void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I400ToARGBRow_AVX2, void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I400ToARGBRow_Any_AVX2
  br label %61

61:                                               ; preds = %53, %57
  %62 = phi void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %60, %57 ], [ %48, %53 ]
  %63 = icmp sgt i32 %34, 0
  br i1 %63, label %64, label %77

64:                                               ; preds = %61
  %65 = sext i32 %26 to i64
  %66 = select i1 %31, i64 0, i64 %65
  %67 = sext i32 %1 to i64
  %68 = select i1 %31, i64 0, i64 %67
  br label %69

69:                                               ; preds = %69, %64
  %70 = phi i32 [ 0, %64 ], [ %75, %69 ]
  %71 = phi i8* [ %25, %64 ], [ %73, %69 ]
  %72 = phi i8* [ %0, %64 ], [ %74, %69 ]
  tail call void %62(i8* %72, i8* %71, %"struct.libyuv::YuvConstants"* %4, i32 %33) #4
  %73 = getelementptr inbounds i8, i8* %71, i64 %66
  %74 = getelementptr inbounds i8, i8* %72, i64 %68
  %75 = add nuw nsw i32 %70, 1
  %76 = icmp eq i32 %75, %34
  br i1 %76, label %77, label %69

77:                                               ; preds = %69, %61, %7
  %78 = phi i32 [ -1, %7 ], [ 0, %61 ], [ 0, %69 ]
  ret i32 %78
}

declare void @I400ToARGBRow_C(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I400ToARGBRow_Any_SSE2(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I400ToARGBRow_SSE2(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I400ToARGBRow_Any_AVX2(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I400ToARGBRow_AVX2(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I400ToARGB(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = tail call i32 @I400ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %4, i32 %5)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @J400ToARGB(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %62, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = icmp eq i32 %25, %4
  %28 = shl nsw i32 %4, 2
  %29 = icmp eq i32 %28, %3
  %30 = and i1 %29, %27
  %31 = select i1 %30, i32 %26, i32 1
  %32 = mul nsw i32 %31, %4
  %33 = select i1 %30, i32 1, i32 %26
  %34 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %23
  %37 = tail call i32 @InitCpuFlags() #4
  br label %38

38:                                               ; preds = %23, %36
  %39 = phi i32 [ %37, %36 ], [ %34, %23 ]
  %40 = and i32 %39, 32
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = and i32 %32, 7
  %44 = icmp eq i32 %43, 0
  %45 = select i1 %44, void (i8*, i8*, i32)* @J400ToARGBRow_SSE2, void (i8*, i8*, i32)* @J400ToARGBRow_Any_SSE2
  br label %46

46:                                               ; preds = %38, %42
  %47 = phi void (i8*, i8*, i32)* [ %45, %42 ], [ @J400ToARGBRow_C, %38 ]
  %48 = icmp sgt i32 %33, 0
  br i1 %48, label %49, label %62

49:                                               ; preds = %46
  %50 = sext i32 %25 to i64
  %51 = select i1 %30, i64 0, i64 %50
  %52 = sext i32 %3 to i64
  %53 = select i1 %30, i64 0, i64 %52
  br label %54

54:                                               ; preds = %54, %49
  %55 = phi i32 [ 0, %49 ], [ %60, %54 ]
  %56 = phi i8* [ %2, %49 ], [ %59, %54 ]
  %57 = phi i8* [ %24, %49 ], [ %58, %54 ]
  tail call void %47(i8* %57, i8* %56, i32 %32) #4, !callees !2
  %58 = getelementptr inbounds i8, i8* %57, i64 %51
  %59 = getelementptr inbounds i8, i8* %56, i64 %53
  %60 = add nuw nsw i32 %55, 1
  %61 = icmp eq i32 %60, %33
  br i1 %61, label %62, label %54

62:                                               ; preds = %54, %46, %6
  %63 = phi i32 [ -1, %6 ], [ 0, %46 ], [ 0, %54 ]
  ret i32 %63
}

declare void @J400ToARGBRow_C(i8*, i8*, i32) local_unnamed_addr #1

declare void @J400ToARGBRow_Any_SSE2(i8*, i8*, i32) local_unnamed_addr #1

declare void @J400ToARGBRow_SSE2(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BGRAToARGB(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = tail call i32 @ARGBShuffle(i8* %0, i32 %1, i8* %2, i32 %3, i8* getelementptr (<16 x i8>, <16 x i8>* @_ZN6libyuvL22kShuffleMaskBGRAToARGBE, i64 0, i64 0), i32 %4, i32 %5) #4
  ret i32 %7
}

declare i32 @ARGBShuffle(i8*, i32, i8*, i32, i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ARGBToBGRA(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = tail call i32 @ARGBShuffle(i8* %0, i32 %1, i8* %2, i32 %3, i8* getelementptr (<16 x i8>, <16 x i8>* @_ZN6libyuvL22kShuffleMaskBGRAToARGBE, i64 0, i64 0), i32 %4, i32 %5) #4
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ABGRToARGB(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = tail call i32 @ARGBShuffle(i8* %0, i32 %1, i8* %2, i32 %3, i8* getelementptr (<16 x i8>, <16 x i8>* @_ZN6libyuvL22kShuffleMaskABGRToARGBE, i64 0, i64 0), i32 %4, i32 %5) #4
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ARGBToABGR(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = tail call i32 @ARGBShuffle(i8* %0, i32 %1, i8* %2, i32 %3, i8* getelementptr (<16 x i8>, <16 x i8>* @_ZN6libyuvL22kShuffleMaskABGRToARGBE, i64 0, i64 0), i32 %4, i32 %5) #4
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @RGBAToARGB(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = tail call i32 @ARGBShuffle(i8* %0, i32 %1, i8* %2, i32 %3, i8* getelementptr (<16 x i8>, <16 x i8>* @_ZN6libyuvL22kShuffleMaskRGBAToARGBE, i64 0, i64 0), i32 %4, i32 %5) #4
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @AR64ToAB64(i16*, i32, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = tail call i32 @AR64Shuffle(i16* %0, i32 %1, i16* %2, i32 %3, i8* getelementptr (<16 x i8>, <16 x i8>* @_ZN6libyuvL22kShuffleMaskAR64ToAB64E, i64 0, i64 0), i32 %4, i32 %5) #4
  ret i32 %7
}

declare i32 @AR64Shuffle(i16*, i32, i16*, i32, i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @RGB24ToARGB(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %63, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = mul nsw i32 %4, 3
  %28 = icmp eq i32 %25, %27
  %29 = shl nsw i32 %4, 2
  %30 = icmp eq i32 %29, %3
  %31 = and i1 %30, %28
  %32 = select i1 %31, i32 %26, i32 1
  %33 = mul nsw i32 %32, %4
  %34 = select i1 %31, i32 1, i32 %26
  %35 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %23
  %38 = tail call i32 @InitCpuFlags() #4
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi i32 [ %38, %37 ], [ %35, %23 ]
  %41 = and i32 %40, 64
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = and i32 %33, 15
  %45 = icmp eq i32 %44, 0
  %46 = select i1 %45, void (i8*, i8*, i32)* @RGB24ToARGBRow_SSSE3, void (i8*, i8*, i32)* @RGB24ToARGBRow_Any_SSSE3
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi void (i8*, i8*, i32)* [ %46, %43 ], [ @RGB24ToARGBRow_C, %39 ]
  %49 = icmp sgt i32 %34, 0
  br i1 %49, label %50, label %63

50:                                               ; preds = %47
  %51 = sext i32 %25 to i64
  %52 = select i1 %31, i64 0, i64 %51
  %53 = sext i32 %3 to i64
  %54 = select i1 %31, i64 0, i64 %53
  br label %55

55:                                               ; preds = %55, %50
  %56 = phi i32 [ 0, %50 ], [ %61, %55 ]
  %57 = phi i8* [ %2, %50 ], [ %60, %55 ]
  %58 = phi i8* [ %24, %50 ], [ %59, %55 ]
  tail call void %48(i8* %58, i8* %57, i32 %33) #4, !callees !3
  %59 = getelementptr inbounds i8, i8* %58, i64 %52
  %60 = getelementptr inbounds i8, i8* %57, i64 %54
  %61 = add nuw nsw i32 %56, 1
  %62 = icmp eq i32 %61, %34
  br i1 %62, label %63, label %55

63:                                               ; preds = %55, %47, %6
  %64 = phi i32 [ -1, %6 ], [ 0, %47 ], [ 0, %55 ]
  ret i32 %64
}

declare void @RGB24ToARGBRow_C(i8*, i8*, i32) local_unnamed_addr #1

declare void @RGB24ToARGBRow_Any_SSSE3(i8*, i8*, i32) local_unnamed_addr #1

declare void @RGB24ToARGBRow_SSSE3(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @RAWToARGB(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %63, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = mul nsw i32 %4, 3
  %28 = icmp eq i32 %25, %27
  %29 = shl nsw i32 %4, 2
  %30 = icmp eq i32 %29, %3
  %31 = and i1 %30, %28
  %32 = select i1 %31, i32 %26, i32 1
  %33 = mul nsw i32 %32, %4
  %34 = select i1 %31, i32 1, i32 %26
  %35 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %23
  %38 = tail call i32 @InitCpuFlags() #4
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi i32 [ %38, %37 ], [ %35, %23 ]
  %41 = and i32 %40, 64
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = and i32 %33, 15
  %45 = icmp eq i32 %44, 0
  %46 = select i1 %45, void (i8*, i8*, i32)* @RAWToARGBRow_SSSE3, void (i8*, i8*, i32)* @RAWToARGBRow_Any_SSSE3
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi void (i8*, i8*, i32)* [ %46, %43 ], [ @RAWToARGBRow_C, %39 ]
  %49 = icmp sgt i32 %34, 0
  br i1 %49, label %50, label %63

50:                                               ; preds = %47
  %51 = sext i32 %25 to i64
  %52 = select i1 %31, i64 0, i64 %51
  %53 = sext i32 %3 to i64
  %54 = select i1 %31, i64 0, i64 %53
  br label %55

55:                                               ; preds = %55, %50
  %56 = phi i32 [ 0, %50 ], [ %61, %55 ]
  %57 = phi i8* [ %2, %50 ], [ %60, %55 ]
  %58 = phi i8* [ %24, %50 ], [ %59, %55 ]
  tail call void %48(i8* %58, i8* %57, i32 %33) #4, !callees !4
  %59 = getelementptr inbounds i8, i8* %58, i64 %52
  %60 = getelementptr inbounds i8, i8* %57, i64 %54
  %61 = add nuw nsw i32 %56, 1
  %62 = icmp eq i32 %61, %34
  br i1 %62, label %63, label %55

63:                                               ; preds = %55, %47, %6
  %64 = phi i32 [ -1, %6 ], [ 0, %47 ], [ 0, %55 ]
  ret i32 %64
}

declare void @RAWToARGBRow_C(i8*, i8*, i32) local_unnamed_addr #1

declare void @RAWToARGBRow_Any_SSSE3(i8*, i8*, i32) local_unnamed_addr #1

declare void @RAWToARGBRow_SSSE3(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @RAWToRGBA(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %63, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = mul nsw i32 %4, 3
  %28 = icmp eq i32 %25, %27
  %29 = shl nsw i32 %4, 2
  %30 = icmp eq i32 %29, %3
  %31 = and i1 %30, %28
  %32 = select i1 %31, i32 %26, i32 1
  %33 = mul nsw i32 %32, %4
  %34 = select i1 %31, i32 1, i32 %26
  %35 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %23
  %38 = tail call i32 @InitCpuFlags() #4
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi i32 [ %38, %37 ], [ %35, %23 ]
  %41 = and i32 %40, 64
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = and i32 %33, 15
  %45 = icmp eq i32 %44, 0
  %46 = select i1 %45, void (i8*, i8*, i32)* @RAWToRGBARow_SSSE3, void (i8*, i8*, i32)* @RAWToRGBARow_Any_SSSE3
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi void (i8*, i8*, i32)* [ %46, %43 ], [ @RAWToRGBARow_C, %39 ]
  %49 = icmp sgt i32 %34, 0
  br i1 %49, label %50, label %63

50:                                               ; preds = %47
  %51 = sext i32 %25 to i64
  %52 = select i1 %31, i64 0, i64 %51
  %53 = sext i32 %3 to i64
  %54 = select i1 %31, i64 0, i64 %53
  br label %55

55:                                               ; preds = %55, %50
  %56 = phi i32 [ 0, %50 ], [ %61, %55 ]
  %57 = phi i8* [ %2, %50 ], [ %60, %55 ]
  %58 = phi i8* [ %24, %50 ], [ %59, %55 ]
  tail call void %48(i8* %58, i8* %57, i32 %33) #4, !callees !5
  %59 = getelementptr inbounds i8, i8* %58, i64 %52
  %60 = getelementptr inbounds i8, i8* %57, i64 %54
  %61 = add nuw nsw i32 %56, 1
  %62 = icmp eq i32 %61, %34
  br i1 %62, label %63, label %55

63:                                               ; preds = %55, %47, %6
  %64 = phi i32 [ -1, %6 ], [ 0, %47 ], [ 0, %55 ]
  ret i32 %64
}

declare void @RAWToRGBARow_C(i8*, i8*, i32) local_unnamed_addr #1

declare void @RAWToRGBARow_Any_SSSE3(i8*, i8*, i32) local_unnamed_addr #1

declare void @RAWToRGBARow_SSSE3(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @RGB565ToARGB(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %63, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = shl nsw i32 %4, 1
  %28 = icmp eq i32 %25, %27
  %29 = shl nsw i32 %4, 2
  %30 = icmp eq i32 %29, %3
  %31 = and i1 %30, %28
  %32 = select i1 %31, i32 %26, i32 1
  %33 = mul nsw i32 %32, %4
  %34 = select i1 %31, i32 1, i32 %26
  %35 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %23
  %38 = tail call i32 @InitCpuFlags() #4
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi i32 [ %38, %37 ], [ %35, %23 ]
  %41 = and i32 %40, 32
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = and i32 %33, 7
  %45 = icmp eq i32 %44, 0
  %46 = select i1 %45, void (i8*, i8*, i32)* @RGB565ToARGBRow_SSE2, void (i8*, i8*, i32)* @RGB565ToARGBRow_Any_SSE2
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi void (i8*, i8*, i32)* [ %46, %43 ], [ @RGB565ToARGBRow_C, %39 ]
  %49 = icmp sgt i32 %34, 0
  br i1 %49, label %50, label %63

50:                                               ; preds = %47
  %51 = sext i32 %25 to i64
  %52 = select i1 %31, i64 0, i64 %51
  %53 = sext i32 %3 to i64
  %54 = select i1 %31, i64 0, i64 %53
  br label %55

55:                                               ; preds = %55, %50
  %56 = phi i32 [ 0, %50 ], [ %61, %55 ]
  %57 = phi i8* [ %2, %50 ], [ %60, %55 ]
  %58 = phi i8* [ %24, %50 ], [ %59, %55 ]
  tail call void %48(i8* %58, i8* %57, i32 %33) #4, !callees !6
  %59 = getelementptr inbounds i8, i8* %58, i64 %52
  %60 = getelementptr inbounds i8, i8* %57, i64 %54
  %61 = add nuw nsw i32 %56, 1
  %62 = icmp eq i32 %61, %34
  br i1 %62, label %63, label %55

63:                                               ; preds = %55, %47, %6
  %64 = phi i32 [ -1, %6 ], [ 0, %47 ], [ 0, %55 ]
  ret i32 %64
}

declare void @RGB565ToARGBRow_C(i8*, i8*, i32) local_unnamed_addr #1

declare void @RGB565ToARGBRow_Any_SSE2(i8*, i8*, i32) local_unnamed_addr #1

declare void @RGB565ToARGBRow_SSE2(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ARGB1555ToARGB(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %63, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = shl nsw i32 %4, 1
  %28 = icmp eq i32 %25, %27
  %29 = shl nsw i32 %4, 2
  %30 = icmp eq i32 %29, %3
  %31 = and i1 %30, %28
  %32 = select i1 %31, i32 %26, i32 1
  %33 = mul nsw i32 %32, %4
  %34 = select i1 %31, i32 1, i32 %26
  %35 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %23
  %38 = tail call i32 @InitCpuFlags() #4
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi i32 [ %38, %37 ], [ %35, %23 ]
  %41 = and i32 %40, 32
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = and i32 %33, 7
  %45 = icmp eq i32 %44, 0
  %46 = select i1 %45, void (i8*, i8*, i32)* @ARGB1555ToARGBRow_SSE2, void (i8*, i8*, i32)* @ARGB1555ToARGBRow_Any_SSE2
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi void (i8*, i8*, i32)* [ %46, %43 ], [ @ARGB1555ToARGBRow_C, %39 ]
  %49 = icmp sgt i32 %34, 0
  br i1 %49, label %50, label %63

50:                                               ; preds = %47
  %51 = sext i32 %25 to i64
  %52 = select i1 %31, i64 0, i64 %51
  %53 = sext i32 %3 to i64
  %54 = select i1 %31, i64 0, i64 %53
  br label %55

55:                                               ; preds = %55, %50
  %56 = phi i32 [ 0, %50 ], [ %61, %55 ]
  %57 = phi i8* [ %2, %50 ], [ %60, %55 ]
  %58 = phi i8* [ %24, %50 ], [ %59, %55 ]
  tail call void %48(i8* %58, i8* %57, i32 %33) #4, !callees !7
  %59 = getelementptr inbounds i8, i8* %58, i64 %52
  %60 = getelementptr inbounds i8, i8* %57, i64 %54
  %61 = add nuw nsw i32 %56, 1
  %62 = icmp eq i32 %61, %34
  br i1 %62, label %63, label %55

63:                                               ; preds = %55, %47, %6
  %64 = phi i32 [ -1, %6 ], [ 0, %47 ], [ 0, %55 ]
  ret i32 %64
}

declare void @ARGB1555ToARGBRow_C(i8*, i8*, i32) local_unnamed_addr #1

declare void @ARGB1555ToARGBRow_Any_SSE2(i8*, i8*, i32) local_unnamed_addr #1

declare void @ARGB1555ToARGBRow_SSE2(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ARGB4444ToARGB(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %63, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = shl nsw i32 %4, 1
  %28 = icmp eq i32 %25, %27
  %29 = shl nsw i32 %4, 2
  %30 = icmp eq i32 %29, %3
  %31 = and i1 %30, %28
  %32 = select i1 %31, i32 %26, i32 1
  %33 = mul nsw i32 %32, %4
  %34 = select i1 %31, i32 1, i32 %26
  %35 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %23
  %38 = tail call i32 @InitCpuFlags() #4
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi i32 [ %38, %37 ], [ %35, %23 ]
  %41 = and i32 %40, 32
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = and i32 %33, 7
  %45 = icmp eq i32 %44, 0
  %46 = select i1 %45, void (i8*, i8*, i32)* @ARGB4444ToARGBRow_SSE2, void (i8*, i8*, i32)* @ARGB4444ToARGBRow_Any_SSE2
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi void (i8*, i8*, i32)* [ %46, %43 ], [ @ARGB4444ToARGBRow_C, %39 ]
  %49 = icmp sgt i32 %34, 0
  br i1 %49, label %50, label %63

50:                                               ; preds = %47
  %51 = sext i32 %25 to i64
  %52 = select i1 %31, i64 0, i64 %51
  %53 = sext i32 %3 to i64
  %54 = select i1 %31, i64 0, i64 %53
  br label %55

55:                                               ; preds = %55, %50
  %56 = phi i32 [ 0, %50 ], [ %61, %55 ]
  %57 = phi i8* [ %2, %50 ], [ %60, %55 ]
  %58 = phi i8* [ %24, %50 ], [ %59, %55 ]
  tail call void %48(i8* %58, i8* %57, i32 %33) #4, !callees !8
  %59 = getelementptr inbounds i8, i8* %58, i64 %52
  %60 = getelementptr inbounds i8, i8* %57, i64 %54
  %61 = add nuw nsw i32 %56, 1
  %62 = icmp eq i32 %61, %34
  br i1 %62, label %63, label %55

63:                                               ; preds = %55, %47, %6
  %64 = phi i32 [ -1, %6 ], [ 0, %47 ], [ 0, %55 ]
  ret i32 %64
}

declare void @ARGB4444ToARGBRow_C(i8*, i8*, i32) local_unnamed_addr #1

declare void @ARGB4444ToARGBRow_Any_SSE2(i8*, i8*, i32) local_unnamed_addr #1

declare void @ARGB4444ToARGBRow_SSE2(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @AR30ToARGB(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %48, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = shl nsw i32 %4, 2
  %28 = icmp eq i32 %25, %27
  %29 = icmp eq i32 %27, %3
  %30 = and i1 %29, %28
  %31 = select i1 %30, i32 %26, i32 1
  %32 = mul nsw i32 %31, %4
  %33 = select i1 %30, i32 1, i32 %26
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %48

35:                                               ; preds = %23
  %36 = sext i32 %25 to i64
  %37 = select i1 %30, i64 0, i64 %36
  %38 = sext i32 %3 to i64
  %39 = select i1 %30, i64 0, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi i32 [ 0, %35 ], [ %46, %40 ]
  %42 = phi i8* [ %2, %35 ], [ %45, %40 ]
  %43 = phi i8* [ %24, %35 ], [ %44, %40 ]
  tail call void @AR30ToARGBRow_C(i8* %43, i8* %42, i32 %32) #4
  %44 = getelementptr inbounds i8, i8* %43, i64 %37
  %45 = getelementptr inbounds i8, i8* %42, i64 %39
  %46 = add nuw nsw i32 %41, 1
  %47 = icmp eq i32 %46, %33
  br i1 %47, label %48, label %40

48:                                               ; preds = %40, %23, %6
  %49 = phi i32 [ -1, %6 ], [ 0, %23 ], [ 0, %40 ]
  ret i32 %49
}

declare void @AR30ToARGBRow_C(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @AR30ToABGR(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %48, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = shl nsw i32 %4, 2
  %28 = icmp eq i32 %25, %27
  %29 = icmp eq i32 %27, %3
  %30 = and i1 %29, %28
  %31 = select i1 %30, i32 %26, i32 1
  %32 = mul nsw i32 %31, %4
  %33 = select i1 %30, i32 1, i32 %26
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %48

35:                                               ; preds = %23
  %36 = sext i32 %25 to i64
  %37 = select i1 %30, i64 0, i64 %36
  %38 = sext i32 %3 to i64
  %39 = select i1 %30, i64 0, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi i32 [ 0, %35 ], [ %46, %40 ]
  %42 = phi i8* [ %2, %35 ], [ %45, %40 ]
  %43 = phi i8* [ %24, %35 ], [ %44, %40 ]
  tail call void @AR30ToABGRRow_C(i8* %43, i8* %42, i32 %32) #4
  %44 = getelementptr inbounds i8, i8* %43, i64 %37
  %45 = getelementptr inbounds i8, i8* %42, i64 %39
  %46 = add nuw nsw i32 %41, 1
  %47 = icmp eq i32 %46, %33
  br i1 %47, label %48, label %40

48:                                               ; preds = %40, %23, %6
  %49 = phi i32 [ -1, %6 ], [ 0, %23 ], [ 0, %40 ]
  ret i32 %49
}

declare void @AR30ToABGRRow_C(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @AR30ToAB30(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %48, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = shl nsw i32 %4, 2
  %28 = icmp eq i32 %25, %27
  %29 = icmp eq i32 %27, %3
  %30 = and i1 %29, %28
  %31 = select i1 %30, i32 %26, i32 1
  %32 = mul nsw i32 %31, %4
  %33 = select i1 %30, i32 1, i32 %26
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %48

35:                                               ; preds = %23
  %36 = sext i32 %25 to i64
  %37 = select i1 %30, i64 0, i64 %36
  %38 = sext i32 %3 to i64
  %39 = select i1 %30, i64 0, i64 %38
  br label %40

40:                                               ; preds = %40, %35
  %41 = phi i32 [ 0, %35 ], [ %46, %40 ]
  %42 = phi i8* [ %2, %35 ], [ %45, %40 ]
  %43 = phi i8* [ %24, %35 ], [ %44, %40 ]
  tail call void @AR30ToAB30Row_C(i8* %43, i8* %42, i32 %32) #4
  %44 = getelementptr inbounds i8, i8* %43, i64 %37
  %45 = getelementptr inbounds i8, i8* %42, i64 %39
  %46 = add nuw nsw i32 %41, 1
  %47 = icmp eq i32 %46, %33
  br i1 %47, label %48, label %40

48:                                               ; preds = %40, %23, %6
  %49 = phi i32 [ -1, %6 ], [ 0, %23 ], [ 0, %40 ]
  ret i32 %49
}

declare void @AR30ToAB30Row_C(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @AR64ToARGB(i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i16* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %76, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i16* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = shl nsw i32 %4, 2
  %28 = icmp eq i32 %25, %27
  %29 = icmp eq i32 %27, %3
  %30 = and i1 %29, %28
  %31 = select i1 %30, i32 %26, i32 1
  %32 = mul nsw i32 %31, %4
  %33 = select i1 %30, i32 1, i32 %26
  %34 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %23
  %37 = tail call i32 @InitCpuFlags() #4
  br label %38

38:                                               ; preds = %23, %36
  %39 = phi i32 [ %37, %36 ], [ %34, %23 ]
  %40 = and i32 %39, 64
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = and i32 %32, 3
  %44 = icmp eq i32 %43, 0
  %45 = select i1 %44, void (i16*, i8*, i32)* @AR64ToARGBRow_SSSE3, void (i16*, i8*, i32)* @AR64ToARGBRow_Any_SSSE3
  br label %46

46:                                               ; preds = %38, %42
  %47 = phi void (i16*, i8*, i32)* [ %45, %42 ], [ @AR64ToARGBRow_C, %38 ]
  %48 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = tail call i32 @InitCpuFlags() #4
  br label %52

52:                                               ; preds = %46, %50
  %53 = phi i32 [ %51, %50 ], [ %48, %46 ]
  %54 = and i32 %53, 1024
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = and i32 %32, 7
  %58 = icmp eq i32 %57, 0
  %59 = select i1 %58, void (i16*, i8*, i32)* @AR64ToARGBRow_AVX2, void (i16*, i8*, i32)* @AR64ToARGBRow_Any_AVX2
  br label %60

60:                                               ; preds = %52, %56
  %61 = phi void (i16*, i8*, i32)* [ %59, %56 ], [ %47, %52 ]
  %62 = icmp sgt i32 %33, 0
  br i1 %62, label %63, label %76

63:                                               ; preds = %60
  %64 = sext i32 %25 to i64
  %65 = select i1 %30, i64 0, i64 %64
  %66 = sext i32 %3 to i64
  %67 = select i1 %30, i64 0, i64 %66
  br label %68

68:                                               ; preds = %68, %63
  %69 = phi i32 [ 0, %63 ], [ %74, %68 ]
  %70 = phi i8* [ %2, %63 ], [ %73, %68 ]
  %71 = phi i16* [ %24, %63 ], [ %72, %68 ]
  tail call void %61(i16* %71, i8* %70, i32 %32) #4
  %72 = getelementptr inbounds i16, i16* %71, i64 %65
  %73 = getelementptr inbounds i8, i8* %70, i64 %67
  %74 = add nuw nsw i32 %69, 1
  %75 = icmp eq i32 %74, %33
  br i1 %75, label %76, label %68

76:                                               ; preds = %68, %60, %6
  %77 = phi i32 [ -1, %6 ], [ 0, %60 ], [ 0, %68 ]
  ret i32 %77
}

declare void @AR64ToARGBRow_C(i16*, i8*, i32) local_unnamed_addr #1

declare void @AR64ToARGBRow_Any_SSSE3(i16*, i8*, i32) local_unnamed_addr #1

declare void @AR64ToARGBRow_SSSE3(i16*, i8*, i32) local_unnamed_addr #1

declare void @AR64ToARGBRow_Any_AVX2(i16*, i8*, i32) local_unnamed_addr #1

declare void @AR64ToARGBRow_AVX2(i16*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @AB64ToARGB(i16*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i16* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %76, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i16* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = shl nsw i32 %4, 2
  %28 = icmp eq i32 %25, %27
  %29 = icmp eq i32 %27, %3
  %30 = and i1 %29, %28
  %31 = select i1 %30, i32 %26, i32 1
  %32 = mul nsw i32 %31, %4
  %33 = select i1 %30, i32 1, i32 %26
  %34 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %23
  %37 = tail call i32 @InitCpuFlags() #4
  br label %38

38:                                               ; preds = %23, %36
  %39 = phi i32 [ %37, %36 ], [ %34, %23 ]
  %40 = and i32 %39, 64
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = and i32 %32, 3
  %44 = icmp eq i32 %43, 0
  %45 = select i1 %44, void (i16*, i8*, i32)* @AB64ToARGBRow_SSSE3, void (i16*, i8*, i32)* @AB64ToARGBRow_Any_SSSE3
  br label %46

46:                                               ; preds = %38, %42
  %47 = phi void (i16*, i8*, i32)* [ %45, %42 ], [ @AB64ToARGBRow_C, %38 ]
  %48 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = tail call i32 @InitCpuFlags() #4
  br label %52

52:                                               ; preds = %46, %50
  %53 = phi i32 [ %51, %50 ], [ %48, %46 ]
  %54 = and i32 %53, 1024
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = and i32 %32, 7
  %58 = icmp eq i32 %57, 0
  %59 = select i1 %58, void (i16*, i8*, i32)* @AB64ToARGBRow_AVX2, void (i16*, i8*, i32)* @AB64ToARGBRow_Any_AVX2
  br label %60

60:                                               ; preds = %52, %56
  %61 = phi void (i16*, i8*, i32)* [ %59, %56 ], [ %47, %52 ]
  %62 = icmp sgt i32 %33, 0
  br i1 %62, label %63, label %76

63:                                               ; preds = %60
  %64 = sext i32 %25 to i64
  %65 = select i1 %30, i64 0, i64 %64
  %66 = sext i32 %3 to i64
  %67 = select i1 %30, i64 0, i64 %66
  br label %68

68:                                               ; preds = %68, %63
  %69 = phi i32 [ 0, %63 ], [ %74, %68 ]
  %70 = phi i8* [ %2, %63 ], [ %73, %68 ]
  %71 = phi i16* [ %24, %63 ], [ %72, %68 ]
  tail call void %61(i16* %71, i8* %70, i32 %32) #4
  %72 = getelementptr inbounds i16, i16* %71, i64 %65
  %73 = getelementptr inbounds i8, i8* %70, i64 %67
  %74 = add nuw nsw i32 %69, 1
  %75 = icmp eq i32 %74, %33
  br i1 %75, label %76, label %68

76:                                               ; preds = %68, %60, %6
  %77 = phi i32 [ -1, %6 ], [ 0, %60 ], [ 0, %68 ]
  ret i32 %77
}

declare void @AB64ToARGBRow_C(i16*, i8*, i32) local_unnamed_addr #1

declare void @AB64ToARGBRow_Any_SSSE3(i16*, i8*, i32) local_unnamed_addr #1

declare void @AB64ToARGBRow_SSSE3(i16*, i8*, i32) local_unnamed_addr #1

declare void @AB64ToARGBRow_Any_AVX2(i16*, i8*, i32) local_unnamed_addr #1

declare void @AB64ToARGBRow_AVX2(i16*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV12ToARGBMatrix(i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %10 = icmp ne i8* %0, null
  %11 = icmp ne i8* %2, null
  %12 = and i1 %10, %11
  %13 = icmp ne i8* %4, null
  %14 = and i1 %12, %13
  %15 = xor i1 %14, true
  %16 = icmp slt i32 %7, 1
  %17 = or i1 %16, %15
  %18 = icmp eq i32 %8, 0
  %19 = or i1 %17, %18
  br i1 %19, label %79, label %20

20:                                               ; preds = %9
  %21 = icmp slt i32 %8, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %20
  %23 = sub nsw i32 0, %8
  %24 = xor i32 %8, -1
  %25 = mul nsw i32 %24, %5
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = sub nsw i32 0, %5
  br label %29

29:                                               ; preds = %22, %20
  %30 = phi i8* [ %27, %22 ], [ %4, %20 ]
  %31 = phi i32 [ %28, %22 ], [ %5, %20 ]
  %32 = phi i32 [ %23, %22 ], [ %8, %20 ]
  %33 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call i32 @InitCpuFlags() #4
  br label %37

37:                                               ; preds = %29, %35
  %38 = phi i32 [ %36, %35 ], [ %33, %29 ]
  %39 = and i32 %38, 64
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = and i32 %7, 7
  %43 = icmp eq i32 %42, 0
  %44 = select i1 %43, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV12ToARGBRow_SSSE3, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV12ToARGBRow_Any_SSSE3
  br label %45

45:                                               ; preds = %37, %41
  %46 = phi void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %44, %41 ], [ @NV12ToARGBRow_C, %37 ]
  %47 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = tail call i32 @InitCpuFlags() #4
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i32 [ %50, %49 ], [ %47, %45 ]
  %53 = and i32 %52, 1024
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = and i32 %7, 15
  %57 = icmp eq i32 %56, 0
  %58 = select i1 %57, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV12ToARGBRow_AVX2, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV12ToARGBRow_Any_AVX2
  br label %59

59:                                               ; preds = %51, %55
  %60 = phi void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %58, %55 ], [ %46, %51 ]
  %61 = icmp sgt i32 %32, 0
  br i1 %61, label %62, label %79

62:                                               ; preds = %59
  %63 = sext i32 %31 to i64
  %64 = sext i32 %1 to i64
  %65 = sext i32 %3 to i64
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i32 [ 0, %62 ], [ %77, %66 ]
  %68 = phi i8* [ %0, %62 ], [ %72, %66 ]
  %69 = phi i8* [ %30, %62 ], [ %71, %66 ]
  %70 = phi i8* [ %2, %62 ], [ %76, %66 ]
  tail call void %60(i8* %68, i8* %70, i8* %69, %"struct.libyuv::YuvConstants"* %6, i32 %7) #4
  %71 = getelementptr inbounds i8, i8* %69, i64 %63
  %72 = getelementptr inbounds i8, i8* %68, i64 %64
  %73 = and i32 %67, 1
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds i8, i8* %70, i64 %65
  %76 = select i1 %74, i8* %70, i8* %75
  %77 = add nuw nsw i32 %67, 1
  %78 = icmp eq i32 %77, %32
  br i1 %78, label %79, label %66

79:                                               ; preds = %66, %59, %9
  %80 = phi i32 [ -1, %9 ], [ 0, %59 ], [ 0, %66 ]
  ret i32 %80
}

declare void @NV12ToARGBRow_C(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV12ToARGBRow_Any_SSSE3(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV12ToARGBRow_SSSE3(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV12ToARGBRow_Any_AVX2(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV12ToARGBRow_AVX2(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV21ToARGBMatrix(i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %10 = icmp ne i8* %0, null
  %11 = icmp ne i8* %2, null
  %12 = and i1 %10, %11
  %13 = icmp ne i8* %4, null
  %14 = and i1 %12, %13
  %15 = xor i1 %14, true
  %16 = icmp slt i32 %7, 1
  %17 = or i1 %16, %15
  %18 = icmp eq i32 %8, 0
  %19 = or i1 %17, %18
  br i1 %19, label %79, label %20

20:                                               ; preds = %9
  %21 = icmp slt i32 %8, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %20
  %23 = sub nsw i32 0, %8
  %24 = xor i32 %8, -1
  %25 = mul nsw i32 %24, %5
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = sub nsw i32 0, %5
  br label %29

29:                                               ; preds = %22, %20
  %30 = phi i8* [ %27, %22 ], [ %4, %20 ]
  %31 = phi i32 [ %28, %22 ], [ %5, %20 ]
  %32 = phi i32 [ %23, %22 ], [ %8, %20 ]
  %33 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call i32 @InitCpuFlags() #4
  br label %37

37:                                               ; preds = %29, %35
  %38 = phi i32 [ %36, %35 ], [ %33, %29 ]
  %39 = and i32 %38, 64
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = and i32 %7, 7
  %43 = icmp eq i32 %42, 0
  %44 = select i1 %43, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV21ToARGBRow_SSSE3, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV21ToARGBRow_Any_SSSE3
  br label %45

45:                                               ; preds = %37, %41
  %46 = phi void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %44, %41 ], [ @NV21ToARGBRow_C, %37 ]
  %47 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = tail call i32 @InitCpuFlags() #4
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i32 [ %50, %49 ], [ %47, %45 ]
  %53 = and i32 %52, 1024
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = and i32 %7, 15
  %57 = icmp eq i32 %56, 0
  %58 = select i1 %57, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV21ToARGBRow_AVX2, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV21ToARGBRow_Any_AVX2
  br label %59

59:                                               ; preds = %51, %55
  %60 = phi void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %58, %55 ], [ %46, %51 ]
  %61 = icmp sgt i32 %32, 0
  br i1 %61, label %62, label %79

62:                                               ; preds = %59
  %63 = sext i32 %31 to i64
  %64 = sext i32 %1 to i64
  %65 = sext i32 %3 to i64
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i32 [ 0, %62 ], [ %77, %66 ]
  %68 = phi i8* [ %0, %62 ], [ %72, %66 ]
  %69 = phi i8* [ %30, %62 ], [ %71, %66 ]
  %70 = phi i8* [ %2, %62 ], [ %76, %66 ]
  tail call void %60(i8* %68, i8* %70, i8* %69, %"struct.libyuv::YuvConstants"* %6, i32 %7) #4
  %71 = getelementptr inbounds i8, i8* %69, i64 %63
  %72 = getelementptr inbounds i8, i8* %68, i64 %64
  %73 = and i32 %67, 1
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds i8, i8* %70, i64 %65
  %76 = select i1 %74, i8* %70, i8* %75
  %77 = add nuw nsw i32 %67, 1
  %78 = icmp eq i32 %77, %32
  br i1 %78, label %79, label %66

79:                                               ; preds = %66, %59, %9
  %80 = phi i32 [ -1, %9 ], [ 0, %59 ], [ 0, %66 ]
  ret i32 %80
}

declare void @NV21ToARGBRow_C(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV21ToARGBRow_Any_SSSE3(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV21ToARGBRow_SSSE3(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV21ToARGBRow_Any_AVX2(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV21ToARGBRow_AVX2(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV12ToARGB(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = tail call i32 @NV12ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %6, i32 %7)
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV21ToARGB(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = tail call i32 @NV21ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %6, i32 %7)
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV12ToABGR(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = tail call i32 @NV21ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %6, i32 %7)
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV21ToABGR(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = tail call i32 @NV12ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %6, i32 %7)
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV12ToRGB24Matrix(i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %10 = icmp ne i8* %0, null
  %11 = icmp ne i8* %2, null
  %12 = and i1 %10, %11
  %13 = icmp ne i8* %4, null
  %14 = and i1 %12, %13
  %15 = xor i1 %14, true
  %16 = icmp slt i32 %7, 1
  %17 = or i1 %16, %15
  %18 = icmp eq i32 %8, 0
  %19 = or i1 %17, %18
  br i1 %19, label %79, label %20

20:                                               ; preds = %9
  %21 = icmp slt i32 %8, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %20
  %23 = sub nsw i32 0, %8
  %24 = xor i32 %8, -1
  %25 = mul nsw i32 %24, %5
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = sub nsw i32 0, %5
  br label %29

29:                                               ; preds = %22, %20
  %30 = phi i8* [ %27, %22 ], [ %4, %20 ]
  %31 = phi i32 [ %28, %22 ], [ %5, %20 ]
  %32 = phi i32 [ %23, %22 ], [ %8, %20 ]
  %33 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call i32 @InitCpuFlags() #4
  br label %37

37:                                               ; preds = %29, %35
  %38 = phi i32 [ %36, %35 ], [ %33, %29 ]
  %39 = and i32 %38, 64
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = and i32 %7, 15
  %43 = icmp eq i32 %42, 0
  %44 = select i1 %43, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV12ToRGB24Row_SSSE3, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV12ToRGB24Row_Any_SSSE3
  br label %45

45:                                               ; preds = %37, %41
  %46 = phi void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %44, %41 ], [ @NV12ToRGB24Row_C, %37 ]
  %47 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = tail call i32 @InitCpuFlags() #4
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i32 [ %50, %49 ], [ %47, %45 ]
  %53 = and i32 %52, 1024
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = and i32 %7, 31
  %57 = icmp eq i32 %56, 0
  %58 = select i1 %57, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV12ToRGB24Row_AVX2, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV12ToRGB24Row_Any_AVX2
  br label %59

59:                                               ; preds = %51, %55
  %60 = phi void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %58, %55 ], [ %46, %51 ]
  %61 = icmp sgt i32 %32, 0
  br i1 %61, label %62, label %79

62:                                               ; preds = %59
  %63 = sext i32 %31 to i64
  %64 = sext i32 %1 to i64
  %65 = sext i32 %3 to i64
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i32 [ 0, %62 ], [ %77, %66 ]
  %68 = phi i8* [ %0, %62 ], [ %72, %66 ]
  %69 = phi i8* [ %30, %62 ], [ %71, %66 ]
  %70 = phi i8* [ %2, %62 ], [ %76, %66 ]
  tail call void %60(i8* %68, i8* %70, i8* %69, %"struct.libyuv::YuvConstants"* %6, i32 %7) #4
  %71 = getelementptr inbounds i8, i8* %69, i64 %63
  %72 = getelementptr inbounds i8, i8* %68, i64 %64
  %73 = and i32 %67, 1
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds i8, i8* %70, i64 %65
  %76 = select i1 %74, i8* %70, i8* %75
  %77 = add nuw nsw i32 %67, 1
  %78 = icmp eq i32 %77, %32
  br i1 %78, label %79, label %66

79:                                               ; preds = %66, %59, %9
  %80 = phi i32 [ -1, %9 ], [ 0, %59 ], [ 0, %66 ]
  ret i32 %80
}

declare void @NV12ToRGB24Row_C(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV12ToRGB24Row_Any_SSSE3(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV12ToRGB24Row_SSSE3(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV12ToRGB24Row_Any_AVX2(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV12ToRGB24Row_AVX2(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV21ToRGB24Matrix(i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %10 = icmp ne i8* %0, null
  %11 = icmp ne i8* %2, null
  %12 = and i1 %10, %11
  %13 = icmp ne i8* %4, null
  %14 = and i1 %12, %13
  %15 = xor i1 %14, true
  %16 = icmp slt i32 %7, 1
  %17 = or i1 %16, %15
  %18 = icmp eq i32 %8, 0
  %19 = or i1 %17, %18
  br i1 %19, label %79, label %20

20:                                               ; preds = %9
  %21 = icmp slt i32 %8, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %20
  %23 = sub nsw i32 0, %8
  %24 = xor i32 %8, -1
  %25 = mul nsw i32 %24, %5
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = sub nsw i32 0, %5
  br label %29

29:                                               ; preds = %22, %20
  %30 = phi i8* [ %27, %22 ], [ %4, %20 ]
  %31 = phi i32 [ %28, %22 ], [ %5, %20 ]
  %32 = phi i32 [ %23, %22 ], [ %8, %20 ]
  %33 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call i32 @InitCpuFlags() #4
  br label %37

37:                                               ; preds = %29, %35
  %38 = phi i32 [ %36, %35 ], [ %33, %29 ]
  %39 = and i32 %38, 64
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = and i32 %7, 15
  %43 = icmp eq i32 %42, 0
  %44 = select i1 %43, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV21ToRGB24Row_SSSE3, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV21ToRGB24Row_Any_SSSE3
  br label %45

45:                                               ; preds = %37, %41
  %46 = phi void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %44, %41 ], [ @NV21ToRGB24Row_C, %37 ]
  %47 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = tail call i32 @InitCpuFlags() #4
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i32 [ %50, %49 ], [ %47, %45 ]
  %53 = and i32 %52, 1024
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = and i32 %7, 31
  %57 = icmp eq i32 %56, 0
  %58 = select i1 %57, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV21ToRGB24Row_AVX2, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV21ToRGB24Row_Any_AVX2
  br label %59

59:                                               ; preds = %51, %55
  %60 = phi void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %58, %55 ], [ %46, %51 ]
  %61 = icmp sgt i32 %32, 0
  br i1 %61, label %62, label %79

62:                                               ; preds = %59
  %63 = sext i32 %31 to i64
  %64 = sext i32 %1 to i64
  %65 = sext i32 %3 to i64
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i32 [ 0, %62 ], [ %77, %66 ]
  %68 = phi i8* [ %0, %62 ], [ %72, %66 ]
  %69 = phi i8* [ %30, %62 ], [ %71, %66 ]
  %70 = phi i8* [ %2, %62 ], [ %76, %66 ]
  tail call void %60(i8* %68, i8* %70, i8* %69, %"struct.libyuv::YuvConstants"* %6, i32 %7) #4
  %71 = getelementptr inbounds i8, i8* %69, i64 %63
  %72 = getelementptr inbounds i8, i8* %68, i64 %64
  %73 = and i32 %67, 1
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds i8, i8* %70, i64 %65
  %76 = select i1 %74, i8* %70, i8* %75
  %77 = add nuw nsw i32 %67, 1
  %78 = icmp eq i32 %77, %32
  br i1 %78, label %79, label %66

79:                                               ; preds = %66, %59, %9
  %80 = phi i32 [ -1, %9 ], [ 0, %59 ], [ 0, %66 ]
  ret i32 %80
}

declare void @NV21ToRGB24Row_C(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV21ToRGB24Row_Any_SSSE3(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV21ToRGB24Row_SSSE3(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV21ToRGB24Row_Any_AVX2(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV21ToRGB24Row_AVX2(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV12ToRGB24(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = tail call i32 @NV12ToRGB24Matrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %6, i32 %7)
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV21ToRGB24(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = tail call i32 @NV21ToRGB24Matrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %6, i32 %7)
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV12ToRAW(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = tail call i32 @NV21ToRGB24Matrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %6, i32 %7)
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV21ToRAW(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = tail call i32 @NV12ToRGB24Matrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %6, i32 %7)
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV21ToYUV24(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = icmp ne i8* %0, null
  %10 = icmp ne i8* %2, null
  %11 = and i1 %9, %10
  %12 = icmp ne i8* %4, null
  %13 = and i1 %11, %12
  %14 = xor i1 %13, true
  %15 = icmp slt i32 %6, 1
  %16 = or i1 %15, %14
  %17 = icmp eq i32 %7, 0
  %18 = or i1 %16, %17
  br i1 %18, label %48, label %19

19:                                               ; preds = %8
  %20 = icmp slt i32 %7, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %19
  %22 = sub nsw i32 0, %7
  %23 = xor i32 %7, -1
  %24 = mul nsw i32 %23, %5
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %4, i64 %25
  %27 = sub nsw i32 0, %5
  br label %28

28:                                               ; preds = %21, %19
  %29 = phi i32 [ %22, %21 ], [ %7, %19 ]
  %30 = phi i32 [ %27, %21 ], [ %5, %19 ]
  %31 = phi i8* [ %26, %21 ], [ %4, %19 ]
  %32 = sext i32 %30 to i64
  %33 = sext i32 %1 to i64
  %34 = sext i32 %3 to i64
  br label %35

35:                                               ; preds = %35, %28
  %36 = phi i32 [ 0, %28 ], [ %46, %35 ]
  %37 = phi i8* [ %31, %28 ], [ %40, %35 ]
  %38 = phi i8* [ %0, %28 ], [ %41, %35 ]
  %39 = phi i8* [ %2, %28 ], [ %45, %35 ]
  tail call void @NV21ToYUV24Row_C(i8* %38, i8* %39, i8* %37, i32 %6) #4
  %40 = getelementptr inbounds i8, i8* %37, i64 %32
  %41 = getelementptr inbounds i8, i8* %38, i64 %33
  %42 = and i32 %36, 1
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds i8, i8* %39, i64 %34
  %45 = select i1 %43, i8* %39, i8* %44
  %46 = add nuw nsw i32 %36, 1
  %47 = icmp eq i32 %46, %29
  br i1 %47, label %48, label %35

48:                                               ; preds = %35, %8
  %49 = phi i32 [ -1, %8 ], [ 0, %35 ]
  ret i32 %49
}

declare void @NV21ToYUV24Row_C(i8*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @YUY2ToARGB(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %77, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = shl nsw i32 %4, 1
  %28 = icmp eq i32 %25, %27
  %29 = shl nsw i32 %4, 2
  %30 = icmp eq i32 %29, %3
  %31 = and i1 %30, %28
  %32 = select i1 %31, i32 %26, i32 1
  %33 = mul nsw i32 %32, %4
  %34 = select i1 %31, i32 1, i32 %26
  %35 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %23
  %38 = tail call i32 @InitCpuFlags() #4
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi i32 [ %38, %37 ], [ %35, %23 ]
  %41 = and i32 %40, 64
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = and i32 %33, 15
  %45 = icmp eq i32 %44, 0
  %46 = select i1 %45, void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @YUY2ToARGBRow_SSSE3, void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @YUY2ToARGBRow_Any_SSSE3
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %46, %43 ], [ @YUY2ToARGBRow_C, %39 ]
  %49 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = tail call i32 @InitCpuFlags() #4
  br label %53

53:                                               ; preds = %47, %51
  %54 = phi i32 [ %52, %51 ], [ %49, %47 ]
  %55 = and i32 %54, 1024
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = and i32 %33, 31
  %59 = icmp eq i32 %58, 0
  %60 = select i1 %59, void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @YUY2ToARGBRow_AVX2, void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @YUY2ToARGBRow_Any_AVX2
  br label %61

61:                                               ; preds = %53, %57
  %62 = phi void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %60, %57 ], [ %48, %53 ]
  %63 = icmp sgt i32 %34, 0
  br i1 %63, label %64, label %77

64:                                               ; preds = %61
  %65 = sext i32 %25 to i64
  %66 = select i1 %31, i64 0, i64 %65
  %67 = sext i32 %3 to i64
  %68 = select i1 %31, i64 0, i64 %67
  br label %69

69:                                               ; preds = %69, %64
  %70 = phi i32 [ 0, %64 ], [ %75, %69 ]
  %71 = phi i8* [ %2, %64 ], [ %74, %69 ]
  %72 = phi i8* [ %24, %64 ], [ %73, %69 ]
  tail call void %62(i8* %72, i8* %71, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %33) #4
  %73 = getelementptr inbounds i8, i8* %72, i64 %66
  %74 = getelementptr inbounds i8, i8* %71, i64 %68
  %75 = add nuw nsw i32 %70, 1
  %76 = icmp eq i32 %75, %34
  br i1 %76, label %77, label %69

77:                                               ; preds = %69, %61, %6
  %78 = phi i32 [ -1, %6 ], [ 0, %61 ], [ 0, %69 ]
  ret i32 %78
}

declare void @YUY2ToARGBRow_C(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @YUY2ToARGBRow_Any_SSSE3(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @YUY2ToARGBRow_SSSE3(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @YUY2ToARGBRow_Any_AVX2(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @YUY2ToARGBRow_AVX2(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @UYVYToARGB(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %0, null
  %8 = icmp eq i8* %2, null
  %9 = or i1 %7, %8
  %10 = icmp slt i32 %4, 1
  %11 = or i1 %9, %10
  %12 = icmp eq i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %77, label %14

14:                                               ; preds = %6
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = sub nsw i32 0, %5
  %18 = xor i32 %5, -1
  %19 = mul nsw i32 %18, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = sub nsw i32 0, %1
  br label %23

23:                                               ; preds = %16, %14
  %24 = phi i8* [ %21, %16 ], [ %0, %14 ]
  %25 = phi i32 [ %22, %16 ], [ %1, %14 ]
  %26 = phi i32 [ %17, %16 ], [ %5, %14 ]
  %27 = shl nsw i32 %4, 1
  %28 = icmp eq i32 %25, %27
  %29 = shl nsw i32 %4, 2
  %30 = icmp eq i32 %29, %3
  %31 = and i1 %30, %28
  %32 = select i1 %31, i32 %26, i32 1
  %33 = mul nsw i32 %32, %4
  %34 = select i1 %31, i32 1, i32 %26
  %35 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %23
  %38 = tail call i32 @InitCpuFlags() #4
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi i32 [ %38, %37 ], [ %35, %23 ]
  %41 = and i32 %40, 64
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = and i32 %33, 15
  %45 = icmp eq i32 %44, 0
  %46 = select i1 %45, void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @UYVYToARGBRow_SSSE3, void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @UYVYToARGBRow_Any_SSSE3
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %46, %43 ], [ @UYVYToARGBRow_C, %39 ]
  %49 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = tail call i32 @InitCpuFlags() #4
  br label %53

53:                                               ; preds = %47, %51
  %54 = phi i32 [ %52, %51 ], [ %49, %47 ]
  %55 = and i32 %54, 1024
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = and i32 %33, 31
  %59 = icmp eq i32 %58, 0
  %60 = select i1 %59, void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @UYVYToARGBRow_AVX2, void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @UYVYToARGBRow_Any_AVX2
  br label %61

61:                                               ; preds = %53, %57
  %62 = phi void (i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %60, %57 ], [ %48, %53 ]
  %63 = icmp sgt i32 %34, 0
  br i1 %63, label %64, label %77

64:                                               ; preds = %61
  %65 = sext i32 %25 to i64
  %66 = select i1 %31, i64 0, i64 %65
  %67 = sext i32 %3 to i64
  %68 = select i1 %31, i64 0, i64 %67
  br label %69

69:                                               ; preds = %69, %64
  %70 = phi i32 [ 0, %64 ], [ %75, %69 ]
  %71 = phi i8* [ %2, %64 ], [ %74, %69 ]
  %72 = phi i8* [ %24, %64 ], [ %73, %69 ]
  tail call void %62(i8* %72, i8* %71, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %33) #4
  %73 = getelementptr inbounds i8, i8* %72, i64 %66
  %74 = getelementptr inbounds i8, i8* %71, i64 %68
  %75 = add nuw nsw i32 %70, 1
  %76 = icmp eq i32 %75, %34
  br i1 %76, label %77, label %69

77:                                               ; preds = %69, %61, %6
  %78 = phi i32 [ -1, %6 ], [ 0, %61 ], [ 0, %69 ]
  ret i32 %78
}

declare void @UYVYToARGBRow_C(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @UYVYToARGBRow_Any_SSSE3(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @UYVYToARGBRow_SSSE3(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @UYVYToARGBRow_Any_AVX2(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @UYVYToARGBRow_AVX2(i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Android420ToARGBMatrix(i8*, i32, i8*, i32, i8*, i32, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %13 = ptrtoint i8* %4 to i64
  %14 = ptrtoint i8* %2 to i64
  %15 = sub i64 %13, %14
  %16 = add nsw i32 %10, 1
  %17 = ashr i32 %16, 1
  %18 = icmp ne i8* %0, null
  %19 = icmp ne i8* %2, null
  %20 = and i1 %18, %19
  %21 = icmp ne i8* %4, null
  %22 = and i1 %20, %21
  %23 = icmp ne i8* %7, null
  %24 = and i1 %22, %23
  %25 = xor i1 %24, true
  %26 = icmp slt i32 %10, 1
  %27 = or i1 %26, %25
  %28 = icmp eq i32 %11, 0
  %29 = or i1 %27, %28
  br i1 %29, label %146, label %30

30:                                               ; preds = %12
  %31 = add nsw i32 %11, 1
  %32 = icmp slt i32 %11, 0
  br i1 %32, label %33, label %41

33:                                               ; preds = %30
  %34 = sub nsw i32 0, %11
  %35 = sub i32 1, %11
  %36 = xor i32 %11, -1
  %37 = mul nsw i32 %36, %8
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %7, i64 %38
  %40 = sub nsw i32 0, %8
  br label %41

41:                                               ; preds = %33, %30
  %42 = phi i8* [ %39, %33 ], [ %7, %30 ]
  %43 = phi i32 [ %40, %33 ], [ %8, %30 ]
  %44 = phi i32 [ %34, %33 ], [ %11, %30 ]
  %45 = phi i32 [ %35, %33 ], [ %31, %30 ]
  %46 = ashr i32 %45, 1
  %47 = icmp eq i32 %6, 1
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  %49 = tail call i32 @I420ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %42, i32 %43, %"struct.libyuv::YuvConstants"* %9, i32 %10, i32 %44)
  br label %146

50:                                               ; preds = %41
  %51 = icmp eq i32 %6, 2
  %52 = icmp eq i64 %15, -1
  %53 = and i1 %51, %52
  %54 = icmp eq i32 %3, %5
  %55 = and i1 %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = tail call i32 @NV21ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %3, i8* %42, i32 %43, %"struct.libyuv::YuvConstants"* %9, i32 %10, i32 %44)
  br label %146

58:                                               ; preds = %50
  %59 = icmp eq i64 %15, 1
  %60 = and i1 %51, %59
  %61 = and i1 %54, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  %63 = tail call i32 @NV12ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %42, i32 %43, %"struct.libyuv::YuvConstants"* %9, i32 %10, i32 %44)
  br label %146

64:                                               ; preds = %58
  %65 = and i32 %16, -2
  %66 = mul nsw i32 %46, %65
  %67 = add nsw i32 %66, 63
  %68 = sext i32 %67 to i64
  %69 = tail call noalias i8* @malloc(i64 %68) #4
  %70 = ptrtoint i8* %69 to i64
  %71 = add nsw i64 %70, 63
  %72 = and i64 %71, -64
  %73 = inttoptr i64 %72 to i8*
  %74 = icmp sgt i32 %45, 1
  br i1 %74, label %75, label %144

75:                                               ; preds = %64
  %76 = sext i32 %6 to i64
  %77 = sext i32 %3 to i64
  %78 = sext i32 %5 to i64
  %79 = sext i32 %65 to i64
  %80 = add nsw i32 %17, -1
  %81 = and i32 %17, 3
  %82 = icmp ult i32 %80, 3
  %83 = sub nsw i32 %17, %81
  %84 = icmp eq i32 %81, 0
  br label %85

85:                                               ; preds = %75, %138
  %86 = phi i8* [ %73, %75 ], [ %141, %138 ]
  %87 = phi i32 [ 0, %75 ], [ %142, %138 ]
  %88 = phi i8* [ %2, %75 ], [ %139, %138 ]
  %89 = phi i8* [ %4, %75 ], [ %140, %138 ]
  br i1 %82, label %121, label %90

90:                                               ; preds = %85, %90
  %91 = phi i8* [ %117, %90 ], [ %88, %85 ]
  %92 = phi i8* [ %116, %90 ], [ %86, %85 ]
  %93 = phi i8* [ %118, %90 ], [ %89, %85 ]
  %94 = phi i32 [ %119, %90 ], [ %83, %85 ]
  %95 = load i8, i8* %91, align 1
  store i8 %95, i8* %92, align 1
  %96 = load i8, i8* %93, align 1
  %97 = getelementptr inbounds i8, i8* %92, i64 1
  store i8 %96, i8* %97, align 1
  %98 = getelementptr inbounds i8, i8* %92, i64 2
  %99 = getelementptr inbounds i8, i8* %91, i64 %76
  %100 = getelementptr inbounds i8, i8* %93, i64 %76
  %101 = load i8, i8* %99, align 1
  store i8 %101, i8* %98, align 1
  %102 = load i8, i8* %100, align 1
  %103 = getelementptr inbounds i8, i8* %92, i64 3
  store i8 %102, i8* %103, align 1
  %104 = getelementptr inbounds i8, i8* %92, i64 4
  %105 = getelementptr inbounds i8, i8* %99, i64 %76
  %106 = getelementptr inbounds i8, i8* %100, i64 %76
  %107 = load i8, i8* %105, align 1
  store i8 %107, i8* %104, align 1
  %108 = load i8, i8* %106, align 1
  %109 = getelementptr inbounds i8, i8* %92, i64 5
  store i8 %108, i8* %109, align 1
  %110 = getelementptr inbounds i8, i8* %92, i64 6
  %111 = getelementptr inbounds i8, i8* %105, i64 %76
  %112 = getelementptr inbounds i8, i8* %106, i64 %76
  %113 = load i8, i8* %111, align 1
  store i8 %113, i8* %110, align 1
  %114 = load i8, i8* %112, align 1
  %115 = getelementptr inbounds i8, i8* %92, i64 7
  store i8 %114, i8* %115, align 1
  %116 = getelementptr inbounds i8, i8* %92, i64 8
  %117 = getelementptr inbounds i8, i8* %111, i64 %76
  %118 = getelementptr inbounds i8, i8* %112, i64 %76
  %119 = add i32 %94, -4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %90

121:                                              ; preds = %90, %85
  %122 = phi i8* [ %88, %85 ], [ %117, %90 ]
  %123 = phi i8* [ %86, %85 ], [ %116, %90 ]
  %124 = phi i8* [ %89, %85 ], [ %118, %90 ]
  br i1 %84, label %138, label %125

125:                                              ; preds = %121, %125
  %126 = phi i8* [ %134, %125 ], [ %122, %121 ]
  %127 = phi i8* [ %133, %125 ], [ %123, %121 ]
  %128 = phi i8* [ %135, %125 ], [ %124, %121 ]
  %129 = phi i32 [ %136, %125 ], [ %81, %121 ]
  %130 = load i8, i8* %126, align 1
  store i8 %130, i8* %127, align 1
  %131 = load i8, i8* %128, align 1
  %132 = getelementptr inbounds i8, i8* %127, i64 1
  store i8 %131, i8* %132, align 1
  %133 = getelementptr inbounds i8, i8* %127, i64 2
  %134 = getelementptr inbounds i8, i8* %126, i64 %76
  %135 = getelementptr inbounds i8, i8* %128, i64 %76
  %136 = add i32 %129, -1
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %125, !llvm.loop !9

138:                                              ; preds = %125, %121
  %139 = getelementptr inbounds i8, i8* %88, i64 %77
  %140 = getelementptr inbounds i8, i8* %89, i64 %78
  %141 = getelementptr inbounds i8, i8* %86, i64 %79
  %142 = add nuw nsw i32 %87, 1
  %143 = icmp slt i32 %142, %46
  br i1 %143, label %85, label %144

144:                                              ; preds = %138, %64
  %145 = tail call i32 @NV12ToARGBMatrix(i8* %0, i32 %1, i8* %73, i32 %65, i8* %42, i32 %43, %"struct.libyuv::YuvConstants"* %9, i32 %10, i32 %44)
  tail call void @free(i8* %69) #4
  br label %146

146:                                              ; preds = %12, %144, %62, %56, %48
  %147 = phi i32 [ %49, %48 ], [ %57, %56 ], [ %63, %62 ], [ 0, %144 ], [ -1, %12 ]
  ret i32 %147
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Android420ToARGB(i8*, i32, i8*, i32, i8*, i32, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %12 = tail call i32 @Android420ToARGBMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i32 %6, i8* %7, i32 %8, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %9, i32 %10)
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Android420ToABGR(i8*, i32, i8*, i32, i8*, i32, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %12 = tail call i32 @Android420ToARGBMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i32 %6, i8* %7, i32 %8, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %9, i32 %10)
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I422ToRGBAMatrix(i8*, i32, i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i8* %0, null
  %13 = icmp ne i8* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i8* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %83, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 7
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGBARow_SSSE3, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGBARow_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I422ToRGBARow_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGBARow_AVX2, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGBARow_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %83

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %81, %71 ]
  %73 = phi i8* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i8* [ %2, %66 ], [ %79, %71 ]
  %76 = phi i8* [ %4, %66 ], [ %80, %71 ]
  tail call void %64(i8* %73, i8* %75, i8* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i8, i8* %73, i64 %68
  %79 = getelementptr inbounds i8, i8* %75, i64 %69
  %80 = getelementptr inbounds i8, i8* %76, i64 %70
  %81 = add nuw nsw i32 %72, 1
  %82 = icmp eq i32 %81, %36
  br i1 %82, label %83, label %71

83:                                               ; preds = %71, %63, %11
  %84 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %84
}

declare void @I422ToRGBARow_C(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToRGBARow_Any_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToRGBARow_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToRGBARow_Any_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToRGBARow_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I422ToRGBA(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I422ToRGBAMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I422ToBGRA(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I422ToRGBAMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV12ToRGB565Matrix(i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %10 = icmp ne i8* %0, null
  %11 = icmp ne i8* %2, null
  %12 = and i1 %10, %11
  %13 = icmp ne i8* %4, null
  %14 = and i1 %12, %13
  %15 = xor i1 %14, true
  %16 = icmp slt i32 %7, 1
  %17 = or i1 %16, %15
  %18 = icmp eq i32 %8, 0
  %19 = or i1 %17, %18
  br i1 %19, label %79, label %20

20:                                               ; preds = %9
  %21 = icmp slt i32 %8, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %20
  %23 = sub nsw i32 0, %8
  %24 = xor i32 %8, -1
  %25 = mul nsw i32 %24, %5
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = sub nsw i32 0, %5
  br label %29

29:                                               ; preds = %22, %20
  %30 = phi i8* [ %27, %22 ], [ %4, %20 ]
  %31 = phi i32 [ %28, %22 ], [ %5, %20 ]
  %32 = phi i32 [ %23, %22 ], [ %8, %20 ]
  %33 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call i32 @InitCpuFlags() #4
  br label %37

37:                                               ; preds = %29, %35
  %38 = phi i32 [ %36, %35 ], [ %33, %29 ]
  %39 = and i32 %38, 64
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = and i32 %7, 7
  %43 = icmp eq i32 %42, 0
  %44 = select i1 %43, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV12ToRGB565Row_SSSE3, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV12ToRGB565Row_Any_SSSE3
  br label %45

45:                                               ; preds = %37, %41
  %46 = phi void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %44, %41 ], [ @NV12ToRGB565Row_C, %37 ]
  %47 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = tail call i32 @InitCpuFlags() #4
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i32 [ %50, %49 ], [ %47, %45 ]
  %53 = and i32 %52, 1024
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = and i32 %7, 15
  %57 = icmp eq i32 %56, 0
  %58 = select i1 %57, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV12ToRGB565Row_AVX2, void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @NV12ToRGB565Row_Any_AVX2
  br label %59

59:                                               ; preds = %51, %55
  %60 = phi void (i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %58, %55 ], [ %46, %51 ]
  %61 = icmp sgt i32 %32, 0
  br i1 %61, label %62, label %79

62:                                               ; preds = %59
  %63 = sext i32 %31 to i64
  %64 = sext i32 %1 to i64
  %65 = sext i32 %3 to i64
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i32 [ 0, %62 ], [ %77, %66 ]
  %68 = phi i8* [ %0, %62 ], [ %72, %66 ]
  %69 = phi i8* [ %30, %62 ], [ %71, %66 ]
  %70 = phi i8* [ %2, %62 ], [ %76, %66 ]
  tail call void %60(i8* %68, i8* %70, i8* %69, %"struct.libyuv::YuvConstants"* %6, i32 %7) #4
  %71 = getelementptr inbounds i8, i8* %69, i64 %63
  %72 = getelementptr inbounds i8, i8* %68, i64 %64
  %73 = and i32 %67, 1
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds i8, i8* %70, i64 %65
  %76 = select i1 %74, i8* %70, i8* %75
  %77 = add nuw nsw i32 %67, 1
  %78 = icmp eq i32 %77, %32
  br i1 %78, label %79, label %66

79:                                               ; preds = %66, %59, %9
  %80 = phi i32 [ -1, %9 ], [ 0, %59 ], [ 0, %66 ]
  ret i32 %80
}

declare void @NV12ToRGB565Row_C(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV12ToRGB565Row_Any_SSSE3(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV12ToRGB565Row_SSSE3(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV12ToRGB565Row_Any_AVX2(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @NV12ToRGB565Row_AVX2(i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NV12ToRGB565(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = tail call i32 @NV12ToRGB565Matrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %6, i32 %7)
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToRGBAMatrix(i8*, i32, i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i8* %0, null
  %13 = icmp ne i8* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i8* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %87, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 7
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGBARow_SSSE3, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGBARow_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I422ToRGBARow_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGBARow_AVX2, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGBARow_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %87

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %85, %71 ]
  %73 = phi i8* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i8* [ %2, %66 ], [ %84, %71 ]
  %76 = phi i8* [ %4, %66 ], [ %83, %71 ]
  tail call void %64(i8* %73, i8* %75, i8* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i8, i8* %73, i64 %68
  %79 = and i32 %72, 1
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds i8, i8* %75, i64 %69
  %82 = getelementptr inbounds i8, i8* %76, i64 %70
  %83 = select i1 %80, i8* %76, i8* %82
  %84 = select i1 %80, i8* %75, i8* %81
  %85 = add nuw nsw i32 %72, 1
  %86 = icmp eq i32 %85, %36
  br i1 %86, label %87, label %71

87:                                               ; preds = %71, %63, %11
  %88 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToRGBA(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToRGBAMatrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToBGRA(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToRGBAMatrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToRGB24Matrix(i8*, i32, i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i8* %0, null
  %13 = icmp ne i8* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i8* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %87, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 15
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGB24Row_SSSE3, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGB24Row_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I422ToRGB24Row_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 31
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGB24Row_AVX2, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGB24Row_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %87

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %85, %71 ]
  %73 = phi i8* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i8* [ %2, %66 ], [ %84, %71 ]
  %76 = phi i8* [ %4, %66 ], [ %83, %71 ]
  tail call void %64(i8* %73, i8* %75, i8* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i8, i8* %73, i64 %68
  %79 = and i32 %72, 1
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds i8, i8* %75, i64 %69
  %82 = getelementptr inbounds i8, i8* %76, i64 %70
  %83 = select i1 %80, i8* %76, i8* %82
  %84 = select i1 %80, i8* %75, i8* %81
  %85 = add nuw nsw i32 %72, 1
  %86 = icmp eq i32 %85, %36
  br i1 %86, label %87, label %71

87:                                               ; preds = %71, %63, %11
  %88 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %88
}

declare void @I422ToRGB24Row_C(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToRGB24Row_Any_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToRGB24Row_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToRGB24Row_Any_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToRGB24Row_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToRGB24(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToRGB24Matrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToRAW(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToRGB24Matrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @J420ToRGB24(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToRGB24Matrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvJPEGConstants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @J420ToRAW(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToRGB24Matrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuJPEGConstants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H420ToRGB24(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToRGB24Matrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H420ToRAW(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToRGB24Matrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToARGB1555(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = icmp ne i8* %0, null
  %12 = icmp ne i8* %2, null
  %13 = and i1 %11, %12
  %14 = icmp ne i8* %4, null
  %15 = and i1 %13, %14
  %16 = icmp ne i8* %6, null
  %17 = and i1 %15, %16
  %18 = xor i1 %17, true
  %19 = icmp slt i32 %8, 1
  %20 = or i1 %19, %18
  %21 = icmp eq i32 %9, 0
  %22 = or i1 %20, %21
  br i1 %22, label %86, label %23

23:                                               ; preds = %10
  %24 = icmp slt i32 %9, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %23
  %26 = sub nsw i32 0, %9
  %27 = xor i32 %9, -1
  %28 = mul nsw i32 %27, %7
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %6, i64 %29
  %31 = sub nsw i32 0, %7
  br label %32

32:                                               ; preds = %25, %23
  %33 = phi i8* [ %30, %25 ], [ %6, %23 ]
  %34 = phi i32 [ %31, %25 ], [ %7, %23 ]
  %35 = phi i32 [ %26, %25 ], [ %9, %23 ]
  %36 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = tail call i32 @InitCpuFlags() #4
  br label %40

40:                                               ; preds = %32, %38
  %41 = phi i32 [ %39, %38 ], [ %36, %32 ]
  %42 = and i32 %41, 64
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = and i32 %8, 7
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGB1555Row_SSSE3, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGB1555Row_Any_SSSE3
  br label %48

48:                                               ; preds = %40, %44
  %49 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %47, %44 ], [ @I422ToARGB1555Row_C, %40 ]
  %50 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = tail call i32 @InitCpuFlags() #4
  br label %54

54:                                               ; preds = %48, %52
  %55 = phi i32 [ %53, %52 ], [ %50, %48 ]
  %56 = and i32 %55, 1024
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = and i32 %8, 15
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGB1555Row_AVX2, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGB1555Row_Any_AVX2
  br label %62

62:                                               ; preds = %54, %58
  %63 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %61, %58 ], [ %49, %54 ]
  %64 = icmp sgt i32 %35, 0
  br i1 %64, label %65, label %86

65:                                               ; preds = %62
  %66 = sext i32 %34 to i64
  %67 = sext i32 %1 to i64
  %68 = sext i32 %3 to i64
  %69 = sext i32 %5 to i64
  br label %70

70:                                               ; preds = %70, %65
  %71 = phi i32 [ 0, %65 ], [ %84, %70 ]
  %72 = phi i8* [ %33, %65 ], [ %76, %70 ]
  %73 = phi i8* [ %0, %65 ], [ %77, %70 ]
  %74 = phi i8* [ %4, %65 ], [ %83, %70 ]
  %75 = phi i8* [ %2, %65 ], [ %82, %70 ]
  tail call void %63(i8* %73, i8* %75, i8* %74, i8* %72, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8) #4
  %76 = getelementptr inbounds i8, i8* %72, i64 %66
  %77 = getelementptr inbounds i8, i8* %73, i64 %67
  %78 = and i32 %71, 1
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds i8, i8* %75, i64 %68
  %81 = getelementptr inbounds i8, i8* %74, i64 %69
  %82 = select i1 %79, i8* %75, i8* %80
  %83 = select i1 %79, i8* %74, i8* %81
  %84 = add nuw nsw i32 %71, 1
  %85 = icmp eq i32 %84, %35
  br i1 %85, label %86, label %70

86:                                               ; preds = %70, %62, %10
  %87 = phi i32 [ -1, %10 ], [ 0, %62 ], [ 0, %70 ]
  ret i32 %87
}

declare void @I422ToARGB1555Row_C(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToARGB1555Row_Any_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToARGB1555Row_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToARGB1555Row_Any_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToARGB1555Row_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToARGB4444(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = icmp ne i8* %0, null
  %12 = icmp ne i8* %2, null
  %13 = and i1 %11, %12
  %14 = icmp ne i8* %4, null
  %15 = and i1 %13, %14
  %16 = icmp ne i8* %6, null
  %17 = and i1 %15, %16
  %18 = xor i1 %17, true
  %19 = icmp slt i32 %8, 1
  %20 = or i1 %19, %18
  %21 = icmp eq i32 %9, 0
  %22 = or i1 %20, %21
  br i1 %22, label %86, label %23

23:                                               ; preds = %10
  %24 = icmp slt i32 %9, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %23
  %26 = sub nsw i32 0, %9
  %27 = xor i32 %9, -1
  %28 = mul nsw i32 %27, %7
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %6, i64 %29
  %31 = sub nsw i32 0, %7
  br label %32

32:                                               ; preds = %25, %23
  %33 = phi i8* [ %30, %25 ], [ %6, %23 ]
  %34 = phi i32 [ %31, %25 ], [ %7, %23 ]
  %35 = phi i32 [ %26, %25 ], [ %9, %23 ]
  %36 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = tail call i32 @InitCpuFlags() #4
  br label %40

40:                                               ; preds = %32, %38
  %41 = phi i32 [ %39, %38 ], [ %36, %32 ]
  %42 = and i32 %41, 64
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = and i32 %8, 7
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGB4444Row_SSSE3, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGB4444Row_Any_SSSE3
  br label %48

48:                                               ; preds = %40, %44
  %49 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %47, %44 ], [ @I422ToARGB4444Row_C, %40 ]
  %50 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = tail call i32 @InitCpuFlags() #4
  br label %54

54:                                               ; preds = %48, %52
  %55 = phi i32 [ %53, %52 ], [ %50, %48 ]
  %56 = and i32 %55, 1024
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = and i32 %8, 15
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGB4444Row_AVX2, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGB4444Row_Any_AVX2
  br label %62

62:                                               ; preds = %54, %58
  %63 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %61, %58 ], [ %49, %54 ]
  %64 = icmp sgt i32 %35, 0
  br i1 %64, label %65, label %86

65:                                               ; preds = %62
  %66 = sext i32 %34 to i64
  %67 = sext i32 %1 to i64
  %68 = sext i32 %3 to i64
  %69 = sext i32 %5 to i64
  br label %70

70:                                               ; preds = %70, %65
  %71 = phi i32 [ 0, %65 ], [ %84, %70 ]
  %72 = phi i8* [ %33, %65 ], [ %76, %70 ]
  %73 = phi i8* [ %0, %65 ], [ %77, %70 ]
  %74 = phi i8* [ %4, %65 ], [ %83, %70 ]
  %75 = phi i8* [ %2, %65 ], [ %82, %70 ]
  tail call void %63(i8* %73, i8* %75, i8* %74, i8* %72, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8) #4
  %76 = getelementptr inbounds i8, i8* %72, i64 %66
  %77 = getelementptr inbounds i8, i8* %73, i64 %67
  %78 = and i32 %71, 1
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds i8, i8* %75, i64 %68
  %81 = getelementptr inbounds i8, i8* %74, i64 %69
  %82 = select i1 %79, i8* %75, i8* %80
  %83 = select i1 %79, i8* %74, i8* %81
  %84 = add nuw nsw i32 %71, 1
  %85 = icmp eq i32 %84, %35
  br i1 %85, label %86, label %70

86:                                               ; preds = %70, %62, %10
  %87 = phi i32 [ -1, %10 ], [ 0, %62 ], [ 0, %70 ]
  ret i32 %87
}

declare void @I422ToARGB4444Row_C(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToARGB4444Row_Any_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToARGB4444Row_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToARGB4444Row_Any_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToARGB4444Row_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToRGB565Matrix(i8*, i32, i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i8* %0, null
  %13 = icmp ne i8* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i8* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %87, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 7
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGB565Row_SSSE3, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGB565Row_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I422ToRGB565Row_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGB565Row_AVX2, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGB565Row_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %87

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %85, %71 ]
  %73 = phi i8* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i8* [ %2, %66 ], [ %84, %71 ]
  %76 = phi i8* [ %4, %66 ], [ %83, %71 ]
  tail call void %64(i8* %73, i8* %75, i8* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i8, i8* %73, i64 %68
  %79 = and i32 %72, 1
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds i8, i8* %75, i64 %69
  %82 = getelementptr inbounds i8, i8* %76, i64 %70
  %83 = select i1 %80, i8* %76, i8* %82
  %84 = select i1 %80, i8* %75, i8* %81
  %85 = add nuw nsw i32 %72, 1
  %86 = icmp eq i32 %85, %36
  br i1 %86, label %87, label %71

87:                                               ; preds = %71, %63, %11
  %88 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %88
}

declare void @I422ToRGB565Row_C(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToRGB565Row_Any_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToRGB565Row_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToRGB565Row_Any_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToRGB565Row_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToRGB565(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToRGB565Matrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @J420ToRGB565(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToRGB565Matrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvJPEGConstants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H420ToRGB565(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToRGB565Matrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I422ToRGB565(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = icmp ne i8* %0, null
  %12 = icmp ne i8* %2, null
  %13 = and i1 %11, %12
  %14 = icmp ne i8* %4, null
  %15 = and i1 %13, %14
  %16 = icmp ne i8* %6, null
  %17 = and i1 %15, %16
  %18 = xor i1 %17, true
  %19 = icmp slt i32 %8, 1
  %20 = or i1 %19, %18
  %21 = icmp eq i32 %9, 0
  %22 = or i1 %20, %21
  br i1 %22, label %82, label %23

23:                                               ; preds = %10
  %24 = icmp slt i32 %9, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %23
  %26 = sub nsw i32 0, %9
  %27 = xor i32 %9, -1
  %28 = mul nsw i32 %27, %7
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %6, i64 %29
  %31 = sub nsw i32 0, %7
  br label %32

32:                                               ; preds = %25, %23
  %33 = phi i8* [ %30, %25 ], [ %6, %23 ]
  %34 = phi i32 [ %31, %25 ], [ %7, %23 ]
  %35 = phi i32 [ %26, %25 ], [ %9, %23 ]
  %36 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = tail call i32 @InitCpuFlags() #4
  br label %40

40:                                               ; preds = %32, %38
  %41 = phi i32 [ %39, %38 ], [ %36, %32 ]
  %42 = and i32 %41, 64
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = and i32 %8, 7
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGB565Row_SSSE3, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGB565Row_Any_SSSE3
  br label %48

48:                                               ; preds = %40, %44
  %49 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %47, %44 ], [ @I422ToRGB565Row_C, %40 ]
  %50 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = tail call i32 @InitCpuFlags() #4
  br label %54

54:                                               ; preds = %48, %52
  %55 = phi i32 [ %53, %52 ], [ %50, %48 ]
  %56 = and i32 %55, 1024
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = and i32 %8, 15
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGB565Row_AVX2, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToRGB565Row_Any_AVX2
  br label %62

62:                                               ; preds = %54, %58
  %63 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %61, %58 ], [ %49, %54 ]
  %64 = icmp sgt i32 %35, 0
  br i1 %64, label %65, label %82

65:                                               ; preds = %62
  %66 = sext i32 %34 to i64
  %67 = sext i32 %1 to i64
  %68 = sext i32 %3 to i64
  %69 = sext i32 %5 to i64
  br label %70

70:                                               ; preds = %70, %65
  %71 = phi i32 [ 0, %65 ], [ %80, %70 ]
  %72 = phi i8* [ %33, %65 ], [ %76, %70 ]
  %73 = phi i8* [ %0, %65 ], [ %77, %70 ]
  %74 = phi i8* [ %4, %65 ], [ %79, %70 ]
  %75 = phi i8* [ %2, %65 ], [ %78, %70 ]
  tail call void %63(i8* %73, i8* %75, i8* %74, i8* %72, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8) #4
  %76 = getelementptr inbounds i8, i8* %72, i64 %66
  %77 = getelementptr inbounds i8, i8* %73, i64 %67
  %78 = getelementptr inbounds i8, i8* %75, i64 %68
  %79 = getelementptr inbounds i8, i8* %74, i64 %69
  %80 = add nuw nsw i32 %71, 1
  %81 = icmp eq i32 %80, %35
  br i1 %81, label %82, label %70

82:                                               ; preds = %70, %62, %10
  %83 = phi i32 [ -1, %10 ], [ 0, %62 ], [ 0, %70 ]
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToRGB565Dither(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8* readonly, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i8* %0, null
  %13 = icmp ne i8* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i8* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %132, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = icmp eq i8* %8, null
  %38 = select i1 %37, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN6libyuvL14kDither565_4x4E, i64 0, i64 0), i8* %8
  %39 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %33
  %42 = tail call i32 @InitCpuFlags() #4
  br label %43

43:                                               ; preds = %33, %41
  %44 = phi i32 [ %42, %41 ], [ %39, %33 ]
  %45 = and i32 %44, 64
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = and i32 %9, 7
  %49 = icmp eq i32 %48, 0
  %50 = select i1 %49, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGBRow_SSSE3, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGBRow_Any_SSSE3
  br label %51

51:                                               ; preds = %43, %47
  %52 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %50, %47 ], [ @I422ToARGBRow_C, %43 ]
  %53 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = tail call i32 @InitCpuFlags() #4
  br label %57

57:                                               ; preds = %51, %55
  %58 = phi i32 [ %56, %55 ], [ %53, %51 ]
  %59 = and i32 %58, 1024
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = and i32 %9, 15
  %63 = icmp eq i32 %62, 0
  %64 = select i1 %63, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGBRow_AVX2, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToARGBRow_Any_AVX2
  br label %65

65:                                               ; preds = %57, %61
  %66 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %64, %61 ], [ %52, %57 ]
  %67 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = tail call i32 @InitCpuFlags() #4
  br label %71

71:                                               ; preds = %65, %69
  %72 = phi i32 [ %70, %69 ], [ %67, %65 ]
  %73 = and i32 %72, 32
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %71
  %76 = and i32 %9, 3
  %77 = icmp eq i32 %76, 0
  %78 = select i1 %77, void (i8*, i8*, i32, i32)* @ARGBToRGB565DitherRow_SSE2, void (i8*, i8*, i32, i32)* @ARGBToRGB565DitherRow_Any_SSE2
  br label %79

79:                                               ; preds = %71, %75
  %80 = phi void (i8*, i8*, i32, i32)* [ %78, %75 ], [ @ARGBToRGB565DitherRow_C, %71 ]
  %81 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = tail call i32 @InitCpuFlags() #4
  br label %85

85:                                               ; preds = %79, %83
  %86 = phi i32 [ %84, %83 ], [ %81, %79 ]
  %87 = and i32 %86, 1024
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = and i32 %9, 7
  %91 = icmp eq i32 %90, 0
  %92 = select i1 %91, void (i8*, i8*, i32, i32)* @ARGBToRGB565DitherRow_AVX2, void (i8*, i8*, i32, i32)* @ARGBToRGB565DitherRow_Any_AVX2
  br label %93

93:                                               ; preds = %85, %89
  %94 = phi void (i8*, i8*, i32, i32)* [ %92, %89 ], [ %80, %85 ]
  %95 = shl i32 %9, 2
  %96 = add nsw i32 %95, 63
  %97 = sext i32 %96 to i64
  %98 = tail call noalias i8* @malloc(i64 %97) #4
  %99 = ptrtoint i8* %98 to i64
  %100 = add nsw i64 %99, 63
  %101 = and i64 %100, -64
  %102 = inttoptr i64 %101 to i8*
  %103 = icmp sgt i32 %36, 0
  br i1 %103, label %104, label %131

104:                                              ; preds = %93
  %105 = sext i32 %35 to i64
  %106 = sext i32 %1 to i64
  %107 = sext i32 %3 to i64
  %108 = sext i32 %5 to i64
  br label %109

109:                                              ; preds = %109, %104
  %110 = phi i32 [ 0, %104 ], [ %129, %109 ]
  %111 = phi i8* [ %34, %104 ], [ %121, %109 ]
  %112 = phi i8* [ %0, %104 ], [ %122, %109 ]
  %113 = phi i8* [ %4, %104 ], [ %128, %109 ]
  %114 = phi i8* [ %2, %104 ], [ %127, %109 ]
  tail call void %66(i8* %112, i8* %114, i8* %113, i8* %102, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %9) #4
  %115 = shl i32 %110, 2
  %116 = and i32 %115, 12
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %38, i64 %117
  %119 = bitcast i8* %118 to i32*
  %120 = load i32, i32* %119, align 4
  tail call void %94(i8* %102, i8* %111, i32 %120, i32 %9) #4
  %121 = getelementptr inbounds i8, i8* %111, i64 %105
  %122 = getelementptr inbounds i8, i8* %112, i64 %106
  %123 = and i32 %110, 1
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds i8, i8* %114, i64 %107
  %126 = getelementptr inbounds i8, i8* %113, i64 %108
  %127 = select i1 %124, i8* %114, i8* %125
  %128 = select i1 %124, i8* %113, i8* %126
  %129 = add nuw nsw i32 %110, 1
  %130 = icmp eq i32 %129, %36
  br i1 %130, label %131, label %109

131:                                              ; preds = %109, %93
  tail call void @free(i8* %98) #4
  br label %132

132:                                              ; preds = %11, %131
  %133 = phi i32 [ 0, %131 ], [ -1, %11 ]
  ret i32 %133
}

declare void @ARGBToRGB565DitherRow_C(i8*, i8*, i32, i32) local_unnamed_addr #1

declare void @ARGBToRGB565DitherRow_Any_SSE2(i8*, i8*, i32, i32) local_unnamed_addr #1

declare void @ARGBToRGB565DitherRow_SSE2(i8*, i8*, i32, i32) local_unnamed_addr #1

declare void @ARGBToRGB565DitherRow_Any_AVX2(i8*, i8*, i32, i32) local_unnamed_addr #1

declare void @ARGBToRGB565DitherRow_AVX2(i8*, i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToAR30Matrix(i8*, i32, i8*, i32, i8*, i32, i8*, i32, %"struct.libyuv::YuvConstants"*, i32, i32) local_unnamed_addr #0 {
  %12 = icmp ne i8* %0, null
  %13 = icmp ne i8* %2, null
  %14 = and i1 %12, %13
  %15 = icmp ne i8* %4, null
  %16 = and i1 %14, %15
  %17 = icmp ne i8* %6, null
  %18 = and i1 %16, %17
  %19 = xor i1 %18, true
  %20 = icmp slt i32 %9, 1
  %21 = or i1 %20, %19
  %22 = icmp eq i32 %10, 0
  %23 = or i1 %21, %22
  br i1 %23, label %87, label %24

24:                                               ; preds = %11
  %25 = icmp slt i32 %10, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = sub nsw i32 0, %10
  %28 = xor i32 %10, -1
  %29 = mul nsw i32 %28, %7
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %6, i64 %30
  %32 = sub nsw i32 0, %7
  br label %33

33:                                               ; preds = %26, %24
  %34 = phi i8* [ %31, %26 ], [ %6, %24 ]
  %35 = phi i32 [ %32, %26 ], [ %7, %24 ]
  %36 = phi i32 [ %27, %26 ], [ %10, %24 ]
  %37 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = tail call i32 @InitCpuFlags() #4
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = and i32 %9, 7
  %47 = icmp eq i32 %46, 0
  %48 = select i1 %47, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToAR30Row_SSSE3, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToAR30Row_Any_SSSE3
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %48, %45 ], [ @I422ToAR30Row_C, %41 ]
  %51 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = tail call i32 @InitCpuFlags() #4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %49 ]
  %57 = and i32 %56, 1024
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = and i32 %9, 15
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToAR30Row_AVX2, void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* @I422ToAR30Row_Any_AVX2
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi void (i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32)* [ %62, %59 ], [ %50, %55 ]
  %65 = icmp sgt i32 %36, 0
  br i1 %65, label %66, label %87

66:                                               ; preds = %63
  %67 = sext i32 %35 to i64
  %68 = sext i32 %1 to i64
  %69 = sext i32 %3 to i64
  %70 = sext i32 %5 to i64
  br label %71

71:                                               ; preds = %71, %66
  %72 = phi i32 [ 0, %66 ], [ %85, %71 ]
  %73 = phi i8* [ %0, %66 ], [ %78, %71 ]
  %74 = phi i8* [ %34, %66 ], [ %77, %71 ]
  %75 = phi i8* [ %2, %66 ], [ %84, %71 ]
  %76 = phi i8* [ %4, %66 ], [ %83, %71 ]
  tail call void %64(i8* %73, i8* %75, i8* %76, i8* %74, %"struct.libyuv::YuvConstants"* %8, i32 %9) #4
  %77 = getelementptr inbounds i8, i8* %74, i64 %67
  %78 = getelementptr inbounds i8, i8* %73, i64 %68
  %79 = and i32 %72, 1
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds i8, i8* %75, i64 %69
  %82 = getelementptr inbounds i8, i8* %76, i64 %70
  %83 = select i1 %80, i8* %76, i8* %82
  %84 = select i1 %80, i8* %75, i8* %81
  %85 = add nuw nsw i32 %72, 1
  %86 = icmp eq i32 %85, %36
  br i1 %86, label %87, label %71

87:                                               ; preds = %71, %63, %11
  %88 = phi i32 [ -1, %11 ], [ 0, %63 ], [ 0, %71 ]
  ret i32 %88
}

declare void @I422ToAR30Row_C(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToAR30Row_Any_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToAR30Row_SSSE3(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToAR30Row_Any_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

declare void @I422ToAR30Row_AVX2(i8*, i8*, i8*, i8*, %"struct.libyuv::YuvConstants"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToAR30(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToAR30Matrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYuvI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H420ToAR30(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToAR30Matrix(i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @I420ToAB30(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToAR30Matrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuI601Constants, i32 %8, i32 %9)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @H420ToAB30(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @I420ToAR30Matrix(i8* %0, i32 %1, i8* %4, i32 %5, i8* %2, i32 %3, i8* %6, i32 %7, %"struct.libyuv::YuvConstants"* nonnull @kYvuH709Constants, i32 %8, i32 %9)
  ret i32 %11
}

declare i32 @InitCpuFlags() local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{void (i8*, i8*, i32)* @J400ToARGBRow_Any_SSE2, void (i8*, i8*, i32)* @J400ToARGBRow_C, void (i8*, i8*, i32)* @J400ToARGBRow_SSE2}
!3 = !{void (i8*, i8*, i32)* @RGB24ToARGBRow_Any_SSSE3, void (i8*, i8*, i32)* @RGB24ToARGBRow_C, void (i8*, i8*, i32)* @RGB24ToARGBRow_SSSE3}
!4 = !{void (i8*, i8*, i32)* @RAWToARGBRow_Any_SSSE3, void (i8*, i8*, i32)* @RAWToARGBRow_C, void (i8*, i8*, i32)* @RAWToARGBRow_SSSE3}
!5 = !{void (i8*, i8*, i32)* @RAWToRGBARow_Any_SSSE3, void (i8*, i8*, i32)* @RAWToRGBARow_C, void (i8*, i8*, i32)* @RAWToRGBARow_SSSE3}
!6 = !{void (i8*, i8*, i32)* @RGB565ToARGBRow_Any_SSE2, void (i8*, i8*, i32)* @RGB565ToARGBRow_C, void (i8*, i8*, i32)* @RGB565ToARGBRow_SSE2}
!7 = !{void (i8*, i8*, i32)* @ARGB1555ToARGBRow_Any_SSE2, void (i8*, i8*, i32)* @ARGB1555ToARGBRow_C, void (i8*, i8*, i32)* @ARGB1555ToARGBRow_SSE2}
!8 = !{void (i8*, i8*, i32)* @ARGB4444ToARGBRow_Any_SSE2, void (i8*, i8*, i32)* @ARGB4444ToARGBRow_C, void (i8*, i8*, i32)* @ARGB4444ToARGBRow_SSE2}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
