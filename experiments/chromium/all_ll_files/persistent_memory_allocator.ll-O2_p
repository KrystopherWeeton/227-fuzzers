; ModuleID = '../../base/metrics/persistent_memory_allocator.cc'
source_filename = "../../base/metrics/persistent_memory_allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::PersistentMemoryAllocator::Iterator" = type { %"class.base::PersistentMemoryAllocator"*, %"struct.std::__1::atomic.0", %"struct.std::__1::atomic.0" }
%"struct.std::__1::atomic.0" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i32 }
%"class.base::PersistentMemoryAllocator" = type { i32 (...)**, i8*, i32, i32, i32, i64, i8, %"struct.std::__1::atomic", %"class.base::HistogramBase"*, %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.0", [4 x i8] }>
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::LocalPersistentMemoryAllocator" = type { %"class.base::PersistentMemoryAllocator" }
%"class.base::WritableSharedPersistentMemoryAllocator" = type { %"class.base::PersistentMemoryAllocator", %"class.base::WritableSharedMemoryMapping" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::ReadOnlySharedPersistentMemoryAllocator" = type { %"class.base::PersistentMemoryAllocator", %"class.base::ReadOnlySharedMemoryMapping" }
%"class.base::ReadOnlySharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::FilePersistentMemoryAllocator" = type { %"class.base::PersistentMemoryAllocator", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::MemoryMappedFile"* }
%"class.base::MemoryMappedFile" = type { %"class.base::File", i8*, i64 }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.base::DelayedPersistentAllocation" = type { %"class.base::PersistentMemoryAllocator"*, i32, i32, i32, i8, %"struct.std::__1::atomic.0"* }
%"struct.base::PersistentMemoryAllocator::BlockHeader" = type { i32, i32, %"struct.std::__1::atomic.0", %"struct.std::__1::atomic.0" }
%"struct.base::PersistentMemoryAllocator::SharedMetadata" = type { i32, i32, i32, i32, i64, i32, i32, %"struct.std::__1::atomic.5", [3 x i8], %"struct.std::__1::atomic.0", %"struct.std::__1::atomic.0", %"struct.std::__1::atomic.0", %"struct.base::PersistentMemoryAllocator::BlockHeader" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i32 }
%"struct.base::PersistentMemoryAllocator::MemoryInfo" = type { i64, i64 }
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr.26" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.20 }
%struct.anon.20 = type { i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64 }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic.0", i32, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.11" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { %"class.base::ScopedBlockingCall" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN4base25PersistentMemoryAllocator15kAllocAlignmentE = hidden local_unnamed_addr constant i32 8, align 4
@_ZN4base25PersistentMemoryAllocator15kReferenceQueueE = hidden local_unnamed_addr constant i32 48, align 4
@_ZN4base25PersistentMemoryAllocator14kFileExtensionE = hidden local_unnamed_addr constant [5 x i8] c".pma\00", align 1
@_ZTVN4base25PersistentMemoryAllocatorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::PersistentMemoryAllocator"*)* @_ZN4base25PersistentMemoryAllocatorD2Ev to i8*), i8* bitcast (void (%"class.base::PersistentMemoryAllocator"*)* @_ZN4base25PersistentMemoryAllocatorD0Ev to i8*), i8* bitcast (void (%"class.base::PersistentMemoryAllocator"*, i64, i1)* @_ZN4base25PersistentMemoryAllocator12FlushPartialEmb to i8*)] }, align 8
@.str = private unnamed_addr constant [50 x i8] c"../../base/metrics/persistent_memory_allocator.cc\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"IsMemoryAcceptable(memory.base, size, page_size, readonly)\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"UMA.PersistentAllocator.\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c".UsedPct\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c".Errors\00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c"Corruption detected in shared-memory segment.\00", align 1
@_ZTVN4base30LocalPersistentMemoryAllocatorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::LocalPersistentMemoryAllocator"*)* @_ZN4base30LocalPersistentMemoryAllocatorD2Ev to i8*), i8* bitcast (void (%"class.base::LocalPersistentMemoryAllocator"*)* @_ZN4base30LocalPersistentMemoryAllocatorD0Ev to i8*), i8* bitcast (void (%"class.base::PersistentMemoryAllocator"*, i64, i1)* @_ZN4base25PersistentMemoryAllocator12FlushPartialEmb to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [50 x i8] c"UMA.LocalPersistentMemoryAllocator.Failures.Posix\00", align 1
@_ZTVN4base39WritableSharedPersistentMemoryAllocatorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::WritableSharedPersistentMemoryAllocator"*)* @_ZN4base39WritableSharedPersistentMemoryAllocatorD2Ev to i8*), i8* bitcast (void (%"class.base::WritableSharedPersistentMemoryAllocator"*)* @_ZN4base39WritableSharedPersistentMemoryAllocatorD0Ev to i8*), i8* bitcast (void (%"class.base::PersistentMemoryAllocator"*, i64, i1)* @_ZN4base25PersistentMemoryAllocator12FlushPartialEmb to i8*)] }, align 8
@_ZTVN4base39ReadOnlySharedPersistentMemoryAllocatorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ReadOnlySharedPersistentMemoryAllocator"*)* @_ZN4base39ReadOnlySharedPersistentMemoryAllocatorD2Ev to i8*), i8* bitcast (void (%"class.base::ReadOnlySharedPersistentMemoryAllocator"*)* @_ZN4base39ReadOnlySharedPersistentMemoryAllocatorD0Ev to i8*), i8* bitcast (void (%"class.base::PersistentMemoryAllocator"*, i64, i1)* @_ZN4base25PersistentMemoryAllocator12FlushPartialEmb to i8*)] }, align 8
@_ZTVN4base29FilePersistentMemoryAllocatorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::FilePersistentMemoryAllocator"*)* @_ZN4base29FilePersistentMemoryAllocatorD2Ev to i8*), i8* bitcast (void (%"class.base::FilePersistentMemoryAllocator"*)* @_ZN4base29FilePersistentMemoryAllocatorD0Ev to i8*), i8* bitcast (void (%"class.base::FilePersistentMemoryAllocator"*, i64, i1)* @_ZN4base29FilePersistentMemoryAllocator12FlushPartialEmb to i8*)] }, align 8
@.str.9 = private unnamed_addr constant [6 x i8] c"Cache\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"FlushPartial\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_ = hidden unnamed_addr alias void (%"class.base::PersistentMemoryAllocator::Iterator"*, %"class.base::PersistentMemoryAllocator"*), void (%"class.base::PersistentMemoryAllocator::Iterator"*, %"class.base::PersistentMemoryAllocator"*)* @_ZN4base25PersistentMemoryAllocator8IteratorC2EPKS0_
@_ZN4base25PersistentMemoryAllocator8IteratorC1EPKS0_j = hidden unnamed_addr alias void (%"class.base::PersistentMemoryAllocator::Iterator"*, %"class.base::PersistentMemoryAllocator"*, i32), void (%"class.base::PersistentMemoryAllocator::Iterator"*, %"class.base::PersistentMemoryAllocator"*, i32)* @_ZN4base25PersistentMemoryAllocator8IteratorC2EPKS0_j
@_ZN4base25PersistentMemoryAllocatorC1EPvmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb = hidden unnamed_addr alias void (%"class.base::PersistentMemoryAllocator"*, i8*, i64, i64, i64, %"class.base::BasicStringPiece"*, i1), void (%"class.base::PersistentMemoryAllocator"*, i8*, i64, i64, i64, %"class.base::BasicStringPiece"*, i1)* @_ZN4base25PersistentMemoryAllocatorC2EPvmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb
@_ZN4base25PersistentMemoryAllocatorC1ENS0_6MemoryEmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb = hidden unnamed_addr alias void (%"class.base::PersistentMemoryAllocator"*, i8*, i32, i64, i64, i64, %"class.base::BasicStringPiece"*, i1), void (%"class.base::PersistentMemoryAllocator"*, i8*, i32, i64, i64, i64, %"class.base::BasicStringPiece"*, i1)* @_ZN4base25PersistentMemoryAllocatorC2ENS0_6MemoryEmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb
@_ZN4base25PersistentMemoryAllocatorD1Ev = hidden unnamed_addr alias void (%"class.base::PersistentMemoryAllocator"*), void (%"class.base::PersistentMemoryAllocator"*)* @_ZN4base25PersistentMemoryAllocatorD2Ev
@_ZN4base30LocalPersistentMemoryAllocatorC1EmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE = hidden unnamed_addr alias void (%"class.base::LocalPersistentMemoryAllocator"*, i64, i64, i8*, i64), void (%"class.base::LocalPersistentMemoryAllocator"*, i64, i64, i8*, i64)* @_ZN4base30LocalPersistentMemoryAllocatorC2EmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE
@_ZN4base30LocalPersistentMemoryAllocatorD1Ev = hidden unnamed_addr alias void (%"class.base::LocalPersistentMemoryAllocator"*), void (%"class.base::LocalPersistentMemoryAllocator"*)* @_ZN4base30LocalPersistentMemoryAllocatorD2Ev
@_ZN4base39WritableSharedPersistentMemoryAllocatorC1ENS_27WritableSharedMemoryMappingEmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE = hidden unnamed_addr alias void (%"class.base::WritableSharedPersistentMemoryAllocator"*, %"class.base::WritableSharedMemoryMapping"*, i64, i8*, i64), void (%"class.base::WritableSharedPersistentMemoryAllocator"*, %"class.base::WritableSharedMemoryMapping"*, i64, i8*, i64)* @_ZN4base39WritableSharedPersistentMemoryAllocatorC2ENS_27WritableSharedMemoryMappingEmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE
@_ZN4base39WritableSharedPersistentMemoryAllocatorD1Ev = hidden unnamed_addr alias void (%"class.base::WritableSharedPersistentMemoryAllocator"*), void (%"class.base::WritableSharedPersistentMemoryAllocator"*)* @_ZN4base39WritableSharedPersistentMemoryAllocatorD2Ev
@_ZN4base39ReadOnlySharedPersistentMemoryAllocatorC1ENS_27ReadOnlySharedMemoryMappingEmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE = hidden unnamed_addr alias void (%"class.base::ReadOnlySharedPersistentMemoryAllocator"*, %"class.base::ReadOnlySharedMemoryMapping"*, i64, i8*, i64), void (%"class.base::ReadOnlySharedPersistentMemoryAllocator"*, %"class.base::ReadOnlySharedMemoryMapping"*, i64, i8*, i64)* @_ZN4base39ReadOnlySharedPersistentMemoryAllocatorC2ENS_27ReadOnlySharedMemoryMappingEmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE
@_ZN4base39ReadOnlySharedPersistentMemoryAllocatorD1Ev = hidden unnamed_addr alias void (%"class.base::ReadOnlySharedPersistentMemoryAllocator"*), void (%"class.base::ReadOnlySharedPersistentMemoryAllocator"*)* @_ZN4base39ReadOnlySharedPersistentMemoryAllocatorD2Ev
@_ZN4base29FilePersistentMemoryAllocatorC1ENSt3__110unique_ptrINS_16MemoryMappedFileENS1_14default_deleteIS3_EEEEmmNS_16BasicStringPieceIcNS1_11char_traitsIcEEEEb = hidden unnamed_addr alias void (%"class.base::FilePersistentMemoryAllocator"*, %"class.base::MemoryMappedFile"*, i64, i64, i8*, i64, i1), void (%"class.base::FilePersistentMemoryAllocator"*, %"class.base::MemoryMappedFile"*, i64, i64, i8*, i64, i1)* @_ZN4base29FilePersistentMemoryAllocatorC2ENSt3__110unique_ptrINS_16MemoryMappedFileENS1_14default_deleteIS3_EEEEmmNS_16BasicStringPieceIcNS1_11char_traitsIcEEEEb
@_ZN4base29FilePersistentMemoryAllocatorD1Ev = hidden unnamed_addr alias void (%"class.base::FilePersistentMemoryAllocator"*), void (%"class.base::FilePersistentMemoryAllocator"*)* @_ZN4base29FilePersistentMemoryAllocatorD2Ev
@_ZN4base27DelayedPersistentAllocationC1EPNS_25PersistentMemoryAllocatorEPijmb = hidden unnamed_addr alias void (%"class.base::DelayedPersistentAllocation"*, %"class.base::PersistentMemoryAllocator"*, i32*, i32, i64, i1), void (%"class.base::DelayedPersistentAllocation"*, %"class.base::PersistentMemoryAllocator"*, i32*, i32, i64, i1)* @_ZN4base27DelayedPersistentAllocationC2EPNS_25PersistentMemoryAllocatorEPijmb
@_ZN4base27DelayedPersistentAllocationC1EPNS_25PersistentMemoryAllocatorEPijmmb = hidden unnamed_addr alias void (%"class.base::DelayedPersistentAllocation"*, %"class.base::PersistentMemoryAllocator"*, i32*, i32, i64, i64, i1), void (%"class.base::DelayedPersistentAllocation"*, %"class.base::PersistentMemoryAllocator"*, i32*, i32, i64, i64, i1)* @_ZN4base27DelayedPersistentAllocationC2EPNS_25PersistentMemoryAllocatorEPijmmb
@_ZN4base27DelayedPersistentAllocationC1EPNS_25PersistentMemoryAllocatorEPNSt3__16atomicIjEEjmb = hidden unnamed_addr alias void (%"class.base::DelayedPersistentAllocation"*, %"class.base::PersistentMemoryAllocator"*, %"struct.std::__1::atomic.0"*, i32, i64, i1), void (%"class.base::DelayedPersistentAllocation"*, %"class.base::PersistentMemoryAllocator"*, %"struct.std::__1::atomic.0"*, i32, i64, i1)* @_ZN4base27DelayedPersistentAllocationC2EPNS_25PersistentMemoryAllocatorEPNSt3__16atomicIjEEjmb
@_ZN4base27DelayedPersistentAllocationC1EPNS_25PersistentMemoryAllocatorEPNSt3__16atomicIjEEjmmb = hidden unnamed_addr alias void (%"class.base::DelayedPersistentAllocation"*, %"class.base::PersistentMemoryAllocator"*, %"struct.std::__1::atomic.0"*, i32, i64, i64, i1), void (%"class.base::DelayedPersistentAllocation"*, %"class.base::PersistentMemoryAllocator"*, %"struct.std::__1::atomic.0"*, i32, i64, i64, i1)* @_ZN4base27DelayedPersistentAllocationC2EPNS_25PersistentMemoryAllocatorEPNSt3__16atomicIjEEjmmb
@_ZN4base27DelayedPersistentAllocationD1Ev = hidden unnamed_addr alias void (%"class.base::DelayedPersistentAllocation"*), void (%"class.base::DelayedPersistentAllocation"*)* @_ZN4base27DelayedPersistentAllocationD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base25PersistentMemoryAllocator8IteratorC2EPKS0_(%"class.base::PersistentMemoryAllocator::Iterator"* nocapture, %"class.base::PersistentMemoryAllocator"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 0
  store %"class.base::PersistentMemoryAllocator"* %1, %"class.base::PersistentMemoryAllocator"** %3, align 8
  %4 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 48, i32* %4, align 4
  %5 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %5, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base25PersistentMemoryAllocator8IteratorC2EPKS0_j(%"class.base::PersistentMemoryAllocator::Iterator"* nocapture, %"class.base::PersistentMemoryAllocator"*, i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 0
  store %"class.base::PersistentMemoryAllocator"* %1, %"class.base::PersistentMemoryAllocator"** %4, align 8
  %5 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %6, align 4
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  store atomic i32 48, i32* %5 monotonic, align 4
  store atomic i32 0, i32* %6 monotonic, align 4
  br label %44

9:                                                ; preds = %3
  store atomic i32 %2, i32* %5 monotonic, align 4
  store atomic i32 0, i32* %6 monotonic, align 4
  %10 = zext i32 %2 to i64
  %11 = icmp ugt i32 %2, 63
  %12 = and i32 %2, 7
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %43

15:                                               ; preds = %9
  %16 = add i32 %2, 16
  %17 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %1, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = icmp ugt i32 %16, %18
  br i1 %19, label %43, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %1, i64 0, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %10
  %24 = getelementptr inbounds i8, i8* %23, i64 4
  %25 = bitcast i8* %24 to i32*
  %26 = load volatile i32, i32* %25, align 4
  %27 = icmp eq i32 %26, -931556759
  br i1 %27, label %28, label %43

28:                                               ; preds = %20
  %29 = bitcast i8* %23 to i32*
  %30 = load volatile i32, i32* %29, align 4
  %31 = icmp ult i32 %30, 16
  br i1 %31, label %43, label %32

32:                                               ; preds = %28
  %33 = load volatile i32, i32* %29, align 4
  %34 = add i32 %33, %2
  %35 = icmp ugt i32 %34, %18
  %36 = icmp eq i8* %23, null
  %37 = or i1 %36, %35
  br i1 %37, label %43, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds i8, i8* %23, i64 12
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %38, %32, %28, %20, %15, %9
  store atomic i32 48, i32* %5 release, align 4
  br label %44

44:                                               ; preds = %8, %38, %43
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base25PersistentMemoryAllocator8Iterator5ResetEj(%"class.base::PersistentMemoryAllocator::Iterator"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %3, label %5, label %7

5:                                                ; preds = %2
  store atomic i32 48, i32* %4 monotonic, align 4
  %6 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %6 monotonic, align 4
  br label %45

7:                                                ; preds = %2
  store atomic i32 %1, i32* %4 monotonic, align 4
  %8 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %8 monotonic, align 4
  %9 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 0
  %10 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %9, align 8
  %11 = zext i32 %1 to i64
  %12 = icmp ugt i32 %1, 63
  %13 = and i32 %1, 7
  %14 = icmp eq i32 %13, 0
  %15 = and i1 %12, %14
  br i1 %15, label %16, label %44

16:                                               ; preds = %7
  %17 = add i32 %1, 16
  %18 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %10, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %44, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %10, i64 0, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %11
  %25 = getelementptr inbounds i8, i8* %24, i64 4
  %26 = bitcast i8* %25 to i32*
  %27 = load volatile i32, i32* %26, align 4
  %28 = icmp eq i32 %27, -931556759
  br i1 %28, label %29, label %44

29:                                               ; preds = %21
  %30 = bitcast i8* %24 to i32*
  %31 = load volatile i32, i32* %30, align 4
  %32 = icmp ult i32 %31, 16
  br i1 %32, label %44, label %33

33:                                               ; preds = %29
  %34 = load volatile i32, i32* %30, align 4
  %35 = add i32 %34, %1
  %36 = icmp ugt i32 %35, %19
  %37 = icmp eq i8* %24, null
  %38 = or i1 %37, %36
  br i1 %38, label %44, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds i8, i8* %24, i64 12
  %41 = bitcast i8* %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %21, %29, %33, %16, %7, %39
  store atomic i32 48, i32* %4 release, align 4
  br label %45

45:                                               ; preds = %39, %44, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base25PersistentMemoryAllocator8Iterator5ResetEv(%"class.base::PersistentMemoryAllocator::Iterator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 48, i32* %2 monotonic, align 4
  %3 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %3 monotonic, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"struct.base::PersistentMemoryAllocator::BlockHeader"* @_ZNK4base25PersistentMemoryAllocator8GetBlockEjjjbb(%"class.base::PersistentMemoryAllocator"* nocapture readonly, i32, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #1 align 2 {
  %7 = icmp ne i32 %1, 48
  %8 = xor i1 %4, true
  %9 = or i1 %7, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 48
  %14 = bitcast i8* %13 to %"struct.base::PersistentMemoryAllocator::BlockHeader"*
  br label %54

15:                                               ; preds = %6
  %16 = zext i32 %1 to i64
  %17 = icmp ugt i32 %1, 63
  %18 = and i32 %1, 7
  %19 = icmp eq i32 %18, 0
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %54

21:                                               ; preds = %15
  %22 = add i32 %3, 16
  %23 = add i32 %22, %1
  %24 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp ugt i32 %23, %25
  br i1 %26, label %54, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8
  br i1 %5, label %51, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds i8, i8* %29, i64 %16
  %32 = getelementptr inbounds i8, i8* %31, i64 4
  %33 = bitcast i8* %32 to i32*
  %34 = load volatile i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -931556759
  br i1 %35, label %36, label %54

36:                                               ; preds = %30
  %37 = bitcast i8* %31 to i32*
  %38 = load volatile i32, i32* %37, align 4
  %39 = icmp ult i32 %38, %22
  br i1 %39, label %54, label %40

40:                                               ; preds = %36
  %41 = load volatile i32, i32* %37, align 4
  %42 = add i32 %41, %1
  %43 = icmp ugt i32 %42, %25
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = icmp eq i32 %2, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds i8, i8* %31, i64 8
  %48 = bitcast i8* %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = icmp eq i32 %49, %2
  br i1 %50, label %51, label %54

51:                                               ; preds = %27, %46, %44
  %52 = getelementptr inbounds i8, i8* %29, i64 %16
  %53 = bitcast i8* %52 to %"struct.base::PersistentMemoryAllocator::BlockHeader"*
  br label %54

54:                                               ; preds = %15, %30, %36, %40, %46, %21, %51, %10
  %55 = phi %"struct.base::PersistentMemoryAllocator::BlockHeader"* [ %14, %10 ], [ %53, %51 ], [ null, %15 ], [ null, %21 ], [ null, %46 ], [ null, %40 ], [ null, %36 ], [ null, %30 ]
  ret %"struct.base::PersistentMemoryAllocator::BlockHeader"* %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN4base25PersistentMemoryAllocator8Iterator7GetLastEv(%"class.base::PersistentMemoryAllocator::Iterator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = icmp eq i32 %3, 48
  %5 = select i1 %4, i32 0, i32 %3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base25PersistentMemoryAllocator8Iterator7GetNextEPj(%"class.base::PersistentMemoryAllocator::Iterator"* nocapture, i32* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 acquire, align 4
  %5 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 acquire, align 4
  %7 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 0
  br label %8

8:                                                ; preds = %85, %2
  %9 = phi i32 [ %6, %2 ], [ %86, %85 ]
  %10 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %7, align 8
  %11 = icmp eq i32 %9, 48
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %10, i64 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 48
  br label %43

16:                                               ; preds = %8
  %17 = zext i32 %9 to i64
  %18 = icmp ugt i32 %9, 63
  %19 = and i32 %9, 7
  %20 = icmp eq i32 %19, 0
  %21 = and i1 %18, %20
  br i1 %21, label %22, label %106

22:                                               ; preds = %16
  %23 = add i32 %9, 16
  %24 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %10, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp ugt i32 %23, %25
  br i1 %26, label %106, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %10, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %17
  %31 = getelementptr inbounds i8, i8* %30, i64 4
  %32 = bitcast i8* %31 to i32*
  %33 = load volatile i32, i32* %32, align 4
  %34 = icmp eq i32 %33, -931556759
  br i1 %34, label %35, label %106

35:                                               ; preds = %27
  %36 = bitcast i8* %30 to i32*
  %37 = load volatile i32, i32* %36, align 4
  %38 = icmp ult i32 %37, 16
  br i1 %38, label %106, label %39

39:                                               ; preds = %35
  %40 = load volatile i32, i32* %36, align 4
  %41 = add i32 %40, %9
  %42 = icmp ugt i32 %41, %25
  br i1 %42, label %106, label %43

43:                                               ; preds = %39, %12
  %44 = phi i8* [ %15, %12 ], [ %30, %39 ]
  %45 = icmp eq i8* %44, null
  br i1 %45, label %106, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds i8, i8* %44, i64 12
  %48 = bitcast i8* %47 to i32*
  %49 = load atomic i32, i32* %48 acquire, align 4
  %50 = icmp eq i32 %49, 48
  br i1 %50, label %106, label %51

51:                                               ; preds = %46
  %52 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %7, align 8
  %53 = zext i32 %49 to i64
  %54 = icmp ugt i32 %49, 63
  %55 = and i32 %49, 7
  %56 = icmp eq i32 %55, 0
  %57 = and i1 %54, %56
  br i1 %57, label %58, label %81

58:                                               ; preds = %51
  %59 = add i32 %49, 16
  %60 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %52, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = icmp ugt i32 %59, %61
  br i1 %62, label %81, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %52, i64 0, i32 1
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %53
  %67 = getelementptr inbounds i8, i8* %66, i64 4
  %68 = bitcast i8* %67 to i32*
  %69 = load volatile i32, i32* %68, align 4
  %70 = icmp eq i32 %69, -931556759
  br i1 %70, label %71, label %81

71:                                               ; preds = %63
  %72 = bitcast i8* %66 to i32*
  %73 = load volatile i32, i32* %72, align 4
  %74 = icmp ult i32 %73, 16
  br i1 %74, label %81, label %75

75:                                               ; preds = %71
  %76 = load volatile i32, i32* %72, align 4
  %77 = add i32 %76, %49
  %78 = icmp ugt i32 %77, %61
  %79 = icmp eq i8* %66, null
  %80 = or i1 %79, %78
  br i1 %80, label %81, label %82

81:                                               ; preds = %63, %71, %75, %58, %51
  tail call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %52)
  br label %106

82:                                               ; preds = %75
  %83 = cmpxchg i32* %5, i32 %9, i32 %49 acq_rel acquire
  %84 = extractvalue { i32, i1 } %83, 1
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = extractvalue { i32, i1 } %83, 0
  br label %8

87:                                               ; preds = %82
  %88 = getelementptr inbounds i8, i8* %66, i64 8
  %89 = bitcast i8* %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  store i32 %90, i32* %1, align 4
  %91 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %7, align 8
  %92 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %91, i64 0, i32 1
  %93 = bitcast i8** %92 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %94 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %93, align 8
  %95 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %94, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %91, i64 0, i32 3
  %98 = load i32, i32* %97, align 4
  %99 = icmp ult i32 %98, %96
  %100 = select i1 %99, i32 %98, i32 %96
  %101 = udiv i32 %100, 24
  %102 = icmp ugt i32 %4, %101
  br i1 %102, label %103, label %104

103:                                              ; preds = %87
  tail call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %91)
  br label %106

104:                                              ; preds = %87
  %105 = atomicrmw add i32* %3, i32 1 release
  br label %106

106:                                              ; preds = %27, %35, %39, %22, %16, %46, %43, %81, %103, %104
  %107 = phi i32 [ 0, %103 ], [ %49, %104 ], [ 0, %81 ], [ 0, %43 ], [ 0, %46 ], [ 0, %16 ], [ 0, %22 ], [ 0, %39 ], [ 0, %35 ], [ 0, %27 ]
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i8, i8* %3 monotonic, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %31

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %9 = bitcast i8** %8 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %10 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %9, align 8
  %11 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %10, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %7
  %16 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #14
  br i1 %16, label %17, label %22

17:                                               ; preds = %15
  %18 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %18) #14
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 844, i32 2) #14
  %19 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %20 = bitcast %"class.std::__1::basic_ostringstream"* %19 to %"class.std::__1::basic_ostream"*
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), i64 45) #14
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %18) #14
  br label %22

22:                                               ; preds = %15, %17
  %23 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 10
  %24 = load %"class.base::HistogramBase"*, %"class.base::HistogramBase"** %23, align 8
  %25 = icmp eq %"class.base::HistogramBase"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.base::HistogramBase"* %24 to void (%"class.base::HistogramBase"*, i32)***
  %28 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %28, i64 6
  %30 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %29, align 8
  call void %30(%"class.base::HistogramBase"* nonnull %24, i32 1) #14
  br label %31

31:                                               ; preds = %7, %1, %26, %22
  store atomic i8 1, i8* %3 monotonic, align 1
  %32 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %50

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %37 = bitcast i8** %36 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %38 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %37, align 8
  %39 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %38, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = or i32 %40, 1
  %42 = cmpxchg weak volatile i32* %39, i32 %40, i32 %41 monotonic monotonic
  %43 = extractvalue { i32, i1 } %42, 1
  br i1 %43, label %50, label %44

44:                                               ; preds = %35, %44
  %45 = phi { i32, i1 } [ %48, %44 ], [ %42, %35 ]
  %46 = extractvalue { i32, i1 } %45, 0
  %47 = or i32 %46, 1
  %48 = cmpxchg weak volatile i32* %39, i32 %46, i32 %47 monotonic monotonic
  %49 = extractvalue { i32, i1 } %48, 1
  br i1 %49, label %50, label %44

50:                                               ; preds = %44, %35, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base25PersistentMemoryAllocator8Iterator13GetNextOfTypeEj(%"class.base::PersistentMemoryAllocator::Iterator"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #14
  store i32 -1431655766, i32* %3, align 4
  br label %5

5:                                                ; preds = %5, %2
  %6 = call i32 @_ZN4base25PersistentMemoryAllocator8Iterator7GetNextEPj(%"class.base::PersistentMemoryAllocator::Iterator"* %0, i32* nonnull %3)
  %7 = icmp eq i32 %6, 0
  %8 = load i32, i32* %3, align 4
  %9 = icmp eq i32 %8, %1
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #14
  ret i32 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4base25PersistentMemoryAllocator18IsMemoryAcceptableEPKvmmb(i8*, i64, i64, i1 zeroext) local_unnamed_addr #4 align 2 {
  %5 = icmp eq i8* %0, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %4
  %7 = ptrtoint i8* %0 to i64
  %8 = and i64 %7, 7
  %9 = icmp eq i64 %8, 0
  %10 = add i64 %1, -64
  %11 = icmp ult i64 %10, 1073741761
  %12 = and i1 %11, %9
  br i1 %12, label %13, label %23

13:                                               ; preds = %6
  %14 = and i64 %1, 7
  %15 = icmp eq i64 %14, 0
  %16 = or i1 %15, %3
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = icmp eq i64 %2, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %17
  %20 = urem i64 %1, %2
  %21 = icmp eq i64 %20, 0
  %22 = or i1 %21, %3
  ret i1 %22

23:                                               ; preds = %13, %4, %17, %6
  %24 = phi i1 [ false, %6 ], [ false, %4 ], [ true, %17 ], [ false, %13 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25PersistentMemoryAllocatorC2EPvmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::PersistentMemoryAllocator"*, i8*, i64, i64, i64, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8, i1 zeroext) unnamed_addr #3 align 2 {
  tail call void @_ZN4base25PersistentMemoryAllocatorC2ENS0_6MemoryEmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::PersistentMemoryAllocator"* %0, i8* %1, i32 0, i64 %2, i64 %3, i64 %4, %"class.base::BasicStringPiece"* nonnull byval(%"class.base::BasicStringPiece") align 8 %5, i1 zeroext %6)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25PersistentMemoryAllocatorC2ENS0_6MemoryEmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::PersistentMemoryAllocator"*, i8*, i32, i64, i64, i64, %"class.base::BasicStringPiece"* nocapture readonly byval(%"class.base::BasicStringPiece") align 8, i1 zeroext) unnamed_addr #3 align 2 {
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = zext i1 %7 to i8
  %11 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base25PersistentMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  store i8* %1, i8** %12, align 8
  %13 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 2
  store i32 %2, i32* %13, align 8
  %14 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %15 = trunc i64 %3 to i32
  store i32 %15, i32* %14, align 4
  %16 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 4
  %17 = icmp eq i64 %4, 0
  %18 = select i1 %17, i64 %3, i64 %4
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %16, align 8
  %20 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 5
  %21 = tail call i64 @_ZN4base7SysInfo23VMAllocationGranularityEv() #14
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 6
  store i8 %10, i8* %22, align 8
  %23 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 8
  %25 = icmp eq i8* %1, null
  %26 = bitcast %"class.base::HistogramBase"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false)
  br i1 %25, label %43, label %27

27:                                               ; preds = %8
  %28 = ptrtoint i8* %1 to i64
  %29 = and i64 %28, 7
  %30 = icmp eq i64 %29, 0
  %31 = add i64 %3, -64
  %32 = icmp ult i64 %31, 1073741761
  %33 = and i1 %30, %32
  br i1 %33, label %34, label %43

34:                                               ; preds = %27
  %35 = and i64 %3, 7
  %36 = icmp eq i64 %35, 0
  %37 = or i1 %36, %7
  br i1 %37, label %38, label %43

38:                                               ; preds = %34
  br i1 %17, label %46, label %39

39:                                               ; preds = %38
  %40 = urem i64 %3, %4
  %41 = icmp eq i64 %40, 0
  %42 = or i1 %41, %7
  br i1 %42, label %46, label %43

43:                                               ; preds = %34, %8, %27, %39
  %44 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 351, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0)) #14
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #14
  br label %46

46:                                               ; preds = %38, %43, %39
  %47 = bitcast i8** %12 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %48 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %49 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 1082328540
  br i1 %51, label %200, label %52

52:                                               ; preds = %46
  br i1 %7, label %53, label %54

53:                                               ; preds = %52
  call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0)
  br label %258

54:                                               ; preds = %52
  %55 = icmp eq i32 %50, 0
  br i1 %55, label %56, label %109

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %109

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %109

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %109

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %109

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 0, i32 4
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %109

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 0, i32 5
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %109

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 seq_cst, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %109

84:                                               ; preds = %80
  %85 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %86 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %85, i64 0, i32 12, i32 1
  %87 = load volatile i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %109

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %85, i64 0, i32 12, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %109

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 1, i32 0
  %95 = load volatile i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %109

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 1, i32 1
  %99 = load volatile i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %109

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 1, i32 2
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %109

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 1, i32 3
  %107 = load atomic i32, i32* %106 seq_cst, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %105, %101, %97, %93, %89, %84, %80, %76, %72, %68, %64, %60, %56, %54
  call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0)
  br label %110

110:                                              ; preds = %105, %109
  %111 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %112 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %111, i64 0, i32 0
  store i32 1082328540, i32* %112, align 8
  %113 = load i32, i32* %14, align 4
  %114 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %115 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %114, i64 0, i32 1
  store i32 %113, i32* %115, align 4
  %116 = load i32, i32* %16, align 8
  %117 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %118 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %117, i64 0, i32 2
  store i32 %116, i32* %118, align 8
  %119 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %120 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %119, i64 0, i32 3
  store i32 2, i32* %120, align 4
  %121 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %122 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %121, i64 0, i32 4
  store i64 %5, i64* %122, align 8
  %123 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %124 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %123, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i32 64, i32* %124 release, align 4
  %125 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %126 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %125, i64 0, i32 12, i32 0
  store volatile i32 16, i32* %126, align 8
  %127 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %128 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %127, i64 0, i32 12, i32 1
  store volatile i32 1, i32* %128, align 4
  %129 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %130 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %129, i64 0, i32 12, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i32 48, i32* %130 release, align 4
  %131 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %132 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %131, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i32 48, i32* %132 release, align 4
  %133 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %197, label %136

136:                                              ; preds = %110
  %137 = add i64 %134, 1
  %138 = call i32 @_ZN4base25PersistentMemoryAllocator12AllocateImplEmj(%"class.base::PersistentMemoryAllocator"* %0, i64 %137, i32 0) #14
  %139 = icmp eq i32 %138, 0
  %140 = load %"class.base::HistogramBase"*, %"class.base::HistogramBase"** %24, align 8
  %141 = icmp ne %"class.base::HistogramBase"* %140, null
  br i1 %139, label %149, label %142

142:                                              ; preds = %136
  br i1 %141, label %143, label %155

143:                                              ; preds = %142
  %144 = trunc i64 %137 to i32
  %145 = bitcast %"class.base::HistogramBase"* %140 to void (%"class.base::HistogramBase"*, i32)***
  %146 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %146, i64 6
  %148 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %147, align 8
  call void %148(%"class.base::HistogramBase"* nonnull %140, i32 %144) #14
  br label %155

149:                                              ; preds = %136
  br i1 %141, label %150, label %155

150:                                              ; preds = %149
  %151 = bitcast %"class.base::HistogramBase"* %140 to void (%"class.base::HistogramBase"*, i32)***
  %152 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %152, i64 6
  %154 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %153, align 8
  call void %154(%"class.base::HistogramBase"* nonnull %140, i32 0) #14
  br label %155

155:                                              ; preds = %142, %143, %149, %150
  %156 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %157 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %156, i64 0, i32 5
  store i32 %138, i32* %157, align 8
  %158 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %159 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %158, i64 0, i32 5
  %160 = load i32, i32* %159, align 8
  %161 = zext i32 %160 to i64
  %162 = icmp ugt i32 %160, 63
  %163 = and i32 %160, 7
  %164 = icmp eq i32 %163, 0
  %165 = and i1 %162, %164
  %166 = bitcast %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %158 to i8*
  br i1 %165, label %167, label %197

167:                                              ; preds = %155
  %168 = trunc i64 %137 to i32
  %169 = add i32 %168, 16
  %170 = add i32 %160, %169
  %171 = load i32, i32* %14, align 4
  %172 = icmp ugt i32 %170, %171
  br i1 %172, label %197, label %173

173:                                              ; preds = %167
  %174 = getelementptr inbounds i8, i8* %166, i64 %161
  %175 = getelementptr inbounds i8, i8* %174, i64 4
  %176 = bitcast i8* %175 to i32*
  %177 = load volatile i32, i32* %176, align 4
  %178 = icmp eq i32 %177, -931556759
  br i1 %178, label %179, label %197

179:                                              ; preds = %173
  %180 = bitcast i8* %174 to i32*
  %181 = load volatile i32, i32* %180, align 4
  %182 = icmp ult i32 %181, %169
  br i1 %182, label %197, label %183

183:                                              ; preds = %179
  %184 = load volatile i32, i32* %180, align 4
  %185 = add i32 %184, %160
  %186 = icmp ugt i32 %185, %171
  %187 = bitcast i8* %174 to %"struct.base::PersistentMemoryAllocator::BlockHeader"*
  %188 = select i1 %186, %"struct.base::PersistentMemoryAllocator::BlockHeader"* null, %"struct.base::PersistentMemoryAllocator::BlockHeader"* %187
  %189 = icmp eq %"struct.base::PersistentMemoryAllocator::BlockHeader"* %188, null
  %190 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::BlockHeader", %"struct.base::PersistentMemoryAllocator::BlockHeader"* %188, i64 1
  %191 = icmp eq %"struct.base::PersistentMemoryAllocator::BlockHeader"* %190, null
  %192 = or i1 %189, %191
  br i1 %192, label %197, label %193

193:                                              ; preds = %183
  %194 = bitcast %"struct.base::PersistentMemoryAllocator::BlockHeader"* %190 to i8*
  %195 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %196 = load i8*, i8** %195, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %194, i8* align 1 %196, i64 %134, i1 false)
  br label %197

197:                                              ; preds = %173, %179, %167, %155, %193, %183, %110
  %198 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %199 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %198, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i8 1, i8* %199 release, align 1
  br label %258

200:                                              ; preds = %46
  %201 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %225, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 0, i32 3
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 2
  br i1 %207, label %208, label %225

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %225, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %48, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 seq_cst, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %225, label %216

216:                                              ; preds = %212
  %217 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %218 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %217, i64 0, i32 12, i32 1
  %219 = load volatile i32, i32* %218, align 4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %225, label %221

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %217, i64 0, i32 12, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %204, %221, %216, %212, %208, %200
  call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0)
  br label %226

226:                                              ; preds = %225, %221
  br i1 %7, label %258, label %227

227:                                              ; preds = %226
  %228 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %47, align 8
  %229 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %228, i64 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = load i32, i32* %14, align 4
  %232 = icmp ult i32 %230, %231
  br i1 %232, label %233, label %234

233:                                              ; preds = %227
  store i32 %230, i32* %14, align 4
  br label %234

234:                                              ; preds = %233, %227
  %235 = phi i32 [ %230, %233 ], [ %231, %227 ]
  %236 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %228, i64 0, i32 2
  %237 = load i32, i32* %236, align 8
  %238 = load i32, i32* %16, align 8
  %239 = icmp ult i32 %237, %238
  br i1 %239, label %240, label %241

240:                                              ; preds = %234
  store i32 %237, i32* %16, align 8
  br label %241

241:                                              ; preds = %240, %234
  %242 = phi i32 [ %237, %240 ], [ %238, %234 ]
  %243 = zext i32 %235 to i64
  br i1 %25, label %257, label %244

244:                                              ; preds = %241
  %245 = ptrtoint i8* %1 to i64
  %246 = add nsw i64 %243, -64
  %247 = icmp ult i64 %246, 1073741761
  %248 = or i64 %245, %243
  %249 = and i64 %248, 7
  %250 = icmp eq i64 %249, 0
  %251 = and i1 %250, %247
  br i1 %251, label %252, label %257

252:                                              ; preds = %244
  %253 = icmp eq i32 %242, 0
  br i1 %253, label %258, label %254

254:                                              ; preds = %252
  %255 = urem i32 %235, %242
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %258, label %257

257:                                              ; preds = %241, %244, %254
  call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0)
  br label %258

258:                                              ; preds = %252, %226, %257, %254, %53, %197
  ret void
}

declare i64 @_ZN4base7SysInfo23VMAllocationGranularityEv() local_unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base25PersistentMemoryAllocator8AllocateEmj(%"class.base::PersistentMemoryAllocator"* nocapture, i64, i32) local_unnamed_addr #3 align 2 {
  %4 = tail call i32 @_ZN4base25PersistentMemoryAllocator12AllocateImplEmj(%"class.base::PersistentMemoryAllocator"* %0, i64 %1, i32 %2)
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 8
  %7 = load %"class.base::HistogramBase"*, %"class.base::HistogramBase"** %6, align 8
  %8 = icmp ne %"class.base::HistogramBase"* %7, null
  br i1 %5, label %16, label %9

9:                                                ; preds = %3
  br i1 %8, label %10, label %22

10:                                               ; preds = %9
  %11 = trunc i64 %1 to i32
  %12 = bitcast %"class.base::HistogramBase"* %7 to void (%"class.base::HistogramBase"*, i32)***
  %13 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, i64 6
  %15 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %14, align 8
  tail call void %15(%"class.base::HistogramBase"* nonnull %7, i32 %11) #14
  br label %22

16:                                               ; preds = %3
  br i1 %8, label %17, label %22

17:                                               ; preds = %16
  %18 = bitcast %"class.base::HistogramBase"* %7 to void (%"class.base::HistogramBase"*, i32)***
  %19 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %19, i64 6
  %21 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %20, align 8
  tail call void %21(%"class.base::HistogramBase"* nonnull %7, i32 0) #14
  br label %22

22:                                               ; preds = %16, %17, %9, %10
  ret i32 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base25PersistentMemoryAllocatorD2Ev(%"class.base::PersistentMemoryAllocator"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25PersistentMemoryAllocatorD0Ev(%"class.base::PersistentMemoryAllocator"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.base::PersistentMemoryAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4base25PersistentMemoryAllocator2IdEv(%"class.base::PersistentMemoryAllocator"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %4 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %3, align 8
  %5 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %4, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK4base25PersistentMemoryAllocator4NameEv(%"class.base::PersistentMemoryAllocator"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %4 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %3, align 8
  %5 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %4, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = icmp ugt i32 %6, 63
  %9 = and i32 %6, 7
  %10 = icmp eq i32 %9, 0
  %11 = and i1 %8, %10
  %12 = bitcast %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %4 to i8*
  br i1 %11, label %13, label %34

13:                                               ; preds = %1
  %14 = add i32 %6, 17
  %15 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp ugt i32 %14, %16
  br i1 %17, label %34, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds i8, i8* %12, i64 %7
  %20 = getelementptr inbounds i8, i8* %19, i64 4
  %21 = bitcast i8* %20 to i32*
  %22 = load volatile i32, i32* %21, align 4
  %23 = icmp eq i32 %22, -931556759
  br i1 %23, label %24, label %34

24:                                               ; preds = %18
  %25 = bitcast i8* %19 to i32*
  %26 = load volatile i32, i32* %25, align 4
  %27 = icmp ult i32 %26, 17
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = load volatile i32, i32* %25, align 4
  %30 = add i32 %29, %6
  %31 = icmp ugt i32 %30, %16
  %32 = bitcast i8* %19 to %"struct.base::PersistentMemoryAllocator::BlockHeader"*
  %33 = select i1 %31, %"struct.base::PersistentMemoryAllocator::BlockHeader"* null, %"struct.base::PersistentMemoryAllocator::BlockHeader"* %32
  br label %34

34:                                               ; preds = %28, %1, %13, %18, %24
  %35 = phi %"struct.base::PersistentMemoryAllocator::BlockHeader"* [ null, %1 ], [ null, %13 ], [ null, %24 ], [ null, %18 ], [ %33, %28 ]
  %36 = icmp eq %"struct.base::PersistentMemoryAllocator::BlockHeader"* %35, null
  %37 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::BlockHeader", %"struct.base::PersistentMemoryAllocator::BlockHeader"* %35, i64 1
  %38 = bitcast %"struct.base::PersistentMemoryAllocator::BlockHeader"* %37 to i8*
  %39 = select i1 %36, i8* null, i8* %38
  %40 = icmp eq i8* %39, null
  br i1 %40, label %79, label %41

41:                                               ; preds = %34
  br i1 %11, label %42, label %73

42:                                               ; preds = %41
  %43 = add i32 %6, 16
  %44 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = icmp ugt i32 %43, %45
  br i1 %46, label %73, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds i8, i8* %12, i64 %7
  %49 = getelementptr inbounds i8, i8* %48, i64 4
  %50 = bitcast i8* %49 to i32*
  %51 = load volatile i32, i32* %50, align 4
  %52 = icmp eq i32 %51, -931556759
  br i1 %52, label %53, label %73

53:                                               ; preds = %47
  %54 = bitcast i8* %48 to i32*
  %55 = load volatile i32, i32* %54, align 4
  %56 = icmp ult i32 %55, 16
  br i1 %56, label %73, label %57

57:                                               ; preds = %53
  %58 = load volatile i32, i32* %54, align 4
  %59 = add i32 %58, %6
  %60 = icmp ugt i32 %59, %45
  %61 = icmp eq i8* %48, null
  %62 = or i1 %61, %60
  br i1 %62, label %73, label %63

63:                                               ; preds = %57
  %64 = load volatile i32, i32* %54, align 4
  %65 = icmp ult i32 %64, 17
  %66 = add i32 %64, %6
  %67 = icmp ugt i32 %66, %45
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70

69:                                               ; preds = %63
  tail call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0) #14
  br label %73

70:                                               ; preds = %63
  %71 = zext i32 %64 to i64
  %72 = add nsw i64 %71, -17
  br label %73

73:                                               ; preds = %41, %42, %47, %53, %57, %69, %70
  %74 = phi i64 [ -1, %69 ], [ %72, %70 ], [ -1, %41 ], [ -1, %42 ], [ -1, %57 ], [ -1, %53 ], [ -1, %47 ]
  %75 = getelementptr inbounds i8, i8* %39, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %79, label %78

78:                                               ; preds = %73
  tail call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0)
  br label %79

79:                                               ; preds = %78, %73, %34
  %80 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %34 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %78 ], [ %39, %73 ]
  ret i8* %80
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4base25PersistentMemoryAllocator12GetAllocSizeEj(%"class.base::PersistentMemoryAllocator"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = zext i32 %1 to i64
  %4 = icmp ugt i32 %1, 63
  %5 = and i32 %1, 7
  %6 = icmp eq i32 %5, 0
  %7 = and i1 %4, %6
  br i1 %7, label %8, label %41

8:                                                ; preds = %2
  %9 = add i32 %1, 16
  %10 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %41, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %3
  %17 = getelementptr inbounds i8, i8* %16, i64 4
  %18 = bitcast i8* %17 to i32*
  %19 = load volatile i32, i32* %18, align 4
  %20 = icmp eq i32 %19, -931556759
  br i1 %20, label %21, label %41

21:                                               ; preds = %13
  %22 = bitcast i8* %16 to i32*
  %23 = load volatile i32, i32* %22, align 4
  %24 = icmp ult i32 %23, 16
  br i1 %24, label %41, label %25

25:                                               ; preds = %21
  %26 = load volatile i32, i32* %22, align 4
  %27 = add i32 %26, %1
  %28 = icmp ugt i32 %27, %11
  %29 = icmp eq i8* %16, null
  %30 = or i1 %29, %28
  br i1 %30, label %41, label %31

31:                                               ; preds = %25
  %32 = load volatile i32, i32* %22, align 4
  %33 = icmp ult i32 %32, 17
  %34 = add i32 %32, %1
  %35 = icmp ugt i32 %34, %11
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %31
  tail call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0)
  br label %41

38:                                               ; preds = %31
  %39 = zext i32 %32 to i64
  %40 = add nsw i64 %39, -16
  br label %41

41:                                               ; preds = %13, %21, %25, %8, %2, %37, %38
  %42 = phi i64 [ 0, %37 ], [ %40, %38 ], [ 0, %2 ], [ 0, %8 ], [ 0, %25 ], [ 0, %21 ], [ 0, %13 ]
  ret i64 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25PersistentMemoryAllocator24CreateTrackingHistogramsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::PersistentMemoryAllocator"* nocapture, i8*, i64) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %88, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 6
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %88

14:                                               ; preds = %10
  %15 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = icmp ugt i64 %2, -17
  %20 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  br i1 %19, label %21, label %23

21:                                               ; preds = %14
  %22 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #16
  unreachable

23:                                               ; preds = %14
  %24 = icmp ult i64 %2, 23
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = add nuw i64 %2, 16
  %27 = and i64 %26, -16
  %28 = tail call i8* @_Znwm(i64 %27) #15
  store i8* %28, i8** %16, align 8, !alias.scope !3
  %29 = or i64 %27, -9223372036854775808
  store i64 %29, i64* %18, align 8, !alias.scope !3
  store i64 %2, i64* %17, align 8, !alias.scope !3
  br label %34

30:                                               ; preds = %23
  %31 = trunc i64 %2 to i8
  %32 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 %31, i8* %33, align 1, !alias.scope !3
  br label %34

34:                                               ; preds = %25, %30
  %35 = phi i8* [ %28, %25 ], [ %15, %30 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 1 %1, i64 %2, i1 false) #14
  %36 = getelementptr inbounds i8, i8* %35, i64 %2
  store i8 0, i8* %36, align 1
  %37 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #14
  %38 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #14
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #14
  %39 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0)) #14, !noalias !6
  %40 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %40, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #14, !noalias !6
  %41 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i32 1, i32 101, i32 21, i32 1) #14
  %42 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 9
  store %"class.base::HistogramBase"* %41, %"class.base::HistogramBase"** %42, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #15
  br label %50

50:                                               ; preds = %34, %47
  %51 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #15
  br label %58

58:                                               ; preds = %50, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #14
  %59 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #14
  %60 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #14
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #14
  %61 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0)) #14, !noalias !9
  %62 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %62, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #14, !noalias !9
  %63 = call %"class.base::HistogramBase"* @_ZN4base15SparseHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i32 1) #14
  %64 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 10
  store %"class.base::HistogramBase"* %63, %"class.base::HistogramBase"** %64, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #15
  br label %72

72:                                               ; preds = %58, %69
  %73 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #15
  br label %80

80:                                               ; preds = %72, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #14
  %81 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %80
  %86 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %86) #15
  br label %87

87:                                               ; preds = %80, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  br label %88

88:                                               ; preds = %10, %3, %87
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiiji(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32) local_unnamed_addr #5

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

declare %"class.base::HistogramBase"* @_ZN4base15SparseHistogram10FactoryGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25PersistentMemoryAllocator5FlushEb(%"class.base::PersistentMemoryAllocator"*, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %5 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %4, align 8
  %6 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %5, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp ult i32 %9, %7
  %11 = select i1 %10, i32 %9, i32 %7
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.base::PersistentMemoryAllocator"* %0 to void (%"class.base::PersistentMemoryAllocator"*, i64, i1)***
  %14 = load void (%"class.base::PersistentMemoryAllocator"*, i64, i1)**, void (%"class.base::PersistentMemoryAllocator"*, i64, i1)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.base::PersistentMemoryAllocator"*, i64, i1)*, void (%"class.base::PersistentMemoryAllocator"*, i64, i1)** %14, i64 2
  %16 = load void (%"class.base::PersistentMemoryAllocator"*, i64, i1)*, void (%"class.base::PersistentMemoryAllocator"*, i64, i1)** %15, align 8
  tail call void %16(%"class.base::PersistentMemoryAllocator"* %0, i64 %12, i1 zeroext %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4base25PersistentMemoryAllocator4usedEv(%"class.base::PersistentMemoryAllocator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %4 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %3, align 8
  %5 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %4, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %8, %6
  %10 = select i1 %9, i32 %8, i32 %6
  %11 = zext i32 %10 to i64
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25PersistentMemoryAllocator14SetMemoryStateEh(%"class.base::PersistentMemoryAllocator"*, i8 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %5 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %4, align 8
  %6 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i8 %1, i8* %6 monotonic, align 1
  %7 = bitcast %"class.base::PersistentMemoryAllocator"* %0 to void (%"class.base::PersistentMemoryAllocator"*, i64, i1)***
  %8 = load void (%"class.base::PersistentMemoryAllocator"*, i64, i1)**, void (%"class.base::PersistentMemoryAllocator"*, i64, i1)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::PersistentMemoryAllocator"*, i64, i1)*, void (%"class.base::PersistentMemoryAllocator"*, i64, i1)** %8, i64 2
  %10 = load void (%"class.base::PersistentMemoryAllocator"*, i64, i1)*, void (%"class.base::PersistentMemoryAllocator"*, i64, i1)** %9, align 8
  tail call void %10(%"class.base::PersistentMemoryAllocator"* %0, i64 64, i1 zeroext false) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i8 @_ZNK4base25PersistentMemoryAllocator14GetMemoryStateEv(%"class.base::PersistentMemoryAllocator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %4 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %3, align 8
  %5 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %4, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i8, i8* %5 monotonic, align 1
  ret i8 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK4base25PersistentMemoryAllocator14GetAsReferenceEPKvj(%"class.base::PersistentMemoryAllocator"* nocapture readonly, i8*, i32) local_unnamed_addr #1 align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %4
  %9 = inttoptr i64 %7 to i8*
  br i1 %8, label %59, label %10

10:                                               ; preds = %3
  %11 = sub i64 %4, %7
  %12 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = icmp uge i64 %11, %14
  %16 = icmp ult i64 %11, 16
  %17 = or i1 %16, %15
  br i1 %17, label %59, label %18

18:                                               ; preds = %10
  %19 = trunc i64 %11 to i32
  %20 = add i32 %19, -16
  %21 = icmp ult i32 %20, 64
  %22 = and i32 %20, 7
  %23 = icmp ne i32 %22, 0
  %24 = or i1 %21, %23
  %25 = add i32 %19, 1
  %26 = icmp ugt i32 %25, %13
  %27 = or i1 %24, %26
  br i1 %27, label %52, label %28

28:                                               ; preds = %18
  %29 = zext i32 %20 to i64
  %30 = getelementptr inbounds i8, i8* %9, i64 %29
  %31 = getelementptr inbounds i8, i8* %30, i64 4
  %32 = bitcast i8* %31 to i32*
  %33 = load volatile i32, i32* %32, align 4
  %34 = icmp eq i32 %33, -931556759
  br i1 %34, label %35, label %52

35:                                               ; preds = %28
  %36 = bitcast i8* %30 to i32*
  %37 = load volatile i32, i32* %36, align 4
  %38 = icmp ult i32 %37, 17
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = load volatile i32, i32* %36, align 4
  %41 = add i32 %40, %20
  %42 = icmp ugt i32 %41, %13
  br i1 %42, label %52, label %43

43:                                               ; preds = %39
  %44 = icmp eq i32 %2, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds i8, i8* %30, i64 8
  %47 = bitcast i8* %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = icmp eq i32 %48, %2
  br i1 %49, label %50, label %52

50:                                               ; preds = %45, %43
  %51 = bitcast i8* %30 to %"struct.base::PersistentMemoryAllocator::BlockHeader"*
  br label %52

52:                                               ; preds = %18, %28, %35, %39, %45, %50
  %53 = phi %"struct.base::PersistentMemoryAllocator::BlockHeader"* [ %51, %50 ], [ null, %18 ], [ null, %45 ], [ null, %39 ], [ null, %35 ], [ null, %28 ]
  %54 = icmp eq %"struct.base::PersistentMemoryAllocator::BlockHeader"* %53, null
  %55 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::BlockHeader", %"struct.base::PersistentMemoryAllocator::BlockHeader"* %53, i64 1
  %56 = icmp eq %"struct.base::PersistentMemoryAllocator::BlockHeader"* %55, null
  %57 = or i1 %54, %56
  %58 = select i1 %57, i32 0, i32 %20
  br label %59

59:                                               ; preds = %52, %10, %3
  %60 = phi i32 [ 0, %3 ], [ %58, %52 ], [ 0, %10 ]
  ret i32 %60
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZNK4base25PersistentMemoryAllocator12GetBlockDataEjjj(%"class.base::PersistentMemoryAllocator"* nocapture readonly, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = zext i32 %1 to i64
  %6 = icmp ugt i32 %1, 63
  %7 = and i32 %1, 7
  %8 = icmp eq i32 %7, 0
  %9 = and i1 %6, %8
  br i1 %9, label %10, label %41

10:                                               ; preds = %4
  %11 = add i32 %3, 16
  %12 = add i32 %11, %1
  %13 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp ugt i32 %12, %14
  br i1 %15, label %41, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %5
  %20 = getelementptr inbounds i8, i8* %19, i64 4
  %21 = bitcast i8* %20 to i32*
  %22 = load volatile i32, i32* %21, align 4
  %23 = icmp eq i32 %22, -931556759
  br i1 %23, label %24, label %41

24:                                               ; preds = %16
  %25 = bitcast i8* %19 to i32*
  %26 = load volatile i32, i32* %25, align 4
  %27 = icmp ult i32 %26, %11
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = load volatile i32, i32* %25, align 4
  %30 = add i32 %29, %1
  %31 = icmp ugt i32 %30, %14
  br i1 %31, label %41, label %32

32:                                               ; preds = %28
  %33 = icmp eq i32 %2, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = icmp eq i32 %37, %2
  br i1 %38, label %39, label %41

39:                                               ; preds = %34, %32
  %40 = bitcast i8* %19 to %"struct.base::PersistentMemoryAllocator::BlockHeader"*
  br label %41

41:                                               ; preds = %4, %10, %16, %24, %28, %34, %39
  %42 = phi %"struct.base::PersistentMemoryAllocator::BlockHeader"* [ %40, %39 ], [ null, %4 ], [ null, %10 ], [ null, %34 ], [ null, %28 ], [ null, %24 ], [ null, %16 ]
  %43 = icmp eq %"struct.base::PersistentMemoryAllocator::BlockHeader"* %42, null
  %44 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::BlockHeader", %"struct.base::PersistentMemoryAllocator::BlockHeader"* %42, i64 1
  %45 = bitcast %"struct.base::PersistentMemoryAllocator::BlockHeader"* %44 to i8*
  %46 = select i1 %43, i8* null, i8* %45
  ret i8* %46
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK4base25PersistentMemoryAllocator7GetTypeEj(%"class.base::PersistentMemoryAllocator"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = zext i32 %1 to i64
  %4 = icmp ugt i32 %1, 63
  %5 = and i32 %1, 7
  %6 = icmp eq i32 %5, 0
  %7 = and i1 %4, %6
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = add i32 %1, 16
  %10 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %35, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %3
  %17 = getelementptr inbounds i8, i8* %16, i64 4
  %18 = bitcast i8* %17 to i32*
  %19 = load volatile i32, i32* %18, align 4
  %20 = icmp eq i32 %19, -931556759
  br i1 %20, label %21, label %35

21:                                               ; preds = %13
  %22 = bitcast i8* %16 to i32*
  %23 = load volatile i32, i32* %22, align 4
  %24 = icmp ult i32 %23, 16
  br i1 %24, label %35, label %25

25:                                               ; preds = %21
  %26 = load volatile i32, i32* %22, align 4
  %27 = add i32 %26, %1
  %28 = icmp ugt i32 %27, %11
  %29 = icmp eq i8* %16, null
  %30 = or i1 %29, %28
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds i8, i8* %16, i64 8
  %33 = bitcast i8* %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  br label %35

35:                                               ; preds = %13, %21, %25, %8, %2, %31
  %36 = phi i32 [ %34, %31 ], [ 0, %2 ], [ 0, %8 ], [ 0, %25 ], [ 0, %21 ], [ 0, %13 ]
  ret i32 %36
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base25PersistentMemoryAllocator10ChangeTypeEjjjb(%"class.base::PersistentMemoryAllocator"* nocapture readonly, i32, i32, i32, i1 zeroext) local_unnamed_addr #1 align 2 {
  %6 = zext i32 %1 to i64
  %7 = icmp ugt i32 %1, 63
  %8 = and i32 %1, 7
  %9 = icmp eq i32 %8, 0
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %87

11:                                               ; preds = %5
  %12 = add i32 %1, 16
  %13 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp ugt i32 %12, %14
  br i1 %15, label %87, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %6
  %20 = getelementptr inbounds i8, i8* %19, i64 4
  %21 = bitcast i8* %20 to i32*
  %22 = load volatile i32, i32* %21, align 4
  %23 = icmp eq i32 %22, -931556759
  br i1 %23, label %24, label %87

24:                                               ; preds = %16
  %25 = bitcast i8* %19 to i32*
  %26 = load volatile i32, i32* %25, align 4
  %27 = icmp ult i32 %26, 16
  br i1 %27, label %87, label %28

28:                                               ; preds = %24
  %29 = load volatile i32, i32* %25, align 4
  %30 = add i32 %29, %1
  %31 = icmp ugt i32 %30, %14
  %32 = icmp eq i8* %19, null
  %33 = or i1 %32, %31
  br i1 %33, label %87, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i32*
  br i1 %4, label %37, label %84

37:                                               ; preds = %34
  %38 = cmpxchg volatile i32* %36, i32 %3, i32 -1 acquire acquire
  %39 = extractvalue { i32, i1 } %38, 1
  br i1 %39, label %40, label %87

40:                                               ; preds = %37
  %41 = load volatile i32, i32* %25, align 4
  %42 = zext i32 %41 to i64
  %43 = add nuw nsw i64 %42, 17179869168
  %44 = lshr i64 %43, 2
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %65, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds i8, i8* %19, i64 16
  %49 = bitcast i8* %48 to %"struct.std::__1::atomic.11"*
  %50 = add nsw i32 %45, -1
  %51 = and i32 %45, 7
  %52 = icmp ult i32 %50, 7
  br i1 %52, label %55, label %53

53:                                               ; preds = %47
  %54 = sub i32 %45, %51
  br label %67

55:                                               ; preds = %67, %47
  %56 = phi %"struct.std::__1::atomic.11"* [ %49, %47 ], [ %78, %67 ]
  %57 = icmp eq i32 %51, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %55, %58
  %59 = phi %"struct.std::__1::atomic.11"* [ %62, %58 ], [ %56, %55 ]
  %60 = phi i32 [ %63, %58 ], [ %51, %55 ]
  %61 = getelementptr inbounds %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i32 0, i32* %61 release, align 4
  %62 = getelementptr inbounds %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* %59, i64 1
  %63 = add i32 %60, -1
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %58, !llvm.loop !12

65:                                               ; preds = %55, %58, %40
  %66 = icmp eq i32 %2, -1
  br i1 %66, label %87, label %81

67:                                               ; preds = %67, %53
  %68 = phi %"struct.std::__1::atomic.11"* [ %49, %53 ], [ %78, %67 ]
  %69 = phi i32 [ %54, %53 ], [ %79, %67 ]
  %70 = getelementptr inbounds %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i32 0, i32* %70 release, align 4
  %71 = getelementptr inbounds %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* %68, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i32 0, i32* %71 release, align 4
  %72 = getelementptr inbounds %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* %68, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i32 0, i32* %72 release, align 4
  %73 = getelementptr inbounds %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* %68, i64 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i32 0, i32* %73 release, align 4
  %74 = getelementptr inbounds %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* %68, i64 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i32 0, i32* %74 release, align 4
  %75 = getelementptr inbounds %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* %68, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i32 0, i32* %75 release, align 4
  %76 = getelementptr inbounds %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* %68, i64 6, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i32 0, i32* %76 release, align 4
  %77 = getelementptr inbounds %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* %68, i64 7, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic volatile i32 0, i32* %77 release, align 4
  %78 = getelementptr inbounds %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* %68, i64 8
  %79 = add i32 %69, -8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %55, label %67

81:                                               ; preds = %65
  %82 = cmpxchg volatile i32* %36, i32 -1, i32 %2 release monotonic
  %83 = extractvalue { i32, i1 } %82, 1
  ret i1 %83

84:                                               ; preds = %34
  %85 = cmpxchg volatile i32* %36, i32 %3, i32 %2 acq_rel acquire
  %86 = extractvalue { i32, i1 } %85, 1
  br label %87

87:                                               ; preds = %84, %16, %24, %28, %11, %5, %37, %65
  %88 = phi i1 [ true, %65 ], [ false, %37 ], [ false, %5 ], [ false, %11 ], [ false, %28 ], [ false, %24 ], [ false, %16 ], [ %86, %84 ]
  ret i1 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base25PersistentMemoryAllocator12AllocateImplEmj(%"class.base::PersistentMemoryAllocator"* nocapture, i64, i32) local_unnamed_addr #3 align 2 {
  %4 = icmp ugt i64 %1, 1073741808
  br i1 %4, label %141, label %5

5:                                                ; preds = %3
  %6 = trunc i64 %1 to i32
  %7 = add nuw nsw i32 %6, 23
  %8 = and i32 %7, -8
  %9 = icmp ult i32 %8, 17
  br i1 %9, label %141, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %8, %12
  br i1 %13, label %141, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %16 = bitcast i8** %15 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %17 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %16, align 8
  %18 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %17, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 acquire, align 4
  %20 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i8, i8* %20 monotonic, align 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %35

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  br label %26

26:                                               ; preds = %24, %135
  %27 = phi i32 [ %8, %24 ], [ %137, %135 ]
  %28 = phi i32 [ %19, %24 ], [ %136, %135 ]
  %29 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %16, align 8
  %30 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %29, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = bitcast %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %29 to i8*
  br i1 %33, label %36, label %35

35:                                               ; preds = %26, %135, %14
  tail call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0) #14
  br label %141

36:                                               ; preds = %26
  %37 = add i32 %27, %28
  %38 = load i32, i32* %25, align 4
  %39 = icmp ugt i32 %37, %38
  br i1 %39, label %40, label %52

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %29, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = or i32 %42, 2
  %44 = cmpxchg weak volatile i32* %41, i32 %42, i32 %43 monotonic monotonic
  %45 = extractvalue { i32, i1 } %44, 1
  br i1 %45, label %141, label %46

46:                                               ; preds = %40, %46
  %47 = phi { i32, i1 } [ %50, %46 ], [ %44, %40 ]
  %48 = extractvalue { i32, i1 } %47, 0
  %49 = or i32 %48, 2
  %50 = cmpxchg weak volatile i32* %41, i32 %48, i32 %49 monotonic monotonic
  %51 = extractvalue { i32, i1 } %50, 1
  br i1 %51, label %141, label %46

52:                                               ; preds = %36
  %53 = icmp ult i32 %28, 64
  %54 = and i32 %28, 7
  %55 = icmp ne i32 %54, 0
  %56 = or i1 %53, %55
  %57 = add i32 %28, 16
  %58 = icmp ugt i32 %57, %38
  %59 = or i1 %56, %58
  br i1 %59, label %64, label %60

60:                                               ; preds = %52
  %61 = zext i32 %28 to i64
  %62 = getelementptr inbounds i8, i8* %34, i64 %61
  %63 = icmp eq i8* %62, null
  br i1 %63, label %64, label %65

64:                                               ; preds = %52, %60
  tail call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0)
  br label %141

65:                                               ; preds = %60
  %66 = load i32, i32* %11, align 8
  %67 = urem i32 %28, %66
  %68 = sub i32 %66, %67
  %69 = icmp ult i32 %68, %27
  br i1 %69, label %70, label %84

70:                                               ; preds = %65
  %71 = icmp ult i32 %68, 17
  br i1 %71, label %72, label %73

72:                                               ; preds = %70
  tail call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0)
  br label %141

73:                                               ; preds = %70
  %74 = add i32 %68, %28
  %75 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %29, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = cmpxchg volatile i32* %75, i32 %28, i32 %74 acq_rel acquire
  %77 = extractvalue { i32, i1 } %76, 1
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = extractvalue { i32, i1 } %76, 0
  br label %135

80:                                               ; preds = %73
  %81 = bitcast i8* %62 to i32*
  store volatile i32 %68, i32* %81, align 4
  %82 = getelementptr inbounds i8, i8* %62, i64 4
  %83 = bitcast i8* %82 to i32*
  store volatile i32 -1, i32* %83, align 4
  br label %135

84:                                               ; preds = %65
  %85 = sub i32 %68, %27
  %86 = icmp ult i32 %85, 24
  %87 = select i1 %86, i32 %68, i32 %27
  %88 = add i32 %87, %28
  %89 = icmp ugt i32 %88, %38
  br i1 %89, label %90, label %91

90:                                               ; preds = %84
  tail call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0)
  br label %141

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %29, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = cmpxchg volatile i32* %92, i32 %28, i32 %88 acq_rel acquire
  %94 = extractvalue { i32, i1 } %93, 1
  br i1 %94, label %97, label %95

95:                                               ; preds = %91
  %96 = extractvalue { i32, i1 } %93, 0
  br label %135

97:                                               ; preds = %91
  %98 = bitcast i8* %62 to i32*
  %99 = load volatile i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %116

101:                                              ; preds = %97
  %102 = getelementptr inbounds i8, i8* %62, i64 4
  %103 = bitcast i8* %102 to i32*
  %104 = load volatile i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %116

106:                                              ; preds = %101
  %107 = getelementptr inbounds i8, i8* %62, i64 8
  %108 = bitcast i8* %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %106
  %112 = getelementptr inbounds i8, i8* %62, i64 12
  %113 = bitcast i8* %112 to i32*
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %117, label %116

116:                                              ; preds = %111, %106, %101, %97
  tail call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0)
  br label %141

117:                                              ; preds = %111
  %118 = zext i32 %87 to i64
  %119 = getelementptr inbounds i8, i8* %62, i64 %118
  %120 = ptrtoint i8* %62 to i64
  %121 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 5
  %122 = load i64, i64* %121, align 8
  %123 = add i64 %120, 15
  %124 = add i64 %123, %122
  %125 = sub i64 0, %122
  %126 = and i64 %124, %125
  %127 = inttoptr i64 %126 to i8*
  %128 = icmp ugt i8* %119, %127
  br i1 %128, label %130, label %129

129:                                              ; preds = %130, %117
  store volatile i32 %87, i32* %98, align 4
  store volatile i32 -931556759, i32* %103, align 4
  store atomic volatile i32 %2, i32* %108 monotonic, align 4
  br label %141

130:                                              ; preds = %117, %130
  %131 = phi i8* [ %133, %130 ], [ %127, %117 ]
  store volatile i8 0, i8* %131, align 1
  %132 = load i64, i64* %121, align 8
  %133 = getelementptr inbounds i8, i8* %131, i64 %132
  %134 = icmp ult i8* %133, %119
  br i1 %134, label %130, label %129

135:                                              ; preds = %95, %78, %80
  %136 = phi i32 [ %28, %80 ], [ %79, %78 ], [ %96, %95 ]
  %137 = phi i32 [ %27, %80 ], [ %27, %78 ], [ %87, %95 ]
  %138 = load atomic i8, i8* %20 monotonic, align 1
  %139 = and i8 %138, 1
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %26, label %35

141:                                              ; preds = %46, %129, %116, %90, %72, %64, %35, %40, %10, %5, %3
  %142 = phi i32 [ 0, %3 ], [ 0, %10 ], [ 0, %5 ], [ 0, %35 ], [ 0, %40 ], [ %28, %129 ], [ 0, %116 ], [ 0, %90 ], [ 0, %72 ], [ 0, %64 ], [ 0, %46 ]
  ret i32 %142
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base25PersistentMemoryAllocator9IsCorruptEv(%"class.base::PersistentMemoryAllocator"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 monotonic, align 1
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %8 = bitcast i8** %7 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %9 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %8, align 8
  %10 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %9, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %6, %1
  tail call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0)
  br label %15

15:                                               ; preds = %6, %14
  %16 = phi i1 [ true, %14 ], [ false, %6 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base25PersistentMemoryAllocator13GetMemoryInfoEPNS0_10MemoryInfoE(%"class.base::PersistentMemoryAllocator"* nocapture readonly, %"struct.base::PersistentMemoryAllocator::MemoryInfo"* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %6 = bitcast i8** %5 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %7 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %6, align 8
  %8 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %7, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = sub i32 %4, %9
  %11 = icmp ugt i32 %10, 16
  %12 = select i1 %11, i32 %10, i32 16
  %13 = zext i32 %4 to i64
  %14 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::MemoryInfo", %"struct.base::PersistentMemoryAllocator::MemoryInfo"* %1, i64 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = zext i32 %12 to i64
  %16 = add nsw i64 %15, -16
  %17 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::MemoryInfo", %"struct.base::PersistentMemoryAllocator::MemoryInfo"* %1, i64 0, i32 1
  store i64 %16, i64* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25PersistentMemoryAllocator12MakeIterableEj(%"class.base::PersistentMemoryAllocator"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i8, i8* %3 monotonic, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %9 = bitcast i8** %8 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %10 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %9, align 8
  %11 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %10, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = bitcast %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %10 to i8*
  br i1 %14, label %17, label %16

16:                                               ; preds = %2, %7
  tail call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0) #14
  br label %103

17:                                               ; preds = %7
  %18 = zext i32 %1 to i64
  %19 = icmp ugt i32 %1, 63
  %20 = and i32 %1, 7
  %21 = icmp eq i32 %20, 0
  %22 = and i1 %19, %21
  br i1 %22, label %23, label %103

23:                                               ; preds = %17
  %24 = add i32 %1, 16
  %25 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = icmp ugt i32 %24, %26
  br i1 %27, label %103, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds i8, i8* %15, i64 %18
  %30 = getelementptr inbounds i8, i8* %29, i64 4
  %31 = bitcast i8* %30 to i32*
  %32 = load volatile i32, i32* %31, align 4
  %33 = icmp eq i32 %32, -931556759
  br i1 %33, label %34, label %103

34:                                               ; preds = %28
  %35 = bitcast i8* %29 to i32*
  %36 = load volatile i32, i32* %35, align 4
  %37 = icmp ult i32 %36, 16
  br i1 %37, label %103, label %38

38:                                               ; preds = %34
  %39 = load volatile i32, i32* %35, align 4
  %40 = add i32 %39, %1
  %41 = icmp ugt i32 %40, %26
  %42 = icmp eq i8* %29, null
  %43 = or i1 %42, %41
  br i1 %43, label %103, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds i8, i8* %29, i64 12
  %46 = bitcast i8* %45 to i32*
  %47 = load atomic i32, i32* %46 acquire, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %103

49:                                               ; preds = %44
  store atomic volatile i32 48, i32* %46 release, align 4
  %50 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %9, align 8
  %51 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %50, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 acquire, align 4
  br label %53

53:                                               ; preds = %97, %49
  %54 = phi i32 [ %52, %49 ], [ %102, %97 ]
  %55 = icmp eq i32 %54, 48
  br i1 %55, label %56, label %59

56:                                               ; preds = %53
  %57 = load i8*, i8** %8, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 48
  br label %84

59:                                               ; preds = %53
  %60 = zext i32 %54 to i64
  %61 = icmp ugt i32 %54, 63
  %62 = and i32 %54, 7
  %63 = icmp eq i32 %62, 0
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %87

65:                                               ; preds = %59
  %66 = add i32 %54, 16
  %67 = load i32, i32* %25, align 4
  %68 = icmp ugt i32 %66, %67
  br i1 %68, label %87, label %69

69:                                               ; preds = %65
  %70 = load i8*, i8** %8, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 %60
  %72 = getelementptr inbounds i8, i8* %71, i64 4
  %73 = bitcast i8* %72 to i32*
  %74 = load volatile i32, i32* %73, align 4
  %75 = icmp eq i32 %74, -931556759
  br i1 %75, label %76, label %87

76:                                               ; preds = %69
  %77 = bitcast i8* %71 to i32*
  %78 = load volatile i32, i32* %77, align 4
  %79 = icmp ult i32 %78, 16
  br i1 %79, label %87, label %80

80:                                               ; preds = %76
  %81 = load volatile i32, i32* %77, align 4
  %82 = add i32 %81, %54
  %83 = icmp ugt i32 %82, %67
  br i1 %83, label %87, label %84

84:                                               ; preds = %80, %56
  %85 = phi i8* [ %58, %56 ], [ %71, %80 ]
  %86 = icmp eq i8* %85, null
  br i1 %86, label %87, label %88

87:                                               ; preds = %69, %76, %80, %65, %59, %84
  tail call void @_ZNK4base25PersistentMemoryAllocator10SetCorruptEv(%"class.base::PersistentMemoryAllocator"* %0)
  br label %103

88:                                               ; preds = %84
  %89 = getelementptr inbounds i8, i8* %85, i64 12
  %90 = bitcast i8* %89 to i32*
  %91 = cmpxchg volatile i32* %90, i32 48, i32 %1 acq_rel acquire
  %92 = extractvalue { i32, i1 } %91, 1
  br i1 %92, label %93, label %97

93:                                               ; preds = %88
  %94 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %9, align 8
  %95 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %94, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = cmpxchg volatile i32* %95, i32 %54, i32 %1 release monotonic
  br label %103

97:                                               ; preds = %88
  %98 = extractvalue { i32, i1 } %91, 0
  %99 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %9, align 8
  %100 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %99, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = cmpxchg volatile i32* %100, i32 %54, i32 %98 acq_rel acquire
  %102 = extractvalue { i32, i1 } %101, 0
  br label %53

103:                                              ; preds = %93, %28, %34, %38, %23, %17, %87, %16, %44
  ret void
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #5

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base25PersistentMemoryAllocator11RecordErrorEi(%"class.base::PersistentMemoryAllocator"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 10
  %4 = load %"class.base::HistogramBase"*, %"class.base::HistogramBase"** %3, align 8
  %5 = icmp eq %"class.base::HistogramBase"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.base::HistogramBase"* %4 to void (%"class.base::HistogramBase"*, i32)***
  %8 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %8, i64 6
  %10 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %9, align 8
  tail call void %10(%"class.base::HistogramBase"* nonnull %4, i32 %1) #14
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base25PersistentMemoryAllocator6IsFullEv(%"class.base::PersistentMemoryAllocator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %4 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %3, align 8
  %5 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %4, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = and i32 %6, 2
  %8 = icmp ne i32 %7, 0
  ret i1 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base25PersistentMemoryAllocator12FlushPartialEmb(%"class.base::PersistentMemoryAllocator"* nocapture, i64, i1 zeroext) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25PersistentMemoryAllocator24UpdateTrackingHistogramsEv(%"class.base::PersistentMemoryAllocator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 9
  %3 = load %"class.base::HistogramBase"*, %"class.base::HistogramBase"** %2, align 8
  %4 = icmp eq %"class.base::HistogramBase"* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %0, i64 0, i32 1
  %9 = bitcast i8** %8 to %"struct.base::PersistentMemoryAllocator::SharedMetadata"**
  %10 = load %"struct.base::PersistentMemoryAllocator::SharedMetadata"*, %"struct.base::PersistentMemoryAllocator::SharedMetadata"** %9, align 8
  %11 = getelementptr inbounds %"struct.base::PersistentMemoryAllocator::SharedMetadata", %"struct.base::PersistentMemoryAllocator::SharedMetadata"* %10, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = sub i32 %7, %12
  %14 = icmp ugt i32 %13, 16
  %15 = select i1 %14, i32 %13, i32 16
  %16 = zext i32 %7 to i64
  %17 = zext i32 %15 to i64
  %18 = add nuw nsw i64 %16, 16
  %19 = sub nsw i64 %18, %17
  %20 = mul nsw i64 %19, 100
  %21 = udiv i64 %20, %16
  %22 = trunc i64 %21 to i32
  %23 = bitcast %"class.base::HistogramBase"* %3 to void (%"class.base::HistogramBase"*, i32)***
  %24 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %24, i64 6
  %26 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %25, align 8
  tail call void %26(%"class.base::HistogramBase"* nonnull %3, i32 %22) #14
  br label %27

27:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base30LocalPersistentMemoryAllocatorC2EmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::LocalPersistentMemoryAllocator"*, i64, i64, i8*, i64) unnamed_addr #3 align 2 {
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = getelementptr inbounds %"class.base::LocalPersistentMemoryAllocator", %"class.base::LocalPersistentMemoryAllocator"* %0, i64 0, i32 0
  %8 = tail call i8* @mmap64(i8* null, i64 %1, i32 3, i32 33, i32 -1, i64 0) #14
  %9 = icmp eq i8* %8, inttoptr (i64 -1 to i8*)
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = tail call i32* @__errno_location() #17
  %12 = load i32, i32* %11, align 4
  tail call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.8, i64 0, i64 0), i32 %12) #14
  %13 = tail call noalias i8* @malloc(i64 %1) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %13, i8 0, i64 %1, i1 false) #14
  br label %14

14:                                               ; preds = %5, %10
  %15 = phi i32 [ 1, %10 ], [ 2, %5 ]
  %16 = phi i8* [ %13, %10 ], [ %8, %5 ]
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* %3, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  store i64 %4, i64* %18, align 8
  tail call void @_ZN4base25PersistentMemoryAllocatorC2ENS0_6MemoryEmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::PersistentMemoryAllocator"* %7, i8* %16, i32 %15, i64 %1, i64 0, i64 %2, %"class.base::BasicStringPiece"* nonnull byval(%"class.base::BasicStringPiece") align 8 %6, i1 zeroext false)
  %19 = getelementptr inbounds %"class.base::LocalPersistentMemoryAllocator", %"class.base::LocalPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base30LocalPersistentMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i32 } @_ZN4base30LocalPersistentMemoryAllocator19AllocateLocalMemoryEm(i64) local_unnamed_addr #3 align 2 {
  %2 = tail call i8* @mmap64(i8* null, i64 %0, i32 3, i32 33, i32 -1, i64 0) #14
  %3 = icmp eq i8* %2, inttoptr (i64 -1 to i8*)
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = tail call i32* @__errno_location() #17
  %6 = load i32, i32* %5, align 4
  tail call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.8, i64 0, i64 0), i32 %6) #14
  %7 = tail call noalias i8* @malloc(i64 %0) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 %0, i1 false)
  br label %8

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 1, %4 ], [ 2, %1 ]
  %10 = phi i8* [ %7, %4 ], [ %2, %1 ]
  %11 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %9, 1
  ret { i8*, i32 } %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base30LocalPersistentMemoryAllocatorD2Ev(%"class.base::LocalPersistentMemoryAllocator"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::LocalPersistentMemoryAllocator", %"class.base::LocalPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base30LocalPersistentMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::LocalPersistentMemoryAllocator", %"class.base::LocalPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.base::LocalPersistentMemoryAllocator", %"class.base::LocalPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void @free(i8* %4) #14
  br label %14

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::LocalPersistentMemoryAllocator", %"class.base::LocalPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = tail call i32 @munmap(i8* %4, i64 %12) #14
  br label %14

14:                                               ; preds = %8, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base30LocalPersistentMemoryAllocator21DeallocateLocalMemoryEPvmNS_25PersistentMemoryAllocator10MemoryTypeE(i8*, i64, i32) local_unnamed_addr #3 align 2 {
  %4 = icmp eq i32 %2, 1
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @free(i8* %0) #14
  br label %8

6:                                                ; preds = %3
  %7 = tail call i32 @munmap(i8* %0, i64 %1) #14
  br label %8

8:                                                ; preds = %6, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base30LocalPersistentMemoryAllocatorD0Ev(%"class.base::LocalPersistentMemoryAllocator"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::LocalPersistentMemoryAllocator", %"class.base::LocalPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base30LocalPersistentMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::LocalPersistentMemoryAllocator", %"class.base::LocalPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.base::LocalPersistentMemoryAllocator", %"class.base::LocalPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void @free(i8* %4) #14
  br label %14

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::LocalPersistentMemoryAllocator", %"class.base::LocalPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = tail call i32 @munmap(i8* %4, i64 %12) #14
  br label %14

14:                                               ; preds = %8, %9
  %15 = bitcast %"class.base::LocalPersistentMemoryAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #15
  ret void
}

; Function Attrs: nounwind
declare i8* @mmap64(i8*, i64, i32, i32, i32, i64) local_unnamed_addr #6

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @munmap(i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base39WritableSharedPersistentMemoryAllocatorC2ENS_27WritableSharedMemoryMappingEmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::WritableSharedPersistentMemoryAllocator"*, %"class.base::WritableSharedMemoryMapping"*, i64, i8*, i64) unnamed_addr #3 align 2 {
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = getelementptr inbounds %"class.base::WritableSharedPersistentMemoryAllocator", %"class.base::WritableSharedPersistentMemoryAllocator"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %1, i64 0, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %1, i64 0, i32 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* %3, i8** %12, align 8
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  store i64 %4, i64* %13, align 8
  tail call void @_ZN4base25PersistentMemoryAllocatorC2ENS0_6MemoryEmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::PersistentMemoryAllocator"* %7, i8* %9, i32 3, i64 %11, i64 0, i64 %2, %"class.base::BasicStringPiece"* nonnull byval(%"class.base::BasicStringPiece") align 8 %6, i1 zeroext false)
  %14 = getelementptr inbounds %"class.base::WritableSharedPersistentMemoryAllocator", %"class.base::WritableSharedPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base39WritableSharedPersistentMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.base::WritableSharedPersistentMemoryAllocator", %"class.base::WritableSharedPersistentMemoryAllocator"* %0, i64 0, i32 1
  tail call void @_ZN4base27WritableSharedMemoryMappingC1EOS0_(%"class.base::WritableSharedMemoryMapping"* %15, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48) %1) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base27WritableSharedMemoryMappingC1EOS0_(%"class.base::WritableSharedMemoryMapping"*, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base39WritableSharedPersistentMemoryAllocatorD2Ev(%"class.base::WritableSharedPersistentMemoryAllocator"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::WritableSharedPersistentMemoryAllocator", %"class.base::WritableSharedPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base39WritableSharedPersistentMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::WritableSharedPersistentMemoryAllocator", %"class.base::WritableSharedPersistentMemoryAllocator"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base39WritableSharedPersistentMemoryAllocatorD0Ev(%"class.base::WritableSharedPersistentMemoryAllocator"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::WritableSharedPersistentMemoryAllocator", %"class.base::WritableSharedPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base39WritableSharedPersistentMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::WritableSharedPersistentMemoryAllocator", %"class.base::WritableSharedPersistentMemoryAllocator"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %3) #14
  %4 = bitcast %"class.base::WritableSharedPersistentMemoryAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base39WritableSharedPersistentMemoryAllocator24IsSharedMemoryAcceptableERKNS_27WritableSharedMemoryMappingE(%"class.base::WritableSharedMemoryMapping"* nocapture readonly dereferenceable(48)) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i8* %3, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i8* %3 to i64
  %9 = add i64 %5, -64
  %10 = icmp ult i64 %9, 1073741761
  %11 = or i64 %5, %8
  %12 = and i64 %11, 7
  %13 = icmp eq i64 %12, 0
  %14 = and i1 %10, %13
  ret i1 %14

15:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base39ReadOnlySharedPersistentMemoryAllocatorC2ENS_27ReadOnlySharedMemoryMappingEmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::ReadOnlySharedPersistentMemoryAllocator"*, %"class.base::ReadOnlySharedMemoryMapping"*, i64, i8*, i64) unnamed_addr #3 align 2 {
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = getelementptr inbounds %"class.base::ReadOnlySharedPersistentMemoryAllocator", %"class.base::ReadOnlySharedPersistentMemoryAllocator"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %1, i64 0, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %1, i64 0, i32 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* %3, i8** %12, align 8
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  store i64 %4, i64* %13, align 8
  tail call void @_ZN4base25PersistentMemoryAllocatorC2ENS0_6MemoryEmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::PersistentMemoryAllocator"* %7, i8* %9, i32 3, i64 %11, i64 0, i64 %2, %"class.base::BasicStringPiece"* nonnull byval(%"class.base::BasicStringPiece") align 8 %6, i1 zeroext true)
  %14 = getelementptr inbounds %"class.base::ReadOnlySharedPersistentMemoryAllocator", %"class.base::ReadOnlySharedPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base39ReadOnlySharedPersistentMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.base::ReadOnlySharedPersistentMemoryAllocator", %"class.base::ReadOnlySharedPersistentMemoryAllocator"* %0, i64 0, i32 1
  tail call void @_ZN4base27ReadOnlySharedMemoryMappingC1EOS0_(%"class.base::ReadOnlySharedMemoryMapping"* %15, %"class.base::ReadOnlySharedMemoryMapping"* dereferenceable(48) %1) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base27ReadOnlySharedMemoryMappingC1EOS0_(%"class.base::ReadOnlySharedMemoryMapping"*, %"class.base::ReadOnlySharedMemoryMapping"* dereferenceable(48)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base39ReadOnlySharedPersistentMemoryAllocatorD2Ev(%"class.base::ReadOnlySharedPersistentMemoryAllocator"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::ReadOnlySharedPersistentMemoryAllocator", %"class.base::ReadOnlySharedPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base39ReadOnlySharedPersistentMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::ReadOnlySharedPersistentMemoryAllocator", %"class.base::ReadOnlySharedPersistentMemoryAllocator"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %3) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base39ReadOnlySharedPersistentMemoryAllocatorD0Ev(%"class.base::ReadOnlySharedPersistentMemoryAllocator"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::ReadOnlySharedPersistentMemoryAllocator", %"class.base::ReadOnlySharedPersistentMemoryAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base39ReadOnlySharedPersistentMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::ReadOnlySharedPersistentMemoryAllocator", %"class.base::ReadOnlySharedPersistentMemoryAllocator"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %3) #14
  %4 = bitcast %"class.base::ReadOnlySharedPersistentMemoryAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base39ReadOnlySharedPersistentMemoryAllocator24IsSharedMemoryAcceptableERKNS_27ReadOnlySharedMemoryMappingE(%"class.base::ReadOnlySharedMemoryMapping"* nocapture readonly dereferenceable(48)) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint i8* %3 to i64
  %9 = and i64 %8, 7
  %10 = icmp eq i64 %9, 0
  %11 = add i64 %7, -64
  %12 = icmp ult i64 %11, 1073741761
  %13 = and i1 %10, %12
  ret i1 %13

14:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base29FilePersistentMemoryAllocatorC2ENSt3__110unique_ptrINS_16MemoryMappedFileENS1_14default_deleteIS3_EEEEmmNS_16BasicStringPieceIcNS1_11char_traitsIcEEEEb(%"class.base::FilePersistentMemoryAllocator"*, %"class.base::MemoryMappedFile"*, i64, i64, i8*, i64, i1 zeroext) unnamed_addr #3 align 2 {
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = ptrtoint %"class.base::MemoryMappedFile"* %1 to i64
  %10 = getelementptr inbounds %"class.base::FilePersistentMemoryAllocator", %"class.base::FilePersistentMemoryAllocator"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i64 %2, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %1, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %14, %7
  %18 = phi i64 [ %16, %14 ], [ %2, %7 ]
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  store i8* %4, i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  store i64 %5, i64* %20, align 8
  tail call void @_ZN4base25PersistentMemoryAllocatorC2ENS0_6MemoryEmmmNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::PersistentMemoryAllocator"* %10, i8* %12, i32 4, i64 %18, i64 0, i64 %3, %"class.base::BasicStringPiece"* nonnull byval(%"class.base::BasicStringPiece") align 8 %8, i1 zeroext %6)
  %21 = getelementptr inbounds %"class.base::FilePersistentMemoryAllocator", %"class.base::FilePersistentMemoryAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base29FilePersistentMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.base::FilePersistentMemoryAllocator", %"class.base::FilePersistentMemoryAllocator"* %0, i64 0, i32 1
  %23 = bitcast %"class.std::__1::unique_ptr"* %22 to i64*
  store i64 %9, i64* %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base29FilePersistentMemoryAllocatorD2Ev(%"class.base::FilePersistentMemoryAllocator"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::FilePersistentMemoryAllocator", %"class.base::FilePersistentMemoryAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base29FilePersistentMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::FilePersistentMemoryAllocator", %"class.base::FilePersistentMemoryAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::MemoryMappedFile"*, %"class.base::MemoryMappedFile"** %3, align 8
  store %"class.base::MemoryMappedFile"* null, %"class.base::MemoryMappedFile"** %3, align 8
  %5 = icmp eq %"class.base::MemoryMappedFile"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"* nonnull %4) #14
  %7 = bitcast %"class.base::MemoryMappedFile"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base29FilePersistentMemoryAllocatorD0Ev(%"class.base::FilePersistentMemoryAllocator"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::FilePersistentMemoryAllocator", %"class.base::FilePersistentMemoryAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base29FilePersistentMemoryAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::FilePersistentMemoryAllocator", %"class.base::FilePersistentMemoryAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::MemoryMappedFile"*, %"class.base::MemoryMappedFile"** %3, align 8
  store %"class.base::MemoryMappedFile"* null, %"class.base::MemoryMappedFile"** %3, align 8
  %5 = icmp eq %"class.base::MemoryMappedFile"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"* nonnull %4) #14
  %7 = bitcast %"class.base::MemoryMappedFile"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.base::FilePersistentMemoryAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base29FilePersistentMemoryAllocator16IsFileAcceptableERKNS_16MemoryMappedFileEb(%"class.base::MemoryMappedFile"* nocapture readonly dereferenceable(72), i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i8* %4, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = ptrtoint i8* %4 to i64
  %10 = and i64 %9, 7
  %11 = icmp eq i64 %10, 0
  %12 = add i64 %6, -64
  %13 = icmp ult i64 %12, 1073741761
  %14 = and i1 %13, %11
  br i1 %14, label %15, label %19

15:                                               ; preds = %8
  %16 = and i64 %6, 7
  %17 = icmp eq i64 %16, 0
  %18 = or i1 %17, %1
  ret i1 %18

19:                                               ; preds = %2, %8
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base29FilePersistentMemoryAllocator5CacheEv(%"class.base::FilePersistentMemoryAllocator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.base::ScopedBlockingCall", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.base::ScopedBlockingCall"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 80, i1 false)
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 1094) #14
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %3, i32 0) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.base::FilePersistentMemoryAllocator", %"class.base::FilePersistentMemoryAllocator"* %0, i64 0, i32 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 40
  %10 = bitcast i8* %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = getelementptr inbounds %"class.base::FilePersistentMemoryAllocator", %"class.base::FilePersistentMemoryAllocator"* %0, i64 0, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp ult i32 %13, %11
  %15 = select i1 %14, i32 %13, i32 %11
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %8, i64 %16
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #14
  store i32 0, i32* %4, align 4
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.base::FilePersistentMemoryAllocator", %"class.base::FilePersistentMemoryAllocator"* %0, i64 0, i32 0, i32 5
  %22 = load i64, i64* %21, align 8
  br label %24

23:                                               ; preds = %24, %1
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #14
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #14
  ret void

24:                                               ; preds = %20, %24
  %25 = phi i32 [ 0, %20 ], [ %29, %24 ]
  %26 = phi i8* [ %8, %20 ], [ %30, %24 ]
  %27 = load volatile i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  %29 = add nsw i32 %25, %28
  store i32 %29, i32* %4, align 4
  %30 = getelementptr inbounds i8, i8* %26, i64 %22
  %31 = icmp ult i8* %30, %17
  br i1 %31, label %24, label %23
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #5

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base29FilePersistentMemoryAllocator12FlushPartialEmb(%"class.base::FilePersistentMemoryAllocator"* nocapture readonly, i64, i1 zeroext) unnamed_addr #3 align 2 {
  %4 = alloca %"class.absl::optional.41", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = getelementptr inbounds %"class.base::FilePersistentMemoryAllocator", %"class.base::FilePersistentMemoryAllocator"* %0, i64 0, i32 0, i32 6
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %32

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %10) #14
  %11 = bitcast %"class.absl::optional.41"* %4 to i64*
  store i64 -6148914691236517206, i64* %11, align 8
  store i8 0, i8* %10, align 8
  %12 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %union.anon.45* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 80, i1 false) #14
  br i1 %2, label %14, label %22

14:                                               ; preds = %9
  %15 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 1124) #14
  %16 = load i8, i8* %10, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* %19) #14
  store i8 0, i8* %10, align 8
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* %21, %"class.base::Location"* nonnull dereferenceable(32) %5, i32 0) #14
  store i8 1, i8* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #14
  br label %22

22:                                               ; preds = %20, %9
  %23 = getelementptr inbounds %"class.base::FilePersistentMemoryAllocator", %"class.base::FilePersistentMemoryAllocator"* %0, i64 0, i32 0, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = select i1 %2, i32 6, i32 3
  %26 = call i32 @msync(i8* %24, i64 %1, i32 %25) #14
  %27 = load i8, i8* %10, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* %30) #14
  store i8 0, i8* %10, align 8
  br label %31

31:                                               ; preds = %22, %29
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %10) #14
  br label %32

32:                                               ; preds = %3, %31
  ret void
}

declare i32 @msync(i8*, i64, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DelayedPersistentAllocationC2EPNS_25PersistentMemoryAllocatorEPijmb(%"class.base::DelayedPersistentAllocation"* nocapture, %"class.base::PersistentMemoryAllocator"*, i32*, i32, i64, i1 zeroext) unnamed_addr #3 align 2 {
  %7 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 0
  store %"class.base::PersistentMemoryAllocator"* %1, %"class.base::PersistentMemoryAllocator"** %7, align 8
  %8 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 1
  store i32 %3, i32* %8, align 8
  %9 = icmp ult i64 %4, 4294967296
  br i1 %9, label %11, label %10, !prof !14

10:                                               ; preds = %6
  tail call void @llvm.trap() #14
  unreachable

11:                                               ; preds = %6
  %12 = zext i1 %5 to i8
  %13 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 2
  %14 = trunc i64 %4 to i32
  store i32 %14, i32* %13, align 4
  %15 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 3
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 4
  store i8 %12, i8* %16, align 4
  %17 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 5
  %18 = bitcast %"struct.std::__1::atomic.0"** %17 to i32**
  store i32* %2, i32** %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DelayedPersistentAllocationC2EPNS_25PersistentMemoryAllocatorEPNSt3__16atomicIjEEjmmb(%"class.base::DelayedPersistentAllocation"* nocapture, %"class.base::PersistentMemoryAllocator"*, %"struct.std::__1::atomic.0"*, i32, i64, i64, i1 zeroext) unnamed_addr #3 align 2 {
  %8 = zext i1 %6 to i8
  %9 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 0
  store %"class.base::PersistentMemoryAllocator"* %1, %"class.base::PersistentMemoryAllocator"** %9, align 8
  %10 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 1
  store i32 %3, i32* %10, align 8
  %11 = icmp ult i64 %4, 4294967296
  br i1 %11, label %13, label %12, !prof !14

12:                                               ; preds = %7
  tail call void @llvm.trap() #14
  unreachable

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 2
  %15 = trunc i64 %4 to i32
  store i32 %15, i32* %14, align 4
  %16 = icmp ult i64 %5, 4294967296
  br i1 %16, label %18, label %17, !prof !14

17:                                               ; preds = %13
  tail call void @llvm.trap() #14
  unreachable

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 3
  %20 = trunc i64 %5 to i32
  store i32 %20, i32* %19, align 8
  %21 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 4
  store i8 %8, i8* %21, align 4
  %22 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 5
  store %"struct.std::__1::atomic.0"* %2, %"struct.std::__1::atomic.0"** %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DelayedPersistentAllocationC2EPNS_25PersistentMemoryAllocatorEPijmmb(%"class.base::DelayedPersistentAllocation"* nocapture, %"class.base::PersistentMemoryAllocator"*, i32*, i32, i64, i64, i1 zeroext) unnamed_addr #3 align 2 {
  %8 = zext i1 %6 to i8
  %9 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 0
  store %"class.base::PersistentMemoryAllocator"* %1, %"class.base::PersistentMemoryAllocator"** %9, align 8
  %10 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 1
  store i32 %3, i32* %10, align 8
  %11 = icmp ult i64 %4, 4294967296
  br i1 %11, label %13, label %12, !prof !14

12:                                               ; preds = %7
  tail call void @llvm.trap() #14
  unreachable

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 2
  %15 = trunc i64 %4 to i32
  store i32 %15, i32* %14, align 4
  %16 = icmp ult i64 %5, 4294967296
  br i1 %16, label %18, label %17, !prof !14

17:                                               ; preds = %13
  tail call void @llvm.trap() #14
  unreachable

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 3
  %20 = trunc i64 %5 to i32
  store i32 %20, i32* %19, align 8
  %21 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 4
  store i8 %8, i8* %21, align 4
  %22 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 5
  %23 = bitcast %"struct.std::__1::atomic.0"** %22 to i32**
  store i32* %2, i32** %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DelayedPersistentAllocationC2EPNS_25PersistentMemoryAllocatorEPNSt3__16atomicIjEEjmb(%"class.base::DelayedPersistentAllocation"* nocapture, %"class.base::PersistentMemoryAllocator"*, %"struct.std::__1::atomic.0"*, i32, i64, i1 zeroext) unnamed_addr #3 align 2 {
  %7 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 0
  store %"class.base::PersistentMemoryAllocator"* %1, %"class.base::PersistentMemoryAllocator"** %7, align 8
  %8 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 1
  store i32 %3, i32* %8, align 8
  %9 = icmp ult i64 %4, 4294967296
  br i1 %9, label %11, label %10, !prof !14

10:                                               ; preds = %6
  tail call void @llvm.trap() #14
  unreachable

11:                                               ; preds = %6
  %12 = zext i1 %5 to i8
  %13 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 2
  %14 = trunc i64 %4 to i32
  store i32 %14, i32* %13, align 4
  %15 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 3
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 4
  store i8 %12, i8* %16, align 4
  %17 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 5
  store %"struct.std::__1::atomic.0"* %2, %"struct.std::__1::atomic.0"** %17, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base27DelayedPersistentAllocationD2Ev(%"class.base::DelayedPersistentAllocation"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK4base27DelayedPersistentAllocation3GetEv(%"class.base::DelayedPersistentAllocation"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 5
  %3 = bitcast %"struct.std::__1::atomic.0"** %2 to %"struct.std::__1::__atomic_base.2"**
  %4 = load %"struct.std::__1::__atomic_base.2"*, %"struct.std::__1::__atomic_base.2"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__atomic_base.2", %"struct.std::__1::__atomic_base.2"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 acquire, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %80

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 0
  %10 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %9, align 8
  %11 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = tail call i32 @_ZN4base25PersistentMemoryAllocator12AllocateImplEmj(%"class.base::PersistentMemoryAllocator"* %10, i64 %13, i32 %15) #14
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %10, i64 0, i32 8
  %19 = load %"class.base::HistogramBase"*, %"class.base::HistogramBase"** %18, align 8
  %20 = icmp ne %"class.base::HistogramBase"* %19, null
  br i1 %17, label %27, label %21

21:                                               ; preds = %8
  br i1 %20, label %22, label %33

22:                                               ; preds = %21
  %23 = bitcast %"class.base::HistogramBase"* %19 to void (%"class.base::HistogramBase"*, i32)***
  %24 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %24, i64 6
  %26 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %25, align 8
  tail call void %26(%"class.base::HistogramBase"* nonnull %19, i32 %12) #14
  br label %33

27:                                               ; preds = %8
  br i1 %20, label %28, label %132

28:                                               ; preds = %27
  %29 = bitcast %"class.base::HistogramBase"* %19 to void (%"class.base::HistogramBase"*, i32)***
  %30 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %30, i64 6
  %32 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %31, align 8
  tail call void %32(%"class.base::HistogramBase"* nonnull %19, i32 0) #14
  br label %132

33:                                               ; preds = %22, %21
  %34 = load %"struct.std::__1::__atomic_base.2"*, %"struct.std::__1::__atomic_base.2"** %3, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__atomic_base.2", %"struct.std::__1::__atomic_base.2"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = cmpxchg volatile i32* %35, i32 0, i32 %16 release monotonic
  %37 = extractvalue { i32, i1 } %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 4
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %80, label %42

42:                                               ; preds = %38
  %43 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %9, align 8
  tail call void @_ZN4base25PersistentMemoryAllocator12MakeIterableEj(%"class.base::PersistentMemoryAllocator"* %43, i32 %16)
  br label %80

44:                                               ; preds = %33
  %45 = extractvalue { i32, i1 } %36, 0
  %46 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %9, align 8
  %47 = load i32, i32* %14, align 8
  %48 = zext i32 %16 to i64
  %49 = icmp ugt i32 %16, 63
  %50 = and i32 %16, 7
  %51 = icmp eq i32 %50, 0
  %52 = and i1 %49, %51
  br i1 %52, label %53, label %80

53:                                               ; preds = %44
  %54 = add i32 %16, 16
  %55 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %46, i64 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = icmp ugt i32 %54, %56
  br i1 %57, label %80, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %46, i64 0, i32 1
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %48
  %62 = getelementptr inbounds i8, i8* %61, i64 4
  %63 = bitcast i8* %62 to i32*
  %64 = load volatile i32, i32* %63, align 4
  %65 = icmp eq i32 %64, -931556759
  br i1 %65, label %66, label %80

66:                                               ; preds = %58
  %67 = bitcast i8* %61 to i32*
  %68 = load volatile i32, i32* %67, align 4
  %69 = icmp ult i32 %68, 16
  br i1 %69, label %80, label %70

70:                                               ; preds = %66
  %71 = load volatile i32, i32* %67, align 4
  %72 = add i32 %71, %16
  %73 = icmp ugt i32 %72, %56
  %74 = icmp eq i8* %61, null
  %75 = or i1 %74, %73
  br i1 %75, label %80, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %61, i64 8
  %78 = bitcast i8* %77 to i32*
  %79 = cmpxchg volatile i32* %78, i32 %47, i32 0 acq_rel acquire
  br label %80

80:                                               ; preds = %42, %38, %44, %53, %58, %66, %70, %76, %1
  %81 = phi i32 [ %6, %1 ], [ %16, %42 ], [ %16, %38 ], [ %45, %44 ], [ %45, %53 ], [ %45, %58 ], [ %45, %66 ], [ %45, %70 ], [ %45, %76 ]
  %82 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 0
  %83 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %82, align 8
  %84 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = zext i32 %81 to i64
  %87 = icmp ugt i32 %81, 63
  %88 = and i32 %81, 7
  %89 = icmp eq i32 %88, 0
  %90 = and i1 %87, %89
  br i1 %90, label %91, label %132

91:                                               ; preds = %80
  %92 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 16
  %95 = add i32 %94, %81
  %96 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %83, i64 0, i32 3
  %97 = load i32, i32* %96, align 4
  %98 = icmp ugt i32 %95, %97
  br i1 %98, label %132, label %99

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.base::PersistentMemoryAllocator", %"class.base::PersistentMemoryAllocator"* %83, i64 0, i32 1
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 %86
  %103 = getelementptr inbounds i8, i8* %102, i64 4
  %104 = bitcast i8* %103 to i32*
  %105 = load volatile i32, i32* %104, align 4
  %106 = icmp eq i32 %105, -931556759
  br i1 %106, label %107, label %132

107:                                              ; preds = %99
  %108 = bitcast i8* %102 to i32*
  %109 = load volatile i32, i32* %108, align 4
  %110 = icmp ult i32 %109, %94
  br i1 %110, label %132, label %111

111:                                              ; preds = %107
  %112 = load volatile i32, i32* %108, align 4
  %113 = add i32 %112, %81
  %114 = icmp ugt i32 %113, %97
  br i1 %114, label %132, label %115

115:                                              ; preds = %111
  %116 = icmp eq i32 %85, 0
  br i1 %116, label %122, label %117

117:                                              ; preds = %115
  %118 = getelementptr inbounds i8, i8* %102, i64 8
  %119 = bitcast i8* %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = icmp eq i32 %120, %85
  br i1 %121, label %122, label %132

122:                                              ; preds = %115, %117
  %123 = icmp eq i8* %102, null
  %124 = getelementptr inbounds i8, i8* %102, i64 16
  %125 = icmp eq i8* %124, null
  %126 = or i1 %123, %125
  br i1 %126, label %132, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.base::DelayedPersistentAllocation", %"class.base::DelayedPersistentAllocation"* %0, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* %124, i64 %130
  br label %132

132:                                              ; preds = %99, %107, %111, %117, %91, %80, %28, %27, %127, %122
  %133 = phi i8* [ %131, %127 ], [ null, %122 ], [ null, %27 ], [ null, %28 ], [ null, %80 ], [ null, %91 ], [ null, %117 ], [ null, %111 ], [ null, %107 ], [ null, %99 ]
  ret i8* %133
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #3 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #3 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"*) unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = !{!"branch_weights", i32 2000, i32 1}
