; ModuleID = '../../jingle/notifier/listener/send_ping_task.cc'
source_filename = "../../jingle/notifier/listener/send_ping_task.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.jingle_xmpp::StaticQName" = type { i8*, i8* }
%"class.notifier::SendPingTask::Delegate" = type { i32 (...)** }
%"class.notifier::SendPingTask" = type { %"class.jingle_xmpp::XmppTask", %"class.std::__1::basic_string", %"class.notifier::SendPingTask::Delegate"* }
%"class.jingle_xmpp::XmppTask" = type { %"class.jingle_xmpp::XmppTaskBase", %"class.jingle_xmpp::XmppStanzaHandler", %"class.sigslot::has_slots", i8, %"class.std::__1::deque", %"class.std::__1::unique_ptr.22", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::XmppTaskBase" = type { %"class.jingle_xmpp::XmppTaskParentInterface.base", %"class.jingle_xmpp::XmppTaskParentInterface"* }
%"class.jingle_xmpp::XmppTaskParentInterface.base" = type { %"class.jingle_xmpp::Task.base" }
%"class.jingle_xmpp::Task.base" = type <{ %"class.jingle_xmpp::TaskParent", i32, i8, i8, i8, i8, i8, [7 x i8], i64, i64, i32, i8, [3 x i8], i32 }>
%"class.jingle_xmpp::TaskParent" = type { i32 (...)**, %"class.jingle_xmpp::TaskParent"*, %"class.jingle_xmpp::TaskRunner"*, i8, %"class.std::__1::unique_ptr" }
%"class.jingle_xmpp::TaskRunner" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::set"* }
%"class.std::__1::set" = type opaque
%"class.jingle_xmpp::XmppStanzaHandler" = type { i32 (...)** }
%"class.sigslot::has_slots" = type { %"class.sigslot::has_slots_interface", %"class.std::__1::set.1" }
%"class.sigslot::has_slots_interface" = type { i32 (...)**, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*)* }
%"class.sigslot::_signal_base_interface" = type { void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* }
%"class.std::__1::set.1" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.18" }
%"struct.std::__1::__split_buffer" = type { %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"***, %"class.std::__1::__compressed_pair.13" }
%"class.jingle_xmpp::XmlElement" = type <{ %"class.jingle_xmpp::XmlChild", %"class.jingle_xmpp::QName", %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlChild"*, %"class.jingle_xmpp::XmlChild"*, i8, [7 x i8] }>
%"class.jingle_xmpp::XmlChild" = type { i32 (...)**, %"class.jingle_xmpp::XmlChild"* }
%"class.jingle_xmpp::QName" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::XmlAttr" = type { %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::QName", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.jingle_xmpp::XmlElement"*** }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.jingle_xmpp::XmlElement"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.jingle_xmpp::XmppTaskParentInterface" = type { %"class.jingle_xmpp::Task.base", [4 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.jingle_xmpp::Jid" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.jingle_xmpp::Task" = type <{ %"class.jingle_xmpp::TaskParent", i32, i8, i8, i8, i8, i8, [7 x i8], i64, i64, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.jingle_xmpp::XmppClientInterface" = type { i32 (...)**, %"class.sigslot::signal_with_thread_policy" }
%"class.sigslot::signal_with_thread_policy" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::_signal_base.base" = type <{ %"class.sigslot::_signal_base_interface", %"class.std::__1::list", %"class.std::__1::__list_iterator", i8 }>
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }

$_ZN11jingle_xmpp12XmppTaskBase9GetClientEv = comdat any

@_ZTVN8notifier12SendPingTaskE = hidden unnamed_addr constant { [13 x i8*], [5 x i8*], [4 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.notifier::SendPingTask"*)* @_ZN8notifier12SendPingTaskD2Ev to i8*), i8* bitcast (void (%"class.notifier::SendPingTask"*)* @_ZN8notifier12SendPingTaskD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::Task"*, i32)* @_ZNK11jingle_xmpp4Task12GetStateNameEi to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::Task"*, i32)* @_ZN11jingle_xmpp4Task7ProcessEi to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppTask"*)* @_ZN11jingle_xmpp8XmppTask4StopEv to i8*), i8* bitcast (i32 (%"class.notifier::SendPingTask"*)* @_ZN8notifier12SendPingTask12ProcessStartEv to i8*), i8* bitcast (i32 (%"class.notifier::SendPingTask"*)* @_ZN8notifier12SendPingTask15ProcessResponseEv to i8*), i8* bitcast (%"class.jingle_xmpp::XmppClientInterface"* (%"class.jingle_xmpp::XmppTaskBase"*)* @_ZN11jingle_xmpp12XmppTaskBase9GetClientEv to i8*), i8* bitcast (i1 (%"class.notifier::SendPingTask"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN8notifier12SendPingTask12HandleStanzaEPKN11jingle_xmpp10XmlElementE to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppTask"*)* @_ZN11jingle_xmpp8XmppTask12OnDisconnectEv to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppTask"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp8XmppTask11QueueStanzaEPKNS_10XmlElementE to i8*)], [5 x i8*] [i8* inttoptr (i64 -96 to i8*), i8* null, i8* bitcast (void (%"class.notifier::SendPingTask"*)* @_ZThn96_N8notifier12SendPingTaskD1Ev to i8*), i8* bitcast (void (%"class.notifier::SendPingTask"*)* @_ZThn96_N8notifier12SendPingTaskD0Ev to i8*), i8* bitcast (i1 (%"class.notifier::SendPingTask"*, %"class.jingle_xmpp::XmlElement"*)* @_ZThn96_N8notifier12SendPingTask12HandleStanzaEPKN11jingle_xmpp10XmlElementE to i8*)], [4 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.notifier::SendPingTask"*)* @_ZThn104_N8notifier12SendPingTaskD1Ev to i8*), i8* bitcast (void (%"class.notifier::SendPingTask"*)* @_ZThn104_N8notifier12SendPingTaskD0Ev to i8*)] }, align 8
@_ZN11jingle_xmpp7QN_TYPEE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp10STR_RESULTE = external constant [0 x i8], align 1
@_ZN11jingle_xmpp9STR_EMPTYE = external constant [0 x i8], align 1
@_ZN11jingle_xmpp7STR_GETE = external constant [0 x i8], align 1
@_ZN11jingle_xmpp7QN_PINGE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZTVN8notifier12SendPingTask8DelegateE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.notifier::SendPingTask::Delegate"*)* @_ZN8notifier12SendPingTask8DelegateD2Ev to i8*), i8* bitcast (void (%"class.notifier::SendPingTask::Delegate"*)* @_ZN8notifier12SendPingTask8DelegateD0Ev to i8*)] }, align 8

@_ZN8notifier12SendPingTask8DelegateD1Ev = hidden unnamed_addr alias void (%"class.notifier::SendPingTask::Delegate"*), void (%"class.notifier::SendPingTask::Delegate"*)* @_ZN8notifier12SendPingTask8DelegateD2Ev
@_ZN8notifier12SendPingTaskC1EPN11jingle_xmpp23XmppTaskParentInterfaceEPNS0_8DelegateE = hidden unnamed_addr alias void (%"class.notifier::SendPingTask"*, %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.notifier::SendPingTask::Delegate"*), void (%"class.notifier::SendPingTask"*, %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.notifier::SendPingTask::Delegate"*)* @_ZN8notifier12SendPingTaskC2EPN11jingle_xmpp23XmppTaskParentInterfaceEPNS0_8DelegateE
@_ZN8notifier12SendPingTaskD1Ev = hidden unnamed_addr alias void (%"class.notifier::SendPingTask"*), void (%"class.notifier::SendPingTask"*)* @_ZN8notifier12SendPingTaskD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8notifier12SendPingTask8DelegateD2Ev(%"class.notifier::SendPingTask::Delegate"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN8notifier12SendPingTask8DelegateD0Ev(%"class.notifier::SendPingTask::Delegate"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier12SendPingTaskC2EPN11jingle_xmpp23XmppTaskParentInterfaceEPNS0_8DelegateE(%"class.notifier::SendPingTask"*, %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.notifier::SendPingTask::Delegate"*) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0
  tail call void @_ZN11jingle_xmpp8XmppTaskC2EPNS_23XmppTaskParentInterfaceENS_10XmppEngine12HandlerLevelE(%"class.jingle_xmpp::XmppTask"* %4, %"class.jingle_xmpp::XmppTaskParentInterface"* %1, i32 2) #12
  %5 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0, i32 1, i32 0
  %7 = bitcast i32 (...)*** %6 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #12
  %10 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 2
  store %"class.notifier::SendPingTask::Delegate"* %2, %"class.notifier::SendPingTask::Delegate"** %10, align 8
  ret void
}

declare void @_ZN11jingle_xmpp8XmppTaskC2EPNS_23XmppTaskParentInterfaceENS_10XmppEngine12HandlerLevelE(%"class.jingle_xmpp::XmppTask"*, %"class.jingle_xmpp::XmppTaskParentInterface"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier12SendPingTaskD2Ev(%"class.notifier::SendPingTask"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void @_ZdlPv(i8* %12) #13
  br label %13

13:                                               ; preds = %1, %10
  %14 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0
  tail call void @_ZN11jingle_xmpp8XmppTaskD2Ev(%"class.jingle_xmpp::XmppTask"* %14) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp8XmppTaskD2Ev(%"class.jingle_xmpp::XmppTask"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn96_N8notifier12SendPingTaskD1Ev(%"class.notifier::SendPingTask"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 -1, i32 0, i32 4, i32 0, i32 0, i32 2
  %3 = bitcast %"class.jingle_xmpp::XmlElement"**** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"**** %2, i64 12
  %5 = bitcast %"class.jingle_xmpp::XmlElement"**** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"**** %2, i64 31
  %7 = bitcast %"class.jingle_xmpp::XmlElement"**** %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = bitcast %"class.jingle_xmpp::XmlElement"**** %6 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #13
  br label %14

14:                                               ; preds = %1, %11
  %15 = bitcast %"class.jingle_xmpp::XmlElement"**** %2 to %"class.jingle_xmpp::XmppTask"*
  tail call void @_ZN11jingle_xmpp8XmppTaskD2Ev(%"class.jingle_xmpp::XmppTask"* %15) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N8notifier12SendPingTaskD1Ev(%"class.notifier::SendPingTask"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 -1, i32 0, i32 4, i32 0, i32 0, i32 1
  %3 = bitcast %"class.jingle_xmpp::XmlElement"**** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"**** %2, i64 12
  %5 = bitcast %"class.jingle_xmpp::XmlElement"**** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"**** %2, i64 31
  %7 = bitcast %"class.jingle_xmpp::XmlElement"**** %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = bitcast %"class.jingle_xmpp::XmlElement"**** %6 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #13
  br label %14

14:                                               ; preds = %1, %11
  %15 = bitcast %"class.jingle_xmpp::XmlElement"**** %2 to %"class.jingle_xmpp::XmppTask"*
  tail call void @_ZN11jingle_xmpp8XmppTaskD2Ev(%"class.jingle_xmpp::XmppTask"* %15) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier12SendPingTaskD0Ev(%"class.notifier::SendPingTask"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void @_ZdlPv(i8* %12) #13
  br label %13

13:                                               ; preds = %1, %10
  %14 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0
  tail call void @_ZN11jingle_xmpp8XmppTaskD2Ev(%"class.jingle_xmpp::XmppTask"* %14) #12
  %15 = bitcast %"class.notifier::SendPingTask"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn96_N8notifier12SendPingTaskD0Ev(%"class.notifier::SendPingTask"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 -1, i32 0, i32 4, i32 0, i32 0, i32 2
  %3 = bitcast %"class.jingle_xmpp::XmlElement"**** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"**** %2, i64 12
  %5 = bitcast %"class.jingle_xmpp::XmlElement"**** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"**** %2, i64 31
  %7 = bitcast %"class.jingle_xmpp::XmlElement"**** %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = bitcast %"class.jingle_xmpp::XmlElement"**** %6 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #13
  br label %14

14:                                               ; preds = %1, %11
  %15 = bitcast %"class.jingle_xmpp::XmlElement"**** %2 to %"class.jingle_xmpp::XmppTask"*
  tail call void @_ZN11jingle_xmpp8XmppTaskD2Ev(%"class.jingle_xmpp::XmppTask"* %15) #12
  %16 = bitcast %"class.jingle_xmpp::XmlElement"**** %2 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N8notifier12SendPingTaskD0Ev(%"class.notifier::SendPingTask"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 -1, i32 0, i32 4, i32 0, i32 0, i32 1
  %3 = bitcast %"class.jingle_xmpp::XmlElement"**** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"**** %2, i64 12
  %5 = bitcast %"class.jingle_xmpp::XmlElement"**** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*], [4 x i8*] }, { [13 x i8*], [5 x i8*], [4 x i8*] }* @_ZTVN8notifier12SendPingTaskE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"***, %"class.jingle_xmpp::XmlElement"**** %2, i64 31
  %7 = bitcast %"class.jingle_xmpp::XmlElement"**** %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = bitcast %"class.jingle_xmpp::XmlElement"**** %6 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #13
  br label %14

14:                                               ; preds = %1, %11
  %15 = bitcast %"class.jingle_xmpp::XmlElement"**** %2 to %"class.jingle_xmpp::XmppTask"*
  tail call void @_ZN11jingle_xmpp8XmppTaskD2Ev(%"class.jingle_xmpp::XmppTask"* %15) #12
  %16 = bitcast %"class.jingle_xmpp::XmlElement"**** %2 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8notifier12SendPingTask12ProcessStartEv(%"class.notifier::SendPingTask"*) unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0, i32 6
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1, !noalias !2
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 8 %11, i64 24, i1 false) #12
  br label %17

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !noalias !2
  %15 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %14, i64 %16) #12
  br label %17

17:                                               ; preds = %10, %12
  %18 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #13
  br label %26

26:                                               ; preds = %23, %17
  %27 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %3, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #12
  %28 = call %"class.jingle_xmpp::XmlElement"* @_ZN8notifier12SendPingTask14MakePingStanzaERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %18)
  %29 = call i32 @_ZN11jingle_xmpp8XmppTask10SendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppTask"* %4, %"class.jingle_xmpp::XmlElement"* %28) #12
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, i32 4, i32 3
  %32 = icmp eq %"class.jingle_xmpp::XmlElement"* %28, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %26
  %34 = bitcast %"class.jingle_xmpp::XmlElement"* %28 to void (%"class.jingle_xmpp::XmlElement"*)***
  %35 = load void (%"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmlElement"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %35, i64 4
  %37 = load void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %36, align 8
  call void %37(%"class.jingle_xmpp::XmlElement"* nonnull %28) #12
  br label %38

38:                                               ; preds = %26, %33
  ret i32 %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.jingle_xmpp::XmlElement"* @_ZN8notifier12SendPingTask14MakePingStanzaERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.jingle_xmpp::Jid", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.jingle_xmpp::QName", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp7STR_GETE, i64 0, i64 0)) #12
  %8 = icmp ugt i64 %7, -17
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %10) #11
  unreachable

11:                                               ; preds = %1
  %12 = icmp ult i64 %7, 23
  br i1 %12, label %21, label %13

13:                                               ; preds = %11
  %14 = add nuw i64 %7, 16
  %15 = and i64 %14, -16
  %16 = tail call i8* @_Znwm(i64 %15) #13
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = or i64 %15, -9223372036854775808
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %7, i64* %20, align 8
  br label %26

21:                                               ; preds = %11
  %22 = trunc i64 %7 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = icmp eq i64 %7, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %21, %13
  %27 = phi i8* [ %16, %13 ], [ %6, %21 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp7STR_GETE, i64 0, i64 0), i64 %7, i1 false) #12
  br label %28

28:                                               ; preds = %21, %26
  %29 = phi i8* [ %6, %21 ], [ %27, %26 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %7
  store i8 0, i8* %30, align 1
  %31 = bitcast %"class.jingle_xmpp::Jid"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #12
  %32 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  %33 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #12
  %34 = icmp ugt i64 %33, -17
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %36) #11
  unreachable

37:                                               ; preds = %28
  %38 = icmp ult i64 %33, 23
  br i1 %38, label %48, label %39

39:                                               ; preds = %37
  %40 = add nuw i64 %33, 16
  %41 = and i64 %40, -16
  %42 = tail call i8* @_Znwm(i64 %41) #13
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %42, i8** %43, align 8
  %44 = or i64 %41, -9223372036854775808
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %46, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %53

48:                                               ; preds = %37
  %49 = trunc i64 %33 to i8
  %50 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 %49, i8* %51, align 1
  %52 = icmp eq i64 %33, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %48, %39
  %54 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %50, %48 ], [ %47, %39 ]
  %55 = phi i8* [ %32, %48 ], [ %42, %39 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %55, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %33, i1 false) #12
  br label %56

56:                                               ; preds = %48, %53
  %57 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %50, %48 ], [ %54, %53 ]
  %58 = phi i8* [ %32, %48 ], [ %55, %53 ]
  %59 = getelementptr inbounds i8, i8* %58, i64 %33
  store i8 0, i8* %59, align 1
  call void @_ZN11jingle_xmpp3JidC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::Jid"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %60 = call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp8XmppTask6MakeIqERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_3JidES9_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.jingle_xmpp::Jid"* nonnull dereferenceable(72) %3, %"class.std::__1::basic_string"* dereferenceable(24) %0) #12
  call void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"* nonnull %3) #12
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %56, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #12
  %68 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %67, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  %76 = call i8* @_Znwm(i64 104) #13
  %77 = bitcast i8* %76 to %"class.jingle_xmpp::XmlElement"*
  %78 = bitcast %"class.jingle_xmpp::QName"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %78) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %5, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_PINGE) #12
  call void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"* nonnull %77, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %5) #12
  call void @_ZN11jingle_xmpp10XmlElement10AddElementEPS0_(%"class.jingle_xmpp::XmlElement"* %60, %"class.jingle_xmpp::XmlElement"* nonnull %77) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %78) #12
  ret %"class.jingle_xmpp::XmlElement"* %60
}

declare i32 @_ZN11jingle_xmpp8XmppTask10SendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppTask"*, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8notifier12SendPingTask15ProcessResponseEv(%"class.notifier::SendPingTask"*) unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0
  %4 = tail call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp8XmppTask10NextStanzaEv(%"class.jingle_xmpp::XmppTask"* %3) #12
  %5 = icmp eq %"class.jingle_xmpp::XmlElement"* %4, null
  br i1 %5, label %36, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.jingle_xmpp::XmlElement"* nonnull %4, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #12
  %11 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp10STR_RESULTE, i64 0, i64 0)) #12
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = load i64, i64* %9, align 8
  %17 = zext i8 %14 to i64
  %18 = select i1 %15, i64 %16, i64 %17
  %19 = icmp eq i64 %11, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %6
  %21 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp10STR_RESULTE, i64 0, i64 0), i64 %11) #12
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 2
  %25 = load %"class.notifier::SendPingTask::Delegate"*, %"class.notifier::SendPingTask::Delegate"** %24, align 8
  %26 = bitcast %"class.notifier::SendPingTask::Delegate"* %25 to void (%"class.notifier::SendPingTask::Delegate"*)***
  %27 = load void (%"class.notifier::SendPingTask::Delegate"*)**, void (%"class.notifier::SendPingTask::Delegate"*)*** %26, align 8
  %28 = load void (%"class.notifier::SendPingTask::Delegate"*)*, void (%"class.notifier::SendPingTask::Delegate"*)** %27, align 8
  call void %28(%"class.notifier::SendPingTask::Delegate"* %25) #12
  br label %29

29:                                               ; preds = %20, %6, %23
  %30 = phi i32 [ 2, %23 ], [ 3, %20 ], [ 3, %6 ]
  %31 = load i8, i8* %13, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  %34 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %29, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  br label %36

36:                                               ; preds = %1, %35
  %37 = phi i32 [ %30, %35 ], [ -1, %1 ]
  ret i32 %37
}

declare %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp8XmppTask10NextStanzaEv(%"class.jingle_xmpp::XmppTask"*) local_unnamed_addr #4

declare void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* sret, %"class.jingle_xmpp::XmlElement"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8notifier12SendPingTask12HandleStanzaEPKN11jingle_xmpp10XmlElementE(%"class.notifier::SendPingTask"*, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #3 align 2 {
  %3 = alloca %"class.jingle_xmpp::Jid", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 0
  %6 = bitcast %"class.jingle_xmpp::Jid"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #12
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #12
  %9 = icmp ugt i64 %8, -17
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %11) #11
  unreachable

12:                                               ; preds = %2
  %13 = icmp ult i64 %8, 23
  br i1 %13, label %23, label %14

14:                                               ; preds = %12
  %15 = add nuw i64 %8, 16
  %16 = and i64 %15, -16
  %17 = tail call i8* @_Znwm(i64 %16) #13
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = or i64 %16, -9223372036854775808
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %21, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %28

23:                                               ; preds = %12
  %24 = trunc i64 %8 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1
  %27 = icmp eq i64 %8, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %23, %14
  %29 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %25, %23 ], [ %22, %14 ]
  %30 = phi i8* [ %7, %23 ], [ %17, %14 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %30, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %8, i1 false) #12
  br label %31

31:                                               ; preds = %23, %28
  %32 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %25, %23 ], [ %29, %28 ]
  %33 = phi i8* [ %7, %23 ], [ %30, %28 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %8
  store i8 0, i8* %34, align 1
  call void @_ZN11jingle_xmpp3JidC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::Jid"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %35 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 0, i32 1
  %36 = call zeroext i1 @_ZN11jingle_xmpp8XmppTask15MatchResponseIqEPKNS_10XmlElementERKNS_3JidERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%"class.jingle_xmpp::XmppTask"* %5, %"class.jingle_xmpp::XmlElement"* %1, %"class.jingle_xmpp::Jid"* nonnull dereferenceable(72) %3, %"class.std::__1::basic_string"* dereferenceable(24) %35) #12
  call void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"* nonnull %3) #12
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #13
  br label %43

43:                                               ; preds = %31, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #12
  br i1 %36, label %44, label %49

44:                                               ; preds = %43
  %45 = bitcast %"class.notifier::SendPingTask"* %0 to void (%"class.jingle_xmpp::XmppTask"*, %"class.jingle_xmpp::XmlElement"*)***
  %46 = load void (%"class.jingle_xmpp::XmppTask"*, %"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmppTask"*, %"class.jingle_xmpp::XmlElement"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.jingle_xmpp::XmppTask"*, %"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmppTask"*, %"class.jingle_xmpp::XmlElement"*)** %46, i64 10
  %48 = load void (%"class.jingle_xmpp::XmppTask"*, %"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmppTask"*, %"class.jingle_xmpp::XmlElement"*)** %47, align 8
  call void %48(%"class.jingle_xmpp::XmppTask"* %5, %"class.jingle_xmpp::XmlElement"* %1) #12
  br label %49

49:                                               ; preds = %43, %44
  %50 = phi i1 [ true, %44 ], [ false, %43 ]
  ret i1 %50
}

declare zeroext i1 @_ZN11jingle_xmpp8XmppTask15MatchResponseIqEPKNS_10XmlElementERKNS_3JidERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%"class.jingle_xmpp::XmppTask"*, %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::Jid"* dereferenceable(72), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN11jingle_xmpp3JidC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn96_N8notifier12SendPingTask12HandleStanzaEPKN11jingle_xmpp10XmlElementE(%"class.notifier::SendPingTask"*, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.notifier::SendPingTask", %"class.notifier::SendPingTask"* %0, i64 -1, i32 0, i32 4, i32 0, i32 0, i32 2
  %4 = bitcast %"class.jingle_xmpp::XmlElement"**** %3 to %"class.notifier::SendPingTask"*
  %5 = tail call zeroext i1 @_ZN8notifier12SendPingTask12HandleStanzaEPKN11jingle_xmpp10XmlElementE(%"class.notifier::SendPingTask"* %4, %"class.jingle_xmpp::XmlElement"* %1)
  ret i1 %5
}

declare %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp8XmppTask6MakeIqERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_3JidES9_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.jingle_xmpp::Jid"* dereferenceable(72), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN11jingle_xmpp10XmlElement10AddElementEPS0_(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) unnamed_addr #4

declare void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"*) unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNK11jingle_xmpp4Task12GetStateNameEi(%"class.std::__1::basic_string"* sret, %"class.jingle_xmpp::Task"*, i32) unnamed_addr #4

declare i32 @_ZN11jingle_xmpp4Task7ProcessEi(%"class.jingle_xmpp::Task"*, i32) unnamed_addr #4

declare void @_ZN11jingle_xmpp8XmppTask4StopEv(%"class.jingle_xmpp::XmppTask"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.jingle_xmpp::XmppClientInterface"* @_ZN11jingle_xmpp12XmppTaskBase9GetClientEv(%"class.jingle_xmpp::XmppTaskBase"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppTaskBase", %"class.jingle_xmpp::XmppTaskBase"* %0, i64 0, i32 1
  %3 = load %"class.jingle_xmpp::XmppTaskParentInterface"*, %"class.jingle_xmpp::XmppTaskParentInterface"** %2, align 8
  %4 = bitcast %"class.jingle_xmpp::XmppTaskParentInterface"* %3 to %"class.jingle_xmpp::XmppClientInterface"* (%"class.jingle_xmpp::XmppTaskParentInterface"*)***
  %5 = load %"class.jingle_xmpp::XmppClientInterface"* (%"class.jingle_xmpp::XmppTaskParentInterface"*)**, %"class.jingle_xmpp::XmppClientInterface"* (%"class.jingle_xmpp::XmppTaskParentInterface"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppClientInterface"* (%"class.jingle_xmpp::XmppTaskParentInterface"*)*, %"class.jingle_xmpp::XmppClientInterface"* (%"class.jingle_xmpp::XmppTaskParentInterface"*)** %5, i64 7
  %7 = load %"class.jingle_xmpp::XmppClientInterface"* (%"class.jingle_xmpp::XmppTaskParentInterface"*)*, %"class.jingle_xmpp::XmppClientInterface"* (%"class.jingle_xmpp::XmppTaskParentInterface"*)** %6, align 8
  %8 = tail call %"class.jingle_xmpp::XmppClientInterface"* %7(%"class.jingle_xmpp::XmppTaskParentInterface"* %3) #12
  ret %"class.jingle_xmpp::XmppClientInterface"* %8
}

declare void @_ZN11jingle_xmpp8XmppTask12OnDisconnectEv(%"class.jingle_xmpp::XmppTask"*) unnamed_addr #4

declare void @_ZN11jingle_xmpp8XmppTask11QueueStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppTask"*, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK11jingle_xmpp8XmppTask7task_idEv: argument 0"}
!4 = distinct !{!4, !"_ZNK11jingle_xmpp8XmppTask7task_idEv"}
