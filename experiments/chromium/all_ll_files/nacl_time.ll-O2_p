; ModuleID = '../../native_client/src/shared/platform/posix/nacl_time.c'
source_filename = "../../native_client/src/shared/platform/posix/nacl_time.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClTimeState = type { i64 }
%struct.nacl_abi_timeval = type { i64, i32 }
%struct.timeval = type { i64, i64 }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.timespec = type { i64, i64 }

@.str = private unnamed_addr constant [21 x i8] c"nanosleep(%lx, %lx)\0A\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"nanosleep(time = %ld.%09ld S)\0A\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"tv_nsec too large %ld\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c" returned %d\0A\00", align 1
@gNaClTimeState.0 = internal unnamed_addr global i1 false, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @NaClAllowLowResolutionTimeOfDay() local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @NaClTimeInternalInit(%struct.NaClTimeState* nocapture) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.NaClTimeState, %struct.NaClTimeState* %0, i64 0, i32 0
  store i64 1000, i64* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @NaClTimeInternalFini(%struct.NaClTimeState* nocapture) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @NaClTimerResolutionNsInternal(%struct.NaClTimeState* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.NaClTimeState, %struct.NaClTimeState* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @NaClTimeInit() local_unnamed_addr #1 {
  store i1 true, i1* @gNaClTimeState.0, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @NaClTimeFini() local_unnamed_addr #0 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @NaClTimerResolutionNanoseconds() local_unnamed_addr #2 {
  %1 = load i1, i1* @gNaClTimeState.0, align 8
  %2 = select i1 %1, i64 1000, i64 0
  ret i64 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClGetTimeOfDay(%struct.nacl_abi_timeval* nocapture) local_unnamed_addr #3 {
  %2 = alloca %struct.timeval, align 8
  %3 = bitcast %struct.timeval* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8
  %4 = bitcast %struct.timeval* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false)
  %5 = call i32 @gettimeofday(%struct.timeval* nonnull %2, i8* null) #8
  switch i32 %5, label %19 [
    i32 0, label %6
    i32 -1, label %14
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 0
  %8 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 1
  %9 = load i64, i64* %7, align 8
  %10 = getelementptr inbounds %struct.nacl_abi_timeval, %struct.nacl_abi_timeval* %0, i64 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = load i64, i64* %8, align 8
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %struct.nacl_abi_timeval, %struct.nacl_abi_timeval* %0, i64 0, i32 1
  store i32 %12, i32* %13, align 8
  br label %19

14:                                               ; preds = %1
  %15 = tail call i32* @__errno_location() #9
  %16 = load i32, i32* %15, align 4
  %17 = tail call i32 @NaClXlateErrno(i32 %16) #8
  %18 = sub nsw i32 0, %17
  br label %19

19:                                               ; preds = %6, %1, %14
  %20 = phi i32 [ %18, %14 ], [ 0, %6 ], [ %5, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8
  ret i32 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClNanosleep(%struct.nacl_abi_timespec* nocapture readonly, %struct.nacl_abi_timespec*) local_unnamed_addr #3 {
  %3 = alloca %struct.timespec, align 8
  %4 = alloca %struct.timespec, align 8
  %5 = bitcast %struct.timespec* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 0
  %7 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i64 0, i32 1
  %8 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, i32 0
  %10 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, i32 1
  %11 = getelementptr inbounds %struct.nacl_abi_timespec, %struct.nacl_abi_timespec* %0, i64 0, i32 0
  %12 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i64, i64* %11, align 8
  store i64 %13, i64* %6, align 8
  %14 = getelementptr inbounds %struct.nacl_abi_timespec, %struct.nacl_abi_timespec* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %7, align 8
  %17 = icmp eq %struct.nacl_abi_timespec* %1, null
  %18 = select i1 %17, %struct.timespec* null, %struct.timespec* %4
  %19 = ptrtoint %struct.timespec* %3 to i64
  %20 = ptrtoint %struct.timespec* %18 to i64
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 %19, i64 %20) #8
  %21 = load i64, i64* %6, align 8
  %22 = load i64, i64* %7, align 8
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i64 %21, i64 %22) #8
  %23 = load i64, i64* %7, align 8
  %24 = icmp sgt i64 %23, 1000000000
  br i1 %24, label %25, label %26

25:                                               ; preds = %2
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i64 %23) #8
  br label %26

26:                                               ; preds = %25, %2
  %27 = call i32 @nanosleep(%struct.timespec* nonnull %3, %struct.timespec* %18) #8
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i32 %27) #8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %47, label %29

29:                                               ; preds = %26
  %30 = tail call i32* @__errno_location() #9
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 4
  %33 = icmp ne %struct.nacl_abi_timespec* %1, null
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = load i64, i64* %9, align 8
  %37 = getelementptr inbounds %struct.nacl_abi_timespec, %struct.nacl_abi_timespec* %1, i64 0, i32 0
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* %10, align 8
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %struct.nacl_abi_timespec, %struct.nacl_abi_timespec* %1, i64 0, i32 1
  store i32 %39, i32* %40, align 8
  br label %41

41:                                               ; preds = %35, %29
  %42 = icmp eq i32 %27, -1
  br i1 %42, label %43, label %47

43:                                               ; preds = %41
  %44 = load i32, i32* %30, align 4
  %45 = call i32 @NaClXlateErrno(i32 %44) #8
  %46 = sub nsw i32 0, %45
  br label %47

47:                                               ; preds = %26, %41, %43
  %48 = phi i32 [ %46, %43 ], [ %27, %41 ], [ 0, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret i32 %48
}

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #6

declare i32 @nanosleep(%struct.timespec*, %struct.timespec*) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #7

declare i32 @NaClXlateErrno(i32) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
