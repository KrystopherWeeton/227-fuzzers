; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/split.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/split.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteSplitParams = type { i32 }
%"class.tflite::VectorOfTensors" = type { %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float**, float**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float** }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"*, %"class.std::__1::__compressed_pair.4" }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.tflite::RuntimeShape"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"**, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.tflite::RuntimeShape"** }
%"class.tflite::VectorOfTensors.16" = type { %"class.std::__1::vector.17", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { i8**, i8**, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i8** }
%"class.tflite::VectorOfTensors.24" = type { %"class.std::__1::vector.25", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { i8**, i8**, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i8** }
%"class.tflite::VectorOfTensors.32" = type { %"class.std::__1::vector.33", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { i16**, i16**, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i16** }
%"class.tflite::VectorOfTensors.40" = type { %"class.std::__1::vector.41", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { i32**, i32**, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i32** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIhEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIsEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.3 = private unnamed_addr constant [62 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/split.cc\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"axis_value >= 0\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"axis_value < NumDimensions(input)\00", align 1
@.str.6 = private unnamed_addr constant [80 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/split.cc Not an even split\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"op_context.params->num_splits\00", align 1
@.str.12 = private unnamed_addr constant [148 x i8] c"input_type == kTfLiteFloat32 || input_type == kTfLiteUInt8 || input_type == kTfLiteInt8 || input_type == kTfLiteInt16 || input_type == kTfLiteInt32\00", align 1
@.str.13 = private unnamed_addr constant [45 x i8] c"axis_value < NumDimensions(op_context.input)\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"Type %s currently not supported.\00", align 1
@_ZZN6tflite3ops7builtin14Register_SPLITEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin5split7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin5split4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin5split23UseDynamicOutputTensorsEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* nocapture readonly, %struct.TfLiteNode* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  br label %11

10:                                               ; preds = %30, %2
  ret i32 0

11:                                               ; preds = %8, %30
  %12 = phi %struct.TfLiteIntArray* [ %4, %8 ], [ %31, %30 ]
  %13 = phi i64 [ 0, %8 ], [ %32, %30 ]
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %12, i64 0, i32 1, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %11
  %18 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %19 = sext i32 %15 to i64
  %20 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %18, i64 %19
  br label %21

21:                                               ; preds = %11, %17
  %22 = phi %struct.TfLiteTensor* [ %20, %17 ], [ null, %11 ]
  %23 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 4
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  store i32 4, i32* %23, align 8
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 0, i32 1
  %28 = bitcast %union.TfLitePtrUnion* %27 to i8**
  store i8* null, i8** %28, align 8
  %29 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  br label %30

30:                                               ; preds = %21, %26
  %31 = phi %struct.TfLiteIntArray* [ %12, %21 ], [ %29, %26 ]
  %32 = add nuw nsw i64 %13, 1
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = icmp slt i64 %32, %35
  br i1 %36, label %11, label %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin5split19ResizeOutputTensorsEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS9_i(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor* nocapture readonly, i32) local_unnamed_addr #2 {
  %6 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1, i32 0
  %9 = load i32*, i32** %8, align 8
  br label %10

10:                                               ; preds = %5, %7
  %11 = phi i32* [ %9, %7 ], [ null, %5 ]
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %13, label %18, label %24

18:                                               ; preds = %10
  %19 = add nsw i32 %17, %12
  %20 = icmp sgt i32 %19, -1
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %23 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %22, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %23(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 57, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #10
  br label %77

24:                                               ; preds = %10, %18
  %25 = phi i32 [ %19, %18 ], [ %12, %10 ]
  %26 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %27 = icmp slt i32 %25, %17
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %30 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %29, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %30(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0)) #10
  br label %77

31:                                               ; preds = %24
  %32 = sext i32 %25 to i64
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = srem i32 %34, %4
  %36 = sdiv i32 %34, %4
  %37 = icmp eq i32 %35, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %40 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %39, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %40(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6, i64 0, i64 0)) #10
  br label %77

41:                                               ; preds = %31
  %42 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %43 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %42, align 8
  %44 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %47, label %77

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %49 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  br label %58

50:                                               ; preds = %71
  %51 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %42, align 8
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = icmp slt i64 %76, %54
  br i1 %55, label %56, label %77

56:                                               ; preds = %50
  %57 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %26, align 8
  br label %58

58:                                               ; preds = %56, %47
  %59 = phi %struct.TfLiteIntArray* [ %15, %47 ], [ %57, %56 ]
  %60 = phi i64 [ 0, %47 ], [ %76, %56 ]
  %61 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %59) #10
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %61, i64 0, i32 1, i64 %32
  store i32 %36, i32* %62, align 4
  %63 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %42, align 8
  %64 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %63, i64 0, i32 1, i64 %60
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %58
  %68 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %48, align 8
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 %69
  br label %71

71:                                               ; preds = %58, %67
  %72 = phi %struct.TfLiteTensor* [ %70, %67 ], [ null, %58 ]
  %73 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %49, align 8
  %74 = tail call i32 %73(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %72, %struct.TfLiteIntArray* %61) #10
  %75 = icmp eq i32 %74, 0
  %76 = add nuw nsw i64 %60, 1
  br i1 %75, label %50, label %77

77:                                               ; preds = %50, %71, %41, %38, %28, %21
  %78 = phi i32 [ 1, %28 ], [ 1, %21 ], [ 1, %38 ], [ 0, %41 ], [ 0, %50 ], [ %74, %71 ]
  ret i32 %78
}

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin5split7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #2 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 76, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 %6, i32 2) #10
  br label %113

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %13 = bitcast i8** %12 to %struct.TfLiteSplitParams**
  %14 = load %struct.TfLiteSplitParams*, %struct.TfLiteSplitParams** %13, align 8
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %20 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %19, align 8
  %21 = sext i32 %16 to i64
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %20, i64 %21
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %struct.TfLiteTensor* [ %22, %18 ], [ null, %11 ]
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  br label %33

33:                                               ; preds = %23, %28
  %34 = phi %struct.TfLiteTensor* [ %32, %28 ], [ null, %23 ]
  %35 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %36 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %35, align 8
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %struct.TfLiteSplitParams, %struct.TfLiteSplitParams* %14, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %45, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %44 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %43, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %44(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0), i32 %38, i32 %40) #10
  br label %113

45:                                               ; preds = %33
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  switch i32 %47, label %48 [
    i32 9, label %51
    i32 7, label %51
    i32 3, label %51
    i32 2, label %51
    i32 1, label %51
  ]

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %50 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %49, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %50(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.12, i64 0, i64 0)) #10
  br label %113

51:                                               ; preds = %45, %45, %45, %45, %45
  %52 = icmp sgt i32 %38, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  br label %61

55:                                               ; preds = %71, %51
  %56 = phi %struct.TfLiteIntArray* [ %36, %51 ], [ %75, %71 ]
  %57 = phi i32 [ %38, %51 ], [ %77, %71 ]
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 4
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %80, label %83

61:                                               ; preds = %53, %71
  %62 = phi i64 [ 0, %53 ], [ %74, %71 ]
  %63 = phi %struct.TfLiteIntArray* [ %36, %53 ], [ %75, %71 ]
  %64 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %63, i64 0, i32 1, i64 %62
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %61
  %68 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %54, align 8
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 %69
  br label %71

71:                                               ; preds = %61, %67
  %72 = phi %struct.TfLiteTensor* [ %70, %67 ], [ null, %61 ]
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %72, i64 0, i32 0
  store i32 %47, i32* %73, align 8
  %74 = add nuw nsw i64 %62, 1
  %75 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %35, align 8
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = icmp slt i64 %74, %78
  br i1 %79, label %61, label %55

80:                                               ; preds = %55
  %81 = load i32, i32* %39, align 4
  %82 = tail call i32 @_ZN6tflite3ops7builtin5split19ResizeOutputTensorsEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS9_i(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %34, i32 %81)
  br label %113

83:                                               ; preds = %55
  %84 = icmp sgt i32 %57, 0
  br i1 %84, label %85, label %113

85:                                               ; preds = %83
  %86 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  br label %87

87:                                               ; preds = %106, %85
  %88 = phi %struct.TfLiteIntArray* [ %56, %85 ], [ %107, %106 ]
  %89 = phi i64 [ 0, %85 ], [ %108, %106 ]
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %88, i64 0, i32 1, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %87
  %94 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %86, align 8
  %95 = sext i32 %91 to i64
  %96 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %94, i64 %95
  br label %97

97:                                               ; preds = %93, %87
  %98 = phi %struct.TfLiteTensor* [ %96, %93 ], [ null, %87 ]
  %99 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %98, i64 0, i32 4
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 4
  br i1 %101, label %106, label %102

102:                                              ; preds = %97
  store i32 4, i32* %99, align 8
  %103 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %98, i64 0, i32 1
  %104 = bitcast %union.TfLitePtrUnion* %103 to i8**
  store i8* null, i8** %104, align 8
  %105 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %35, align 8
  br label %106

106:                                              ; preds = %102, %97
  %107 = phi %struct.TfLiteIntArray* [ %88, %97 ], [ %105, %102 ]
  %108 = add nuw nsw i64 %89, 1
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %107, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %110 to i64
  %112 = icmp slt i64 %108, %111
  br i1 %112, label %87, label %113

113:                                              ; preds = %106, %42, %80, %48, %83, %8
  %114 = phi i32 [ 1, %8 ], [ 1, %42 ], [ %82, %80 ], [ 1, %48 ], [ 0, %83 ], [ 0, %106 ]
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin5split4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #2 {
  %3 = alloca %"class.tflite::VectorOfTensors", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::VectorOfTensors.16", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::VectorOfTensors.24", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::VectorOfTensors.32", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::VectorOfTensors.40", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %14 = bitcast i8** %13 to %struct.TfLiteSplitParams**
  %15 = load %struct.TfLiteSplitParams*, %struct.TfLiteSplitParams** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %17 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %16, align 8
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %23 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %22, align 8
  %24 = sext i32 %19 to i64
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %23, i64 %24
  br label %26

26:                                               ; preds = %21, %2
  %27 = phi %struct.TfLiteTensor* [ %25, %21 ], [ null, %2 ]
  %28 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %33 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %32, align 8
  %34 = sext i32 %29 to i64
  %35 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 %34
  br label %36

36:                                               ; preds = %26, %31
  %37 = phi %struct.TfLiteTensor* [ %35, %31 ], [ null, %26 ]
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %27, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.TfLiteSplitParams, %struct.TfLiteSplitParams* %15, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = tail call i32 @_ZN6tflite3ops7builtin5split19ResizeOutputTensorsEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS9_i(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteTensor* %27, %struct.TfLiteTensor* %37, i32 %43)
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %1547

46:                                               ; preds = %41, %36
  %47 = icmp eq %struct.TfLiteTensor* %27, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %27, i64 0, i32 1, i32 0
  %50 = load i32*, i32** %49, align 8
  br label %51

51:                                               ; preds = %46, %48
  %52 = phi i32* [ %50, %48 ], [ null, %46 ]
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, 0
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 2
  %56 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %55, align 8
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %54, label %59, label %65

59:                                               ; preds = %51
  %60 = add nsw i32 %58, %53
  %61 = icmp sgt i32 %60, -1
  br i1 %61, label %65, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %64 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %63, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %64(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 118, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #10
  br label %1547

65:                                               ; preds = %51, %59
  %66 = phi i32 [ %60, %59 ], [ %53, %51 ]
  %67 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 2
  %68 = icmp slt i32 %66, %58
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %71 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %70, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %71(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 119, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.13, i64 0, i64 0)) #10
  br label %1547

72:                                               ; preds = %65
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  switch i32 %74, label %1543 [
    i32 1, label %75
    i32 3, label %370
    i32 9, label %662
    i32 7, label %954
    i32 2, label %1249
  ]

75:                                               ; preds = %72
  %76 = bitcast %"class.tflite::VectorOfTensors"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %76) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 72, i1 false)
  %77 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %78 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %77, align 8
  call void @_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors"* nonnull %3, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %78)
  %79 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %77, align 8
  %80 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %79, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = trunc i32 %81 to i16
  %83 = trunc i32 %66 to i16
  %84 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #10
  %85 = icmp eq %struct.TfLiteTensor* %37, null
  br i1 %85, label %86, label %88

86:                                               ; preds = %75
  %87 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %87, align 8, !alias.scope !2
  br label %115

88:                                               ; preds = %75
  %89 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %67, align 8, !noalias !2
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 0
  %91 = load i32, i32* %90, align 4, !noalias !2
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 1, i64 0
  %93 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %91, i32* %93, align 8, !alias.scope !2
  %94 = icmp sgt i32 %91, 5
  br i1 %94, label %95, label %102

95:                                               ; preds = %88
  %96 = sext i32 %91 to i64
  %97 = shl nsw i64 %96, 2
  %98 = call i8* @_Znam(i64 %97) #11, !noalias !2
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %100 = bitcast i32** %99 to i8**
  store i8* %98, i8** %100, align 8, !alias.scope !2
  %101 = bitcast i8* %98 to i32*
  br label %107

102:                                              ; preds = %88
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %104 = bitcast %union.anon* %103 to i32*
  %105 = sext i32 %91 to i64
  %106 = shl nsw i64 %105, 2
  br label %107

107:                                              ; preds = %102, %95
  %108 = phi i64 [ %97, %95 ], [ %106, %102 ]
  %109 = phi i32* [ %101, %95 ], [ %104, %102 ]
  %110 = bitcast i32* %109 to i8*
  %111 = bitcast i32* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %111, i64 %108, i1 false) #10
  %112 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 1
  %113 = bitcast %union.TfLitePtrUnion* %112 to float**
  %114 = load float*, float** %113, align 8
  br label %115

115:                                              ; preds = %86, %107
  %116 = phi i32 [ %91, %107 ], [ 0, %86 ]
  %117 = phi float* [ %114, %107 ], [ null, %86 ]
  %118 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 2, i32 0, i32 0
  %119 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %118, align 8
  %120 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 0, i32 0, i32 0
  %121 = load float**, float*** %120, align 8
  %122 = shl i32 %66, 16
  %123 = ashr exact i32 %122, 16
  %124 = icmp slt i16 %83, 0
  %125 = select i1 %124, i32 %116, i32 0
  %126 = add i32 %125, %123
  %127 = icmp eq i16 %82, 0
  %128 = icmp sgt i32 %116, 5
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %130 = icmp sgt i32 %126, 0
  br i1 %130, label %131, label %159

131:                                              ; preds = %115
  %132 = getelementptr inbounds %union.anon, %union.anon* %129, i64 0, i32 0
  %133 = load i32*, i32** %132, align 8
  %134 = bitcast %union.anon* %129 to [5 x i32]*
  %135 = zext i32 %126 to i64
  %136 = add nsw i64 %135, -1
  %137 = and i64 %135, 3
  %138 = icmp ult i64 %136, 3
  br i1 %138, label %141, label %139

139:                                              ; preds = %131
  %140 = sub nsw i64 %135, %137
  br label %180

141:                                              ; preds = %180, %131
  %142 = phi i64 [ undef, %131 ], [ %210, %180 ]
  %143 = phi i64 [ 0, %131 ], [ %211, %180 ]
  %144 = phi i64 [ 1, %131 ], [ %210, %180 ]
  %145 = icmp eq i64 %137, 0
  br i1 %145, label %159, label %146

146:                                              ; preds = %141, %146
  %147 = phi i64 [ %156, %146 ], [ %143, %141 ]
  %148 = phi i64 [ %155, %146 ], [ %144, %141 ]
  %149 = phi i64 [ %157, %146 ], [ %137, %141 ]
  %150 = getelementptr inbounds i32, i32* %133, i64 %147
  %151 = getelementptr inbounds [5 x i32], [5 x i32]* %134, i64 0, i64 %147
  %152 = select i1 %128, i32* %150, i32* %151
  %153 = load i32, i32* %152, align 4
  %154 = sext i32 %153 to i64
  %155 = mul nsw i64 %148, %154
  %156 = add nuw nsw i64 %147, 1
  %157 = add i64 %149, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %146, !llvm.loop !5

159:                                              ; preds = %141, %146, %115
  %160 = phi i64 [ 1, %115 ], [ %142, %141 ], [ %155, %146 ]
  %161 = add i32 %126, 1
  %162 = icmp slt i32 %161, %116
  br i1 %162, label %163, label %235

163:                                              ; preds = %159
  %164 = getelementptr inbounds %union.anon, %union.anon* %129, i64 0, i32 0
  %165 = load i32*, i32** %164, align 8
  %166 = bitcast %union.anon* %129 to [5 x i32]*
  %167 = sext i32 %161 to i64
  %168 = xor i32 %125, -1
  %169 = add i32 %116, %168
  %170 = shl i32 %66, 16
  %171 = ashr exact i32 %170, 16
  %172 = sub i32 %169, %171
  %173 = add i32 %116, -2
  %174 = sub i32 %173, %125
  %175 = sub i32 %174, %171
  %176 = and i32 %172, 3
  %177 = icmp ult i32 %175, 3
  br i1 %177, label %214, label %178

178:                                              ; preds = %163
  %179 = sub i32 %172, %176
  br label %242

180:                                              ; preds = %180, %139
  %181 = phi i64 [ 0, %139 ], [ %211, %180 ]
  %182 = phi i64 [ 1, %139 ], [ %210, %180 ]
  %183 = phi i64 [ %140, %139 ], [ %212, %180 ]
  %184 = getelementptr inbounds i32, i32* %133, i64 %181
  %185 = getelementptr inbounds [5 x i32], [5 x i32]* %134, i64 0, i64 %181
  %186 = select i1 %128, i32* %184, i32* %185
  %187 = load i32, i32* %186, align 4
  %188 = sext i32 %187 to i64
  %189 = mul nsw i64 %182, %188
  %190 = or i64 %181, 1
  %191 = getelementptr inbounds i32, i32* %133, i64 %190
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %134, i64 0, i64 %190
  %193 = select i1 %128, i32* %191, i32* %192
  %194 = load i32, i32* %193, align 4
  %195 = sext i32 %194 to i64
  %196 = mul nsw i64 %189, %195
  %197 = or i64 %181, 2
  %198 = getelementptr inbounds i32, i32* %133, i64 %197
  %199 = getelementptr inbounds [5 x i32], [5 x i32]* %134, i64 0, i64 %197
  %200 = select i1 %128, i32* %198, i32* %199
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = mul nsw i64 %196, %202
  %204 = or i64 %181, 3
  %205 = getelementptr inbounds i32, i32* %133, i64 %204
  %206 = getelementptr inbounds [5 x i32], [5 x i32]* %134, i64 0, i64 %204
  %207 = select i1 %128, i32* %205, i32* %206
  %208 = load i32, i32* %207, align 4
  %209 = sext i32 %208 to i64
  %210 = mul nsw i64 %203, %209
  %211 = add nuw nsw i64 %181, 4
  %212 = add i64 %183, -4
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %141, label %180

214:                                              ; preds = %242, %163
  %215 = phi i64 [ undef, %163 ], [ %272, %242 ]
  %216 = phi i64 [ %167, %163 ], [ %273, %242 ]
  %217 = phi i64 [ 1, %163 ], [ %272, %242 ]
  %218 = icmp eq i32 %176, 0
  br i1 %218, label %232, label %219

219:                                              ; preds = %214, %219
  %220 = phi i64 [ %229, %219 ], [ %216, %214 ]
  %221 = phi i64 [ %228, %219 ], [ %217, %214 ]
  %222 = phi i32 [ %230, %219 ], [ %176, %214 ]
  %223 = getelementptr inbounds i32, i32* %165, i64 %220
  %224 = getelementptr inbounds [5 x i32], [5 x i32]* %166, i64 0, i64 %220
  %225 = select i1 %128, i32* %223, i32* %224
  %226 = load i32, i32* %225, align 4
  %227 = sext i32 %226 to i64
  %228 = mul nsw i64 %221, %227
  %229 = add nsw i64 %220, 1
  %230 = add i32 %222, -1
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %219, !llvm.loop !7

232:                                              ; preds = %219, %214
  %233 = phi i64 [ %215, %214 ], [ %228, %219 ]
  %234 = trunc i64 %233 to i32
  br label %235

235:                                              ; preds = %232, %159
  %236 = phi i32 [ 1, %159 ], [ %234, %232 ]
  %237 = icmp sgt i64 %160, 0
  br i1 %237, label %238, label %317

238:                                              ; preds = %235
  %239 = sext i32 %126 to i64
  %240 = and i32 %81, 65535
  %241 = zext i32 %240 to i64
  br label %276

242:                                              ; preds = %242, %178
  %243 = phi i64 [ %167, %178 ], [ %273, %242 ]
  %244 = phi i64 [ 1, %178 ], [ %272, %242 ]
  %245 = phi i32 [ %179, %178 ], [ %274, %242 ]
  %246 = getelementptr inbounds i32, i32* %165, i64 %243
  %247 = getelementptr inbounds [5 x i32], [5 x i32]* %166, i64 0, i64 %243
  %248 = select i1 %128, i32* %246, i32* %247
  %249 = load i32, i32* %248, align 4
  %250 = sext i32 %249 to i64
  %251 = mul nsw i64 %244, %250
  %252 = add nsw i64 %243, 1
  %253 = getelementptr inbounds i32, i32* %165, i64 %252
  %254 = getelementptr inbounds [5 x i32], [5 x i32]* %166, i64 0, i64 %252
  %255 = select i1 %128, i32* %253, i32* %254
  %256 = load i32, i32* %255, align 4
  %257 = sext i32 %256 to i64
  %258 = mul nsw i64 %251, %257
  %259 = add nsw i64 %243, 2
  %260 = getelementptr inbounds i32, i32* %165, i64 %259
  %261 = getelementptr inbounds [5 x i32], [5 x i32]* %166, i64 0, i64 %259
  %262 = select i1 %128, i32* %260, i32* %261
  %263 = load i32, i32* %262, align 4
  %264 = sext i32 %263 to i64
  %265 = mul nsw i64 %258, %264
  %266 = add nsw i64 %243, 3
  %267 = getelementptr inbounds i32, i32* %165, i64 %266
  %268 = getelementptr inbounds [5 x i32], [5 x i32]* %166, i64 0, i64 %266
  %269 = select i1 %128, i32* %267, i32* %268
  %270 = load i32, i32* %269, align 4
  %271 = sext i32 %270 to i64
  %272 = mul nsw i64 %265, %271
  %273 = add nsw i64 %243, 4
  %274 = add i32 %245, -4
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %214, label %242

276:                                              ; preds = %281, %238
  %277 = phi i64 [ 0, %238 ], [ %283, %281 ]
  %278 = phi float* [ %117, %238 ], [ %282, %281 ]
  br i1 %127, label %281, label %279

279:                                              ; preds = %276
  %280 = trunc i64 %277 to i32
  br label %285

281:                                              ; preds = %301, %276
  %282 = phi float* [ %278, %276 ], [ %314, %301 ]
  %283 = add nuw nsw i64 %277, 1
  %284 = icmp eq i64 %283, %160
  br i1 %284, label %317, label %276

285:                                              ; preds = %301, %279
  %286 = phi i64 [ 0, %279 ], [ %315, %301 ]
  %287 = phi float* [ %278, %279 ], [ %314, %301 ]
  %288 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %119, i64 %286
  %289 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %288, align 8
  %290 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %289, i64 0, i32 0
  %291 = load i32, i32* %290, align 8
  %292 = icmp sgt i32 %291, 5
  %293 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %289, i64 0, i32 1
  br i1 %292, label %294, label %298

294:                                              ; preds = %285
  %295 = getelementptr inbounds %union.anon, %union.anon* %293, i64 0, i32 0
  %296 = load i32*, i32** %295, align 8
  %297 = getelementptr inbounds i32, i32* %296, i64 %239
  br label %301

298:                                              ; preds = %285
  %299 = bitcast %union.anon* %293 to [5 x i32]*
  %300 = getelementptr inbounds [5 x i32], [5 x i32]* %299, i64 0, i64 %239
  br label %301

301:                                              ; preds = %298, %294
  %302 = phi i32* [ %297, %294 ], [ %300, %298 ]
  %303 = load i32, i32* %302, align 4
  %304 = mul i32 %303, %236
  %305 = getelementptr inbounds float*, float** %121, i64 %286
  %306 = load float*, float** %305, align 8
  %307 = mul nsw i32 %304, %280
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds float, float* %306, i64 %308
  %310 = bitcast float* %309 to i8*
  %311 = bitcast float* %287 to i8*
  %312 = sext i32 %304 to i64
  %313 = shl nsw i64 %312, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 %313, i1 false) #10
  %314 = getelementptr inbounds float, float* %287, i64 %312
  %315 = add nuw nsw i64 %286, 1
  %316 = icmp eq i64 %315, %241
  br i1 %316, label %281, label %285

317:                                              ; preds = %281, %235
  br i1 %128, label %318, label %324

318:                                              ; preds = %317
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %320 = load i32*, i32** %319, align 8
  %321 = icmp eq i32* %320, null
  br i1 %321, label %324, label %322

322:                                              ; preds = %318
  %323 = bitcast i32* %320 to i8*
  call void @_ZdaPv(i8* %323) #11
  br label %324

324:                                              ; preds = %317, %318, %322
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #10
  %325 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %118, align 8
  %326 = icmp eq %"class.tflite::RuntimeShape"** %325, null
  br i1 %326, label %332, label %327

327:                                              ; preds = %324
  %328 = ptrtoint %"class.tflite::RuntimeShape"** %325 to i64
  %329 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 2, i32 0, i32 1
  %330 = bitcast %"class.tflite::RuntimeShape"*** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = bitcast %"class.tflite::RuntimeShape"** %325 to i8*
  call void @_ZdlPv(i8* %331) #11
  br label %332

332:                                              ; preds = %327, %324
  %333 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 1
  %334 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %333, i64 0, i32 0, i32 0
  %335 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %334, align 8
  %336 = icmp eq %"class.tflite::RuntimeShape"* %335, null
  br i1 %336, label %361, label %337

337:                                              ; preds = %332
  %338 = bitcast %"class.tflite::RuntimeShape"* %335 to i8*
  %339 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 1, i32 0, i32 1
  %340 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %339, align 8
  %341 = icmp eq %"class.tflite::RuntimeShape"* %340, %335
  br i1 %341, label %359, label %342

342:                                              ; preds = %337, %354
  %343 = phi %"class.tflite::RuntimeShape"* [ %344, %354 ], [ %340, %337 ]
  %344 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %343, i64 -1
  %345 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %344, i64 0, i32 0
  %346 = load i32, i32* %345, align 8
  %347 = icmp sgt i32 %346, 5
  br i1 %347, label %348, label %354

348:                                              ; preds = %342
  %349 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %343, i64 -1, i32 1, i32 0
  %350 = load i32*, i32** %349, align 8
  %351 = icmp eq i32* %350, null
  br i1 %351, label %354, label %352

352:                                              ; preds = %348
  %353 = bitcast i32* %350 to i8*
  call void @_ZdaPv(i8* %353) #11
  br label %354

354:                                              ; preds = %352, %348, %342
  %355 = icmp eq %"class.tflite::RuntimeShape"* %344, %335
  br i1 %355, label %356, label %342

356:                                              ; preds = %354
  %357 = bitcast %"class.std::__1::vector.2"* %333 to i8**
  %358 = load i8*, i8** %357, align 8
  br label %359

359:                                              ; preds = %356, %337
  %360 = phi i8* [ %358, %356 ], [ %338, %337 ]
  store %"class.tflite::RuntimeShape"* %335, %"class.tflite::RuntimeShape"** %339, align 8
  call void @_ZdlPv(i8* %360) #11
  br label %361

361:                                              ; preds = %359, %332
  %362 = load float**, float*** %120, align 8
  %363 = icmp eq float** %362, null
  br i1 %363, label %369, label %364

364:                                              ; preds = %361
  %365 = ptrtoint float** %362 to i64
  %366 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 0, i32 0, i32 1
  %367 = bitcast float*** %366 to i64*
  store i64 %365, i64* %367, align 8
  %368 = bitcast float** %362 to i8*
  call void @_ZdlPv(i8* %368) #11
  br label %369

369:                                              ; preds = %361, %364
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %76) #10
  br label %1547

370:                                              ; preds = %72
  %371 = bitcast %"class.tflite::VectorOfTensors.16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %371) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %371, i8 -86, i64 72, i1 false)
  %372 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %373 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %372, align 8
  call void @_ZN6tflite15VectorOfTensorsIhEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.16"* nonnull %5, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %373)
  %374 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %372, align 8
  %375 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %374, i64 0, i32 0
  %376 = load i32, i32* %375, align 4
  %377 = trunc i32 %376 to i16
  %378 = trunc i32 %66 to i16
  %379 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %379) #10
  %380 = icmp eq %struct.TfLiteTensor* %37, null
  br i1 %380, label %381, label %383

381:                                              ; preds = %370
  %382 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %382, align 8, !alias.scope !8
  br label %410

383:                                              ; preds = %370
  %384 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %67, align 8, !noalias !8
  %385 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %384, i64 0, i32 0
  %386 = load i32, i32* %385, align 4, !noalias !8
  %387 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %384, i64 0, i32 1, i64 0
  %388 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %386, i32* %388, align 8, !alias.scope !8
  %389 = icmp sgt i32 %386, 5
  br i1 %389, label %390, label %397

390:                                              ; preds = %383
  %391 = sext i32 %386 to i64
  %392 = shl nsw i64 %391, 2
  %393 = call i8* @_Znam(i64 %392) #11, !noalias !8
  %394 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %395 = bitcast i32** %394 to i8**
  store i8* %393, i8** %395, align 8, !alias.scope !8
  %396 = bitcast i8* %393 to i32*
  br label %402

397:                                              ; preds = %383
  %398 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %399 = bitcast %union.anon* %398 to i32*
  %400 = sext i32 %386 to i64
  %401 = shl nsw i64 %400, 2
  br label %402

402:                                              ; preds = %397, %390
  %403 = phi i64 [ %392, %390 ], [ %401, %397 ]
  %404 = phi i32* [ %396, %390 ], [ %399, %397 ]
  %405 = bitcast i32* %404 to i8*
  %406 = bitcast i32* %387 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %405, i8* align 4 %406, i64 %403, i1 false) #10
  %407 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 1
  %408 = bitcast %union.TfLitePtrUnion* %407 to i8**
  %409 = load i8*, i8** %408, align 8
  br label %410

410:                                              ; preds = %381, %402
  %411 = phi i32 [ %386, %402 ], [ 0, %381 ]
  %412 = phi i8* [ %409, %402 ], [ null, %381 ]
  %413 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %5, i64 0, i32 2, i32 0, i32 0
  %414 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %413, align 8
  %415 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %5, i64 0, i32 0, i32 0, i32 0
  %416 = load i8**, i8*** %415, align 8
  %417 = shl i32 %66, 16
  %418 = ashr exact i32 %417, 16
  %419 = icmp slt i16 %378, 0
  %420 = select i1 %419, i32 %411, i32 0
  %421 = add i32 %420, %418
  %422 = icmp eq i16 %377, 0
  %423 = icmp sgt i32 %411, 5
  %424 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %425 = icmp sgt i32 %421, 0
  br i1 %425, label %426, label %454

426:                                              ; preds = %410
  %427 = getelementptr inbounds %union.anon, %union.anon* %424, i64 0, i32 0
  %428 = load i32*, i32** %427, align 8
  %429 = bitcast %union.anon* %424 to [5 x i32]*
  %430 = zext i32 %421 to i64
  %431 = add nsw i64 %430, -1
  %432 = and i64 %430, 3
  %433 = icmp ult i64 %431, 3
  br i1 %433, label %436, label %434

434:                                              ; preds = %426
  %435 = sub nsw i64 %430, %432
  br label %475

436:                                              ; preds = %475, %426
  %437 = phi i64 [ undef, %426 ], [ %505, %475 ]
  %438 = phi i64 [ 0, %426 ], [ %506, %475 ]
  %439 = phi i64 [ 1, %426 ], [ %505, %475 ]
  %440 = icmp eq i64 %432, 0
  br i1 %440, label %454, label %441

441:                                              ; preds = %436, %441
  %442 = phi i64 [ %451, %441 ], [ %438, %436 ]
  %443 = phi i64 [ %450, %441 ], [ %439, %436 ]
  %444 = phi i64 [ %452, %441 ], [ %432, %436 ]
  %445 = getelementptr inbounds i32, i32* %428, i64 %442
  %446 = getelementptr inbounds [5 x i32], [5 x i32]* %429, i64 0, i64 %442
  %447 = select i1 %423, i32* %445, i32* %446
  %448 = load i32, i32* %447, align 4
  %449 = sext i32 %448 to i64
  %450 = mul nsw i64 %443, %449
  %451 = add nuw nsw i64 %442, 1
  %452 = add i64 %444, -1
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %454, label %441, !llvm.loop !11

454:                                              ; preds = %436, %441, %410
  %455 = phi i64 [ 1, %410 ], [ %437, %436 ], [ %450, %441 ]
  %456 = add i32 %421, 1
  %457 = icmp slt i32 %456, %411
  br i1 %457, label %458, label %530

458:                                              ; preds = %454
  %459 = getelementptr inbounds %union.anon, %union.anon* %424, i64 0, i32 0
  %460 = load i32*, i32** %459, align 8
  %461 = bitcast %union.anon* %424 to [5 x i32]*
  %462 = sext i32 %456 to i64
  %463 = xor i32 %420, -1
  %464 = add i32 %411, %463
  %465 = shl i32 %66, 16
  %466 = ashr exact i32 %465, 16
  %467 = sub i32 %464, %466
  %468 = add i32 %411, -2
  %469 = sub i32 %468, %420
  %470 = sub i32 %469, %466
  %471 = and i32 %467, 3
  %472 = icmp ult i32 %470, 3
  br i1 %472, label %509, label %473

473:                                              ; preds = %458
  %474 = sub i32 %467, %471
  br label %537

475:                                              ; preds = %475, %434
  %476 = phi i64 [ 0, %434 ], [ %506, %475 ]
  %477 = phi i64 [ 1, %434 ], [ %505, %475 ]
  %478 = phi i64 [ %435, %434 ], [ %507, %475 ]
  %479 = getelementptr inbounds i32, i32* %428, i64 %476
  %480 = getelementptr inbounds [5 x i32], [5 x i32]* %429, i64 0, i64 %476
  %481 = select i1 %423, i32* %479, i32* %480
  %482 = load i32, i32* %481, align 4
  %483 = sext i32 %482 to i64
  %484 = mul nsw i64 %477, %483
  %485 = or i64 %476, 1
  %486 = getelementptr inbounds i32, i32* %428, i64 %485
  %487 = getelementptr inbounds [5 x i32], [5 x i32]* %429, i64 0, i64 %485
  %488 = select i1 %423, i32* %486, i32* %487
  %489 = load i32, i32* %488, align 4
  %490 = sext i32 %489 to i64
  %491 = mul nsw i64 %484, %490
  %492 = or i64 %476, 2
  %493 = getelementptr inbounds i32, i32* %428, i64 %492
  %494 = getelementptr inbounds [5 x i32], [5 x i32]* %429, i64 0, i64 %492
  %495 = select i1 %423, i32* %493, i32* %494
  %496 = load i32, i32* %495, align 4
  %497 = sext i32 %496 to i64
  %498 = mul nsw i64 %491, %497
  %499 = or i64 %476, 3
  %500 = getelementptr inbounds i32, i32* %428, i64 %499
  %501 = getelementptr inbounds [5 x i32], [5 x i32]* %429, i64 0, i64 %499
  %502 = select i1 %423, i32* %500, i32* %501
  %503 = load i32, i32* %502, align 4
  %504 = sext i32 %503 to i64
  %505 = mul nsw i64 %498, %504
  %506 = add nuw nsw i64 %476, 4
  %507 = add i64 %478, -4
  %508 = icmp eq i64 %507, 0
  br i1 %508, label %436, label %475

509:                                              ; preds = %537, %458
  %510 = phi i64 [ undef, %458 ], [ %567, %537 ]
  %511 = phi i64 [ %462, %458 ], [ %568, %537 ]
  %512 = phi i64 [ 1, %458 ], [ %567, %537 ]
  %513 = icmp eq i32 %471, 0
  br i1 %513, label %527, label %514

514:                                              ; preds = %509, %514
  %515 = phi i64 [ %524, %514 ], [ %511, %509 ]
  %516 = phi i64 [ %523, %514 ], [ %512, %509 ]
  %517 = phi i32 [ %525, %514 ], [ %471, %509 ]
  %518 = getelementptr inbounds i32, i32* %460, i64 %515
  %519 = getelementptr inbounds [5 x i32], [5 x i32]* %461, i64 0, i64 %515
  %520 = select i1 %423, i32* %518, i32* %519
  %521 = load i32, i32* %520, align 4
  %522 = sext i32 %521 to i64
  %523 = mul nsw i64 %516, %522
  %524 = add nsw i64 %515, 1
  %525 = add i32 %517, -1
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %514, !llvm.loop !12

527:                                              ; preds = %514, %509
  %528 = phi i64 [ %510, %509 ], [ %523, %514 ]
  %529 = trunc i64 %528 to i32
  br label %530

530:                                              ; preds = %527, %454
  %531 = phi i32 [ 1, %454 ], [ %529, %527 ]
  %532 = icmp sgt i64 %455, 0
  br i1 %532, label %533, label %609

533:                                              ; preds = %530
  %534 = sext i32 %421 to i64
  %535 = and i32 %376, 65535
  %536 = zext i32 %535 to i64
  br label %571

537:                                              ; preds = %537, %473
  %538 = phi i64 [ %462, %473 ], [ %568, %537 ]
  %539 = phi i64 [ 1, %473 ], [ %567, %537 ]
  %540 = phi i32 [ %474, %473 ], [ %569, %537 ]
  %541 = getelementptr inbounds i32, i32* %460, i64 %538
  %542 = getelementptr inbounds [5 x i32], [5 x i32]* %461, i64 0, i64 %538
  %543 = select i1 %423, i32* %541, i32* %542
  %544 = load i32, i32* %543, align 4
  %545 = sext i32 %544 to i64
  %546 = mul nsw i64 %539, %545
  %547 = add nsw i64 %538, 1
  %548 = getelementptr inbounds i32, i32* %460, i64 %547
  %549 = getelementptr inbounds [5 x i32], [5 x i32]* %461, i64 0, i64 %547
  %550 = select i1 %423, i32* %548, i32* %549
  %551 = load i32, i32* %550, align 4
  %552 = sext i32 %551 to i64
  %553 = mul nsw i64 %546, %552
  %554 = add nsw i64 %538, 2
  %555 = getelementptr inbounds i32, i32* %460, i64 %554
  %556 = getelementptr inbounds [5 x i32], [5 x i32]* %461, i64 0, i64 %554
  %557 = select i1 %423, i32* %555, i32* %556
  %558 = load i32, i32* %557, align 4
  %559 = sext i32 %558 to i64
  %560 = mul nsw i64 %553, %559
  %561 = add nsw i64 %538, 3
  %562 = getelementptr inbounds i32, i32* %460, i64 %561
  %563 = getelementptr inbounds [5 x i32], [5 x i32]* %461, i64 0, i64 %561
  %564 = select i1 %423, i32* %562, i32* %563
  %565 = load i32, i32* %564, align 4
  %566 = sext i32 %565 to i64
  %567 = mul nsw i64 %560, %566
  %568 = add nsw i64 %538, 4
  %569 = add i32 %540, -4
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %509, label %537

571:                                              ; preds = %576, %533
  %572 = phi i64 [ 0, %533 ], [ %578, %576 ]
  %573 = phi i8* [ %412, %533 ], [ %577, %576 ]
  br i1 %422, label %576, label %574

574:                                              ; preds = %571
  %575 = trunc i64 %572 to i32
  br label %580

576:                                              ; preds = %596, %571
  %577 = phi i8* [ %573, %571 ], [ %606, %596 ]
  %578 = add nuw nsw i64 %572, 1
  %579 = icmp eq i64 %578, %455
  br i1 %579, label %609, label %571

580:                                              ; preds = %596, %574
  %581 = phi i64 [ 0, %574 ], [ %607, %596 ]
  %582 = phi i8* [ %573, %574 ], [ %606, %596 ]
  %583 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %414, i64 %581
  %584 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %583, align 8
  %585 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %584, i64 0, i32 0
  %586 = load i32, i32* %585, align 8
  %587 = icmp sgt i32 %586, 5
  %588 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %584, i64 0, i32 1
  br i1 %587, label %589, label %593

589:                                              ; preds = %580
  %590 = getelementptr inbounds %union.anon, %union.anon* %588, i64 0, i32 0
  %591 = load i32*, i32** %590, align 8
  %592 = getelementptr inbounds i32, i32* %591, i64 %534
  br label %596

593:                                              ; preds = %580
  %594 = bitcast %union.anon* %588 to [5 x i32]*
  %595 = getelementptr inbounds [5 x i32], [5 x i32]* %594, i64 0, i64 %534
  br label %596

596:                                              ; preds = %593, %589
  %597 = phi i32* [ %592, %589 ], [ %595, %593 ]
  %598 = load i32, i32* %597, align 4
  %599 = mul i32 %598, %531
  %600 = getelementptr inbounds i8*, i8** %416, i64 %581
  %601 = load i8*, i8** %600, align 8
  %602 = mul nsw i32 %599, %575
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds i8, i8* %601, i64 %603
  %605 = sext i32 %599 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %604, i8* align 1 %582, i64 %605, i1 false) #10
  %606 = getelementptr inbounds i8, i8* %582, i64 %605
  %607 = add nuw nsw i64 %581, 1
  %608 = icmp eq i64 %607, %536
  br i1 %608, label %576, label %580

609:                                              ; preds = %576, %530
  br i1 %423, label %610, label %616

610:                                              ; preds = %609
  %611 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %612 = load i32*, i32** %611, align 8
  %613 = icmp eq i32* %612, null
  br i1 %613, label %616, label %614

614:                                              ; preds = %610
  %615 = bitcast i32* %612 to i8*
  call void @_ZdaPv(i8* %615) #11
  br label %616

616:                                              ; preds = %609, %610, %614
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %379) #10
  %617 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %413, align 8
  %618 = icmp eq %"class.tflite::RuntimeShape"** %617, null
  br i1 %618, label %624, label %619

619:                                              ; preds = %616
  %620 = ptrtoint %"class.tflite::RuntimeShape"** %617 to i64
  %621 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %5, i64 0, i32 2, i32 0, i32 1
  %622 = bitcast %"class.tflite::RuntimeShape"*** %621 to i64*
  store i64 %620, i64* %622, align 8
  %623 = bitcast %"class.tflite::RuntimeShape"** %617 to i8*
  call void @_ZdlPv(i8* %623) #11
  br label %624

624:                                              ; preds = %619, %616
  %625 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %5, i64 0, i32 1
  %626 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %625, i64 0, i32 0, i32 0
  %627 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %626, align 8
  %628 = icmp eq %"class.tflite::RuntimeShape"* %627, null
  br i1 %628, label %653, label %629

629:                                              ; preds = %624
  %630 = bitcast %"class.tflite::RuntimeShape"* %627 to i8*
  %631 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %5, i64 0, i32 1, i32 0, i32 1
  %632 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %631, align 8
  %633 = icmp eq %"class.tflite::RuntimeShape"* %632, %627
  br i1 %633, label %651, label %634

634:                                              ; preds = %629, %646
  %635 = phi %"class.tflite::RuntimeShape"* [ %636, %646 ], [ %632, %629 ]
  %636 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %635, i64 -1
  %637 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %636, i64 0, i32 0
  %638 = load i32, i32* %637, align 8
  %639 = icmp sgt i32 %638, 5
  br i1 %639, label %640, label %646

640:                                              ; preds = %634
  %641 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %635, i64 -1, i32 1, i32 0
  %642 = load i32*, i32** %641, align 8
  %643 = icmp eq i32* %642, null
  br i1 %643, label %646, label %644

644:                                              ; preds = %640
  %645 = bitcast i32* %642 to i8*
  call void @_ZdaPv(i8* %645) #11
  br label %646

646:                                              ; preds = %644, %640, %634
  %647 = icmp eq %"class.tflite::RuntimeShape"* %636, %627
  br i1 %647, label %648, label %634

648:                                              ; preds = %646
  %649 = bitcast %"class.std::__1::vector.2"* %625 to i8**
  %650 = load i8*, i8** %649, align 8
  br label %651

651:                                              ; preds = %648, %629
  %652 = phi i8* [ %650, %648 ], [ %630, %629 ]
  store %"class.tflite::RuntimeShape"* %627, %"class.tflite::RuntimeShape"** %631, align 8
  call void @_ZdlPv(i8* %652) #11
  br label %653

653:                                              ; preds = %651, %624
  %654 = load i8**, i8*** %415, align 8
  %655 = icmp eq i8** %654, null
  br i1 %655, label %661, label %656

656:                                              ; preds = %653
  %657 = ptrtoint i8** %654 to i64
  %658 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %5, i64 0, i32 0, i32 0, i32 1
  %659 = bitcast i8*** %658 to i64*
  store i64 %657, i64* %659, align 8
  %660 = bitcast i8** %654 to i8*
  call void @_ZdlPv(i8* %660) #11
  br label %661

661:                                              ; preds = %653, %656
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %371) #10
  br label %1547

662:                                              ; preds = %72
  %663 = bitcast %"class.tflite::VectorOfTensors.24"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %663) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %663, i8 -86, i64 72, i1 false)
  %664 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %665 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %664, align 8
  call void @_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.24"* nonnull %7, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %665)
  %666 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %664, align 8
  %667 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %666, i64 0, i32 0
  %668 = load i32, i32* %667, align 4
  %669 = trunc i32 %668 to i16
  %670 = trunc i32 %66 to i16
  %671 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %671) #10
  %672 = icmp eq %struct.TfLiteTensor* %37, null
  br i1 %672, label %673, label %675

673:                                              ; preds = %662
  %674 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %674, align 8, !alias.scope !13
  br label %702

675:                                              ; preds = %662
  %676 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %67, align 8, !noalias !13
  %677 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %676, i64 0, i32 0
  %678 = load i32, i32* %677, align 4, !noalias !13
  %679 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %676, i64 0, i32 1, i64 0
  %680 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %678, i32* %680, align 8, !alias.scope !13
  %681 = icmp sgt i32 %678, 5
  br i1 %681, label %682, label %689

682:                                              ; preds = %675
  %683 = sext i32 %678 to i64
  %684 = shl nsw i64 %683, 2
  %685 = call i8* @_Znam(i64 %684) #11, !noalias !13
  %686 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %687 = bitcast i32** %686 to i8**
  store i8* %685, i8** %687, align 8, !alias.scope !13
  %688 = bitcast i8* %685 to i32*
  br label %694

689:                                              ; preds = %675
  %690 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %691 = bitcast %union.anon* %690 to i32*
  %692 = sext i32 %678 to i64
  %693 = shl nsw i64 %692, 2
  br label %694

694:                                              ; preds = %689, %682
  %695 = phi i64 [ %684, %682 ], [ %693, %689 ]
  %696 = phi i32* [ %688, %682 ], [ %691, %689 ]
  %697 = bitcast i32* %696 to i8*
  %698 = bitcast i32* %679 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %697, i8* align 4 %698, i64 %695, i1 false) #10
  %699 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 1
  %700 = bitcast %union.TfLitePtrUnion* %699 to i8**
  %701 = load i8*, i8** %700, align 8
  br label %702

702:                                              ; preds = %673, %694
  %703 = phi i32 [ %678, %694 ], [ 0, %673 ]
  %704 = phi i8* [ %701, %694 ], [ null, %673 ]
  %705 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %7, i64 0, i32 2, i32 0, i32 0
  %706 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %705, align 8
  %707 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %7, i64 0, i32 0, i32 0, i32 0
  %708 = load i8**, i8*** %707, align 8
  %709 = shl i32 %66, 16
  %710 = ashr exact i32 %709, 16
  %711 = icmp slt i16 %670, 0
  %712 = select i1 %711, i32 %703, i32 0
  %713 = add i32 %712, %710
  %714 = icmp eq i16 %669, 0
  %715 = icmp sgt i32 %703, 5
  %716 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %717 = icmp sgt i32 %713, 0
  br i1 %717, label %718, label %746

718:                                              ; preds = %702
  %719 = getelementptr inbounds %union.anon, %union.anon* %716, i64 0, i32 0
  %720 = load i32*, i32** %719, align 8
  %721 = bitcast %union.anon* %716 to [5 x i32]*
  %722 = zext i32 %713 to i64
  %723 = add nsw i64 %722, -1
  %724 = and i64 %722, 3
  %725 = icmp ult i64 %723, 3
  br i1 %725, label %728, label %726

726:                                              ; preds = %718
  %727 = sub nsw i64 %722, %724
  br label %767

728:                                              ; preds = %767, %718
  %729 = phi i64 [ undef, %718 ], [ %797, %767 ]
  %730 = phi i64 [ 0, %718 ], [ %798, %767 ]
  %731 = phi i64 [ 1, %718 ], [ %797, %767 ]
  %732 = icmp eq i64 %724, 0
  br i1 %732, label %746, label %733

733:                                              ; preds = %728, %733
  %734 = phi i64 [ %743, %733 ], [ %730, %728 ]
  %735 = phi i64 [ %742, %733 ], [ %731, %728 ]
  %736 = phi i64 [ %744, %733 ], [ %724, %728 ]
  %737 = getelementptr inbounds i32, i32* %720, i64 %734
  %738 = getelementptr inbounds [5 x i32], [5 x i32]* %721, i64 0, i64 %734
  %739 = select i1 %715, i32* %737, i32* %738
  %740 = load i32, i32* %739, align 4
  %741 = sext i32 %740 to i64
  %742 = mul nsw i64 %735, %741
  %743 = add nuw nsw i64 %734, 1
  %744 = add i64 %736, -1
  %745 = icmp eq i64 %744, 0
  br i1 %745, label %746, label %733, !llvm.loop !16

746:                                              ; preds = %728, %733, %702
  %747 = phi i64 [ 1, %702 ], [ %729, %728 ], [ %742, %733 ]
  %748 = add i32 %713, 1
  %749 = icmp slt i32 %748, %703
  br i1 %749, label %750, label %822

750:                                              ; preds = %746
  %751 = getelementptr inbounds %union.anon, %union.anon* %716, i64 0, i32 0
  %752 = load i32*, i32** %751, align 8
  %753 = bitcast %union.anon* %716 to [5 x i32]*
  %754 = sext i32 %748 to i64
  %755 = xor i32 %712, -1
  %756 = add i32 %703, %755
  %757 = shl i32 %66, 16
  %758 = ashr exact i32 %757, 16
  %759 = sub i32 %756, %758
  %760 = add i32 %703, -2
  %761 = sub i32 %760, %712
  %762 = sub i32 %761, %758
  %763 = and i32 %759, 3
  %764 = icmp ult i32 %762, 3
  br i1 %764, label %801, label %765

765:                                              ; preds = %750
  %766 = sub i32 %759, %763
  br label %829

767:                                              ; preds = %767, %726
  %768 = phi i64 [ 0, %726 ], [ %798, %767 ]
  %769 = phi i64 [ 1, %726 ], [ %797, %767 ]
  %770 = phi i64 [ %727, %726 ], [ %799, %767 ]
  %771 = getelementptr inbounds i32, i32* %720, i64 %768
  %772 = getelementptr inbounds [5 x i32], [5 x i32]* %721, i64 0, i64 %768
  %773 = select i1 %715, i32* %771, i32* %772
  %774 = load i32, i32* %773, align 4
  %775 = sext i32 %774 to i64
  %776 = mul nsw i64 %769, %775
  %777 = or i64 %768, 1
  %778 = getelementptr inbounds i32, i32* %720, i64 %777
  %779 = getelementptr inbounds [5 x i32], [5 x i32]* %721, i64 0, i64 %777
  %780 = select i1 %715, i32* %778, i32* %779
  %781 = load i32, i32* %780, align 4
  %782 = sext i32 %781 to i64
  %783 = mul nsw i64 %776, %782
  %784 = or i64 %768, 2
  %785 = getelementptr inbounds i32, i32* %720, i64 %784
  %786 = getelementptr inbounds [5 x i32], [5 x i32]* %721, i64 0, i64 %784
  %787 = select i1 %715, i32* %785, i32* %786
  %788 = load i32, i32* %787, align 4
  %789 = sext i32 %788 to i64
  %790 = mul nsw i64 %783, %789
  %791 = or i64 %768, 3
  %792 = getelementptr inbounds i32, i32* %720, i64 %791
  %793 = getelementptr inbounds [5 x i32], [5 x i32]* %721, i64 0, i64 %791
  %794 = select i1 %715, i32* %792, i32* %793
  %795 = load i32, i32* %794, align 4
  %796 = sext i32 %795 to i64
  %797 = mul nsw i64 %790, %796
  %798 = add nuw nsw i64 %768, 4
  %799 = add i64 %770, -4
  %800 = icmp eq i64 %799, 0
  br i1 %800, label %728, label %767

801:                                              ; preds = %829, %750
  %802 = phi i64 [ undef, %750 ], [ %859, %829 ]
  %803 = phi i64 [ %754, %750 ], [ %860, %829 ]
  %804 = phi i64 [ 1, %750 ], [ %859, %829 ]
  %805 = icmp eq i32 %763, 0
  br i1 %805, label %819, label %806

806:                                              ; preds = %801, %806
  %807 = phi i64 [ %816, %806 ], [ %803, %801 ]
  %808 = phi i64 [ %815, %806 ], [ %804, %801 ]
  %809 = phi i32 [ %817, %806 ], [ %763, %801 ]
  %810 = getelementptr inbounds i32, i32* %752, i64 %807
  %811 = getelementptr inbounds [5 x i32], [5 x i32]* %753, i64 0, i64 %807
  %812 = select i1 %715, i32* %810, i32* %811
  %813 = load i32, i32* %812, align 4
  %814 = sext i32 %813 to i64
  %815 = mul nsw i64 %808, %814
  %816 = add nsw i64 %807, 1
  %817 = add i32 %809, -1
  %818 = icmp eq i32 %817, 0
  br i1 %818, label %819, label %806, !llvm.loop !17

819:                                              ; preds = %806, %801
  %820 = phi i64 [ %802, %801 ], [ %815, %806 ]
  %821 = trunc i64 %820 to i32
  br label %822

822:                                              ; preds = %819, %746
  %823 = phi i32 [ 1, %746 ], [ %821, %819 ]
  %824 = icmp sgt i64 %747, 0
  br i1 %824, label %825, label %901

825:                                              ; preds = %822
  %826 = sext i32 %713 to i64
  %827 = and i32 %668, 65535
  %828 = zext i32 %827 to i64
  br label %863

829:                                              ; preds = %829, %765
  %830 = phi i64 [ %754, %765 ], [ %860, %829 ]
  %831 = phi i64 [ 1, %765 ], [ %859, %829 ]
  %832 = phi i32 [ %766, %765 ], [ %861, %829 ]
  %833 = getelementptr inbounds i32, i32* %752, i64 %830
  %834 = getelementptr inbounds [5 x i32], [5 x i32]* %753, i64 0, i64 %830
  %835 = select i1 %715, i32* %833, i32* %834
  %836 = load i32, i32* %835, align 4
  %837 = sext i32 %836 to i64
  %838 = mul nsw i64 %831, %837
  %839 = add nsw i64 %830, 1
  %840 = getelementptr inbounds i32, i32* %752, i64 %839
  %841 = getelementptr inbounds [5 x i32], [5 x i32]* %753, i64 0, i64 %839
  %842 = select i1 %715, i32* %840, i32* %841
  %843 = load i32, i32* %842, align 4
  %844 = sext i32 %843 to i64
  %845 = mul nsw i64 %838, %844
  %846 = add nsw i64 %830, 2
  %847 = getelementptr inbounds i32, i32* %752, i64 %846
  %848 = getelementptr inbounds [5 x i32], [5 x i32]* %753, i64 0, i64 %846
  %849 = select i1 %715, i32* %847, i32* %848
  %850 = load i32, i32* %849, align 4
  %851 = sext i32 %850 to i64
  %852 = mul nsw i64 %845, %851
  %853 = add nsw i64 %830, 3
  %854 = getelementptr inbounds i32, i32* %752, i64 %853
  %855 = getelementptr inbounds [5 x i32], [5 x i32]* %753, i64 0, i64 %853
  %856 = select i1 %715, i32* %854, i32* %855
  %857 = load i32, i32* %856, align 4
  %858 = sext i32 %857 to i64
  %859 = mul nsw i64 %852, %858
  %860 = add nsw i64 %830, 4
  %861 = add i32 %832, -4
  %862 = icmp eq i32 %861, 0
  br i1 %862, label %801, label %829

863:                                              ; preds = %868, %825
  %864 = phi i64 [ 0, %825 ], [ %870, %868 ]
  %865 = phi i8* [ %704, %825 ], [ %869, %868 ]
  br i1 %714, label %868, label %866

866:                                              ; preds = %863
  %867 = trunc i64 %864 to i32
  br label %872

868:                                              ; preds = %888, %863
  %869 = phi i8* [ %865, %863 ], [ %898, %888 ]
  %870 = add nuw nsw i64 %864, 1
  %871 = icmp eq i64 %870, %747
  br i1 %871, label %901, label %863

872:                                              ; preds = %888, %866
  %873 = phi i64 [ 0, %866 ], [ %899, %888 ]
  %874 = phi i8* [ %865, %866 ], [ %898, %888 ]
  %875 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %706, i64 %873
  %876 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %875, align 8
  %877 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %876, i64 0, i32 0
  %878 = load i32, i32* %877, align 8
  %879 = icmp sgt i32 %878, 5
  %880 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %876, i64 0, i32 1
  br i1 %879, label %881, label %885

881:                                              ; preds = %872
  %882 = getelementptr inbounds %union.anon, %union.anon* %880, i64 0, i32 0
  %883 = load i32*, i32** %882, align 8
  %884 = getelementptr inbounds i32, i32* %883, i64 %826
  br label %888

885:                                              ; preds = %872
  %886 = bitcast %union.anon* %880 to [5 x i32]*
  %887 = getelementptr inbounds [5 x i32], [5 x i32]* %886, i64 0, i64 %826
  br label %888

888:                                              ; preds = %885, %881
  %889 = phi i32* [ %884, %881 ], [ %887, %885 ]
  %890 = load i32, i32* %889, align 4
  %891 = mul i32 %890, %823
  %892 = getelementptr inbounds i8*, i8** %708, i64 %873
  %893 = load i8*, i8** %892, align 8
  %894 = mul nsw i32 %891, %867
  %895 = sext i32 %894 to i64
  %896 = getelementptr inbounds i8, i8* %893, i64 %895
  %897 = sext i32 %891 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %896, i8* align 1 %874, i64 %897, i1 false) #10
  %898 = getelementptr inbounds i8, i8* %874, i64 %897
  %899 = add nuw nsw i64 %873, 1
  %900 = icmp eq i64 %899, %828
  br i1 %900, label %868, label %872

901:                                              ; preds = %868, %822
  br i1 %715, label %902, label %908

902:                                              ; preds = %901
  %903 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %904 = load i32*, i32** %903, align 8
  %905 = icmp eq i32* %904, null
  br i1 %905, label %908, label %906

906:                                              ; preds = %902
  %907 = bitcast i32* %904 to i8*
  call void @_ZdaPv(i8* %907) #11
  br label %908

908:                                              ; preds = %901, %902, %906
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %671) #10
  %909 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %705, align 8
  %910 = icmp eq %"class.tflite::RuntimeShape"** %909, null
  br i1 %910, label %916, label %911

911:                                              ; preds = %908
  %912 = ptrtoint %"class.tflite::RuntimeShape"** %909 to i64
  %913 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %7, i64 0, i32 2, i32 0, i32 1
  %914 = bitcast %"class.tflite::RuntimeShape"*** %913 to i64*
  store i64 %912, i64* %914, align 8
  %915 = bitcast %"class.tflite::RuntimeShape"** %909 to i8*
  call void @_ZdlPv(i8* %915) #11
  br label %916

916:                                              ; preds = %911, %908
  %917 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %7, i64 0, i32 1
  %918 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %917, i64 0, i32 0, i32 0
  %919 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %918, align 8
  %920 = icmp eq %"class.tflite::RuntimeShape"* %919, null
  br i1 %920, label %945, label %921

921:                                              ; preds = %916
  %922 = bitcast %"class.tflite::RuntimeShape"* %919 to i8*
  %923 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %7, i64 0, i32 1, i32 0, i32 1
  %924 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %923, align 8
  %925 = icmp eq %"class.tflite::RuntimeShape"* %924, %919
  br i1 %925, label %943, label %926

926:                                              ; preds = %921, %938
  %927 = phi %"class.tflite::RuntimeShape"* [ %928, %938 ], [ %924, %921 ]
  %928 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %927, i64 -1
  %929 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %928, i64 0, i32 0
  %930 = load i32, i32* %929, align 8
  %931 = icmp sgt i32 %930, 5
  br i1 %931, label %932, label %938

932:                                              ; preds = %926
  %933 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %927, i64 -1, i32 1, i32 0
  %934 = load i32*, i32** %933, align 8
  %935 = icmp eq i32* %934, null
  br i1 %935, label %938, label %936

936:                                              ; preds = %932
  %937 = bitcast i32* %934 to i8*
  call void @_ZdaPv(i8* %937) #11
  br label %938

938:                                              ; preds = %936, %932, %926
  %939 = icmp eq %"class.tflite::RuntimeShape"* %928, %919
  br i1 %939, label %940, label %926

940:                                              ; preds = %938
  %941 = bitcast %"class.std::__1::vector.2"* %917 to i8**
  %942 = load i8*, i8** %941, align 8
  br label %943

943:                                              ; preds = %940, %921
  %944 = phi i8* [ %942, %940 ], [ %922, %921 ]
  store %"class.tflite::RuntimeShape"* %919, %"class.tflite::RuntimeShape"** %923, align 8
  call void @_ZdlPv(i8* %944) #11
  br label %945

945:                                              ; preds = %943, %916
  %946 = load i8**, i8*** %707, align 8
  %947 = icmp eq i8** %946, null
  br i1 %947, label %953, label %948

948:                                              ; preds = %945
  %949 = ptrtoint i8** %946 to i64
  %950 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %7, i64 0, i32 0, i32 0, i32 1
  %951 = bitcast i8*** %950 to i64*
  store i64 %949, i64* %951, align 8
  %952 = bitcast i8** %946 to i8*
  call void @_ZdlPv(i8* %952) #11
  br label %953

953:                                              ; preds = %945, %948
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %663) #10
  br label %1547

954:                                              ; preds = %72
  %955 = bitcast %"class.tflite::VectorOfTensors.32"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %955) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %955, i8 -86, i64 72, i1 false)
  %956 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %957 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %956, align 8
  call void @_ZN6tflite15VectorOfTensorsIsEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.32"* nonnull %9, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %957)
  %958 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %956, align 8
  %959 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %958, i64 0, i32 0
  %960 = load i32, i32* %959, align 4
  %961 = trunc i32 %960 to i16
  %962 = trunc i32 %66 to i16
  %963 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %963) #10
  %964 = icmp eq %struct.TfLiteTensor* %37, null
  br i1 %964, label %965, label %967

965:                                              ; preds = %954
  %966 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %966, align 8, !alias.scope !18
  br label %994

967:                                              ; preds = %954
  %968 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %67, align 8, !noalias !18
  %969 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %968, i64 0, i32 0
  %970 = load i32, i32* %969, align 4, !noalias !18
  %971 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %968, i64 0, i32 1, i64 0
  %972 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %970, i32* %972, align 8, !alias.scope !18
  %973 = icmp sgt i32 %970, 5
  br i1 %973, label %974, label %981

974:                                              ; preds = %967
  %975 = sext i32 %970 to i64
  %976 = shl nsw i64 %975, 2
  %977 = call i8* @_Znam(i64 %976) #11, !noalias !18
  %978 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %979 = bitcast i32** %978 to i8**
  store i8* %977, i8** %979, align 8, !alias.scope !18
  %980 = bitcast i8* %977 to i32*
  br label %986

981:                                              ; preds = %967
  %982 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %983 = bitcast %union.anon* %982 to i32*
  %984 = sext i32 %970 to i64
  %985 = shl nsw i64 %984, 2
  br label %986

986:                                              ; preds = %981, %974
  %987 = phi i64 [ %976, %974 ], [ %985, %981 ]
  %988 = phi i32* [ %980, %974 ], [ %983, %981 ]
  %989 = bitcast i32* %988 to i8*
  %990 = bitcast i32* %971 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %989, i8* align 4 %990, i64 %987, i1 false) #10
  %991 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 1
  %992 = bitcast %union.TfLitePtrUnion* %991 to i16**
  %993 = load i16*, i16** %992, align 8
  br label %994

994:                                              ; preds = %965, %986
  %995 = phi i32 [ %970, %986 ], [ 0, %965 ]
  %996 = phi i16* [ %993, %986 ], [ null, %965 ]
  %997 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %9, i64 0, i32 2, i32 0, i32 0
  %998 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %997, align 8
  %999 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %9, i64 0, i32 0, i32 0, i32 0
  %1000 = load i16**, i16*** %999, align 8
  %1001 = shl i32 %66, 16
  %1002 = ashr exact i32 %1001, 16
  %1003 = icmp slt i16 %962, 0
  %1004 = select i1 %1003, i32 %995, i32 0
  %1005 = add i32 %1004, %1002
  %1006 = icmp eq i16 %961, 0
  %1007 = icmp sgt i32 %995, 5
  %1008 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %1009 = icmp sgt i32 %1005, 0
  br i1 %1009, label %1010, label %1038

1010:                                             ; preds = %994
  %1011 = getelementptr inbounds %union.anon, %union.anon* %1008, i64 0, i32 0
  %1012 = load i32*, i32** %1011, align 8
  %1013 = bitcast %union.anon* %1008 to [5 x i32]*
  %1014 = zext i32 %1005 to i64
  %1015 = add nsw i64 %1014, -1
  %1016 = and i64 %1014, 3
  %1017 = icmp ult i64 %1015, 3
  br i1 %1017, label %1020, label %1018

1018:                                             ; preds = %1010
  %1019 = sub nsw i64 %1014, %1016
  br label %1059

1020:                                             ; preds = %1059, %1010
  %1021 = phi i64 [ undef, %1010 ], [ %1089, %1059 ]
  %1022 = phi i64 [ 0, %1010 ], [ %1090, %1059 ]
  %1023 = phi i64 [ 1, %1010 ], [ %1089, %1059 ]
  %1024 = icmp eq i64 %1016, 0
  br i1 %1024, label %1038, label %1025

1025:                                             ; preds = %1020, %1025
  %1026 = phi i64 [ %1035, %1025 ], [ %1022, %1020 ]
  %1027 = phi i64 [ %1034, %1025 ], [ %1023, %1020 ]
  %1028 = phi i64 [ %1036, %1025 ], [ %1016, %1020 ]
  %1029 = getelementptr inbounds i32, i32* %1012, i64 %1026
  %1030 = getelementptr inbounds [5 x i32], [5 x i32]* %1013, i64 0, i64 %1026
  %1031 = select i1 %1007, i32* %1029, i32* %1030
  %1032 = load i32, i32* %1031, align 4
  %1033 = sext i32 %1032 to i64
  %1034 = mul nsw i64 %1027, %1033
  %1035 = add nuw nsw i64 %1026, 1
  %1036 = add i64 %1028, -1
  %1037 = icmp eq i64 %1036, 0
  br i1 %1037, label %1038, label %1025, !llvm.loop !21

1038:                                             ; preds = %1020, %1025, %994
  %1039 = phi i64 [ 1, %994 ], [ %1021, %1020 ], [ %1034, %1025 ]
  %1040 = add i32 %1005, 1
  %1041 = icmp slt i32 %1040, %995
  br i1 %1041, label %1042, label %1114

1042:                                             ; preds = %1038
  %1043 = getelementptr inbounds %union.anon, %union.anon* %1008, i64 0, i32 0
  %1044 = load i32*, i32** %1043, align 8
  %1045 = bitcast %union.anon* %1008 to [5 x i32]*
  %1046 = sext i32 %1040 to i64
  %1047 = xor i32 %1004, -1
  %1048 = add i32 %995, %1047
  %1049 = shl i32 %66, 16
  %1050 = ashr exact i32 %1049, 16
  %1051 = sub i32 %1048, %1050
  %1052 = add i32 %995, -2
  %1053 = sub i32 %1052, %1004
  %1054 = sub i32 %1053, %1050
  %1055 = and i32 %1051, 3
  %1056 = icmp ult i32 %1054, 3
  br i1 %1056, label %1093, label %1057

1057:                                             ; preds = %1042
  %1058 = sub i32 %1051, %1055
  br label %1121

1059:                                             ; preds = %1059, %1018
  %1060 = phi i64 [ 0, %1018 ], [ %1090, %1059 ]
  %1061 = phi i64 [ 1, %1018 ], [ %1089, %1059 ]
  %1062 = phi i64 [ %1019, %1018 ], [ %1091, %1059 ]
  %1063 = getelementptr inbounds i32, i32* %1012, i64 %1060
  %1064 = getelementptr inbounds [5 x i32], [5 x i32]* %1013, i64 0, i64 %1060
  %1065 = select i1 %1007, i32* %1063, i32* %1064
  %1066 = load i32, i32* %1065, align 4
  %1067 = sext i32 %1066 to i64
  %1068 = mul nsw i64 %1061, %1067
  %1069 = or i64 %1060, 1
  %1070 = getelementptr inbounds i32, i32* %1012, i64 %1069
  %1071 = getelementptr inbounds [5 x i32], [5 x i32]* %1013, i64 0, i64 %1069
  %1072 = select i1 %1007, i32* %1070, i32* %1071
  %1073 = load i32, i32* %1072, align 4
  %1074 = sext i32 %1073 to i64
  %1075 = mul nsw i64 %1068, %1074
  %1076 = or i64 %1060, 2
  %1077 = getelementptr inbounds i32, i32* %1012, i64 %1076
  %1078 = getelementptr inbounds [5 x i32], [5 x i32]* %1013, i64 0, i64 %1076
  %1079 = select i1 %1007, i32* %1077, i32* %1078
  %1080 = load i32, i32* %1079, align 4
  %1081 = sext i32 %1080 to i64
  %1082 = mul nsw i64 %1075, %1081
  %1083 = or i64 %1060, 3
  %1084 = getelementptr inbounds i32, i32* %1012, i64 %1083
  %1085 = getelementptr inbounds [5 x i32], [5 x i32]* %1013, i64 0, i64 %1083
  %1086 = select i1 %1007, i32* %1084, i32* %1085
  %1087 = load i32, i32* %1086, align 4
  %1088 = sext i32 %1087 to i64
  %1089 = mul nsw i64 %1082, %1088
  %1090 = add nuw nsw i64 %1060, 4
  %1091 = add i64 %1062, -4
  %1092 = icmp eq i64 %1091, 0
  br i1 %1092, label %1020, label %1059

1093:                                             ; preds = %1121, %1042
  %1094 = phi i64 [ undef, %1042 ], [ %1151, %1121 ]
  %1095 = phi i64 [ %1046, %1042 ], [ %1152, %1121 ]
  %1096 = phi i64 [ 1, %1042 ], [ %1151, %1121 ]
  %1097 = icmp eq i32 %1055, 0
  br i1 %1097, label %1111, label %1098

1098:                                             ; preds = %1093, %1098
  %1099 = phi i64 [ %1108, %1098 ], [ %1095, %1093 ]
  %1100 = phi i64 [ %1107, %1098 ], [ %1096, %1093 ]
  %1101 = phi i32 [ %1109, %1098 ], [ %1055, %1093 ]
  %1102 = getelementptr inbounds i32, i32* %1044, i64 %1099
  %1103 = getelementptr inbounds [5 x i32], [5 x i32]* %1045, i64 0, i64 %1099
  %1104 = select i1 %1007, i32* %1102, i32* %1103
  %1105 = load i32, i32* %1104, align 4
  %1106 = sext i32 %1105 to i64
  %1107 = mul nsw i64 %1100, %1106
  %1108 = add nsw i64 %1099, 1
  %1109 = add i32 %1101, -1
  %1110 = icmp eq i32 %1109, 0
  br i1 %1110, label %1111, label %1098, !llvm.loop !22

1111:                                             ; preds = %1098, %1093
  %1112 = phi i64 [ %1094, %1093 ], [ %1107, %1098 ]
  %1113 = trunc i64 %1112 to i32
  br label %1114

1114:                                             ; preds = %1111, %1038
  %1115 = phi i32 [ 1, %1038 ], [ %1113, %1111 ]
  %1116 = icmp sgt i64 %1039, 0
  br i1 %1116, label %1117, label %1196

1117:                                             ; preds = %1114
  %1118 = sext i32 %1005 to i64
  %1119 = and i32 %960, 65535
  %1120 = zext i32 %1119 to i64
  br label %1155

1121:                                             ; preds = %1121, %1057
  %1122 = phi i64 [ %1046, %1057 ], [ %1152, %1121 ]
  %1123 = phi i64 [ 1, %1057 ], [ %1151, %1121 ]
  %1124 = phi i32 [ %1058, %1057 ], [ %1153, %1121 ]
  %1125 = getelementptr inbounds i32, i32* %1044, i64 %1122
  %1126 = getelementptr inbounds [5 x i32], [5 x i32]* %1045, i64 0, i64 %1122
  %1127 = select i1 %1007, i32* %1125, i32* %1126
  %1128 = load i32, i32* %1127, align 4
  %1129 = sext i32 %1128 to i64
  %1130 = mul nsw i64 %1123, %1129
  %1131 = add nsw i64 %1122, 1
  %1132 = getelementptr inbounds i32, i32* %1044, i64 %1131
  %1133 = getelementptr inbounds [5 x i32], [5 x i32]* %1045, i64 0, i64 %1131
  %1134 = select i1 %1007, i32* %1132, i32* %1133
  %1135 = load i32, i32* %1134, align 4
  %1136 = sext i32 %1135 to i64
  %1137 = mul nsw i64 %1130, %1136
  %1138 = add nsw i64 %1122, 2
  %1139 = getelementptr inbounds i32, i32* %1044, i64 %1138
  %1140 = getelementptr inbounds [5 x i32], [5 x i32]* %1045, i64 0, i64 %1138
  %1141 = select i1 %1007, i32* %1139, i32* %1140
  %1142 = load i32, i32* %1141, align 4
  %1143 = sext i32 %1142 to i64
  %1144 = mul nsw i64 %1137, %1143
  %1145 = add nsw i64 %1122, 3
  %1146 = getelementptr inbounds i32, i32* %1044, i64 %1145
  %1147 = getelementptr inbounds [5 x i32], [5 x i32]* %1045, i64 0, i64 %1145
  %1148 = select i1 %1007, i32* %1146, i32* %1147
  %1149 = load i32, i32* %1148, align 4
  %1150 = sext i32 %1149 to i64
  %1151 = mul nsw i64 %1144, %1150
  %1152 = add nsw i64 %1122, 4
  %1153 = add i32 %1124, -4
  %1154 = icmp eq i32 %1153, 0
  br i1 %1154, label %1093, label %1121

1155:                                             ; preds = %1160, %1117
  %1156 = phi i64 [ 0, %1117 ], [ %1162, %1160 ]
  %1157 = phi i16* [ %996, %1117 ], [ %1161, %1160 ]
  br i1 %1006, label %1160, label %1158

1158:                                             ; preds = %1155
  %1159 = trunc i64 %1156 to i32
  br label %1164

1160:                                             ; preds = %1180, %1155
  %1161 = phi i16* [ %1157, %1155 ], [ %1193, %1180 ]
  %1162 = add nuw nsw i64 %1156, 1
  %1163 = icmp eq i64 %1162, %1039
  br i1 %1163, label %1196, label %1155

1164:                                             ; preds = %1180, %1158
  %1165 = phi i64 [ 0, %1158 ], [ %1194, %1180 ]
  %1166 = phi i16* [ %1157, %1158 ], [ %1193, %1180 ]
  %1167 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %998, i64 %1165
  %1168 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1167, align 8
  %1169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1168, i64 0, i32 0
  %1170 = load i32, i32* %1169, align 8
  %1171 = icmp sgt i32 %1170, 5
  %1172 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1168, i64 0, i32 1
  br i1 %1171, label %1173, label %1177

1173:                                             ; preds = %1164
  %1174 = getelementptr inbounds %union.anon, %union.anon* %1172, i64 0, i32 0
  %1175 = load i32*, i32** %1174, align 8
  %1176 = getelementptr inbounds i32, i32* %1175, i64 %1118
  br label %1180

1177:                                             ; preds = %1164
  %1178 = bitcast %union.anon* %1172 to [5 x i32]*
  %1179 = getelementptr inbounds [5 x i32], [5 x i32]* %1178, i64 0, i64 %1118
  br label %1180

1180:                                             ; preds = %1177, %1173
  %1181 = phi i32* [ %1176, %1173 ], [ %1179, %1177 ]
  %1182 = load i32, i32* %1181, align 4
  %1183 = mul i32 %1182, %1115
  %1184 = getelementptr inbounds i16*, i16** %1000, i64 %1165
  %1185 = load i16*, i16** %1184, align 8
  %1186 = mul nsw i32 %1183, %1159
  %1187 = sext i32 %1186 to i64
  %1188 = getelementptr inbounds i16, i16* %1185, i64 %1187
  %1189 = bitcast i16* %1188 to i8*
  %1190 = bitcast i16* %1166 to i8*
  %1191 = sext i32 %1183 to i64
  %1192 = shl nsw i64 %1191, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1189, i8* align 2 %1190, i64 %1192, i1 false) #10
  %1193 = getelementptr inbounds i16, i16* %1166, i64 %1191
  %1194 = add nuw nsw i64 %1165, 1
  %1195 = icmp eq i64 %1194, %1120
  br i1 %1195, label %1160, label %1164

1196:                                             ; preds = %1160, %1114
  br i1 %1007, label %1197, label %1203

1197:                                             ; preds = %1196
  %1198 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1199 = load i32*, i32** %1198, align 8
  %1200 = icmp eq i32* %1199, null
  br i1 %1200, label %1203, label %1201

1201:                                             ; preds = %1197
  %1202 = bitcast i32* %1199 to i8*
  call void @_ZdaPv(i8* %1202) #11
  br label %1203

1203:                                             ; preds = %1196, %1197, %1201
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %963) #10
  %1204 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %997, align 8
  %1205 = icmp eq %"class.tflite::RuntimeShape"** %1204, null
  br i1 %1205, label %1211, label %1206

1206:                                             ; preds = %1203
  %1207 = ptrtoint %"class.tflite::RuntimeShape"** %1204 to i64
  %1208 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %9, i64 0, i32 2, i32 0, i32 1
  %1209 = bitcast %"class.tflite::RuntimeShape"*** %1208 to i64*
  store i64 %1207, i64* %1209, align 8
  %1210 = bitcast %"class.tflite::RuntimeShape"** %1204 to i8*
  call void @_ZdlPv(i8* %1210) #11
  br label %1211

1211:                                             ; preds = %1206, %1203
  %1212 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %9, i64 0, i32 1
  %1213 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1212, i64 0, i32 0, i32 0
  %1214 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1213, align 8
  %1215 = icmp eq %"class.tflite::RuntimeShape"* %1214, null
  br i1 %1215, label %1240, label %1216

1216:                                             ; preds = %1211
  %1217 = bitcast %"class.tflite::RuntimeShape"* %1214 to i8*
  %1218 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %9, i64 0, i32 1, i32 0, i32 1
  %1219 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1218, align 8
  %1220 = icmp eq %"class.tflite::RuntimeShape"* %1219, %1214
  br i1 %1220, label %1238, label %1221

1221:                                             ; preds = %1216, %1233
  %1222 = phi %"class.tflite::RuntimeShape"* [ %1223, %1233 ], [ %1219, %1216 ]
  %1223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1222, i64 -1
  %1224 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1223, i64 0, i32 0
  %1225 = load i32, i32* %1224, align 8
  %1226 = icmp sgt i32 %1225, 5
  br i1 %1226, label %1227, label %1233

1227:                                             ; preds = %1221
  %1228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1222, i64 -1, i32 1, i32 0
  %1229 = load i32*, i32** %1228, align 8
  %1230 = icmp eq i32* %1229, null
  br i1 %1230, label %1233, label %1231

1231:                                             ; preds = %1227
  %1232 = bitcast i32* %1229 to i8*
  call void @_ZdaPv(i8* %1232) #11
  br label %1233

1233:                                             ; preds = %1231, %1227, %1221
  %1234 = icmp eq %"class.tflite::RuntimeShape"* %1223, %1214
  br i1 %1234, label %1235, label %1221

1235:                                             ; preds = %1233
  %1236 = bitcast %"class.std::__1::vector.2"* %1212 to i8**
  %1237 = load i8*, i8** %1236, align 8
  br label %1238

1238:                                             ; preds = %1235, %1216
  %1239 = phi i8* [ %1237, %1235 ], [ %1217, %1216 ]
  store %"class.tflite::RuntimeShape"* %1214, %"class.tflite::RuntimeShape"** %1218, align 8
  call void @_ZdlPv(i8* %1239) #11
  br label %1240

1240:                                             ; preds = %1238, %1211
  %1241 = load i16**, i16*** %999, align 8
  %1242 = icmp eq i16** %1241, null
  br i1 %1242, label %1248, label %1243

1243:                                             ; preds = %1240
  %1244 = ptrtoint i16** %1241 to i64
  %1245 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %9, i64 0, i32 0, i32 0, i32 1
  %1246 = bitcast i16*** %1245 to i64*
  store i64 %1244, i64* %1246, align 8
  %1247 = bitcast i16** %1241 to i8*
  call void @_ZdlPv(i8* %1247) #11
  br label %1248

1248:                                             ; preds = %1240, %1243
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %955) #10
  br label %1547

1249:                                             ; preds = %72
  %1250 = bitcast %"class.tflite::VectorOfTensors.40"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1250) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1250, i8 -86, i64 72, i1 false)
  %1251 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %1252 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1251, align 8
  call void @_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.40"* nonnull %11, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %1252)
  %1253 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1251, align 8
  %1254 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1253, i64 0, i32 0
  %1255 = load i32, i32* %1254, align 4
  %1256 = trunc i32 %1255 to i16
  %1257 = trunc i32 %66 to i16
  %1258 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1258) #10
  %1259 = icmp eq %struct.TfLiteTensor* %37, null
  br i1 %1259, label %1260, label %1262

1260:                                             ; preds = %1249
  %1261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %1261, align 8, !alias.scope !23
  br label %1288

1262:                                             ; preds = %1249
  %1263 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %67, align 8, !noalias !23
  %1264 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1263, i64 0, i32 0
  %1265 = load i32, i32* %1264, align 4, !noalias !23
  %1266 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1263, i64 0, i32 1, i64 0
  %1267 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %1265, i32* %1267, align 8, !alias.scope !23
  %1268 = icmp sgt i32 %1265, 5
  br i1 %1268, label %1269, label %1276

1269:                                             ; preds = %1262
  %1270 = sext i32 %1265 to i64
  %1271 = shl nsw i64 %1270, 2
  %1272 = call i8* @_Znam(i64 %1271) #11, !noalias !23
  %1273 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1274 = bitcast i32** %1273 to i8**
  store i8* %1272, i8** %1274, align 8, !alias.scope !23
  %1275 = bitcast i8* %1272 to i32*
  br label %1281

1276:                                             ; preds = %1262
  %1277 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %1278 = bitcast %union.anon* %1277 to i32*
  %1279 = sext i32 %1265 to i64
  %1280 = shl nsw i64 %1279, 2
  br label %1281

1281:                                             ; preds = %1276, %1269
  %1282 = phi i64 [ %1271, %1269 ], [ %1280, %1276 ]
  %1283 = phi i32* [ %1275, %1269 ], [ %1278, %1276 ]
  %1284 = bitcast i32* %1283 to i8*
  %1285 = bitcast i32* %1266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1284, i8* align 4 %1285, i64 %1282, i1 false) #10
  %1286 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 1, i32 0
  %1287 = load i32*, i32** %1286, align 8
  br label %1288

1288:                                             ; preds = %1260, %1281
  %1289 = phi i32 [ %1265, %1281 ], [ 0, %1260 ]
  %1290 = phi i32* [ %1287, %1281 ], [ null, %1260 ]
  %1291 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %11, i64 0, i32 2, i32 0, i32 0
  %1292 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1291, align 8
  %1293 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %11, i64 0, i32 0, i32 0, i32 0
  %1294 = load i32**, i32*** %1293, align 8
  %1295 = shl i32 %66, 16
  %1296 = ashr exact i32 %1295, 16
  %1297 = icmp slt i16 %1257, 0
  %1298 = select i1 %1297, i32 %1289, i32 0
  %1299 = add i32 %1298, %1296
  %1300 = icmp eq i16 %1256, 0
  %1301 = icmp sgt i32 %1289, 5
  %1302 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %1303 = icmp sgt i32 %1299, 0
  br i1 %1303, label %1304, label %1332

1304:                                             ; preds = %1288
  %1305 = getelementptr inbounds %union.anon, %union.anon* %1302, i64 0, i32 0
  %1306 = load i32*, i32** %1305, align 8
  %1307 = bitcast %union.anon* %1302 to [5 x i32]*
  %1308 = zext i32 %1299 to i64
  %1309 = add nsw i64 %1308, -1
  %1310 = and i64 %1308, 3
  %1311 = icmp ult i64 %1309, 3
  br i1 %1311, label %1314, label %1312

1312:                                             ; preds = %1304
  %1313 = sub nsw i64 %1308, %1310
  br label %1353

1314:                                             ; preds = %1353, %1304
  %1315 = phi i64 [ undef, %1304 ], [ %1383, %1353 ]
  %1316 = phi i64 [ 0, %1304 ], [ %1384, %1353 ]
  %1317 = phi i64 [ 1, %1304 ], [ %1383, %1353 ]
  %1318 = icmp eq i64 %1310, 0
  br i1 %1318, label %1332, label %1319

1319:                                             ; preds = %1314, %1319
  %1320 = phi i64 [ %1329, %1319 ], [ %1316, %1314 ]
  %1321 = phi i64 [ %1328, %1319 ], [ %1317, %1314 ]
  %1322 = phi i64 [ %1330, %1319 ], [ %1310, %1314 ]
  %1323 = getelementptr inbounds i32, i32* %1306, i64 %1320
  %1324 = getelementptr inbounds [5 x i32], [5 x i32]* %1307, i64 0, i64 %1320
  %1325 = select i1 %1301, i32* %1323, i32* %1324
  %1326 = load i32, i32* %1325, align 4
  %1327 = sext i32 %1326 to i64
  %1328 = mul nsw i64 %1321, %1327
  %1329 = add nuw nsw i64 %1320, 1
  %1330 = add i64 %1322, -1
  %1331 = icmp eq i64 %1330, 0
  br i1 %1331, label %1332, label %1319, !llvm.loop !26

1332:                                             ; preds = %1314, %1319, %1288
  %1333 = phi i64 [ 1, %1288 ], [ %1315, %1314 ], [ %1328, %1319 ]
  %1334 = add i32 %1299, 1
  %1335 = icmp slt i32 %1334, %1289
  br i1 %1335, label %1336, label %1408

1336:                                             ; preds = %1332
  %1337 = getelementptr inbounds %union.anon, %union.anon* %1302, i64 0, i32 0
  %1338 = load i32*, i32** %1337, align 8
  %1339 = bitcast %union.anon* %1302 to [5 x i32]*
  %1340 = sext i32 %1334 to i64
  %1341 = xor i32 %1298, -1
  %1342 = add i32 %1289, %1341
  %1343 = shl i32 %66, 16
  %1344 = ashr exact i32 %1343, 16
  %1345 = sub i32 %1342, %1344
  %1346 = add i32 %1289, -2
  %1347 = sub i32 %1346, %1298
  %1348 = sub i32 %1347, %1344
  %1349 = and i32 %1345, 3
  %1350 = icmp ult i32 %1348, 3
  br i1 %1350, label %1387, label %1351

1351:                                             ; preds = %1336
  %1352 = sub i32 %1345, %1349
  br label %1415

1353:                                             ; preds = %1353, %1312
  %1354 = phi i64 [ 0, %1312 ], [ %1384, %1353 ]
  %1355 = phi i64 [ 1, %1312 ], [ %1383, %1353 ]
  %1356 = phi i64 [ %1313, %1312 ], [ %1385, %1353 ]
  %1357 = getelementptr inbounds i32, i32* %1306, i64 %1354
  %1358 = getelementptr inbounds [5 x i32], [5 x i32]* %1307, i64 0, i64 %1354
  %1359 = select i1 %1301, i32* %1357, i32* %1358
  %1360 = load i32, i32* %1359, align 4
  %1361 = sext i32 %1360 to i64
  %1362 = mul nsw i64 %1355, %1361
  %1363 = or i64 %1354, 1
  %1364 = getelementptr inbounds i32, i32* %1306, i64 %1363
  %1365 = getelementptr inbounds [5 x i32], [5 x i32]* %1307, i64 0, i64 %1363
  %1366 = select i1 %1301, i32* %1364, i32* %1365
  %1367 = load i32, i32* %1366, align 4
  %1368 = sext i32 %1367 to i64
  %1369 = mul nsw i64 %1362, %1368
  %1370 = or i64 %1354, 2
  %1371 = getelementptr inbounds i32, i32* %1306, i64 %1370
  %1372 = getelementptr inbounds [5 x i32], [5 x i32]* %1307, i64 0, i64 %1370
  %1373 = select i1 %1301, i32* %1371, i32* %1372
  %1374 = load i32, i32* %1373, align 4
  %1375 = sext i32 %1374 to i64
  %1376 = mul nsw i64 %1369, %1375
  %1377 = or i64 %1354, 3
  %1378 = getelementptr inbounds i32, i32* %1306, i64 %1377
  %1379 = getelementptr inbounds [5 x i32], [5 x i32]* %1307, i64 0, i64 %1377
  %1380 = select i1 %1301, i32* %1378, i32* %1379
  %1381 = load i32, i32* %1380, align 4
  %1382 = sext i32 %1381 to i64
  %1383 = mul nsw i64 %1376, %1382
  %1384 = add nuw nsw i64 %1354, 4
  %1385 = add i64 %1356, -4
  %1386 = icmp eq i64 %1385, 0
  br i1 %1386, label %1314, label %1353

1387:                                             ; preds = %1415, %1336
  %1388 = phi i64 [ undef, %1336 ], [ %1445, %1415 ]
  %1389 = phi i64 [ %1340, %1336 ], [ %1446, %1415 ]
  %1390 = phi i64 [ 1, %1336 ], [ %1445, %1415 ]
  %1391 = icmp eq i32 %1349, 0
  br i1 %1391, label %1405, label %1392

1392:                                             ; preds = %1387, %1392
  %1393 = phi i64 [ %1402, %1392 ], [ %1389, %1387 ]
  %1394 = phi i64 [ %1401, %1392 ], [ %1390, %1387 ]
  %1395 = phi i32 [ %1403, %1392 ], [ %1349, %1387 ]
  %1396 = getelementptr inbounds i32, i32* %1338, i64 %1393
  %1397 = getelementptr inbounds [5 x i32], [5 x i32]* %1339, i64 0, i64 %1393
  %1398 = select i1 %1301, i32* %1396, i32* %1397
  %1399 = load i32, i32* %1398, align 4
  %1400 = sext i32 %1399 to i64
  %1401 = mul nsw i64 %1394, %1400
  %1402 = add nsw i64 %1393, 1
  %1403 = add i32 %1395, -1
  %1404 = icmp eq i32 %1403, 0
  br i1 %1404, label %1405, label %1392, !llvm.loop !27

1405:                                             ; preds = %1392, %1387
  %1406 = phi i64 [ %1388, %1387 ], [ %1401, %1392 ]
  %1407 = trunc i64 %1406 to i32
  br label %1408

1408:                                             ; preds = %1405, %1332
  %1409 = phi i32 [ 1, %1332 ], [ %1407, %1405 ]
  %1410 = icmp sgt i64 %1333, 0
  br i1 %1410, label %1411, label %1490

1411:                                             ; preds = %1408
  %1412 = sext i32 %1299 to i64
  %1413 = and i32 %1255, 65535
  %1414 = zext i32 %1413 to i64
  br label %1449

1415:                                             ; preds = %1415, %1351
  %1416 = phi i64 [ %1340, %1351 ], [ %1446, %1415 ]
  %1417 = phi i64 [ 1, %1351 ], [ %1445, %1415 ]
  %1418 = phi i32 [ %1352, %1351 ], [ %1447, %1415 ]
  %1419 = getelementptr inbounds i32, i32* %1338, i64 %1416
  %1420 = getelementptr inbounds [5 x i32], [5 x i32]* %1339, i64 0, i64 %1416
  %1421 = select i1 %1301, i32* %1419, i32* %1420
  %1422 = load i32, i32* %1421, align 4
  %1423 = sext i32 %1422 to i64
  %1424 = mul nsw i64 %1417, %1423
  %1425 = add nsw i64 %1416, 1
  %1426 = getelementptr inbounds i32, i32* %1338, i64 %1425
  %1427 = getelementptr inbounds [5 x i32], [5 x i32]* %1339, i64 0, i64 %1425
  %1428 = select i1 %1301, i32* %1426, i32* %1427
  %1429 = load i32, i32* %1428, align 4
  %1430 = sext i32 %1429 to i64
  %1431 = mul nsw i64 %1424, %1430
  %1432 = add nsw i64 %1416, 2
  %1433 = getelementptr inbounds i32, i32* %1338, i64 %1432
  %1434 = getelementptr inbounds [5 x i32], [5 x i32]* %1339, i64 0, i64 %1432
  %1435 = select i1 %1301, i32* %1433, i32* %1434
  %1436 = load i32, i32* %1435, align 4
  %1437 = sext i32 %1436 to i64
  %1438 = mul nsw i64 %1431, %1437
  %1439 = add nsw i64 %1416, 3
  %1440 = getelementptr inbounds i32, i32* %1338, i64 %1439
  %1441 = getelementptr inbounds [5 x i32], [5 x i32]* %1339, i64 0, i64 %1439
  %1442 = select i1 %1301, i32* %1440, i32* %1441
  %1443 = load i32, i32* %1442, align 4
  %1444 = sext i32 %1443 to i64
  %1445 = mul nsw i64 %1438, %1444
  %1446 = add nsw i64 %1416, 4
  %1447 = add i32 %1418, -4
  %1448 = icmp eq i32 %1447, 0
  br i1 %1448, label %1387, label %1415

1449:                                             ; preds = %1454, %1411
  %1450 = phi i64 [ 0, %1411 ], [ %1456, %1454 ]
  %1451 = phi i32* [ %1290, %1411 ], [ %1455, %1454 ]
  br i1 %1300, label %1454, label %1452

1452:                                             ; preds = %1449
  %1453 = trunc i64 %1450 to i32
  br label %1458

1454:                                             ; preds = %1474, %1449
  %1455 = phi i32* [ %1451, %1449 ], [ %1487, %1474 ]
  %1456 = add nuw nsw i64 %1450, 1
  %1457 = icmp eq i64 %1456, %1333
  br i1 %1457, label %1490, label %1449

1458:                                             ; preds = %1474, %1452
  %1459 = phi i64 [ 0, %1452 ], [ %1488, %1474 ]
  %1460 = phi i32* [ %1451, %1452 ], [ %1487, %1474 ]
  %1461 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1292, i64 %1459
  %1462 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1461, align 8
  %1463 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1462, i64 0, i32 0
  %1464 = load i32, i32* %1463, align 8
  %1465 = icmp sgt i32 %1464, 5
  %1466 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1462, i64 0, i32 1
  br i1 %1465, label %1467, label %1471

1467:                                             ; preds = %1458
  %1468 = getelementptr inbounds %union.anon, %union.anon* %1466, i64 0, i32 0
  %1469 = load i32*, i32** %1468, align 8
  %1470 = getelementptr inbounds i32, i32* %1469, i64 %1412
  br label %1474

1471:                                             ; preds = %1458
  %1472 = bitcast %union.anon* %1466 to [5 x i32]*
  %1473 = getelementptr inbounds [5 x i32], [5 x i32]* %1472, i64 0, i64 %1412
  br label %1474

1474:                                             ; preds = %1471, %1467
  %1475 = phi i32* [ %1470, %1467 ], [ %1473, %1471 ]
  %1476 = load i32, i32* %1475, align 4
  %1477 = mul i32 %1476, %1409
  %1478 = getelementptr inbounds i32*, i32** %1294, i64 %1459
  %1479 = load i32*, i32** %1478, align 8
  %1480 = mul nsw i32 %1477, %1453
  %1481 = sext i32 %1480 to i64
  %1482 = getelementptr inbounds i32, i32* %1479, i64 %1481
  %1483 = bitcast i32* %1482 to i8*
  %1484 = bitcast i32* %1460 to i8*
  %1485 = sext i32 %1477 to i64
  %1486 = shl nsw i64 %1485, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1483, i8* align 4 %1484, i64 %1486, i1 false) #10
  %1487 = getelementptr inbounds i32, i32* %1460, i64 %1485
  %1488 = add nuw nsw i64 %1459, 1
  %1489 = icmp eq i64 %1488, %1414
  br i1 %1489, label %1454, label %1458

1490:                                             ; preds = %1454, %1408
  br i1 %1301, label %1491, label %1497

1491:                                             ; preds = %1490
  %1492 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1493 = load i32*, i32** %1492, align 8
  %1494 = icmp eq i32* %1493, null
  br i1 %1494, label %1497, label %1495

1495:                                             ; preds = %1491
  %1496 = bitcast i32* %1493 to i8*
  call void @_ZdaPv(i8* %1496) #11
  br label %1497

1497:                                             ; preds = %1490, %1491, %1495
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1258) #10
  %1498 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1291, align 8
  %1499 = icmp eq %"class.tflite::RuntimeShape"** %1498, null
  br i1 %1499, label %1505, label %1500

1500:                                             ; preds = %1497
  %1501 = ptrtoint %"class.tflite::RuntimeShape"** %1498 to i64
  %1502 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %11, i64 0, i32 2, i32 0, i32 1
  %1503 = bitcast %"class.tflite::RuntimeShape"*** %1502 to i64*
  store i64 %1501, i64* %1503, align 8
  %1504 = bitcast %"class.tflite::RuntimeShape"** %1498 to i8*
  call void @_ZdlPv(i8* %1504) #11
  br label %1505

1505:                                             ; preds = %1500, %1497
  %1506 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %11, i64 0, i32 1
  %1507 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1506, i64 0, i32 0, i32 0
  %1508 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1507, align 8
  %1509 = icmp eq %"class.tflite::RuntimeShape"* %1508, null
  br i1 %1509, label %1534, label %1510

1510:                                             ; preds = %1505
  %1511 = bitcast %"class.tflite::RuntimeShape"* %1508 to i8*
  %1512 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %11, i64 0, i32 1, i32 0, i32 1
  %1513 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1512, align 8
  %1514 = icmp eq %"class.tflite::RuntimeShape"* %1513, %1508
  br i1 %1514, label %1532, label %1515

1515:                                             ; preds = %1510, %1527
  %1516 = phi %"class.tflite::RuntimeShape"* [ %1517, %1527 ], [ %1513, %1510 ]
  %1517 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1516, i64 -1
  %1518 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1517, i64 0, i32 0
  %1519 = load i32, i32* %1518, align 8
  %1520 = icmp sgt i32 %1519, 5
  br i1 %1520, label %1521, label %1527

1521:                                             ; preds = %1515
  %1522 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1516, i64 -1, i32 1, i32 0
  %1523 = load i32*, i32** %1522, align 8
  %1524 = icmp eq i32* %1523, null
  br i1 %1524, label %1527, label %1525

1525:                                             ; preds = %1521
  %1526 = bitcast i32* %1523 to i8*
  call void @_ZdaPv(i8* %1526) #11
  br label %1527

1527:                                             ; preds = %1525, %1521, %1515
  %1528 = icmp eq %"class.tflite::RuntimeShape"* %1517, %1508
  br i1 %1528, label %1529, label %1515

1529:                                             ; preds = %1527
  %1530 = bitcast %"class.std::__1::vector.2"* %1506 to i8**
  %1531 = load i8*, i8** %1530, align 8
  br label %1532

1532:                                             ; preds = %1529, %1510
  %1533 = phi i8* [ %1531, %1529 ], [ %1511, %1510 ]
  store %"class.tflite::RuntimeShape"* %1508, %"class.tflite::RuntimeShape"** %1512, align 8
  call void @_ZdlPv(i8* %1533) #11
  br label %1534

1534:                                             ; preds = %1532, %1505
  %1535 = load i32**, i32*** %1293, align 8
  %1536 = icmp eq i32** %1535, null
  br i1 %1536, label %1542, label %1537

1537:                                             ; preds = %1534
  %1538 = ptrtoint i32** %1535 to i64
  %1539 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %11, i64 0, i32 0, i32 0, i32 1
  %1540 = bitcast i32*** %1539 to i64*
  store i64 %1538, i64* %1540, align 8
  %1541 = bitcast i32** %1535 to i8*
  call void @_ZdlPv(i8* %1541) #11
  br label %1542

1542:                                             ; preds = %1534, %1537
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1250) #10
  br label %1547

1543:                                             ; preds = %72
  %1544 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1545 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1544, align 8
  %1546 = tail call i8* @TfLiteTypeGetName(i32 %74) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %1545(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0), i8* %1546) #10
  br label %1547

1547:                                             ; preds = %62, %69, %1543, %1542, %1248, %953, %661, %369, %41
  %1548 = phi i32 [ %44, %41 ], [ 1, %1543 ], [ 1, %69 ], [ 1, %62 ], [ 0, %1542 ], [ 0, %1248 ], [ 0, %953 ], [ 0, %661 ], [ 0, %369 ]
  ret i32 %1548
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast float*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #12
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to float**
  %22 = getelementptr inbounds float*, float** %21, i64 %10
  %23 = ptrtoint float** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #11
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast float*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to float**
  %94 = load float*, float** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi float* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint float* %96 to i64
  %98 = load float**, float*** %62, align 8
  %99 = load float**, float*** %11, align 8
  %100 = icmp ult float** %98, %99
  %101 = ptrtoint float** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast float** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds float*, float** %98, i64 1
  %105 = ptrtoint float** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint float** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #12
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #12
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #11
  %131 = bitcast i8* %130 to float**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi float** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds float*, float** %134, i64 %110
  %136 = getelementptr inbounds float*, float** %134, i64 %133
  %137 = ptrtoint float** %136 to i64
  %138 = bitcast float** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds float*, float** %135, i64 1
  %140 = ptrtoint float** %139 to i64
  %141 = load float**, float*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint float** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds float*, float** %135, i64 %146
  %148 = ptrtoint float** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast float** %147 to i8*
  %152 = bitcast float** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load float**, float*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi float** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq float** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast float** %155 to i8*
  call void @_ZdlPv(i8* %158) #11
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !28
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !28
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !28
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !28
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #11, !noalias !28
  store i8* %171, i8** %70, align 8, !alias.scope !28
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #11
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #11
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #12
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #12
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #11
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #11
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIhEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.16"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.16"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i8*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.16"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #12
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to i8**
  %22 = getelementptr inbounds i8*, i8** %21, i64 %10
  %23 = ptrtoint i8** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.16"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #11
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i8*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.16", %"class.tflite::VectorOfTensors.16"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i8* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i8* %96 to i64
  %98 = load i8**, i8*** %62, align 8
  %99 = load i8**, i8*** %11, align 8
  %100 = icmp ult i8** %98, %99
  %101 = ptrtoint i8** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i8** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i8*, i8** %98, i64 1
  %105 = ptrtoint i8** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i8** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.16"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #12
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #12
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #11
  %131 = bitcast i8* %130 to i8**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i8** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i8*, i8** %134, i64 %110
  %136 = getelementptr inbounds i8*, i8** %134, i64 %133
  %137 = ptrtoint i8** %136 to i64
  %138 = bitcast i8** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i8*, i8** %135, i64 1
  %140 = ptrtoint i8** %139 to i64
  %141 = load i8**, i8*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i8** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i8*, i8** %135, i64 %146
  %148 = ptrtoint i8** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i8** %147 to i8*
  %152 = bitcast i8** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load i8**, i8*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i8** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i8** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i8** %155 to i8*
  call void @_ZdlPv(i8* %158) #11
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !31
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !31
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !31
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !31
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #11, !noalias !31
  store i8* %171, i8** %70, align 8, !alias.scope !31
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #11
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #11
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #12
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #12
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #11
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #11
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.24"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i8*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #12
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to i8**
  %22 = getelementptr inbounds i8*, i8** %21, i64 %10
  %23 = ptrtoint i8** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #11
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i8*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i8* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i8* %96 to i64
  %98 = load i8**, i8*** %62, align 8
  %99 = load i8**, i8*** %11, align 8
  %100 = icmp ult i8** %98, %99
  %101 = ptrtoint i8** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i8** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i8*, i8** %98, i64 1
  %105 = ptrtoint i8** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i8** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #12
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #12
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #11
  %131 = bitcast i8* %130 to i8**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i8** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i8*, i8** %134, i64 %110
  %136 = getelementptr inbounds i8*, i8** %134, i64 %133
  %137 = ptrtoint i8** %136 to i64
  %138 = bitcast i8** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i8*, i8** %135, i64 1
  %140 = ptrtoint i8** %139 to i64
  %141 = load i8**, i8*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i8** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i8*, i8** %135, i64 %146
  %148 = ptrtoint i8** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i8** %147 to i8*
  %152 = bitcast i8** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load i8**, i8*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i8** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i8** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i8** %155 to i8*
  call void @_ZdlPv(i8* %158) #11
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !34
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !34
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !34
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !34
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #11, !noalias !34
  store i8* %171, i8** %70, align 8, !alias.scope !34
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #11
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #11
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #12
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #12
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #11
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #11
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIsEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.32"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.32"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i16*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.32"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #12
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to i16**
  %22 = getelementptr inbounds i16*, i16** %21, i64 %10
  %23 = ptrtoint i16** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.32"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #11
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i16*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.32", %"class.tflite::VectorOfTensors.32"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i16**
  %94 = load i16*, i16** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i16* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i16* %96 to i64
  %98 = load i16**, i16*** %62, align 8
  %99 = load i16**, i16*** %11, align 8
  %100 = icmp ult i16** %98, %99
  %101 = ptrtoint i16** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i16** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i16*, i16** %98, i64 1
  %105 = ptrtoint i16** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i16** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.32"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #12
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #12
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #11
  %131 = bitcast i8* %130 to i16**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i16** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i16*, i16** %134, i64 %110
  %136 = getelementptr inbounds i16*, i16** %134, i64 %133
  %137 = ptrtoint i16** %136 to i64
  %138 = bitcast i16** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i16*, i16** %135, i64 1
  %140 = ptrtoint i16** %139 to i64
  %141 = load i16**, i16*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i16** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i16*, i16** %135, i64 %146
  %148 = ptrtoint i16** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i16** %147 to i8*
  %152 = bitcast i16** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load i16**, i16*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i16** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i16** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i16** %155 to i8*
  call void @_ZdlPv(i8* %158) #11
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !37
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !37
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !37
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !37
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #11, !noalias !37
  store i8* %171, i8** %70, align 8, !alias.scope !37
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #11
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #11
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #12
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #12
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #11
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #11
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.40"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.40"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i32*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.40"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #12
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = bitcast i8* %20 to i32**
  %22 = getelementptr inbounds i32*, i32** %21, i64 %10
  %23 = ptrtoint i32** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.40"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #11
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %220

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i32*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %217
  br i1 %59, label %77, label %220

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.40", %"class.tflite::VectorOfTensors.40"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %221

83:                                               ; preds = %217, %60
  %84 = phi i64 [ 0, %60 ], [ %218, %217 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1, i32 0
  %93 = load i32*, i32** %92, align 8
  br label %94

94:                                               ; preds = %83, %91
  %95 = phi i32* [ %93, %91 ], [ null, %83 ]
  %96 = ptrtoint i32* %95 to i64
  %97 = load i32**, i32*** %62, align 8
  %98 = load i32**, i32*** %11, align 8
  %99 = icmp ult i32** %97, %98
  %100 = ptrtoint i32** %98 to i64
  br i1 %99, label %101, label %105

101:                                              ; preds = %94
  %102 = bitcast i32** %97 to i64*
  store i64 %96, i64* %102, align 8
  %103 = getelementptr inbounds i32*, i32** %97, i64 1
  %104 = ptrtoint i32** %103 to i64
  store i64 %104, i64* %63, align 8
  br label %158

105:                                              ; preds = %94
  %106 = ptrtoint i32** %97 to i64
  %107 = load i64, i64* %13, align 8
  %108 = sub i64 %106, %107
  %109 = ashr exact i64 %108, 3
  %110 = add nsw i64 %109, 1
  %111 = icmp ugt i64 %110, 2305843009213693951
  br i1 %111, label %112, label %114

112:                                              ; preds = %105
  %113 = bitcast %"class.tflite::VectorOfTensors.40"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %113) #12
  unreachable

114:                                              ; preds = %105
  %115 = sub i64 %100, %107
  %116 = ashr exact i64 %115, 3
  %117 = icmp ult i64 %116, 1152921504606846975
  br i1 %117, label %118, label %126

118:                                              ; preds = %114
  %119 = ashr exact i64 %115, 2
  %120 = icmp ult i64 %119, %110
  %121 = select i1 %120, i64 %110, i64 %119
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = icmp ugt i64 %121, 2305843009213693951
  br i1 %124, label %125, label %126

125:                                              ; preds = %123
  call void @abort() #12
  unreachable

126:                                              ; preds = %123, %114
  %127 = phi i64 [ %121, %123 ], [ 2305843009213693951, %114 ]
  %128 = shl i64 %127, 3
  %129 = call i8* @_Znwm(i64 %128) #11
  %130 = bitcast i8* %129 to i32**
  br label %131

131:                                              ; preds = %126, %118
  %132 = phi i64 [ %127, %126 ], [ 0, %118 ]
  %133 = phi i32** [ %130, %126 ], [ null, %118 ]
  %134 = getelementptr inbounds i32*, i32** %133, i64 %109
  %135 = getelementptr inbounds i32*, i32** %133, i64 %132
  %136 = ptrtoint i32** %135 to i64
  %137 = bitcast i32** %134 to i64*
  store i64 %96, i64* %137, align 8
  %138 = getelementptr inbounds i32*, i32** %134, i64 1
  %139 = ptrtoint i32** %138 to i64
  %140 = load i32**, i32*** %64, align 8
  %141 = load i64, i64* %63, align 8
  %142 = ptrtoint i32** %140 to i64
  %143 = sub i64 %141, %142
  %144 = ashr exact i64 %143, 3
  %145 = sub nsw i64 0, %144
  %146 = getelementptr inbounds i32*, i32** %134, i64 %145
  %147 = ptrtoint i32** %146 to i64
  %148 = icmp sgt i64 %143, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %131
  %150 = bitcast i32** %146 to i8*
  %151 = bitcast i32** %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %143, i1 false) #10
  %152 = load i32**, i32*** %64, align 8
  br label %153

153:                                              ; preds = %149, %131
  %154 = phi i32** [ %140, %131 ], [ %152, %149 ]
  store i64 %147, i64* %13, align 8
  store i64 %139, i64* %63, align 8
  store i64 %136, i64* %12, align 8
  %155 = icmp eq i32** %154, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %153
  %157 = bitcast i32** %154 to i8*
  call void @_ZdlPv(i8* %157) #11
  br label %158

158:                                              ; preds = %101, %153, %156
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %159, label %160

159:                                              ; preds = %158
  store i32 0, i32* %66, align 8, !alias.scope !40
  br label %176

160:                                              ; preds = %158
  %161 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %162 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %161, align 8, !noalias !40
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 0
  %164 = load i32, i32* %163, align 4, !noalias !40
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 1, i64 0
  store i32 %164, i32* %66, align 8, !alias.scope !40
  %166 = icmp sgt i32 %164, 5
  %167 = sext i32 %164 to i64
  %168 = shl nsw i64 %167, 2
  br i1 %166, label %169, label %172

169:                                              ; preds = %160
  %170 = call i8* @_Znam(i64 %168) #11, !noalias !40
  store i8* %170, i8** %70, align 8, !alias.scope !40
  %171 = bitcast i8* %170 to i32*
  br label %172

172:                                              ; preds = %160, %169
  %173 = phi i32* [ %171, %169 ], [ %68, %160 ]
  %174 = bitcast i32* %173 to i8*
  %175 = bitcast i32* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 %168, i1 false) #10
  br label %176

176:                                              ; preds = %159, %172
  %177 = phi i32 [ 0, %159 ], [ %164, %172 ]
  %178 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %180 = icmp ult %"class.tflite::RuntimeShape"* %178, %179
  br i1 %180, label %181, label %207

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 0
  store i32 %177, i32* %182, align 8
  %183 = icmp sgt i32 %177, 5
  br i1 %183, label %184, label %191

184:                                              ; preds = %181
  %185 = sext i32 %177 to i64
  %186 = shl nsw i64 %185, 2
  %187 = call i8* @_Znam(i64 %186) #11
  %188 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 1, i32 0
  %189 = bitcast i32** %188 to i8**
  store i8* %187, i8** %189, align 8
  %190 = bitcast i8* %187 to i32*
  br label %196

191:                                              ; preds = %181
  %192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 1
  %193 = bitcast %union.anon* %192 to i32*
  %194 = sext i32 %177 to i64
  %195 = shl nsw i64 %194, 2
  br label %196

196:                                              ; preds = %191, %184
  %197 = phi i64 [ %186, %184 ], [ %195, %191 ]
  %198 = phi i32* [ %190, %184 ], [ %193, %191 ]
  %199 = bitcast i32* %198 to i8*
  %200 = load i32, i32* %66, align 8
  %201 = icmp sgt i32 %200, 5
  %202 = load i32*, i32** %73, align 8
  %203 = select i1 %201, i32* %202, i32* %68
  %204 = bitcast i32* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %199, i8* align 4 %204, i64 %197, i1 false) #10
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 1
  %206 = ptrtoint %"class.tflite::RuntimeShape"* %205 to i64
  store i64 %206, i64* %74, align 8
  br label %209

207:                                              ; preds = %176
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %208 = load i32, i32* %66, align 8
  br label %209

209:                                              ; preds = %196, %207
  %210 = phi i32 [ %200, %196 ], [ %208, %207 ]
  %211 = icmp sgt i32 %210, 5
  br i1 %211, label %212, label %217

212:                                              ; preds = %209
  %213 = load i32*, i32** %69, align 8
  %214 = icmp eq i32* %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %212
  %216 = bitcast i32* %213 to i8*
  call void @_ZdaPv(i8* %216) #11
  br label %217

217:                                              ; preds = %209, %212, %215
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %218 = add nuw nsw i64 %84, 1
  %219 = icmp eq i64 %218, %75
  br i1 %219, label %76, label %83

220:                                              ; preds = %287, %58, %76
  ret void

221:                                              ; preds = %287, %77
  %222 = phi i64 [ 0, %77 ], [ %288, %287 ]
  %223 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %224 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %223, i64 %222
  %225 = ptrtoint %"class.tflite::RuntimeShape"* %224 to i64
  %226 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %228 = icmp ult %"class.tflite::RuntimeShape"** %226, %227
  %229 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  br i1 %228, label %230, label %234

230:                                              ; preds = %221
  %231 = bitcast %"class.tflite::RuntimeShape"** %226 to i64*
  store i64 %225, i64* %231, align 8
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %226, i64 1
  %233 = ptrtoint %"class.tflite::RuntimeShape"** %232 to i64
  store i64 %233, i64* %80, align 8
  br label %287

234:                                              ; preds = %221
  %235 = ptrtoint %"class.tflite::RuntimeShape"** %226 to i64
  %236 = load i64, i64* %32, align 8
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 3
  %239 = add nsw i64 %238, 1
  %240 = icmp ugt i64 %239, 2305843009213693951
  br i1 %240, label %241, label %243

241:                                              ; preds = %234
  %242 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %242) #12
  unreachable

243:                                              ; preds = %234
  %244 = sub i64 %229, %236
  %245 = ashr exact i64 %244, 3
  %246 = icmp ult i64 %245, 1152921504606846975
  br i1 %246, label %247, label %255

247:                                              ; preds = %243
  %248 = ashr exact i64 %244, 2
  %249 = icmp ult i64 %248, %239
  %250 = select i1 %249, i64 %239, i64 %248
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %260, label %252

252:                                              ; preds = %247
  %253 = icmp ugt i64 %250, 2305843009213693951
  br i1 %253, label %254, label %255

254:                                              ; preds = %252
  call void @abort() #12
  unreachable

255:                                              ; preds = %252, %243
  %256 = phi i64 [ %250, %252 ], [ 2305843009213693951, %243 ]
  %257 = shl i64 %256, 3
  %258 = call i8* @_Znwm(i64 %257) #11
  %259 = bitcast i8* %258 to %"class.tflite::RuntimeShape"**
  br label %260

260:                                              ; preds = %255, %247
  %261 = phi i64 [ %256, %255 ], [ 0, %247 ]
  %262 = phi %"class.tflite::RuntimeShape"** [ %259, %255 ], [ null, %247 ]
  %263 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %262, i64 %238
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %262, i64 %261
  %265 = ptrtoint %"class.tflite::RuntimeShape"** %264 to i64
  %266 = bitcast %"class.tflite::RuntimeShape"** %263 to i64*
  store i64 %225, i64* %266, align 8
  %267 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 1
  %268 = ptrtoint %"class.tflite::RuntimeShape"** %267 to i64
  %269 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %270 = load i64, i64* %80, align 8
  %271 = ptrtoint %"class.tflite::RuntimeShape"** %269 to i64
  %272 = sub i64 %270, %271
  %273 = ashr exact i64 %272, 3
  %274 = sub nsw i64 0, %273
  %275 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %274
  %276 = ptrtoint %"class.tflite::RuntimeShape"** %275 to i64
  %277 = icmp sgt i64 %272, 0
  br i1 %277, label %278, label %282

278:                                              ; preds = %260
  %279 = bitcast %"class.tflite::RuntimeShape"** %275 to i8*
  %280 = bitcast %"class.tflite::RuntimeShape"** %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 8 %280, i64 %272, i1 false) #10
  %281 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %282

282:                                              ; preds = %278, %260
  %283 = phi %"class.tflite::RuntimeShape"** [ %269, %260 ], [ %281, %278 ]
  store i64 %276, i64* %32, align 8
  store i64 %268, i64* %80, align 8
  store i64 %265, i64* %30, align 8
  %284 = icmp eq %"class.tflite::RuntimeShape"** %283, null
  br i1 %284, label %287, label %285

285:                                              ; preds = %282
  %286 = bitcast %"class.tflite::RuntimeShape"** %283 to i8*
  call void @_ZdlPv(i8* %286) #11
  br label %287

287:                                              ; preds = %230, %282, %285
  %288 = add nuw nsw i64 %222, 1
  %289 = icmp eq i64 %288, %82
  br i1 %289, label %220, label %221
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin14Register_SPLITEv() local_unnamed_addr #4 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin14Register_SPLITEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.tflite::RuntimeShape"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.tflite::RuntimeShape"*
  br i1 %10, label %12, label %93

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.tflite::RuntimeShape"** %13 to i64*
  %15 = icmp ugt i64 %1, 576460752303423487
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 5
  %21 = shl i64 %1, 5
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = bitcast i8* %22 to %"class.tflite::RuntimeShape"*
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 %20
  %25 = ptrtoint %"class.tflite::RuntimeShape"* %24 to i64
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 %1
  %27 = ptrtoint %"class.tflite::RuntimeShape"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.tflite::RuntimeShape"*
  %29 = icmp eq %"class.tflite::RuntimeShape"* %28, %11
  br i1 %29, label %69, label %30

30:                                               ; preds = %17, %50
  %31 = phi %"class.tflite::RuntimeShape"* [ %62, %50 ], [ %24, %17 ]
  %32 = phi %"class.tflite::RuntimeShape"* [ %33, %50 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 -1
  %34 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 0
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  store i32 %36, i32* %34, align 8
  %37 = icmp sgt i32 %36, 5
  br i1 %37, label %38, label %45

38:                                               ; preds = %30
  %39 = sext i32 %36 to i64
  %40 = shl nsw i64 %39, 2
  %41 = tail call i8* @_Znam(i64 %40) #11
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 1, i32 0
  %43 = bitcast i32** %42 to i8**
  store i8* %41, i8** %43, align 8
  %44 = bitcast i8* %41 to i32*
  br label %50

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 1
  %47 = bitcast %union.anon* %46 to i32*
  %48 = sext i32 %36 to i64
  %49 = shl nsw i64 %48, 2
  br label %50

50:                                               ; preds = %45, %38
  %51 = phi i64 [ %40, %38 ], [ %49, %45 ]
  %52 = phi i32* [ %44, %38 ], [ %47, %45 ]
  %53 = bitcast i32* %52 to i8*
  %54 = load i32, i32* %35, align 8
  %55 = icmp sgt i32 %54, 5
  %56 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 -1, i32 1
  %57 = getelementptr inbounds %union.anon, %union.anon* %56, i64 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = bitcast %union.anon* %56 to i32*
  %60 = select i1 %55, i32* %58, i32* %59
  %61 = bitcast i32* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %61, i64 %51, i1 false) #10
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1
  %63 = icmp eq %"class.tflite::RuntimeShape"* %33, %11
  br i1 %63, label %64, label %30

64:                                               ; preds = %50
  %65 = ptrtoint %"class.tflite::RuntimeShape"* %62 to i64
  %66 = load i64, i64* %6, align 8
  %67 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %13, align 8
  %68 = inttoptr i64 %66 to %"class.tflite::RuntimeShape"*
  br label %69

69:                                               ; preds = %17, %64
  %70 = phi %"class.tflite::RuntimeShape"* [ %68, %64 ], [ %28, %17 ]
  %71 = phi %"class.tflite::RuntimeShape"* [ %67, %64 ], [ %11, %17 ]
  %72 = phi i64 [ %65, %64 ], [ %25, %17 ]
  %73 = phi i64 [ %66, %64 ], [ %18, %17 ]
  store i64 %72, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %74 = icmp eq %"class.tflite::RuntimeShape"* %71, %70
  br i1 %74, label %89, label %75

75:                                               ; preds = %69, %87
  %76 = phi %"class.tflite::RuntimeShape"* [ %77, %87 ], [ %71, %69 ]
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %76, i64 -1
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = icmp sgt i32 %79, 5
  br i1 %80, label %81, label %87

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %76, i64 -1, i32 1, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = icmp eq i32* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast i32* %83 to i8*
  tail call void @_ZdaPv(i8* %86) #11
  br label %87

87:                                               ; preds = %85, %81, %75
  %88 = icmp eq %"class.tflite::RuntimeShape"* %77, %70
  br i1 %88, label %89, label %75

89:                                               ; preds = %87, %69
  %90 = icmp eq i64 %73, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %91, %89, %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"*, %"class.tflite::RuntimeShape"* dereferenceable(32)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.tflite::RuntimeShape"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.tflite::RuntimeShape"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.tflite::RuntimeShape"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.tflite::RuntimeShape"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9
  %38 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %35
  %39 = ptrtoint %"class.tflite::RuntimeShape"* %38 to i64
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %40, align 8
  %43 = icmp sgt i32 %42, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %34
  %45 = sext i32 %42 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #11
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %34
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %42 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  %60 = load i32, i32* %41, align 8
  %61 = icmp sgt i32 %60, 5
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %63 = getelementptr inbounds %union.anon, %union.anon* %62, i64 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = bitcast %union.anon* %62 to i32*
  %66 = select i1 %61, i32* %64, i32* %65
  %67 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %67, i64 %57, i1 false) #10
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 1
  %69 = ptrtoint %"class.tflite::RuntimeShape"* %68 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %71 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %70, align 8
  %72 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %3, align 8
  %73 = icmp eq %"class.tflite::RuntimeShape"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %56
  %75 = ptrtoint %"class.tflite::RuntimeShape"* %71 to i64
  br label %113

76:                                               ; preds = %56, %96
  %77 = phi %"class.tflite::RuntimeShape"* [ %108, %96 ], [ %37, %56 ]
  %78 = phi %"class.tflite::RuntimeShape"* [ %79, %96 ], [ %72, %56 ]
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %78, i64 -1
  %80 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 0
  %81 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %79, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %80, align 8
  %83 = icmp sgt i32 %82, 5
  br i1 %83, label %84, label %91

84:                                               ; preds = %76
  %85 = sext i32 %82 to i64
  %86 = shl nsw i64 %85, 2
  %87 = tail call i8* @_Znam(i64 %86) #11
  %88 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 1, i32 0
  %89 = bitcast i32** %88 to i8**
  store i8* %87, i8** %89, align 8
  %90 = bitcast i8* %87 to i32*
  br label %96

91:                                               ; preds = %76
  %92 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 1
  %93 = bitcast %union.anon* %92 to i32*
  %94 = sext i32 %82 to i64
  %95 = shl nsw i64 %94, 2
  br label %96

96:                                               ; preds = %91, %84
  %97 = phi i64 [ %86, %84 ], [ %95, %91 ]
  %98 = phi i32* [ %90, %84 ], [ %93, %91 ]
  %99 = bitcast i32* %98 to i8*
  %100 = load i32, i32* %81, align 8
  %101 = icmp sgt i32 %100, 5
  %102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %78, i64 -1, i32 1
  %103 = getelementptr inbounds %union.anon, %union.anon* %102, i64 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = bitcast %union.anon* %102 to i32*
  %106 = select i1 %101, i32* %104, i32* %105
  %107 = bitcast i32* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 4 %107, i64 %97, i1 false) #10
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1
  %109 = icmp eq %"class.tflite::RuntimeShape"* %79, %71
  br i1 %109, label %110, label %76

110:                                              ; preds = %96
  %111 = load i64, i64* %6, align 8
  %112 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %3, align 8
  br label %113

113:                                              ; preds = %74, %110
  %114 = phi %"class.tflite::RuntimeShape"* [ %71, %74 ], [ %112, %110 ]
  %115 = phi %"class.tflite::RuntimeShape"* [ %37, %74 ], [ %108, %110 ]
  %116 = phi i64 [ %75, %74 ], [ %111, %110 ]
  %117 = ptrtoint %"class.tflite::RuntimeShape"* %115 to i64
  store i64 %117, i64* %6, align 8
  store i64 %69, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %118 = inttoptr i64 %116 to %"class.tflite::RuntimeShape"*
  %119 = icmp eq %"class.tflite::RuntimeShape"* %114, %118
  br i1 %119, label %134, label %120

120:                                              ; preds = %113, %132
  %121 = phi %"class.tflite::RuntimeShape"* [ %122, %132 ], [ %114, %113 ]
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %121, i64 -1
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %122, i64 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = icmp sgt i32 %124, 5
  br i1 %125, label %126, label %132

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %121, i64 -1, i32 1, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = icmp eq i32* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  %131 = bitcast i32* %128 to i8*
  tail call void @_ZdaPv(i8* %131) #11
  br label %132

132:                                              ; preds = %130, %126, %120
  %133 = icmp eq %"class.tflite::RuntimeShape"* %122, %118
  br i1 %133, label %134, label %120

134:                                              ; preds = %132, %113
  %135 = icmp eq i64 %116, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = inttoptr i64 %116 to i8*
  tail call void @_ZdlPv(i8* %137) #11
  br label %138

138:                                              ; preds = %134, %136
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!10 = distinct !{!10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!11 = distinct !{!11, !6}
!12 = distinct !{!12, !6}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!15 = distinct !{!15, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!16 = distinct !{!16, !6}
!17 = distinct !{!17, !6}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!20 = distinct !{!20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!21 = distinct !{!21, !6}
!22 = distinct !{!22, !6}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!25 = distinct !{!25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!26 = distinct !{!26, !6}
!27 = distinct !{!27, !6}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!30 = distinct !{!30, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!33 = distinct !{!33, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!36 = distinct !{!36, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!39 = distinct !{!39, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!42 = distinct !{!42, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
