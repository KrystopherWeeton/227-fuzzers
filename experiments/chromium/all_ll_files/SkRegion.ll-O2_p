; ModuleID = '../../third_party/skia/src/core/SkRegion.cpp'
source_filename = "../../third_party/skia/src/core/SkRegion.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.anon = type { i8, i8 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type { %"struct.std::__1::atomic", i32, i32, i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkRegion::Iterator" = type <{ %class.SkRegion*, i32*, %struct.SkIRect, i8, [7 x i8] }>
%"class.SkRegion::Cliperator" = type <{ %"class.SkRegion::Iterator", %struct.SkIRect, %struct.SkIRect, i8, [7 x i8] }>
%"class.SkRegion::Spanerator" = type <{ i32*, i32, i32, i8, [7 x i8] }>
%class.RgnOper = type <{ i8, i8, [6 x i8], %class.RunArray*, i32, i32, i64, i32, [4 x i8] }>
%class.RunArray = type { [256 x i32], %class.SkAutoTMalloc, i32, i32* }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%class.SkWBuffer = type { i8*, i8*, i8* }
%class.SkRBuffer = type <{ i8*, i8*, i8*, i8, [7 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %struct.SkIRect*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }

$_ZN8SkRegion7RunHead14ensureWritableEv = comdat any

$_ZN7RgnOper7addSpanEiPKiS1_ = comdat any

@.str = private unnamed_addr constant [47 x i8] c"../../third_party/skia/src/core/SkRegionPriv.h\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"Invalid Size\00", align 1
@_ZZL7operatePKiS0_P8RunArrayN8SkRegion2OpEbE14gEmptyScanline = internal constant [4 x i32] [i32 0, i32 0, i32 2147483647, i32 0], align 16
@_ZL9gOpMinMax = internal unnamed_addr constant [4 x %struct.anon] [%struct.anon { i8 1, i8 1 }, %struct.anon { i8 3, i8 3 }, %struct.anon { i8 1, i8 3 }, %struct.anon { i8 1, i8 2 }], align 1

@_ZN8SkRegionC1Ev = hidden unnamed_addr alias void (%class.SkRegion*), void (%class.SkRegion*)* @_ZN8SkRegionC2Ev
@_ZN8SkRegionC1ERKS_ = hidden unnamed_addr alias void (%class.SkRegion*, %class.SkRegion*), void (%class.SkRegion*, %class.SkRegion*)* @_ZN8SkRegionC2ERKS_
@_ZN8SkRegionC1ERK7SkIRect = hidden unnamed_addr alias void (%class.SkRegion*, %struct.SkIRect*), void (%class.SkRegion*, %struct.SkIRect*)* @_ZN8SkRegionC2ERK7SkIRect
@_ZN8SkRegionD1Ev = hidden unnamed_addr alias void (%class.SkRegion*), void (%class.SkRegion*)* @_ZN8SkRegionD2Ev
@_ZN8SkRegion8IteratorC1ERKS_ = hidden unnamed_addr alias void (%"class.SkRegion::Iterator"*, %class.SkRegion*), void (%"class.SkRegion::Iterator"*, %class.SkRegion*)* @_ZN8SkRegion8IteratorC2ERKS_
@_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect = hidden unnamed_addr alias void (%"class.SkRegion::Cliperator"*, %class.SkRegion*, %struct.SkIRect*), void (%"class.SkRegion::Cliperator"*, %class.SkRegion*, %struct.SkIRect*)* @_ZN8SkRegion10CliperatorC2ERKS_RK7SkIRect
@_ZN8SkRegion10SpaneratorC1ERKS_iii = hidden unnamed_addr alias void (%"class.SkRegion::Spanerator"*, %class.SkRegion*, i32, i32, i32), void (%"class.SkRegion::Spanerator"*, %class.SkRegion*, i32, i32, i32)* @_ZN8SkRegion10SpaneratorC2ERKS_iii

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkRegion12RunsAreARectEPKiiP7SkIRect(i32* nocapture readonly, i32, %struct.SkIRect* nocapture) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 7
  br i1 %4, label %5, label %17

5:                                                ; preds = %3
  %6 = getelementptr inbounds i32, i32* %0, i64 3
  %7 = load i32, i32* %6, align 4
  %8 = load i32, i32* %0, align 4
  %9 = getelementptr inbounds i32, i32* %0, i64 4
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds i32, i32* %0, i64 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  store i32 %7, i32* %13, align 4
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  store i32 %8, i32* %14, align 4
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  store i32 %10, i32* %15, align 4
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  store i32 %12, i32* %16, align 4
  br label %17

17:                                               ; preds = %3, %5
  %18 = phi i1 [ true, %5 ], [ false, %3 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRegionC2Ev(%class.SkRegion* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %class.SkRegion* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 16, i1 false) #8
  %3 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRegionC2ERKS_(%class.SkRegion*, %class.SkRegion* readonly dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %3, align 8
  %4 = icmp eq %class.SkRegion* %0, %1
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = bitcast %class.SkRegion* %0 to i8*
  %7 = bitcast %class.SkRegion* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 4 %7, i64 16, i1 false) #8
  %8 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %9 = bitcast %"struct.SkRegion::RunHead"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"struct.SkRegion::RunHead"** %3 to i64*
  store i64 %10, i64* %11, align 8
  switch i64 %10, label %12 [
    i64 -1, label %16
    i64 0, label %16
  ]

12:                                               ; preds = %5
  %13 = inttoptr i64 %10 to %"struct.SkRegion::RunHead"*
  %14 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 seq_cst
  br label %16

16:                                               ; preds = %2, %5, %5, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkRegion9setRegionERKS_(%class.SkRegion*, %class.SkRegion* readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %class.SkRegion* %0, %1
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %6 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %5, align 8
  %7 = ptrtoint %"struct.SkRegion::RunHead"* %6 to i64
  switch i64 %7, label %8 [
    i64 -1, label %15
    i64 0, label %15
  ]

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 seq_cst
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = bitcast %"struct.SkRegion::RunHead"** %5 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_Z7sk_freePv(i8* %14) #8
  br label %15

15:                                               ; preds = %4, %4, %8, %12
  %16 = bitcast %class.SkRegion* %0 to i8*
  %17 = bitcast %class.SkRegion* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 16, i1 false)
  %18 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %19 = bitcast %"struct.SkRegion::RunHead"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.SkRegion::RunHead"** %5 to i64*
  store i64 %20, i64* %21, align 8
  switch i64 %20, label %22 [
    i64 -1, label %26
    i64 0, label %26
  ]

22:                                               ; preds = %15
  %23 = inttoptr i64 %20 to %"struct.SkRegion::RunHead"*
  %24 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 seq_cst
  br label %26

26:                                               ; preds = %15, %15, %2, %22
  %27 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %28 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %27, align 8
  %29 = icmp ne %"struct.SkRegion::RunHead"* %28, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRegionC2ERK7SkIRect(%class.SkRegion* nocapture, %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %3, align 8
  %4 = tail call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %0, %struct.SkIRect* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* nocapture, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  %9 = sub nsw i64 %5, %8
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = sub nsw i64 %12, %15
  %17 = icmp slt i64 %9, 1
  %18 = icmp slt i64 %16, 1
  %19 = or i1 %17, %18
  br i1 %19, label %28, label %20

20:                                               ; preds = %2
  %21 = or i64 %16, %9
  %22 = add nsw i64 %21, 2147483648
  %23 = icmp ugt i64 %22, 4294967295
  %24 = icmp eq i32 %4, 2147483647
  %25 = or i1 %24, %23
  %26 = icmp eq i32 %11, 2147483647
  %27 = or i1 %26, %25
  br i1 %27, label %28, label %41

28:                                               ; preds = %2, %20
  %29 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %30 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %29, align 8
  %31 = ptrtoint %"struct.SkRegion::RunHead"* %30 to i64
  switch i64 %31, label %32 [
    i64 -1, label %39
    i64 0, label %39
  ]

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 seq_cst
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = bitcast %"struct.SkRegion::RunHead"** %29 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_Z7sk_freePv(i8* %38) #8
  br label %39

39:                                               ; preds = %28, %28, %32, %36
  %40 = bitcast %class.SkRegion* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %29, align 8
  br label %55

41:                                               ; preds = %20
  %42 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %43 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %42, align 8
  %44 = ptrtoint %"struct.SkRegion::RunHead"* %43 to i64
  switch i64 %44, label %45 [
    i64 -1, label %52
    i64 0, label %52
  ]

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw sub i32* %46, i32 1 seq_cst
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  %50 = bitcast %"struct.SkRegion::RunHead"** %42 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @_Z7sk_freePv(i8* %51) #8
  br label %52

52:                                               ; preds = %41, %41, %45, %49
  %53 = bitcast %class.SkRegion* %0 to i8*
  %54 = bitcast %struct.SkIRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 4 %54, i64 16, i1 false)
  store %"struct.SkRegion::RunHead"* null, %"struct.SkRegion::RunHead"** %42, align 8
  br label %55

55:                                               ; preds = %52, %39
  %56 = phi i1 [ false, %39 ], [ true, %52 ]
  ret i1 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRegionD2Ev(%class.SkRegion* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %3 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %2, align 8
  %4 = ptrtoint %"struct.SkRegion::RunHead"* %3 to i64
  switch i64 %4, label %5 [
    i64 -1, label %12
    i64 0, label %12
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 seq_cst
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = bitcast %"struct.SkRegion::RunHead"** %2 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRegion8freeRunsEv(%class.SkRegion* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %3 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %2, align 8
  %4 = ptrtoint %"struct.SkRegion::RunHead"* %3 to i64
  switch i64 %4, label %5 [
    i64 -1, label %12
    i64 0, label %12
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 seq_cst
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = bitcast %"struct.SkRegion::RunHead"** %2 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %1, %5, %9
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRegion12allocateRunsEiii(%class.SkRegion* nocapture, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = icmp slt i32 %2, 1
  %6 = icmp slt i32 %3, 2
  %7 = or i1 %5, %6
  %8 = icmp slt i32 %1, 7
  %9 = or i1 %8, %7
  br i1 %9, label %28, label %10

10:                                               ; preds = %4
  %11 = sext i32 %1 to i64
  %12 = shl nsw i64 %11, 2
  %13 = icmp ult i64 %12, 2147483632
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #9
  unreachable

15:                                               ; preds = %10
  %16 = add nuw nsw i64 %12, 16
  %17 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %16, i32 2) #8
  %18 = bitcast i8* %17 to i32*
  store atomic i32 1, i32* %18 seq_cst, align 4
  %19 = getelementptr inbounds i8, i8* %17, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 %1, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %17, i64 12
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 4
  %25 = icmp eq i8* %17, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %15
  %27 = bitcast i8* %17 to %"struct.SkRegion::RunHead"*
  store i32 %2, i32* %22, align 4
  store i32 %3, i32* %24, align 4
  br label %28

28:                                               ; preds = %4, %15, %26
  %29 = phi %"struct.SkRegion::RunHead"* [ null, %4 ], [ %27, %26 ], [ null, %15 ]
  %30 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  store %"struct.SkRegion::RunHead"* %29, %"struct.SkRegion::RunHead"** %30, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRegion12allocateRunsEi(%class.SkRegion* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp slt i32 %1, 7
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = shl nsw i64 %5, 2
  %7 = icmp ult i64 %6, 2147483632
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #9
  unreachable

9:                                                ; preds = %4
  %10 = add nuw nsw i64 %6, 16
  %11 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %10, i32 2) #8
  %12 = bitcast i8* %11 to %"struct.SkRegion::RunHead"*
  %13 = bitcast i8* %11 to i32*
  store atomic i32 1, i32* %13 seq_cst, align 4
  %14 = getelementptr inbounds i8, i8* %11, i64 4
  %15 = bitcast i8* %14 to i32*
  store i32 %1, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %11, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 4
  br label %20

20:                                               ; preds = %2, %9
  %21 = phi %"struct.SkRegion::RunHead"* [ %12, %9 ], [ null, %2 ]
  %22 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  store %"struct.SkRegion::RunHead"* %21, %"struct.SkRegion::RunHead"** %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRegion12allocateRunsERKNS_7RunHeadE(%class.SkRegion* nocapture, %"struct.SkRegion::RunHead"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %6, 1
  %10 = icmp slt i32 %8, 2
  %11 = or i1 %9, %10
  %12 = icmp slt i32 %4, 7
  %13 = or i1 %12, %11
  br i1 %13, label %32, label %14

14:                                               ; preds = %2
  %15 = sext i32 %4 to i64
  %16 = shl nsw i64 %15, 2
  %17 = icmp ult i64 %16, 2147483632
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #9
  unreachable

19:                                               ; preds = %14
  %20 = add nuw nsw i64 %16, 16
  %21 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %20, i32 2) #8
  %22 = bitcast i8* %21 to i32*
  store atomic i32 1, i32* %22 seq_cst, align 4
  %23 = getelementptr inbounds i8, i8* %21, i64 4
  %24 = bitcast i8* %23 to i32*
  store i32 %4, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %21, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %21, i64 12
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 4
  %29 = icmp eq i8* %21, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %19
  %31 = bitcast i8* %21 to %"struct.SkRegion::RunHead"*
  store i32 %6, i32* %26, align 4
  store i32 %8, i32* %28, align 4
  br label %32

32:                                               ; preds = %2, %19, %30
  %33 = phi %"struct.SkRegion::RunHead"* [ null, %2 ], [ %31, %30 ], [ null, %19 ]
  %34 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  store %"struct.SkRegion::RunHead"* %33, %"struct.SkRegion::RunHead"** %34, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* returned, %class.SkRegion* readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %class.SkRegion* %0, %1
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %6 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %5, align 8
  %7 = ptrtoint %"struct.SkRegion::RunHead"* %6 to i64
  switch i64 %7, label %8 [
    i64 -1, label %15
    i64 0, label %15
  ]

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 seq_cst
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = bitcast %"struct.SkRegion::RunHead"** %5 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_Z7sk_freePv(i8* %14) #8
  br label %15

15:                                               ; preds = %12, %8, %4, %4
  %16 = bitcast %class.SkRegion* %0 to i8*
  %17 = bitcast %class.SkRegion* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 16, i1 false) #8
  %18 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %19 = bitcast %"struct.SkRegion::RunHead"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.SkRegion::RunHead"** %5 to i64*
  store i64 %20, i64* %21, align 8
  switch i64 %20, label %22 [
    i64 -1, label %26
    i64 0, label %26
  ]

22:                                               ; preds = %15
  %23 = inttoptr i64 %20 to %"struct.SkRegion::RunHead"*
  %24 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 seq_cst
  br label %26

26:                                               ; preds = %2, %15, %15, %22
  ret %class.SkRegion* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRegion4swapERS_(%class.SkRegion* nocapture, %class.SkRegion* nocapture dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %class.SkRegion* %0 to <4 x i32>*
  %4 = load <4 x i32>, <4 x i32>* %3, align 4
  %5 = bitcast %class.SkRegion* %0 to i8*
  %6 = bitcast %class.SkRegion* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 16, i1 false) #8
  %7 = bitcast %class.SkRegion* %1 to <4 x i32>*
  store <4 x i32> %4, <4 x i32>* %7, align 4
  %8 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %10 = bitcast %"struct.SkRegion::RunHead"** %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.SkRegion::RunHead"** %9 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8SkRegion23computeRegionComplexityEv(%class.SkRegion* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %3 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %2, align 8
  %4 = ptrtoint %"struct.SkRegion::RunHead"* %3 to i64
  switch i64 %4, label %5 [
    i64 -1, label %9
    i64 0, label %8
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %3, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  br label %9

8:                                                ; preds = %1
  br label %9

9:                                                ; preds = %1, %8, %5
  %10 = phi i32 [ %7, %5 ], [ 0, %1 ], [ 1, %8 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %3 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %2, align 8
  %4 = ptrtoint %"struct.SkRegion::RunHead"* %3 to i64
  switch i64 %4, label %5 [
    i64 -1, label %12
    i64 0, label %12
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 seq_cst
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = bitcast %"struct.SkRegion::RunHead"** %2 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %1, %5, %9
  %13 = bitcast %class.SkRegion* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %2, align 8
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkRegion2opERK7SkIRectRKS_NS_2OpE(%class.SkRegion*, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkRegion* dereferenceable(24), i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %class.SkRegion, align 8
  %6 = bitcast %class.SkRegion* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %5, i64 0, i32 1
  %8 = bitcast %class.SkRegion* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %7, align 8
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = sub nsw i64 %11, %14
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = sub nsw i64 %18, %21
  %23 = icmp slt i64 %15, 1
  %24 = icmp slt i64 %22, 1
  %25 = or i1 %23, %24
  br i1 %25, label %34, label %26

26:                                               ; preds = %4
  %27 = or i64 %22, %15
  %28 = add nsw i64 %27, 2147483648
  %29 = icmp ugt i64 %28, 4294967295
  %30 = icmp eq i32 %10, 2147483647
  %31 = or i1 %30, %29
  %32 = icmp eq i32 %17, 2147483647
  %33 = or i1 %32, %31
  br i1 %33, label %34, label %35

34:                                               ; preds = %4, %26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #8
  br label %37

35:                                               ; preds = %26
  %36 = bitcast %struct.SkIRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 4 %36, i64 16, i1 false) #8
  br label %37

37:                                               ; preds = %34, %35
  %38 = phi %"struct.SkRegion::RunHead"* [ null, %35 ], [ inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %34 ]
  store %"struct.SkRegion::RunHead"* %38, %"struct.SkRegion::RunHead"** %7, align 8
  %39 = call zeroext i1 @_ZN8SkRegion4OperERKS_S1_NS_2OpEPS_(%class.SkRegion* nonnull dereferenceable(24) %5, %class.SkRegion* dereferenceable(24) %2, i32 %3, %class.SkRegion* %0) #8
  %40 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %7, align 8
  %41 = ptrtoint %"struct.SkRegion::RunHead"* %40 to i64
  switch i64 %41, label %42 [
    i64 -1, label %49
    i64 0, label %49
  ]

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 seq_cst
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %49

46:                                               ; preds = %42
  %47 = bitcast %"struct.SkRegion::RunHead"** %7 to i8**
  %48 = load i8*, i8** %47, align 8
  call void @_Z7sk_freePv(i8* %48) #8
  br label %49

49:                                               ; preds = %37, %37, %42, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret i1 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkRegion2opERKS_S1_NS_2OpE(%class.SkRegion*, %class.SkRegion* dereferenceable(24), %class.SkRegion* dereferenceable(24), i32) local_unnamed_addr #1 align 2 {
  %5 = tail call zeroext i1 @_ZN8SkRegion4OperERKS_S1_NS_2OpEPS_(%class.SkRegion* dereferenceable(24) %1, %class.SkRegion* dereferenceable(24) %2, i32 %3, %class.SkRegion* %0)
  ret i1 %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion*, %class.SkRegion* dereferenceable(24), %struct.SkIRect* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %class.SkRegion, align 8
  %6 = bitcast %class.SkRegion* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %5, i64 0, i32 1
  %8 = bitcast %class.SkRegion* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %7, align 8
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = sub nsw i64 %11, %14
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = sub nsw i64 %18, %21
  %23 = icmp slt i64 %15, 1
  %24 = icmp slt i64 %22, 1
  %25 = or i1 %23, %24
  br i1 %25, label %34, label %26

26:                                               ; preds = %4
  %27 = or i64 %22, %15
  %28 = add nsw i64 %27, 2147483648
  %29 = icmp ugt i64 %28, 4294967295
  %30 = icmp eq i32 %10, 2147483647
  %31 = or i1 %30, %29
  %32 = icmp eq i32 %17, 2147483647
  %33 = or i1 %32, %31
  br i1 %33, label %34, label %35

34:                                               ; preds = %4, %26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #8
  br label %37

35:                                               ; preds = %26
  %36 = bitcast %struct.SkIRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 4 %36, i64 16, i1 false) #8
  br label %37

37:                                               ; preds = %34, %35
  %38 = phi %"struct.SkRegion::RunHead"* [ null, %35 ], [ inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %34 ]
  store %"struct.SkRegion::RunHead"* %38, %"struct.SkRegion::RunHead"** %7, align 8
  %39 = call zeroext i1 @_ZN8SkRegion4OperERKS_S1_NS_2OpEPS_(%class.SkRegion* dereferenceable(24) %1, %class.SkRegion* nonnull dereferenceable(24) %5, i32 %3, %class.SkRegion* %0) #8
  %40 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %7, align 8
  %41 = ptrtoint %"struct.SkRegion::RunHead"* %40 to i64
  switch i64 %41, label %42 [
    i64 -1, label %49
    i64 0, label %49
  ]

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 seq_cst
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %49

46:                                               ; preds = %42
  %47 = bitcast %"struct.SkRegion::RunHead"** %7 to i8**
  %48 = load i8*, i8** %47, align 8
  call void @_Z7sk_freePv(i8* %48) #8
  br label %49

49:                                               ; preds = %37, %37, %42, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret i1 %39
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK8SkRegion20count_runtype_valuesEPiS0_(%class.SkRegion* nocapture readonly, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %5 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %4, align 8
  %6 = icmp eq %"struct.SkRegion::RunHead"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %5, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = shl nsw i32 %9, 1
  br label %11

11:                                               ; preds = %3, %7
  %12 = phi i32 [ %10, %7 ], [ 2, %3 ]
  %13 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %1, align 4
  %15 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %2, align 4
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkRegion7setRunsEPii(%class.SkRegion* nocapture, i32*, i32) local_unnamed_addr #1 align 2 {
  %4 = icmp slt i32 %2, 3
  br i1 %4, label %5, label %18

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %7 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %6, align 8
  %8 = ptrtoint %"struct.SkRegion::RunHead"* %7 to i64
  switch i64 %8, label %9 [
    i64 -1, label %16
    i64 0, label %16
  ]

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 seq_cst
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = bitcast %"struct.SkRegion::RunHead"** %6 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_Z7sk_freePv(i8* %15) #8
  br label %16

16:                                               ; preds = %5, %5, %9, %13
  %17 = bitcast %class.SkRegion* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %6, align 8
  br label %176

18:                                               ; preds = %3
  %19 = icmp sgt i32 %2, 7
  br i1 %19, label %20, label %44

20:                                               ; preds = %18
  %21 = sext i32 %2 to i64
  %22 = getelementptr inbounds i32, i32* %1, i64 %21
  %23 = getelementptr inbounds i32, i32* %1, i64 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 2147483647
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds i32, i32* %1, i64 1
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %23, align 4
  br label %29

29:                                               ; preds = %26, %20
  %30 = phi i32* [ %23, %26 ], [ %1, %20 ]
  %31 = getelementptr inbounds i32, i32* %22, i64 -5
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 2147483647
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = getelementptr inbounds i32, i32* %22, i64 -4
  store i32 2147483647, i32* %35, align 4
  %36 = getelementptr inbounds i32, i32* %22, i64 -3
  br label %37

37:                                               ; preds = %34, %29
  %38 = phi i32* [ %36, %34 ], [ %22, %29 ]
  %39 = ptrtoint i32* %38 to i64
  %40 = ptrtoint i32* %30 to i64
  %41 = sub i64 %39, %40
  %42 = lshr exact i64 %41, 2
  %43 = trunc i64 %42 to i32
  br label %44

44:                                               ; preds = %37, %18
  %45 = phi i32* [ %30, %37 ], [ %1, %18 ]
  %46 = phi i32 [ %43, %37 ], [ %2, %18 ]
  %47 = icmp eq i32 %46, 7
  br i1 %47, label %48, label %62

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0
  %50 = getelementptr inbounds i32, i32* %45, i64 3
  %51 = load i32, i32* %50, align 4
  %52 = load i32, i32* %45, align 4
  %53 = getelementptr inbounds i32, i32* %45, i64 4
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds i32, i32* %45, i64 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 0
  store i32 %51, i32* %57, align 4
  %58 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 1
  store i32 %52, i32* %58, align 4
  %59 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 2
  store i32 %54, i32* %59, align 4
  %60 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 3
  store i32 %56, i32* %60, align 4
  %61 = tail call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %0, %struct.SkIRect* dereferenceable(16) %49)
  br label %176

62:                                               ; preds = %44
  %63 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %64 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %63, align 8
  %65 = ptrtoint %"struct.SkRegion::RunHead"* %64 to i64
  %66 = ptrtoint %"struct.SkRegion::RunHead"* %64 to i64
  switch i64 %66, label %67 [
    i64 -1, label %79
    i64 0, label %79
  ]

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %64, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %46
  br i1 %70, label %99, label %71

71:                                               ; preds = %67
  switch i64 %65, label %72 [
    i64 -1, label %79
    i64 0, label %79
  ]

72:                                               ; preds = %71
  %73 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw sub i32* %73, i32 1 seq_cst
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  %77 = bitcast %"struct.SkRegion::RunHead"** %63 to i8**
  %78 = load i8*, i8** %77, align 8
  tail call void @_Z7sk_freePv(i8* %78) #8
  br label %79

79:                                               ; preds = %62, %62, %71, %71, %72, %76
  %80 = icmp slt i32 %46, 7
  br i1 %80, label %97, label %81

81:                                               ; preds = %79
  %82 = sext i32 %46 to i64
  %83 = shl nsw i64 %82, 2
  %84 = icmp ult i64 %83, 2147483632
  br i1 %84, label %86, label %85

85:                                               ; preds = %81
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #9
  unreachable

86:                                               ; preds = %81
  %87 = add nuw nsw i64 %83, 16
  %88 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %87, i32 2) #8
  %89 = bitcast i8* %88 to %"struct.SkRegion::RunHead"*
  %90 = bitcast i8* %88 to i32*
  store atomic i32 1, i32* %90 seq_cst, align 4
  %91 = getelementptr inbounds i8, i8* %88, i64 4
  %92 = bitcast i8* %91 to i32*
  store i32 %46, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %88, i64 8
  %94 = bitcast i8* %93 to i32*
  store i32 0, i32* %94, align 4
  %95 = getelementptr inbounds i8, i8* %88, i64 12
  %96 = bitcast i8* %95 to i32*
  store i32 0, i32* %96, align 4
  br label %97

97:                                               ; preds = %79, %86
  %98 = phi %"struct.SkRegion::RunHead"* [ %89, %86 ], [ null, %79 ]
  store %"struct.SkRegion::RunHead"* %98, %"struct.SkRegion::RunHead"** %63, align 8
  br label %99

99:                                               ; preds = %67, %97
  %100 = phi %"struct.SkRegion::RunHead"* [ %64, %67 ], [ %98, %97 ]
  %101 = tail call %"struct.SkRegion::RunHead"* @_ZN8SkRegion7RunHead14ensureWritableEv(%"struct.SkRegion::RunHead"* %100)
  store %"struct.SkRegion::RunHead"* %101, %"struct.SkRegion::RunHead"** %63, align 8
  %102 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %101, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = bitcast i32* %102 to i8*
  %104 = bitcast i32* %45 to i8*
  %105 = sext i32 %46 to i64
  %106 = shl nsw i64 %105, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 %106, i1 false)
  %107 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %63, align 8
  %108 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %107, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds i32, i32* %108, i64 1
  %110 = load i32, i32* %108, align 4
  %111 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 1
  store i32 %110, i32* %111, align 4
  br label %112

112:                                              ; preds = %135, %99
  %113 = phi i32* [ %109, %99 ], [ %140, %135 ]
  %114 = phi i32 [ 0, %99 ], [ %119, %135 ]
  %115 = phi i32 [ 0, %99 ], [ %137, %135 ]
  %116 = phi i32 [ 2147483647, %99 ], [ %138, %135 ]
  %117 = phi i32 [ -2147483647, %99 ], [ %139, %135 ]
  %118 = getelementptr inbounds i32, i32* %113, i64 1
  %119 = add nuw nsw i32 %114, 1
  %120 = getelementptr inbounds i32, i32* %113, i64 2
  %121 = load i32, i32* %118, align 4
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %112
  %124 = load i32, i32* %120, align 4
  %125 = icmp sgt i32 %116, %124
  %126 = select i1 %125, i32 %124, i32 %116
  %127 = shl nsw i32 %121, 1
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i32, i32* %120, i64 %128
  %130 = getelementptr inbounds i32, i32* %129, i64 -1
  %131 = load i32, i32* %130, align 4
  %132 = icmp slt i32 %117, %131
  %133 = select i1 %132, i32 %131, i32 %117
  %134 = add nsw i32 %121, %115
  br label %135

135:                                              ; preds = %123, %112
  %136 = phi i32* [ %129, %123 ], [ %120, %112 ]
  %137 = phi i32 [ %134, %123 ], [ %115, %112 ]
  %138 = phi i32 [ %126, %123 ], [ %116, %112 ]
  %139 = phi i32 [ %133, %123 ], [ %117, %112 ]
  %140 = getelementptr inbounds i32, i32* %136, i64 1
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 2147483647
  br i1 %142, label %143, label %112

143:                                              ; preds = %135
  %144 = load i32, i32* %113, align 4
  %145 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %107, i64 0, i32 2
  store i32 %119, i32* %145, align 4
  %146 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %107, i64 0, i32 3
  store i32 %137, i32* %146, align 4
  %147 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 0
  store i32 %138, i32* %147, align 4
  %148 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 2
  store i32 %139, i32* %148, align 4
  %149 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 3
  store i32 %144, i32* %149, align 4
  %150 = sext i32 %139 to i64
  %151 = sext i32 %138 to i64
  %152 = sub nsw i64 %150, %151
  %153 = sext i32 %144 to i64
  %154 = load i32, i32* %111, align 4
  %155 = sext i32 %154 to i64
  %156 = sub nsw i64 %153, %155
  %157 = icmp slt i64 %152, 1
  %158 = icmp slt i64 %156, 1
  %159 = or i1 %157, %158
  br i1 %159, label %164, label %160

160:                                              ; preds = %143
  %161 = or i64 %156, %152
  %162 = add nsw i64 %161, 2147483648
  %163 = icmp ugt i64 %162, 4294967295
  br i1 %163, label %164, label %176

164:                                              ; preds = %143, %160
  %165 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %63, align 8
  %166 = ptrtoint %"struct.SkRegion::RunHead"* %165 to i64
  switch i64 %166, label %167 [
    i64 -1, label %174
    i64 0, label %174
  ]

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %165, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = atomicrmw sub i32* %168, i32 1 seq_cst
  %170 = icmp eq i32 %169, 1
  br i1 %170, label %171, label %174

171:                                              ; preds = %167
  %172 = bitcast %"struct.SkRegion::RunHead"** %63 to i8**
  %173 = load i8*, i8** %172, align 8
  tail call void @_Z7sk_freePv(i8* %173) #8
  br label %174

174:                                              ; preds = %164, %164, %167, %171
  %175 = bitcast %class.SkRegion* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %175, i8 0, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %63, align 8
  br label %176

176:                                              ; preds = %160, %174, %48, %16
  %177 = phi i1 [ false, %16 ], [ %61, %48 ], [ false, %174 ], [ true, %160 ]
  ret i1 %177
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.SkRegion::RunHead"* @_ZN8SkRegion7RunHead14ensureWritableEv(%"struct.SkRegion::RunHead"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 seq_cst, align 4
  %4 = icmp sgt i32 %3, 1
  br i1 %4, label %5, label %48

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %9, 1
  %13 = icmp slt i32 %11, 2
  %14 = or i1 %12, %13
  %15 = icmp slt i32 %7, 7
  %16 = or i1 %15, %14
  br i1 %16, label %35, label %17

17:                                               ; preds = %5
  %18 = sext i32 %7 to i64
  %19 = shl nsw i64 %18, 2
  %20 = icmp ult i64 %19, 2147483632
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #9
  unreachable

22:                                               ; preds = %17
  %23 = add nuw nsw i64 %19, 16
  %24 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %23, i32 2) #8
  %25 = bitcast i8* %24 to i32*
  store atomic i32 1, i32* %25 seq_cst, align 4
  %26 = getelementptr inbounds i8, i8* %24, i64 4
  %27 = bitcast i8* %26 to i32*
  store i32 %7, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %24, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %24, i64 12
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 4
  %32 = icmp eq i8* %24, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %22
  %34 = bitcast i8* %24 to %"struct.SkRegion::RunHead"*
  store i32 %9, i32* %29, align 4
  store i32 %11, i32* %31, align 4
  br label %35

35:                                               ; preds = %5, %22, %33
  %36 = phi %"struct.SkRegion::RunHead"* [ null, %5 ], [ %34, %33 ], [ null, %22 ]
  %37 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %36, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast i32* %37 to i8*
  %39 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast i32* %39 to i8*
  %41 = load i32, i32* %6, align 4
  %42 = sext i32 %41 to i64
  %43 = shl nsw i64 %42, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %40, i64 %43, i1 false)
  %44 = atomicrmw sub i32* %2, i32 1 seq_cst
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %35
  %47 = bitcast %"struct.SkRegion::RunHead"* %0 to i8*
  tail call void @_Z7sk_freePv(i8* %47) #8
  br label %48

48:                                               ; preds = %35, %46, %1
  %49 = phi %"struct.SkRegion::RunHead"* [ %36, %46 ], [ %36, %35 ], [ %0, %1 ]
  ret %"struct.SkRegion::RunHead"* %49
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8SkRegion13BuildRectRunsERK7SkIRectPi(%struct.SkIRect* nocapture readonly dereferenceable(16), i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  store i32 %4, i32* %1, align 4
  %5 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %6, i32* %7, align 4
  %8 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds i32, i32* %1, i64 3
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i32, i32* %1, i64 4
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds i32, i32* %1, i64 5
  store i32 2147483647, i32* %15, align 4
  %16 = getelementptr inbounds i32, i32* %1, i64 6
  store i32 2147483647, i32* %16, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8SkRegion8containsEii(%class.SkRegion* nocapture readonly, i32, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, %1
  br i1 %6, label %49, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, %1
  br i1 %10, label %11, label %49

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, %2
  br i1 %14, label %49, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, %2
  br i1 %18, label %19, label %49

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %21 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %20, align 8
  %22 = icmp eq %"struct.SkRegion::RunHead"* %21, null
  br i1 %22, label %49, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %21, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds i32, i32* %24, i64 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %2
  br i1 %27, label %38, label %28

28:                                               ; preds = %23, %28
  %29 = phi i32* [ %35, %28 ], [ %25, %23 ]
  %30 = getelementptr inbounds i32, i32* %29, i64 1
  %31 = load i32, i32* %30, align 4
  %32 = shl i32 %31, 1
  %33 = add nsw i32 %32, 3
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %29, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, %2
  br i1 %37, label %38, label %28

38:                                               ; preds = %28, %23
  %39 = phi i32* [ %25, %23 ], [ %35, %28 ]
  br label %40

40:                                               ; preds = %38, %45
  %41 = phi i32* [ %42, %45 ], [ %39, %38 ]
  %42 = getelementptr inbounds i32, i32* %41, i64 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, %1
  br i1 %44, label %49, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds i32, i32* %41, i64 3
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, %1
  br i1 %48, label %49, label %40

49:                                               ; preds = %45, %40, %3, %7, %11, %19, %15
  %50 = phi i1 [ false, %15 ], [ true, %19 ], [ false, %11 ], [ false, %7 ], [ false, %3 ], [ false, %40 ], [ true, %45 ]
  ret i1 %50
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8SkRegion8containsERK7SkIRect(%class.SkRegion* nocapture readonly, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  %9 = sub nsw i64 %5, %8
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = sub nsw i64 %12, %15
  %17 = icmp slt i64 %9, 1
  %18 = icmp slt i64 %16, 1
  %19 = or i1 %17, %18
  br i1 %19, label %97, label %20

20:                                               ; preds = %2
  %21 = or i64 %16, %9
  %22 = add nsw i64 %21, 2147483648
  %23 = icmp ugt i64 %22, 4294967295
  br i1 %23, label %97, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = sub nsw i64 %27, %30
  %32 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = sub nsw i64 %34, %37
  %39 = icmp slt i64 %31, 1
  %40 = icmp slt i64 %38, 1
  %41 = or i1 %39, %40
  br i1 %41, label %97, label %42

42:                                               ; preds = %24
  %43 = or i64 %38, %31
  %44 = add nsw i64 %43, 2147483648
  %45 = icmp ugt i64 %44, 4294967295
  %46 = icmp sgt i32 %29, %7
  %47 = or i1 %46, %45
  %48 = icmp sgt i32 %36, %14
  %49 = or i1 %48, %47
  %50 = icmp slt i32 %26, %4
  %51 = or i1 %50, %49
  %52 = icmp sge i32 %33, %11
  %53 = xor i1 %51, true
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %97

55:                                               ; preds = %42
  %56 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %57 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %56, align 8
  %58 = icmp eq %"struct.SkRegion::RunHead"* %57, null
  br i1 %58, label %97, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %57, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds i32, i32* %60, i64 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, %14
  br i1 %63, label %74, label %64

64:                                               ; preds = %59, %64
  %65 = phi i32* [ %71, %64 ], [ %61, %59 ]
  %66 = getelementptr inbounds i32, i32* %65, i64 1
  %67 = load i32, i32* %66, align 4
  %68 = shl i32 %67, 1
  %69 = add nsw i32 %68, 3
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, i32* %65, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, %14
  br i1 %73, label %74, label %64

74:                                               ; preds = %64, %59
  %75 = phi i32* [ %61, %59 ], [ %71, %64 ]
  br label %76

76:                                               ; preds = %74, %90
  %77 = phi i32* [ %96, %90 ], [ %75, %74 ]
  br label %78

78:                                               ; preds = %83, %76
  %79 = phi i32* [ %77, %76 ], [ %80, %83 ]
  %80 = getelementptr inbounds i32, i32* %79, i64 2
  %81 = load i32, i32* %80, align 4
  %82 = icmp sgt i32 %81, %7
  br i1 %82, label %97, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds i32, i32* %79, i64 3
  %85 = load i32, i32* %84, align 4
  %86 = icmp slt i32 %85, %4
  br i1 %86, label %78, label %87

87:                                               ; preds = %83
  %88 = load i32, i32* %77, align 4
  %89 = icmp sgt i32 %11, %88
  br i1 %89, label %90, label %97

90:                                               ; preds = %87
  %91 = getelementptr inbounds i32, i32* %77, i64 1
  %92 = load i32, i32* %91, align 4
  %93 = shl nsw i32 %92, 1
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i32, i32* %77, i64 3
  %96 = getelementptr inbounds i32, i32* %95, i64 %94
  br label %76

97:                                               ; preds = %87, %78, %2, %20, %24, %55, %42
  %98 = phi i1 [ false, %42 ], [ true, %55 ], [ false, %24 ], [ false, %20 ], [ false, %2 ], [ false, %78 ], [ true, %87 ]
  ret i1 %98
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkRegion8containsERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %4 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %3, align 8
  %5 = icmp eq %"struct.SkRegion::RunHead"* %4, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %5, label %73, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %8 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %7, align 8
  %9 = icmp eq %"struct.SkRegion::RunHead"* %8, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %9, label %73, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0
  %12 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = sub nsw i64 %14, %17
  %19 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub nsw i64 %21, %24
  %26 = icmp slt i64 %18, 1
  %27 = icmp slt i64 %25, 1
  %28 = or i1 %26, %27
  br i1 %28, label %73, label %29

29:                                               ; preds = %10
  %30 = or i64 %25, %18
  %31 = add nsw i64 %30, 2147483648
  %32 = icmp ugt i64 %31, 4294967295
  br i1 %32, label %73, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = sub nsw i64 %36, %39
  %41 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = sub nsw i64 %43, %46
  %48 = icmp slt i64 %40, 1
  %49 = icmp slt i64 %47, 1
  %50 = or i1 %48, %49
  br i1 %50, label %73, label %51

51:                                               ; preds = %33
  %52 = or i64 %47, %40
  %53 = add nsw i64 %52, 2147483648
  %54 = icmp ugt i64 %53, 4294967295
  %55 = icmp sgt i32 %38, %16
  %56 = or i1 %55, %54
  %57 = icmp sgt i32 %45, %23
  %58 = or i1 %57, %56
  %59 = icmp slt i32 %35, %13
  %60 = or i1 %59, %58
  %61 = icmp sge i32 %42, %20
  %62 = xor i1 %60, true
  %63 = and i1 %61, %62
  br i1 %63, label %64, label %73

64:                                               ; preds = %51
  %65 = icmp eq %"struct.SkRegion::RunHead"* %4, null
  br i1 %65, label %73, label %66

66:                                               ; preds = %64
  %67 = icmp eq %"struct.SkRegion::RunHead"* %8, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = tail call zeroext i1 @_ZNK8SkRegion8containsERK7SkIRect(%class.SkRegion* %0, %struct.SkIRect* dereferenceable(16) %11)
  br label %73

70:                                               ; preds = %66
  %71 = tail call zeroext i1 @_ZN8SkRegion4OperERKS_S1_NS_2OpEPS_(%class.SkRegion* dereferenceable(24) %1, %class.SkRegion* dereferenceable(24) %0, i32 0, %class.SkRegion* null)
  %72 = xor i1 %71, true
  br label %73

73:                                               ; preds = %10, %29, %33, %64, %2, %6, %51, %70, %68
  %74 = phi i1 [ %69, %68 ], [ %72, %70 ], [ false, %51 ], [ false, %6 ], [ false, %2 ], [ true, %64 ], [ false, %33 ], [ false, %29 ], [ false, %10 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkRegion4OperERKS_S1_NS_2OpEPS_(%class.SkRegion* dereferenceable(24), %class.SkRegion* dereferenceable(24), i32, %class.SkRegion*) local_unnamed_addr #1 align 2 {
  %5 = alloca %struct.SkIRect, align 4
  %6 = alloca %class.RgnOper, align 8
  %7 = alloca %struct.SkIRect, align 4
  %8 = alloca [7 x i32], align 16
  %9 = alloca [7 x i32], align 16
  %10 = alloca %class.RunArray, align 8
  %11 = icmp eq i32 %2, 5
  br i1 %11, label %12, label %43

12:                                               ; preds = %4
  %13 = icmp eq %class.SkRegion* %3, null
  %14 = icmp eq %class.SkRegion* %3, %1
  %15 = or i1 %13, %14
  br i1 %15, label %38, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %18 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %17, align 8
  %19 = ptrtoint %"struct.SkRegion::RunHead"* %18 to i64
  switch i64 %19, label %20 [
    i64 -1, label %27
    i64 0, label %27
  ]

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 seq_cst
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = bitcast %"struct.SkRegion::RunHead"** %17 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_Z7sk_freePv(i8* %26) #8
  br label %27

27:                                               ; preds = %24, %20, %16, %16
  %28 = bitcast %class.SkRegion* %3 to i8*
  %29 = bitcast %class.SkRegion* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 4 %29, i64 16, i1 false) #8
  %30 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %31 = bitcast %"struct.SkRegion::RunHead"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"struct.SkRegion::RunHead"** %17 to i64*
  store i64 %32, i64* %33, align 8
  switch i64 %32, label %34 [
    i64 -1, label %38
    i64 0, label %38
  ]

34:                                               ; preds = %27
  %35 = inttoptr i64 %32 to %"struct.SkRegion::RunHead"*
  %36 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 seq_cst
  br label %38

38:                                               ; preds = %12, %27, %27, %34
  %39 = phi %class.SkRegion* [ %3, %27 ], [ %3, %27 ], [ %3, %34 ], [ %1, %12 ]
  %40 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %39, i64 0, i32 1
  %41 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %40, align 8
  %42 = icmp ne %"struct.SkRegion::RunHead"* %41, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br label %907

43:                                               ; preds = %4
  %44 = ptrtoint %class.SkRegion* %0 to i64
  %45 = ptrtoint %class.SkRegion* %1 to i64
  %46 = icmp eq i32 %2, 4
  %47 = select i1 %46, i64 %45, i64 %44
  %48 = select i1 %46, i64 %44, i64 %45
  %49 = select i1 %46, i32 0, i32 %2
  %50 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #8
  %51 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 0
  %52 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 1
  %53 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 2
  %54 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 3
  %55 = inttoptr i64 %47 to %class.SkRegion*
  %56 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 1
  %57 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %57, i8 -86, i64 16, i1 false)
  %58 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %56, align 8
  %59 = icmp eq %"struct.SkRegion::RunHead"* %58, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %60 = inttoptr i64 %48 to %class.SkRegion*
  %61 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 1
  %62 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %61, align 8
  %63 = icmp eq %"struct.SkRegion::RunHead"* %62, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %64 = icmp eq %"struct.SkRegion::RunHead"* %58, null
  %65 = icmp eq %"struct.SkRegion::RunHead"* %62, null
  switch i32 %49, label %905 [
    i32 0, label %66
    i32 1, label %158
    i32 2, label %404
    i32 3, label %634
  ]

66:                                               ; preds = %43
  br i1 %59, label %67, label %82

67:                                               ; preds = %66
  %68 = icmp eq %class.SkRegion* %3, null
  br i1 %68, label %905, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %71 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %70, align 8
  %72 = ptrtoint %"struct.SkRegion::RunHead"* %71 to i64
  switch i64 %72, label %73 [
    i64 -1, label %80
    i64 0, label %80
  ]

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw sub i32* %74, i32 1 seq_cst
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %80

77:                                               ; preds = %73
  %78 = bitcast %"struct.SkRegion::RunHead"** %70 to i8**
  %79 = load i8*, i8** %78, align 8
  tail call void @_Z7sk_freePv(i8* %79) #8
  br label %80

80:                                               ; preds = %77, %73, %69, %69
  %81 = bitcast %class.SkRegion* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %81, i8 0, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %70, align 8
  br label %905

82:                                               ; preds = %66
  br i1 %63, label %88, label %83

83:                                               ; preds = %82
  %84 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0
  %85 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0
  %86 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %86, i8 -86, i64 16, i1 false) #8
  %87 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %5, %struct.SkIRect* dereferenceable(16) %84, %struct.SkIRect* dereferenceable(16) %85) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #8
  br i1 %87, label %118, label %88

88:                                               ; preds = %83, %82
  %89 = icmp eq %class.SkRegion* %3, null
  br i1 %89, label %113, label %90

90:                                               ; preds = %88
  %91 = icmp eq %class.SkRegion* %55, %3
  br i1 %91, label %113, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %94 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %93, align 8
  %95 = ptrtoint %"struct.SkRegion::RunHead"* %94 to i64
  switch i64 %95, label %96 [
    i64 -1, label %103
    i64 0, label %103
  ]

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw sub i32* %97, i32 1 seq_cst
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %103

100:                                              ; preds = %96
  %101 = bitcast %"struct.SkRegion::RunHead"** %93 to i8**
  %102 = load i8*, i8** %101, align 8
  call void @_Z7sk_freePv(i8* %102) #8
  br label %103

103:                                              ; preds = %100, %96, %92, %92
  %104 = bitcast %class.SkRegion* %3 to i8*
  %105 = inttoptr i64 %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %104, i8* align 4 %105, i64 16, i1 false) #8
  %106 = bitcast %"struct.SkRegion::RunHead"** %56 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"struct.SkRegion::RunHead"** %93 to i64*
  store i64 %107, i64* %108, align 8
  switch i64 %107, label %109 [
    i64 -1, label %113
    i64 0, label %113
  ]

109:                                              ; preds = %103
  %110 = inttoptr i64 %107 to %"struct.SkRegion::RunHead"*
  %111 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 1 seq_cst
  br label %113

113:                                              ; preds = %88, %90, %103, %103, %109
  %114 = phi %class.SkRegion* [ %3, %90 ], [ %3, %103 ], [ %3, %103 ], [ %3, %109 ], [ %55, %88 ]
  %115 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %114, i64 0, i32 1
  %116 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %115, align 8
  %117 = icmp ne %"struct.SkRegion::RunHead"* %116, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br label %905

118:                                              ; preds = %83
  br i1 %65, label %119, label %696

119:                                              ; preds = %118
  %120 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp sgt i32 %121, %123
  br i1 %124, label %696, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = icmp sgt i32 %127, %129
  br i1 %130, label %696, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = icmp slt i32 %133, %135
  br i1 %136, label %696, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 3
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 3
  %141 = load i32, i32* %140, align 4
  %142 = icmp slt i32 %139, %141
  br i1 %142, label %696, label %143

143:                                              ; preds = %137
  %144 = icmp eq %class.SkRegion* %3, null
  br i1 %144, label %905, label %145

145:                                              ; preds = %143
  %146 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %147 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %146, align 8
  %148 = ptrtoint %"struct.SkRegion::RunHead"* %147 to i64
  switch i64 %148, label %149 [
    i64 -1, label %156
    i64 0, label %156
  ]

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = atomicrmw sub i32* %150, i32 1 seq_cst
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %153, label %156

153:                                              ; preds = %149
  %154 = bitcast %"struct.SkRegion::RunHead"** %146 to i8**
  %155 = load i8*, i8** %154, align 8
  call void @_Z7sk_freePv(i8* %155) #8
  br label %156

156:                                              ; preds = %153, %149, %145, %145
  %157 = bitcast %class.SkRegion* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %157, i8 0, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %146, align 8
  br label %905

158:                                              ; preds = %43
  %159 = or i1 %59, %63
  br i1 %159, label %164, label %160

160:                                              ; preds = %158
  %161 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0
  %162 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0
  %163 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %7, %struct.SkIRect* dereferenceable(16) %161, %struct.SkIRect* dereferenceable(16) %162) #8
  br i1 %163, label %179, label %164

164:                                              ; preds = %160, %158
  %165 = icmp eq %class.SkRegion* %3, null
  br i1 %165, label %905, label %166

166:                                              ; preds = %164
  %167 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %168 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %167, align 8
  %169 = ptrtoint %"struct.SkRegion::RunHead"* %168 to i64
  switch i64 %169, label %170 [
    i64 -1, label %177
    i64 0, label %177
  ]

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = atomicrmw sub i32* %171, i32 1 seq_cst
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %177

174:                                              ; preds = %170
  %175 = bitcast %"struct.SkRegion::RunHead"** %167 to i8**
  %176 = load i8*, i8** %175, align 8
  call void @_Z7sk_freePv(i8* %176) #8
  br label %177

177:                                              ; preds = %174, %170, %166, %166
  %178 = bitcast %class.SkRegion* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %178, i8 0, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %167, align 8
  br label %905

179:                                              ; preds = %160
  %180 = and i1 %64, %65
  br i1 %180, label %181, label %236

181:                                              ; preds = %179
  %182 = icmp eq %class.SkRegion* %3, null
  %183 = load i32, i32* %53, align 4
  %184 = sext i32 %183 to i64
  %185 = load i32, i32* %51, align 4
  %186 = sext i32 %185 to i64
  %187 = sub nsw i64 %184, %186
  %188 = load i32, i32* %54, align 4
  %189 = sext i32 %188 to i64
  %190 = load i32, i32* %52, align 4
  %191 = sext i32 %190 to i64
  %192 = sub nsw i64 %189, %191
  %193 = icmp slt i64 %187, 1
  %194 = icmp slt i64 %192, 1
  %195 = or i1 %193, %194
  br i1 %182, label %231, label %196

196:                                              ; preds = %181
  br i1 %195, label %205, label %197

197:                                              ; preds = %196
  %198 = or i64 %192, %187
  %199 = add nsw i64 %198, 2147483648
  %200 = icmp ugt i64 %199, 4294967295
  %201 = icmp eq i32 %183, 2147483647
  %202 = or i1 %201, %200
  %203 = icmp eq i32 %188, 2147483647
  %204 = or i1 %203, %202
  br i1 %204, label %205, label %218

205:                                              ; preds = %197, %196
  %206 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %207 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %206, align 8
  %208 = ptrtoint %"struct.SkRegion::RunHead"* %207 to i64
  switch i64 %208, label %209 [
    i64 -1, label %216
    i64 0, label %216
  ]

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %207, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = atomicrmw sub i32* %210, i32 1 seq_cst
  %212 = icmp eq i32 %211, 1
  br i1 %212, label %213, label %216

213:                                              ; preds = %209
  %214 = bitcast %"struct.SkRegion::RunHead"** %206 to i8**
  %215 = load i8*, i8** %214, align 8
  call void @_Z7sk_freePv(i8* %215) #8
  br label %216

216:                                              ; preds = %213, %209, %205, %205
  %217 = bitcast %class.SkRegion* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %217, i8 0, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %206, align 8
  br label %905

218:                                              ; preds = %197
  %219 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %220 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %219, align 8
  %221 = ptrtoint %"struct.SkRegion::RunHead"* %220 to i64
  switch i64 %221, label %222 [
    i64 -1, label %229
    i64 0, label %229
  ]

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %220, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = atomicrmw sub i32* %223, i32 1 seq_cst
  %225 = icmp eq i32 %224, 1
  br i1 %225, label %226, label %229

226:                                              ; preds = %222
  %227 = bitcast %"struct.SkRegion::RunHead"** %219 to i8**
  %228 = load i8*, i8** %227, align 8
  call void @_Z7sk_freePv(i8* %228) #8
  br label %229

229:                                              ; preds = %226, %222, %218, %218
  %230 = bitcast %class.SkRegion* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* nonnull align 4 %50, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* null, %"struct.SkRegion::RunHead"** %219, align 8
  br label %905

231:                                              ; preds = %181
  br i1 %195, label %905, label %232

232:                                              ; preds = %231
  %233 = or i64 %192, %187
  %234 = add nsw i64 %233, 2147483648
  %235 = icmp ult i64 %234, 4294967296
  br label %905

236:                                              ; preds = %179
  br i1 %64, label %237, label %320

237:                                              ; preds = %236
  %238 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 2
  %239 = load i32, i32* %238, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 0
  %242 = load i32, i32* %241, align 4
  %243 = sext i32 %242 to i64
  %244 = sub nsw i64 %240, %243
  %245 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 3
  %246 = load i32, i32* %245, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = sext i32 %249 to i64
  %251 = sub nsw i64 %247, %250
  %252 = icmp slt i64 %244, 1
  %253 = icmp slt i64 %251, 1
  %254 = or i1 %252, %253
  br i1 %254, label %320, label %255

255:                                              ; preds = %237
  %256 = or i64 %251, %244
  %257 = add nsw i64 %256, 2147483648
  %258 = icmp ugt i64 %257, 4294967295
  br i1 %258, label %320, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 2
  %261 = load i32, i32* %260, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %264 to i64
  %266 = sub nsw i64 %262, %265
  %267 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 3
  %268 = load i32, i32* %267, align 4
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 1
  %271 = load i32, i32* %270, align 4
  %272 = sext i32 %271 to i64
  %273 = sub nsw i64 %269, %272
  %274 = icmp slt i64 %266, 1
  %275 = icmp slt i64 %273, 1
  %276 = or i1 %274, %275
  br i1 %276, label %320, label %277

277:                                              ; preds = %259
  %278 = or i64 %273, %266
  %279 = add nsw i64 %278, 2147483648
  %280 = icmp ugt i64 %279, 4294967295
  %281 = icmp sgt i32 %264, %242
  %282 = or i1 %281, %280
  %283 = icmp sgt i32 %271, %249
  %284 = or i1 %283, %282
  %285 = icmp slt i32 %261, %239
  %286 = or i1 %285, %284
  %287 = icmp sge i32 %268, %246
  %288 = xor i1 %286, true
  %289 = and i1 %287, %288
  br i1 %289, label %290, label %320

290:                                              ; preds = %277
  %291 = icmp eq %class.SkRegion* %3, null
  br i1 %291, label %315, label %292

292:                                              ; preds = %290
  %293 = icmp eq %class.SkRegion* %60, %3
  br i1 %293, label %315, label %294

294:                                              ; preds = %292
  %295 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %296 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %295, align 8
  %297 = ptrtoint %"struct.SkRegion::RunHead"* %296 to i64
  switch i64 %297, label %298 [
    i64 -1, label %305
    i64 0, label %305
  ]

298:                                              ; preds = %294
  %299 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %296, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = atomicrmw sub i32* %299, i32 1 seq_cst
  %301 = icmp eq i32 %300, 1
  br i1 %301, label %302, label %305

302:                                              ; preds = %298
  %303 = bitcast %"struct.SkRegion::RunHead"** %295 to i8**
  %304 = load i8*, i8** %303, align 8
  call void @_Z7sk_freePv(i8* %304) #8
  br label %305

305:                                              ; preds = %302, %298, %294, %294
  %306 = bitcast %class.SkRegion* %3 to i8*
  %307 = inttoptr i64 %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %306, i8* align 4 %307, i64 16, i1 false) #8
  %308 = bitcast %"struct.SkRegion::RunHead"** %61 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"struct.SkRegion::RunHead"** %295 to i64*
  store i64 %309, i64* %310, align 8
  switch i64 %309, label %311 [
    i64 -1, label %315
    i64 0, label %315
  ]

311:                                              ; preds = %305
  %312 = inttoptr i64 %309 to %"struct.SkRegion::RunHead"*
  %313 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %312, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = atomicrmw add i32* %313, i32 1 seq_cst
  br label %315

315:                                              ; preds = %290, %292, %305, %305, %311
  %316 = phi %class.SkRegion* [ %3, %292 ], [ %3, %305 ], [ %3, %305 ], [ %3, %311 ], [ %60, %290 ]
  %317 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %316, i64 0, i32 1
  %318 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %317, align 8
  %319 = icmp ne %"struct.SkRegion::RunHead"* %318, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br label %905

320:                                              ; preds = %237, %255, %259, %277, %236
  br i1 %65, label %321, label %696

321:                                              ; preds = %320
  %322 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 2
  %323 = load i32, i32* %322, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 0
  %326 = load i32, i32* %325, align 4
  %327 = sext i32 %326 to i64
  %328 = sub nsw i64 %324, %327
  %329 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 3
  %330 = load i32, i32* %329, align 4
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 1
  %333 = load i32, i32* %332, align 4
  %334 = sext i32 %333 to i64
  %335 = sub nsw i64 %331, %334
  %336 = icmp slt i64 %328, 1
  %337 = icmp slt i64 %335, 1
  %338 = or i1 %336, %337
  br i1 %338, label %696, label %339

339:                                              ; preds = %321
  %340 = or i64 %335, %328
  %341 = add nsw i64 %340, 2147483648
  %342 = icmp ugt i64 %341, 4294967295
  br i1 %342, label %696, label %343

343:                                              ; preds = %339
  %344 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 2
  %345 = load i32, i32* %344, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 0
  %348 = load i32, i32* %347, align 4
  %349 = sext i32 %348 to i64
  %350 = sub nsw i64 %346, %349
  %351 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 3
  %352 = load i32, i32* %351, align 4
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 1
  %355 = load i32, i32* %354, align 4
  %356 = sext i32 %355 to i64
  %357 = sub nsw i64 %353, %356
  %358 = icmp slt i64 %350, 1
  %359 = icmp slt i64 %357, 1
  %360 = or i1 %358, %359
  br i1 %360, label %696, label %361

361:                                              ; preds = %343
  %362 = or i64 %357, %350
  %363 = add nsw i64 %362, 2147483648
  %364 = icmp ugt i64 %363, 4294967295
  %365 = icmp sgt i32 %348, %326
  %366 = or i1 %365, %364
  %367 = icmp sgt i32 %355, %333
  %368 = or i1 %367, %366
  %369 = icmp slt i32 %345, %323
  %370 = or i1 %369, %368
  %371 = icmp sge i32 %352, %330
  %372 = xor i1 %370, true
  %373 = and i1 %371, %372
  br i1 %373, label %374, label %696

374:                                              ; preds = %361
  %375 = icmp eq %class.SkRegion* %3, null
  br i1 %375, label %399, label %376

376:                                              ; preds = %374
  %377 = icmp eq %class.SkRegion* %55, %3
  br i1 %377, label %399, label %378

378:                                              ; preds = %376
  %379 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %380 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %379, align 8
  %381 = ptrtoint %"struct.SkRegion::RunHead"* %380 to i64
  switch i64 %381, label %382 [
    i64 -1, label %389
    i64 0, label %389
  ]

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %380, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = atomicrmw sub i32* %383, i32 1 seq_cst
  %385 = icmp eq i32 %384, 1
  br i1 %385, label %386, label %389

386:                                              ; preds = %382
  %387 = bitcast %"struct.SkRegion::RunHead"** %379 to i8**
  %388 = load i8*, i8** %387, align 8
  call void @_Z7sk_freePv(i8* %388) #8
  br label %389

389:                                              ; preds = %386, %382, %378, %378
  %390 = bitcast %class.SkRegion* %3 to i8*
  %391 = inttoptr i64 %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %390, i8* align 4 %391, i64 16, i1 false) #8
  %392 = bitcast %"struct.SkRegion::RunHead"** %56 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = bitcast %"struct.SkRegion::RunHead"** %379 to i64*
  store i64 %393, i64* %394, align 8
  switch i64 %393, label %395 [
    i64 -1, label %399
    i64 0, label %399
  ]

395:                                              ; preds = %389
  %396 = inttoptr i64 %393 to %"struct.SkRegion::RunHead"*
  %397 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %396, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %398 = atomicrmw add i32* %397, i32 1 seq_cst
  br label %399

399:                                              ; preds = %374, %376, %389, %389, %395
  %400 = phi %class.SkRegion* [ %3, %376 ], [ %3, %389 ], [ %3, %389 ], [ %3, %395 ], [ %55, %374 ]
  %401 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %400, i64 0, i32 1
  %402 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %401, align 8
  %403 = icmp ne %"struct.SkRegion::RunHead"* %402, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br label %905

404:                                              ; preds = %43
  br i1 %59, label %405, label %435

405:                                              ; preds = %404
  %406 = icmp eq %class.SkRegion* %3, null
  br i1 %406, label %430, label %407

407:                                              ; preds = %405
  %408 = icmp eq %class.SkRegion* %60, %3
  br i1 %408, label %430, label %409

409:                                              ; preds = %407
  %410 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %411 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %410, align 8
  %412 = ptrtoint %"struct.SkRegion::RunHead"* %411 to i64
  switch i64 %412, label %413 [
    i64 -1, label %420
    i64 0, label %420
  ]

413:                                              ; preds = %409
  %414 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %411, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = atomicrmw sub i32* %414, i32 1 seq_cst
  %416 = icmp eq i32 %415, 1
  br i1 %416, label %417, label %420

417:                                              ; preds = %413
  %418 = bitcast %"struct.SkRegion::RunHead"** %410 to i8**
  %419 = load i8*, i8** %418, align 8
  tail call void @_Z7sk_freePv(i8* %419) #8
  br label %420

420:                                              ; preds = %417, %413, %409, %409
  %421 = bitcast %class.SkRegion* %3 to i8*
  %422 = inttoptr i64 %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %421, i8* align 4 %422, i64 16, i1 false) #8
  %423 = bitcast %"struct.SkRegion::RunHead"** %61 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.SkRegion::RunHead"** %410 to i64*
  store i64 %424, i64* %425, align 8
  switch i64 %424, label %426 [
    i64 -1, label %430
    i64 0, label %430
  ]

426:                                              ; preds = %420
  %427 = inttoptr i64 %424 to %"struct.SkRegion::RunHead"*
  %428 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %427, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %429 = atomicrmw add i32* %428, i32 1 seq_cst
  br label %430

430:                                              ; preds = %405, %407, %420, %420, %426
  %431 = phi %class.SkRegion* [ %3, %407 ], [ %3, %420 ], [ %3, %420 ], [ %3, %426 ], [ %60, %405 ]
  %432 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %431, i64 0, i32 1
  %433 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %432, align 8
  %434 = icmp ne %"struct.SkRegion::RunHead"* %433, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br label %905

435:                                              ; preds = %404
  br i1 %63, label %436, label %466

436:                                              ; preds = %435
  %437 = icmp eq %class.SkRegion* %3, null
  br i1 %437, label %461, label %438

438:                                              ; preds = %436
  %439 = icmp eq %class.SkRegion* %55, %3
  br i1 %439, label %461, label %440

440:                                              ; preds = %438
  %441 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %442 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %441, align 8
  %443 = ptrtoint %"struct.SkRegion::RunHead"* %442 to i64
  switch i64 %443, label %444 [
    i64 -1, label %451
    i64 0, label %451
  ]

444:                                              ; preds = %440
  %445 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %442, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %446 = atomicrmw sub i32* %445, i32 1 seq_cst
  %447 = icmp eq i32 %446, 1
  br i1 %447, label %448, label %451

448:                                              ; preds = %444
  %449 = bitcast %"struct.SkRegion::RunHead"** %441 to i8**
  %450 = load i8*, i8** %449, align 8
  tail call void @_Z7sk_freePv(i8* %450) #8
  br label %451

451:                                              ; preds = %448, %444, %440, %440
  %452 = bitcast %class.SkRegion* %3 to i8*
  %453 = inttoptr i64 %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %452, i8* align 4 %453, i64 16, i1 false) #8
  %454 = bitcast %"struct.SkRegion::RunHead"** %56 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"struct.SkRegion::RunHead"** %441 to i64*
  store i64 %455, i64* %456, align 8
  switch i64 %455, label %457 [
    i64 -1, label %461
    i64 0, label %461
  ]

457:                                              ; preds = %451
  %458 = inttoptr i64 %455 to %"struct.SkRegion::RunHead"*
  %459 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %458, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = atomicrmw add i32* %459, i32 1 seq_cst
  br label %461

461:                                              ; preds = %436, %438, %451, %451, %457
  %462 = phi %class.SkRegion* [ %3, %438 ], [ %3, %451 ], [ %3, %451 ], [ %3, %457 ], [ %55, %436 ]
  %463 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %462, i64 0, i32 1
  %464 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %463, align 8
  %465 = icmp ne %"struct.SkRegion::RunHead"* %464, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br label %905

466:                                              ; preds = %435
  br i1 %64, label %467, label %550

467:                                              ; preds = %466
  %468 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 2
  %469 = load i32, i32* %468, align 4
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 0
  %472 = load i32, i32* %471, align 4
  %473 = sext i32 %472 to i64
  %474 = sub nsw i64 %470, %473
  %475 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 3
  %476 = load i32, i32* %475, align 4
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 1
  %479 = load i32, i32* %478, align 4
  %480 = sext i32 %479 to i64
  %481 = sub nsw i64 %477, %480
  %482 = icmp slt i64 %474, 1
  %483 = icmp slt i64 %481, 1
  %484 = or i1 %482, %483
  br i1 %484, label %550, label %485

485:                                              ; preds = %467
  %486 = or i64 %481, %474
  %487 = add nsw i64 %486, 2147483648
  %488 = icmp ugt i64 %487, 4294967295
  br i1 %488, label %550, label %489

489:                                              ; preds = %485
  %490 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 2
  %491 = load i32, i32* %490, align 4
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 0
  %494 = load i32, i32* %493, align 4
  %495 = sext i32 %494 to i64
  %496 = sub nsw i64 %492, %495
  %497 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 3
  %498 = load i32, i32* %497, align 4
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 1
  %501 = load i32, i32* %500, align 4
  %502 = sext i32 %501 to i64
  %503 = sub nsw i64 %499, %502
  %504 = icmp slt i64 %496, 1
  %505 = icmp slt i64 %503, 1
  %506 = or i1 %504, %505
  br i1 %506, label %550, label %507

507:                                              ; preds = %489
  %508 = or i64 %503, %496
  %509 = add nsw i64 %508, 2147483648
  %510 = icmp ugt i64 %509, 4294967295
  %511 = icmp sgt i32 %494, %472
  %512 = or i1 %511, %510
  %513 = icmp sgt i32 %501, %479
  %514 = or i1 %513, %512
  %515 = icmp slt i32 %491, %469
  %516 = or i1 %515, %514
  %517 = icmp sge i32 %498, %476
  %518 = xor i1 %516, true
  %519 = and i1 %517, %518
  br i1 %519, label %520, label %550

520:                                              ; preds = %507
  %521 = icmp eq %class.SkRegion* %3, null
  br i1 %521, label %545, label %522

522:                                              ; preds = %520
  %523 = icmp eq %class.SkRegion* %55, %3
  br i1 %523, label %545, label %524

524:                                              ; preds = %522
  %525 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %526 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %525, align 8
  %527 = ptrtoint %"struct.SkRegion::RunHead"* %526 to i64
  switch i64 %527, label %528 [
    i64 -1, label %535
    i64 0, label %535
  ]

528:                                              ; preds = %524
  %529 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %526, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = atomicrmw sub i32* %529, i32 1 seq_cst
  %531 = icmp eq i32 %530, 1
  br i1 %531, label %532, label %535

532:                                              ; preds = %528
  %533 = bitcast %"struct.SkRegion::RunHead"** %525 to i8**
  %534 = load i8*, i8** %533, align 8
  tail call void @_Z7sk_freePv(i8* %534) #8
  br label %535

535:                                              ; preds = %532, %528, %524, %524
  %536 = bitcast %class.SkRegion* %3 to i8*
  %537 = inttoptr i64 %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %536, i8* align 4 %537, i64 16, i1 false) #8
  %538 = bitcast %"struct.SkRegion::RunHead"** %56 to i64*
  %539 = load i64, i64* %538, align 8
  %540 = bitcast %"struct.SkRegion::RunHead"** %525 to i64*
  store i64 %539, i64* %540, align 8
  switch i64 %539, label %541 [
    i64 -1, label %545
    i64 0, label %545
  ]

541:                                              ; preds = %535
  %542 = inttoptr i64 %539 to %"struct.SkRegion::RunHead"*
  %543 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %542, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = atomicrmw add i32* %543, i32 1 seq_cst
  br label %545

545:                                              ; preds = %520, %522, %535, %535, %541
  %546 = phi %class.SkRegion* [ %3, %522 ], [ %3, %535 ], [ %3, %535 ], [ %3, %541 ], [ %55, %520 ]
  %547 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %546, i64 0, i32 1
  %548 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %547, align 8
  %549 = icmp ne %"struct.SkRegion::RunHead"* %548, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br label %905

550:                                              ; preds = %467, %485, %489, %507, %466
  br i1 %65, label %551, label %696

551:                                              ; preds = %550
  %552 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 2
  %553 = load i32, i32* %552, align 4
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 0
  %556 = load i32, i32* %555, align 4
  %557 = sext i32 %556 to i64
  %558 = sub nsw i64 %554, %557
  %559 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 3
  %560 = load i32, i32* %559, align 4
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 1
  %563 = load i32, i32* %562, align 4
  %564 = sext i32 %563 to i64
  %565 = sub nsw i64 %561, %564
  %566 = icmp slt i64 %558, 1
  %567 = icmp slt i64 %565, 1
  %568 = or i1 %566, %567
  br i1 %568, label %696, label %569

569:                                              ; preds = %551
  %570 = or i64 %565, %558
  %571 = add nsw i64 %570, 2147483648
  %572 = icmp ugt i64 %571, 4294967295
  br i1 %572, label %696, label %573

573:                                              ; preds = %569
  %574 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 2
  %575 = load i32, i32* %574, align 4
  %576 = sext i32 %575 to i64
  %577 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 0
  %578 = load i32, i32* %577, align 4
  %579 = sext i32 %578 to i64
  %580 = sub nsw i64 %576, %579
  %581 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 3
  %582 = load i32, i32* %581, align 4
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 1
  %585 = load i32, i32* %584, align 4
  %586 = sext i32 %585 to i64
  %587 = sub nsw i64 %583, %586
  %588 = icmp slt i64 %580, 1
  %589 = icmp slt i64 %587, 1
  %590 = or i1 %588, %589
  br i1 %590, label %696, label %591

591:                                              ; preds = %573
  %592 = or i64 %587, %580
  %593 = add nsw i64 %592, 2147483648
  %594 = icmp ugt i64 %593, 4294967295
  %595 = icmp sgt i32 %578, %556
  %596 = or i1 %595, %594
  %597 = icmp sgt i32 %585, %563
  %598 = or i1 %597, %596
  %599 = icmp slt i32 %575, %553
  %600 = or i1 %599, %598
  %601 = icmp sge i32 %582, %560
  %602 = xor i1 %600, true
  %603 = and i1 %601, %602
  br i1 %603, label %604, label %696

604:                                              ; preds = %591
  %605 = icmp eq %class.SkRegion* %3, null
  br i1 %605, label %629, label %606

606:                                              ; preds = %604
  %607 = icmp eq %class.SkRegion* %60, %3
  br i1 %607, label %629, label %608

608:                                              ; preds = %606
  %609 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %610 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %609, align 8
  %611 = ptrtoint %"struct.SkRegion::RunHead"* %610 to i64
  switch i64 %611, label %612 [
    i64 -1, label %619
    i64 0, label %619
  ]

612:                                              ; preds = %608
  %613 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %610, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %614 = atomicrmw sub i32* %613, i32 1 seq_cst
  %615 = icmp eq i32 %614, 1
  br i1 %615, label %616, label %619

616:                                              ; preds = %612
  %617 = bitcast %"struct.SkRegion::RunHead"** %609 to i8**
  %618 = load i8*, i8** %617, align 8
  tail call void @_Z7sk_freePv(i8* %618) #8
  br label %619

619:                                              ; preds = %616, %612, %608, %608
  %620 = bitcast %class.SkRegion* %3 to i8*
  %621 = inttoptr i64 %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %620, i8* align 4 %621, i64 16, i1 false) #8
  %622 = bitcast %"struct.SkRegion::RunHead"** %61 to i64*
  %623 = load i64, i64* %622, align 8
  %624 = bitcast %"struct.SkRegion::RunHead"** %609 to i64*
  store i64 %623, i64* %624, align 8
  switch i64 %623, label %625 [
    i64 -1, label %629
    i64 0, label %629
  ]

625:                                              ; preds = %619
  %626 = inttoptr i64 %623 to %"struct.SkRegion::RunHead"*
  %627 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %626, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %628 = atomicrmw add i32* %627, i32 1 seq_cst
  br label %629

629:                                              ; preds = %604, %606, %619, %619, %625
  %630 = phi %class.SkRegion* [ %3, %606 ], [ %3, %619 ], [ %3, %619 ], [ %3, %625 ], [ %60, %604 ]
  %631 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %630, i64 0, i32 1
  %632 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %631, align 8
  %633 = icmp ne %"struct.SkRegion::RunHead"* %632, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br label %905

634:                                              ; preds = %43
  br i1 %59, label %635, label %665

635:                                              ; preds = %634
  %636 = icmp eq %class.SkRegion* %3, null
  br i1 %636, label %660, label %637

637:                                              ; preds = %635
  %638 = icmp eq %class.SkRegion* %60, %3
  br i1 %638, label %660, label %639

639:                                              ; preds = %637
  %640 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %641 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %640, align 8
  %642 = ptrtoint %"struct.SkRegion::RunHead"* %641 to i64
  switch i64 %642, label %643 [
    i64 -1, label %650
    i64 0, label %650
  ]

643:                                              ; preds = %639
  %644 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %641, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %645 = atomicrmw sub i32* %644, i32 1 seq_cst
  %646 = icmp eq i32 %645, 1
  br i1 %646, label %647, label %650

647:                                              ; preds = %643
  %648 = bitcast %"struct.SkRegion::RunHead"** %640 to i8**
  %649 = load i8*, i8** %648, align 8
  tail call void @_Z7sk_freePv(i8* %649) #8
  br label %650

650:                                              ; preds = %647, %643, %639, %639
  %651 = bitcast %class.SkRegion* %3 to i8*
  %652 = inttoptr i64 %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %651, i8* align 4 %652, i64 16, i1 false) #8
  %653 = bitcast %"struct.SkRegion::RunHead"** %61 to i64*
  %654 = load i64, i64* %653, align 8
  %655 = bitcast %"struct.SkRegion::RunHead"** %640 to i64*
  store i64 %654, i64* %655, align 8
  switch i64 %654, label %656 [
    i64 -1, label %660
    i64 0, label %660
  ]

656:                                              ; preds = %650
  %657 = inttoptr i64 %654 to %"struct.SkRegion::RunHead"*
  %658 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %657, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %659 = atomicrmw add i32* %658, i32 1 seq_cst
  br label %660

660:                                              ; preds = %635, %637, %650, %650, %656
  %661 = phi %class.SkRegion* [ %3, %637 ], [ %3, %650 ], [ %3, %650 ], [ %3, %656 ], [ %60, %635 ]
  %662 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %661, i64 0, i32 1
  %663 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %662, align 8
  %664 = icmp ne %"struct.SkRegion::RunHead"* %663, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br label %905

665:                                              ; preds = %634
  br i1 %63, label %666, label %696

666:                                              ; preds = %665
  %667 = icmp eq %class.SkRegion* %3, null
  br i1 %667, label %691, label %668

668:                                              ; preds = %666
  %669 = icmp eq %class.SkRegion* %55, %3
  br i1 %669, label %691, label %670

670:                                              ; preds = %668
  %671 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %672 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %671, align 8
  %673 = ptrtoint %"struct.SkRegion::RunHead"* %672 to i64
  switch i64 %673, label %674 [
    i64 -1, label %681
    i64 0, label %681
  ]

674:                                              ; preds = %670
  %675 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %672, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %676 = atomicrmw sub i32* %675, i32 1 seq_cst
  %677 = icmp eq i32 %676, 1
  br i1 %677, label %678, label %681

678:                                              ; preds = %674
  %679 = bitcast %"struct.SkRegion::RunHead"** %671 to i8**
  %680 = load i8*, i8** %679, align 8
  tail call void @_Z7sk_freePv(i8* %680) #8
  br label %681

681:                                              ; preds = %678, %674, %670, %670
  %682 = bitcast %class.SkRegion* %3 to i8*
  %683 = inttoptr i64 %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %682, i8* align 4 %683, i64 16, i1 false) #8
  %684 = bitcast %"struct.SkRegion::RunHead"** %56 to i64*
  %685 = load i64, i64* %684, align 8
  %686 = bitcast %"struct.SkRegion::RunHead"** %671 to i64*
  store i64 %685, i64* %686, align 8
  switch i64 %685, label %687 [
    i64 -1, label %691
    i64 0, label %691
  ]

687:                                              ; preds = %681
  %688 = inttoptr i64 %685 to %"struct.SkRegion::RunHead"*
  %689 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %688, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %690 = atomicrmw add i32* %689, i32 1 seq_cst
  br label %691

691:                                              ; preds = %666, %668, %681, %681, %687
  %692 = phi %class.SkRegion* [ %3, %668 ], [ %3, %681 ], [ %3, %681 ], [ %3, %687 ], [ %55, %666 ]
  %693 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %692, i64 0, i32 1
  %694 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %693, align 8
  %695 = icmp ne %"struct.SkRegion::RunHead"* %694, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br label %905

696:                                              ; preds = %137, %551, %569, %573, %321, %339, %343, %119, %125, %131, %665, %550, %591, %320, %361, %118
  %697 = bitcast [7 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %697) #8
  %698 = getelementptr inbounds [7 x i32], [7 x i32]* %8, i64 0, i64 0
  %699 = bitcast [7 x i32]* %9 to i8*
  %700 = bitcast [7 x i32]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %700, i8 -86, i64 28, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %699) #8
  %701 = getelementptr inbounds [7 x i32], [7 x i32]* %9, i64 0, i64 0
  %702 = getelementptr inbounds [7 x i32], [7 x i32]* %9, i64 0, i64 1
  %703 = getelementptr inbounds [7 x i32], [7 x i32]* %9, i64 0, i64 2
  %704 = getelementptr inbounds [7 x i32], [7 x i32]* %9, i64 0, i64 3
  %705 = getelementptr inbounds [7 x i32], [7 x i32]* %9, i64 0, i64 4
  %706 = getelementptr inbounds [7 x i32], [7 x i32]* %9, i64 0, i64 5
  %707 = getelementptr inbounds [7 x i32], [7 x i32]* %9, i64 0, i64 6
  %708 = bitcast [7 x i32]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %708, i8 -86, i64 28, i1 false)
  %709 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %56, align 8
  %710 = ptrtoint %"struct.SkRegion::RunHead"* %709 to i64
  switch i64 %710, label %727 [
    i64 -1, label %711
    i64 0, label %712
  ]

711:                                              ; preds = %696
  store i32 2147483647, i32* %698, align 16
  br label %729

712:                                              ; preds = %696
  %713 = getelementptr inbounds [7 x i32], [7 x i32]* %8, i64 0, i64 6
  %714 = getelementptr inbounds [7 x i32], [7 x i32]* %8, i64 0, i64 5
  %715 = getelementptr inbounds [7 x i32], [7 x i32]* %8, i64 0, i64 4
  %716 = getelementptr inbounds [7 x i32], [7 x i32]* %8, i64 0, i64 3
  %717 = getelementptr inbounds [7 x i32], [7 x i32]* %8, i64 0, i64 2
  %718 = getelementptr inbounds [7 x i32], [7 x i32]* %8, i64 0, i64 1
  %719 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 1
  %720 = load i32, i32* %719, align 4
  store i32 %720, i32* %698, align 16
  %721 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 3
  %722 = load i32, i32* %721, align 4
  store i32 %722, i32* %718, align 4
  store i32 1, i32* %717, align 8
  %723 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 0
  %724 = load i32, i32* %723, align 4
  store i32 %724, i32* %716, align 4
  %725 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %55, i64 0, i32 0, i32 2
  %726 = load i32, i32* %725, align 4
  store i32 %726, i32* %715, align 16
  store i32 2147483647, i32* %714, align 4
  store i32 2147483647, i32* %713, align 8
  br label %729

727:                                              ; preds = %696
  %728 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %709, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %729

729:                                              ; preds = %711, %712, %727
  %730 = phi i32* [ %698, %711 ], [ %698, %712 ], [ %728, %727 ]
  %731 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %61, align 8
  %732 = ptrtoint %"struct.SkRegion::RunHead"* %731 to i64
  switch i64 %732, label %743 [
    i64 -1, label %733
    i64 0, label %734
  ]

733:                                              ; preds = %729
  store i32 2147483647, i32* %701, align 16
  br label %745

734:                                              ; preds = %729
  %735 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 1
  %736 = load i32, i32* %735, align 4
  store i32 %736, i32* %701, align 16
  %737 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 3
  %738 = load i32, i32* %737, align 4
  store i32 %738, i32* %702, align 4
  store i32 1, i32* %703, align 8
  %739 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 0
  %740 = load i32, i32* %739, align 4
  store i32 %740, i32* %704, align 4
  %741 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %60, i64 0, i32 0, i32 2
  %742 = load i32, i32* %741, align 4
  store i32 %742, i32* %705, align 16
  store i32 2147483647, i32* %706, align 4
  store i32 2147483647, i32* %707, align 8
  br label %745

743:                                              ; preds = %729
  %744 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %731, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %745

745:                                              ; preds = %733, %734, %743
  %746 = phi i32* [ %701, %733 ], [ %701, %734 ], [ %744, %743 ]
  %747 = bitcast %class.RunArray* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1048, i8* nonnull %747) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %747, i8 -86, i64 1040, i1 false)
  %748 = getelementptr inbounds %class.RunArray, %class.RunArray* %10, i64 0, i32 1
  %749 = bitcast %class.SkAutoTMalloc* %748 to i64*
  store i64 0, i64* %749, align 8
  %750 = getelementptr inbounds %class.RunArray, %class.RunArray* %10, i64 0, i32 2
  store i32 256, i32* %750, align 8
  %751 = getelementptr inbounds %class.RunArray, %class.RunArray* %10, i64 0, i32 0, i64 0
  %752 = getelementptr inbounds %class.RunArray, %class.RunArray* %10, i64 0, i32 3
  store i32* %751, i32** %752, align 8
  %753 = icmp eq %class.SkRegion* %3, null
  %754 = getelementptr inbounds i32, i32* %730, i64 1
  %755 = load i32, i32* %730, align 4
  %756 = load i32, i32* %754, align 4
  %757 = getelementptr inbounds i32, i32* %746, i64 1
  %758 = load i32, i32* %746, align 4
  %759 = load i32, i32* %757, align 4
  %760 = getelementptr inbounds %class.RgnOper, %class.RgnOper* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %760) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %760, i8 -86, i64 40, i1 false) #8
  %761 = icmp slt i32 %758, %755
  %762 = select i1 %761, i32 %758, i32 %755
  %763 = zext i32 %49 to i64
  %764 = getelementptr inbounds [4 x %struct.anon], [4 x %struct.anon]* @_ZL9gOpMinMax, i64 0, i64 %763, i32 0
  %765 = load i8, i8* %764, align 1
  store i8 %765, i8* %760, align 8
  %766 = getelementptr inbounds %class.RgnOper, %class.RgnOper* %6, i64 0, i32 1
  %767 = getelementptr inbounds [4 x %struct.anon], [4 x %struct.anon]* @_ZL9gOpMinMax, i64 0, i64 %763, i32 1
  %768 = load i8, i8* %767, align 1
  store i8 %768, i8* %766, align 1
  %769 = getelementptr inbounds %class.RgnOper, %class.RgnOper* %6, i64 0, i32 3
  store %class.RunArray* %10, %class.RunArray** %769, align 8
  %770 = getelementptr inbounds %class.RgnOper, %class.RgnOper* %6, i64 0, i32 4
  store i32 0, i32* %770, align 8
  %771 = getelementptr inbounds %class.RgnOper, %class.RgnOper* %6, i64 0, i32 5
  store i32 1, i32* %771, align 4
  %772 = getelementptr inbounds %class.RgnOper, %class.RgnOper* %6, i64 0, i32 6
  store i64 0, i64* %772, align 8
  %773 = getelementptr inbounds %class.RgnOper, %class.RgnOper* %6, i64 0, i32 7
  store i32 %762, i32* %773, align 8
  %774 = icmp ne i32 %756, 2147483647
  %775 = icmp ne i32 %759, 2147483647
  %776 = or i1 %774, %775
  br i1 %776, label %777, label %867

777:                                              ; preds = %745
  %778 = getelementptr inbounds i32, i32* %746, i64 3
  %779 = getelementptr inbounds i32, i32* %730, i64 3
  %780 = xor i1 %753, true
  br label %781

781:                                              ; preds = %853, %777
  %782 = phi i32 [ 2147483647, %777 ], [ %815, %853 ]
  %783 = phi i32 [ %759, %777 ], [ %856, %853 ]
  %784 = phi i32 [ %756, %777 ], [ %841, %853 ]
  %785 = phi i32* [ %779, %777 ], [ %840, %853 ]
  %786 = phi i32* [ %778, %777 ], [ %855, %853 ]
  %787 = phi i32 [ %758, %777 ], [ %854, %853 ]
  %788 = phi i32 [ %755, %777 ], [ %839, %853 ]
  %789 = icmp slt i32 %788, %787
  br i1 %789, label %790, label %795

790:                                              ; preds = %781
  %791 = icmp sgt i32 %784, %787
  %792 = select i1 %791, i32 %787, i32 %788
  %793 = select i1 %791, i32 %787, i32 %784
  %794 = xor i1 %791, true
  br label %811

795:                                              ; preds = %781
  %796 = icmp slt i32 %787, %788
  br i1 %796, label %797, label %802

797:                                              ; preds = %795
  %798 = icmp sgt i32 %783, %788
  %799 = select i1 %798, i32 %788, i32 %787
  %800 = select i1 %798, i32 %788, i32 %783
  %801 = xor i1 %798, true
  br label %811

802:                                              ; preds = %795
  %803 = icmp sgt i32 %784, %783
  %804 = select i1 %803, i32 %787, i32 %784
  %805 = select i1 %803, i32 0, i32 %784
  %806 = xor i1 %803, true
  %807 = icmp sgt i32 %783, %784
  %808 = select i1 %807, i32 %788, i32 %783
  %809 = select i1 %807, i32 %805, i32 %783
  %810 = xor i1 %807, true
  br label %811

811:                                              ; preds = %802, %797, %790
  %812 = phi i32 [ %792, %790 ], [ %788, %797 ], [ %808, %802 ]
  %813 = phi i32 [ %787, %790 ], [ %799, %797 ], [ %804, %802 ]
  %814 = phi i32 [ %788, %790 ], [ %787, %797 ], [ %788, %802 ]
  %815 = phi i32 [ %793, %790 ], [ %800, %797 ], [ %809, %802 ]
  %816 = phi i32* [ %785, %790 ], [ getelementptr inbounds ([4 x i32], [4 x i32]* @_ZZL7operatePKiS0_P8RunArrayN8SkRegion2OpEbE14gEmptyScanline, i64 0, i64 2), %797 ], [ %785, %802 ]
  %817 = phi i32* [ getelementptr inbounds ([4 x i32], [4 x i32]* @_ZZL7operatePKiS0_P8RunArrayN8SkRegion2OpEbE14gEmptyScanline, i64 0, i64 2), %790 ], [ %786, %797 ], [ %786, %802 ]
  %818 = phi i1 [ %794, %790 ], [ false, %797 ], [ %806, %802 ]
  %819 = phi i1 [ false, %790 ], [ %801, %797 ], [ %810, %802 ]
  %820 = icmp sgt i32 %814, %782
  br i1 %820, label %821, label %822

821:                                              ; preds = %811
  call void @_ZN7RgnOper7addSpanEiPKiS1_(%class.RgnOper* nonnull %6, i32 %814, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @_ZZL7operatePKiS0_P8RunArrayN8SkRegion2OpEbE14gEmptyScanline, i64 0, i64 2), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @_ZZL7operatePKiS0_P8RunArrayN8SkRegion2OpEbE14gEmptyScanline, i64 0, i64 2)) #8
  br label %822

822:                                              ; preds = %821, %811
  call void @_ZN7RgnOper7addSpanEiPKiS1_(%class.RgnOper* nonnull %6, i32 %815, i32* %816, i32* %817) #8
  %823 = load i64, i64* %772, align 8
  %824 = icmp eq i64 %823, 0
  %825 = or i1 %824, %780
  br i1 %825, label %826, label %888

826:                                              ; preds = %822
  br i1 %818, label %827, label %838

827:                                              ; preds = %826
  %828 = getelementptr inbounds i32, i32* %785, i64 -1
  %829 = load i32, i32* %828, align 4
  %830 = shl nsw i32 %829, 1
  %831 = or i32 %830, 1
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds i32, i32* %785, i64 %832
  %834 = load i32, i32* %833, align 4
  %835 = getelementptr inbounds i32, i32* %833, i64 2
  %836 = icmp eq i32 %834, 2147483647
  %837 = select i1 %836, i32 2147483647, i32 %784
  br label %838

838:                                              ; preds = %827, %826
  %839 = phi i32 [ %812, %826 ], [ %837, %827 ]
  %840 = phi i32* [ %785, %826 ], [ %835, %827 ]
  %841 = phi i32 [ %784, %826 ], [ %834, %827 ]
  br i1 %819, label %842, label %853

842:                                              ; preds = %838
  %843 = getelementptr inbounds i32, i32* %786, i64 -1
  %844 = load i32, i32* %843, align 4
  %845 = shl nsw i32 %844, 1
  %846 = or i32 %845, 1
  %847 = sext i32 %846 to i64
  %848 = getelementptr inbounds i32, i32* %786, i64 %847
  %849 = load i32, i32* %848, align 4
  %850 = getelementptr inbounds i32, i32* %848, i64 2
  %851 = icmp eq i32 %849, 2147483647
  %852 = select i1 %851, i32 2147483647, i32 %783
  br label %853

853:                                              ; preds = %842, %838
  %854 = phi i32 [ %852, %842 ], [ %813, %838 ]
  %855 = phi i32* [ %850, %842 ], [ %786, %838 ]
  %856 = phi i32 [ %849, %842 ], [ %783, %838 ]
  %857 = icmp ne i32 %841, 2147483647
  %858 = icmp ne i32 %856, 2147483647
  %859 = or i1 %857, %858
  br i1 %859, label %781, label %860

860:                                              ; preds = %853
  %861 = load i32, i32* %773, align 8
  %862 = load %class.RunArray*, %class.RunArray** %769, align 8
  %863 = load i32, i32* %770, align 8
  %864 = sext i32 %863 to i64
  %865 = getelementptr inbounds %class.RunArray, %class.RunArray* %862, i64 0, i32 3
  %866 = load i32*, i32** %865, align 8
  br label %867

867:                                              ; preds = %860, %745
  %868 = phi i32* [ %866, %860 ], [ %751, %745 ]
  %869 = phi i64 [ %864, %860 ], [ 0, %745 ]
  %870 = phi i32 [ %861, %860 ], [ %762, %745 ]
  %871 = getelementptr inbounds i32, i32* %868, i64 %869
  store i32 %870, i32* %871, align 4
  %872 = load %class.RunArray*, %class.RunArray** %769, align 8
  %873 = load i32, i32* %771, align 4
  %874 = load i64, i64* %772, align 8
  %875 = trunc i64 %874 to i32
  %876 = add i32 %873, %875
  %877 = getelementptr inbounds %class.RunArray, %class.RunArray* %872, i64 0, i32 3
  %878 = load i32*, i32** %877, align 8
  %879 = sext i32 %876 to i64
  %880 = getelementptr inbounds i32, i32* %878, i64 %879
  store i32 2147483647, i32* %880, align 4
  %881 = load i32, i32* %771, align 4
  %882 = load i32, i32* %770, align 8
  %883 = load i64, i64* %772, align 8
  %884 = trunc i64 %883 to i32
  %885 = add i32 %881, 1
  %886 = sub i32 %885, %882
  %887 = add i32 %886, %884
  br label %888

888:                                              ; preds = %822, %867
  %889 = phi i32 [ %887, %867 ], [ -1, %822 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %760) #8
  br i1 %753, label %893, label %890

890:                                              ; preds = %888
  %891 = load i32*, i32** %752, align 8
  %892 = call zeroext i1 @_ZN8SkRegion7setRunsEPii(%class.SkRegion* nonnull %3, i32* %891, i32 %889)
  br label %897

893:                                              ; preds = %888
  %894 = icmp eq i32 %889, -1
  %895 = icmp sgt i32 %889, 2
  %896 = or i1 %894, %895
  br label %897

897:                                              ; preds = %893, %890
  %898 = phi i1 [ %892, %890 ], [ %896, %893 ]
  %899 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %748, i64 0, i32 0, i32 0, i32 0, i32 0
  %900 = load i64, i64* %749, align 8
  store i32* null, i32** %899, align 8
  %901 = icmp eq i64 %900, 0
  br i1 %901, label %904, label %902

902:                                              ; preds = %897
  %903 = inttoptr i64 %900 to i8*
  call void @_Z7sk_freePv(i8* %903) #8
  br label %904

904:                                              ; preds = %897, %902
  call void @llvm.lifetime.end.p0i8(i64 1048, i8* nonnull %747) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %699) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %697) #8
  br label %905

905:                                              ; preds = %232, %231, %216, %229, %177, %164, %156, %143, %80, %67, %43, %904, %691, %660, %629, %545, %461, %430, %399, %315, %113
  %906 = phi i1 [ %664, %660 ], [ %695, %691 ], [ %898, %904 ], [ %434, %430 ], [ %465, %461 ], [ %549, %545 ], [ %633, %629 ], [ %319, %315 ], [ %403, %399 ], [ %117, %113 ], [ false, %43 ], [ false, %67 ], [ false, %80 ], [ false, %143 ], [ false, %156 ], [ false, %164 ], [ false, %177 ], [ %235, %232 ], [ false, %231 ], [ false, %216 ], [ true, %229 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8
  br label %907

907:                                              ; preds = %905, %38
  %908 = phi i1 [ %42, %38 ], [ %906, %905 ]
  ret i1 %908
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32* @_ZNK8SkRegion7getRunsEPiS0_(%class.SkRegion* nocapture readonly, i32*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %5 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %4, align 8
  %6 = ptrtoint %"struct.SkRegion::RunHead"* %5 to i64
  switch i64 %6, label %23 [
    i64 -1, label %7
    i64 0, label %8
  ]

7:                                                ; preds = %3
  store i32 2147483647, i32* %1, align 4
  br label %27

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %1, align 4
  %11 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 1, i32* %14, align 4
  %15 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds i32, i32* %1, i64 3
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds i32, i32* %1, i64 4
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds i32, i32* %1, i64 5
  store i32 2147483647, i32* %21, align 4
  %22 = getelementptr inbounds i32, i32* %1, i64 6
  store i32 2147483647, i32* %22, align 4
  br label %27

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %5, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %5, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  br label %27

27:                                               ; preds = %8, %23, %7
  %28 = phi i32 [ 1, %8 ], [ %26, %23 ], [ 0, %7 ]
  %29 = phi i32* [ %1, %8 ], [ %24, %23 ], [ %1, %7 ]
  store i32 %28, i32* %2, align 4
  ret i32* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkRegion10intersectsERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.SkIRect, align 4
  %4 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %5 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %4, align 8
  %6 = icmp eq %"struct.SkRegion::RunHead"* %5, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %6, label %85, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = sub nsw i64 %10, %13
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = sub nsw i64 %17, %20
  %22 = icmp slt i64 %14, 1
  %23 = icmp slt i64 %21, 1
  %24 = or i1 %22, %23
  br i1 %24, label %85, label %25

25:                                               ; preds = %7
  %26 = or i64 %21, %14
  %27 = add nsw i64 %26, 2147483648
  %28 = icmp ugt i64 %27, 4294967295
  br i1 %28, label %85, label %29

29:                                               ; preds = %25
  %30 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #8
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %33 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %35 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0
  %36 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %36, i8 -86, i64 16, i1 false)
  %37 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %3, %struct.SkIRect* dereferenceable(16) %35, %struct.SkIRect* dereferenceable(16) %1) #8
  br i1 %37, label %38, label %83

38:                                               ; preds = %29
  %39 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %4, align 8
  %40 = icmp eq %"struct.SkRegion::RunHead"* %39, null
  br i1 %40, label %83, label %41

41:                                               ; preds = %38
  %42 = load i32, i32* %32, align 4
  %43 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %39, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds i32, i32* %43, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, %42
  br i1 %46, label %57, label %47

47:                                               ; preds = %41, %47
  %48 = phi i32* [ %54, %47 ], [ %44, %41 ]
  %49 = getelementptr inbounds i32, i32* %48, i64 1
  %50 = load i32, i32* %49, align 4
  %51 = shl i32 %50, 1
  %52 = add nsw i32 %51, 3
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %48, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, %42
  br i1 %56, label %57, label %47

57:                                               ; preds = %47, %41
  %58 = phi i32* [ %44, %41 ], [ %54, %47 ]
  %59 = load i32, i32* %31, align 4
  %60 = load i32, i32* %33, align 4
  %61 = load i32, i32* %34, align 4
  br label %62

62:                                               ; preds = %76, %57
  %63 = phi i32* [ %58, %57 ], [ %82, %76 ]
  br label %64

64:                                               ; preds = %69, %62
  %65 = phi i32* [ %63, %62 ], [ %66, %69 ]
  %66 = getelementptr inbounds i32, i32* %65, i64 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, %60
  br i1 %68, label %69, label %73

69:                                               ; preds = %64
  %70 = getelementptr inbounds i32, i32* %65, i64 3
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %71, %59
  br i1 %72, label %83, label %64

73:                                               ; preds = %64
  %74 = load i32, i32* %63, align 4
  %75 = icmp sgt i32 %61, %74
  br i1 %75, label %76, label %83

76:                                               ; preds = %73
  %77 = getelementptr inbounds i32, i32* %63, i64 1
  %78 = load i32, i32* %77, align 4
  %79 = shl nsw i32 %78, 1
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %63, i64 3
  %82 = getelementptr inbounds i32, i32* %81, i64 %80
  br label %62

83:                                               ; preds = %73, %69, %38, %29
  %84 = phi i1 [ false, %29 ], [ true, %38 ], [ true, %69 ], [ false, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #8
  br label %85

85:                                               ; preds = %7, %2, %25, %83
  %86 = phi i1 [ %84, %83 ], [ false, %25 ], [ false, %2 ], [ false, %7 ]
  ret i1 %86
}

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkRegion10intersectsERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.SkIRect, align 4
  %4 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %5 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %4, align 8
  %6 = icmp eq %"struct.SkRegion::RunHead"* %5, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %9 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %8, align 8
  %10 = icmp eq %"struct.SkRegion::RunHead"* %9, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0
  %13 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0
  %14 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 16, i1 false) #8
  %15 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %3, %struct.SkIRect* dereferenceable(16) %12, %struct.SkIRect* dereferenceable(16) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br i1 %15, label %16, label %30

16:                                               ; preds = %11
  %17 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %4, align 8
  %18 = icmp eq %"struct.SkRegion::RunHead"* %17, null
  %19 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %8, align 8
  %20 = icmp eq %"struct.SkRegion::RunHead"* %19, null
  %21 = and i1 %18, %20
  br i1 %21, label %30, label %22

22:                                               ; preds = %16
  br i1 %18, label %23, label %25

23:                                               ; preds = %22
  %24 = call zeroext i1 @_ZNK8SkRegion10intersectsERK7SkIRect(%class.SkRegion* %1, %struct.SkIRect* dereferenceable(16) %12)
  br label %30

25:                                               ; preds = %22
  br i1 %20, label %26, label %28

26:                                               ; preds = %25
  %27 = call zeroext i1 @_ZNK8SkRegion10intersectsERK7SkIRect(%class.SkRegion* %0, %struct.SkIRect* dereferenceable(16) %13)
  br label %30

28:                                               ; preds = %25
  %29 = call zeroext i1 @_ZN8SkRegion4OperERKS_S1_NS_2OpEPS_(%class.SkRegion* dereferenceable(24) %0, %class.SkRegion* dereferenceable(24) %1, i32 1, %class.SkRegion* null)
  br label %30

30:                                               ; preds = %16, %23, %26, %28, %11, %2, %7
  %31 = phi i1 [ false, %7 ], [ false, %2 ], [ false, %11 ], [ %24, %23 ], [ %27, %26 ], [ %29, %28 ], [ true, %16 ]
  ret i1 %31
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8SkRegioneqERKS_(%class.SkRegion* readonly, %class.SkRegion* readonly dereferenceable(24)) local_unnamed_addr #5 align 2 {
  %3 = icmp eq %class.SkRegion* %0, %1
  br i1 %3, label %34, label %4

4:                                                ; preds = %2
  %5 = bitcast %class.SkRegion* %0 to i8*
  %6 = bitcast %class.SkRegion* %1 to i8*
  %7 = tail call i32 @bcmp(i8* %5, i8* %6, i64 16) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %34

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %11 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %10, align 8
  %12 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %13 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %12, align 8
  %14 = icmp eq %"struct.SkRegion::RunHead"* %11, %13
  br i1 %14, label %34, label %15

15:                                               ; preds = %9
  %16 = ptrtoint %"struct.SkRegion::RunHead"* %11 to i64
  switch i64 %16, label %17 [
    i64 -1, label %34
    i64 0, label %34
  ]

17:                                               ; preds = %15
  %18 = ptrtoint %"struct.SkRegion::RunHead"* %13 to i64
  switch i64 %18, label %19 [
    i64 -1, label %34
    i64 0, label %34
  ]

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %11, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %13, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %21, %23
  br i1 %24, label %25, label %34

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %11, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %13, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = bitcast i32* %28 to i8*
  %30 = sext i32 %21 to i64
  %31 = shl nsw i64 %30, 2
  %32 = tail call i32 @bcmp(i8* %27, i8* %29, i64 %31)
  %33 = icmp eq i32 %32, 0
  br label %34

34:                                               ; preds = %4, %17, %17, %15, %15, %9, %25, %19, %2
  %35 = phi i1 [ true, %2 ], [ false, %4 ], [ true, %9 ], [ false, %17 ], [ false, %15 ], [ false, %19 ], [ %33, %25 ], [ false, %15 ], [ false, %17 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8SkRegion9translateEiiPS_(%class.SkRegion* readonly, i32, i32, %class.SkRegion*) local_unnamed_addr #1 align 2 {
  %5 = icmp eq %class.SkRegion* %3, null
  br i1 %5, label %266, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %8 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %7, align 8
  %9 = icmp eq %"struct.SkRegion::RunHead"* %8, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %9, label %10, label %23

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %12 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %11, align 8
  %13 = ptrtoint %"struct.SkRegion::RunHead"* %12 to i64
  switch i64 %13, label %14 [
    i64 -1, label %21
    i64 0, label %21
  ]

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 seq_cst
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %21

18:                                               ; preds = %14
  %19 = bitcast %"struct.SkRegion::RunHead"** %11 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @_Z7sk_freePv(i8* %20) #8
  br label %21

21:                                               ; preds = %10, %10, %14, %18
  %22 = bitcast %class.SkRegion* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 0, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %11, align 8
  br label %266

23:                                               ; preds = %6
  %24 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = sext i32 %25 to i64
  %29 = sext i32 %1 to i64
  %30 = add nsw i64 %28, %29
  %31 = icmp slt i64 %30, -2147483648
  %32 = sub nsw i32 -2147483648, %25
  %33 = select i1 %31, i32 %32, i32 %1
  %34 = sext i32 %27 to i64
  %35 = sext i32 %33 to i64
  %36 = add nsw i64 %35, %34
  %37 = icmp sgt i64 %36, 2147483647
  %38 = sub nsw i32 2147483647, %27
  %39 = select i1 %37, i32 %38, i32 %33
  %40 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %41 to i64
  %45 = sext i32 %2 to i64
  %46 = add nsw i64 %44, %45
  %47 = icmp slt i64 %46, -2147483648
  %48 = sub nsw i32 -2147483648, %41
  %49 = select i1 %47, i32 %48, i32 %2
  %50 = sext i32 %43 to i64
  %51 = sext i32 %49 to i64
  %52 = add nsw i64 %51, %50
  %53 = icmp sgt i64 %52, 2147483647
  %54 = sub nsw i32 2147483647, %43
  %55 = select i1 %53, i32 %54, i32 %49
  %56 = icmp eq %"struct.SkRegion::RunHead"* %8, null
  br i1 %56, label %57, label %129

57:                                               ; preds = %23
  %58 = sext i32 %39 to i64
  %59 = add nsw i64 %28, %58
  %60 = icmp slt i64 %59, 2147483647
  %61 = select i1 %60, i64 %59, i64 2147483647
  %62 = icmp sgt i64 %61, -2147483647
  %63 = select i1 %62, i64 %61, i64 -2147483647
  %64 = sext i32 %55 to i64
  %65 = add nsw i64 %44, %64
  %66 = icmp slt i64 %65, 2147483647
  %67 = select i1 %66, i64 %65, i64 2147483647
  %68 = icmp sgt i64 %67, -2147483647
  %69 = select i1 %68, i64 %67, i64 -2147483647
  %70 = add nsw i64 %34, %58
  %71 = icmp slt i64 %70, 2147483647
  %72 = select i1 %71, i64 %70, i64 2147483647
  %73 = icmp sgt i64 %72, -2147483647
  %74 = select i1 %73, i64 %72, i64 -2147483647
  %75 = add nsw i64 %50, %64
  %76 = icmp slt i64 %75, 2147483647
  %77 = select i1 %76, i64 %75, i64 2147483647
  %78 = icmp sgt i64 %77, -2147483647
  %79 = select i1 %78, i64 %77, i64 -2147483647
  %80 = shl nsw i64 %79, 32
  %81 = and i64 %74, 4294967295
  %82 = or i64 %80, %81
  %83 = sub nsw i64 %74, %63
  %84 = sub nsw i64 %79, %69
  %85 = icmp slt i64 %83, 1
  %86 = icmp slt i64 %84, 1
  %87 = or i1 %85, %86
  br i1 %87, label %98, label %88

88:                                               ; preds = %57
  %89 = trunc i64 %79 to i32
  %90 = trunc i64 %74 to i32
  %91 = or i64 %84, %83
  %92 = add nsw i64 %91, 2147483648
  %93 = icmp ugt i64 %92, 4294967295
  %94 = icmp eq i32 %90, 2147483647
  %95 = or i1 %94, %93
  %96 = icmp eq i32 %89, 2147483647
  %97 = or i1 %96, %95
  br i1 %97, label %98, label %111

98:                                               ; preds = %88, %57
  %99 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %100 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %99, align 8
  %101 = ptrtoint %"struct.SkRegion::RunHead"* %100 to i64
  switch i64 %101, label %102 [
    i64 -1, label %109
    i64 0, label %109
  ]

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw sub i32* %103, i32 1 seq_cst
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %109

106:                                              ; preds = %102
  %107 = bitcast %"struct.SkRegion::RunHead"** %99 to i8**
  %108 = load i8*, i8** %107, align 8
  tail call void @_Z7sk_freePv(i8* %108) #8
  br label %109

109:                                              ; preds = %106, %102, %98, %98
  %110 = bitcast %class.SkRegion* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %110, i8 0, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %99, align 8
  br label %266

111:                                              ; preds = %88
  %112 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %113 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %112, align 8
  %114 = ptrtoint %"struct.SkRegion::RunHead"* %113 to i64
  switch i64 %114, label %115 [
    i64 -1, label %122
    i64 0, label %122
  ]

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw sub i32* %116, i32 1 seq_cst
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %119, label %122

119:                                              ; preds = %115
  %120 = bitcast %"struct.SkRegion::RunHead"** %112 to i8**
  %121 = load i8*, i8** %120, align 8
  tail call void @_Z7sk_freePv(i8* %121) #8
  br label %122

122:                                              ; preds = %119, %115, %111, %111
  %123 = bitcast %class.SkRegion* %3 to i64*
  %124 = shl nsw i64 %69, 32
  %125 = and i64 %63, 4294967295
  %126 = or i64 %124, %125
  store i64 %126, i64* %123, align 8
  %127 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 0, i32 2
  %128 = bitcast i32* %127 to i64*
  store i64 %82, i64* %128, align 8
  store %"struct.SkRegion::RunHead"* null, %"struct.SkRegion::RunHead"** %112, align 8
  br label %266

129:                                              ; preds = %23
  %130 = icmp eq %class.SkRegion* %0, %3
  br i1 %130, label %131, label %135

131:                                              ; preds = %129
  %132 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %133 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %132, align 8
  %134 = tail call %"struct.SkRegion::RunHead"* @_ZN8SkRegion7RunHead14ensureWritableEv(%"struct.SkRegion::RunHead"* %133)
  store %"struct.SkRegion::RunHead"* %134, %"struct.SkRegion::RunHead"** %132, align 8
  br label %180

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %8, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %8, i64 0, i32 2
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %8, i64 0, i32 3
  %141 = load i32, i32* %140, align 4
  %142 = icmp slt i32 %139, 1
  %143 = icmp slt i32 %141, 2
  %144 = or i1 %142, %143
  %145 = icmp slt i32 %137, 7
  %146 = or i1 %145, %144
  br i1 %146, label %165, label %147

147:                                              ; preds = %135
  %148 = sext i32 %137 to i64
  %149 = shl nsw i64 %148, 2
  %150 = icmp ult i64 %149, 2147483632
  br i1 %150, label %152, label %151

151:                                              ; preds = %147
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #9
  unreachable

152:                                              ; preds = %147
  %153 = add nuw nsw i64 %149, 16
  %154 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %153, i32 2) #8
  %155 = bitcast i8* %154 to i32*
  store atomic i32 1, i32* %155 seq_cst, align 4
  %156 = getelementptr inbounds i8, i8* %154, i64 4
  %157 = bitcast i8* %156 to i32*
  store i32 %137, i32* %157, align 4
  %158 = getelementptr inbounds i8, i8* %154, i64 8
  %159 = bitcast i8* %158 to i32*
  store i32 0, i32* %159, align 4
  %160 = getelementptr inbounds i8, i8* %154, i64 12
  %161 = bitcast i8* %160 to i32*
  store i32 0, i32* %161, align 4
  %162 = icmp eq i8* %154, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %152
  store i32 %139, i32* %159, align 4
  store i32 %141, i32* %161, align 4
  %164 = ptrtoint i8* %154 to i64
  br label %165

165:                                              ; preds = %135, %152, %163
  %166 = phi i64 [ 0, %135 ], [ %164, %163 ], [ 0, %152 ]
  %167 = bitcast %class.SkRegion* %0 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = bitcast %class.SkRegion* %3 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %169, align 4
  %170 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %171 = bitcast %"struct.SkRegion::RunHead"** %170 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %166, i64* %171, align 8
  switch i64 %172, label %173 [
    i64 -1, label %180
    i64 0, label %180
  ]

173:                                              ; preds = %165
  %174 = inttoptr i64 %172 to %"struct.SkRegion::RunHead"*
  %175 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = atomicrmw sub i32* %175, i32 1 seq_cst
  %177 = icmp eq i32 %176, 1
  br i1 %177, label %178, label %180

178:                                              ; preds = %173
  %179 = inttoptr i64 %172 to i8*
  tail call void @_Z7sk_freePv(i8* %179) #8
  br label %180

180:                                              ; preds = %178, %173, %165, %165, %131
  %181 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 0, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = sext i32 %39 to i64
  %185 = add nsw i64 %183, %184
  %186 = icmp slt i64 %185, 2147483647
  %187 = select i1 %186, i64 %185, i64 2147483647
  %188 = icmp sgt i64 %187, -2147483647
  %189 = select i1 %188, i64 %187, i64 -2147483647
  %190 = trunc i64 %189 to i32
  store i32 %190, i32* %181, align 4
  %191 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 0, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = sext i32 %192 to i64
  %194 = sext i32 %55 to i64
  %195 = add nsw i64 %193, %194
  %196 = icmp slt i64 %195, 2147483647
  %197 = select i1 %196, i64 %195, i64 2147483647
  %198 = icmp sgt i64 %197, -2147483647
  %199 = select i1 %198, i64 %197, i64 -2147483647
  %200 = trunc i64 %199 to i32
  store i32 %200, i32* %191, align 4
  %201 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 0, i32 2
  %202 = load i32, i32* %201, align 4
  %203 = sext i32 %202 to i64
  %204 = add nsw i64 %203, %184
  %205 = icmp slt i64 %204, 2147483647
  %206 = select i1 %205, i64 %204, i64 2147483647
  %207 = icmp sgt i64 %206, -2147483647
  %208 = select i1 %207, i64 %206, i64 -2147483647
  %209 = trunc i64 %208 to i32
  store i32 %209, i32* %201, align 4
  %210 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 0, i32 3
  %211 = load i32, i32* %210, align 4
  %212 = sext i32 %211 to i64
  %213 = add nsw i64 %212, %194
  %214 = icmp slt i64 %213, 2147483647
  %215 = select i1 %214, i64 %213, i64 2147483647
  %216 = icmp sgt i64 %215, -2147483647
  %217 = select i1 %216, i64 %215, i64 -2147483647
  %218 = trunc i64 %217 to i32
  store i32 %218, i32* %210, align 4
  %219 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %7, align 8
  %220 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %219, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %222 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %221, align 8
  %223 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %222, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = getelementptr inbounds i32, i32* %220, i64 1
  %225 = load i32, i32* %220, align 4
  %226 = add nsw i32 %225, %55
  store i32 %226, i32* %223, align 4
  %227 = getelementptr inbounds i32, i32* %223, i64 1
  %228 = load i32, i32* %224, align 4
  %229 = icmp eq i32 %228, 2147483647
  br i1 %229, label %264, label %230

230:                                              ; preds = %180, %258
  %231 = phi i32 [ %262, %258 ], [ %228, %180 ]
  %232 = phi i32* [ %261, %258 ], [ %227, %180 ]
  %233 = phi i32* [ %259, %258 ], [ %223, %180 ]
  %234 = phi i32* [ %260, %258 ], [ %224, %180 ]
  %235 = getelementptr inbounds i32, i32* %234, i64 1
  %236 = add nsw i32 %231, %55
  %237 = getelementptr inbounds i32, i32* %233, i64 2
  store i32 %236, i32* %232, align 4
  %238 = load i32, i32* %235, align 4
  %239 = getelementptr inbounds i32, i32* %233, i64 3
  store i32 %238, i32* %237, align 4
  %240 = getelementptr inbounds i32, i32* %234, i64 2
  %241 = getelementptr inbounds i32, i32* %234, i64 3
  %242 = load i32, i32* %240, align 4
  %243 = icmp eq i32 %242, 2147483647
  br i1 %243, label %258, label %244

244:                                              ; preds = %230, %244
  %245 = phi i32 [ %256, %244 ], [ %242, %230 ]
  %246 = phi i32* [ %255, %244 ], [ %241, %230 ]
  %247 = phi i32* [ %254, %244 ], [ %240, %230 ]
  %248 = phi i32* [ %253, %244 ], [ %239, %230 ]
  %249 = add nsw i32 %245, %39
  %250 = getelementptr inbounds i32, i32* %248, i64 1
  store i32 %249, i32* %248, align 4
  %251 = load i32, i32* %246, align 4
  %252 = add nsw i32 %251, %39
  %253 = getelementptr inbounds i32, i32* %248, i64 2
  store i32 %252, i32* %250, align 4
  %254 = getelementptr inbounds i32, i32* %247, i64 2
  %255 = getelementptr inbounds i32, i32* %247, i64 3
  %256 = load i32, i32* %254, align 4
  %257 = icmp eq i32 %256, 2147483647
  br i1 %257, label %258, label %244

258:                                              ; preds = %244, %230
  %259 = phi i32* [ %239, %230 ], [ %253, %244 ]
  %260 = phi i32* [ %241, %230 ], [ %255, %244 ]
  store i32 2147483647, i32* %259, align 4
  %261 = getelementptr inbounds i32, i32* %259, i64 1
  %262 = load i32, i32* %260, align 4
  %263 = icmp eq i32 %262, 2147483647
  br i1 %263, label %264, label %230

264:                                              ; preds = %258, %180
  %265 = phi i32* [ %227, %180 ], [ %261, %258 ]
  store i32 2147483647, i32* %265, align 4
  br label %266

266:                                              ; preds = %122, %109, %4, %21, %264
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkRegion8setRectsEPK7SkIRecti(%class.SkRegion*, %struct.SkIRect* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %class.SkRegion, align 8
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %8 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %7, align 8
  %9 = ptrtoint %"struct.SkRegion::RunHead"* %8 to i64
  switch i64 %9, label %10 [
    i64 -1, label %17
    i64 0, label %17
  ]

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 seq_cst
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = bitcast %"struct.SkRegion::RunHead"** %7 to i8**
  %16 = load i8*, i8** %15, align 8
  tail call void @_Z7sk_freePv(i8* %16) #8
  br label %17

17:                                               ; preds = %6, %6, %10, %14
  %18 = bitcast %class.SkRegion* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %7, align 8
  br label %72

19:                                               ; preds = %3
  %20 = tail call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %0, %struct.SkIRect* dereferenceable(16) %1)
  %21 = icmp sgt i32 %2, 1
  br i1 %21, label %22, label %72

22:                                               ; preds = %19
  %23 = bitcast %class.SkRegion* %4 to i8*
  %24 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %4, i64 0, i32 1
  %25 = bitcast %"struct.SkRegion::RunHead"** %24 to i8**
  %26 = zext i32 %2 to i64
  br label %27

27:                                               ; preds = %69, %22
  %28 = phi i64 [ 1, %22 ], [ %70, %69 ]
  %29 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %24, align 8
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 %28, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %29, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = sub nsw i64 %32, %35
  %37 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 %28, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 %28, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = sub nsw i64 %39, %42
  %44 = icmp slt i64 %36, 1
  %45 = icmp slt i64 %43, 1
  %46 = or i1 %44, %45
  br i1 %46, label %55, label %47

47:                                               ; preds = %27
  %48 = or i64 %43, %36
  %49 = add nsw i64 %48, 2147483648
  %50 = icmp ugt i64 %49, 4294967295
  %51 = icmp eq i32 %31, 2147483647
  %52 = or i1 %51, %50
  %53 = icmp eq i32 %38, 2147483647
  %54 = or i1 %53, %52
  br i1 %54, label %55, label %56

55:                                               ; preds = %47, %27
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 16, i1 false) #8
  br label %58

56:                                               ; preds = %47
  %57 = bitcast %struct.SkIRect* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 4 %57, i64 16, i1 false) #8
  br label %58

58:                                               ; preds = %56, %55
  %59 = phi %"struct.SkRegion::RunHead"* [ null, %56 ], [ inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %55 ]
  store %"struct.SkRegion::RunHead"* %59, %"struct.SkRegion::RunHead"** %24, align 8
  %60 = call zeroext i1 @_ZN8SkRegion4OperERKS_S1_NS_2OpEPS_(%class.SkRegion* dereferenceable(24) %0, %class.SkRegion* nonnull dereferenceable(24) %4, i32 2, %class.SkRegion* %0) #8
  %61 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %24, align 8
  %62 = ptrtoint %"struct.SkRegion::RunHead"* %61 to i64
  switch i64 %62, label %63 [
    i64 -1, label %69
    i64 0, label %69
  ]

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 seq_cst
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = load i8*, i8** %25, align 8
  call void @_Z7sk_freePv(i8* %68) #8
  br label %69

69:                                               ; preds = %58, %58, %63, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8
  %70 = add nuw nsw i64 %28, 1
  %71 = icmp eq i64 %70, %26
  br i1 %71, label %72, label %27

72:                                               ; preds = %69, %19, %17
  %73 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %74 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %73, align 8
  %75 = icmp ne %"struct.SkRegion::RunHead"* %74, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  ret i1 %75
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8SkRegion13writeToMemoryEPv(%class.SkRegion*, i8*) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %class.SkWBuffer, align 8
  %9 = icmp eq i8* %1, null
  br i1 %9, label %10, label %20

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %12 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %11, align 8
  %13 = ptrtoint %"struct.SkRegion::RunHead"* %12 to i64
  switch i64 %13, label %14 [
    i64 -1, label %62
    i64 0, label %61
  ]

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = shl nsw i64 %17, 2
  %19 = add nsw i64 %18, 28
  br label %62

20:                                               ; preds = %2
  %21 = bitcast %class.SkWBuffer* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #8
  %22 = getelementptr inbounds %class.SkWBuffer, %class.SkWBuffer* %8, i64 0, i32 0
  %23 = getelementptr inbounds %class.SkWBuffer, %class.SkWBuffer* %8, i64 0, i32 1
  %24 = getelementptr inbounds %class.SkWBuffer, %class.SkWBuffer* %8, i64 0, i32 2
  store i8* %1, i8** %22, align 8
  store i8* %1, i8** %23, align 8
  store i8* null, i8** %24, align 8
  %25 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %26 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %25, align 8
  %27 = ptrtoint %"struct.SkRegion::RunHead"* %26 to i64
  switch i64 %27, label %30 [
    i64 -1, label %28
    i64 0, label %52
  ]

28:                                               ; preds = %20
  %29 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29)
  store i32 -1, i32* %5, align 4
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* nonnull %8, i8* nonnull %29, i64 4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29)
  br label %55

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %26, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33)
  store i32 %32, i32* %3, align 4
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* nonnull %8, i8* nonnull %33, i64 4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33)
  %34 = bitcast %class.SkRegion* %0 to i8*
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* nonnull %8, i8* %34, i64 16) #8
  %35 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %25, align 8
  %36 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %35, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)
  store i32 %37, i32* %4, align 4
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* nonnull %8, i8* nonnull %38, i64 4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  %39 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %25, align 8
  %40 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %39, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42)
  store i32 %41, i32* %6, align 4
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* nonnull %8, i8* nonnull %42, i64 4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42)
  %43 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %25, align 8
  %44 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %30
  %48 = sext i32 %45 to i64
  %49 = shl nsw i64 %48, 2
  %50 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %43, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast i32* %50 to i8*
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* nonnull %8, i8* %51, i64 %49) #8
  br label %55

52:                                               ; preds = %20
  %53 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53)
  store i32 0, i32* %7, align 4
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* nonnull %8, i8* nonnull %53, i64 4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53)
  %54 = bitcast %class.SkRegion* %0 to i8*
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* nonnull %8, i8* %54, i64 16) #8
  br label %55

55:                                               ; preds = %47, %30, %52, %28
  %56 = bitcast i8** %23 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %class.SkWBuffer* %8 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #8
  br label %62

61:                                               ; preds = %10
  br label %62

62:                                               ; preds = %10, %61, %14, %55
  %63 = phi i64 [ %60, %55 ], [ 4, %10 ], [ %19, %14 ], [ 20, %61 ]
  ret i64 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8SkRegion14readFromMemoryEPKvm(%class.SkRegion* nocapture, i8*, i64) local_unnamed_addr #1 align 2 {
  %4 = alloca %class.SkRBuffer, align 8
  %5 = alloca %class.SkRegion, align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = bitcast %class.SkRBuffer* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #8
  %10 = getelementptr inbounds %class.SkRBuffer, %class.SkRBuffer* %4, i64 0, i32 0
  %11 = getelementptr inbounds %class.SkRBuffer, %class.SkRBuffer* %4, i64 0, i32 1
  %12 = getelementptr inbounds %class.SkRBuffer, %class.SkRBuffer* %4, i64 0, i32 2
  %13 = getelementptr inbounds %class.SkRBuffer, %class.SkRBuffer* %4, i64 0, i32 3
  %14 = bitcast %class.SkRBuffer* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  store i8 1, i8* %13, align 8
  store i8* %1, i8** %10, align 8
  store i8* %1, i8** %11, align 8
  %15 = getelementptr inbounds i8, i8* %1, i64 %2
  store i8* %15, i8** %12, align 8
  %16 = bitcast %class.SkRegion* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8
  %17 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %5, i64 0, i32 0
  %18 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %5, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %5, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %5, i64 0, i32 0, i32 2
  %21 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %5, i64 0, i32 0, i32 3
  %22 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 0, i64 16, i1 false) #8
  store %"struct.SkRegion::RunHead"* inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*), %"struct.SkRegion::RunHead"** %22, align 16
  %23 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #8
  store i32 -1431655766, i32* %6, align 4
  %24 = call zeroext i1 @_ZN9SkRBuffer4readEPvm(%class.SkRBuffer* nonnull %4, i8* nonnull %23, i64 4) #8
  %25 = xor i1 %24, true
  %26 = load i32, i32* %6, align 4
  %27 = icmp slt i32 %26, -1
  %28 = or i1 %27, %25
  br i1 %28, label %133, label %29

29:                                               ; preds = %3
  %30 = icmp sgt i32 %26, -1
  br i1 %30, label %31, label %118

31:                                               ; preds = %29
  %32 = call zeroext i1 @_ZN9SkRBuffer4readEPvm(%class.SkRBuffer* nonnull %4, i8* nonnull %16, i64 16) #8
  br i1 %32, label %33, label %133

33:                                               ; preds = %31
  %34 = load i32, i32* %20, align 8
  %35 = sext i32 %34 to i64
  %36 = load i32, i32* %18, align 16
  %37 = sext i32 %36 to i64
  %38 = sub nsw i64 %35, %37
  %39 = load i32, i32* %21, align 4
  %40 = sext i32 %39 to i64
  %41 = load i32, i32* %19, align 4
  %42 = sext i32 %41 to i64
  %43 = sub nsw i64 %40, %42
  %44 = icmp slt i64 %38, 1
  %45 = icmp slt i64 %43, 1
  %46 = or i1 %44, %45
  br i1 %46, label %133, label %47

47:                                               ; preds = %33
  %48 = or i64 %43, %38
  %49 = add nsw i64 %48, 2147483648
  %50 = icmp ugt i64 %49, 4294967295
  br i1 %50, label %133, label %51

51:                                               ; preds = %47
  %52 = load i32, i32* %6, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  store %"struct.SkRegion::RunHead"* null, %"struct.SkRegion::RunHead"** %22, align 16
  br label %118

55:                                               ; preds = %51
  %56 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #8
  store i32 -1431655766, i32* %7, align 4
  %57 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #8
  store i32 -1431655766, i32* %8, align 4
  %58 = call zeroext i1 @_ZN9SkRBuffer4readEPvm(%class.SkRBuffer* nonnull %4, i8* nonnull %56, i64 4) #8
  br i1 %58, label %59, label %117

59:                                               ; preds = %55
  %60 = call zeroext i1 @_ZN9SkRBuffer4readEPvm(%class.SkRBuffer* nonnull %4, i8* nonnull %57, i64 4) #8
  br i1 %60, label %61, label %117

61:                                               ; preds = %59
  %62 = bitcast i8** %12 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast i8** %11 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = load i32, i32* %6, align 4
  %68 = sext i32 %67 to i64
  %69 = shl nsw i64 %68, 2
  %70 = icmp ult i64 %66, %69
  br i1 %70, label %117, label %71

71:                                               ; preds = %61
  %72 = bitcast %class.SkRBuffer* %4 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %65, %73
  %75 = getelementptr inbounds i8, i8* %1, i64 %74
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %7, align 4
  %78 = load i32, i32* %8, align 4
  %79 = call fastcc zeroext i1 @_ZL12validate_runPKiiRK7SkIRectii(i32* %76, i32 %67, %struct.SkIRect* nonnull dereferenceable(16) %17, i32 %77, i32 %78)
  br i1 %79, label %80, label %117

80:                                               ; preds = %71
  %81 = load i32, i32* %6, align 4
  %82 = load i32, i32* %7, align 4
  %83 = load i32, i32* %8, align 4
  %84 = icmp slt i32 %82, 1
  %85 = icmp slt i32 %83, 2
  %86 = or i1 %84, %85
  %87 = icmp slt i32 %81, 7
  %88 = or i1 %87, %86
  br i1 %88, label %107, label %89

89:                                               ; preds = %80
  %90 = sext i32 %81 to i64
  %91 = shl nsw i64 %90, 2
  %92 = icmp ult i64 %91, 2147483632
  br i1 %92, label %94, label %93

93:                                               ; preds = %89
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #9
  unreachable

94:                                               ; preds = %89
  %95 = add nuw nsw i64 %91, 16
  %96 = call i8* @_Z15sk_malloc_flagsmj(i64 %95, i32 2) #8
  %97 = bitcast i8* %96 to i32*
  store atomic i32 1, i32* %97 seq_cst, align 4
  %98 = getelementptr inbounds i8, i8* %96, i64 4
  %99 = bitcast i8* %98 to i32*
  store i32 %81, i32* %99, align 4
  %100 = getelementptr inbounds i8, i8* %96, i64 8
  %101 = bitcast i8* %100 to i32*
  store i32 0, i32* %101, align 4
  %102 = getelementptr inbounds i8, i8* %96, i64 12
  %103 = bitcast i8* %102 to i32*
  store i32 0, i32* %103, align 4
  %104 = icmp eq i8* %96, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %94
  %106 = bitcast i8* %96 to %"struct.SkRegion::RunHead"*
  store i32 %82, i32* %101, align 4
  store i32 %83, i32* %103, align 4
  br label %107

107:                                              ; preds = %80, %94, %105
  %108 = phi %"struct.SkRegion::RunHead"* [ null, %80 ], [ %106, %105 ], [ null, %94 ]
  store %"struct.SkRegion::RunHead"* %108, %"struct.SkRegion::RunHead"** %22, align 16
  %109 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %108, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = bitcast i32* %109 to i8*
  %111 = load i32, i32* %6, align 4
  %112 = sext i32 %111 to i64
  %113 = shl nsw i64 %112, 2
  %114 = call zeroext i1 @_ZN9SkRBuffer4readEPvm(%class.SkRBuffer* nonnull %4, i8* %110, i64 %113) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #8
  %115 = bitcast %"struct.SkRegion::RunHead"** %22 to i64*
  %116 = load i64, i64* %115, align 16
  br label %118

117:                                              ; preds = %71, %55, %59, %61
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #8
  br label %133

118:                                              ; preds = %107, %54, %29
  %119 = phi i64 [ %116, %107 ], [ 0, %54 ], [ -1, %29 ]
  %120 = bitcast %class.SkRegion* %0 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4
  %122 = bitcast %class.SkRegion* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %122, i8* nonnull align 16 %16, i64 16, i1 false) #8
  %123 = bitcast %class.SkRegion* %5 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %123, align 16
  %124 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %125 = bitcast %"struct.SkRegion::RunHead"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"struct.SkRegion::RunHead"** %22 to i64*
  store i64 %119, i64* %125, align 8
  store i64 %126, i64* %127, align 16
  %128 = bitcast i8** %11 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %class.SkRBuffer* %4 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 %129, %131
  br label %133

133:                                              ; preds = %33, %117, %31, %47, %3, %118
  %134 = phi i64 [ %132, %118 ], [ 0, %117 ], [ 0, %3 ], [ 0, %47 ], [ 0, %31 ], [ 0, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #8
  %135 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %22, align 16
  %136 = ptrtoint %"struct.SkRegion::RunHead"* %135 to i64
  switch i64 %136, label %137 [
    i64 -1, label %144
    i64 0, label %144
  ]

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw sub i32* %138, i32 1 seq_cst
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %141, label %144

141:                                              ; preds = %137
  %142 = bitcast %"struct.SkRegion::RunHead"** %22 to i8**
  %143 = load i8*, i8** %142, align 16
  call void @_Z7sk_freePv(i8* %143) #8
  br label %144

144:                                              ; preds = %133, %133, %137, %141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #8
  ret i64 %134
}

declare zeroext i1 @_ZN9SkRBuffer4readEPvm(%class.SkRBuffer*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL12validate_runPKiiRK7SkIRectii(i32* readonly, i32, %struct.SkIRect* nocapture readonly dereferenceable(16), i32, i32) unnamed_addr #1 {
  %6 = alloca %struct.SkIRect, align 4
  %7 = alloca %struct.SkIRect, align 4
  %8 = icmp slt i32 %3, 1
  %9 = icmp slt i32 %4, 2
  %10 = or i1 %8, %9
  br i1 %10, label %136, label %11

11:                                               ; preds = %5
  %12 = icmp sgt i32 %3, 2147483645
  %13 = add nuw nsw i32 %3, 2
  %14 = select i1 %12, i32 2, i32 %13
  %15 = sub nuw nsw i32 2147483647, %3
  %16 = icmp slt i32 %15, %14
  %17 = select i1 %16, i32 0, i32 %3
  %18 = add nsw i32 %17, %14
  %19 = icmp slt i32 %15, %18
  %20 = select i1 %19, i32 0, i32 %3
  %21 = add nsw i32 %20, %18
  %22 = sub nuw nsw i32 2147483647, %4
  %23 = icmp slt i32 %22, %21
  %24 = select i1 %23, i32 0, i32 %4
  %25 = add nsw i32 %24, %21
  %26 = icmp slt i32 %22, %25
  br i1 %26, label %136, label %27

27:                                               ; preds = %11
  %28 = or i1 %12, %16
  %29 = or i1 %28, %19
  %30 = or i1 %29, %23
  %31 = xor i1 %30, true
  %32 = add nsw i32 %25, %4
  %33 = icmp eq i32 %32, %1
  %34 = and i1 %33, %31
  br i1 %34, label %35, label %136

35:                                               ; preds = %27
  %36 = add nsw i32 %1, -1
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 2147483647
  br i1 %40, label %41, label %136

41:                                               ; preds = %35
  %42 = add nsw i32 %1, -2
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %0, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 2147483647
  br i1 %46, label %47, label %136

47:                                               ; preds = %41
  %48 = sext i32 %1 to i64
  %49 = getelementptr inbounds i32, i32* %0, i64 %48
  %50 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %50, i8 0, i64 16, i1 false)
  %51 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %51, i8 0, i64 16, i1 false)
  %52 = load i32, i32* %0, align 4
  %53 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 1
  store i32 %52, i32* %53, align 4
  %54 = icmp eq i32 %52, 2147483647
  br i1 %54, label %134, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %52, %57
  br i1 %58, label %59, label %134

59:                                               ; preds = %55
  %60 = getelementptr inbounds i32, i32* %0, i64 1
  %61 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 3
  %62 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %63 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 0
  %64 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 2
  br label %65

65:                                               ; preds = %59, %123
  %66 = phi i32 [ %124, %123 ], [ %52, %59 ]
  %67 = phi i32* [ %120, %123 ], [ %60, %59 ]
  %68 = phi i32 [ %70, %123 ], [ %3, %59 ]
  %69 = phi i32 [ %93, %123 ], [ %4, %59 ]
  %70 = add nsw i32 %68, -1
  %71 = icmp slt i32 %68, 1
  br i1 %71, label %134, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds i32, i32* %67, i64 1
  %74 = load i32, i32* %67, align 4
  store i32 %74, i32* %61, align 4
  %75 = icmp eq i32 %74, 2147483647
  br i1 %75, label %134, label %76

76:                                               ; preds = %72
  %77 = load i32, i32* %62, align 4
  %78 = icmp sle i32 %74, %77
  %79 = icmp sgt i32 %74, %66
  %80 = and i1 %78, %79
  br i1 %80, label %81, label %134

81:                                               ; preds = %76
  %82 = load i32, i32* %73, align 4
  %83 = icmp slt i32 %82, 0
  %84 = icmp slt i32 %69, %82
  %85 = or i1 %83, %84
  br i1 %85, label %134, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds i32, i32* %67, i64 3
  %88 = shl nsw i32 %82, 1
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i32, i32* %87, i64 %89
  %91 = icmp ugt i32* %90, %49
  br i1 %91, label %134, label %92

92:                                               ; preds = %86
  %93 = sub nsw i32 %69, %82
  %94 = getelementptr inbounds i32, i32* %67, i64 2
  %95 = icmp sgt i32 %82, 0
  %96 = load i32, i32* %94, align 4
  br i1 %95, label %97, label %119

97:                                               ; preds = %92, %114
  %98 = phi i32 [ %118, %114 ], [ %96, %92 ]
  %99 = phi i32* [ %117, %114 ], [ %87, %92 ]
  %100 = phi i32 [ %104, %114 ], [ %82, %92 ]
  %101 = phi i32* [ %115, %114 ], [ %94, %92 ]
  %102 = phi i32 [ %105, %114 ], [ 0, %92 ]
  %103 = phi i1 [ false, %114 ], [ true, %92 ]
  %104 = add nsw i32 %100, -1
  store i32 %98, i32* %63, align 4
  %105 = load i32, i32* %99, align 4
  store i32 %105, i32* %64, align 4
  %106 = icmp ne i32 %98, 2147483647
  %107 = icmp ne i32 %105, 2147483647
  %108 = and i1 %106, %107
  %109 = icmp slt i32 %98, %105
  %110 = and i1 %109, %108
  %111 = icmp sgt i32 %98, %102
  %112 = or i1 %103, %111
  %113 = and i1 %112, %110
  br i1 %113, label %114, label %134

114:                                              ; preds = %97
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %6, %struct.SkIRect* nonnull dereferenceable(16) %7) #8
  %115 = getelementptr inbounds i32, i32* %101, i64 2
  %116 = icmp sgt i32 %104, 0
  %117 = getelementptr inbounds i32, i32* %101, i64 3
  %118 = load i32, i32* %115, align 4
  br i1 %116, label %97, label %119

119:                                              ; preds = %114, %92
  %120 = phi i32* [ %87, %92 ], [ %117, %114 ]
  %121 = phi i32 [ %96, %92 ], [ %118, %114 ]
  %122 = icmp eq i32 %121, 2147483647
  br i1 %122, label %123, label %134

123:                                              ; preds = %119
  %124 = load i32, i32* %61, align 4
  store i32 %124, i32* %53, align 4
  %125 = load i32, i32* %120, align 4
  %126 = icmp eq i32 %125, 2147483647
  br i1 %126, label %127, label %65

127:                                              ; preds = %123
  %128 = or i32 %93, %70
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %127
  %131 = bitcast %struct.SkIRect* %2 to i8*
  %132 = call i32 @bcmp(i8* %131, i8* nonnull %50, i64 16) #8
  %133 = icmp eq i32 %132, 0
  br label %134

134:                                              ; preds = %119, %81, %86, %76, %72, %65, %97, %130, %127, %55, %47
  %135 = phi i1 [ false, %47 ], [ false, %55 ], [ false, %127 ], [ %133, %130 ], [ false, %97 ], [ false, %65 ], [ false, %72 ], [ false, %76 ], [ false, %86 ], [ false, %81 ], [ false, %119 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8
  br label %136

136:                                              ; preds = %5, %11, %35, %41, %27, %134
  %137 = phi i1 [ %135, %134 ], [ false, %27 ], [ false, %41 ], [ false, %35 ], [ false, %11 ], [ false, %5 ]
  ret i1 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkRegion7isValidEv(%class.SkRegion* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %struct.SkIRect, align 4
  %3 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %4 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %3, align 8
  %5 = icmp eq %"struct.SkRegion::RunHead"* %4, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %6 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0
  br i1 %5, label %7, label %13

7:                                                ; preds = %1
  %8 = bitcast %struct.SkIRect* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = bitcast %class.SkRegion* %0 to i8*
  %10 = bitcast %struct.SkIRect* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 0, i64 16, i1 false)
  %11 = call i32 @bcmp(i8* %9, i8* nonnull %8, i64 16) #8
  %12 = icmp eq i32 %11, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  br label %51

13:                                               ; preds = %1
  %14 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = sub nsw i64 %16, %19
  %21 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = sub nsw i64 %23, %26
  %28 = icmp slt i64 %20, 1
  %29 = icmp slt i64 %27, 1
  %30 = or i1 %28, %29
  br i1 %30, label %51, label %31

31:                                               ; preds = %13
  %32 = or i64 %27, %20
  %33 = add nsw i64 %32, 2147483648
  %34 = icmp ugt i64 %33, 4294967295
  br i1 %34, label %51, label %35

35:                                               ; preds = %31
  %36 = icmp eq %"struct.SkRegion::RunHead"* %4, null
  br i1 %36, label %51, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 seq_cst, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %51

41:                                               ; preds = %37
  %42 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %3, align 8
  %43 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %42, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %42, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %42, i64 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %42, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = tail call fastcc zeroext i1 @_ZL12validate_runPKiiRK7SkIRectii(i32* %43, i32 %45, %struct.SkIRect* dereferenceable(16) %6, i32 %47, i32 %49)
  br label %51

51:                                               ; preds = %13, %37, %41, %35, %31, %7
  %52 = phi i1 [ %12, %7 ], [ false, %31 ], [ true, %35 ], [ false, %37 ], [ %50, %41 ], [ false, %13 ]
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRegion8IteratorC2ERKS_(%"class.SkRegion::Iterator"* nocapture, %class.SkRegion* dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 2
  %6 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 3
  %7 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 0
  %8 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  store %class.SkRegion* %1, %class.SkRegion** %7, align 8
  %9 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %10 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %9, align 8
  %11 = icmp eq %"struct.SkRegion::RunHead"* %10, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %12 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 3
  br i1 %11, label %13, label %14

13:                                               ; preds = %2
  store i8 1, i8* %12, align 8
  br label %33

14:                                               ; preds = %2
  store i8 0, i8* %12, align 8
  %15 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %9, align 8
  %16 = icmp eq %"struct.SkRegion::RunHead"* %15, null
  br i1 %16, label %17, label %22

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2
  %19 = bitcast %struct.SkIRect* %18 to i8*
  %20 = bitcast %class.SkRegion* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 4 %20, i64 16, i1 false) #8
  %21 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 1
  store i32* null, i32** %21, align 8
  br label %33

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %15, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 1
  store i32* %23, i32** %24, align 8
  %25 = getelementptr inbounds i32, i32* %23, i64 3
  %26 = load i32, i32* %25, align 4
  %27 = load i32, i32* %23, align 4
  %28 = getelementptr inbounds i32, i32* %23, i64 4
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds i32, i32* %23, i64 1
  %31 = load i32, i32* %30, align 4
  store i32 %26, i32* %3, align 4
  store i32 %27, i32* %4, align 4
  store i32 %29, i32* %5, align 4
  store i32 %31, i32* %6, align 4
  %32 = getelementptr inbounds i32, i32* %23, i64 5
  store i32* %32, i32** %24, align 8
  br label %33

33:                                               ; preds = %13, %17, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRegion8Iterator5resetERKS_(%"class.SkRegion::Iterator"* nocapture, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 0
  store %class.SkRegion* %1, %class.SkRegion** %3, align 8
  %4 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %5 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %4, align 8
  %6 = icmp eq %"struct.SkRegion::RunHead"* %5, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %7 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 3
  br i1 %6, label %8, label %9

8:                                                ; preds = %2
  store i8 1, i8* %7, align 8
  br label %32

9:                                                ; preds = %2
  store i8 0, i8* %7, align 8
  %10 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %4, align 8
  %11 = icmp eq %"struct.SkRegion::RunHead"* %10, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2
  %14 = bitcast %struct.SkIRect* %13 to i8*
  %15 = bitcast %class.SkRegion* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 4 %15, i64 16, i1 false)
  %16 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 1
  store i32* null, i32** %16, align 8
  br label %32

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %10, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 1
  store i32* %18, i32** %19, align 8
  %20 = getelementptr inbounds i32, i32* %18, i64 3
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* %18, align 4
  %23 = getelementptr inbounds i32, i32* %18, i64 4
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds i32, i32* %18, i64 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 0
  store i32 %21, i32* %27, align 4
  %28 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 1
  store i32 %22, i32* %28, align 4
  %29 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 2
  store i32 %24, i32* %29, align 4
  %30 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 3
  store i32 %26, i32* %30, align 4
  %31 = getelementptr inbounds i32, i32* %18, i64 5
  store i32* %31, i32** %19, align 8
  br label %32

32:                                               ; preds = %12, %17, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkRegion8Iterator6rewindEv(%"class.SkRegion::Iterator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 0
  %3 = load %class.SkRegion*, %class.SkRegion** %2, align 8
  %4 = icmp eq %class.SkRegion* %3, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %3, i64 0, i32 1
  %7 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %6, align 8
  %8 = icmp eq %"struct.SkRegion::RunHead"* %7, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %9 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 3
  br i1 %8, label %10, label %11

10:                                               ; preds = %5
  store i8 1, i8* %9, align 8
  br label %34

11:                                               ; preds = %5
  store i8 0, i8* %9, align 8
  %12 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %6, align 8
  %13 = icmp eq %"struct.SkRegion::RunHead"* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2
  %16 = bitcast %struct.SkIRect* %15 to i8*
  %17 = bitcast %class.SkRegion* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 4 %17, i64 16, i1 false) #8
  %18 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 1
  store i32* null, i32** %18, align 8
  br label %34

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %12, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 1
  store i32* %20, i32** %21, align 8
  %22 = getelementptr inbounds i32, i32* %20, i64 3
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %20, align 4
  %25 = getelementptr inbounds i32, i32* %20, i64 4
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds i32, i32* %20, i64 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 0
  store i32 %23, i32* %29, align 4
  %30 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 1
  store i32 %24, i32* %30, align 4
  %31 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 2
  store i32 %26, i32* %31, align 4
  %32 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 3
  store i32 %28, i32* %32, align 4
  %33 = getelementptr inbounds i32, i32* %20, i64 5
  store i32* %33, i32** %21, align 8
  br label %34

34:                                               ; preds = %19, %14, %10, %1
  %35 = phi i1 [ false, %1 ], [ true, %10 ], [ true, %14 ], [ true, %19 ]
  ret i1 %35
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %48

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store i8 1, i8* %2, align 8
  br label %48

10:                                               ; preds = %5
  %11 = load i32, i32* %7, align 4
  %12 = icmp eq i32 %11, 2147483647
  br i1 %12, label %19, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 0
  store i32 %11, i32* %14, align 8
  %15 = getelementptr inbounds i32, i32* %7, i64 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 2
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds i32, i32* %7, i64 2
  br label %46

19:                                               ; preds = %10
  %20 = getelementptr inbounds i32, i32* %7, i64 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 2147483647
  br i1 %22, label %45, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds i32, i32* %7, i64 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = getelementptr inbounds i32, i32* %7, i64 4
  br label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 3
  %31 = load i32, i32* %30, align 4
  br label %32

32:                                               ; preds = %29, %27
  %33 = phi i32 [ %31, %29 ], [ %21, %27 ]
  %34 = phi i32* [ %20, %29 ], [ %28, %27 ]
  %35 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 1
  store i32 %33, i32* %35, align 4
  %36 = load i32, i32* %34, align 4
  %37 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 3
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds i32, i32* %34, i64 2
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 0
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds i32, i32* %34, i64 3
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %0, i64 0, i32 2, i32 2
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds i32, i32* %34, i64 4
  br label %46

45:                                               ; preds = %19
  store i8 1, i8* %2, align 8
  br label %46

46:                                               ; preds = %32, %45, %13
  %47 = phi i32* [ %18, %13 ], [ %44, %32 ], [ %20, %45 ]
  store i32* %47, i32** %6, align 8
  br label %48

48:                                               ; preds = %1, %46, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRegion10CliperatorC2ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"*, %class.SkRegion* dereferenceable(24), %struct.SkIRect* dereferenceable(16)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 1
  %6 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 2
  %7 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 3
  %8 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 0
  %9 = bitcast i32* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #8
  store %class.SkRegion* %1, %class.SkRegion** %8, align 8
  %10 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %11 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %10, align 8
  %12 = icmp eq %"struct.SkRegion::RunHead"* %11, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %13 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 3
  br i1 %12, label %14, label %15

14:                                               ; preds = %3
  store i8 1, i8* %13, align 8
  br label %34

15:                                               ; preds = %3
  store i8 0, i8* %13, align 8
  %16 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %10, align 8
  %17 = icmp eq %"struct.SkRegion::RunHead"* %16, null
  br i1 %17, label %18, label %23

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2
  %20 = bitcast %struct.SkIRect* %19 to i8*
  %21 = bitcast %class.SkRegion* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 4 %21, i64 16, i1 false) #8
  %22 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 1
  store i32* null, i32** %22, align 8
  br label %34

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %16, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 1
  store i32* %24, i32** %25, align 8
  %26 = getelementptr inbounds i32, i32* %24, i64 3
  %27 = load i32, i32* %26, align 4
  %28 = load i32, i32* %24, align 4
  %29 = getelementptr inbounds i32, i32* %24, i64 4
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds i32, i32* %24, i64 1
  %32 = load i32, i32* %31, align 4
  store i32 %27, i32* %4, align 4
  store i32 %28, i32* %5, align 4
  store i32 %30, i32* %6, align 4
  store i32 %32, i32* %7, align 4
  %33 = getelementptr inbounds i32, i32* %24, i64 5
  store i32* %33, i32** %25, align 8
  br label %34

34:                                               ; preds = %14, %18, %23
  %35 = phi i1 [ false, %14 ], [ true, %18 ], [ true, %23 ]
  %36 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 1
  %37 = bitcast %struct.SkIRect* %36 to i8*
  %38 = bitcast %struct.SkIRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 16, i1 false)
  %39 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 2
  %40 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 3
  %41 = bitcast %struct.SkIRect* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false)
  store i8 1, i8* %40, align 8
  %42 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2
  br i1 %35, label %43, label %93

43:                                               ; preds = %34
  %44 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %45 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 1
  %46 = load i32, i32* %5, align 4
  %47 = load i32, i32* %44, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %93

49:                                               ; preds = %43, %88
  %50 = tail call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %39, %struct.SkIRect* dereferenceable(16) %2, %struct.SkIRect* dereferenceable(16) %42) #8
  br i1 %50, label %51, label %52

51:                                               ; preds = %49
  store i8 0, i8* %40, align 8
  br label %93

52:                                               ; preds = %49
  %53 = load i8, i8* %13, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %93

55:                                               ; preds = %52
  %56 = load i32*, i32** %45, align 8
  %57 = icmp eq i32* %56, null
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  store i8 1, i8* %13, align 8
  br label %93

59:                                               ; preds = %55
  %60 = load i32, i32* %56, align 4
  %61 = icmp eq i32 %60, 2147483647
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  store i32 %60, i32* %4, align 8
  %63 = getelementptr inbounds i32, i32* %56, i64 1
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %6, align 8
  %65 = getelementptr inbounds i32, i32* %56, i64 2
  br label %88

66:                                               ; preds = %59
  %67 = getelementptr inbounds i32, i32* %56, i64 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 2147483647
  br i1 %69, label %87, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds i32, i32* %56, i64 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = getelementptr inbounds i32, i32* %56, i64 4
  br label %78

76:                                               ; preds = %70
  %77 = load i32, i32* %7, align 4
  br label %78

78:                                               ; preds = %76, %74
  %79 = phi i32 [ %77, %76 ], [ %68, %74 ]
  %80 = phi i32* [ %67, %76 ], [ %75, %74 ]
  store i32 %79, i32* %5, align 4
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %7, align 4
  %82 = getelementptr inbounds i32, i32* %80, i64 2
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %4, align 8
  %84 = getelementptr inbounds i32, i32* %80, i64 3
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %6, align 8
  %86 = getelementptr inbounds i32, i32* %80, i64 4
  br label %88

87:                                               ; preds = %66
  store i8 1, i8* %13, align 8
  store i32* %67, i32** %45, align 8
  br label %93

88:                                               ; preds = %62, %78
  %89 = phi i32* [ %65, %62 ], [ %86, %78 ]
  store i32* %89, i32** %45, align 8
  %90 = load i32, i32* %5, align 4
  %91 = load i32, i32* %44, align 4
  %92 = icmp slt i32 %90, %91
  br i1 %92, label %49, label %93

93:                                               ; preds = %88, %52, %43, %58, %87, %34, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %108

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2
  store i8 1, i8* %2, align 8
  %7 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 3
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %108

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i8 1, i8* %7, align 8
  br label %108

15:                                               ; preds = %10
  %16 = load i32, i32* %12, align 4
  %17 = icmp eq i32 %16, 2147483647
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 0
  store i32 %16, i32* %19, align 8
  %20 = getelementptr inbounds i32, i32* %12, i64 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 2
  store i32 %21, i32* %22, align 8
  %23 = getelementptr inbounds i32, i32* %12, i64 2
  br label %51

24:                                               ; preds = %15
  %25 = getelementptr inbounds i32, i32* %12, i64 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 2147483647
  br i1 %27, label %50, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds i32, i32* %12, i64 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = getelementptr inbounds i32, i32* %12, i64 4
  br label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 3
  %36 = load i32, i32* %35, align 4
  br label %37

37:                                               ; preds = %34, %32
  %38 = phi i32 [ %36, %34 ], [ %26, %32 ]
  %39 = phi i32* [ %25, %34 ], [ %33, %32 ]
  %40 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 1
  store i32 %38, i32* %40, align 4
  %41 = load i32, i32* %39, align 4
  %42 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 3
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds i32, i32* %39, i64 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 0
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds i32, i32* %39, i64 3
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 2
  store i32 %47, i32* %48, align 8
  %49 = getelementptr inbounds i32, i32* %39, i64 4
  br label %51

50:                                               ; preds = %24
  store i8 1, i8* %7, align 8
  store i32* %25, i32** %11, align 8
  br label %108

51:                                               ; preds = %18, %37
  %52 = phi i32* [ %49, %37 ], [ %23, %18 ]
  store i32* %52, i32** %11, align 8
  %53 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 1
  %54 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 1, i32 3
  %55 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 1
  %56 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 2
  %57 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 0
  %59 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 2
  %60 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %0, i64 0, i32 0, i32 2, i32 3
  %61 = load i32, i32* %53, align 4
  %62 = load i32, i32* %54, align 4
  %63 = icmp slt i32 %61, %62
  br i1 %63, label %64, label %108

64:                                               ; preds = %51, %103
  %65 = tail call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %56, %struct.SkIRect* dereferenceable(16) %55, %struct.SkIRect* dereferenceable(16) %6) #8
  br i1 %65, label %66, label %67

66:                                               ; preds = %64
  store i8 0, i8* %2, align 8
  br label %108

67:                                               ; preds = %64
  %68 = load i8, i8* %7, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %108

70:                                               ; preds = %67
  %71 = load i32*, i32** %57, align 8
  %72 = icmp eq i32* %71, null
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  store i8 1, i8* %7, align 8
  br label %108

74:                                               ; preds = %70
  %75 = load i32, i32* %71, align 4
  %76 = icmp eq i32 %75, 2147483647
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  store i32 %75, i32* %58, align 8
  %78 = getelementptr inbounds i32, i32* %71, i64 1
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %59, align 8
  %80 = getelementptr inbounds i32, i32* %71, i64 2
  br label %103

81:                                               ; preds = %74
  %82 = getelementptr inbounds i32, i32* %71, i64 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 2147483647
  br i1 %84, label %102, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds i32, i32* %71, i64 2
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds i32, i32* %71, i64 4
  br label %93

91:                                               ; preds = %85
  %92 = load i32, i32* %60, align 4
  br label %93

93:                                               ; preds = %91, %89
  %94 = phi i32 [ %92, %91 ], [ %83, %89 ]
  %95 = phi i32* [ %82, %91 ], [ %90, %89 ]
  store i32 %94, i32* %53, align 4
  %96 = load i32, i32* %95, align 4
  store i32 %96, i32* %60, align 4
  %97 = getelementptr inbounds i32, i32* %95, i64 2
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %58, align 8
  %99 = getelementptr inbounds i32, i32* %95, i64 3
  %100 = load i32, i32* %99, align 4
  store i32 %100, i32* %59, align 8
  %101 = getelementptr inbounds i32, i32* %95, i64 4
  br label %103

102:                                              ; preds = %81
  store i8 1, i8* %7, align 8
  store i32* %82, i32** %57, align 8
  br label %108

103:                                              ; preds = %77, %93
  %104 = phi i32* [ %80, %77 ], [ %101, %93 ]
  store i32* %104, i32** %57, align 8
  %105 = load i32, i32* %53, align 4
  %106 = load i32, i32* %54, align 4
  %107 = icmp slt i32 %105, %106
  br i1 %107, label %64, label %108

108:                                              ; preds = %103, %67, %51, %73, %14, %5, %102, %50, %66, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8SkRegion10SpaneratorC2ERKS_iii(%"class.SkRegion::Spanerator"* nocapture, %class.SkRegion* nocapture readonly dereferenceable(24), i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.SkRegion::Spanerator", %"class.SkRegion::Spanerator"* %0, i64 0, i32 3
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %8 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %7, align 8
  %9 = icmp eq %"struct.SkRegion::RunHead"* %8, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %9, label %66, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, %2
  br i1 %13, label %66, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, %2
  br i1 %17, label %18, label %66

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, %4
  br i1 %21, label %22, label %66

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, %3
  br i1 %25, label %26, label %66

26:                                               ; preds = %22
  %27 = icmp eq %"struct.SkRegion::RunHead"* %8, null
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = icmp sgt i32 %20, %3
  %30 = select i1 %29, i32 %20, i32 %3
  %31 = icmp slt i32 %24, %4
  %32 = select i1 %31, i32 %24, i32 %4
  %33 = getelementptr inbounds %"class.SkRegion::Spanerator", %"class.SkRegion::Spanerator"* %0, i64 0, i32 1
  store i32 %30, i32* %33, align 8
  %34 = getelementptr inbounds %"class.SkRegion::Spanerator", %"class.SkRegion::Spanerator"* %0, i64 0, i32 2
  store i32 %32, i32* %34, align 4
  %35 = getelementptr inbounds %"class.SkRegion::Spanerator", %"class.SkRegion::Spanerator"* %0, i64 0, i32 0
  store i32* null, i32** %35, align 8
  store i8 0, i8* %6, align 8
  br label %66

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %8, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds i32, i32* %37, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, %2
  br i1 %40, label %51, label %41

41:                                               ; preds = %36, %41
  %42 = phi i32* [ %48, %41 ], [ %38, %36 ]
  %43 = getelementptr inbounds i32, i32* %42, i64 1
  %44 = load i32, i32* %43, align 4
  %45 = shl i32 %44, 1
  %46 = add nsw i32 %45, 3
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %42, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = icmp sgt i32 %49, %2
  br i1 %50, label %51, label %41

51:                                               ; preds = %41, %36
  %52 = phi i32* [ %38, %36 ], [ %48, %41 ]
  br label %53

53:                                               ; preds = %51, %58
  %54 = phi i32* [ %55, %58 ], [ %52, %51 ]
  %55 = getelementptr inbounds i32, i32* %54, i64 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, %4
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = getelementptr inbounds i32, i32* %54, i64 3
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, %3
  br i1 %61, label %62, label %53

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.SkRegion::Spanerator", %"class.SkRegion::Spanerator"* %0, i64 0, i32 0
  store i32* %55, i32** %63, align 8
  %64 = getelementptr inbounds %"class.SkRegion::Spanerator", %"class.SkRegion::Spanerator"* %0, i64 0, i32 1
  store i32 %3, i32* %64, align 8
  %65 = getelementptr inbounds %"class.SkRegion::Spanerator", %"class.SkRegion::Spanerator"* %0, i64 0, i32 2
  store i32 %4, i32* %65, align 4
  store i8 0, i8* %6, align 8
  br label %66

66:                                               ; preds = %53, %62, %10, %28, %22, %18, %14, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkRegion10Spanerator4nextEPiS1_(%"class.SkRegion::Spanerator"* nocapture, i32*, i32*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkRegion::Spanerator", %"class.SkRegion::Spanerator"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %45

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.SkRegion::Spanerator", %"class.SkRegion::Spanerator"* %0, i64 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = icmp eq i32* %9, null
  br i1 %10, label %11, label %21

11:                                               ; preds = %7
  store i8 1, i8* %4, align 8
  %12 = icmp eq i32* %1, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.SkRegion::Spanerator", %"class.SkRegion::Spanerator"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %1, align 4
  br label %16

16:                                               ; preds = %11, %13
  %17 = icmp eq i32* %2, null
  br i1 %17, label %45, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.SkRegion::Spanerator", %"class.SkRegion::Spanerator"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %2, align 4
  br label %45

21:                                               ; preds = %7
  %22 = load i32, i32* %9, align 4
  %23 = getelementptr inbounds %"class.SkRegion::Spanerator", %"class.SkRegion::Spanerator"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %22, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %21
  store i8 1, i8* %4, align 8
  br label %45

27:                                               ; preds = %21
  %28 = icmp eq i32* %1, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.SkRegion::Spanerator", %"class.SkRegion::Spanerator"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, %22
  %33 = select i1 %32, i32* %9, i32* %30
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %1, align 4
  br label %35

35:                                               ; preds = %27, %29
  %36 = icmp eq i32* %2, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds i32, i32* %9, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %23, align 4
  %41 = icmp slt i32 %39, %40
  %42 = select i1 %41, i32 %39, i32 %40
  store i32 %42, i32* %2, align 4
  br label %43

43:                                               ; preds = %35, %37
  %44 = getelementptr inbounds i32, i32* %9, i64 2
  store i32* %44, i32** %8, align 8
  br label %45

45:                                               ; preds = %26, %43, %18, %16, %3
  %46 = phi i1 [ false, %3 ], [ true, %16 ], [ true, %18 ], [ false, %26 ], [ true, %43 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkRegionPriv10VisitSpansERK8SkRegionRKNSt3__18functionIFvRK7SkIRectEEE(%class.SkRegion* dereferenceable(24), %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.SkIRect, align 4
  %4 = alloca %struct.SkIRect, align 4
  %5 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 1
  %6 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %5, align 8
  %7 = ptrtoint %"struct.SkRegion::RunHead"* %6 to i64
  switch i64 %7, label %13 [
    i64 -1, label %72
    i64 0, label %8
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %11 = load void (%"union.std::__1::__function::__policy_storage"*, %struct.SkIRect*)*, void (%"union.std::__1::__function::__policy_storage"*, %struct.SkIRect*)** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0
  tail call void %11(%"union.std::__1::__function::__policy_storage"* %12, %struct.SkIRect* dereferenceable(16) %9) #8
  br label %72

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.SkRegion::RunHead", %"struct.SkRegion::RunHead"* %6, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds i32, i32* %14, i64 1
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %15, align 4
  %18 = bitcast %struct.SkIRect* %3 to i8*
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %21 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %23 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0
  %25 = bitcast %struct.SkIRect* %4 to i8*
  %26 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %27 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %28 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %29 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  br label %30

30:                                               ; preds = %67, %13
  %31 = phi i32* [ %14, %13 ], [ %68, %67 ]
  %32 = phi i32 [ %16, %13 ], [ %33, %67 ]
  %33 = phi i32 [ %17, %13 ], [ %70, %67 ]
  %34 = getelementptr inbounds i32, i32* %31, i64 2
  %35 = getelementptr inbounds i32, i32* %31, i64 3
  %36 = load i32, i32* %34, align 4
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8
  %39 = load i32, i32* %35, align 4
  store i32 %39, i32* %26, align 4
  store i32 %32, i32* %27, align 4
  %40 = getelementptr inbounds i32, i32* %31, i64 4
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %28, align 4
  store i32 %33, i32* %29, align 4
  %42 = load void (%"union.std::__1::__function::__policy_storage"*, %struct.SkIRect*)*, void (%"union.std::__1::__function::__policy_storage"*, %struct.SkIRect*)** %23, align 8
  call void %42(%"union.std::__1::__function::__policy_storage"* %24, %struct.SkIRect* nonnull dereferenceable(16) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8
  %43 = getelementptr inbounds i32, i32* %31, i64 5
  br label %67

44:                                               ; preds = %30
  %45 = icmp sgt i32 %36, 1
  br i1 %45, label %46, label %67

46:                                               ; preds = %44
  %47 = icmp slt i32 %32, %33
  br i1 %47, label %52, label %48

48:                                               ; preds = %65, %46
  %49 = shl nsw i32 %36, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %35, i64 %50
  br label %67

52:                                               ; preds = %46, %65
  %53 = phi i32 [ %54, %65 ], [ %32, %46 ]
  %54 = add i32 %53, 1
  br label %55

55:                                               ; preds = %55, %52
  %56 = phi i32 [ 0, %52 ], [ %63, %55 ]
  %57 = phi i32* [ %35, %52 ], [ %62, %55 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %19, align 4
  store i32 %53, i32* %20, align 4
  %59 = getelementptr inbounds i32, i32* %57, i64 1
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %21, align 4
  store i32 %54, i32* %22, align 4
  %61 = load void (%"union.std::__1::__function::__policy_storage"*, %struct.SkIRect*)*, void (%"union.std::__1::__function::__policy_storage"*, %struct.SkIRect*)** %23, align 8
  call void %61(%"union.std::__1::__function::__policy_storage"* %24, %struct.SkIRect* nonnull dereferenceable(16) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  %62 = getelementptr inbounds i32, i32* %57, i64 2
  %63 = add nuw nsw i32 %56, 1
  %64 = icmp eq i32 %63, %36
  br i1 %64, label %65, label %55

65:                                               ; preds = %55
  %66 = icmp eq i32 %54, %33
  br i1 %66, label %48, label %52

67:                                               ; preds = %44, %48, %38
  %68 = phi i32* [ %43, %38 ], [ %51, %48 ], [ %35, %44 ]
  %69 = getelementptr inbounds i32, i32* %68, i64 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 2147483647
  br i1 %71, label %72, label %30

72:                                               ; preds = %67, %2, %8
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #6

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7RgnOper7addSpanEiPKiS1_(%class.RgnOper*, i32, i32*, i32*) local_unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %class.RgnOper, %class.RgnOper* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.RgnOper, %class.RgnOper* %0, i64 0, i32 6
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = add i32 %6, %9
  %11 = getelementptr inbounds %class.RgnOper, %class.RgnOper* %0, i64 0, i32 3
  %12 = load %class.RunArray*, %class.RunArray** %11, align 8
  %13 = getelementptr inbounds %class.RgnOper, %class.RgnOper* %0, i64 0, i32 0
  %14 = load i8, i8* %13, align 8
  %15 = getelementptr inbounds %class.RgnOper, %class.RgnOper* %0, i64 0, i32 1
  %16 = load i8, i8* %15, align 1
  br label %17

17:                                               ; preds = %17, %4
  %18 = phi i32* [ %2, %4 ], [ %21, %17 ]
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 2147483647
  %21 = getelementptr inbounds i32, i32* %18, i64 2
  br i1 %20, label %22, label %17

22:                                               ; preds = %17
  %23 = add i32 %10, 2
  %24 = zext i8 %14 to i32
  %25 = zext i8 %16 to i32
  %26 = ptrtoint i32* %18 to i64
  %27 = ptrtoint i32* %2 to i64
  %28 = sub i64 %26, %27
  br label %29

29:                                               ; preds = %29, %22
  %30 = phi i32* [ %3, %22 ], [ %33, %29 ]
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 2147483647
  %33 = getelementptr inbounds i32, i32* %30, i64 2
  br i1 %32, label %34, label %29

34:                                               ; preds = %29
  %35 = lshr exact i64 %28, 2
  %36 = trunc i64 %35 to i32
  %37 = ptrtoint i32* %30 to i64
  %38 = ptrtoint i32* %3 to i64
  %39 = sub i64 %37, %38
  %40 = lshr exact i64 %39, 2
  %41 = trunc i64 %40 to i32
  %42 = add i32 %10, 4
  %43 = add i32 %42, %36
  %44 = add i32 %43, %41
  %45 = getelementptr inbounds %class.RunArray, %class.RunArray* %12, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = icmp slt i32 %46, %44
  br i1 %47, label %51, label %48

48:                                               ; preds = %34
  %49 = getelementptr inbounds %class.RunArray, %class.RunArray* %12, i64 0, i32 3
  %50 = load i32*, i32** %49, align 8
  br label %88

51:                                               ; preds = %34
  %52 = ashr i32 %44, 1
  %53 = add nsw i32 %52, %44
  %54 = getelementptr inbounds %class.RunArray, %class.RunArray* %12, i64 0, i32 1
  %55 = icmp eq i32 %53, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %51
  %57 = sext i32 %53 to i64
  %58 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %class.SkAutoTMalloc* %54 to i8**
  %60 = load i8*, i8** %59, align 8
  store i32* null, i32** %58, align 8
  %61 = shl nsw i64 %57, 2
  %62 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %60, i64 %61) #8
  %63 = bitcast i8* %62 to i32*
  br label %64

64:                                               ; preds = %56, %51
  %65 = phi i32* [ %63, %56 ], [ null, %51 ]
  %66 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = bitcast %class.SkAutoTMalloc* %54 to i64*
  %68 = load i64, i64* %67, align 8
  store i32* %65, i32** %66, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %64
  %71 = inttoptr i64 %68 to i8*
  tail call void @_Z7sk_freePv(i8* %71) #8
  br label %72

72:                                               ; preds = %70, %64
  %73 = getelementptr inbounds %class.RunArray, %class.RunArray* %12, i64 0, i32 3
  %74 = load i32*, i32** %73, align 8
  %75 = getelementptr inbounds %class.RunArray, %class.RunArray* %12, i64 0, i32 0, i64 0
  %76 = icmp eq i32* %74, %75
  br i1 %76, label %77, label %84

77:                                               ; preds = %72
  %78 = bitcast %class.SkAutoTMalloc* %54 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = bitcast %class.RunArray* %12 to i8*
  %81 = load i32, i32* %45, align 8
  %82 = sext i32 %81 to i64
  %83 = shl nsw i64 %82, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 8 %80, i64 %83, i1 false) #8
  br label %84

84:                                               ; preds = %77, %72
  %85 = load i64, i64* %67, align 8
  %86 = bitcast i32** %73 to i64*
  store i64 %85, i64* %86, align 8
  store i32 %53, i32* %45, align 8
  %87 = inttoptr i64 %85 to i32*
  br label %88

88:                                               ; preds = %84, %48
  %89 = phi i32* [ %50, %48 ], [ %87, %84 ]
  %90 = getelementptr inbounds %class.RunArray, %class.RunArray* %12, i64 0, i32 3
  %91 = sext i32 %23 to i64
  %92 = getelementptr inbounds i32, i32* %89, i64 %91
  %93 = load i32, i32* %2, align 4
  %94 = load i32, i32* %3, align 4
  %95 = icmp eq i32 %93, 2147483647
  %96 = icmp eq i32 %94, 2147483647
  %97 = and i1 %95, %96
  br i1 %97, label %183, label %98

98:                                               ; preds = %88
  %99 = getelementptr inbounds i32, i32* %3, i64 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds i32, i32* %3, i64 2
  %102 = getelementptr inbounds i32, i32* %2, i64 1
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds i32, i32* %2, i64 2
  %105 = sub nsw i32 %25, %24
  br label %106

106:                                              ; preds = %177, %98
  %107 = phi i8 [ 1, %98 ], [ %179, %177 ]
  %108 = phi i32* [ %92, %98 ], [ %178, %177 ]
  %109 = phi i32* [ %104, %98 ], [ %151, %177 ]
  %110 = phi i32 [ %100, %98 ], [ %158, %177 ]
  %111 = phi i32 [ %94, %98 ], [ %157, %177 ]
  %112 = phi i32 [ %103, %98 ], [ %152, %177 ]
  %113 = phi i32 [ %93, %98 ], [ %153, %177 ]
  %114 = phi i32* [ %101, %98 ], [ %150, %177 ]
  %115 = icmp slt i32 %113, %111
  br i1 %115, label %116, label %123

116:                                              ; preds = %106
  %117 = icmp sgt i32 %112, %111
  br i1 %117, label %149, label %118

118:                                              ; preds = %116
  %119 = getelementptr inbounds i32, i32* %109, i64 1
  %120 = load i32, i32* %109, align 4
  %121 = getelementptr inbounds i32, i32* %109, i64 2
  %122 = load i32, i32* %119, align 4
  br label %149

123:                                              ; preds = %106
  %124 = icmp slt i32 %111, %113
  br i1 %124, label %125, label %127

125:                                              ; preds = %123
  %126 = icmp sgt i32 %110, %113
  br i1 %126, label %149, label %138

127:                                              ; preds = %123
  %128 = icmp sgt i32 %112, %110
  %129 = select i1 %128, i32 0, i32 %112
  %130 = icmp sgt i32 %110, %112
  %131 = select i1 %130, i32 %129, i32 %110
  %132 = select i1 %130, i32 %113, i32 %110
  br i1 %128, label %138, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds i32, i32* %109, i64 1
  %135 = load i32, i32* %109, align 4
  %136 = getelementptr inbounds i32, i32* %109, i64 2
  %137 = load i32, i32* %134, align 4
  br i1 %130, label %149, label %138

138:                                              ; preds = %133, %127, %125
  %139 = phi i32* [ %136, %133 ], [ %109, %125 ], [ %109, %127 ]
  %140 = phi i32 [ %137, %133 ], [ %112, %125 ], [ %112, %127 ]
  %141 = phi i32 [ %135, %133 ], [ %113, %125 ], [ %132, %127 ]
  %142 = phi i32 [ 3, %133 ], [ 2, %125 ], [ 3, %127 ]
  %143 = phi i32 [ %113, %133 ], [ %111, %125 ], [ %113, %127 ]
  %144 = phi i32 [ %110, %133 ], [ %110, %125 ], [ %131, %127 ]
  %145 = getelementptr inbounds i32, i32* %114, i64 1
  %146 = load i32, i32* %114, align 4
  %147 = getelementptr inbounds i32, i32* %114, i64 2
  %148 = load i32, i32* %145, align 4
  br label %149

149:                                              ; preds = %138, %133, %125, %118, %116
  %150 = phi i32* [ %114, %116 ], [ %147, %138 ], [ %114, %133 ], [ %114, %125 ], [ %114, %118 ]
  %151 = phi i32* [ %109, %116 ], [ %139, %138 ], [ %136, %133 ], [ %109, %125 ], [ %121, %118 ]
  %152 = phi i32 [ %112, %116 ], [ %140, %138 ], [ %137, %133 ], [ %112, %125 ], [ %122, %118 ]
  %153 = phi i32 [ %111, %116 ], [ %141, %138 ], [ %135, %133 ], [ %113, %125 ], [ %120, %118 ]
  %154 = phi i32 [ 1, %116 ], [ %142, %138 ], [ 3, %133 ], [ 2, %125 ], [ 1, %118 ]
  %155 = phi i32 [ %113, %116 ], [ %143, %138 ], [ %113, %133 ], [ %111, %125 ], [ %113, %118 ]
  %156 = phi i32 [ %111, %116 ], [ %144, %138 ], [ %112, %133 ], [ %113, %125 ], [ %112, %118 ]
  %157 = phi i32 [ %111, %116 ], [ %146, %138 ], [ %112, %133 ], [ %113, %125 ], [ %111, %118 ]
  %158 = phi i32 [ %110, %116 ], [ %148, %138 ], [ %110, %133 ], [ %110, %125 ], [ %110, %118 ]
  %159 = sub nsw i32 %154, %24
  %160 = icmp ule i32 %159, %105
  %161 = icmp slt i32 %155, %156
  %162 = and i1 %160, %161
  br i1 %162, label %163, label %177

163:                                              ; preds = %149
  %164 = and i8 %107, 1
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %166, label %170

166:                                              ; preds = %163
  %167 = getelementptr inbounds i32, i32* %108, i64 -1
  %168 = load i32, i32* %167, align 4
  %169 = icmp slt i32 %168, %155
  br i1 %169, label %170, label %173

170:                                              ; preds = %166, %163
  %171 = getelementptr inbounds i32, i32* %108, i64 1
  store i32 %155, i32* %108, align 4
  %172 = getelementptr inbounds i32, i32* %108, i64 2
  br label %173

173:                                              ; preds = %166, %170
  %174 = phi i32* [ %171, %170 ], [ %167, %166 ]
  %175 = phi i32* [ %172, %170 ], [ %108, %166 ]
  %176 = phi i8 [ 0, %170 ], [ %107, %166 ]
  store i32 %156, i32* %174, align 4
  br label %177

177:                                              ; preds = %173, %149
  %178 = phi i32* [ %108, %149 ], [ %175, %173 ]
  %179 = phi i8 [ %107, %149 ], [ %176, %173 ]
  %180 = icmp eq i32 %153, 2147483647
  %181 = icmp eq i32 %157, 2147483647
  %182 = and i1 %180, %181
  br i1 %182, label %183, label %106

183:                                              ; preds = %177, %88
  %184 = phi i32* [ %92, %88 ], [ %178, %177 ]
  %185 = getelementptr inbounds i32, i32* %184, i64 1
  store i32 2147483647, i32* %184, align 4
  %186 = bitcast i32** %90 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = ptrtoint i32* %185 to i64
  %189 = sub i64 %188, %187
  %190 = lshr exact i64 %189, 2
  %191 = trunc i64 %190 to i32
  %192 = sub nsw i32 %191, %23
  %193 = sext i32 %192 to i64
  %194 = load i64, i64* %7, align 8
  %195 = icmp eq i64 %194, %193
  %196 = icmp eq i32 %192, 1
  br i1 %195, label %197, label %216

197:                                              ; preds = %183
  %198 = load %class.RunArray*, %class.RunArray** %11, align 8
  %199 = load i32, i32* %5, align 4
  %200 = getelementptr inbounds %class.RunArray, %class.RunArray* %198, i64 0, i32 3
  %201 = load i32*, i32** %200, align 8
  br i1 %196, label %212, label %202

202:                                              ; preds = %197
  %203 = sext i32 %199 to i64
  %204 = getelementptr inbounds i32, i32* %201, i64 %203
  %205 = bitcast i32* %204 to i8*
  %206 = getelementptr inbounds i32, i32* %201, i64 %91
  %207 = bitcast i32* %206 to i8*
  %208 = shl nsw i64 %193, 2
  %209 = add nsw i64 %208, -4
  %210 = tail call i32 @bcmp(i8* %205, i8* %207, i64 %209)
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %221

212:                                              ; preds = %197, %202
  %213 = add nsw i32 %199, -2
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i32, i32* %201, i64 %214
  store i32 %1, i32* %215, align 4
  br label %234

216:                                              ; preds = %183
  %217 = icmp eq i64 %194, 0
  %218 = and i1 %217, %196
  br i1 %218, label %219, label %221

219:                                              ; preds = %216
  %220 = getelementptr inbounds %class.RgnOper, %class.RgnOper* %0, i64 0, i32 7
  store i32 %1, i32* %220, align 8
  br label %234

221:                                              ; preds = %202, %216
  %222 = load %class.RunArray*, %class.RunArray** %11, align 8
  %223 = getelementptr inbounds %class.RunArray, %class.RunArray* %222, i64 0, i32 3
  %224 = load i32*, i32** %223, align 8
  %225 = sext i32 %10 to i64
  %226 = getelementptr inbounds i32, i32* %224, i64 %225
  store i32 %1, i32* %226, align 4
  %227 = ashr i32 %192, 1
  %228 = load %class.RunArray*, %class.RunArray** %11, align 8
  %229 = add i32 %10, 1
  %230 = getelementptr inbounds %class.RunArray, %class.RunArray* %228, i64 0, i32 3
  %231 = load i32*, i32** %230, align 8
  %232 = sext i32 %229 to i64
  %233 = getelementptr inbounds i32, i32* %231, i64 %232
  store i32 %227, i32* %233, align 4
  store i32 %23, i32* %5, align 4
  store i64 %193, i64* %7, align 8
  br label %234

234:                                              ; preds = %219, %221, %212
  ret void
}

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer*, i8*, i64) local_unnamed_addr #2

declare void @_ZN7SkIRect4joinERKS_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
