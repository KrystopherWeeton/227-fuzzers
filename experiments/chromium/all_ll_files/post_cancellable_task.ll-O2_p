; ModuleID = '../../third_party/blink/renderer/platform/scheduler/common/post_cancellable_task.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/common/post_cancellable_task.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::TaskHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type { %"class.WTF::ThreadSafeRefCounted", %"class.base::OnceCallback", %"class.base::WeakPtrFactory" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.2", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.4", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.10" }>
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.10", [4 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN5blink10TaskHandle6Runner3RunERKS0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink10TaskHandle6RunnerEFvRKS3_EJNS_7WeakPtrIS4_EES3_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE = comdat any

@.str = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN5blink10TaskHandleC1Ev = hidden unnamed_addr alias void (%"class.blink::TaskHandle"*), void (%"class.blink::TaskHandle"*)* @_ZN5blink10TaskHandleC2Ev
@_ZN5blink10TaskHandleD1Ev = hidden unnamed_addr alias void (%"class.blink::TaskHandle"*), void (%"class.blink::TaskHandle"*)* @_ZN5blink10TaskHandleD2Ev
@_ZN5blink10TaskHandleC1EOS0_ = hidden unnamed_addr alias void (%"class.blink::TaskHandle"*, %"class.blink::TaskHandle"*), void (%"class.blink::TaskHandle"*, %"class.blink::TaskHandle"*)* @_ZN5blink10TaskHandleC2EOS0_
@_ZN5blink10TaskHandleC1E13scoped_refptrINS0_6RunnerEE = hidden unnamed_addr alias void (%"class.blink::TaskHandle"*, %"class.blink::TaskHandle::Runner"*), void (%"class.blink::TaskHandle"*, %"class.blink::TaskHandle::Runner"*)* @_ZN5blink10TaskHandleC2E13scoped_refptrINS0_6RunnerEE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10TaskHandle8IsActiveEv(%"class.blink::TaskHandle"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TaskHandle", %"class.blink::TaskHandle"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle::Runner"** %2, align 8
  %4 = icmp eq %"class.blink::TaskHandle::Runner"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TaskHandle::Runner", %"class.blink::TaskHandle::Runner"* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.base::internal::CallbackBase", %"class.base::internal::CallbackBase"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %9 = icmp eq %"class.base::internal::BindStateBase"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %6) #9
  %12 = xor i1 %11, true
  br label %13

13:                                               ; preds = %1, %10, %5
  %14 = phi i1 [ false, %1 ], [ false, %5 ], [ %12, %10 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10TaskHandle6CancelEv(%"class.blink::TaskHandle"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.blink::TaskHandle", %"class.blink::TaskHandle"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle::Runner"** %4, align 8
  %6 = icmp eq %"class.blink::TaskHandle::Runner"* %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.blink::TaskHandle::Runner", %"class.blink::TaskHandle::Runner"* %5, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = getelementptr inbounds %"class.blink::TaskHandle::Runner", %"class.blink::TaskHandle::Runner"* %5, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %14) #9
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  %16 = bitcast %"class.blink::TaskHandle"* %0 to i64*
  %17 = load %"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle::Runner"** %4, align 8
  store i64 0, i64* %16, align 8
  %18 = icmp eq %"class.blink::TaskHandle::Runner"* %17, null
  br i1 %18, label %37, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::TaskHandle::Runner", %"class.blink::TaskHandle::Runner"* %17, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::TaskHandle::Runner", %"class.blink::TaskHandle::Runner"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %37

24:                                               ; preds = %19
  %25 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 2
  %27 = bitcast %"class.base::RefCountedThreadSafe"* %26 to %"class.base::internal::BindStateBase"**
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 4
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.base::internal::WeakReferenceOwner"*
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %32) #9
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.base::internal::WeakPtrFactoryBase"*
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %34) #9
  %35 = bitcast %"class.base::RefCountedThreadSafe"* %26 to %"class.base::internal::CallbackBase"*
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %35) #9
  %36 = bitcast %"class.blink::TaskHandle::Runner"* %17 to i8*
  call void @free(i8* %36) #9
  br label %37

37:                                               ; preds = %1, %24, %19, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink10TaskHandleC2Ev(%"class.blink::TaskHandle"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::TaskHandle", %"class.blink::TaskHandle"* %0, i64 0, i32 0, i32 0
  store %"class.blink::TaskHandle::Runner"* null, %"class.blink::TaskHandle::Runner"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10TaskHandleD2Ev(%"class.blink::TaskHandle"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  tail call void @_ZN5blink10TaskHandle6CancelEv(%"class.blink::TaskHandle"* %0)
  %3 = getelementptr inbounds %"class.blink::TaskHandle", %"class.blink::TaskHandle"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle::Runner"** %3, align 8
  %5 = icmp eq %"class.blink::TaskHandle::Runner"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TaskHandle::Runner", %"class.blink::TaskHandle::Runner"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::TaskHandle::Runner", %"class.blink::TaskHandle::Runner"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %24

11:                                               ; preds = %6
  %12 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.base::internal::BindStateBase"**
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %13 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 4
  %19 = bitcast %"class.base::RefCountedThreadSafe"* %18 to %"class.base::internal::WeakReferenceOwner"*
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %19) #9
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  %21 = bitcast %"class.base::RefCountedThreadSafe"* %18 to %"class.base::internal::WeakPtrFactoryBase"*
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %21) #9
  %22 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.base::internal::CallbackBase"*
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %22) #9
  %23 = bitcast %"class.blink::TaskHandle::Runner"* %4 to i8*
  call void @free(i8* %23) #9
  br label %24

24:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink10TaskHandleC2EOS0_(%"class.blink::TaskHandle"* nocapture, %"class.blink::TaskHandle"* nocapture dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::TaskHandle", %"class.blink::TaskHandle"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.blink::TaskHandle"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.blink::TaskHandle"* %0 to i64*
  store i64 %5, i64* %6, align 8
  store %"class.blink::TaskHandle::Runner"* null, %"class.blink::TaskHandle::Runner"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.blink::TaskHandle"* @_ZN5blink10TaskHandleaSEOS0_(%"class.blink::TaskHandle"* returned, %"class.blink::TaskHandle"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::TaskHandle", align 8
  %4 = bitcast %"class.blink::TaskHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.blink::TaskHandle", %"class.blink::TaskHandle"* %1, i64 0, i32 0, i32 0
  %6 = bitcast %"class.blink::TaskHandle"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.blink::TaskHandle"* %3 to i64*
  store %"class.blink::TaskHandle::Runner"* null, %"class.blink::TaskHandle::Runner"** %5, align 8
  %9 = bitcast %"class.blink::TaskHandle"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 %7, i64* %9, align 8
  store i64 %10, i64* %8, align 8
  call void @_ZN5blink10TaskHandleD2Ev(%"class.blink::TaskHandle"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret %"class.blink::TaskHandle"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10TaskHandleC2E13scoped_refptrINS0_6RunnerEE(%"class.blink::TaskHandle"* nocapture, %"class.blink::TaskHandle::Runner"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::TaskHandle::Runner"* %1 to i64
  %4 = bitcast %"class.blink::TaskHandle"* %0 to i64*
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PostCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEE(%"class.blink::TaskHandle"* noalias nocapture sret, %"class.base::SequencedTaskRunner"* dereferenceable(16), %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::internal::WeakReference", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = alloca %"class.base::WeakPtr", align 8
  %12 = alloca %"class.blink::TaskHandle", align 8
  %13 = tail call noalias i8* @malloc(i64 32) #9
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %17 = bitcast i8* %13 to i32*
  store i32 1, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %13, i64 8
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast i8* %18 to i64*
  store i64 %16, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %21 = getelementptr inbounds i8, i8* %13, i64 16
  %22 = bitcast i8* %21 to %"class.base::internal::WeakPtrFactoryBase"*
  %23 = ptrtoint i8* %13 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %22, i64 %23) #9
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #9
  %25 = bitcast %"class.base::SequencedTaskRunner"* %1 to %"class.base::TaskRunner"*
  %26 = bitcast %"class.base::WeakPtr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = bitcast %"class.base::internal::WeakReference"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9, !noalias !2
  %28 = bitcast i8* %21 to %"class.base::internal::WeakReferenceOwner"*
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %7, %"class.base::internal::WeakReferenceOwner"* %28) #9, !noalias !2
  %29 = getelementptr inbounds i8, i8* %13, i64 24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !2
  %32 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %32, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %7, i64 %31) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9, !noalias !2
  %33 = bitcast %"class.blink::TaskHandle"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = icmp eq i8* %13, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %4
  %36 = atomicrmw add i32* %17, i32 1 monotonic
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #9
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  br label %41

41:                                               ; preds = %4, %35, %38
  %42 = call i8* @_Znwm(i64 72) #10, !noalias !7
  %43 = bitcast i8* %42 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %43, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink10TaskHandle6RunnerEFvRKS3_EJNS_7WeakPtrIS4_EES3_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #9, !noalias !7
  %44 = getelementptr inbounds i8, i8* %42, i64 32
  %45 = bitcast i8* %44 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle"*)* @_ZN5blink10TaskHandle6Runner3RunERKS0_ to i64), i64 0>, <2 x i64>* %45, align 8, !noalias !7
  %46 = getelementptr inbounds i8, i8* %42, i64 48
  %47 = bitcast i8* %46 to %"class.base::internal::WeakReference"*
  %48 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %47, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %48) #9, !noalias !7
  %49 = getelementptr inbounds i8, i8* %42, i64 56
  %50 = bitcast i8* %49 to i64*
  %51 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8, !noalias !7
  store i64 %52, i64* %50, align 8, !noalias !7
  %53 = getelementptr inbounds i8, i8* %42, i64 64
  %54 = getelementptr inbounds %"class.blink::TaskHandle", %"class.blink::TaskHandle"* %12, i64 0, i32 0, i32 0
  %55 = bitcast i8* %53 to i64*
  store i64 %23, i64* %55, align 8, !noalias !7
  store %"class.blink::TaskHandle::Runner"* null, %"class.blink::TaskHandle::Runner"** %54, align 8, !noalias !7
  %56 = bitcast %"class.base::OnceCallback"* %10 to i8**
  store i8* %42, i8** %56, align 8, !alias.scope !7
  %57 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %25, %"class.base::Location"* dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %10) #9
  %58 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %58) #9
  call void @_ZN5blink10TaskHandleD2Ev(%"class.blink::TaskHandle"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  br i1 %34, label %65, label %59

59:                                               ; preds = %41
  %60 = atomicrmw add i32* %17, i32 1 monotonic
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %59
  %63 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #9
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #9
  br label %67

65:                                               ; preds = %41
  %66 = bitcast %"class.blink::TaskHandle"* %0 to i64*
  store i64 %23, i64* %66, align 8
  br label %78

67:                                               ; preds = %59, %62
  %68 = bitcast %"class.blink::TaskHandle"* %0 to i64*
  store i64 %23, i64* %68, align 8
  %69 = atomicrmw sub i32* %17, i32 1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %78

71:                                               ; preds = %67
  %72 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9
  %73 = bitcast i8* %18 to %"class.base::internal::BindStateBase"**
  %74 = load i64, i64* %20, align 8
  %75 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %74, i64* %75, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %73, align 8
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %28) #9
  %76 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %76) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %22) #9
  %77 = bitcast i8* %18 to %"class.base::internal::CallbackBase"*
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %77) #9
  call void @free(i8* nonnull %13) #9
  br label %78

78:                                               ; preds = %65, %67, %71
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TaskHandle6Runner3RunERKS0_(%"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::TaskHandle::Runner", %"class.blink::TaskHandle::Runner"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %11 = getelementptr inbounds %"class.blink::TaskHandle::Runner", %"class.blink::TaskHandle::Runner"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %11) #9
  %12 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %10, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %15 = inttoptr i64 %10 to %"class.base::internal::BindStateBase"*
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %15, i64 0, i32 1
  %17 = bitcast void ()** %16 to void (%"class.base::internal::BindStateBase"*)**
  %18 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %17, align 8
  tail call void %18(%"class.base::internal::BindStateBase"* %15) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26PostDelayedCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEENS0_9TimeDeltaE(%"class.blink::TaskHandle"* noalias nocapture sret, %"class.base::SequencedTaskRunner"* dereferenceable(16), %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture, i64) local_unnamed_addr #0 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.base::internal::WeakReference", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = alloca %"class.base::WeakPtr", align 8
  %13 = alloca %"class.blink::TaskHandle", align 8
  %14 = tail call noalias i8* @malloc(i64 32) #9
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %18 = bitcast i8* %14 to i32*
  store i32 1, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %14, i64 8
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast i8* %19 to i64*
  store i64 %17, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %22 = getelementptr inbounds i8, i8* %14, i64 16
  %23 = bitcast i8* %22 to %"class.base::internal::WeakPtrFactoryBase"*
  %24 = ptrtoint i8* %14 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %23, i64 %24) #9
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #9
  %26 = bitcast %"class.base::SequencedTaskRunner"* %1 to %"class.base::TaskRunner"*
  %27 = bitcast %"class.base::WeakPtr"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #9
  %28 = bitcast %"class.base::internal::WeakReference"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9, !noalias !14
  %29 = bitcast i8* %22 to %"class.base::internal::WeakReferenceOwner"*
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %8, %"class.base::internal::WeakReferenceOwner"* %29) #9, !noalias !14
  %30 = getelementptr inbounds i8, i8* %14, i64 24
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !14
  %33 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %12, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %33, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %8, i64 %32) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9, !noalias !14
  %34 = bitcast %"class.blink::TaskHandle"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = icmp eq i8* %14, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %5
  %37 = atomicrmw add i32* %18, i32 1 monotonic
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %5, %36, %39
  %43 = call i8* @_Znwm(i64 72) #10, !noalias !19
  %44 = bitcast i8* %43 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %44, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink10TaskHandle6RunnerEFvRKS3_EJNS_7WeakPtrIS4_EES3_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #9, !noalias !19
  %45 = getelementptr inbounds i8, i8* %43, i64 32
  %46 = bitcast i8* %45 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle"*)* @_ZN5blink10TaskHandle6Runner3RunERKS0_ to i64), i64 0>, <2 x i64>* %46, align 8, !noalias !19
  %47 = getelementptr inbounds i8, i8* %43, i64 48
  %48 = bitcast i8* %47 to %"class.base::internal::WeakReference"*
  %49 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %12, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %48, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %49) #9, !noalias !19
  %50 = getelementptr inbounds i8, i8* %43, i64 56
  %51 = bitcast i8* %50 to i64*
  %52 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %12, i64 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8, !noalias !19
  store i64 %53, i64* %51, align 8, !noalias !19
  %54 = getelementptr inbounds i8, i8* %43, i64 64
  %55 = getelementptr inbounds %"class.blink::TaskHandle", %"class.blink::TaskHandle"* %13, i64 0, i32 0, i32 0
  %56 = bitcast i8* %54 to i64*
  store i64 %24, i64* %56, align 8, !noalias !19
  store %"class.blink::TaskHandle::Runner"* null, %"class.blink::TaskHandle::Runner"** %55, align 8, !noalias !19
  %57 = bitcast %"class.base::OnceCallback"* %11 to i8**
  store i8* %43, i8** %57, align 8, !alias.scope !19
  %58 = bitcast %"class.base::SequencedTaskRunner"* %1 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %59 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %58, align 8
  %60 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %59, align 8
  %61 = call zeroext i1 %60(%"class.base::TaskRunner"* %26, %"class.base::Location"* dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %11, i64 %4) #9
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #9
  call void @_ZN5blink10TaskHandleD2Ev(%"class.blink::TaskHandle"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #9
  br i1 %35, label %69, label %63

63:                                               ; preds = %42
  %64 = atomicrmw add i32* %18, i32 1 monotonic
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %63
  %67 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #9
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #9
  br label %71

69:                                               ; preds = %42
  %70 = bitcast %"class.blink::TaskHandle"* %0 to i64*
  store i64 %24, i64* %70, align 8
  br label %82

71:                                               ; preds = %63, %66
  %72 = bitcast %"class.blink::TaskHandle"* %0 to i64*
  store i64 %24, i64* %72, align 8
  %73 = atomicrmw sub i32* %18, i32 1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %82

75:                                               ; preds = %71
  %76 = bitcast %"class.base::OnceCallback"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #9
  %77 = bitcast i8* %19 to %"class.base::internal::BindStateBase"**
  %78 = load i64, i64* %21, align 8
  %79 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %78, i64* %79, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %77, align 8
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %29) #9
  %80 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #9
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %23) #9
  %81 = bitcast i8* %19 to %"class.base::internal::CallbackBase"*
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %81) #9
  call void @free(i8* nonnull %14) #9
  br label %82

82:                                               ; preds = %69, %71, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30PostNonNestableCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEE(%"class.blink::TaskHandle"* noalias nocapture sret, %"class.base::SequencedTaskRunner"* dereferenceable(16), %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::internal::WeakReference", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = alloca %"class.base::WeakPtr", align 8
  %12 = alloca %"class.blink::TaskHandle", align 8
  %13 = tail call noalias i8* @malloc(i64 32) #9
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %17 = bitcast i8* %13 to i32*
  store i32 1, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %13, i64 8
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast i8* %18 to i64*
  store i64 %16, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %21 = getelementptr inbounds i8, i8* %13, i64 16
  %22 = bitcast i8* %21 to %"class.base::internal::WeakPtrFactoryBase"*
  %23 = ptrtoint i8* %13 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %22, i64 %23) #9
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #9
  %25 = bitcast %"class.base::WeakPtr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #9
  %26 = bitcast %"class.base::internal::WeakReference"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9, !noalias !26
  %27 = bitcast i8* %21 to %"class.base::internal::WeakReferenceOwner"*
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %7, %"class.base::internal::WeakReferenceOwner"* %27) #9, !noalias !26
  %28 = getelementptr inbounds i8, i8* %13, i64 24
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !26
  %31 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %31, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %7, i64 %30) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9, !noalias !26
  %32 = bitcast %"class.blink::TaskHandle"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  %33 = icmp eq i8* %13, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %4
  %35 = atomicrmw add i32* %17, i32 1 monotonic
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #9
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #9
  br label %40

40:                                               ; preds = %4, %34, %37
  %41 = call i8* @_Znwm(i64 72) #10, !noalias !31
  %42 = bitcast i8* %41 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %42, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink10TaskHandle6RunnerEFvRKS3_EJNS_7WeakPtrIS4_EES3_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #9, !noalias !31
  %43 = getelementptr inbounds i8, i8* %41, i64 32
  %44 = bitcast i8* %43 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle"*)* @_ZN5blink10TaskHandle6Runner3RunERKS0_ to i64), i64 0>, <2 x i64>* %44, align 8, !noalias !31
  %45 = getelementptr inbounds i8, i8* %41, i64 48
  %46 = bitcast i8* %45 to %"class.base::internal::WeakReference"*
  %47 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %46, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %47) #9, !noalias !31
  %48 = getelementptr inbounds i8, i8* %41, i64 56
  %49 = bitcast i8* %48 to i64*
  %50 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8, !noalias !31
  store i64 %51, i64* %49, align 8, !noalias !31
  %52 = getelementptr inbounds i8, i8* %41, i64 64
  %53 = getelementptr inbounds %"class.blink::TaskHandle", %"class.blink::TaskHandle"* %12, i64 0, i32 0, i32 0
  %54 = bitcast i8* %52 to i64*
  store i64 %23, i64* %54, align 8, !noalias !31
  store %"class.blink::TaskHandle::Runner"* null, %"class.blink::TaskHandle::Runner"** %53, align 8, !noalias !31
  %55 = bitcast %"class.base::OnceCallback"* %10 to i8**
  store i8* %41, i8** %55, align 8, !alias.scope !31
  %56 = call zeroext i1 @_ZN4base19SequencedTaskRunner19PostNonNestableTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::SequencedTaskRunner"* %1, %"class.base::Location"* dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %10) #9
  %57 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %57) #9
  call void @_ZN5blink10TaskHandleD2Ev(%"class.blink::TaskHandle"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #9
  br i1 %33, label %64, label %58

58:                                               ; preds = %40
  %59 = atomicrmw add i32* %17, i32 1 monotonic
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %58
  %62 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #9
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #9
  br label %66

64:                                               ; preds = %40
  %65 = bitcast %"class.blink::TaskHandle"* %0 to i64*
  store i64 %23, i64* %65, align 8
  br label %77

66:                                               ; preds = %58, %61
  %67 = bitcast %"class.blink::TaskHandle"* %0 to i64*
  store i64 %23, i64* %67, align 8
  %68 = atomicrmw sub i32* %17, i32 1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %77

70:                                               ; preds = %66
  %71 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  %72 = bitcast i8* %18 to %"class.base::internal::BindStateBase"**
  %73 = load i64, i64* %20, align 8
  %74 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %73, i64* %74, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %72, align 8
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %27) #9
  %75 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %75) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %22) #9
  %76 = bitcast i8* %18 to %"class.base::internal::CallbackBase"*
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %76) #9
  call void @free(i8* nonnull %13) #9
  br label %77

77:                                               ; preds = %64, %66, %70
  ret void
}

declare zeroext i1 @_ZN4base19SequencedTaskRunner19PostNonNestableTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::SequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37PostNonNestableDelayedCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEENS0_9TimeDeltaE(%"class.blink::TaskHandle"* noalias nocapture sret, %"class.base::SequencedTaskRunner"* dereferenceable(16), %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture, i64) local_unnamed_addr #0 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.base::internal::WeakReference", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = alloca %"class.base::WeakPtr", align 8
  %13 = alloca %"class.blink::TaskHandle", align 8
  %14 = tail call noalias i8* @malloc(i64 32) #9
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %18 = bitcast i8* %14 to i32*
  store i32 1, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %14, i64 8
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast i8* %19 to i64*
  store i64 %17, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %22 = getelementptr inbounds i8, i8* %14, i64 16
  %23 = bitcast i8* %22 to %"class.base::internal::WeakPtrFactoryBase"*
  %24 = ptrtoint i8* %14 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %23, i64 %24) #9
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #9
  %26 = bitcast %"class.base::WeakPtr"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = bitcast %"class.base::internal::WeakReference"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9, !noalias !38
  %28 = bitcast i8* %22 to %"class.base::internal::WeakReferenceOwner"*
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %8, %"class.base::internal::WeakReferenceOwner"* %28) #9, !noalias !38
  %29 = getelementptr inbounds i8, i8* %14, i64 24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !38
  %32 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %12, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %32, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %8, i64 %31) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9, !noalias !38
  %33 = bitcast %"class.blink::TaskHandle"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = icmp eq i8* %14, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %5
  %36 = atomicrmw add i32* %18, i32 1 monotonic
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #9
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  br label %41

41:                                               ; preds = %5, %35, %38
  %42 = call i8* @_Znwm(i64 72) #10, !noalias !43
  %43 = bitcast i8* %42 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %43, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink10TaskHandle6RunnerEFvRKS3_EJNS_7WeakPtrIS4_EES3_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #9, !noalias !43
  %44 = getelementptr inbounds i8, i8* %42, i64 32
  %45 = bitcast i8* %44 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle"*)* @_ZN5blink10TaskHandle6Runner3RunERKS0_ to i64), i64 0>, <2 x i64>* %45, align 8, !noalias !43
  %46 = getelementptr inbounds i8, i8* %42, i64 48
  %47 = bitcast i8* %46 to %"class.base::internal::WeakReference"*
  %48 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %12, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %47, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %48) #9, !noalias !43
  %49 = getelementptr inbounds i8, i8* %42, i64 56
  %50 = bitcast i8* %49 to i64*
  %51 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %12, i64 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8, !noalias !43
  store i64 %52, i64* %50, align 8, !noalias !43
  %53 = getelementptr inbounds i8, i8* %42, i64 64
  %54 = getelementptr inbounds %"class.blink::TaskHandle", %"class.blink::TaskHandle"* %13, i64 0, i32 0, i32 0
  %55 = bitcast i8* %53 to i64*
  store i64 %24, i64* %55, align 8, !noalias !43
  store %"class.blink::TaskHandle::Runner"* null, %"class.blink::TaskHandle::Runner"** %54, align 8, !noalias !43
  %56 = bitcast %"class.base::OnceCallback"* %11 to i8**
  store i8* %42, i8** %56, align 8, !alias.scope !43
  %57 = bitcast %"class.base::SequencedTaskRunner"* %1 to i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %58 = load i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %58, i64 4
  %60 = load i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %59, align 8
  %61 = call zeroext i1 %60(%"class.base::SequencedTaskRunner"* %1, %"class.base::Location"* dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %11, i64 %4) #9
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #9
  call void @_ZN5blink10TaskHandleD2Ev(%"class.blink::TaskHandle"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  br i1 %34, label %69, label %63

63:                                               ; preds = %41
  %64 = atomicrmw add i32* %18, i32 1 monotonic
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %63
  %67 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #9
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #9
  br label %71

69:                                               ; preds = %41
  %70 = bitcast %"class.blink::TaskHandle"* %0 to i64*
  store i64 %24, i64* %70, align 8
  br label %82

71:                                               ; preds = %63, %66
  %72 = bitcast %"class.blink::TaskHandle"* %0 to i64*
  store i64 %24, i64* %72, align 8
  %73 = atomicrmw sub i32* %18, i32 1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %82

75:                                               ; preds = %71
  %76 = bitcast %"class.base::OnceCallback"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #9
  %77 = bitcast i8* %19 to %"class.base::internal::BindStateBase"**
  %78 = load i64, i64* %21, align 8
  %79 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %78, i64* %79, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %77, align 8
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %28) #9
  %80 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #9
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %23) #9
  %81 = bitcast i8* %19 to %"class.base::internal::CallbackBase"*
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %81) #9
  call void @free(i8* nonnull %14) #9
  br label %82

82:                                               ; preds = %69, %71, %75
  ret void
}

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #5

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #5

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #5

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #4

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.blink::TaskHandle"*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #9
  br i1 %8, label %9, label %44

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.blink::TaskHandle::Runner"**
  %12 = load %"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle::Runner"** %11, align 8
  %13 = icmp eq %"class.blink::TaskHandle::Runner"* %12, null
  br i1 %13, label %44, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #9
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #9
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #9
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.blink::TaskHandle::Runner"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle"*)**
  %39 = load void (%"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle"*)*, void (%"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle"*)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle"*)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle"*)* [ %39, %33 ], [ %41, %40 ]
  call void %43(%"class.blink::TaskHandle::Runner"* %30, %"class.blink::TaskHandle"* dereferenceable(8) %6) #9
  br label %44

44:                                               ; preds = %1, %9, %42
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink10TaskHandle6RunnerEFvRKS3_EJNS_7WeakPtrIS4_EES3_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.blink::TaskHandle"*
  tail call void @_ZN5blink10TaskHandleD2Ev(%"class.blink::TaskHandle"* %5) #9
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %7) #9
  %8 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #10
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %17 [
    i32 0, label %3
    i32 1, label %16
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.blink::TaskHandle::Runner"**
  %7 = load %"class.blink::TaskHandle::Runner"*, %"class.blink::TaskHandle::Runner"** %6, align 8
  %8 = icmp eq %"class.blink::TaskHandle::Runner"* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::TaskHandle::Runner", %"class.blink::TaskHandle::Runner"* %7, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.base::internal::CallbackBase", %"class.base::internal::CallbackBase"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %11, align 8
  %13 = icmp eq %"class.base::internal::BindStateBase"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %10) #9
  br label %17

16:                                               ; preds = %2
  br label %17

17:                                               ; preds = %2, %3, %9, %14, %16
  %18 = phi i1 [ true, %16 ], [ false, %2 ], [ true, %3 ], [ true, %9 ], [ %15, %14 ]
  ret i1 %18
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN5blink10TaskHandle6RunnerEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN5blink10TaskHandle6RunnerEE10GetWeakPtrEv"}
!5 = distinct !{!5, !6, !"_ZN5blink10TaskHandle6Runner9AsWeakPtrEv: argument 0"}
!6 = distinct !{!6, !"_ZN5blink10TaskHandle6Runner9AsWeakPtrEv"}
!7 = !{!8, !10, !12}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIMN5blink10TaskHandle6RunnerEFvRKS2_EJNS_7WeakPtrIS3_EES2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIMN5blink10TaskHandle6RunnerEFvRKS2_EJNS_7WeakPtrIS3_EES2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!12 = distinct !{!12, !13, !"_ZN3WTF4BindIMN5blink10TaskHandle6RunnerEFvRKS2_EJN4base7WeakPtrIS3_EES2_EFvvEEENS8_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF4BindIMN5blink10TaskHandle6RunnerEFvRKS2_EJN4base7WeakPtrIS3_EES2_EFvvEEENS8_12OnceCallbackIT1_EEOT_DpOT0_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZNK4base14WeakPtrFactoryIN5blink10TaskHandle6RunnerEE10GetWeakPtrEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4base14WeakPtrFactoryIN5blink10TaskHandle6RunnerEE10GetWeakPtrEv"}
!17 = distinct !{!17, !18, !"_ZN5blink10TaskHandle6Runner9AsWeakPtrEv: argument 0"}
!18 = distinct !{!18, !"_ZN5blink10TaskHandle6Runner9AsWeakPtrEv"}
!19 = !{!20, !22, !24}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceIMN5blink10TaskHandle6RunnerEFvRKS2_EJNS_7WeakPtrIS3_EES2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceIMN5blink10TaskHandle6RunnerEFvRKS2_EJNS_7WeakPtrIS3_EES2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!24 = distinct !{!24, !25, !"_ZN3WTF4BindIMN5blink10TaskHandle6RunnerEFvRKS2_EJN4base7WeakPtrIS3_EES2_EFvvEEENS8_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF4BindIMN5blink10TaskHandle6RunnerEFvRKS2_EJN4base7WeakPtrIS3_EES2_EFvvEEENS8_12OnceCallbackIT1_EEOT_DpOT0_"}
!26 = !{!27, !29}
!27 = distinct !{!27, !28, !"_ZNK4base14WeakPtrFactoryIN5blink10TaskHandle6RunnerEE10GetWeakPtrEv: argument 0"}
!28 = distinct !{!28, !"_ZNK4base14WeakPtrFactoryIN5blink10TaskHandle6RunnerEE10GetWeakPtrEv"}
!29 = distinct !{!29, !30, !"_ZN5blink10TaskHandle6Runner9AsWeakPtrEv: argument 0"}
!30 = distinct !{!30, !"_ZN5blink10TaskHandle6Runner9AsWeakPtrEv"}
!31 = !{!32, !34, !36}
!32 = distinct !{!32, !33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEDcOT0_DpOT1_: argument 0"}
!33 = distinct !{!33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEDcOT0_DpOT1_"}
!34 = distinct !{!34, !35, !"_ZN4base8BindOnceIMN5blink10TaskHandle6RunnerEFvRKS2_EJNS_7WeakPtrIS3_EES2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!35 = distinct !{!35, !"_ZN4base8BindOnceIMN5blink10TaskHandle6RunnerEFvRKS2_EJNS_7WeakPtrIS3_EES2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!36 = distinct !{!36, !37, !"_ZN3WTF4BindIMN5blink10TaskHandle6RunnerEFvRKS2_EJN4base7WeakPtrIS3_EES2_EFvvEEENS8_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!37 = distinct !{!37, !"_ZN3WTF4BindIMN5blink10TaskHandle6RunnerEFvRKS2_EJN4base7WeakPtrIS3_EES2_EFvvEEENS8_12OnceCallbackIT1_EEOT_DpOT0_"}
!38 = !{!39, !41}
!39 = distinct !{!39, !40, !"_ZNK4base14WeakPtrFactoryIN5blink10TaskHandle6RunnerEE10GetWeakPtrEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4base14WeakPtrFactoryIN5blink10TaskHandle6RunnerEE10GetWeakPtrEv"}
!41 = distinct !{!41, !42, !"_ZN5blink10TaskHandle6Runner9AsWeakPtrEv: argument 0"}
!42 = distinct !{!42, !"_ZN5blink10TaskHandle6Runner9AsWeakPtrEv"}
!43 = !{!44, !46, !48}
!44 = distinct !{!44, !45, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEDcOT0_DpOT1_: argument 0"}
!45 = distinct !{!45, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink10TaskHandle6RunnerEFvRKS4_EJNS_7WeakPtrIS5_EES4_EEEDcOT0_DpOT1_"}
!46 = distinct !{!46, !47, !"_ZN4base8BindOnceIMN5blink10TaskHandle6RunnerEFvRKS2_EJNS_7WeakPtrIS3_EES2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!47 = distinct !{!47, !"_ZN4base8BindOnceIMN5blink10TaskHandle6RunnerEFvRKS2_EJNS_7WeakPtrIS3_EES2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!48 = distinct !{!48, !49, !"_ZN3WTF4BindIMN5blink10TaskHandle6RunnerEFvRKS2_EJN4base7WeakPtrIS3_EES2_EFvvEEENS8_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!49 = distinct !{!49, !"_ZN3WTF4BindIMN5blink10TaskHandle6RunnerEFvRKS2_EJN4base7WeakPtrIS3_EES2_EFvvEEENS8_12OnceCallbackIT1_EEOT_DpOT0_"}
