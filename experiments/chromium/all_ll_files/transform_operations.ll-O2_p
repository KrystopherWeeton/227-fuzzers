; ModuleID = '../../ui/gfx/transform_operations.cc'
source_filename = "../../ui/gfx/transform_operations.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.gfx::TransformOperation" = type { i32, %"class.gfx::Transform", %union.anon }
%union.anon = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.anon.3, float }
%struct.anon.3 = type { float, float, float }
%"class.gfx::Quaternion" = type { double, double, double, double }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.gfx::TransformOperations" = type { %"class.std::__1::vector", %"class.std::__1::unordered_map" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.gfx::TransformOperation"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.20", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { float }
%"struct.gfx::DecomposedTransform" = type { [3 x float], [3 x float], [3 x float], [4 x float], %"class.gfx::Quaternion" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i64* }
%"class.std::__1::tuple.31" = type { i8 }
%"class.gfx::BoxF" = type { %"class.gfx::Point3F", float, float, float }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN3gfx18TransformOperationENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

@__const._ZNK3gfx19TransformOperations14ApplyRemainingEm.to_return = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@__const._ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_.blended = private unnamed_addr constant %"struct.gfx::TransformOperation" { i32 -1431655766, %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, %union.anon { %struct.anon.2 { %struct.anon.3 { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000 } } }, align 4
@__const._ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_.matrix_transform = private unnamed_addr constant { [3 x float], [3 x float], [3 x float], [4 x float], [4 x i8], %"class.gfx::Quaternion" } { [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA", %"class.gfx::Quaternion" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF } }, align 8
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN3gfx19TransformOperationsC1Ev = hidden unnamed_addr alias void (%"class.gfx::TransformOperations"*), void (%"class.gfx::TransformOperations"*)* @_ZN3gfx19TransformOperationsC2Ev
@_ZN3gfx19TransformOperationsC1ERKS0_ = hidden unnamed_addr alias void (%"class.gfx::TransformOperations"*, %"class.gfx::TransformOperations"*), void (%"class.gfx::TransformOperations"*, %"class.gfx::TransformOperations"*)* @_ZN3gfx19TransformOperationsC2ERKS0_
@_ZN3gfx19TransformOperationsD1Ev = hidden unnamed_addr alias void (%"class.gfx::TransformOperations"*), void (%"class.gfx::TransformOperations"*)* @_ZN3gfx19TransformOperationsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19TransformOperationsC2Ev(%"class.gfx::TransformOperations"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 3
  %3 = bitcast %"class.std::__1::__compressed_pair.20"* %2 to i32*
  %4 = bitcast %"class.gfx::TransformOperations"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false)
  store i32 1065353216, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19TransformOperationsC2ERKS0_(%"class.gfx::TransformOperations"*, %"class.gfx::TransformOperations"* readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 3
  %4 = bitcast %"class.std::__1::__compressed_pair.20"* %3 to i32*
  %5 = bitcast %"class.gfx::TransformOperations"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 56, i1 false)
  store i32 1065353216, i32* %4, align 4
  %6 = icmp eq %"class.gfx::TransformOperations"* %0, %1
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %9, align 8
  %11 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %11, align 8
  tail call void @_ZNSt3__16vectorIN3gfx18TransformOperationENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %8, %"struct.gfx::TransformOperation"* %10, %"struct.gfx::TransformOperation"* %12) #12
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19TransformOperationsD2Ev(%"class.gfx::TransformOperations"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1, %15
  %6 = phi %"struct.std::__1::__hash_node_base"* [ %8, %15 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %6, i64 3
  %10 = bitcast %"struct.std::__1::__hash_node_base"* %9 to %"struct.gfx::DecomposedTransform"**
  %11 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %10, align 8
  store %"struct.gfx::DecomposedTransform"* null, %"struct.gfx::DecomposedTransform"** %10, align 8
  %12 = icmp eq %"struct.gfx::DecomposedTransform"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %5
  %14 = bitcast %"struct.gfx::DecomposedTransform"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %13, %5
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  %17 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  br i1 %17, label %18, label %5

18:                                               ; preds = %15, %1
  %19 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base"** %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"struct.std::__1::__hash_node_base"** %20 to i8*
  tail call void @_ZdlPv(i8* %23) #13
  br label %24

24:                                               ; preds = %18, %22
  %25 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %25, align 8
  %27 = icmp eq %"struct.gfx::TransformOperation"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = ptrtoint %"struct.gfx::TransformOperation"* %26 to i64
  %30 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast %"struct.gfx::TransformOperation"** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = bitcast %"struct.gfx::TransformOperation"* %26 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %24, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.gfx::TransformOperations"* @_ZN3gfx19TransformOperationsaSERKS0_(%"class.gfx::TransformOperations"* returned, %"class.gfx::TransformOperations"* readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.gfx::TransformOperations"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %6, align 8
  %8 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %8, align 8
  tail call void @_ZNSt3__16vectorIN3gfx18TransformOperationENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %5, %"struct.gfx::TransformOperation"* %7, %"struct.gfx::TransformOperation"* %9) #12
  br label %10

10:                                               ; preds = %2, %4
  ret %"class.gfx::TransformOperations"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx19TransformOperations5ApplyEv(%"class.gfx::Transform"* noalias sret, %"class.gfx::TransformOperations"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK3gfx19TransformOperations14ApplyRemainingEm.to_return to i8*), i64 68, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %4, align 4, !alias.scope !2
  %5 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.gfx::TransformOperation"** %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !2
  %8 = bitcast %"class.gfx::TransformOperations"* %1 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !2
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %22, label %11

11:                                               ; preds = %2, %11
  %12 = phi i64 [ %18, %11 ], [ %9, %2 ]
  %13 = phi i64 [ %16, %11 ], [ 0, %2 ]
  %14 = inttoptr i64 %12 to %"struct.gfx::TransformOperation"*
  %15 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %14, i64 %13, i32 1
  tail call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* %0, %"class.gfx::Transform"* dereferenceable(68) %15) #12
  %16 = add nuw i64 %13, 1
  %17 = load i64, i64* %6, align 8, !noalias !2
  %18 = load i64, i64* %8, align 8, !noalias !2
  %19 = sub i64 %17, %18
  %20 = sdiv exact i64 %19, 88
  %21 = icmp ult i64 %16, %20
  br i1 %21, label %11, label %22

22:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx19TransformOperations14ApplyRemainingEm(%"class.gfx::Transform"* noalias sret, %"class.gfx::TransformOperations"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK3gfx19TransformOperations14ApplyRemainingEm.to_return to i8*), i64 68, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %5 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.gfx::TransformOperation"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.gfx::TransformOperations"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 88
  %13 = icmp ugt i64 %12, %2
  br i1 %13, label %15, label %14

14:                                               ; preds = %15, %3
  ret void

15:                                               ; preds = %3, %15
  %16 = phi i64 [ %22, %15 ], [ %10, %3 ]
  %17 = phi i64 [ %20, %15 ], [ %2, %3 ]
  %18 = inttoptr i64 %16 to %"struct.gfx::TransformOperation"*
  %19 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %18, i64 %17, i32 1
  tail call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* %0, %"class.gfx::Transform"* dereferenceable(68) %19) #12
  %20 = add nuw i64 %17, 1
  %21 = load i64, i64* %7, align 8
  %22 = load i64, i64* %9, align 8
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 88
  %25 = icmp ult i64 %20, %24
  br i1 %25, label %15, label %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx19TransformOperations5BlendERKS0_f(%"class.gfx::TransformOperations"* noalias sret, %"class.gfx::TransformOperations"*, %"class.gfx::TransformOperations"* dereferenceable(64), float) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 4, i64 0
  %6 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 3
  %7 = bitcast %"class.std::__1::__compressed_pair.20"* %6 to i32*
  %8 = bitcast %"class.gfx::TransformOperations"* %0 to i8*
  %9 = bitcast i8* %5 to i32*
  store i32 -1431655766, i32* %9, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 56, i1 false) #12
  store i32 1065353216, i32* %7, align 8
  %10 = tail call zeroext i1 @_ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_(%"class.gfx::TransformOperations"* %1, %"class.gfx::TransformOperations"* dereferenceable(64) %2, float %3, %"class.gfx::TransformOperations"* %0)
  br i1 %10, label %21, label %11

11:                                               ; preds = %4
  %12 = fcmp olt float %3, 5.000000e-01
  %13 = select i1 %12, %"class.gfx::TransformOperations"* %2, %"class.gfx::TransformOperations"* %1
  %14 = icmp eq %"class.gfx::TransformOperations"* %13, %0
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %13, i64 0, i32 0, i32 0, i32 0
  %18 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %17, align 8
  %19 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %13, i64 0, i32 0, i32 0, i32 1
  %20 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %19, align 8
  tail call void @_ZNSt3__16vectorIN3gfx18TransformOperationENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %16, %"struct.gfx::TransformOperation"* %18, %"struct.gfx::TransformOperation"* %20) #12
  br label %21

21:                                               ; preds = %15, %11, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_(%"class.gfx::TransformOperations"*, %"class.gfx::TransformOperations"* dereferenceable(64), float, %"class.gfx::TransformOperations"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.31", align 1
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple.31", align 1
  %9 = alloca i64, align 8
  %10 = alloca %"struct.gfx::TransformOperation", align 4
  %11 = alloca %"struct.gfx::DecomposedTransform", align 8
  %12 = alloca %"class.gfx::Transform", align 4
  %13 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %13, align 8
  %15 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %15, align 8
  %17 = icmp eq %"struct.gfx::TransformOperation"* %14, %16
  br i1 %17, label %24, label %20

18:                                               ; preds = %20
  %19 = icmp eq %"struct.gfx::TransformOperation"* %23, %16
  br i1 %19, label %24, label %20

20:                                               ; preds = %4, %18
  %21 = phi %"struct.gfx::TransformOperation"* [ %23, %18 ], [ %14, %4 ]
  %22 = tail call zeroext i1 @_ZNK3gfx18TransformOperation10IsIdentityEv(%"struct.gfx::TransformOperation"* %21) #12
  %23 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %21, i64 1
  br i1 %22, label %18, label %24

24:                                               ; preds = %18, %20, %4
  %25 = phi i1 [ true, %4 ], [ false, %20 ], [ true, %18 ]
  %26 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %26, align 8
  %28 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %29 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %28, align 8
  %30 = icmp eq %"struct.gfx::TransformOperation"* %27, %29
  br i1 %30, label %37, label %33

31:                                               ; preds = %33
  %32 = icmp eq %"struct.gfx::TransformOperation"* %36, %29
  br i1 %32, label %37, label %33

33:                                               ; preds = %24, %31
  %34 = phi %"struct.gfx::TransformOperation"* [ %36, %31 ], [ %27, %24 ]
  %35 = tail call zeroext i1 @_ZNK3gfx18TransformOperation10IsIdentityEv(%"struct.gfx::TransformOperation"* %34) #12
  %36 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %34, i64 1
  br i1 %35, label %31, label %38

37:                                               ; preds = %31, %24
  br i1 %25, label %135, label %38

38:                                               ; preds = %33, %37
  %39 = phi i1 [ true, %37 ], [ false, %33 ]
  %40 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  store i64 -6148914691236517206, i64* %9, align 8
  %41 = bitcast %"struct.gfx::TransformOperation"** %28 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = sdiv exact i64 %45, 88
  %47 = bitcast %"struct.gfx::TransformOperation"** %15 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.gfx::TransformOperations"* %1 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = sdiv exact i64 %51, 88
  %53 = icmp ult i64 %52, %46
  %54 = select i1 %53, i64 %52, i64 %46
  %55 = icmp eq i64 %54, 0
  %56 = inttoptr i64 %44 to %"struct.gfx::TransformOperation"*
  %57 = inttoptr i64 %50 to %"struct.gfx::TransformOperation"*
  br i1 %55, label %68, label %58

58:                                               ; preds = %38, %65
  %59 = phi i64 [ %66, %65 ], [ 0, %38 ]
  %60 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %56, i64 %59, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %59, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %61, %63
  br i1 %64, label %65, label %71

65:                                               ; preds = %58
  %66 = add nuw i64 %59, 1
  %67 = icmp ult i64 %66, %54
  br i1 %67, label %58, label %68

68:                                               ; preds = %65, %38
  %69 = icmp ult i64 %46, %52
  %70 = select i1 %69, i64 %52, i64 %46
  br label %71

71:                                               ; preds = %58, %68
  %72 = phi i64 [ %70, %68 ], [ %59, %58 ]
  store i64 %72, i64* %9, align 8
  %73 = select i1 %25, i64 0, i64 %52
  %74 = select i1 %39, i64 0, i64 %46
  %75 = icmp ult i64 %73, %74
  %76 = select i1 %75, i64 %74, i64 %73
  %77 = icmp eq i64 %72, 0
  br i1 %77, label %104, label %78

78:                                               ; preds = %71
  %79 = bitcast %"struct.gfx::TransformOperation"* %10 to i8*
  %80 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %10, i64 0, i32 0
  %81 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %10, i64 0, i32 1
  %82 = bitcast %"class.gfx::Transform"* %81 to i8*
  %83 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %10, i64 0, i32 1, i32 0, i32 1
  br label %84

84:                                               ; preds = %101, %78
  %85 = phi %"struct.gfx::TransformOperation"* [ %57, %78 ], [ %102, %101 ]
  %86 = phi i64 [ 0, %78 ], [ %98, %101 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %79) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* align 4 bitcast (%"struct.gfx::TransformOperation"* @__const._ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_.blended to i8*), i64 88, i1 false)
  store i32 8, i32* %80, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  store i8 0, i8* %83, align 4
  %87 = icmp ult i64 %86, %73
  %88 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %85, i64 %86
  %89 = select i1 %87, %"struct.gfx::TransformOperation"* %88, %"struct.gfx::TransformOperation"* null
  %90 = icmp ult i64 %86, %74
  br i1 %90, label %91, label %94

91:                                               ; preds = %84
  %92 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %26, align 8
  %93 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %92, i64 %86
  br label %94

94:                                               ; preds = %84, %91
  %95 = phi %"struct.gfx::TransformOperation"* [ %93, %91 ], [ null, %84 ]
  %96 = call zeroext i1 @_ZN3gfx18TransformOperation24BlendTransformOperationsEPKS0_S2_fPS0_(%"struct.gfx::TransformOperation"* %89, %"struct.gfx::TransformOperation"* %95, float %2, %"struct.gfx::TransformOperation"* nonnull %10) #12
  br i1 %96, label %97, label %103

97:                                               ; preds = %94
  call void @_ZN3gfx19TransformOperations6AppendERKNS_18TransformOperationE(%"class.gfx::TransformOperations"* %3, %"struct.gfx::TransformOperation"* nonnull dereferenceable(88) %10)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %79) #12
  %98 = add nuw i64 %86, 1
  %99 = load i64, i64* %9, align 8
  %100 = icmp ult i64 %98, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %97
  %102 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %13, align 8
  br label %84

103:                                              ; preds = %94
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %79) #12
  br label %133

104:                                              ; preds = %97, %71
  %105 = phi i64 [ 0, %71 ], [ %99, %97 ]
  %106 = icmp ult i64 %105, %76
  br i1 %106, label %107, label %133

107:                                              ; preds = %104
  %108 = call zeroext i1 @_ZNK3gfx19TransformOperations26ComputeDecomposedTransformEm(%"class.gfx::TransformOperations"* %0, i64 %105)
  br i1 %108, label %109, label %133

109:                                              ; preds = %107
  %110 = call zeroext i1 @_ZNK3gfx19TransformOperations26ComputeDecomposedTransformEm(%"class.gfx::TransformOperations"* %1, i64 %105)
  br i1 %110, label %111, label %133

111:                                              ; preds = %109
  %112 = bitcast %"struct.gfx::DecomposedTransform"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %112) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* align 8 bitcast ({ [3 x float], [3 x float], [3 x float], [4 x float], [4 x i8], %"class.gfx::Quaternion" }* @__const._ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_.matrix_transform to i8*), i64 88, i1 false)
  %113 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0
  %114 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #12
  %115 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store i64* %9, i64** %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::tuple.31", %"class.std::__1::tuple.31"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %116) #12
  %117 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %113, i64* nonnull dereferenceable(8) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.31"* nonnull dereferenceable(1) %6) #12
  %118 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %117, 0
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %118, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %116) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #12
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %119 to %"struct.gfx::DecomposedTransform"**
  %121 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %120, align 8
  %122 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %1, i64 0, i32 1, i32 0
  %123 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #12
  %124 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store i64* %9, i64** %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::tuple.31", %"class.std::__1::tuple.31"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %125) #12
  %126 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %122, i64* nonnull dereferenceable(8) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.31"* nonnull dereferenceable(1) %8) #12
  %127 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %126, 0
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %125) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #12
  %129 = bitcast %"struct.std::__1::__hash_node_base"* %128 to %"struct.gfx::DecomposedTransform"**
  %130 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %129, align 8
  %131 = fpext float %2 to double
  call void @_ZN3gfx25BlendDecomposedTransformsERKNS_19DecomposedTransformES2_d(%"struct.gfx::DecomposedTransform"* nonnull sret %11, %"struct.gfx::DecomposedTransform"* dereferenceable(88) %121, %"struct.gfx::DecomposedTransform"* dereferenceable(88) %130, double %131) #12
  %132 = bitcast %"class.gfx::Transform"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %132) #12
  call void @_ZN3gfx16ComposeTransformERKNS_19DecomposedTransformE(%"class.gfx::Transform"* nonnull sret %12, %"struct.gfx::DecomposedTransform"* nonnull dereferenceable(88) %11) #12
  call void @_ZN3gfx19TransformOperations12AppendMatrixERKNS_9TransformE(%"class.gfx::TransformOperations"* %3, %"class.gfx::Transform"* nonnull dereferenceable(68) %12)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %132) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %112) #12
  br label %133

133:                                              ; preds = %103, %104, %111, %107, %109
  %134 = phi i1 [ false, %103 ], [ false, %109 ], [ false, %107 ], [ true, %111 ], [ true, %104 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  br label %135

135:                                              ; preds = %37, %133
  %136 = phi i1 [ %134, %133 ], [ true, %37 ]
  ret i1 %136
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx19TransformOperations19BlendedBoundsForBoxERKNS_4BoxFERKS0_ffPS1_(%"class.gfx::TransformOperations"* nocapture readonly, %"class.gfx::BoxF"* nocapture readonly dereferenceable(24), %"class.gfx::TransformOperations"* nocapture readonly dereferenceable(64), float, float, %"class.gfx::BoxF"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.gfx::BoxF", align 4
  %8 = bitcast %"class.gfx::BoxF"* %5 to i8*
  %9 = bitcast %"class.gfx::BoxF"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 24, i1 false)
  %10 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %10, align 8
  %12 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %2, i64 0, i32 0, i32 0, i32 1
  %13 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %12, align 8
  %14 = icmp eq %"struct.gfx::TransformOperation"* %11, %13
  br i1 %14, label %21, label %17

15:                                               ; preds = %17
  %16 = icmp eq %"struct.gfx::TransformOperation"* %20, %13
  br i1 %16, label %21, label %17

17:                                               ; preds = %6, %15
  %18 = phi %"struct.gfx::TransformOperation"* [ %20, %15 ], [ %11, %6 ]
  %19 = tail call zeroext i1 @_ZNK3gfx18TransformOperation10IsIdentityEv(%"struct.gfx::TransformOperation"* %18) #12
  %20 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %18, i64 1
  br i1 %19, label %15, label %21

21:                                               ; preds = %15, %17, %6
  %22 = phi i1 [ true, %6 ], [ false, %17 ], [ true, %15 ]
  %23 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %23, align 8
  %25 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %25, align 8
  %27 = icmp eq %"struct.gfx::TransformOperation"* %24, %26
  br i1 %27, label %34, label %30

28:                                               ; preds = %30
  %29 = icmp eq %"struct.gfx::TransformOperation"* %33, %26
  br i1 %29, label %34, label %30

30:                                               ; preds = %21, %28
  %31 = phi %"struct.gfx::TransformOperation"* [ %33, %28 ], [ %24, %21 ]
  %32 = tail call zeroext i1 @_ZNK3gfx18TransformOperation10IsIdentityEv(%"struct.gfx::TransformOperation"* %31) #12
  %33 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %31, i64 1
  br i1 %32, label %28, label %35

34:                                               ; preds = %28, %21
  br i1 %22, label %99, label %35

35:                                               ; preds = %30, %34
  %36 = phi i1 [ true, %34 ], [ false, %30 ]
  %37 = bitcast %"struct.gfx::TransformOperation"** %25 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = sdiv exact i64 %41, 88
  %43 = icmp eq i64 %41, 0
  %44 = inttoptr i64 %40 to %"struct.gfx::TransformOperation"*
  br i1 %43, label %66, label %45

45:                                               ; preds = %35
  %46 = bitcast %"struct.gfx::TransformOperation"** %12 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.gfx::TransformOperations"* %2 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = icmp eq i64 %50, 0
  %52 = inttoptr i64 %49 to %"struct.gfx::TransformOperation"*
  br i1 %51, label %66, label %53

53:                                               ; preds = %45
  %54 = sdiv exact i64 %50, 88
  %55 = icmp eq i64 %42, %54
  br i1 %55, label %58, label %99

56:                                               ; preds = %58
  %57 = icmp ult i64 %65, %42
  br i1 %57, label %58, label %66

58:                                               ; preds = %53, %56
  %59 = phi i64 [ %65, %56 ], [ 0, %53 ]
  %60 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %44, i64 %59, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %52, i64 %59, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %61, %63
  %65 = add nuw i64 %59, 1
  br i1 %64, label %56, label %99

66:                                               ; preds = %56, %45, %35
  br i1 %22, label %74, label %67

67:                                               ; preds = %66
  %68 = bitcast %"struct.gfx::TransformOperation"** %12 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.gfx::TransformOperations"* %2 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = sdiv exact i64 %72, 88
  br label %74

74:                                               ; preds = %66, %67
  %75 = phi i64 [ %73, %67 ], [ 0, %66 ]
  %76 = select i1 %36, i64 0, i64 %42
  %77 = icmp ult i64 %75, %76
  %78 = select i1 %77, i64 %76, i64 %75
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %99, label %80

80:                                               ; preds = %74
  %81 = bitcast %"class.gfx::BoxF"* %7 to i8*
  br label %82

82:                                               ; preds = %80, %95
  %83 = phi i64 [ 0, %80 ], [ %96, %95 ]
  %84 = xor i64 %83, -1
  %85 = add i64 %78, %84
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %81, i8 0, i64 24, i1 false) #12
  %86 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %10, align 8
  %87 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %86, i64 %85
  %88 = select i1 %22, %"struct.gfx::TransformOperation"* null, %"struct.gfx::TransformOperation"* %87
  br i1 %36, label %92, label %89

89:                                               ; preds = %82
  %90 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %23, align 8
  %91 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %90, i64 %85
  br label %92

92:                                               ; preds = %82, %89
  %93 = phi %"struct.gfx::TransformOperation"* [ %91, %89 ], [ null, %82 ]
  %94 = call zeroext i1 @_ZN3gfx18TransformOperation19BlendedBoundsForBoxERKNS_4BoxFEPKS0_S5_ffPS1_(%"class.gfx::BoxF"* dereferenceable(24) %5, %"struct.gfx::TransformOperation"* %88, %"struct.gfx::TransformOperation"* %93, float %3, float %4, %"class.gfx::BoxF"* nonnull %7) #12
  br i1 %94, label %95, label %98

95:                                               ; preds = %92
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* nonnull align 4 %81, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #12
  %96 = add nuw i64 %83, 1
  %97 = icmp ult i64 %96, %78
  br i1 %97, label %82, label %99

98:                                               ; preds = %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #12
  br label %99

99:                                               ; preds = %58, %95, %74, %34, %98, %53
  %100 = phi i1 [ true, %34 ], [ false, %53 ], [ false, %98 ], [ true, %74 ], [ true, %95 ], [ false, %58 ]
  ret i1 %100
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx19TransformOperations10IsIdentityEv(%"class.gfx::TransformOperations"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %4, align 8
  %6 = icmp eq %"struct.gfx::TransformOperation"* %3, %5
  br i1 %6, label %13, label %9

7:                                                ; preds = %9
  %8 = icmp eq %"struct.gfx::TransformOperation"* %12, %5
  br i1 %8, label %13, label %9

9:                                                ; preds = %1, %7
  %10 = phi %"struct.gfx::TransformOperation"* [ %12, %7 ], [ %3, %1 ]
  %11 = tail call zeroext i1 @_ZNK3gfx18TransformOperation10IsIdentityEv(%"struct.gfx::TransformOperation"* %10) #12
  %12 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %10, i64 1
  br i1 %11, label %7, label %13

13:                                               ; preds = %9, %7, %1
  %14 = phi i1 [ true, %1 ], [ true, %7 ], [ false, %9 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx19TransformOperations12MatchesTypesERKS0_(%"class.gfx::TransformOperations"* nocapture readonly, %"class.gfx::TransformOperations"* nocapture readonly dereferenceable(64)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"struct.gfx::TransformOperation"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 88
  %10 = icmp eq i64 %8, 0
  %11 = inttoptr i64 %7 to %"struct.gfx::TransformOperation"*
  br i1 %10, label %34, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %"struct.gfx::TransformOperation"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.gfx::TransformOperations"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = icmp eq i64 %18, 0
  %20 = inttoptr i64 %17 to %"struct.gfx::TransformOperation"*
  br i1 %19, label %34, label %21

21:                                               ; preds = %12
  %22 = sdiv exact i64 %18, 88
  %23 = icmp eq i64 %9, %22
  br i1 %23, label %26, label %34

24:                                               ; preds = %26
  %25 = icmp ult i64 %33, %9
  br i1 %25, label %26, label %34

26:                                               ; preds = %21, %24
  %27 = phi i64 [ %33, %24 ], [ 0, %21 ]
  %28 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %11, i64 %27, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %20, i64 %27, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %29, %31
  %33 = add nuw i64 %27, 1
  br i1 %32, label %24, label %34

34:                                               ; preds = %26, %24, %12, %2, %21
  %35 = phi i1 [ true, %12 ], [ true, %2 ], [ false, %21 ], [ false, %26 ], [ true, %24 ]
  ret i1 %35
}

declare zeroext i1 @_ZN3gfx18TransformOperation19BlendedBoundsForBoxERKNS_4BoxFEPKS0_S5_ffPS1_(%"class.gfx::BoxF"* dereferenceable(24), %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"*, float, float, %"class.gfx::BoxF"*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx19TransformOperations22PreservesAxisAlignmentEv(%"class.gfx::TransformOperations"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %4, align 8
  %6 = icmp eq %"struct.gfx::TransformOperation"* %3, %5
  br i1 %6, label %18, label %7

7:                                                ; preds = %1, %15
  %8 = phi %"struct.gfx::TransformOperation"* [ %16, %15 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %15 [
    i32 6, label %18
    i32 5, label %18
    i32 4, label %18
    i32 7, label %11
    i32 1, label %18
    i32 3, label %18
  ]

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %8, i64 0, i32 1, i32 0, i32 1
  %13 = load i8, i8* %12, align 4
  %14 = icmp ult i8 %13, 4
  br i1 %14, label %15, label %18

15:                                               ; preds = %11, %7
  %16 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %8, i64 1
  %17 = icmp eq %"struct.gfx::TransformOperation"* %16, %5
  br i1 %17, label %18, label %7

18:                                               ; preds = %7, %7, %7, %7, %7, %11, %15, %1
  %19 = phi i1 [ true, %1 ], [ true, %15 ], [ false, %11 ], [ false, %7 ], [ false, %7 ], [ false, %7 ], [ false, %7 ], [ false, %7 ]
  ret i1 %19
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx19TransformOperations13IsTranslationEv(%"class.gfx::TransformOperations"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %4, align 8
  %6 = icmp eq %"struct.gfx::TransformOperation"* %3, %5
  br i1 %6, label %18, label %7

7:                                                ; preds = %1, %15
  %8 = phi %"struct.gfx::TransformOperation"* [ %16, %15 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %15 [
    i32 6, label %18
    i32 5, label %18
    i32 7, label %11
    i32 1, label %18
    i32 2, label %18
    i32 3, label %18
    i32 4, label %18
  ]

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %8, i64 0, i32 1, i32 0, i32 1
  %13 = load i8, i8* %12, align 4
  %14 = icmp ult i8 %13, 2
  br i1 %14, label %15, label %18

15:                                               ; preds = %11, %7
  %16 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %8, i64 1
  %17 = icmp eq %"struct.gfx::TransformOperation"* %16, %5
  br i1 %17, label %18, label %7

18:                                               ; preds = %11, %7, %7, %7, %7, %7, %7, %15, %1
  %19 = phi i1 [ true, %1 ], [ true, %15 ], [ false, %7 ], [ false, %7 ], [ false, %7 ], [ false, %7 ], [ false, %7 ], [ false, %7 ], [ false, %11 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx19TransformOperations14ScaleComponentEPf(%"class.gfx::TransformOperations"* nocapture readonly, float* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %3, align 8
  %5 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %5, align 8
  %7 = icmp eq %"struct.gfx::TransformOperation"* %4, %6
  br i1 %7, label %69, label %8

8:                                                ; preds = %2, %65
  %9 = phi float [ %66, %65 ], [ 1.000000e+00, %2 ]
  %10 = phi %"struct.gfx::TransformOperation"* [ %67, %65 ], [ %4, %2 ]
  %11 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %65 [
    i32 2, label %50
    i32 6, label %71
    i32 5, label %26
    i32 7, label %13
    i32 3, label %26
    i32 4, label %26
  ]

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %10, i64 0, i32 1, i32 0, i32 1
  %15 = load i8, i8* %14, align 4
  %16 = and i8 %15, 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %71

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %10, i64 0, i32 1
  %20 = tail call <2 x float> @_ZN3gfx33ComputeTransform2dScaleComponentsERKNS_9TransformEf(%"class.gfx::Transform"* dereferenceable(68) %19, float 1.000000e+00) #12
  %21 = extractelement <2 x float> %20, i32 0
  %22 = extractelement <2 x float> %20, i32 1
  %23 = fcmp olt float %21, %22
  %24 = select i1 %23, float %22, float %21
  %25 = fmul float %9, %24
  br label %65

26:                                               ; preds = %8, %8, %8
  %27 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %10, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load float, float* %27, align 4
  %29 = fpext float %28 to double
  %30 = fmul double %29, 0x400921FB54442D18
  %31 = fdiv double %30, 1.800000e+02
  %32 = tail call double @tan(double %31) #12
  %33 = fptrunc double %32 to float
  %34 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %10, i64 0, i32 2, i32 0, i32 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = fpext float %35 to double
  %37 = fmul double %36, 0x400921FB54442D18
  %38 = fdiv double %37, 1.800000e+02
  %39 = tail call double @tan(double %38) #12
  %40 = fptrunc double %39 to float
  %41 = fmul float %33, %33
  %42 = fadd float %41, 1.000000e+00
  %43 = tail call float @sqrtf(float %42) #12
  %44 = fmul float %40, %40
  %45 = fadd float %44, 1.000000e+00
  %46 = tail call float @sqrtf(float %45) #12
  %47 = fcmp olt float %43, %46
  %48 = select i1 %47, float %46, float %43
  %49 = fmul float %9, %48
  br label %65

50:                                               ; preds = %8
  %51 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %10, i64 0, i32 2, i32 0, i32 0, i32 0
  %52 = load float, float* %51, align 4
  %53 = tail call float @llvm.fabs.f32(float %52) #12
  %54 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %10, i64 0, i32 2, i32 0, i32 0, i32 1
  %55 = bitcast float* %54 to <2 x float>*
  %56 = load <2 x float>, <2 x float>* %55, align 4
  %57 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %56)
  %58 = extractelement <2 x float> %57, i32 0
  %59 = extractelement <2 x float> %57, i32 1
  %60 = fcmp olt float %58, %59
  %61 = select i1 %60, float %59, float %58
  %62 = fcmp olt float %53, %61
  %63 = select i1 %62, float %61, float %53
  %64 = fmul float %9, %63
  br label %65

65:                                               ; preds = %18, %26, %8, %50
  %66 = phi float [ %9, %8 ], [ %64, %50 ], [ %49, %26 ], [ %25, %18 ]
  %67 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %10, i64 1
  %68 = icmp eq %"struct.gfx::TransformOperation"* %67, %6
  br i1 %68, label %69, label %8

69:                                               ; preds = %65, %2
  %70 = phi float [ 1.000000e+00, %2 ], [ %66, %65 ]
  store float %70, float* %1, align 4
  br label %71

71:                                               ; preds = %13, %8, %69
  %72 = phi i1 [ true, %69 ], [ false, %8 ], [ false, %13 ]
  ret i1 %72
}

declare <2 x float> @_ZN3gfx33ComputeTransform2dScaleComponentsERKNS_9TransformEf(%"class.gfx::Transform"* dereferenceable(68), float) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gfx19TransformOperations20MatchingPrefixLengthERKS0_(%"class.gfx::TransformOperations"* nocapture readonly, %"class.gfx::TransformOperations"* nocapture readonly dereferenceable(64)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"struct.gfx::TransformOperation"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 88
  %10 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.gfx::TransformOperation"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.gfx::TransformOperations"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 88
  %17 = icmp ult i64 %16, %9
  %18 = select i1 %17, i64 %16, i64 %9
  %19 = icmp eq i64 %18, 0
  %20 = inttoptr i64 %7 to %"struct.gfx::TransformOperation"*
  %21 = inttoptr i64 %14 to %"struct.gfx::TransformOperation"*
  br i1 %19, label %32, label %22

22:                                               ; preds = %2, %29
  %23 = phi i64 [ %30, %29 ], [ 0, %2 ]
  %24 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %20, i64 %23, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %21, i64 %23, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %22
  %30 = add nuw i64 %23, 1
  %31 = icmp ult i64 %30, %18
  br i1 %31, label %22, label %32

32:                                               ; preds = %29, %2
  %33 = icmp ult i64 %9, %16
  %34 = select i1 %33, i64 %16, i64 %9
  br label %35

35:                                               ; preds = %22, %32
  %36 = phi i64 [ %34, %32 ], [ %23, %22 ]
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx19TransformOperations12CanBlendWithERKS0_(%"class.gfx::TransformOperations"*, %"class.gfx::TransformOperations"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::TransformOperations", align 8
  %4 = bitcast %"class.gfx::TransformOperations"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %3, i64 0, i32 1, i32 0, i32 4, i64 0
  %10 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %3, i64 0, i32 1, i32 0, i32 3
  %11 = bitcast %"class.std::__1::__compressed_pair.20"* %10 to i32*
  %12 = bitcast i8* %9 to i32*
  store i32 -1431655766, i32* %12, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 56, i1 false) #12
  store i32 1065353216, i32* %11, align 8
  %13 = call zeroext i1 @_ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_(%"class.gfx::TransformOperations"* %0, %"class.gfx::TransformOperations"* dereferenceable(64) %1, float 5.000000e-01, %"class.gfx::TransformOperations"* nonnull %3)
  %14 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %8, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %2, %26
  %17 = phi %"struct.std::__1::__hash_node_base"* [ %19, %26 ], [ %14, %2 ]
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %17, i64 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %17, i64 3
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %20 to %"struct.gfx::DecomposedTransform"**
  %22 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %21, align 8
  store %"struct.gfx::DecomposedTransform"* null, %"struct.gfx::DecomposedTransform"** %21, align 8
  %23 = icmp eq %"struct.gfx::DecomposedTransform"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %16
  %25 = bitcast %"struct.gfx::DecomposedTransform"* %22 to i8*
  call void @_ZdlPv(i8* %25) #13
  br label %26

26:                                               ; preds = %24, %16
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %17 to i8*
  call void @_ZdlPv(i8* %27) #13
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %19, null
  br i1 %28, label %29, label %16

29:                                               ; preds = %26, %2
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %7, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %7, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = bitcast %"struct.std::__1::__hash_node_base"** %30 to i8*
  call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %32, %29
  %35 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %5, align 8
  %36 = icmp eq %"struct.gfx::TransformOperation"* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = ptrtoint %"struct.gfx::TransformOperation"* %35 to i64
  %39 = bitcast %"struct.gfx::TransformOperation"** %6 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"struct.gfx::TransformOperation"* %35 to i8*
  call void @_ZdlPv(i8* %40) #13
  br label %41

41:                                               ; preds = %34, %37
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #12
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19TransformOperations15AppendTranslateEfff(%"class.gfx::TransformOperations"*, float, float, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.gfx::TransformOperation", align 4
  %6 = bitcast %"struct.gfx::TransformOperation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 4 bitcast (%"struct.gfx::TransformOperation"* @__const._ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_.blended to i8*), i64 88, i1 false)
  %7 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 0
  store i32 8, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 1
  %9 = bitcast %"class.gfx::Transform"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %10 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %10, align 4
  call void @_ZN3gfx9Transform11Translate3dEfff(%"class.gfx::Transform"* %8, float %1, float %2, float %3) #12
  store i32 0, i32* %7, align 4
  %11 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  store float %1, float* %11, align 4
  %12 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 2, i32 0, i32 0, i32 1
  store float %2, float* %12, align 4
  %13 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 2, i32 0, i32 0, i32 2
  store float %3, float* %13, align 4
  %14 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %14, align 8
  %16 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %16, align 8
  %18 = icmp eq %"struct.gfx::TransformOperation"* %15, %17
  %19 = ptrtoint %"struct.gfx::TransformOperation"* %17 to i64
  br i1 %18, label %31, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %15, i64 0, i32 0
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %15, i64 0, i32 1
  %23 = bitcast %"class.gfx::Transform"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %9, i64 68, i1 false) #12
  %24 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %15, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 2
  %26 = bitcast %union.anon* %24 to i8*
  %27 = bitcast %union.anon* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 16, i1 false) #12
  %28 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %15, i64 1
  %29 = ptrtoint %"struct.gfx::TransformOperation"* %28 to i64
  %30 = bitcast %"struct.gfx::TransformOperation"** %14 to i64*
  store i64 %29, i64* %30, align 8
  br label %104

31:                                               ; preds = %4
  %32 = ptrtoint %"struct.gfx::TransformOperation"* %15 to i64
  %33 = bitcast %"struct.gfx::TransformOperation"** %14 to i64*
  %34 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %32, %35
  %37 = sdiv exact i64 %36, 88
  %38 = add nsw i64 %37, 1
  %39 = icmp ugt i64 %38, 209622091746699450
  br i1 %39, label %40, label %42

40:                                               ; preds = %31
  %41 = bitcast %"class.gfx::TransformOperations"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %41) #14
  unreachable

42:                                               ; preds = %31
  %43 = bitcast %"struct.gfx::TransformOperation"** %16 to i64*
  %44 = sub i64 %19, %35
  %45 = sdiv exact i64 %44, 88
  %46 = icmp ult i64 %45, 104811045873349725
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  %48 = shl nsw i64 %45, 1
  %49 = icmp ult i64 %48, %38
  %50 = select i1 %49, i64 %38, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %47, %42
  %53 = phi i64 [ %50, %47 ], [ 209622091746699450, %42 ]
  %54 = mul i64 %53, 88
  %55 = call i8* @_Znwm(i64 %54) #13
  %56 = bitcast i8* %55 to %"struct.gfx::TransformOperation"*
  br label %57

57:                                               ; preds = %52, %47
  %58 = phi i64 [ %53, %52 ], [ 0, %47 ]
  %59 = phi %"struct.gfx::TransformOperation"* [ %56, %52 ], [ null, %47 ]
  %60 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %59, i64 %37
  %61 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %59, i64 %58
  %62 = ptrtoint %"struct.gfx::TransformOperation"* %61 to i64
  %63 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %60, i64 0, i32 0
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %59, i64 %37, i32 1
  %65 = bitcast %"class.gfx::Transform"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %9, i64 68, i1 false) #12
  %66 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %59, i64 %37, i32 2
  %67 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 2
  %68 = bitcast %union.anon* %66 to i8*
  %69 = bitcast %union.anon* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 16, i1 false) #12
  %70 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %60, i64 1
  %71 = ptrtoint %"struct.gfx::TransformOperation"* %70 to i64
  %72 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %73 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %72, align 8
  %74 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %14, align 8
  %75 = icmp eq %"struct.gfx::TransformOperation"* %74, %73
  br i1 %75, label %76, label %78

76:                                               ; preds = %57
  %77 = ptrtoint %"struct.gfx::TransformOperation"* %73 to i64
  br label %97

78:                                               ; preds = %57, %78
  %79 = phi %"struct.gfx::TransformOperation"* [ %93, %78 ], [ %60, %57 ]
  %80 = phi %"struct.gfx::TransformOperation"* [ %81, %78 ], [ %74, %57 ]
  %81 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %80, i64 -1
  %82 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1, i32 0
  %83 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %81, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %82, align 4
  %85 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1, i32 1
  %86 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %80, i64 -1, i32 1
  %87 = bitcast %"class.gfx::Transform"* %85 to i8*
  %88 = bitcast %"class.gfx::Transform"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %88, i64 68, i1 false) #12
  %89 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1, i32 2
  %90 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %80, i64 -1, i32 2
  %91 = bitcast %union.anon* %89 to i8*
  %92 = bitcast %union.anon* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %92, i64 16, i1 false) #12
  %93 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1
  %94 = icmp eq %"struct.gfx::TransformOperation"* %81, %73
  br i1 %94, label %95, label %78

95:                                               ; preds = %78
  %96 = load i64, i64* %34, align 8
  br label %97

97:                                               ; preds = %95, %76
  %98 = phi %"struct.gfx::TransformOperation"* [ %60, %76 ], [ %93, %95 ]
  %99 = phi i64 [ %77, %76 ], [ %96, %95 ]
  %100 = ptrtoint %"struct.gfx::TransformOperation"* %98 to i64
  store i64 %100, i64* %34, align 8
  store i64 %71, i64* %33, align 8
  store i64 %62, i64* %43, align 8
  %101 = icmp eq i64 %99, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  %103 = inttoptr i64 %99 to i8*
  call void @_ZdlPv(i8* %103) #13
  br label %104

104:                                              ; preds = %20, %97, %102
  %105 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %165, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %109, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %108, %122
  %113 = phi %"struct.std::__1::__hash_node_base"* [ %115, %122 ], [ %110, %108 ]
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %113, i64 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %113, i64 3
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %116 to %"struct.gfx::DecomposedTransform"**
  %118 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %117, align 8
  store %"struct.gfx::DecomposedTransform"* null, %"struct.gfx::DecomposedTransform"** %117, align 8
  %119 = icmp eq %"struct.gfx::DecomposedTransform"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %112
  %121 = bitcast %"struct.gfx::DecomposedTransform"* %118 to i8*
  call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %120, %112
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %113 to i8*
  call void @_ZdlPv(i8* %123) #13
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %124, label %125, label %112

125:                                              ; preds = %122, %108
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %109, align 8
  %126 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %147, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = add i64 %127, -1
  %132 = and i64 %127, 3
  %133 = icmp ult i64 %131, 3
  br i1 %133, label %136, label %134

134:                                              ; preds = %129
  %135 = sub i64 %127, %132
  br label %148

136:                                              ; preds = %148, %129
  %137 = phi i64 [ 0, %129 ], [ %162, %148 ]
  %138 = icmp eq i64 %132, 0
  br i1 %138, label %147, label %139

139:                                              ; preds = %136, %139
  %140 = phi i64 [ %144, %139 ], [ %137, %136 ]
  %141 = phi i64 [ %145, %139 ], [ %132, %136 ]
  %142 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, i64 %140
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %143, align 8
  %144 = add nuw i64 %140, 1
  %145 = add i64 %141, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %139, !llvm.loop !5

147:                                              ; preds = %136, %139, %125
  store i64 0, i64* %105, align 8
  br label %165

148:                                              ; preds = %148, %134
  %149 = phi i64 [ 0, %134 ], [ %162, %148 ]
  %150 = phi i64 [ %135, %134 ], [ %163, %148 ]
  %151 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, i64 %149
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %152, align 8
  %153 = or i64 %149, 1
  %154 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %154, i64 %153
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %155, align 8
  %156 = or i64 %149, 2
  %157 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %157, i64 %156
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %158, align 8
  %159 = or i64 %149, 3
  %160 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %160, i64 %159
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %161, align 8
  %162 = add nuw i64 %149, 4
  %163 = add i64 %150, -4
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %136, label %148

165:                                              ; preds = %104, %147
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #12
  ret void
}

declare void @_ZN3gfx9Transform11Translate3dEfff(%"class.gfx::Transform"*, float, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19TransformOperations12AppendRotateEffff(%"class.gfx::TransformOperations"*, float, float, float, float) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.gfx::TransformOperation", align 4
  %7 = bitcast %"struct.gfx::TransformOperation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 bitcast (%"struct.gfx::TransformOperation"* @__const._ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_.blended to i8*), i64 72, i1 false)
  %8 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %6, i64 0, i32 1
  %10 = bitcast %"class.gfx::Transform"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %11 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %6, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %11, align 4
  store i32 1, i32* %8, align 4
  %12 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  store float %1, float* %12, align 4
  %13 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %6, i64 0, i32 2, i32 0, i32 0, i32 1
  store float %2, float* %13, align 4
  %14 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %6, i64 0, i32 2, i32 0, i32 0, i32 2
  store float %3, float* %14, align 4
  %15 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %6, i64 0, i32 2, i32 0, i32 1
  store float %4, float* %15, align 4
  call void @_ZN3gfx18TransformOperation4BakeEv(%"struct.gfx::TransformOperation"* nonnull %6) #12
  %16 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %16, align 8
  %18 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %18, align 8
  %20 = icmp eq %"struct.gfx::TransformOperation"* %17, %19
  %21 = ptrtoint %"struct.gfx::TransformOperation"* %19 to i64
  br i1 %20, label %34, label %22

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %17, i64 0, i32 0
  %24 = load i32, i32* %8, align 4
  store i32 %24, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %17, i64 0, i32 1
  %26 = bitcast %"class.gfx::Transform"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %10, i64 68, i1 false) #12
  %27 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %17, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %6, i64 0, i32 2
  %29 = bitcast %union.anon* %27 to i8*
  %30 = bitcast %union.anon* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 16, i1 false) #12
  %31 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %17, i64 1
  %32 = ptrtoint %"struct.gfx::TransformOperation"* %31 to i64
  %33 = bitcast %"struct.gfx::TransformOperation"** %16 to i64*
  store i64 %32, i64* %33, align 8
  br label %108

34:                                               ; preds = %5
  %35 = ptrtoint %"struct.gfx::TransformOperation"* %17 to i64
  %36 = bitcast %"struct.gfx::TransformOperation"** %16 to i64*
  %37 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %35, %38
  %40 = sdiv exact i64 %39, 88
  %41 = add nsw i64 %40, 1
  %42 = icmp ugt i64 %41, 209622091746699450
  br i1 %42, label %43, label %45

43:                                               ; preds = %34
  %44 = bitcast %"class.gfx::TransformOperations"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %44) #14
  unreachable

45:                                               ; preds = %34
  %46 = bitcast %"struct.gfx::TransformOperation"** %18 to i64*
  %47 = sub i64 %21, %38
  %48 = sdiv exact i64 %47, 88
  %49 = icmp ult i64 %48, 104811045873349725
  br i1 %49, label %50, label %55

50:                                               ; preds = %45
  %51 = shl nsw i64 %48, 1
  %52 = icmp ult i64 %51, %41
  %53 = select i1 %52, i64 %41, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %50, %45
  %56 = phi i64 [ %53, %50 ], [ 209622091746699450, %45 ]
  %57 = mul i64 %56, 88
  %58 = call i8* @_Znwm(i64 %57) #13
  %59 = bitcast i8* %58 to %"struct.gfx::TransformOperation"*
  br label %60

60:                                               ; preds = %55, %50
  %61 = phi i64 [ %56, %55 ], [ 0, %50 ]
  %62 = phi %"struct.gfx::TransformOperation"* [ %59, %55 ], [ null, %50 ]
  %63 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %62, i64 %40
  %64 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %62, i64 %61
  %65 = ptrtoint %"struct.gfx::TransformOperation"* %64 to i64
  %66 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %63, i64 0, i32 0
  %67 = load i32, i32* %8, align 4
  store i32 %67, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %62, i64 %40, i32 1
  %69 = bitcast %"class.gfx::Transform"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %10, i64 68, i1 false) #12
  %70 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %62, i64 %40, i32 2
  %71 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %6, i64 0, i32 2
  %72 = bitcast %union.anon* %70 to i8*
  %73 = bitcast %union.anon* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 16, i1 false) #12
  %74 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %63, i64 1
  %75 = ptrtoint %"struct.gfx::TransformOperation"* %74 to i64
  %76 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %77 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %76, align 8
  %78 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %16, align 8
  %79 = icmp eq %"struct.gfx::TransformOperation"* %78, %77
  br i1 %79, label %80, label %82

80:                                               ; preds = %60
  %81 = ptrtoint %"struct.gfx::TransformOperation"* %77 to i64
  br label %101

82:                                               ; preds = %60, %82
  %83 = phi %"struct.gfx::TransformOperation"* [ %97, %82 ], [ %63, %60 ]
  %84 = phi %"struct.gfx::TransformOperation"* [ %85, %82 ], [ %78, %60 ]
  %85 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %84, i64 -1
  %86 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %83, i64 -1, i32 0
  %87 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %85, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %86, align 4
  %89 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %83, i64 -1, i32 1
  %90 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %84, i64 -1, i32 1
  %91 = bitcast %"class.gfx::Transform"* %89 to i8*
  %92 = bitcast %"class.gfx::Transform"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %92, i64 68, i1 false) #12
  %93 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %83, i64 -1, i32 2
  %94 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %84, i64 -1, i32 2
  %95 = bitcast %union.anon* %93 to i8*
  %96 = bitcast %union.anon* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 16, i1 false) #12
  %97 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %83, i64 -1
  %98 = icmp eq %"struct.gfx::TransformOperation"* %85, %77
  br i1 %98, label %99, label %82

99:                                               ; preds = %82
  %100 = load i64, i64* %37, align 8
  br label %101

101:                                              ; preds = %99, %80
  %102 = phi %"struct.gfx::TransformOperation"* [ %63, %80 ], [ %97, %99 ]
  %103 = phi i64 [ %81, %80 ], [ %100, %99 ]
  %104 = ptrtoint %"struct.gfx::TransformOperation"* %102 to i64
  store i64 %104, i64* %37, align 8
  store i64 %75, i64* %36, align 8
  store i64 %65, i64* %46, align 8
  %105 = icmp eq i64 %103, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %101
  %107 = inttoptr i64 %103 to i8*
  call void @_ZdlPv(i8* %107) #13
  br label %108

108:                                              ; preds = %22, %101, %106
  %109 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %169, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %112, %126
  %117 = phi %"struct.std::__1::__hash_node_base"* [ %119, %126 ], [ %114, %112 ]
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 3
  %121 = bitcast %"struct.std::__1::__hash_node_base"* %120 to %"struct.gfx::DecomposedTransform"**
  %122 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %121, align 8
  store %"struct.gfx::DecomposedTransform"* null, %"struct.gfx::DecomposedTransform"** %121, align 8
  %123 = icmp eq %"struct.gfx::DecomposedTransform"* %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %116
  %125 = bitcast %"struct.gfx::DecomposedTransform"* %122 to i8*
  call void @_ZdlPv(i8* %125) #13
  br label %126

126:                                              ; preds = %124, %116
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i8*
  call void @_ZdlPv(i8* %127) #13
  %128 = icmp eq %"struct.std::__1::__hash_node_base"* %119, null
  br i1 %128, label %129, label %116

129:                                              ; preds = %126, %112
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %113, align 8
  %130 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %151, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = add i64 %131, -1
  %136 = and i64 %131, 3
  %137 = icmp ult i64 %135, 3
  br i1 %137, label %140, label %138

138:                                              ; preds = %133
  %139 = sub i64 %131, %136
  br label %152

140:                                              ; preds = %152, %133
  %141 = phi i64 [ 0, %133 ], [ %166, %152 ]
  %142 = icmp eq i64 %136, 0
  br i1 %142, label %151, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %148, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %149, %143 ], [ %136, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %134, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %146, i64 %144
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %147, align 8
  %148 = add nuw i64 %144, 1
  %149 = add i64 %145, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %143, !llvm.loop !7

151:                                              ; preds = %140, %143, %129
  store i64 0, i64* %109, align 8
  br label %169

152:                                              ; preds = %152, %138
  %153 = phi i64 [ 0, %138 ], [ %166, %152 ]
  %154 = phi i64 [ %139, %138 ], [ %167, %152 ]
  %155 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %134, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %155, i64 %153
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %156, align 8
  %157 = or i64 %153, 1
  %158 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %134, align 8
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %158, i64 %157
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %159, align 8
  %160 = or i64 %153, 2
  %161 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %134, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %161, i64 %160
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %162, align 8
  %163 = or i64 %153, 3
  %164 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %134, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %164, i64 %163
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %165, align 8
  %166 = add nuw i64 %153, 4
  %167 = add i64 %154, -4
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %140, label %152

169:                                              ; preds = %108, %151
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #12
  ret void
}

declare void @_ZN3gfx18TransformOperation4BakeEv(%"struct.gfx::TransformOperation"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19TransformOperations11AppendScaleEfff(%"class.gfx::TransformOperations"*, float, float, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.gfx::TransformOperation", align 4
  %6 = bitcast %"struct.gfx::TransformOperation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 4 bitcast (%"struct.gfx::TransformOperation"* @__const._ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_.blended to i8*), i64 88, i1 false)
  %7 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 1
  %9 = bitcast %"class.gfx::Transform"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %10 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %10, align 4
  store i32 2, i32* %7, align 4
  %11 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  store float %1, float* %11, align 4
  %12 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 2, i32 0, i32 0, i32 1
  store float %2, float* %12, align 4
  %13 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 2, i32 0, i32 0, i32 2
  store float %3, float* %13, align 4
  call void @_ZN3gfx18TransformOperation4BakeEv(%"struct.gfx::TransformOperation"* nonnull %5) #12
  %14 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %14, align 8
  %16 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %16, align 8
  %18 = icmp eq %"struct.gfx::TransformOperation"* %15, %17
  %19 = ptrtoint %"struct.gfx::TransformOperation"* %17 to i64
  br i1 %18, label %32, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %15, i64 0, i32 0
  %22 = load i32, i32* %7, align 4
  store i32 %22, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %15, i64 0, i32 1
  %24 = bitcast %"class.gfx::Transform"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %9, i64 68, i1 false) #12
  %25 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %15, i64 0, i32 2
  %26 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 2
  %27 = bitcast %union.anon* %25 to i8*
  %28 = bitcast %union.anon* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 16, i1 false) #12
  %29 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %15, i64 1
  %30 = ptrtoint %"struct.gfx::TransformOperation"* %29 to i64
  %31 = bitcast %"struct.gfx::TransformOperation"** %14 to i64*
  store i64 %30, i64* %31, align 8
  br label %106

32:                                               ; preds = %4
  %33 = ptrtoint %"struct.gfx::TransformOperation"* %15 to i64
  %34 = bitcast %"struct.gfx::TransformOperation"** %14 to i64*
  %35 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %33, %36
  %38 = sdiv exact i64 %37, 88
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 209622091746699450
  br i1 %40, label %41, label %43

41:                                               ; preds = %32
  %42 = bitcast %"class.gfx::TransformOperations"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #14
  unreachable

43:                                               ; preds = %32
  %44 = bitcast %"struct.gfx::TransformOperation"** %16 to i64*
  %45 = sub i64 %19, %36
  %46 = sdiv exact i64 %45, 88
  %47 = icmp ult i64 %46, 104811045873349725
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = shl nsw i64 %46, 1
  %50 = icmp ult i64 %49, %39
  %51 = select i1 %50, i64 %39, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %48, %43
  %54 = phi i64 [ %51, %48 ], [ 209622091746699450, %43 ]
  %55 = mul i64 %54, 88
  %56 = call i8* @_Znwm(i64 %55) #13
  %57 = bitcast i8* %56 to %"struct.gfx::TransformOperation"*
  br label %58

58:                                               ; preds = %53, %48
  %59 = phi i64 [ %54, %53 ], [ 0, %48 ]
  %60 = phi %"struct.gfx::TransformOperation"* [ %57, %53 ], [ null, %48 ]
  %61 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %60, i64 %38
  %62 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %60, i64 %59
  %63 = ptrtoint %"struct.gfx::TransformOperation"* %62 to i64
  %64 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %61, i64 0, i32 0
  %65 = load i32, i32* %7, align 4
  store i32 %65, i32* %64, align 4
  %66 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %60, i64 %38, i32 1
  %67 = bitcast %"class.gfx::Transform"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %9, i64 68, i1 false) #12
  %68 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %60, i64 %38, i32 2
  %69 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 2
  %70 = bitcast %union.anon* %68 to i8*
  %71 = bitcast %union.anon* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* align 4 %71, i64 16, i1 false) #12
  %72 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %61, i64 1
  %73 = ptrtoint %"struct.gfx::TransformOperation"* %72 to i64
  %74 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %75 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %74, align 8
  %76 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %14, align 8
  %77 = icmp eq %"struct.gfx::TransformOperation"* %76, %75
  br i1 %77, label %78, label %80

78:                                               ; preds = %58
  %79 = ptrtoint %"struct.gfx::TransformOperation"* %75 to i64
  br label %99

80:                                               ; preds = %58, %80
  %81 = phi %"struct.gfx::TransformOperation"* [ %95, %80 ], [ %61, %58 ]
  %82 = phi %"struct.gfx::TransformOperation"* [ %83, %80 ], [ %76, %58 ]
  %83 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %82, i64 -1
  %84 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %81, i64 -1, i32 0
  %85 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %83, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  store i32 %86, i32* %84, align 4
  %87 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %81, i64 -1, i32 1
  %88 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %82, i64 -1, i32 1
  %89 = bitcast %"class.gfx::Transform"* %87 to i8*
  %90 = bitcast %"class.gfx::Transform"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %90, i64 68, i1 false) #12
  %91 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %81, i64 -1, i32 2
  %92 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %82, i64 -1, i32 2
  %93 = bitcast %union.anon* %91 to i8*
  %94 = bitcast %union.anon* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 16, i1 false) #12
  %95 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %81, i64 -1
  %96 = icmp eq %"struct.gfx::TransformOperation"* %83, %75
  br i1 %96, label %97, label %80

97:                                               ; preds = %80
  %98 = load i64, i64* %35, align 8
  br label %99

99:                                               ; preds = %97, %78
  %100 = phi %"struct.gfx::TransformOperation"* [ %61, %78 ], [ %95, %97 ]
  %101 = phi i64 [ %79, %78 ], [ %98, %97 ]
  %102 = ptrtoint %"struct.gfx::TransformOperation"* %100 to i64
  store i64 %102, i64* %35, align 8
  store i64 %73, i64* %34, align 8
  store i64 %63, i64* %44, align 8
  %103 = icmp eq i64 %101, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %99
  %105 = inttoptr i64 %101 to i8*
  call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %20, %99, %104
  %107 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %167, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %111, align 8
  %113 = icmp eq %"struct.std::__1::__hash_node_base"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %110, %124
  %115 = phi %"struct.std::__1::__hash_node_base"* [ %117, %124 ], [ %112, %110 ]
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 0, i32 0
  %117 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 3
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to %"struct.gfx::DecomposedTransform"**
  %120 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %119, align 8
  store %"struct.gfx::DecomposedTransform"* null, %"struct.gfx::DecomposedTransform"** %119, align 8
  %121 = icmp eq %"struct.gfx::DecomposedTransform"* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %114
  %123 = bitcast %"struct.gfx::DecomposedTransform"* %120 to i8*
  call void @_ZdlPv(i8* %123) #13
  br label %124

124:                                              ; preds = %122, %114
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i8*
  call void @_ZdlPv(i8* %125) #13
  %126 = icmp eq %"struct.std::__1::__hash_node_base"* %117, null
  br i1 %126, label %127, label %114

127:                                              ; preds = %124, %110
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %111, align 8
  %128 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %149, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = add i64 %129, -1
  %134 = and i64 %129, 3
  %135 = icmp ult i64 %133, 3
  br i1 %135, label %138, label %136

136:                                              ; preds = %131
  %137 = sub i64 %129, %134
  br label %150

138:                                              ; preds = %150, %131
  %139 = phi i64 [ 0, %131 ], [ %164, %150 ]
  %140 = icmp eq i64 %134, 0
  br i1 %140, label %149, label %141

141:                                              ; preds = %138, %141
  %142 = phi i64 [ %146, %141 ], [ %139, %138 ]
  %143 = phi i64 [ %147, %141 ], [ %134, %138 ]
  %144 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %132, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %144, i64 %142
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %145, align 8
  %146 = add nuw i64 %142, 1
  %147 = add i64 %143, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %141, !llvm.loop !8

149:                                              ; preds = %138, %141, %127
  store i64 0, i64* %107, align 8
  br label %167

150:                                              ; preds = %150, %136
  %151 = phi i64 [ 0, %136 ], [ %164, %150 ]
  %152 = phi i64 [ %137, %136 ], [ %165, %150 ]
  %153 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %132, align 8
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %153, i64 %151
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %154, align 8
  %155 = or i64 %151, 1
  %156 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %132, align 8
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %156, i64 %155
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %157, align 8
  %158 = or i64 %151, 2
  %159 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %132, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %159, i64 %158
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %160, align 8
  %161 = or i64 %151, 3
  %162 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %132, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %162, i64 %161
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %163, align 8
  %164 = add nuw i64 %151, 4
  %165 = add i64 %152, -4
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %138, label %150

167:                                              ; preds = %106, %149
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19TransformOperations11AppendSkewXEf(%"class.gfx::TransformOperations"*, float) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.gfx::TransformOperation", align 4
  %4 = bitcast %"struct.gfx::TransformOperation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 bitcast (%"struct.gfx::TransformOperation"* @__const._ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_.blended to i8*), i64 88, i1 false)
  %5 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 1
  %7 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %8 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %8, align 4
  store i32 3, i32* %5, align 4
  %9 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store float %1, float* %9, align 4
  %10 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  store float 0.000000e+00, float* %10, align 4
  call void @_ZN3gfx18TransformOperation4BakeEv(%"struct.gfx::TransformOperation"* nonnull %3) #12
  %11 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %11, align 8
  %13 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %13, align 8
  %15 = icmp eq %"struct.gfx::TransformOperation"* %12, %14
  %16 = ptrtoint %"struct.gfx::TransformOperation"* %14 to i64
  br i1 %15, label %29, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 0, i32 0
  %19 = load i32, i32* %5, align 4
  store i32 %19, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 0, i32 1
  %21 = bitcast %"class.gfx::Transform"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %7, i64 68, i1 false) #12
  %22 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 0, i32 2
  %23 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2
  %24 = bitcast %union.anon* %22 to i8*
  %25 = bitcast %union.anon* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 16, i1 false) #12
  %26 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 1
  %27 = ptrtoint %"struct.gfx::TransformOperation"* %26 to i64
  %28 = bitcast %"struct.gfx::TransformOperation"** %11 to i64*
  store i64 %27, i64* %28, align 8
  br label %103

29:                                               ; preds = %2
  %30 = ptrtoint %"struct.gfx::TransformOperation"* %12 to i64
  %31 = bitcast %"struct.gfx::TransformOperation"** %11 to i64*
  %32 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %30, %33
  %35 = sdiv exact i64 %34, 88
  %36 = add nsw i64 %35, 1
  %37 = icmp ugt i64 %36, 209622091746699450
  br i1 %37, label %38, label %40

38:                                               ; preds = %29
  %39 = bitcast %"class.gfx::TransformOperations"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %39) #14
  unreachable

40:                                               ; preds = %29
  %41 = bitcast %"struct.gfx::TransformOperation"** %13 to i64*
  %42 = sub i64 %16, %33
  %43 = sdiv exact i64 %42, 88
  %44 = icmp ult i64 %43, 104811045873349725
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = shl nsw i64 %43, 1
  %47 = icmp ult i64 %46, %36
  %48 = select i1 %47, i64 %36, i64 %46
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %45, %40
  %51 = phi i64 [ %48, %45 ], [ 209622091746699450, %40 ]
  %52 = mul i64 %51, 88
  %53 = call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %"struct.gfx::TransformOperation"*
  br label %55

55:                                               ; preds = %50, %45
  %56 = phi i64 [ %51, %50 ], [ 0, %45 ]
  %57 = phi %"struct.gfx::TransformOperation"* [ %54, %50 ], [ null, %45 ]
  %58 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %35
  %59 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %56
  %60 = ptrtoint %"struct.gfx::TransformOperation"* %59 to i64
  %61 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %58, i64 0, i32 0
  %62 = load i32, i32* %5, align 4
  store i32 %62, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %35, i32 1
  %64 = bitcast %"class.gfx::Transform"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %7, i64 68, i1 false) #12
  %65 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %35, i32 2
  %66 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2
  %67 = bitcast %union.anon* %65 to i8*
  %68 = bitcast %union.anon* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 16, i1 false) #12
  %69 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %58, i64 1
  %70 = ptrtoint %"struct.gfx::TransformOperation"* %69 to i64
  %71 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %72 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %71, align 8
  %73 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %11, align 8
  %74 = icmp eq %"struct.gfx::TransformOperation"* %73, %72
  br i1 %74, label %75, label %77

75:                                               ; preds = %55
  %76 = ptrtoint %"struct.gfx::TransformOperation"* %72 to i64
  br label %96

77:                                               ; preds = %55, %77
  %78 = phi %"struct.gfx::TransformOperation"* [ %92, %77 ], [ %58, %55 ]
  %79 = phi %"struct.gfx::TransformOperation"* [ %80, %77 ], [ %73, %55 ]
  %80 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1
  %81 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1, i32 0
  %82 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %80, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %81, align 4
  %84 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1, i32 1
  %85 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1, i32 1
  %86 = bitcast %"class.gfx::Transform"* %84 to i8*
  %87 = bitcast %"class.gfx::Transform"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 68, i1 false) #12
  %88 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1, i32 2
  %89 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1, i32 2
  %90 = bitcast %union.anon* %88 to i8*
  %91 = bitcast %union.anon* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* align 4 %91, i64 16, i1 false) #12
  %92 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1
  %93 = icmp eq %"struct.gfx::TransformOperation"* %80, %72
  br i1 %93, label %94, label %77

94:                                               ; preds = %77
  %95 = load i64, i64* %32, align 8
  br label %96

96:                                               ; preds = %94, %75
  %97 = phi %"struct.gfx::TransformOperation"* [ %58, %75 ], [ %92, %94 ]
  %98 = phi i64 [ %76, %75 ], [ %95, %94 ]
  %99 = ptrtoint %"struct.gfx::TransformOperation"* %97 to i64
  store i64 %99, i64* %32, align 8
  store i64 %70, i64* %31, align 8
  store i64 %60, i64* %41, align 8
  %100 = icmp eq i64 %98, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %96
  %102 = inttoptr i64 %98 to i8*
  call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %17, %96, %101
  %104 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %164, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %107, %121
  %112 = phi %"struct.std::__1::__hash_node_base"* [ %114, %121 ], [ %109, %107 ]
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %112, i64 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %112, i64 3
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %115 to %"struct.gfx::DecomposedTransform"**
  %117 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %116, align 8
  store %"struct.gfx::DecomposedTransform"* null, %"struct.gfx::DecomposedTransform"** %116, align 8
  %118 = icmp eq %"struct.gfx::DecomposedTransform"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %111
  %120 = bitcast %"struct.gfx::DecomposedTransform"* %117 to i8*
  call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %119, %111
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %112 to i8*
  call void @_ZdlPv(i8* %122) #13
  %123 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %107
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %108, align 8
  %125 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %146, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = add i64 %126, -1
  %131 = and i64 %126, 3
  %132 = icmp ult i64 %130, 3
  br i1 %132, label %135, label %133

133:                                              ; preds = %128
  %134 = sub i64 %126, %131
  br label %147

135:                                              ; preds = %147, %128
  %136 = phi i64 [ 0, %128 ], [ %161, %147 ]
  %137 = icmp eq i64 %131, 0
  br i1 %137, label %146, label %138

138:                                              ; preds = %135, %138
  %139 = phi i64 [ %143, %138 ], [ %136, %135 ]
  %140 = phi i64 [ %144, %138 ], [ %131, %135 ]
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %139
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %142, align 8
  %143 = add nuw i64 %139, 1
  %144 = add i64 %140, -1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %138, !llvm.loop !9

146:                                              ; preds = %135, %138, %124
  store i64 0, i64* %104, align 8
  br label %164

147:                                              ; preds = %147, %133
  %148 = phi i64 [ 0, %133 ], [ %161, %147 ]
  %149 = phi i64 [ %134, %133 ], [ %162, %147 ]
  %150 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %150, i64 %148
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %151, align 8
  %152 = or i64 %148, 1
  %153 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %153, i64 %152
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %154, align 8
  %155 = or i64 %148, 2
  %156 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %156, i64 %155
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %157, align 8
  %158 = or i64 %148, 3
  %159 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %159, i64 %158
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %160, align 8
  %161 = add nuw i64 %148, 4
  %162 = add i64 %149, -4
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %135, label %147

164:                                              ; preds = %103, %146
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19TransformOperations11AppendSkewYEf(%"class.gfx::TransformOperations"*, float) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.gfx::TransformOperation", align 4
  %4 = bitcast %"struct.gfx::TransformOperation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 bitcast (%"struct.gfx::TransformOperation"* @__const._ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_.blended to i8*), i64 88, i1 false)
  %5 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 1
  %7 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %8 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %8, align 4
  store i32 4, i32* %5, align 4
  %9 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  store float %1, float* %10, align 4
  call void @_ZN3gfx18TransformOperation4BakeEv(%"struct.gfx::TransformOperation"* nonnull %3) #12
  %11 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %11, align 8
  %13 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %13, align 8
  %15 = icmp eq %"struct.gfx::TransformOperation"* %12, %14
  %16 = ptrtoint %"struct.gfx::TransformOperation"* %14 to i64
  br i1 %15, label %29, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 0, i32 0
  %19 = load i32, i32* %5, align 4
  store i32 %19, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 0, i32 1
  %21 = bitcast %"class.gfx::Transform"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %7, i64 68, i1 false) #12
  %22 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 0, i32 2
  %23 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2
  %24 = bitcast %union.anon* %22 to i8*
  %25 = bitcast %union.anon* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 16, i1 false) #12
  %26 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 1
  %27 = ptrtoint %"struct.gfx::TransformOperation"* %26 to i64
  %28 = bitcast %"struct.gfx::TransformOperation"** %11 to i64*
  store i64 %27, i64* %28, align 8
  br label %103

29:                                               ; preds = %2
  %30 = ptrtoint %"struct.gfx::TransformOperation"* %12 to i64
  %31 = bitcast %"struct.gfx::TransformOperation"** %11 to i64*
  %32 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %30, %33
  %35 = sdiv exact i64 %34, 88
  %36 = add nsw i64 %35, 1
  %37 = icmp ugt i64 %36, 209622091746699450
  br i1 %37, label %38, label %40

38:                                               ; preds = %29
  %39 = bitcast %"class.gfx::TransformOperations"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %39) #14
  unreachable

40:                                               ; preds = %29
  %41 = bitcast %"struct.gfx::TransformOperation"** %13 to i64*
  %42 = sub i64 %16, %33
  %43 = sdiv exact i64 %42, 88
  %44 = icmp ult i64 %43, 104811045873349725
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = shl nsw i64 %43, 1
  %47 = icmp ult i64 %46, %36
  %48 = select i1 %47, i64 %36, i64 %46
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %45, %40
  %51 = phi i64 [ %48, %45 ], [ 209622091746699450, %40 ]
  %52 = mul i64 %51, 88
  %53 = call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %"struct.gfx::TransformOperation"*
  br label %55

55:                                               ; preds = %50, %45
  %56 = phi i64 [ %51, %50 ], [ 0, %45 ]
  %57 = phi %"struct.gfx::TransformOperation"* [ %54, %50 ], [ null, %45 ]
  %58 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %35
  %59 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %56
  %60 = ptrtoint %"struct.gfx::TransformOperation"* %59 to i64
  %61 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %58, i64 0, i32 0
  %62 = load i32, i32* %5, align 4
  store i32 %62, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %35, i32 1
  %64 = bitcast %"class.gfx::Transform"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %7, i64 68, i1 false) #12
  %65 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %35, i32 2
  %66 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2
  %67 = bitcast %union.anon* %65 to i8*
  %68 = bitcast %union.anon* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 16, i1 false) #12
  %69 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %58, i64 1
  %70 = ptrtoint %"struct.gfx::TransformOperation"* %69 to i64
  %71 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %72 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %71, align 8
  %73 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %11, align 8
  %74 = icmp eq %"struct.gfx::TransformOperation"* %73, %72
  br i1 %74, label %75, label %77

75:                                               ; preds = %55
  %76 = ptrtoint %"struct.gfx::TransformOperation"* %72 to i64
  br label %96

77:                                               ; preds = %55, %77
  %78 = phi %"struct.gfx::TransformOperation"* [ %92, %77 ], [ %58, %55 ]
  %79 = phi %"struct.gfx::TransformOperation"* [ %80, %77 ], [ %73, %55 ]
  %80 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1
  %81 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1, i32 0
  %82 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %80, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %81, align 4
  %84 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1, i32 1
  %85 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1, i32 1
  %86 = bitcast %"class.gfx::Transform"* %84 to i8*
  %87 = bitcast %"class.gfx::Transform"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 68, i1 false) #12
  %88 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1, i32 2
  %89 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1, i32 2
  %90 = bitcast %union.anon* %88 to i8*
  %91 = bitcast %union.anon* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* align 4 %91, i64 16, i1 false) #12
  %92 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1
  %93 = icmp eq %"struct.gfx::TransformOperation"* %80, %72
  br i1 %93, label %94, label %77

94:                                               ; preds = %77
  %95 = load i64, i64* %32, align 8
  br label %96

96:                                               ; preds = %94, %75
  %97 = phi %"struct.gfx::TransformOperation"* [ %58, %75 ], [ %92, %94 ]
  %98 = phi i64 [ %76, %75 ], [ %95, %94 ]
  %99 = ptrtoint %"struct.gfx::TransformOperation"* %97 to i64
  store i64 %99, i64* %32, align 8
  store i64 %70, i64* %31, align 8
  store i64 %60, i64* %41, align 8
  %100 = icmp eq i64 %98, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %96
  %102 = inttoptr i64 %98 to i8*
  call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %17, %96, %101
  %104 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %164, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %107, %121
  %112 = phi %"struct.std::__1::__hash_node_base"* [ %114, %121 ], [ %109, %107 ]
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %112, i64 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %112, i64 3
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %115 to %"struct.gfx::DecomposedTransform"**
  %117 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %116, align 8
  store %"struct.gfx::DecomposedTransform"* null, %"struct.gfx::DecomposedTransform"** %116, align 8
  %118 = icmp eq %"struct.gfx::DecomposedTransform"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %111
  %120 = bitcast %"struct.gfx::DecomposedTransform"* %117 to i8*
  call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %119, %111
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %112 to i8*
  call void @_ZdlPv(i8* %122) #13
  %123 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %107
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %108, align 8
  %125 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %146, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = add i64 %126, -1
  %131 = and i64 %126, 3
  %132 = icmp ult i64 %130, 3
  br i1 %132, label %135, label %133

133:                                              ; preds = %128
  %134 = sub i64 %126, %131
  br label %147

135:                                              ; preds = %147, %128
  %136 = phi i64 [ 0, %128 ], [ %161, %147 ]
  %137 = icmp eq i64 %131, 0
  br i1 %137, label %146, label %138

138:                                              ; preds = %135, %138
  %139 = phi i64 [ %143, %138 ], [ %136, %135 ]
  %140 = phi i64 [ %144, %138 ], [ %131, %135 ]
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %139
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %142, align 8
  %143 = add nuw i64 %139, 1
  %144 = add i64 %140, -1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %138, !llvm.loop !10

146:                                              ; preds = %135, %138, %124
  store i64 0, i64* %104, align 8
  br label %164

147:                                              ; preds = %147, %133
  %148 = phi i64 [ 0, %133 ], [ %161, %147 ]
  %149 = phi i64 [ %134, %133 ], [ %162, %147 ]
  %150 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %150, i64 %148
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %151, align 8
  %152 = or i64 %148, 1
  %153 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %153, i64 %152
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %154, align 8
  %155 = or i64 %148, 2
  %156 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %156, i64 %155
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %157, align 8
  %158 = or i64 %148, 3
  %159 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %159, i64 %158
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %160, align 8
  %161 = add nuw i64 %148, 4
  %162 = add i64 %149, -4
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %135, label %147

164:                                              ; preds = %103, %146
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19TransformOperations10AppendSkewEff(%"class.gfx::TransformOperations"*, float, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.gfx::TransformOperation", align 4
  %5 = bitcast %"struct.gfx::TransformOperation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 bitcast (%"struct.gfx::TransformOperation"* @__const._ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_.blended to i8*), i64 88, i1 false)
  %6 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %4, i64 0, i32 1
  %8 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %9 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %4, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %9, align 4
  store i32 5, i32* %6, align 4
  %10 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store float %1, float* %10, align 4
  %11 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %4, i64 0, i32 2, i32 0, i32 0, i32 1
  store float %2, float* %11, align 4
  call void @_ZN3gfx18TransformOperation4BakeEv(%"struct.gfx::TransformOperation"* nonnull %4) #12
  %12 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %12, align 8
  %14 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %14, align 8
  %16 = icmp eq %"struct.gfx::TransformOperation"* %13, %15
  %17 = ptrtoint %"struct.gfx::TransformOperation"* %15 to i64
  br i1 %16, label %30, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %13, i64 0, i32 0
  %20 = load i32, i32* %6, align 4
  store i32 %20, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %13, i64 0, i32 1
  %22 = bitcast %"class.gfx::Transform"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %8, i64 68, i1 false) #12
  %23 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %13, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %4, i64 0, i32 2
  %25 = bitcast %union.anon* %23 to i8*
  %26 = bitcast %union.anon* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 16, i1 false) #12
  %27 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %13, i64 1
  %28 = ptrtoint %"struct.gfx::TransformOperation"* %27 to i64
  %29 = bitcast %"struct.gfx::TransformOperation"** %12 to i64*
  store i64 %28, i64* %29, align 8
  br label %104

30:                                               ; preds = %3
  %31 = ptrtoint %"struct.gfx::TransformOperation"* %13 to i64
  %32 = bitcast %"struct.gfx::TransformOperation"** %12 to i64*
  %33 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = sdiv exact i64 %35, 88
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 209622091746699450
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  %40 = bitcast %"class.gfx::TransformOperations"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #14
  unreachable

41:                                               ; preds = %30
  %42 = bitcast %"struct.gfx::TransformOperation"** %14 to i64*
  %43 = sub i64 %17, %34
  %44 = sdiv exact i64 %43, 88
  %45 = icmp ult i64 %44, 104811045873349725
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = shl nsw i64 %44, 1
  %48 = icmp ult i64 %47, %37
  %49 = select i1 %48, i64 %37, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %46, %41
  %52 = phi i64 [ %49, %46 ], [ 209622091746699450, %41 ]
  %53 = mul i64 %52, 88
  %54 = call i8* @_Znwm(i64 %53) #13
  %55 = bitcast i8* %54 to %"struct.gfx::TransformOperation"*
  br label %56

56:                                               ; preds = %51, %46
  %57 = phi i64 [ %52, %51 ], [ 0, %46 ]
  %58 = phi %"struct.gfx::TransformOperation"* [ %55, %51 ], [ null, %46 ]
  %59 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %58, i64 %36
  %60 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %58, i64 %57
  %61 = ptrtoint %"struct.gfx::TransformOperation"* %60 to i64
  %62 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %59, i64 0, i32 0
  %63 = load i32, i32* %6, align 4
  store i32 %63, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %58, i64 %36, i32 1
  %65 = bitcast %"class.gfx::Transform"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %8, i64 68, i1 false) #12
  %66 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %58, i64 %36, i32 2
  %67 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %4, i64 0, i32 2
  %68 = bitcast %union.anon* %66 to i8*
  %69 = bitcast %union.anon* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 16, i1 false) #12
  %70 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %59, i64 1
  %71 = ptrtoint %"struct.gfx::TransformOperation"* %70 to i64
  %72 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %73 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %72, align 8
  %74 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %12, align 8
  %75 = icmp eq %"struct.gfx::TransformOperation"* %74, %73
  br i1 %75, label %76, label %78

76:                                               ; preds = %56
  %77 = ptrtoint %"struct.gfx::TransformOperation"* %73 to i64
  br label %97

78:                                               ; preds = %56, %78
  %79 = phi %"struct.gfx::TransformOperation"* [ %93, %78 ], [ %59, %56 ]
  %80 = phi %"struct.gfx::TransformOperation"* [ %81, %78 ], [ %74, %56 ]
  %81 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %80, i64 -1
  %82 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1, i32 0
  %83 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %81, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %82, align 4
  %85 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1, i32 1
  %86 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %80, i64 -1, i32 1
  %87 = bitcast %"class.gfx::Transform"* %85 to i8*
  %88 = bitcast %"class.gfx::Transform"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %88, i64 68, i1 false) #12
  %89 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1, i32 2
  %90 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %80, i64 -1, i32 2
  %91 = bitcast %union.anon* %89 to i8*
  %92 = bitcast %union.anon* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %92, i64 16, i1 false) #12
  %93 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1
  %94 = icmp eq %"struct.gfx::TransformOperation"* %81, %73
  br i1 %94, label %95, label %78

95:                                               ; preds = %78
  %96 = load i64, i64* %33, align 8
  br label %97

97:                                               ; preds = %95, %76
  %98 = phi %"struct.gfx::TransformOperation"* [ %59, %76 ], [ %93, %95 ]
  %99 = phi i64 [ %77, %76 ], [ %96, %95 ]
  %100 = ptrtoint %"struct.gfx::TransformOperation"* %98 to i64
  store i64 %100, i64* %33, align 8
  store i64 %71, i64* %32, align 8
  store i64 %61, i64* %42, align 8
  %101 = icmp eq i64 %99, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  %103 = inttoptr i64 %99 to i8*
  call void @_ZdlPv(i8* %103) #13
  br label %104

104:                                              ; preds = %18, %97, %102
  %105 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %165, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %109, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %108, %122
  %113 = phi %"struct.std::__1::__hash_node_base"* [ %115, %122 ], [ %110, %108 ]
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %113, i64 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %113, i64 3
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %116 to %"struct.gfx::DecomposedTransform"**
  %118 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %117, align 8
  store %"struct.gfx::DecomposedTransform"* null, %"struct.gfx::DecomposedTransform"** %117, align 8
  %119 = icmp eq %"struct.gfx::DecomposedTransform"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %112
  %121 = bitcast %"struct.gfx::DecomposedTransform"* %118 to i8*
  call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %120, %112
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %113 to i8*
  call void @_ZdlPv(i8* %123) #13
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %124, label %125, label %112

125:                                              ; preds = %122, %108
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %109, align 8
  %126 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %147, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = add i64 %127, -1
  %132 = and i64 %127, 3
  %133 = icmp ult i64 %131, 3
  br i1 %133, label %136, label %134

134:                                              ; preds = %129
  %135 = sub i64 %127, %132
  br label %148

136:                                              ; preds = %148, %129
  %137 = phi i64 [ 0, %129 ], [ %162, %148 ]
  %138 = icmp eq i64 %132, 0
  br i1 %138, label %147, label %139

139:                                              ; preds = %136, %139
  %140 = phi i64 [ %144, %139 ], [ %137, %136 ]
  %141 = phi i64 [ %145, %139 ], [ %132, %136 ]
  %142 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, i64 %140
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %143, align 8
  %144 = add nuw i64 %140, 1
  %145 = add i64 %141, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %139, !llvm.loop !11

147:                                              ; preds = %136, %139, %125
  store i64 0, i64* %105, align 8
  br label %165

148:                                              ; preds = %148, %134
  %149 = phi i64 [ 0, %134 ], [ %162, %148 ]
  %150 = phi i64 [ %135, %134 ], [ %163, %148 ]
  %151 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, i64 %149
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %152, align 8
  %153 = or i64 %149, 1
  %154 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %154, i64 %153
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %155, align 8
  %156 = or i64 %149, 2
  %157 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %157, i64 %156
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %158, align 8
  %159 = or i64 %149, 3
  %160 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %160, i64 %159
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %161, align 8
  %162 = add nuw i64 %149, 4
  %163 = add i64 %150, -4
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %136, label %148

165:                                              ; preds = %104, %147
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19TransformOperations17AppendPerspectiveEf(%"class.gfx::TransformOperations"*, float) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.gfx::TransformOperation", align 4
  %4 = bitcast %"struct.gfx::TransformOperation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 bitcast (%"struct.gfx::TransformOperation"* @__const._ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_.blended to i8*), i64 88, i1 false)
  %5 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 1
  %7 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %8 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %8, align 4
  store i32 6, i32* %5, align 4
  %9 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store float %1, float* %9, align 4
  call void @_ZN3gfx18TransformOperation4BakeEv(%"struct.gfx::TransformOperation"* nonnull %3) #12
  %10 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %10, align 8
  %12 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %12, align 8
  %14 = icmp eq %"struct.gfx::TransformOperation"* %11, %13
  %15 = ptrtoint %"struct.gfx::TransformOperation"* %13 to i64
  br i1 %14, label %28, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %11, i64 0, i32 0
  %18 = load i32, i32* %5, align 4
  store i32 %18, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %11, i64 0, i32 1
  %20 = bitcast %"class.gfx::Transform"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %7, i64 68, i1 false) #12
  %21 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %11, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2
  %23 = bitcast %union.anon* %21 to i8*
  %24 = bitcast %union.anon* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 16, i1 false) #12
  %25 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %11, i64 1
  %26 = ptrtoint %"struct.gfx::TransformOperation"* %25 to i64
  %27 = bitcast %"struct.gfx::TransformOperation"** %10 to i64*
  store i64 %26, i64* %27, align 8
  br label %102

28:                                               ; preds = %2
  %29 = ptrtoint %"struct.gfx::TransformOperation"* %11 to i64
  %30 = bitcast %"struct.gfx::TransformOperation"** %10 to i64*
  %31 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = sdiv exact i64 %33, 88
  %35 = add nsw i64 %34, 1
  %36 = icmp ugt i64 %35, 209622091746699450
  br i1 %36, label %37, label %39

37:                                               ; preds = %28
  %38 = bitcast %"class.gfx::TransformOperations"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #14
  unreachable

39:                                               ; preds = %28
  %40 = bitcast %"struct.gfx::TransformOperation"** %12 to i64*
  %41 = sub i64 %15, %32
  %42 = sdiv exact i64 %41, 88
  %43 = icmp ult i64 %42, 104811045873349725
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = shl nsw i64 %42, 1
  %46 = icmp ult i64 %45, %35
  %47 = select i1 %46, i64 %35, i64 %45
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %44, %39
  %50 = phi i64 [ %47, %44 ], [ 209622091746699450, %39 ]
  %51 = mul i64 %50, 88
  %52 = call i8* @_Znwm(i64 %51) #13
  %53 = bitcast i8* %52 to %"struct.gfx::TransformOperation"*
  br label %54

54:                                               ; preds = %49, %44
  %55 = phi i64 [ %50, %49 ], [ 0, %44 ]
  %56 = phi %"struct.gfx::TransformOperation"* [ %53, %49 ], [ null, %44 ]
  %57 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %56, i64 %34
  %58 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %56, i64 %55
  %59 = ptrtoint %"struct.gfx::TransformOperation"* %58 to i64
  %60 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 0, i32 0
  %61 = load i32, i32* %5, align 4
  store i32 %61, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %56, i64 %34, i32 1
  %63 = bitcast %"class.gfx::Transform"* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %7, i64 68, i1 false) #12
  %64 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %56, i64 %34, i32 2
  %65 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %3, i64 0, i32 2
  %66 = bitcast %union.anon* %64 to i8*
  %67 = bitcast %union.anon* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 16, i1 false) #12
  %68 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 1
  %69 = ptrtoint %"struct.gfx::TransformOperation"* %68 to i64
  %70 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %71 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %70, align 8
  %72 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %10, align 8
  %73 = icmp eq %"struct.gfx::TransformOperation"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %54
  %75 = ptrtoint %"struct.gfx::TransformOperation"* %71 to i64
  br label %95

76:                                               ; preds = %54, %76
  %77 = phi %"struct.gfx::TransformOperation"* [ %91, %76 ], [ %57, %54 ]
  %78 = phi %"struct.gfx::TransformOperation"* [ %79, %76 ], [ %72, %54 ]
  %79 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1
  %80 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %77, i64 -1, i32 0
  %81 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %77, i64 -1, i32 1
  %84 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1, i32 1
  %85 = bitcast %"class.gfx::Transform"* %83 to i8*
  %86 = bitcast %"class.gfx::Transform"* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 4 %86, i64 68, i1 false) #12
  %87 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %77, i64 -1, i32 2
  %88 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1, i32 2
  %89 = bitcast %union.anon* %87 to i8*
  %90 = bitcast %union.anon* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %90, i64 16, i1 false) #12
  %91 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %77, i64 -1
  %92 = icmp eq %"struct.gfx::TransformOperation"* %79, %71
  br i1 %92, label %93, label %76

93:                                               ; preds = %76
  %94 = load i64, i64* %31, align 8
  br label %95

95:                                               ; preds = %93, %74
  %96 = phi %"struct.gfx::TransformOperation"* [ %57, %74 ], [ %91, %93 ]
  %97 = phi i64 [ %75, %74 ], [ %94, %93 ]
  %98 = ptrtoint %"struct.gfx::TransformOperation"* %96 to i64
  store i64 %98, i64* %31, align 8
  store i64 %69, i64* %30, align 8
  store i64 %59, i64* %40, align 8
  %99 = icmp eq i64 %97, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  %101 = inttoptr i64 %97 to i8*
  call void @_ZdlPv(i8* %101) #13
  br label %102

102:                                              ; preds = %16, %95, %100
  %103 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %163, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %108 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %106, %120
  %111 = phi %"struct.std::__1::__hash_node_base"* [ %113, %120 ], [ %108, %106 ]
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %111, i64 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %111, i64 3
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %114 to %"struct.gfx::DecomposedTransform"**
  %116 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %115, align 8
  store %"struct.gfx::DecomposedTransform"* null, %"struct.gfx::DecomposedTransform"** %115, align 8
  %117 = icmp eq %"struct.gfx::DecomposedTransform"* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %110
  %119 = bitcast %"struct.gfx::DecomposedTransform"* %116 to i8*
  call void @_ZdlPv(i8* %119) #13
  br label %120

120:                                              ; preds = %118, %110
  %121 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i8*
  call void @_ZdlPv(i8* %121) #13
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %113, null
  br i1 %122, label %123, label %110

123:                                              ; preds = %120, %106
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %107, align 8
  %124 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %145, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = add i64 %125, -1
  %130 = and i64 %125, 3
  %131 = icmp ult i64 %129, 3
  br i1 %131, label %134, label %132

132:                                              ; preds = %127
  %133 = sub i64 %125, %130
  br label %146

134:                                              ; preds = %146, %127
  %135 = phi i64 [ 0, %127 ], [ %160, %146 ]
  %136 = icmp eq i64 %130, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %134, %137
  %138 = phi i64 [ %142, %137 ], [ %135, %134 ]
  %139 = phi i64 [ %143, %137 ], [ %130, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %128, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, i64 %138
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %141, align 8
  %142 = add nuw i64 %138, 1
  %143 = add i64 %139, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %137, !llvm.loop !12

145:                                              ; preds = %134, %137, %123
  store i64 0, i64* %103, align 8
  br label %163

146:                                              ; preds = %146, %132
  %147 = phi i64 [ 0, %132 ], [ %160, %146 ]
  %148 = phi i64 [ %133, %132 ], [ %161, %146 ]
  %149 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %128, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %149, i64 %147
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %150, align 8
  %151 = or i64 %147, 1
  %152 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %128, align 8
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %152, i64 %151
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %153, align 8
  %154 = or i64 %147, 2
  %155 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %128, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %155, i64 %154
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %156, align 8
  %157 = or i64 %147, 3
  %158 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %128, align 8
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %158, i64 %157
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %159, align 8
  %160 = add nuw i64 %147, 4
  %161 = add i64 %148, -4
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %134, label %146

163:                                              ; preds = %102, %145
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19TransformOperations12AppendMatrixERKNS_9TransformE(%"class.gfx::TransformOperations"*, %"class.gfx::Transform"* nocapture readonly dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %3 = alloca [4 x [4 x float]], align 4
  %4 = alloca [19 x i8], align 1
  %5 = bitcast [4 x [4 x float]]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5)
  %6 = getelementptr inbounds [19 x i8], [19 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %6, i8* align 1 getelementptr inbounds (%"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* @__const._ZNK3gfx19TransformOperations13BlendInternalERKS0_fPS0_.blended, i64 0, i32 1, i32 0, i32 2, i64 0), i64 19, i1 false)
  %7 = bitcast %"class.gfx::Transform"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 %7, i64 64, i1 false)
  %8 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %6, i8* align 1 %10, i64 3, i1 false)
  %11 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %11, align 8
  %13 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %13, align 8
  %15 = icmp eq %"struct.gfx::TransformOperation"* %12, %14
  %16 = ptrtoint %"struct.gfx::TransformOperation"* %14 to i64
  br i1 %15, label %29, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 0, i32 0
  store i32 7, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 0, i32 1
  %20 = bitcast %"class.gfx::Transform"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* nonnull align 4 %5, i64 64, i1 false)
  %21 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 0, i32 1, i32 0, i32 1
  store i8 %9, i8* %21, align 4
  %22 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 0, i32 1, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* nonnull align 1 %6, i64 3, i1 false)
  %23 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 0, i32 2
  %24 = bitcast %union.anon* %23 to i8*
  %25 = getelementptr inbounds [19 x i8], [19 x i8]* %4, i64 0, i64 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 1 %25, i64 16, i1 false)
  %26 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %12, i64 1
  %27 = ptrtoint %"struct.gfx::TransformOperation"* %26 to i64
  %28 = bitcast %"struct.gfx::TransformOperation"** %11 to i64*
  store i64 %27, i64* %28, align 8
  br label %103

29:                                               ; preds = %2
  %30 = ptrtoint %"struct.gfx::TransformOperation"* %12 to i64
  %31 = bitcast %"struct.gfx::TransformOperation"** %11 to i64*
  %32 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %30, %33
  %35 = sdiv exact i64 %34, 88
  %36 = add nsw i64 %35, 1
  %37 = icmp ugt i64 %36, 209622091746699450
  br i1 %37, label %38, label %40

38:                                               ; preds = %29
  %39 = bitcast %"class.gfx::TransformOperations"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %39) #14
  unreachable

40:                                               ; preds = %29
  %41 = bitcast %"struct.gfx::TransformOperation"** %13 to i64*
  %42 = sub i64 %16, %33
  %43 = sdiv exact i64 %42, 88
  %44 = icmp ult i64 %43, 104811045873349725
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = shl nsw i64 %43, 1
  %47 = icmp ult i64 %46, %36
  %48 = select i1 %47, i64 %36, i64 %46
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %45, %40
  %51 = phi i64 [ %48, %45 ], [ 209622091746699450, %40 ]
  %52 = mul i64 %51, 88
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %"struct.gfx::TransformOperation"*
  br label %55

55:                                               ; preds = %50, %45
  %56 = phi i64 [ %51, %50 ], [ 0, %45 ]
  %57 = phi %"struct.gfx::TransformOperation"* [ %54, %50 ], [ null, %45 ]
  %58 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %35
  %59 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %56
  %60 = ptrtoint %"struct.gfx::TransformOperation"* %59 to i64
  %61 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %58, i64 0, i32 0
  store i32 7, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %35, i32 1
  %63 = bitcast %"class.gfx::Transform"* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* nonnull align 4 %5, i64 64, i1 false)
  %64 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %35, i32 1, i32 0, i32 1
  store i8 %9, i8* %64, align 4
  %65 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %35, i32 1, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* nonnull align 1 %6, i64 3, i1 false)
  %66 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %57, i64 %35, i32 2
  %67 = bitcast %union.anon* %66 to i8*
  %68 = getelementptr inbounds [19 x i8], [19 x i8]* %4, i64 0, i64 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 1 %68, i64 16, i1 false)
  %69 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %58, i64 1
  %70 = ptrtoint %"struct.gfx::TransformOperation"* %69 to i64
  %71 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %72 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %71, align 8
  %73 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %11, align 8
  %74 = icmp eq %"struct.gfx::TransformOperation"* %73, %72
  br i1 %74, label %75, label %77

75:                                               ; preds = %55
  %76 = ptrtoint %"struct.gfx::TransformOperation"* %72 to i64
  br label %96

77:                                               ; preds = %55, %77
  %78 = phi %"struct.gfx::TransformOperation"* [ %92, %77 ], [ %58, %55 ]
  %79 = phi %"struct.gfx::TransformOperation"* [ %80, %77 ], [ %73, %55 ]
  %80 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1
  %81 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1, i32 0
  %82 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %80, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %81, align 4
  %84 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1, i32 1
  %85 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1, i32 1
  %86 = bitcast %"class.gfx::Transform"* %84 to i8*
  %87 = bitcast %"class.gfx::Transform"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 68, i1 false) #12
  %88 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1, i32 2
  %89 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %79, i64 -1, i32 2
  %90 = bitcast %union.anon* %88 to i8*
  %91 = bitcast %union.anon* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* align 4 %91, i64 16, i1 false) #12
  %92 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 -1
  %93 = icmp eq %"struct.gfx::TransformOperation"* %80, %72
  br i1 %93, label %94, label %77

94:                                               ; preds = %77
  %95 = load i64, i64* %32, align 8
  br label %96

96:                                               ; preds = %94, %75
  %97 = phi %"struct.gfx::TransformOperation"* [ %58, %75 ], [ %92, %94 ]
  %98 = phi i64 [ %76, %75 ], [ %95, %94 ]
  %99 = ptrtoint %"struct.gfx::TransformOperation"* %97 to i64
  store i64 %99, i64* %32, align 8
  store i64 %70, i64* %31, align 8
  store i64 %60, i64* %41, align 8
  %100 = icmp eq i64 %98, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %96
  %102 = inttoptr i64 %98 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %17, %96, %101
  %104 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %164, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %107, %121
  %112 = phi %"struct.std::__1::__hash_node_base"* [ %114, %121 ], [ %109, %107 ]
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %112, i64 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %112, i64 3
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %115 to %"struct.gfx::DecomposedTransform"**
  %117 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %116, align 8
  store %"struct.gfx::DecomposedTransform"* null, %"struct.gfx::DecomposedTransform"** %116, align 8
  %118 = icmp eq %"struct.gfx::DecomposedTransform"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %111
  %120 = bitcast %"struct.gfx::DecomposedTransform"* %117 to i8*
  tail call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %119, %111
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %112 to i8*
  tail call void @_ZdlPv(i8* %122) #13
  %123 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %107
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %108, align 8
  %125 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %146, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = add i64 %126, -1
  %131 = and i64 %126, 3
  %132 = icmp ult i64 %130, 3
  br i1 %132, label %135, label %133

133:                                              ; preds = %128
  %134 = sub i64 %126, %131
  br label %147

135:                                              ; preds = %147, %128
  %136 = phi i64 [ 0, %128 ], [ %161, %147 ]
  %137 = icmp eq i64 %131, 0
  br i1 %137, label %146, label %138

138:                                              ; preds = %135, %138
  %139 = phi i64 [ %143, %138 ], [ %136, %135 ]
  %140 = phi i64 [ %144, %138 ], [ %131, %135 ]
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %139
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %142, align 8
  %143 = add nuw i64 %139, 1
  %144 = add i64 %140, -1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %138, !llvm.loop !13

146:                                              ; preds = %135, %138, %124
  store i64 0, i64* %104, align 8
  br label %164

147:                                              ; preds = %147, %133
  %148 = phi i64 [ 0, %133 ], [ %161, %147 ]
  %149 = phi i64 [ %134, %133 ], [ %162, %147 ]
  %150 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %150, i64 %148
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %151, align 8
  %152 = or i64 %148, 1
  %153 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %153, i64 %152
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %154, align 8
  %155 = or i64 %148, 2
  %156 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %156, i64 %155
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %157, align 8
  %158 = or i64 %148, 3
  %159 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %159, i64 %158
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %160, align 8
  %161 = add nuw i64 %148, 4
  %162 = add i64 %149, -4
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %135, label %147

164:                                              ; preds = %103, %146
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19TransformOperations14AppendIdentityEv(%"class.gfx::TransformOperations"*) local_unnamed_addr #0 align 2 {
  %2 = alloca [19 x i8], align 1
  %3 = getelementptr inbounds [19 x i8], [19 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %3)
  %4 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %4, align 8
  %6 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %6, align 8
  %8 = icmp ult %"struct.gfx::TransformOperation"* %5, %7
  %9 = ptrtoint %"struct.gfx::TransformOperation"* %7 to i64
  br i1 %8, label %10, label %22

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 0
  store i32 8, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 1
  %13 = bitcast %"class.gfx::Transform"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* nonnull align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false)
  %14 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 1, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* nonnull align 1 %3, i64 3, i1 false)
  %16 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 0, i32 2
  %17 = bitcast %union.anon* %16 to i8*
  %18 = getelementptr inbounds [19 x i8], [19 x i8]* %2, i64 0, i64 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 1 %18, i64 16, i1 false)
  %19 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %5, i64 1
  %20 = ptrtoint %"struct.gfx::TransformOperation"* %19 to i64
  %21 = bitcast %"struct.gfx::TransformOperation"** %4 to i64*
  store i64 %20, i64* %21, align 8
  br label %96

22:                                               ; preds = %1
  %23 = ptrtoint %"struct.gfx::TransformOperation"* %5 to i64
  %24 = bitcast %"struct.gfx::TransformOperation"** %4 to i64*
  %25 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = sdiv exact i64 %27, 88
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 209622091746699450
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.gfx::TransformOperations"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #14
  unreachable

33:                                               ; preds = %22
  %34 = bitcast %"struct.gfx::TransformOperation"** %6 to i64*
  %35 = sub i64 %9, %26
  %36 = sdiv exact i64 %35, 88
  %37 = icmp ult i64 %36, 104811045873349725
  br i1 %37, label %38, label %43

38:                                               ; preds = %33
  %39 = shl nsw i64 %36, 1
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %38, %33
  %44 = phi i64 [ %41, %38 ], [ 209622091746699450, %33 ]
  %45 = mul i64 %44, 88
  %46 = tail call i8* @_Znwm(i64 %45) #13
  %47 = bitcast i8* %46 to %"struct.gfx::TransformOperation"*
  br label %48

48:                                               ; preds = %43, %38
  %49 = phi i64 [ %44, %43 ], [ 0, %38 ]
  %50 = phi %"struct.gfx::TransformOperation"* [ %47, %43 ], [ null, %38 ]
  %51 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %50, i64 %28
  %52 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %50, i64 %49
  %53 = ptrtoint %"struct.gfx::TransformOperation"* %52 to i64
  %54 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %51, i64 0, i32 0
  store i32 8, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %50, i64 %28, i32 1
  %56 = bitcast %"class.gfx::Transform"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* nonnull align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false)
  %57 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %50, i64 %28, i32 1, i32 0, i32 1
  store i8 0, i8* %57, align 4
  %58 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %50, i64 %28, i32 1, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* nonnull align 1 %3, i64 3, i1 false)
  %59 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %50, i64 %28, i32 2
  %60 = bitcast %union.anon* %59 to i8*
  %61 = getelementptr inbounds [19 x i8], [19 x i8]* %2, i64 0, i64 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 1 %61, i64 16, i1 false)
  %62 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %51, i64 1
  %63 = ptrtoint %"struct.gfx::TransformOperation"* %62 to i64
  %64 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %64, align 8
  %66 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %4, align 8
  %67 = icmp eq %"struct.gfx::TransformOperation"* %66, %65
  br i1 %67, label %68, label %70

68:                                               ; preds = %48
  %69 = ptrtoint %"struct.gfx::TransformOperation"* %65 to i64
  br label %89

70:                                               ; preds = %48, %70
  %71 = phi %"struct.gfx::TransformOperation"* [ %85, %70 ], [ %51, %48 ]
  %72 = phi %"struct.gfx::TransformOperation"* [ %73, %70 ], [ %66, %48 ]
  %73 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %72, i64 -1
  %74 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %71, i64 -1, i32 0
  %75 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %73, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %71, i64 -1, i32 1
  %78 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %72, i64 -1, i32 1
  %79 = bitcast %"class.gfx::Transform"* %77 to i8*
  %80 = bitcast %"class.gfx::Transform"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %80, i64 68, i1 false) #12
  %81 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %71, i64 -1, i32 2
  %82 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %72, i64 -1, i32 2
  %83 = bitcast %union.anon* %81 to i8*
  %84 = bitcast %union.anon* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64 16, i1 false) #12
  %85 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %71, i64 -1
  %86 = icmp eq %"struct.gfx::TransformOperation"* %73, %65
  br i1 %86, label %87, label %70

87:                                               ; preds = %70
  %88 = load i64, i64* %25, align 8
  br label %89

89:                                               ; preds = %87, %68
  %90 = phi %"struct.gfx::TransformOperation"* [ %51, %68 ], [ %85, %87 ]
  %91 = phi i64 [ %69, %68 ], [ %88, %87 ]
  %92 = ptrtoint %"struct.gfx::TransformOperation"* %90 to i64
  store i64 %92, i64* %25, align 8
  store i64 %63, i64* %24, align 8
  store i64 %53, i64* %34, align 8
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %89
  %95 = inttoptr i64 %91 to i8*
  tail call void @_ZdlPv(i8* %95) #13
  br label %96

96:                                               ; preds = %10, %89, %94
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19TransformOperations6AppendERKNS_18TransformOperationE(%"class.gfx::TransformOperations"*, %"struct.gfx::TransformOperation"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %3, align 8
  %5 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %5, align 8
  %7 = icmp eq %"struct.gfx::TransformOperation"* %4, %6
  %8 = ptrtoint %"struct.gfx::TransformOperation"* %6 to i64
  br i1 %7, label %24, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %10, align 4
  %13 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %4, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1
  %15 = bitcast %"class.gfx::Transform"* %13 to i8*
  %16 = bitcast %"class.gfx::Transform"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 68, i1 false) #12
  %17 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %4, i64 0, i32 2
  %18 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2
  %19 = bitcast %union.anon* %17 to i8*
  %20 = bitcast %union.anon* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 16, i1 false) #12
  %21 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %4, i64 1
  %22 = ptrtoint %"struct.gfx::TransformOperation"* %21 to i64
  %23 = bitcast %"struct.gfx::TransformOperation"** %3 to i64*
  store i64 %22, i64* %23, align 8
  br label %101

24:                                               ; preds = %2
  %25 = ptrtoint %"struct.gfx::TransformOperation"* %4 to i64
  %26 = bitcast %"struct.gfx::TransformOperation"** %3 to i64*
  %27 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = sdiv exact i64 %29, 88
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 209622091746699450
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.gfx::TransformOperations"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #14
  unreachable

35:                                               ; preds = %24
  %36 = bitcast %"struct.gfx::TransformOperation"** %5 to i64*
  %37 = sub i64 %8, %28
  %38 = sdiv exact i64 %37, 88
  %39 = icmp ult i64 %38, 104811045873349725
  br i1 %39, label %40, label %45

40:                                               ; preds = %35
  %41 = shl nsw i64 %38, 1
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %40, %35
  %46 = phi i64 [ %43, %40 ], [ 209622091746699450, %35 ]
  %47 = mul i64 %46, 88
  %48 = tail call i8* @_Znwm(i64 %47) #13
  %49 = bitcast i8* %48 to %"struct.gfx::TransformOperation"*
  br label %50

50:                                               ; preds = %45, %40
  %51 = phi i64 [ %46, %45 ], [ 0, %40 ]
  %52 = phi %"struct.gfx::TransformOperation"* [ %49, %45 ], [ null, %40 ]
  %53 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %52, i64 %30
  %54 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %52, i64 %51
  %55 = ptrtoint %"struct.gfx::TransformOperation"* %54 to i64
  %56 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %53, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %56, align 4
  %59 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %52, i64 %30, i32 1
  %60 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 1
  %61 = bitcast %"class.gfx::Transform"* %59 to i8*
  %62 = bitcast %"class.gfx::Transform"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 68, i1 false) #12
  %63 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %52, i64 %30, i32 2
  %64 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 0, i32 2
  %65 = bitcast %union.anon* %63 to i8*
  %66 = bitcast %union.anon* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 16, i1 false) #12
  %67 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %53, i64 1
  %68 = ptrtoint %"struct.gfx::TransformOperation"* %67 to i64
  %69 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0
  %70 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %69, align 8
  %71 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %3, align 8
  %72 = icmp eq %"struct.gfx::TransformOperation"* %71, %70
  br i1 %72, label %73, label %75

73:                                               ; preds = %50
  %74 = ptrtoint %"struct.gfx::TransformOperation"* %70 to i64
  br label %94

75:                                               ; preds = %50, %75
  %76 = phi %"struct.gfx::TransformOperation"* [ %90, %75 ], [ %53, %50 ]
  %77 = phi %"struct.gfx::TransformOperation"* [ %78, %75 ], [ %71, %50 ]
  %78 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %77, i64 -1
  %79 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %76, i64 -1, i32 0
  %80 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %78, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %79, align 4
  %82 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %76, i64 -1, i32 1
  %83 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %77, i64 -1, i32 1
  %84 = bitcast %"class.gfx::Transform"* %82 to i8*
  %85 = bitcast %"class.gfx::Transform"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %85, i64 68, i1 false) #12
  %86 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %76, i64 -1, i32 2
  %87 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %77, i64 -1, i32 2
  %88 = bitcast %union.anon* %86 to i8*
  %89 = bitcast %union.anon* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %89, i64 16, i1 false) #12
  %90 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %76, i64 -1
  %91 = icmp eq %"struct.gfx::TransformOperation"* %78, %70
  br i1 %91, label %92, label %75

92:                                               ; preds = %75
  %93 = load i64, i64* %27, align 8
  br label %94

94:                                               ; preds = %92, %73
  %95 = phi %"struct.gfx::TransformOperation"* [ %53, %73 ], [ %90, %92 ]
  %96 = phi i64 [ %74, %73 ], [ %93, %92 ]
  %97 = ptrtoint %"struct.gfx::TransformOperation"* %95 to i64
  store i64 %97, i64* %27, align 8
  store i64 %68, i64* %26, align 8
  store i64 %55, i64* %36, align 8
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %94
  %100 = inttoptr i64 %96 to i8*
  tail call void @_ZdlPv(i8* %100) #13
  br label %101

101:                                              ; preds = %9, %94, %99
  %102 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %162, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %105, %119
  %110 = phi %"struct.std::__1::__hash_node_base"* [ %112, %119 ], [ %107, %105 ]
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %110, i64 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %110, i64 3
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %113 to %"struct.gfx::DecomposedTransform"**
  %115 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %114, align 8
  store %"struct.gfx::DecomposedTransform"* null, %"struct.gfx::DecomposedTransform"** %114, align 8
  %116 = icmp eq %"struct.gfx::DecomposedTransform"* %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %109
  %118 = bitcast %"struct.gfx::DecomposedTransform"* %115 to i8*
  tail call void @_ZdlPv(i8* %118) #13
  br label %119

119:                                              ; preds = %117, %109
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8*
  tail call void @_ZdlPv(i8* %120) #13
  %121 = icmp eq %"struct.std::__1::__hash_node_base"* %112, null
  br i1 %121, label %122, label %109

122:                                              ; preds = %119, %105
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %106, align 8
  %123 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %144, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = add i64 %124, -1
  %129 = and i64 %124, 3
  %130 = icmp ult i64 %128, 3
  br i1 %130, label %133, label %131

131:                                              ; preds = %126
  %132 = sub i64 %124, %129
  br label %145

133:                                              ; preds = %145, %126
  %134 = phi i64 [ 0, %126 ], [ %159, %145 ]
  %135 = icmp eq i64 %129, 0
  br i1 %135, label %144, label %136

136:                                              ; preds = %133, %136
  %137 = phi i64 [ %141, %136 ], [ %134, %133 ]
  %138 = phi i64 [ %142, %136 ], [ %129, %133 ]
  %139 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %127, align 8
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %139, i64 %137
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %140, align 8
  %141 = add nuw i64 %137, 1
  %142 = add i64 %138, -1
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %136, !llvm.loop !14

144:                                              ; preds = %133, %136, %122
  store i64 0, i64* %102, align 8
  br label %162

145:                                              ; preds = %145, %131
  %146 = phi i64 [ 0, %131 ], [ %159, %145 ]
  %147 = phi i64 [ %132, %131 ], [ %160, %145 ]
  %148 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %127, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %148, i64 %146
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %149, align 8
  %150 = or i64 %146, 1
  %151 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %127, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, i64 %150
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %152, align 8
  %153 = or i64 %146, 2
  %154 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %127, align 8
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %154, i64 %153
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %155, align 8
  %156 = or i64 %146, 3
  %157 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %127, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %157, i64 %156
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %158, align 8
  %159 = add nuw i64 %146, 4
  %160 = add i64 %147, -4
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %133, label %145

162:                                              ; preds = %101, %144
  ret void
}

declare zeroext i1 @_ZNK3gfx18TransformOperation10IsIdentityEv(%"struct.gfx::TransformOperation"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx19TransformOperations18ApproximatelyEqualERKS0_f(%"class.gfx::TransformOperations"* nocapture readonly, %"class.gfx::TransformOperations"* nocapture readonly dereferenceable(64), float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.gfx::TransformOperation"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.gfx::TransformOperation"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.gfx::TransformOperations"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = icmp eq i64 %9, %15
  %17 = inttoptr i64 %14 to %"struct.gfx::TransformOperation"*
  br i1 %16, label %18, label %38

18:                                               ; preds = %3
  %19 = icmp eq i64 %6, %8
  br i1 %19, label %38, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 0
  %22 = inttoptr i64 %8 to %"struct.gfx::TransformOperation"*
  %23 = tail call zeroext i1 @_ZNK3gfx18TransformOperation18ApproximatelyEqualERKS0_f(%"struct.gfx::TransformOperation"* %22, %"struct.gfx::TransformOperation"* dereferenceable(88) %17, float %2) #12
  br i1 %23, label %24, label %38

24:                                               ; preds = %20, %31
  %25 = phi i64 [ %37, %31 ], [ 1, %20 ]
  %26 = load i64, i64* %5, align 8
  %27 = load i64, i64* %7, align 8
  %28 = sub i64 %26, %27
  %29 = sdiv exact i64 %28, 88
  %30 = icmp ult i64 %25, %29
  br i1 %30, label %31, label %38

31:                                               ; preds = %24
  %32 = load %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"** %21, align 8
  %33 = inttoptr i64 %27 to %"struct.gfx::TransformOperation"*
  %34 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %33, i64 %25
  %35 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %32, i64 %25
  %36 = tail call zeroext i1 @_ZNK3gfx18TransformOperation18ApproximatelyEqualERKS0_f(%"struct.gfx::TransformOperation"* %34, %"struct.gfx::TransformOperation"* dereferenceable(88) %35, float %2) #12
  %37 = add nuw i64 %25, 1
  br i1 %36, label %24, label %38

38:                                               ; preds = %24, %31, %20, %18, %3
  %39 = phi i1 [ false, %3 ], [ true, %18 ], [ false, %20 ], [ false, %31 ], [ true, %24 ]
  ret i1 %39
}

declare zeroext i1 @_ZNK3gfx18TransformOperation18ApproximatelyEqualERKS0_f(%"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"* dereferenceable(88), float) local_unnamed_addr #2

declare zeroext i1 @_ZN3gfx18TransformOperation24BlendTransformOperationsEPKS0_S2_fPS0_(%"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"*, float, %"struct.gfx::TransformOperation"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx19TransformOperations26ComputeDecomposedTransformEm(%"class.gfx::TransformOperations"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.31", align 1
  %5 = alloca i64, align 8
  %6 = alloca %"class.gfx::Transform", align 4
  store i64 %1, i64* %5, align 8
  %7 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %59, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !15
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %1
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %1
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %1, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %1, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %59, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %59, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br label %34

34:                                               ; preds = %55, %32
  %35 = phi %"struct.std::__1::__hash_node_base"* [ %30, %32 ], [ %57, %55 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %1
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %33
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %45, %43, %41
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %55, label %59

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %1
  br i1 %54, label %102, label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %59, label %34

59:                                               ; preds = %47, %55, %21, %2, %28
  %60 = tail call i8* @_Znwm(i64 88) #13
  %61 = bitcast i8* %60 to %"struct.gfx::DecomposedTransform"*
  tail call void @_ZN3gfx19DecomposedTransformC1Ev(%"struct.gfx::DecomposedTransform"* nonnull %61) #12
  %62 = ptrtoint i8* %60 to i64
  %63 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %63) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %63, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK3gfx19TransformOperations14ApplyRemainingEm.to_return to i8*), i64 68, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %63, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %64 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %6, i64 0, i32 0, i32 1
  store i8 0, i8* %64, align 4, !alias.scope !16
  %65 = getelementptr inbounds %"class.gfx::TransformOperations", %"class.gfx::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 1
  %66 = bitcast %"struct.gfx::TransformOperation"** %65 to i64*
  %67 = load i64, i64* %66, align 8, !noalias !16
  %68 = bitcast %"class.gfx::TransformOperations"* %0 to i64*
  %69 = load i64, i64* %68, align 8, !noalias !16
  %70 = sub i64 %67, %69
  %71 = sdiv exact i64 %70, 88
  %72 = icmp ugt i64 %71, %1
  br i1 %72, label %73, label %84

73:                                               ; preds = %59, %73
  %74 = phi i64 [ %80, %73 ], [ %69, %59 ]
  %75 = phi i64 [ %78, %73 ], [ %1, %59 ]
  %76 = inttoptr i64 %74 to %"struct.gfx::TransformOperation"*
  %77 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %76, i64 %75, i32 1
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* nonnull %6, %"class.gfx::Transform"* dereferenceable(68) %77) #12
  %78 = add nuw i64 %75, 1
  %79 = load i64, i64* %66, align 8, !noalias !16
  %80 = load i64, i64* %68, align 8, !noalias !16
  %81 = sub i64 %79, %80
  %82 = sdiv exact i64 %81, 88
  %83 = icmp ult i64 %78, %82
  br i1 %83, label %73, label %84

84:                                               ; preds = %73, %59
  %85 = call zeroext i1 @_ZN3gfx18DecomposeTransformEPNS_19DecomposedTransformERKNS_9TransformE(%"struct.gfx::DecomposedTransform"* nonnull %61, %"class.gfx::Transform"* nonnull dereferenceable(68) %6) #12
  br i1 %85, label %86, label %101

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %7, i64 0, i32 0
  %88 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #12
  %89 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i64* %5, i64** %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::tuple.31", %"class.std::__1::tuple.31"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %90) #12
  %91 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %87, i64* nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.31"* nonnull dereferenceable(1) %4) #12
  %92 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %91, 0
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %92, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %90) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #12
  %94 = bitcast %"struct.std::__1::__hash_node_base"* %93 to %"struct.gfx::DecomposedTransform"**
  %95 = load %"struct.gfx::DecomposedTransform"*, %"struct.gfx::DecomposedTransform"** %94, align 8
  %96 = bitcast %"struct.std::__1::__hash_node_base"* %93 to i64*
  store i64 %62, i64* %96, align 8
  %97 = icmp eq %"struct.gfx::DecomposedTransform"* %95, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %86
  %99 = bitcast %"struct.gfx::DecomposedTransform"* %95 to i8*
  call void @_ZdlPv(i8* %99) #13
  br label %100

100:                                              ; preds = %98, %86
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %63) #12
  br label %102

101:                                              ; preds = %84
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %63) #12
  call void @_ZdlPv(i8* nonnull %60) #13
  br label %102

102:                                              ; preds = %50, %100, %101
  %103 = phi i1 [ false, %101 ], [ true, %100 ], [ true, %50 ]
  ret i1 %103
}

declare void @_ZN3gfx25BlendDecomposedTransformsERKNS_19DecomposedTransformES2_d(%"struct.gfx::DecomposedTransform"* sret, %"struct.gfx::DecomposedTransform"* dereferenceable(88), %"struct.gfx::DecomposedTransform"* dereferenceable(88), double) local_unnamed_addr #2

declare void @_ZN3gfx16ComposeTransformERKNS_19DecomposedTransformE(%"class.gfx::Transform"* sret, %"struct.gfx::DecomposedTransform"* dereferenceable(88)) local_unnamed_addr #2

declare zeroext i1 @_ZN3gfx18DecomposeTransformEPNS_19DecomposedTransformERKNS_9TransformE(%"struct.gfx::DecomposedTransform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare double @tan(double) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx18TransformOperationENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.gfx::TransformOperation"* %2 to i64
  %5 = ptrtoint %"struct.gfx::TransformOperation"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 88
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.gfx::TransformOperation"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 88
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.gfx::TransformOperation"*
  br i1 %15, label %62, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.gfx::TransformOperation"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 88
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %1, i64 %22
  %25 = select i1 %23, %"struct.gfx::TransformOperation"* %24, %"struct.gfx::TransformOperation"* %2
  %26 = ptrtoint %"struct.gfx::TransformOperation"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 88
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.gfx::TransformOperation"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %60

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = icmp eq %"struct.gfx::TransformOperation"* %25, %2
  br i1 %36, label %58, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to %"struct.gfx::TransformOperation"*
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi %"struct.gfx::TransformOperation"* [ %54, %39 ], [ %38, %37 ]
  %41 = phi %"struct.gfx::TransformOperation"* [ %53, %39 ], [ %24, %37 ]
  %42 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %40, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %41, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %42, align 4
  %45 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %40, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %41, i64 0, i32 1
  %47 = bitcast %"class.gfx::Transform"* %45 to i8*
  %48 = bitcast %"class.gfx::Transform"* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %48, i64 68, i1 false) #12
  %49 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %40, i64 0, i32 2
  %50 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %41, i64 0, i32 2
  %51 = bitcast %union.anon* %49 to i8*
  %52 = bitcast %union.anon* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %52, i64 16, i1 false) #12
  %53 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %41, i64 1
  %54 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %40, i64 1
  %55 = icmp eq %"struct.gfx::TransformOperation"* %53, %2
  br i1 %55, label %56, label %39

56:                                               ; preds = %39
  %57 = ptrtoint %"struct.gfx::TransformOperation"* %54 to i64
  br label %58

58:                                               ; preds = %34, %56
  %59 = phi i64 [ %35, %34 ], [ %57, %56 ]
  store i64 %59, i64* %19, align 8
  br label %114

60:                                               ; preds = %33
  %61 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %16, i64 %28
  store %"struct.gfx::TransformOperation"* %61, %"struct.gfx::TransformOperation"** %18, align 8
  br label %114

62:                                               ; preds = %3
  %63 = icmp eq i64 %12, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %66 = bitcast %"struct.gfx::TransformOperation"** %65 to i64*
  store i64 %12, i64* %66, align 8
  %67 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %67) #13
  %68 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #12
  br label %69

69:                                               ; preds = %62, %64
  %70 = phi i64 [ %10, %62 ], [ 0, %64 ]
  %71 = icmp ugt i64 %7, 209622091746699450
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %73) #14
  unreachable

74:                                               ; preds = %69
  %75 = sdiv exact i64 %70, 88
  %76 = icmp ult i64 %75, 104811045873349725
  br i1 %76, label %77, label %81

77:                                               ; preds = %74
  %78 = shl nsw i64 %75, 1
  %79 = icmp ult i64 %78, %7
  %80 = select i1 %79, i64 %7, i64 %78
  br label %81

81:                                               ; preds = %77, %74
  %82 = phi i64 [ %80, %77 ], [ 209622091746699450, %74 ]
  %83 = mul i64 %82, 88
  %84 = tail call i8* @_Znwm(i64 %83) #13
  %85 = bitcast i8* %84 to %"struct.gfx::TransformOperation"*
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %87 = bitcast %"struct.gfx::TransformOperation"** %86 to i8**
  store i8* %84, i8** %87, align 8
  %88 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %84, i8** %88, align 8
  %89 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %85, i64 %82
  store %"struct.gfx::TransformOperation"* %89, %"struct.gfx::TransformOperation"** %8, align 8
  %90 = bitcast %"struct.gfx::TransformOperation"** %86 to i64*
  %91 = ptrtoint i8* %84 to i64
  %92 = icmp eq %"struct.gfx::TransformOperation"* %1, %2
  br i1 %92, label %112, label %93

93:                                               ; preds = %81, %93
  %94 = phi %"struct.gfx::TransformOperation"* [ %108, %93 ], [ %85, %81 ]
  %95 = phi %"struct.gfx::TransformOperation"* [ %107, %93 ], [ %1, %81 ]
  %96 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %94, i64 0, i32 0
  %97 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %95, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %94, i64 0, i32 1
  %100 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %95, i64 0, i32 1
  %101 = bitcast %"class.gfx::Transform"* %99 to i8*
  %102 = bitcast %"class.gfx::Transform"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 68, i1 false) #12
  %103 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %94, i64 0, i32 2
  %104 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %95, i64 0, i32 2
  %105 = bitcast %union.anon* %103 to i8*
  %106 = bitcast %union.anon* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 16, i1 false) #12
  %107 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %95, i64 1
  %108 = getelementptr inbounds %"struct.gfx::TransformOperation", %"struct.gfx::TransformOperation"* %94, i64 1
  %109 = icmp eq %"struct.gfx::TransformOperation"* %107, %2
  br i1 %109, label %110, label %93

110:                                              ; preds = %93
  %111 = ptrtoint %"struct.gfx::TransformOperation"* %108 to i64
  br label %112

112:                                              ; preds = %81, %110
  %113 = phi i64 [ %91, %81 ], [ %111, %110 ]
  store i64 %113, i64* %90, align 8
  br label %114

114:                                              ; preds = %58, %60, %112
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i64* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.31"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %5
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #12, !range !15
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %26, label %54, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br label %29

29:                                               ; preds = %27, %49
  %30 = phi %"struct.std::__1::__hash_node_base"* [ %32, %49 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %28
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %40, %42, %44
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %49, label %54

49:                                               ; preds = %34, %46
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %6
  br i1 %53, label %145, label %29

54:                                               ; preds = %29, %46, %20, %5
  %55 = phi i64 [ %21, %20 ], [ -6148914691236517206, %5 ], [ %21, %46 ], [ %21, %29 ]
  %56 = tail call i8* @_Znwm(i64 32) #13, !noalias !19
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8, !noalias !19
  %60 = bitcast i8* %57 to i64*
  %61 = load i64, i64* %59, align 8, !noalias !19
  store i64 %61, i64* %60, align 8, !noalias !19
  %62 = getelementptr inbounds i8, i8* %56, i64 24
  %63 = bitcast i8* %62 to i64*
  store i64 0, i64* %63, align 8, !noalias !19
  %64 = getelementptr inbounds i8, i8* %56, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %6, i64* %65, align 8, !noalias !19
  %66 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %66, align 8, !noalias !19
  %67 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %8 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %9, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %54
  %78 = shl i64 %8, 1
  %79 = icmp ult i64 %8, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %8) #12, !range !15
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #12
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %89)
  %90 = load i64, i64* %7, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #12, !range !15
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, -1
  %95 = and i64 %94, %6
  br label %100

96:                                               ; preds = %77
  %97 = icmp ult i64 %6, %90
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %6, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %54
  %101 = phi i64 [ %8, %54 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %55, %54 ], [ %95, %93 ], [ %6, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %56 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i8**
  store i8* %56, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base"* %109, %"struct.std::__1::__hash_node_base"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #12, !range !15
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %56 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %56, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %49, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %49 ]
  %147 = phi %"struct.std::__1::__hash_node_base"* [ %142, %141 ], [ %32, %49 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !22

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i64*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %102, align 8
  %113 = load i64, i64* %111, align 8
  %114 = icmp eq i64 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

declare void @_ZN3gfx19DecomposedTransformC1Ev(%"struct.gfx::DecomposedTransform"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK3gfx19TransformOperations14ApplyRemainingEm: argument 0"}
!4 = distinct !{!4, !"_ZNK3gfx19TransformOperations14ApplyRemainingEm"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !6}
!11 = distinct !{!11, !6}
!12 = distinct !{!12, !6}
!13 = distinct !{!13, !6}
!14 = distinct !{!14, !6}
!15 = !{i64 0, i64 65}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK3gfx19TransformOperations14ApplyRemainingEm: argument 0"}
!18 = distinct !{!18, !"_ZNK3gfx19TransformOperations14ApplyRemainingEm"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKmEEENSO_IJEEEEEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_10unique_ptrIN3gfx19DecomposedTransformENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherImS8_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKmEEENSO_IJEEEEEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISV_EEEEEEmOT_DpOT0_"}
!22 = distinct !{!22, !6}
