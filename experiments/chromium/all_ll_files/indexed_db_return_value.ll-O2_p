; ModuleID = '../../content/browser/indexed_db/indexed_db_return_value.cc'
source_filename = "../../content/browser/indexed_db/indexed_db_return_value.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::mojom::IDBReturnValue"* }
%"class.blink::mojom::IDBReturnValue" = type { %"class.mojo::StructPtr.43", %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKeyPath" }
%"class.mojo::StructPtr.43" = type { %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::mojom::IDBValue"* }
%"class.blink::mojom::IDBValue" = type { %"class.std::__1::vector.13", %"class.std::__1::vector.47" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { i8*, i8*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i8* }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"class.mojo::StructPtr.49"*, %"class.mojo::StructPtr.49"*, %"class.std::__1::__compressed_pair.69" }
%"class.mojo::StructPtr.49" = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::mojom::IDBExternalObject"* }
%"class.blink::mojom::IDBExternalObject" = type { i32, %"union.blink::mojom::IDBExternalObject::Union_" }
%"union.blink::mojom::IDBExternalObject::Union_" = type { %"class.mojo::StructPtr.53"* }
%"class.mojo::StructPtr.53" = type { %"class.std::__1::unique_ptr.54" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::mojom::IDBBlobInfo"* }
%"class.blink::mojom::IDBBlobInfo" = type { %"class.mojo::PendingRemote", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", i64, %"class.mojo::StructPtr.57" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.mojo::StructPtr.57" = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::mojom::IDBFileInfo"* }
%"class.blink::mojom::IDBFileInfo" = type { %"class.std::__1::basic_string.1", %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.mojo::StructPtr.49"* }
%"class.blink::IndexedDBKey" = type { i32, %"class.std::__1::vector.27", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", double, i64 }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::IndexedDBKey"* }
%"class.blink::IndexedDBKeyPath" = type { i32, %"class.std::__1::basic_string.1", %"class.std::__1::vector.34" }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::basic_string.1"* }
%"struct.content::IndexedDBReturnValue" = type { %"struct.content::IndexedDBValue", %"class.blink::IndexedDBKey", %"class.blink::IndexedDBKeyPath" }
%"struct.content::IndexedDBValue" = type { %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.content::IndexedDBExternalObject"*, %"class.content::IndexedDBExternalObject"*, %"class.std::__1::__compressed_pair.22" }
%"class.content::IndexedDBExternalObject" = type { i8, %"class.mojo::SharedRemote", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", %"class.base::FilePath", i64, %"class.std::__1::basic_string.1", %"class.base::Time", %"class.mojo::SharedRemote.10", %"class.std::__1::vector.13", i64, %"class.base::RepeatingCallback", %"class.base::RepeatingCallback" }
%"class.mojo::SharedRemote" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::SharedRemoteBase"* }
%"class.mojo::SharedRemoteBase" = type { %"class.base::RefCountedThreadSafe.80", %class.scoped_refptr.81, %"class.std::__1::unique_ptr.82" }
%"class.base::RefCountedThreadSafe.80" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.81 = type { %"class.mojo::SharedRemoteBase<mojo::Remote<blink::mojom::Blob> >::RemoteWrapper"* }
%"class.mojo::SharedRemoteBase<mojo::Remote<blink::mojom::Blob> >::RemoteWrapper" = type { %"class.base::RefCountedThreadSafe.88", %class.scoped_refptr.89, %"class.mojo::Remote", %"class.mojo::AssociatedGroup" }
%"class.base::RefCountedThreadSafe.88" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.89 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.90" }>
%"class.base::RefCountedThreadSafe.90" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.253" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.91, %"class.std::__1::unique_ptr.203", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.89, i32 }>
%class.scoped_refptr.91 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.89, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.166", %"class.absl::optional.171", %"class.absl::optional.128", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.194", i8, [7 x i8], %class.scoped_refptr.89, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.92" }>
%"class.base::RefCountedThreadSafe.92" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.106", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.106" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.107" }
%"struct.std::__1::atomic.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__cxx_atomic_impl.110" }
%"struct.std::__1::__cxx_atomic_impl.110" = type { %"struct.std::__1::__cxx_atomic_base_impl.111" }
%"struct.std::__1::__cxx_atomic_base_impl.111" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.89, %"class.std::__1::unique_ptr.112", %"class.absl::optional", %"struct.std::__1::atomic.124", i8, i8, i8, i8, i32, i32, %"class.absl::optional.128", %"class.std::__1::unique_ptr.133", i8, i64, %class.scoped_refptr.162, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.165" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.89, i8, %"class.mojo::ScopedHandleBase.115", %class.scoped_refptr.116, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.117", i8*, %"class.base::WeakPtrFactory.118" }
%"class.mojo::ScopedHandleBase.115" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.116 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.117" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.118" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.122 }
%union.anon.122 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.123", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.123" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.124" = type { %"struct.std::__1::__atomic_base.125" }
%"struct.std::__1::__atomic_base.125" = type { %"struct.std::__1::__cxx_atomic_impl.126" }
%"struct.std::__1::__cxx_atomic_impl.126" = type { %"struct.std::__1::__cxx_atomic_base_impl.127" }
%"struct.std::__1::__cxx_atomic_base_impl.127" = type { i8 }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.136", i8, i64, %class.scoped_refptr.137, %class.scoped_refptr.158 }
%"class.base::RepeatingCallback.136" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.137 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.147", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.138 }
%class.scoped_refptr.138 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { i64 }
%"class.std::__1::map.147" = type { %"class.std::__1::__tree.148" }
%"class.std::__1::__tree.148" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%class.scoped_refptr.158 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.162 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.163 }
%class.scoped_refptr.163 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.259", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.89, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.260", [4 x i8] }>
%"class.base::RefCountedThreadSafe.259" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.260" = type { %"struct.std::__1::__atomic_base.261" }
%"struct.std::__1::__atomic_base.261" = type { %"struct.std::__1::__atomic_base.262" }
%"struct.std::__1::__atomic_base.262" = type { %"struct.std::__1::__cxx_atomic_impl.263" }
%"struct.std::__1::__cxx_atomic_impl.263" = type { %"struct.std::__1::__cxx_atomic_base_impl.264" }
%"struct.std::__1::__cxx_atomic_base_impl.264" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.164 }
%class.scoped_refptr.164 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.165" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.166" = type { %"class.absl::optional_internal::optional_data.167" }
%"class.absl::optional_internal::optional_data.167" = type { %"class.absl::optional_internal::optional_data_base.168" }
%"class.absl::optional_internal::optional_data_base.168" = type { %"class.absl::optional_internal::optional_data_dtor_base.169" }
%"class.absl::optional_internal::optional_data_dtor_base.169" = type { i8, %union.anon.170 }
%union.anon.170 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.171" = type { %"class.absl::optional_internal::optional_data.172" }
%"class.absl::optional_internal::optional_data.172" = type { %"class.absl::optional_internal::optional_data_base.173" }
%"class.absl::optional_internal::optional_data_base.173" = type { %"class.absl::optional_internal::optional_data_dtor_base.174" }
%"class.absl::optional_internal::optional_data_dtor_base.174" = type { i8, [7 x i8], %union.anon.175 }
%union.anon.175 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.128" = type { %"class.absl::optional_internal::optional_data.129" }
%"class.absl::optional_internal::optional_data.129" = type { %"class.absl::optional_internal::optional_data_base.130" }
%"class.absl::optional_internal::optional_data_base.130" = type { %"class.absl::optional_internal::optional_data_dtor_base.131" }
%"class.absl::optional_internal::optional_data_dtor_base.131" = type { i8, %union.anon.132 }
%union.anon.132 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.180 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.180 = type { %"class.std::__1::map.182" }
%"class.std::__1::map.182" = type { %"class.std::__1::__tree.183" }
%"class.std::__1::__tree.183" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.193"*, i64 }
%"class.std::__1::unique_ptr.193" = type opaque
%"class.std::__1::map.194" = type { %"class.std::__1::__tree.195" }
%"class.std::__1::__tree.195" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.196", %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.206", %"class.absl::optional.207", %"class.absl::optional.212", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.220", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.228", %"class.std::__1::map.239", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.248", i8, %class.scoped_refptr.89, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.249" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.206" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.207" = type { %"class.absl::optional_internal::optional_data.208" }
%"class.absl::optional_internal::optional_data.208" = type { %"class.absl::optional_internal::optional_data_base.209" }
%"class.absl::optional_internal::optional_data_base.209" = type { %"class.absl::optional_internal::optional_data_dtor_base.210" }
%"class.absl::optional_internal::optional_data_dtor_base.210" = type { i8, %union.anon.211 }
%union.anon.211 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.212" = type { %"class.absl::optional_internal::optional_data.213" }
%"class.absl::optional_internal::optional_data.213" = type { %"class.absl::optional_internal::optional_data_base.214" }
%"class.absl::optional_internal::optional_data_base.214" = type { %"class.absl::optional_internal::optional_data_dtor_base.215" }
%"class.absl::optional_internal::optional_data_dtor_base.215" = type { i8, %union.anon.216 }
%union.anon.216 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.89, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.218" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.217" }
%"class.base::time_internal::TimeBase.217" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.218" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.219 }
%class.scoped_refptr.219 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.228" = type { %"class.std::__1::__tree.229" }
%"class.std::__1::__tree.229" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"class.std::__1::map.239" = type { %"class.std::__1::__tree.240" }
%"class.std::__1::__tree.240" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"class.base::OnceCallback.248" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.249" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::mojom::BlobProxy"* }
%"class.blink::mojom::BlobProxy" = type { %"class.blink::mojom::Blob", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::Blob" = type { i32 (...)** }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.223", %class.scoped_refptr.224 }
%"class.base::RepeatingCallback.223" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.224 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.92", [4 x i8] }>
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.mojo::ThreadSafeForwarder"* }
%"class.mojo::ThreadSafeForwarder" = type { %"class.mojo::internal::ThreadSafeForwarderBase", %"class.blink::mojom::BlobProxy" }
%"class.mojo::internal::ThreadSafeForwarderBase" = type { %"class.mojo::MessageReceiverWithResponder", %class.scoped_refptr.265 }
%class.scoped_refptr.265 = type { %"class.mojo::ThreadSafeProxy"* }
%"class.mojo::ThreadSafeProxy" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.266", [4 x i8] }>
%"class.base::RefCountedThreadSafe.266" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.mojo::SharedRemote.10" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.mojo::SharedRemoteBase.12"* }
%"class.mojo::SharedRemoteBase.12" = type { %"class.base::RefCountedThreadSafe.267", %class.scoped_refptr.268, %"class.std::__1::unique_ptr.269" }
%"class.base::RefCountedThreadSafe.267" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.268 = type { %"class.mojo::SharedRemoteBase<mojo::Remote<blink::mojom::FileSystemAccessTransferToken> >::RemoteWrapper"* }
%"class.mojo::SharedRemoteBase<mojo::Remote<blink::mojom::FileSystemAccessTransferToken> >::RemoteWrapper" = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.mojo::ThreadSafeForwarder.272"* }
%"class.mojo::ThreadSafeForwarder.272" = type { %"class.mojo::internal::ThreadSafeForwarderBase", %"class.blink::mojom::FileSystemAccessTransferTokenProxy" }
%"class.blink::mojom::FileSystemAccessTransferTokenProxy" = type { %"class.blink::mojom::FileSystemAccessTransferToken", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::FileSystemAccessTransferToken" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.content::IndexedDBExternalObject"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20IndexedDBReturnValue18ConvertReturnValueEPS0_(%"class.mojo::StructPtr"* noalias nocapture sret, %"struct.content::IndexedDBReturnValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.13", align 8
  %4 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call i8* @_Znwm(i64 160) #7, !noalias !2
  %6 = bitcast i8* %5 to %"class.blink::mojom::IDBReturnValue"*
  tail call void @_ZN5blink5mojom14IDBReturnValueC1Ev(%"class.blink::mojom::IDBReturnValue"* nonnull %6) #8, !noalias !2
  %7 = ptrtoint i8* %5 to i64
  %8 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %7, i64* %8, align 8, !alias.scope !2
  %9 = tail call i8* @_Znwm(i64 48) #7, !noalias !5
  %10 = bitcast i8* %9 to %"class.blink::mojom::IDBValue"*
  tail call void @_ZN5blink5mojom8IDBValueC1Ev(%"class.blink::mojom::IDBValue"* nonnull %10) #8, !noalias !5
  %11 = ptrtoint i8* %9 to i64
  %12 = bitcast i8* %5 to %"class.blink::mojom::IDBValue"**
  %13 = load %"class.blink::mojom::IDBValue"*, %"class.blink::mojom::IDBValue"** %12, align 8
  store %"class.blink::mojom::IDBValue"* null, %"class.blink::mojom::IDBValue"** %12, align 8
  %14 = icmp eq %"class.blink::mojom::IDBValue"* %13, null
  %15 = bitcast i8* %5 to %"class.blink::mojom::IDBReturnValue"*
  br i1 %14, label %16, label %18

16:                                               ; preds = %2
  %17 = bitcast i8* %5 to i64*
  store i64 %11, i64* %17, align 8
  br label %25

18:                                               ; preds = %2
  tail call void @_ZN5blink5mojom8IDBValueD1Ev(%"class.blink::mojom::IDBValue"* nonnull %13) #8
  %19 = bitcast %"class.blink::mojom::IDBValue"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #7
  %20 = bitcast i8* %5 to i64*
  %21 = load %"class.blink::mojom::IDBValue"*, %"class.blink::mojom::IDBValue"** %12, align 8
  store i64 %11, i64* %20, align 8
  %22 = icmp eq %"class.blink::mojom::IDBValue"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  tail call void @_ZN5blink5mojom8IDBValueD1Ev(%"class.blink::mojom::IDBValue"* nonnull %21) #8
  %24 = bitcast %"class.blink::mojom::IDBValue"* %21 to i8*
  tail call void @_ZdlPv(i8* %24) #7
  br label %25

25:                                               ; preds = %16, %18, %23
  %26 = getelementptr inbounds %"struct.content::IndexedDBReturnValue", %"struct.content::IndexedDBReturnValue"* %1, i64 0, i32 1
  %27 = tail call zeroext i1 @_ZNK5blink12IndexedDBKey7IsValidEv(%"class.blink::IndexedDBKey"* %26) #8
  br i1 %27, label %28, label %36

28:                                               ; preds = %25
  %29 = getelementptr inbounds i8, i8* %5, i64 8
  %30 = bitcast i8* %29 to %"class.blink::IndexedDBKey"*
  %31 = tail call dereferenceable(96) %"class.blink::IndexedDBKey"* @_ZN5blink12IndexedDBKeyaSERKS0_(%"class.blink::IndexedDBKey"* %30, %"class.blink::IndexedDBKey"* dereferenceable(96) %26) #8
  %32 = getelementptr inbounds %"struct.content::IndexedDBReturnValue", %"struct.content::IndexedDBReturnValue"* %1, i64 0, i32 2
  %33 = getelementptr inbounds i8, i8* %5, i64 104
  %34 = bitcast i8* %33 to %"class.blink::IndexedDBKeyPath"*
  %35 = tail call dereferenceable(56) %"class.blink::IndexedDBKeyPath"* @_ZN5blink16IndexedDBKeyPathaSERKS0_(%"class.blink::IndexedDBKeyPath"* %34, %"class.blink::IndexedDBKeyPath"* dereferenceable(56) %32) #8
  br label %36

36:                                               ; preds = %28, %25
  %37 = bitcast %"struct.content::IndexedDBReturnValue"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.content::IndexedDBReturnValue", %"struct.content::IndexedDBReturnValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  br label %46

44:                                               ; preds = %36
  %45 = zext i8 %39 to i64
  br label %46

46:                                               ; preds = %41, %44
  %47 = phi i64 [ %43, %41 ], [ %45, %44 ]
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %218, label %49

49:                                               ; preds = %46
  br i1 %40, label %50, label %56

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"struct.content::IndexedDBReturnValue", %"struct.content::IndexedDBReturnValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.std::__1::vector.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #8
  %54 = getelementptr inbounds %"struct.content::IndexedDBReturnValue", %"struct.content::IndexedDBReturnValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  br label %60

56:                                               ; preds = %49
  %57 = bitcast %"struct.content::IndexedDBReturnValue"* %1 to i8*
  %58 = bitcast %"class.std::__1::vector.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #8
  %59 = zext i8 %39 to i64
  br label %60

60:                                               ; preds = %50, %56
  %61 = phi i8* [ %53, %50 ], [ %58, %56 ]
  %62 = phi i8* [ %52, %50 ], [ %57, %56 ]
  %63 = phi i64 [ %55, %50 ], [ %59, %56 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 24, i1 false) #8
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %178, label %66

66:                                               ; preds = %60
  %67 = icmp slt i64 %63, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = bitcast %"class.std::__1::vector.13"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %69) #9
  unreachable

70:                                               ; preds = %66
  %71 = tail call i8* @_Znwm(i64 %63) #7
  %72 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %3, i64 0, i32 0, i32 1
  store i8* %71, i8** %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %3, i64 0, i32 0, i32 0
  store i8* %71, i8** %73, align 8
  %74 = getelementptr inbounds i8, i8* %71, i64 %63
  %75 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %74, i8** %75, align 8
  %76 = bitcast i8** %72 to i64*
  %77 = icmp ult i64 %63, 32
  br i1 %77, label %164, label %78

78:                                               ; preds = %70
  %79 = getelementptr i8, i8* %71, i64 %63
  %80 = icmp ult i8* %71, %64
  %81 = icmp ult i8* %62, %79
  %82 = and i1 %80, %81
  br i1 %82, label %164, label %83

83:                                               ; preds = %78
  %84 = and i64 %63, -32
  %85 = getelementptr i8, i8* %71, i64 %84
  %86 = getelementptr i8, i8* %62, i64 %84
  %87 = add i64 %84, -32
  %88 = lshr exact i64 %87, 5
  %89 = add nuw nsw i64 %88, 1
  %90 = and i64 %89, 3
  %91 = icmp ult i64 %87, 96
  br i1 %91, label %143, label %92

92:                                               ; preds = %83
  %93 = sub nsw i64 %89, %90
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi i64 [ 0, %92 ], [ %140, %94 ]
  %96 = phi i64 [ %93, %92 ], [ %141, %94 ]
  %97 = getelementptr i8, i8* %71, i64 %95
  %98 = getelementptr i8, i8* %62, i64 %95
  %99 = bitcast i8* %98 to <16 x i8>*
  %100 = load <16 x i8>, <16 x i8>* %99, align 1, !alias.scope !8
  %101 = getelementptr i8, i8* %98, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !alias.scope !8
  %104 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %100, <16 x i8>* %104, align 1, !alias.scope !11, !noalias !8
  %105 = getelementptr i8, i8* %97, i64 16
  %106 = bitcast i8* %105 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %106, align 1, !alias.scope !11, !noalias !8
  %107 = or i64 %95, 32
  %108 = getelementptr i8, i8* %71, i64 %107
  %109 = getelementptr i8, i8* %62, i64 %107
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !8
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !8
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !11, !noalias !8
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !11, !noalias !8
  %118 = or i64 %95, 64
  %119 = getelementptr i8, i8* %71, i64 %118
  %120 = getelementptr i8, i8* %62, i64 %118
  %121 = bitcast i8* %120 to <16 x i8>*
  %122 = load <16 x i8>, <16 x i8>* %121, align 1, !alias.scope !8
  %123 = getelementptr i8, i8* %120, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  %125 = load <16 x i8>, <16 x i8>* %124, align 1, !alias.scope !8
  %126 = bitcast i8* %119 to <16 x i8>*
  store <16 x i8> %122, <16 x i8>* %126, align 1, !alias.scope !11, !noalias !8
  %127 = getelementptr i8, i8* %119, i64 16
  %128 = bitcast i8* %127 to <16 x i8>*
  store <16 x i8> %125, <16 x i8>* %128, align 1, !alias.scope !11, !noalias !8
  %129 = or i64 %95, 96
  %130 = getelementptr i8, i8* %71, i64 %129
  %131 = getelementptr i8, i8* %62, i64 %129
  %132 = bitcast i8* %131 to <16 x i8>*
  %133 = load <16 x i8>, <16 x i8>* %132, align 1, !alias.scope !8
  %134 = getelementptr i8, i8* %131, i64 16
  %135 = bitcast i8* %134 to <16 x i8>*
  %136 = load <16 x i8>, <16 x i8>* %135, align 1, !alias.scope !8
  %137 = bitcast i8* %130 to <16 x i8>*
  store <16 x i8> %133, <16 x i8>* %137, align 1, !alias.scope !11, !noalias !8
  %138 = getelementptr i8, i8* %130, i64 16
  %139 = bitcast i8* %138 to <16 x i8>*
  store <16 x i8> %136, <16 x i8>* %139, align 1, !alias.scope !11, !noalias !8
  %140 = add i64 %95, 128
  %141 = add i64 %96, -4
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %94, !llvm.loop !13

143:                                              ; preds = %94, %83
  %144 = phi i64 [ 0, %83 ], [ %140, %94 ]
  %145 = icmp eq i64 %90, 0
  br i1 %145, label %162, label %146

146:                                              ; preds = %143, %146
  %147 = phi i64 [ %159, %146 ], [ %144, %143 ]
  %148 = phi i64 [ %160, %146 ], [ %90, %143 ]
  %149 = getelementptr i8, i8* %71, i64 %147
  %150 = getelementptr i8, i8* %62, i64 %147
  %151 = bitcast i8* %150 to <16 x i8>*
  %152 = load <16 x i8>, <16 x i8>* %151, align 1, !alias.scope !8
  %153 = getelementptr i8, i8* %150, i64 16
  %154 = bitcast i8* %153 to <16 x i8>*
  %155 = load <16 x i8>, <16 x i8>* %154, align 1, !alias.scope !8
  %156 = bitcast i8* %149 to <16 x i8>*
  store <16 x i8> %152, <16 x i8>* %156, align 1, !alias.scope !11, !noalias !8
  %157 = getelementptr i8, i8* %149, i64 16
  %158 = bitcast i8* %157 to <16 x i8>*
  store <16 x i8> %155, <16 x i8>* %158, align 1, !alias.scope !11, !noalias !8
  %159 = add i64 %147, 32
  %160 = add i64 %148, -1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %146, !llvm.loop !15

162:                                              ; preds = %146, %143
  %163 = icmp eq i64 %63, %84
  br i1 %163, label %174, label %164

164:                                              ; preds = %162, %78, %70
  %165 = phi i8* [ %71, %78 ], [ %71, %70 ], [ %85, %162 ]
  %166 = phi i8* [ %62, %78 ], [ %62, %70 ], [ %86, %162 ]
  br label %167

167:                                              ; preds = %164, %167
  %168 = phi i8* [ %172, %167 ], [ %165, %164 ]
  %169 = phi i8* [ %171, %167 ], [ %166, %164 ]
  %170 = load i8, i8* %169, align 1
  store i8 %170, i8* %168, align 1
  %171 = getelementptr inbounds i8, i8* %169, i64 1
  %172 = getelementptr inbounds i8, i8* %168, i64 1
  %173 = icmp eq i8* %171, %64
  br i1 %173, label %174, label %167, !llvm.loop !17

174:                                              ; preds = %167, %162
  %175 = phi i8* [ %85, %162 ], [ %172, %167 ]
  %176 = load %"class.blink::mojom::IDBReturnValue"*, %"class.blink::mojom::IDBReturnValue"** %4, align 8
  %177 = ptrtoint i8* %175 to i64
  store i64 %177, i64* %76, align 8
  br label %178

178:                                              ; preds = %60, %174
  %179 = phi %"class.blink::mojom::IDBReturnValue"* [ %15, %60 ], [ %176, %174 ]
  %180 = getelementptr inbounds %"class.blink::mojom::IDBReturnValue", %"class.blink::mojom::IDBReturnValue"* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"class.blink::mojom::IDBValue"*, %"class.blink::mojom::IDBValue"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::mojom::IDBValue", %"class.blink::mojom::IDBValue"* %181, i64 0, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = icmp eq i8* %183, null
  br i1 %184, label %190, label %185

185:                                              ; preds = %178
  %186 = ptrtoint i8* %183 to i64
  %187 = getelementptr inbounds %"class.blink::mojom::IDBValue", %"class.blink::mojom::IDBValue"* %181, i64 0, i32 0, i32 0, i32 1
  %188 = bitcast i8** %187 to i64*
  store i64 %186, i64* %188, align 8
  tail call void @_ZdlPv(i8* nonnull %183) #7
  %189 = bitcast %"class.blink::mojom::IDBValue"* %181 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 24, i1 false) #8
  br label %190

190:                                              ; preds = %178, %185
  %191 = bitcast %"class.std::__1::vector.13"* %3 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.blink::mojom::IDBValue"* %181 to i64*
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %3, i64 0, i32 0, i32 1
  %195 = bitcast i8** %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %"class.blink::mojom::IDBValue", %"class.blink::mojom::IDBValue"* %181, i64 0, i32 0, i32 0, i32 1
  %198 = bitcast i8** %197 to i64*
  store i64 %196, i64* %198, align 8
  %199 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %200 = bitcast i8** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds %"class.blink::mojom::IDBValue", %"class.blink::mojom::IDBValue"* %181, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %203 = bitcast i8** %202 to i64*
  store i64 %201, i64* %203, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #8
  %204 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %3, i64 0, i32 0, i32 0
  %205 = load i8*, i8** %204, align 8
  %206 = icmp eq i8* %205, null
  br i1 %206, label %209, label %207

207:                                              ; preds = %190
  %208 = ptrtoint i8* %205 to i64
  store i64 %208, i64* %195, align 8
  tail call void @_ZdlPv(i8* nonnull %205) #7
  br label %209

209:                                              ; preds = %190, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #8
  %210 = load i8, i8* %38, align 1
  %211 = icmp slt i8 %210, 0
  br i1 %211, label %212, label %216

212:                                              ; preds = %209
  %213 = getelementptr inbounds %"struct.content::IndexedDBReturnValue", %"struct.content::IndexedDBReturnValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load i8*, i8** %213, align 8
  store i8 0, i8* %214, align 1
  %215 = getelementptr inbounds %"struct.content::IndexedDBReturnValue", %"struct.content::IndexedDBReturnValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %215, align 8
  br label %218

216:                                              ; preds = %209
  %217 = bitcast %"struct.content::IndexedDBReturnValue"* %1 to i8*
  store i8 0, i8* %217, align 1
  store i8 0, i8* %38, align 1
  br label %218

218:                                              ; preds = %216, %212, %46
  %219 = phi %"class.blink::mojom::IDBReturnValue"* [ %179, %216 ], [ %179, %212 ], [ %15, %46 ]
  %220 = getelementptr inbounds %"struct.content::IndexedDBReturnValue", %"struct.content::IndexedDBReturnValue"* %1, i64 0, i32 0, i32 1
  %221 = getelementptr inbounds %"class.blink::mojom::IDBReturnValue", %"class.blink::mojom::IDBReturnValue"* %219, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load %"class.blink::mojom::IDBValue"*, %"class.blink::mojom::IDBValue"** %221, align 8
  %223 = getelementptr inbounds %"class.blink::mojom::IDBValue", %"class.blink::mojom::IDBValue"* %222, i64 0, i32 1
  tail call void @_ZN7content23IndexedDBExternalObject13ConvertToMojoERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEPNS2_IN4mojo9StructPtrIN5blink5mojom17IDBExternalObjectEEENS3_ISD_EEEE(%"class.std::__1::vector"* dereferenceable(24) %220, %"class.std::__1::vector.47"* %223) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK5blink12IndexedDBKey7IsValidEv(%"class.blink::IndexedDBKey"*) local_unnamed_addr #2

declare dereferenceable(96) %"class.blink::IndexedDBKey"* @_ZN5blink12IndexedDBKeyaSERKS0_(%"class.blink::IndexedDBKey"*, %"class.blink::IndexedDBKey"* dereferenceable(96)) local_unnamed_addr #2

declare dereferenceable(56) %"class.blink::IndexedDBKeyPath"* @_ZN5blink16IndexedDBKeyPathaSERKS0_(%"class.blink::IndexedDBKeyPath"*, %"class.blink::IndexedDBKeyPath"* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN7content23IndexedDBExternalObject13ConvertToMojoERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEPNS2_IN4mojo9StructPtrIN5blink5mojom17IDBExternalObjectEEENS3_ISD_EEEE(%"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector.47"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom8IDBValueD1Ev(%"class.blink::mojom::IDBValue"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN5blink5mojom14IDBReturnValueC1Ev(%"class.blink::mojom::IDBReturnValue"*) unnamed_addr #2

declare void @_ZN5blink5mojom8IDBValueC1Ev(%"class.blink::mojom::IDBValue"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink5mojom14IDBReturnValue3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink5mojom14IDBReturnValue3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink5mojom8IDBValue3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink5mojom8IDBValue3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !14}
