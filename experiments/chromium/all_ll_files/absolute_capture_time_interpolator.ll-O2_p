; ModuleID = '../../third_party/webrtc/modules/rtp_rtcp/source/absolute_capture_time_interpolator.cc'
source_filename = "../../third_party/webrtc/modules/rtp_rtcp/source/absolute_capture_time_interpolator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon = type { i64 }
%"class.webrtc::AbsoluteCaptureTimeInterpolator" = type { %"class.webrtc::Clock"*, %"class.webrtc::Mutex", %"class.webrtc::Timestamp", i32, i32, i32, i64, %"class.absl::optional" }
%"class.webrtc::Mutex" = type { %"class.webrtc::MutexImpl" }
%"class.webrtc::MutexImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase.0" }
%"class.webrtc::rtc_units_impl::UnitBase.0" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.webrtc::Clock" = type { i32 (...)** }
%union.pthread_mutexattr_t = type { i32 }
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { %"struct.webrtc::AbsoluteCaptureTime" }
%"struct.webrtc::AbsoluteCaptureTime" = type { i64, %"class.absl::optional" }

@_ZN6webrtc31AbsoluteCaptureTimeInterpolator25kInterpolationMaxIntervalE = hidden local_unnamed_addr constant { i64 } { i64 5000000 }, align 8
@__const._ZN6webrtc31AbsoluteCaptureTimeInterpolator15OnReceivePacketEjjjRKN4absl8optionalINS_19AbsoluteCaptureTimeEEE.extension = private unnamed_addr constant { i64, { { { { i8, [7 x i8], %union.anon } } } } } { i64 -6148914691236517206, { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { i64 -6148914691236517206 } } } } } }, align 8

@_ZN6webrtc31AbsoluteCaptureTimeInterpolatorC1EPNS_5ClockE = hidden unnamed_addr alias void (%"class.webrtc::AbsoluteCaptureTimeInterpolator"*, %"class.webrtc::Clock"*), void (%"class.webrtc::AbsoluteCaptureTimeInterpolator"*, %"class.webrtc::Clock"*)* @_ZN6webrtc31AbsoluteCaptureTimeInterpolatorC2EPNS_5ClockE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc31AbsoluteCaptureTimeInterpolatorC2EPNS_5ClockE(%"class.webrtc::AbsoluteCaptureTimeInterpolator"*, %"class.webrtc::Clock"*) unnamed_addr #0 align 2 {
  %3 = alloca %union.pthread_mutexattr_t, align 4
  %4 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %0, i64 0, i32 0
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %4, align 8
  %5 = bitcast %union.pthread_mutexattr_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #7
  %6 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %3, i64 0, i32 0
  store i32 -1431655766, i32* %6, align 4
  %7 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %3) #7
  %8 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %8, %union.pthread_mutexattr_t* nonnull %3) #7
  %10 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #7
  %11 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 -9223372036854775808, i64* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6webrtc31AbsoluteCaptureTimeInterpolator9GetSourceEjN3rtc9ArrayViewIKjLln4711EEE(i32, i32*, i64) local_unnamed_addr #2 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* %1, align 4
  br label %7

7:                                                ; preds = %3, %5
  %8 = phi i32 [ %6, %5 ], [ %0, %3 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc31AbsoluteCaptureTimeInterpolator15OnReceivePacketEjjjRKN4absl8optionalINS_19AbsoluteCaptureTimeEEE(%"class.absl::optional.1"* noalias nocapture sret, %"class.webrtc::AbsoluteCaptureTimeInterpolator"*, i32, i32, i32, %"class.absl::optional.1"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %7 = alloca [15 x i8], align 1
  %8 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 0
  %9 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %8, align 8
  %10 = bitcast %"class.webrtc::Clock"* %9 to i64 (%"class.webrtc::Clock"*)***
  %11 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %11, i64 2
  %13 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %12, align 8
  %14 = tail call i64 %13(%"class.webrtc::Clock"* %9) #7
  %15 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 1, i32 0, i32 0
  %16 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %15) #7
  %17 = getelementptr inbounds [15 x i8], [15 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %17)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* align 1 getelementptr inbounds ({ i64, { { { { i8, [7 x i8], %union.anon } } } } }, { i64, { { { { i8, [7 x i8], %union.anon } } } } }* @__const._ZN6webrtc31AbsoluteCaptureTimeInterpolator15OnReceivePacketEjjjRKN4absl8optionalINS_19AbsoluteCaptureTimeEEE.extension, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i64 0), i64 15, i1 false)
  %18 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %62

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, -9223372036854775808
  %25 = icmp eq i64 %14, 9223372036854775807
  %26 = or i1 %25, %24
  br i1 %26, label %44, label %27

27:                                               ; preds = %21
  %28 = icmp ne i64 %14, -9223372036854775808
  %29 = icmp ne i64 %23, 9223372036854775807
  %30 = sub nsw i64 %14, %23
  %31 = and i1 %28, %29
  %32 = icmp sgt i64 %30, 5000000
  %33 = and i1 %31, %32
  br i1 %33, label %44, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, %2
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 5
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, %4
  %42 = icmp ne i32 %4, 0
  %43 = and i1 %42, %41
  br i1 %43, label %48, label %44

44:                                               ; preds = %21, %27, %34, %38
  store i64 -9223372036854775808, i64* %22, align 8
  %45 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %47 = bitcast %union.anon.5* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #7
  br label %95

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 4
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 6
  %52 = load i64, i64* %51, align 8
  %53 = sub i32 %3, %50
  %54 = zext i32 %53 to i64
  %55 = shl nuw i64 %54, 32
  %56 = zext i32 %4 to i64
  %57 = sdiv i64 %55, %56
  %58 = add i64 %57, %52
  %59 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %60 = bitcast %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 81
  br label %86

62:                                               ; preds = %6
  %63 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 3
  store i32 %2, i32* %63, align 8
  %64 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 4
  store i32 %3, i32* %64, align 4
  %65 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 5
  store i32 %4, i32* %65, align 8
  %66 = load i8, i8* %18, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %69, !prof !3

68:                                               ; preds = %62
  tail call void @llvm.trap() #7
  unreachable

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 6
  store i64 %71, i64* %72, align 8
  %73 = load i8, i8* %18, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %76, !prof !3

75:                                               ; preds = %69
  tail call void @llvm.trap() #7
  unreachable

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false)
  %79 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %1, i64 0, i32 2, i32 0, i32 0
  store i64 %14, i64* %79, align 8
  %80 = load i8, i8* %18, align 8, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %76
  tail call void @llvm.trap() #7
  unreachable

83:                                               ; preds = %76
  %84 = load i64, i64* %70, align 8
  %85 = getelementptr inbounds i8, i8* %18, i64 17
  br label %86

86:                                               ; preds = %83, %48
  %87 = phi i8* [ %85, %83 ], [ %61, %48 ]
  %88 = phi i8* [ %78, %83 ], [ %59, %48 ]
  %89 = phi i64 [ %84, %83 ], [ %58, %48 ]
  %90 = load i8, i8* %88, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* align 1 %87, i64 15, i1 false)
  %91 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %91, align 8
  %92 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %89, i64* %92, align 8
  %93 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %90, i8* %93, align 8
  %94 = getelementptr inbounds i8, i8* %91, i64 17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %94, i8* nonnull align 1 %17, i64 15, i1 false)
  br label %95

95:                                               ; preds = %86, %44
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %17)
  %96 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %15) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc31AbsoluteCaptureTimeInterpolator26ShouldInterpolateExtensionENS_9TimestampEjjj(%"class.webrtc::AbsoluteCaptureTimeInterpolator"* nocapture readonly, i64, i32, i32, i32) local_unnamed_addr #3 align 2 {
  %6 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, -9223372036854775808
  %9 = icmp eq i64 %1, 9223372036854775807
  %10 = or i1 %8, %9
  br i1 %10, label %28, label %11

11:                                               ; preds = %5
  %12 = icmp ne i64 %1, -9223372036854775808
  %13 = icmp ne i64 %7, 9223372036854775807
  %14 = sub nsw i64 %1, %7
  %15 = and i1 %12, %13
  %16 = icmp sgt i64 %14, 5000000
  %17 = and i1 %15, %16
  br i1 %17, label %28, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, %2
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %0, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, %4
  %26 = icmp ne i32 %4, 0
  %27 = and i1 %25, %26
  ret i1 %27

28:                                               ; preds = %11, %18, %5
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN6webrtc31AbsoluteCaptureTimeInterpolator35InterpolateAbsoluteCaptureTimestampEjjjm(i32, i32, i32, i64) local_unnamed_addr #4 align 2 {
  %5 = sub i32 %0, %2
  %6 = zext i32 %5 to i64
  %7 = shl nuw i64 %6, 32
  %8 = zext i32 %1 to i64
  %9 = sdiv i64 %7, %8
  %10 = add i64 %9, %3
  ret i64 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
