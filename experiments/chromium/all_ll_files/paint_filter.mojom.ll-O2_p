; ModuleID = 'gen/services/viz/public/mojom/compositing/paint_filter.mojom.cc'
source_filename = "gen/services/viz/public/mojom/compositing/paint_filter.mojom.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::PaintFilter" = type { %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedArray" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector.12", %"class.std::__1::vector.20", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.mojo::ScopedHandleBase.14"*, %"class.mojo::ScopedHandleBase.14"*, %"class.std::__1::__compressed_pair.15" }
%"class.mojo::ScopedHandleBase.14" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.mojo::ScopedHandleBase.14"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.22" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.31, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.33", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.30", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.31 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.32" }>
%"class.base::RefCountedThreadSafe.32" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i32 }
%"class.viz::mojom::internal::PaintFilter_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.viz::mojom::PaintFilter"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.viz::mojom::PaintFilterDataView" = type { %"class.viz::mojom::internal::PaintFilter_Data"*, %"class.mojo::Message"* }

$_ZN4mojo8internal11DeserializeINS_13ArrayDataViewIhEERPNS0_10Array_DataIhEEN4absl8optionalINSt3__16vectorIhNSA_9allocatorIhEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_ = comdat any

@.str = private unnamed_addr constant [5 x i8] c"data\00", align 1

@_ZN3viz5mojom11PaintFilterC1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::PaintFilter"*), void (%"class.viz::mojom::PaintFilter"*)* @_ZN3viz5mojom11PaintFilterC2Ev
@_ZN3viz5mojom11PaintFilterC1EN4absl8optionalINSt3__16vectorIhNS4_9allocatorIhEEEEEE = hidden unnamed_addr alias void (%"class.viz::mojom::PaintFilter"*, %"class.absl::optional"*), void (%"class.viz::mojom::PaintFilter"*, %"class.absl::optional"*)* @_ZN3viz5mojom11PaintFilterC2EN4absl8optionalINSt3__16vectorIhNS4_9allocatorIhEEEEEE
@_ZN3viz5mojom11PaintFilterD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::PaintFilter"*), void (%"class.viz::mojom::PaintFilter"*)* @_ZN3viz5mojom11PaintFilterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom11PaintFilterC2Ev(%"class.viz::mojom::PaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %union.anon* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom11PaintFilterC2EN4absl8optionalINSt3__16vectorIhNS4_9allocatorIhEEEEEE(%"class.viz::mojom::PaintFilter"* nocapture, %"class.absl::optional"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false) #5
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #5
  %11 = bitcast %"class.std::__1::vector"* %8 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast i8** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #5
  store i8 1, i8* %3, align 8
  br label %25

25:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom11PaintFilterD2Ev(%"class.viz::mojom::PaintFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = ptrtoint i8* %7 to i64
  %11 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  store i64 %10, i64* %12, align 8
  tail call void @_ZdlPv(i8* nonnull %7) #6
  br label %13

13:                                               ; preds = %9, %5
  store i8 0, i8* %2, align 8
  br label %14

14:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz5mojom11PaintFilter14WriteIntoTraceEN8perfetto11TracedValueE(%"class.viz::mojom::PaintFilter"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedArray", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedDictionary", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = bitcast %"class.perfetto::TracedDictionary"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #5
  %11 = bitcast %"class.perfetto::TracedDictionary"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %8, %"class.perfetto::TracedValue"* %1) #5
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %9, %"class.perfetto::TracedDictionary"* nonnull %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #5
  %12 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  %13 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %12, i64 16, i1 false) #5
  %14 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"* nonnull %7, i8* null) #5
  br label %36

18:                                               ; preds = %2
  %19 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %13, i64 16, i1 false) #5
  %20 = bitcast %"class.perfetto::TracedArray"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false) #5
  call void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* nonnull sret %5, %"class.perfetto::TracedValue"* nonnull %6) #5
  %21 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %22, %24
  br i1 %25, label %35, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  %28 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  br label %29

29:                                               ; preds = %29, %26
  %30 = phi i8* [ %22, %26 ], [ %33, %29 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #5
  call void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::TracedArray"* nonnull %5) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %27, i64 16, i1 false) #5
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %3, i64 %32) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #5
  %33 = getelementptr inbounds i8, i8* %30, i64 1
  %34 = icmp eq i8* %33, %24
  br i1 %34, label %35, label %29

35:                                               ; preds = %29, %18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #5
  br label %36

36:                                               ; preds = %35, %17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz5mojom11PaintFilter8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3viz5mojom8internal16PaintFilter_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #5
  ret i1 %3
}

declare zeroext i1 @_ZN3viz5mojom8internal16PaintFilter_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom19PaintFilterDataViewENS_9StructPtrINS2_11PaintFilterEEEE4ReadES3_PS6_(%"class.viz::mojom::internal::PaintFilter_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::internal::Array_Data"*, align 8
  %5 = alloca %"class.viz::mojom::PaintFilterDataView", align 8
  %6 = getelementptr inbounds %"class.viz::mojom::PaintFilterDataView", %"class.viz::mojom::PaintFilterDataView"* %5, i64 0, i32 0
  store %"class.viz::mojom::internal::PaintFilter_Data"* %0, %"class.viz::mojom::internal::PaintFilter_Data"** %6, align 8
  %7 = getelementptr inbounds %"class.viz::mojom::PaintFilterDataView", %"class.viz::mojom::PaintFilterDataView"* %5, i64 0, i32 1
  store %"class.mojo::Message"* %1, %"class.mojo::Message"** %7, align 8
  %8 = tail call i8* @_Znwm(i64 32) #6, !noalias !3
  store i8 0, i8* %8, align 8, !noalias !3
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #5, !noalias !3
  %10 = ptrtoint i8* %8 to i64
  %11 = bitcast i8* %8 to %"class.absl::optional"*
  %12 = bitcast %"class.mojo::internal::Array_Data"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #5
  %13 = getelementptr inbounds %"class.viz::mojom::internal::PaintFilter_Data", %"class.viz::mojom::internal::PaintFilter_Data"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %13, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = bitcast %"struct.mojo::internal::Pointer"* %13 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %15
  %19 = bitcast i8* %18 to %"class.mojo::internal::Array_Data"*
  %20 = select i1 %16, %"class.mojo::internal::Array_Data"* null, %"class.mojo::internal::Array_Data"* %19
  store %"class.mojo::internal::Array_Data"* %20, %"class.mojo::internal::Array_Data"** %4, align 8
  %21 = call zeroext i1 @_ZN4mojo8internal11DeserializeINS_13ArrayDataViewIhEERPNS0_10Array_DataIhEEN4absl8optionalINSt3__16vectorIhNSA_9allocatorIhEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data"** nonnull dereferenceable(8) %4, %"class.absl::optional"* nonnull %11, %"class.mojo::Message"** dereferenceable(8) %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #5
  %22 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.viz::mojom::PaintFilter"*, %"class.viz::mojom::PaintFilter"** %22, align 8
  store %"class.viz::mojom::PaintFilter"* null, %"class.viz::mojom::PaintFilter"** %22, align 8
  %24 = icmp eq %"class.viz::mojom::PaintFilter"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %3
  %26 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %10, i64* %26, align 8
  br label %56

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %39, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = ptrtoint i8* %33 to i64
  %37 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %38 = bitcast i8** %37 to i64*
  store i64 %36, i64* %38, align 8
  call void @_ZdlPv(i8* nonnull %33) #6
  br label %39

39:                                               ; preds = %27, %31, %35
  call void @_ZdlPv(i8* %28) #6
  %40 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %41 = load %"class.viz::mojom::PaintFilter"*, %"class.viz::mojom::PaintFilter"** %22, align 8
  store i64 %10, i64* %40, align 8
  %42 = icmp eq %"class.viz::mojom::PaintFilter"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i8* %49 to i64
  %53 = getelementptr inbounds %"class.viz::mojom::PaintFilter", %"class.viz::mojom::PaintFilter"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %54 = bitcast i8** %53 to i64*
  store i64 %52, i64* %54, align 8
  call void @_ZdlPv(i8* nonnull %49) #6
  br label %55

55:                                               ; preds = %51, %47, %43
  call void @_ZdlPv(i8* %44) #6
  br label %56

56:                                               ; preds = %25, %39, %55
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"*, i8*) local_unnamed_addr #2

declare void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedArray"*) local_unnamed_addr #2

declare void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal11DeserializeINS_13ArrayDataViewIhEERPNS0_10Array_DataIhEEN4absl8optionalINSt3__16vectorIhNSA_9allocatorIhEEEEEEJRPNS_7MessageEELPv0EEEbOT0_PT1_DpOT2_(%"class.mojo::internal::Array_Data"** dereferenceable(8), %"class.absl::optional"*, %"class.mojo::Message"** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = load %"class.mojo::internal::Array_Data"*, %"class.mojo::internal::Array_Data"** %0, align 8
  %5 = icmp eq %"class.mojo::internal::Array_Data"* %4, null
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %5, label %9, label %19

9:                                                ; preds = %3
  br i1 %8, label %87, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i8* %12 to i64
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  tail call void @_ZdlPv(i8* nonnull %12) #6
  br label %18

18:                                               ; preds = %14, %10
  store i8 0, i8* %6, align 8
  br label %87

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %8, label %21, label %31

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #5
  store i8 1, i8* %6, align 8
  %23 = load %"class.mojo::internal::Array_Data"*, %"class.mojo::internal::Array_Data"** %0, align 8
  %24 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = icmp eq %"class.mojo::internal::Array_Data"* %23, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %21
  %27 = bitcast %"class.std::__1::vector"* %24 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %30 = bitcast i8** %29 to i64*
  store i64 %28, i64* %30, align 8
  br label %87

31:                                               ; preds = %19, %21
  %32 = phi %"class.std::__1::vector"* [ %24, %21 ], [ %20, %19 ]
  %33 = phi %"class.mojo::internal::Array_Data"* [ %23, %21 ], [ %4, %19 ]
  %34 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %33, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector"* %32 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, %36
  br i1 %43, label %62, label %44

44:                                               ; preds = %31
  %45 = icmp eq i32 %35, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %44
  %47 = tail call i8* @_Znwm(i64 %36) #6
  %48 = getelementptr inbounds i8, i8* %47, i64 %36
  %49 = ptrtoint i8* %47 to i64
  %50 = sub i64 %36, %49
  %51 = getelementptr i8, i8* %47, i64 %50
  %52 = ptrtoint i8* %51 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %47, i8 0, i64 %52, i1 false) #5
  %53 = ptrtoint i8* %48 to i64
  br label %54

54:                                               ; preds = %44, %46
  %55 = phi i64 [ %53, %46 ], [ 0, %44 ]
  %56 = phi i64 [ %49, %46 ], [ 0, %44 ]
  store i64 %56, i64* %40, align 8
  store i64 %55, i64* %38, align 8
  %57 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast i8** %57 to i64*
  store i64 %55, i64* %58, align 8
  %59 = icmp eq i64 %41, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %41 to i8*
  tail call void @_ZdlPv(i8* nonnull %61) #6
  br label %62

62:                                               ; preds = %31, %60, %54
  %63 = load i32, i32* %34, align 1
  %64 = zext i32 %63 to i64
  %65 = icmp eq i32 %63, 0
  br i1 %65, label %87, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = icmp eq i8* %68, null
  %70 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %33, i64 1
  %71 = bitcast %"class.mojo::internal::Array_Data"* %70 to i8*
  br i1 %69, label %72, label %76

72:                                               ; preds = %66
  %73 = load i8, i8* %71, align 1
  store i8 %73, i8* null, align 536870912
  %74 = load i32, i32* %34, align 1
  %75 = icmp ugt i32 %74, 1
  br i1 %75, label %77, label %87

76:                                               ; preds = %66
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* align 1 %71, i64 %64, i1 false) #5
  br label %87

77:                                               ; preds = %72, %77
  %78 = phi i64 [ %82, %77 ], [ 1, %72 ]
  %79 = load i8*, i8** %67, align 8
  %80 = getelementptr inbounds i8, i8* %71, i64 %78
  %81 = load i8, i8* %80, align 1
  %82 = add nuw nsw i64 %78, 1
  %83 = getelementptr inbounds i8, i8* %79, i64 %78
  store i8 %81, i8* %83, align 1
  %84 = load i32, i32* %34, align 1
  %85 = zext i32 %84 to i64
  %86 = icmp ult i64 %82, %85
  br i1 %86, label %77, label %87

87:                                               ; preds = %77, %76, %72, %62, %26, %18, %9
  ret i1 true
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3viz5mojom11PaintFilter3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZN3viz5mojom11PaintFilter3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
