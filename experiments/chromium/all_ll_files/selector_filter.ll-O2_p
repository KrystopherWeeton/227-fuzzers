; ModuleID = '../../third_party/blink/renderer/core/css/selector_filter.cc'
source_filename = "../../third_party/blink/renderer/core/css/selector_filter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.117" }
%"struct.std::__1::atomic.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__cxx_atomic_impl.120" }
%"struct.std::__1::__cxx_atomic_impl.120" = type { %"struct.std::__1::__cxx_atomic_base_impl.121" }
%"struct.std::__1::__cxx_atomic_base_impl.121" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.404", i32, [4 x i8], %"class.std::__1::unique_ptr.540", %"class.std::__1::unique_ptr.540", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.551", %"class.std::__1::unique_ptr.557", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.569", %"class.std::__1::unique_ptr.575", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.582", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.407", %"class.std::__1::unique_ptr.413", %"class.std::__1::unique_ptr.419", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.437", %"class.std::__1::unique_ptr.448", %"class.std::__1::unique_ptr.455", %"class.std::__1::unique_ptr.455", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.483", %"class.std::__1::unique_ptr.490", %"class.std::__1::unique_ptr.497", %"class.std::__1::unique_ptr.520", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.440" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.440" = type { %"struct.std::__1::__atomic_base.441" }
%"struct.std::__1::__atomic_base.441" = type { %"struct.std::__1::__atomic_base.442" }
%"struct.std::__1::__atomic_base.442" = type { %"struct.std::__1::__cxx_atomic_impl.443" }
%"struct.std::__1::__cxx_atomic_impl.443" = type { %"struct.std::__1::__cxx_atomic_base_impl.444" }
%"struct.std::__1::__cxx_atomic_base_impl.444" = type { i64 }
%"class.std::__1::unique_ptr.448" = type { %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"class.blink::Worklist.451"* }
%"class.blink::Worklist.451" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.440" }
%"class.std::__1::unique_ptr.455" = type { %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"class.blink::Worklist.458"* }
%"class.blink::Worklist.458" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.440" }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.blink::Worklist.465"* }
%"class.blink::Worklist.465" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.440" }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.blink::Worklist.472"* }
%"class.blink::Worklist.472" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.440" }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.blink::Worklist.479"* }
%"class.blink::Worklist.479" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.440" }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.blink::Worklist.486"* }
%"class.blink::Worklist.486" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.440" }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.blink::Worklist.493"* }
%"class.blink::Worklist.493" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.440" }
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.500", %"class.std::__1::__compressed_pair.507", %"class.std::__1::__compressed_pair.512", %"class.std::__1::__compressed_pair.514", [4 x i8] }>
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502", %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { i64 }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { float }
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.523", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.532" }
%"class.WTF::Vector.532" = type { %"class.WTF::VectorBuffer.533" }
%"class.WTF::VectorBuffer.533" = type { %"class.WTF::VectorBufferBase.534" }
%"class.WTF::VectorBufferBase.534" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.548" }
%"class.WTF::VectorBuffer.548" = type { %"class.WTF::VectorBufferBase.549" }
%"class.WTF::VectorBufferBase.549" = type { %"struct.std::__1::pair.550"*, i32, i32 }
%"struct.std::__1::pair.550" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.563" }
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.451"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.458"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.465"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.472"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.479"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.586" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.575" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.581 }
%class.scoped_refptr.581 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.582" = type { %"struct.std::__1::__atomic_base.583" }
%"struct.std::__1::__atomic_base.583" = type { %"struct.std::__1::__cxx_atomic_impl.584" }
%"struct.std::__1::__cxx_atomic_impl.584" = type { %"struct.std::__1::__cxx_atomic_base_impl.585" }
%"struct.std::__1::__cxx_atomic_base_impl.585" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector", %"class.std::__1::unique_ptr" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member", %"class.WTF::Vector.26" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Element"* }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28", [16 x i8] }
%"class.WTF::VectorBufferBase.28" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.12" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.33", %"class.blink::Member.35", %"class.blink::Member.4", %"class.blink::Member.37", %"class.blink::Member.37", %"class.blink::Member.55", %"class.blink::Member.57", %"class.blink::Member.59", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.64", %"class.blink::HeapVector.66" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.113", %"class.WTF::Vector.113", i8, i32, %"class.blink::Member.124", %"class.blink::Member.126", %"class.blink::Member.128", %"class.blink::Member.130", %"class.blink::Member.132", %"class.blink::Member.134", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.142", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.148", %"class.blink::Member.150", %"class.blink::Member.72", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.153", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.48", %"class.blink::Member", %"class.blink::Member.169", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::UserActionElementSet", %"class.blink::Member.178", double, double, i64, i64, %"class.blink::HeapHashSet.180", %"class.blink::HeapHashSet.187", i16, i8, %"class.blink::Member.194", %"class.blink::Member.196", %"class.blink::Member.198", %"class.blink::Member.200", %"class.blink::TextLinkColors", %"class.blink::Member.202", i8, [7 x i8], %"class.blink::HeapHashMap.204", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member", %"class.WTF::Vector.211", %"class.blink::Member.216", %"class.blink::Member.218", i8, %"class.blink::Member", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.220", %"class.blink::HeapVector.222", %"class.std::__1::unique_ptr.230", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.236", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.248", %"class.WTF::Vector.250", i8, i8, %"class.std::__1::unique_ptr.255", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.48", %"class.blink::HeapVector.261", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.269", i8, i32, %"class.blink::Member.271", %"class.blink::Member.273", %"class.blink::Member.275", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.277", %"class.WTF::HashMap.279", %"class.blink::Member.284", %"class.blink::Member.286", %"class.blink::Member.288", %"class.blink::Member.290", %"class.blink::Member.35", %"class.blink::Member.35", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.292", i8, i32, %"class.blink::Member.299", %"class.blink::Member.301", i32, %"class.blink::Member.303", %"class.blink::Member.305", %"class.blink::Member.307", %"class.std::__1::unique_ptr.309", i64, %"class.std::__1::unique_ptr.315", i32, i32, %"class.blink::Member.321", %"class.blink::Member.323", %"class.blink::Member.325", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.327", %"class.WTF::Vector.329", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.334", %"class.blink::Member.341", %"class.std::__1::unique_ptr.343", %"class.blink::Member.349", i8, i8, %"class.WTF::String", %"class.blink::Member.351", i8, [7 x i8], %"class.blink::HeapHashMap.353", %"class.blink::HeapObserverSet", %"class.blink::Member.367", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.369", i32, i8, i8, %"class.blink::WeakMember.371", %"class.blink::Member.372" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.106" }
%"class.blink::HeapHashMap.106" = type { %"class.WTF::HashMap.109" }
%"class.WTF::HashMap.109" = type { %"class.WTF::HashTable.110" }
%"class.WTF::HashTable.110" = type <{ %"struct.WTF::KeyValuePair.112"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.112" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.113" = type { %"class.WTF::VectorBuffer.114" }
%"class.WTF::VectorBuffer.114" = type { %"class.WTF::VectorBufferBase.115" }
%"class.WTF::VectorBufferBase.115" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.116 }
%class.scoped_refptr.116 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.117" }
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.128" = type { %"class.blink::MemberBase.129" }
%"class.blink::MemberBase.129" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.136" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::KURL"* }
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.74", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.76, %"class.WTF::Vector.77", %"class.WTF::Vector.77", %"class.blink::Member.2", %"class.blink::Member.82", %"class.blink::HeapHashSet", %"class.blink::Member.35", %"class.WTF::HashSet.90", %"class.WTF::TextPosition", %"class.blink::Member.94", %"class.blink::HeapVector.96", %"class.blink::Member.103" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.76 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.77" = type { %"class.WTF::VectorBuffer.78" }
%"class.WTF::VectorBuffer.78" = type { %"class.WTF::VectorBufferBase.79" }
%"class.WTF::VectorBufferBase.79" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.84" }
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.88" }
%"class.WTF::HashTable.88" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.5" }
%"class.WTF::HashSet.90" = type { %"class.WTF::HashTable.91" }
%"class.WTF::HashTable.91" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.96" = type { %"class.WTF::Vector.99" }
%"class.WTF::Vector.99" = type { %"class.WTF::VectorBuffer.100" }
%"class.WTF::VectorBuffer.100" = type { %"class.WTF::VectorBufferBase.101" }
%"class.WTF::VectorBufferBase.101" = type { %"class.blink::Member.82"*, i32, i32 }
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.152 }
%class.scoped_refptr.152 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.153" = type { %"class.WTF::VectorBuffer.154" }
%"class.WTF::VectorBuffer.154" = type { %"class.WTF::VectorBufferBase.155" }
%"class.WTF::VectorBufferBase.155" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.156 }
%class.scoped_refptr.156 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.blink::Member.169" = type { %"class.blink::MemberBase.170" }
%"class.blink::MemberBase.170" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.171" }
%"class.blink::HeapHashMap.171" = type { %"class.WTF::HashMap.174" }
%"class.WTF::HashMap.174" = type { %"class.WTF::HashTable.175" }
%"class.WTF::HashTable.175" = type <{ %"struct.WTF::KeyValuePair.177"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.177" = type opaque
%"class.blink::Member.178" = type { %"class.blink::MemberBase.179" }
%"class.blink::MemberBase.179" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.180" = type { %"class.WTF::HashSet.183" }
%"class.WTF::HashSet.183" = type { %"class.WTF::HashTable.184" }
%"class.WTF::HashTable.184" = type <{ %"class.blink::WeakMember.186"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.186" = type opaque
%"class.blink::HeapHashSet.187" = type { %"class.WTF::HashSet.190" }
%"class.WTF::HashSet.190" = type { %"class.WTF::HashTable.191" }
%"class.WTF::HashTable.191" = type <{ %"class.blink::WeakMember.193"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.193" = type opaque
%"class.blink::Member.194" = type { %"class.blink::MemberBase.195" }
%"class.blink::MemberBase.195" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.4", %"class.blink::HeapVector.66" }
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.204" = type { %"class.WTF::HashMap.207" }
%"class.WTF::HashMap.207" = type { %"class.WTF::HashTable.208" }
%"class.WTF::HashTable.208" = type <{ %"struct.WTF::KeyValuePair.210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.210" = type opaque
%"class.WTF::Vector.211" = type { %"class.WTF::VectorBuffer.212" }
%"class.WTF::VectorBuffer.212" = type { %"class.WTF::VectorBufferBase.213" }
%"class.WTF::VectorBufferBase.213" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.216" = type { %"class.blink::MemberBase.217" }
%"class.blink::MemberBase.217" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.218" = type { %"class.blink::MemberBase.219" }
%"class.blink::MemberBase.219" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.222" = type { %"class.WTF::Vector.225" }
%"class.WTF::Vector.225" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227" }
%"class.WTF::VectorBufferBase.227" = type { %"class.blink::Member.228"*, i32, i32 }
%"class.blink::Member.228" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.236" = type { %"class.WTF::HashSet.239" }
%"class.WTF::HashSet.239" = type { %"class.WTF::HashTable.240" }
%"class.WTF::HashTable.240" = type <{ %"class.blink::WeakMember.242"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.242" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.243", i32, [4 x i8] }>
%"class.WTF::Vector.243" = type { %"class.WTF::VectorBuffer.244" }
%"class.WTF::VectorBuffer.244" = type { %"class.WTF::VectorBufferBase.245" }
%"class.WTF::VectorBufferBase.245" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.250" = type { %"class.WTF::VectorBuffer.251" }
%"class.WTF::VectorBuffer.251" = type { %"class.WTF::VectorBufferBase.252" }
%"class.WTF::VectorBufferBase.252" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.48" = type { %"class.WTF::Vector.51" }
%"class.WTF::Vector.51" = type { %"class.WTF::VectorBuffer.52" }
%"class.WTF::VectorBuffer.52" = type { %"class.WTF::VectorBufferBase.53" }
%"class.WTF::VectorBufferBase.53" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::HeapVector.261" = type { %"class.WTF::Vector.264" }
%"class.WTF::Vector.264" = type { %"class.WTF::VectorBuffer.265" }
%"class.WTF::VectorBuffer.265" = type { %"class.WTF::VectorBufferBase.266" }
%"class.WTF::VectorBufferBase.266" = type { %"class.blink::Member.267"*, i32, i32 }
%"class.blink::Member.267" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.35" }
%"class.blink::Member.269" = type { %"class.blink::MemberBase.270" }
%"class.blink::MemberBase.270" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.273" = type { %"class.blink::MemberBase.274" }
%"class.blink::MemberBase.274" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.277" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.279" = type { %"class.WTF::HashTable.280" }
%"class.WTF::HashTable.280" = type <{ %"struct.WTF::KeyValuePair.283"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.283" = type opaque
%"class.blink::Member.284" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.288" = type { %"class.blink::MemberBase.289" }
%"class.blink::MemberBase.289" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.290" = type { %"class.blink::MemberBase.291" }
%"class.blink::MemberBase.291" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.168", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.159, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.159 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.160" }>
%"class.base::RefCountedThreadSafe.160" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.161 }
%class.scoped_refptr.161 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.162", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.162" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.163" }
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__atomic_base.165" }
%"struct.std::__1::__atomic_base.165" = type { %"struct.std::__1::__cxx_atomic_impl.166" }
%"struct.std::__1::__cxx_atomic_impl.166" = type { %"struct.std::__1::__cxx_atomic_base_impl.167" }
%"struct.std::__1::__cxx_atomic_base_impl.167" = type { i8 }
%"class.blink::WeakMember.168" = type { %"class.blink::MemberBase.36" }
%"class.blink::HeapHashSet.292" = type { %"class.WTF::HashSet.295" }
%"class.WTF::HashSet.295" = type { %"class.WTF::HashTable.296" }
%"class.WTF::HashTable.296" = type <{ %"class.blink::Member.298"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.298" = type opaque
%"class.blink::Member.299" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.301" = type { %"class.blink::MemberBase.302" }
%"class.blink::MemberBase.302" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.321" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.329" = type { %"class.WTF::VectorBuffer.330" }
%"class.WTF::VectorBuffer.330" = type { %"class.WTF::VectorBufferBase.331" }
%"class.WTF::VectorBufferBase.331" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.334" = type { %"class.WTF::HashMap.337" }
%"class.WTF::HashMap.337" = type { %"class.WTF::HashTable.338" }
%"class.WTF::HashTable.338" = type <{ %"struct.WTF::KeyValuePair.340"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.340" = type opaque
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.353" = type { %"class.WTF::HashMap.356" }
%"class.WTF::HashMap.356" = type { %"class.WTF::HashTable.357" }
%"class.WTF::HashTable.357" = type <{ %"struct.WTF::KeyValuePair.359"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.359" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.360" }
%"class.blink::HeapHashSet.360" = type { %"class.WTF::HashSet.363" }
%"class.WTF::HashSet.363" = type { %"class.WTF::HashTable.364" }
%"class.WTF::HashTable.364" = type <{ %"class.blink::WeakMember.366"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.366" = type opaque
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.35", %"class.blink::HeapHashSet.376", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.383", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.376" = type { %"class.WTF::HashSet.379" }
%"class.WTF::HashSet.379" = type { %"class.WTF::HashTable.380" }
%"class.WTF::HashTable.380" = type <{ %"class.blink::Member.382"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.382" = type opaque
%"class.blink::HeapTaskRunnerTimer.383" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.384", { i64, i64 } }
%"class.blink::WeakMember.384" = type { %"class.blink::MemberBase.370" }
%"class.blink::WeakMember.371" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.44" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member", i32, %"class.blink::HeapVector.48" }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.61" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::HeapHashMap.63"* }
%"class.blink::HeapHashMap.63" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.66" = type { %"class.WTF::Vector.69" }
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.blink::Member.72"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.16", %"class.blink::Member.18", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.16" = type { %"class.WTF::SingleThreadedBitField.17" }
%"class.WTF::SingleThreadedBitField.17" = type { i32 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.21", %"class.WTF::AtomicString", %"class.WTF::Vector.23" }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.23" = type { %"class.WTF::VectorBuffer.24" }
%"class.WTF::VectorBuffer.24" = type { %"class.WTF::VectorBufferBase.25", [32 x i8] }
%"class.WTF::VectorBufferBase.25" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.18", %"class.WTF::Vector.602" }
%"class.WTF::Vector.602" = type { %"class.WTF::VectorBuffer.603" }
%"class.WTF::VectorBuffer.603" = type { %"class.WTF::VectorBufferBase.604", [64 x i8] }
%"class.WTF::VectorBufferBase.604" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"struct.blink::CSSSelector::RareData" = type { %"class.WTF::RefCounted.386", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %union.anon, %"class.blink::QualifiedName", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.388", %"class.std::__1::unique_ptr.394" }
%"class.WTF::RefCounted.386" = type { %"class.base::RefCounted.387" }
%"class.base::RefCounted.387" = type { %"class.base::subtle::RefCountedBase" }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, i32 }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.blink::CSSSelectorList"* }
%"class.blink::CSSSelectorList" = type opaque
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.WTF::Vector.397"* }
%"class.WTF::Vector.397" = type { %"class.WTF::VectorBuffer.398" }
%"class.WTF::VectorBuffer.398" = type { %"class.WTF::VectorBufferBase.25" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.593 }
%union.anon.593 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj = comdat any

$_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_ = comdat any

$_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF15ConstructTraitsIN5blink14SelectorFilter16ParentStackFrameENS_12VectorTraitsIS3_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS3_EEEPS3_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIjS1_E11OffsetRangeES6_ = comdat any

$_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_14SelectorFilter16ParentStackFrameEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS2_EEE14AllocateObjectIS6_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS4_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF20VectorTypeOperationsIN5blink14SelectorFilter16ParentStackFrameENS1_13HeapAllocatorEE4MoveEPS3_S6_S6_b = comdat any

$_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIjLj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink10html_names10kClassAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kStyleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.6 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.8 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS4_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SelectorFilter20PushParentStackFrameERNS_7ElementE(%"class.blink::SelectorFilter"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.blink::SelectorFilter::ParentStackFrame", align 8
  %9 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Element"* %1, %"class.blink::Element"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %8, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %8, i64 0, i32 1, i32 0, i32 1, i64 0
  %14 = bitcast %"class.WTF::Vector.26"* %12 to i8**
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %8, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %8, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %31, label %22, !prof !2

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %24, i64 %25
  %27 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %26 to i8*
  %28 = call %"class.blink::SelectorFilter::ParentStackFrame"* @_ZN3WTF15ConstructTraitsIN5blink14SelectorFilter16ParentStackFrameENS_12VectorTraitsIS3_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS3_EEEPS3_PvDpOT_(i8* %27, %"class.blink::SelectorFilter::ParentStackFrame"* nonnull dereferenceable(40) %8) #9
  %29 = load i32, i32* %17, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %17, align 4
  br label %32

31:                                               ; preds = %2
  call void @_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector"* %9, %"class.blink::SelectorFilter::ParentStackFrame"* nonnull dereferenceable(40) %8) #9
  br label %32

32:                                               ; preds = %22, %31
  %33 = load i32, i32* %16, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35, !prof !2

35:                                               ; preds = %32
  store i32 0, i32* %16, align 4
  br label %36

36:                                               ; preds = %35, %32
  %37 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %12, i64 0, i32 0, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = bitcast i8* %13 to i32*
  %40 = icmp eq i32* %38, %39
  br i1 %40, label %43, label %41, !prof !3

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %12, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.27"* %42, i32* %38) #9
  br label %43

43:                                               ; preds = %36, %41
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #9
  %44 = load i32, i32* %17, align 4
  %45 = add i32 %44, -1
  %46 = call dereferenceable(40) %"class.blink::SelectorFilter::ParentStackFrame"* @_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %9, i32 %45) #9
  %47 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %46, i64 0, i32 1
  %48 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #9
  %49 = call %"class.WTF::StringImpl"* @_ZNK5blink7Element28LocalNameForSelectorMatchingEv(%"class.blink::Element"* %1) #9
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = lshr i32 %51, 8
  %53 = mul nuw nsw i32 %52, 13
  store i32 %53, i32* %3, align 4
  %54 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %46, i64 0, i32 1, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %46, i64 0, i32 1, i32 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %55, %57
  br i1 %58, label %66, label %59, !prof !2

59:                                               ; preds = %43
  %60 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %47, i64 0, i32 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = zext i32 %55 to i64
  %63 = getelementptr inbounds i32, i32* %61, i64 %62
  store i32 %53, i32* %63, align 4
  %64 = load i32, i32* %54, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %54, align 4
  br label %67

66:                                               ; preds = %43
  call void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.26"* %47, i32* nonnull dereferenceable(4) %3) #9
  br label %67

67:                                               ; preds = %66, %59
  %68 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %68, label %81, label %69

69:                                               ; preds = %67
  %70 = load atomic i32, i32* %50 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %69
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %69
  %78 = phi i32 [ %76, %75 ], [ %74, %69 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #9
  br label %81

81:                                               ; preds = %80, %77, %67
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #9
  %82 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %83 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %82, align 8
  %84 = icmp eq %"class.blink::ElementData"* %83, null
  br i1 %84, label %107, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %107, label %89

89:                                               ; preds = %85
  %90 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90) #9
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = lshr i32 %92, 8
  %94 = mul nuw nsw i32 %93, 17
  store i32 %94, i32* %4, align 4
  %95 = load i32, i32* %54, align 4
  %96 = load i32, i32* %56, align 8
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %105, label %98, !prof !2

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %47, i64 0, i32 0, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = zext i32 %95 to i64
  %102 = getelementptr inbounds i32, i32* %100, i64 %101
  store i32 %94, i32* %102, align 4
  %103 = load i32, i32* %54, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %54, align 4
  br label %106

105:                                              ; preds = %89
  call void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.26"* %47, i32* nonnull dereferenceable(4) %4) #9
  br label %106

106:                                              ; preds = %105, %98
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90) #9
  br label %107

107:                                              ; preds = %106, %85, %81
  %108 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %109 = call zeroext i1 @_ZNK5blink4Node15IsStyledElementEv(%"class.blink::Node"* %108) #9
  br i1 %109, label %110, label %150

110:                                              ; preds = %107
  %111 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %82, align 8
  %112 = icmp eq %"class.blink::ElementData"* %111, null
  br i1 %112, label %327, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %111, i64 0, i32 2, i32 0, i32 0
  %115 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %114, align 8
  %116 = icmp eq %"class.blink::SpaceSplitString::Data"* %115, null
  br i1 %116, label %150, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %115, i64 0, i32 2, i32 0, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %150, label %121

121:                                              ; preds = %117
  %122 = bitcast i32* %5 to i8*
  %123 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %47, i64 0, i32 0, i32 0, i32 0
  br label %124

124:                                              ; preds = %148, %121
  %125 = phi %"class.blink::SpaceSplitString::Data"* [ %115, %121 ], [ %149, %148 ]
  %126 = phi i32 [ 0, %121 ], [ %146, %148 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %122) #9
  %127 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %125, i64 0, i32 2
  %128 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.23"* %127, i32 %126) #9
  %129 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = lshr i32 %132, 8
  %134 = mul nuw nsw i32 %133, 19
  store i32 %134, i32* %5, align 4
  %135 = load i32, i32* %54, align 4
  %136 = load i32, i32* %56, align 8
  %137 = icmp eq i32 %135, %136
  br i1 %137, label %144, label %138, !prof !2

138:                                              ; preds = %124
  %139 = load i32*, i32** %123, align 8
  %140 = zext i32 %135 to i64
  %141 = getelementptr inbounds i32, i32* %139, i64 %140
  store i32 %134, i32* %141, align 4
  %142 = load i32, i32* %54, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %54, align 4
  br label %145

144:                                              ; preds = %124
  call void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.26"* %47, i32* nonnull dereferenceable(4) %5) #9
  br label %145

145:                                              ; preds = %144, %138
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %122) #9
  %146 = add nuw i32 %126, 1
  %147 = icmp eq i32 %146, %119
  br i1 %147, label %150, label %148

148:                                              ; preds = %145
  %149 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %114, align 8
  br label %124

150:                                              ; preds = %145, %117, %113, %107
  %151 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %82, align 8
  %152 = icmp eq %"class.blink::ElementData"* %151, null
  br i1 %152, label %327, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %151, i64 0, i32 0, i32 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %165, label %158

158:                                              ; preds = %153
  %159 = bitcast %"class.blink::ElementData"* %151 to %"class.blink::UniqueElementData"*
  %160 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %151, i64 1, i32 1
  %161 = bitcast %"class.blink::Member.18"* %160 to %"class.blink::Attribute"**
  %162 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %159, i64 0, i32 2, i32 0, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  br label %170

165:                                              ; preds = %153
  %166 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %151, i64 1
  %167 = bitcast %"class.blink::ElementData"* %166 to %"class.blink::Attribute"*
  %168 = lshr i32 %155, 1
  %169 = and i32 %168, 268435455
  br label %170

170:                                              ; preds = %165, %158
  %171 = phi i32 [ %169, %165 ], [ %164, %158 ]
  %172 = phi %"class.blink::Attribute"* [ %167, %165 ], [ %162, %158 ]
  %173 = zext i32 %171 to i64
  %174 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %172, i64 %173
  %175 = icmp eq i32 %171, 0
  br i1 %175, label %327, label %176

176:                                              ; preds = %170
  %177 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  %178 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  %180 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %179, i64 0, i32 0, i32 0
  %181 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %182 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %181, i64 0, i32 0, i32 0
  %183 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %184 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %183, i64 0, i32 0, i32 0
  %185 = bitcast i32* %7 to i8*
  %186 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %47, i64 0, i32 0, i32 0, i32 0
  br label %187

187:                                              ; preds = %324, %176
  %188 = phi %"class.blink::Attribute"* [ %172, %176 ], [ %325, %324 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #9
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %178, align 8
  %189 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %188, i64 0, i32 0, i32 0, i32 0
  %190 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %190, i64 0, i32 3, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  store %"class.WTF::StringImpl"* %192, %"class.WTF::StringImpl"** %178, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %212, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %212

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #9
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !2

208:                                              ; preds = %199
  call void @llvm.trap() #9
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  br label %212

212:                                              ; preds = %209, %194, %187
  %213 = phi %"class.WTF::StringImpl"* [ null, %187 ], [ %211, %209 ], [ %192, %194 ]
  %214 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %180, align 8
  %215 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %214, i64 0, i32 3, i32 0, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %213, %216
  br i1 %217, label %309, label %218

218:                                              ; preds = %212
  %219 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %220 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %219, i64 0, i32 3, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %213, %221
  br i1 %222, label %309, label %223

223:                                              ; preds = %218
  %224 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %184, align 8
  %225 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %224, i64 0, i32 3, i32 0, i32 0, i32 0
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %213, %226
  br i1 %227, label %309, label %228

228:                                              ; preds = %223
  %229 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %229, label %263, label %230

230:                                              ; preds = %228
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 8
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %230
  %236 = call i32 @_ZNK3WTF10StringImpl17ComputeASCIIFlagsEv(%"class.WTF::StringImpl"* nonnull %213) #9
  br label %237

237:                                              ; preds = %235, %230
  %238 = phi i32 [ %236, %235 ], [ %232, %230 ]
  %239 = and i32 %238, 32
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %261, label %241

241:                                              ; preds = %237
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %263, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %263

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = zext i32 %251 to i33
  %253 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %252, i33 1) #9
  %254 = extractvalue { i33, i1 } %253, 1
  %255 = extractvalue { i33, i1 } %253, 0
  %256 = icmp slt i33 %255, 0
  %257 = or i1 %254, %256
  br i1 %257, label %258, label %259, !prof !2

258:                                              ; preds = %249
  call void @llvm.trap() #9
  unreachable

259:                                              ; preds = %249
  %260 = trunc i33 %255 to i32
  store i32 %260, i32* %250, align 4
  br label %263

261:                                              ; preds = %237
  %262 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* nonnull %6) #9
  br label %263

263:                                              ; preds = %228, %261, %259, %244, %241
  %264 = phi %"class.WTF::StringImpl"* [ %262, %261 ], [ null, %241 ], [ %242, %244 ], [ %242, %259 ], [ null, %228 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %185) #9
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = lshr i32 %266, 8
  %268 = mul nuw nsw i32 %267, 23
  store i32 %268, i32* %7, align 4
  %269 = load i32, i32* %54, align 4
  %270 = load i32, i32* %56, align 8
  %271 = icmp eq i32 %269, %270
  br i1 %271, label %278, label %272, !prof !2

272:                                              ; preds = %263
  %273 = load i32*, i32** %186, align 8
  %274 = zext i32 %269 to i64
  %275 = getelementptr inbounds i32, i32* %273, i64 %274
  store i32 %268, i32* %275, align 4
  %276 = load i32, i32* %54, align 4
  %277 = add i32 %276, 1
  store i32 %277, i32* %54, align 4
  br label %279

278:                                              ; preds = %263
  call void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.26"* %47, i32* nonnull dereferenceable(4) %7) #9
  br label %279

279:                                              ; preds = %278, %272
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %185) #9
  %280 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %280, label %293, label %281

281:                                              ; preds = %279
  %282 = load atomic i32, i32* %265 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %281
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %281
  %290 = phi i32 [ %288, %287 ], [ %286, %281 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %264) #9
  br label %293

293:                                              ; preds = %292, %289, %279
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %295 = icmp eq %"class.WTF::StringImpl"* %294, null
  br i1 %295, label %324, label %296

296:                                              ; preds = %293
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = load atomic i32, i32* %297 monotonic, align 4
  %299 = and i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 0
  %302 = load i32, i32* %301, align 4
  br i1 %300, label %303, label %305

303:                                              ; preds = %296
  %304 = add i32 %302, -1
  store i32 %304, i32* %301, align 4
  br label %305

305:                                              ; preds = %303, %296
  %306 = phi i32 [ %304, %303 ], [ %302, %296 ]
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %324

308:                                              ; preds = %305
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %294) #9
  br label %324

309:                                              ; preds = %223, %218, %212
  %310 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %309
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %320

318:                                              ; preds = %311
  %319 = add i32 %317, -1
  store i32 %319, i32* %316, align 4
  br label %320

320:                                              ; preds = %318, %311
  %321 = phi i32 [ %319, %318 ], [ %317, %311 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #9
  br label %324

324:                                              ; preds = %309, %320, %323, %293, %305, %308
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #9
  %325 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %188, i64 1
  %326 = icmp eq %"class.blink::Attribute"* %325, %174
  br i1 %326, label %327, label %187

327:                                              ; preds = %324, %110, %150, %170
  %328 = load i32, i32* %54, align 4
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %332, label %330

330:                                              ; preds = %327
  %331 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %333

332:                                              ; preds = %354, %327
  ret void

333:                                              ; preds = %354, %330
  %334 = phi i32 [ 0, %330 ], [ %355, %354 ]
  %335 = load %"class.WTF::BloomFilter"*, %"class.WTF::BloomFilter"** %331, align 8
  %336 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.26"* %47, i32 %334) #9
  %337 = load i32, i32* %336, align 4
  %338 = and i32 %337, 4095
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds %"class.WTF::BloomFilter", %"class.WTF::BloomFilter"* %335, i64 0, i32 0, i64 %339
  %341 = lshr i32 %337, 16
  %342 = and i32 %341, 4095
  %343 = zext i32 %342 to i64
  %344 = getelementptr inbounds %"class.WTF::BloomFilter", %"class.WTF::BloomFilter"* %335, i64 0, i32 0, i64 %343
  %345 = load i8, i8* %340, align 1
  %346 = icmp eq i8 %345, -1
  br i1 %346, label %349, label %347, !prof !2

347:                                              ; preds = %333
  %348 = add nuw i8 %345, 1
  store i8 %348, i8* %340, align 1
  br label %349

349:                                              ; preds = %347, %333
  %350 = load i8, i8* %344, align 1
  %351 = icmp eq i8 %350, -1
  br i1 %351, label %354, label %352, !prof !2

352:                                              ; preds = %349
  %353 = add nuw i8 %350, 1
  store i8 %353, i8* %344, align 1
  br label %354

354:                                              ; preds = %349, %352
  %355 = add nuw i32 %334, 1
  %356 = icmp eq i32 %355, %328
  br i1 %356, label %332, label %333
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SelectorFilter19PopParentStackFrameEv(%"class.blink::SelectorFilter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -1
  %6 = tail call dereferenceable(40) %"class.blink::SelectorFilter::ParentStackFrame"* @_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 %5) #9
  %7 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %6, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %6, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %51

13:                                               ; preds = %72, %1
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, -1
  %16 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"** %16, align 8
  %18 = zext i32 %15 to i64
  %19 = zext i32 %14 to i64
  %20 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %17, i64 %19
  %21 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %17, i64 %18
  br label %22

22:                                               ; preds = %37, %13
  %23 = phi %"class.blink::SelectorFilter::ParentStackFrame"* [ %38, %37 ], [ %21, %13 ]
  %24 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %23, i64 0, i32 1
  %25 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %23, i64 0, i32 1, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28, !prof !2

28:                                               ; preds = %22
  store i32 0, i32* %25, align 4
  br label %29

29:                                               ; preds = %28, %22
  %30 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %24, i64 0, i32 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %23, i64 0, i32 1, i32 0, i32 1, i64 0
  %33 = bitcast i8* %32 to i32*
  %34 = icmp eq i32* %31, %33
  br i1 %34, label %37, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %24, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.27"* %36, i32* %31) #9
  br label %37

37:                                               ; preds = %35, %29
  store i32* null, i32** %30, align 8
  %38 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %23, i64 1
  %39 = icmp eq %"class.blink::SelectorFilter::ParentStackFrame"* %38, %20
  br i1 %39, label %40, label %22

40:                                               ; preds = %37
  %41 = load %"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"** %16, align 8
  %42 = load i32, i32* %3, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %41, i64 %18
  %45 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %41, i64 %43
  %46 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %44 to i8*
  %47 = ptrtoint %"class.blink::SelectorFilter::ParentStackFrame"* %45 to i64
  %48 = ptrtoint %"class.blink::SelectorFilter::ParentStackFrame"* %44 to i64
  %49 = sub i64 %47, %48
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %46, i64 %49) #9
  store i32 %15, i32* %3, align 4
  %50 = icmp eq i32 %15, 0
  br i1 %50, label %75, label %81

51:                                               ; preds = %72, %11
  %52 = phi i32 [ 0, %11 ], [ %73, %72 ]
  %53 = load %"class.WTF::BloomFilter"*, %"class.WTF::BloomFilter"** %12, align 8
  %54 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.26"* %7, i32 %52) #9
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 4095
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.WTF::BloomFilter", %"class.WTF::BloomFilter"* %53, i64 0, i32 0, i64 %57
  %59 = lshr i32 %55, 16
  %60 = and i32 %59, 4095
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.WTF::BloomFilter", %"class.WTF::BloomFilter"* %53, i64 0, i32 0, i64 %61
  %63 = load i8, i8* %58, align 1
  %64 = icmp eq i8 %63, -1
  br i1 %64, label %67, label %65, !prof !2

65:                                               ; preds = %51
  %66 = add i8 %63, -1
  store i8 %66, i8* %58, align 1
  br label %67

67:                                               ; preds = %65, %51
  %68 = load i8, i8* %62, align 1
  %69 = icmp eq i8 %68, -1
  br i1 %69, label %72, label %70, !prof !2

70:                                               ; preds = %67
  %71 = add i8 %68, -1
  store i8 %71, i8* %62, align 1
  br label %72

72:                                               ; preds = %67, %70
  %73 = add nuw i32 %52, 1
  %74 = icmp eq i32 %73, %9
  br i1 %74, label %13, label %51

75:                                               ; preds = %40
  %76 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::BloomFilter"*, %"class.WTF::BloomFilter"** %76, align 8
  store %"class.WTF::BloomFilter"* null, %"class.WTF::BloomFilter"** %76, align 8
  %78 = icmp eq %"class.WTF::BloomFilter"* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.WTF::BloomFilter", %"class.WTF::BloomFilter"* %77, i64 0, i32 0, i64 0
  tail call void @free(i8* %80) #9
  br label %81

81:                                               ; preds = %79, %75, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SelectorFilter10PushParentERNS_7ElementE(%"class.blink::SelectorFilter"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = tail call noalias i8* @malloc(i64 4096) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 4096, i1 false) #9
  %8 = ptrtoint i8* %7 to i64
  %9 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::BloomFilter"*, %"class.WTF::BloomFilter"** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 %8, i64* %12, align 8
  %13 = icmp eq %"class.WTF::BloomFilter"* %11, null
  br i1 %13, label %35, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.WTF::BloomFilter", %"class.WTF::BloomFilter"* %11, i64 0, i32 0, i64 0
  tail call void @free(i8* %15) #9
  br label %35

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 0, i32 0
  %18 = add i32 %4, -1
  %19 = tail call dereferenceable(40) %"class.blink::SelectorFilter::ParentStackFrame"* @_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %17, i32 %18) #9
  %20 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Element"*, %"class.blink::Element"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %23 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %22) #9
  %24 = icmp eq %"class.blink::ContainerNode"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %23, i64 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 12
  %29 = icmp eq i32 %28, 0
  %30 = bitcast %"class.blink::ContainerNode"* %23 to %"class.blink::Element"*
  %31 = select i1 %29, %"class.blink::Element"* %30, %"class.blink::Element"* null
  br label %32

32:                                               ; preds = %16, %25
  %33 = phi %"class.blink::Element"* [ %31, %25 ], [ null, %16 ]
  %34 = icmp eq %"class.blink::Element"* %21, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %32, %6, %14
  tail call void @_ZN5blink14SelectorFilter20PushParentStackFrameERNS_7ElementE(%"class.blink::SelectorFilter"* %0, %"class.blink::Element"* dereferenceable(104) %1)
  br label %36

36:                                               ; preds = %35, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SelectorFilter9PopParentERNS_7ElementE(%"class.blink::SelectorFilter"*, %"class.blink::Element"* readnone dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SelectorFilter", %"class.blink::SelectorFilter"* %0, i64 0, i32 0, i32 0
  %8 = add i32 %4, -1
  %9 = tail call dereferenceable(40) %"class.blink::SelectorFilter::ParentStackFrame"* @_ZNK3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %8) #9
  %10 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::Element"*, %"class.blink::Element"** %10, align 8
  %12 = icmp eq %"class.blink::Element"* %11, %1
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void @_ZN5blink14SelectorFilter19PopParentStackFrameEv(%"class.blink::SelectorFilter"* %0)
  br label %14

14:                                               ; preds = %2, %6, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SelectorFilter23CollectIdentifierHashesERKNS_11CSSSelectorEPjj(%"class.blink::CSSSelector"* readonly dereferenceable(16), i32*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32*, align 8
  %5 = bitcast i32** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  store i32* %1, i32** %4, align 8
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds i32, i32* %1, i64 %6
  %8 = bitcast %"class.blink::CSSSelector"* %0 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 131072
  %11 = icmp ne i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 1
  %13 = icmp eq %"class.blink::CSSSelector"* %12, null
  %14 = or i1 %13, %11
  br i1 %14, label %38, label %15

15:                                               ; preds = %3, %30
  %16 = phi %"class.blink::CSSSelector"* [ %35, %30 ], [ %12, %3 ]
  %17 = phi i8 [ %27, %30 ], [ 1, %3 ]
  %18 = phi i32 [ %32, %30 ], [ %9, %3 ]
  %19 = and i32 %18, 15
  switch i32 %19, label %26 [
    i32 0, label %20
    i32 3, label %24
    i32 4, label %24
    i32 6, label %25
    i32 1, label %25
    i32 2, label %25
    i32 5, label %25
    i32 7, label %25
  ]

20:                                               ; preds = %15
  %21 = and i8 %17, 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %20
  call fastcc void @_ZN5blink12_GLOBAL__N_141CollectDescendantSelectorIdentifierHashesERKNS_11CSSSelectorERPj(%"class.blink::CSSSelector"* nonnull dereferenceable(16) %16, i32** nonnull dereferenceable(8) %4)
  br label %26

24:                                               ; preds = %15, %15
  br label %26

25:                                               ; preds = %15, %15, %15, %15, %15
  call fastcc void @_ZN5blink12_GLOBAL__N_141CollectDescendantSelectorIdentifierHashesERKNS_11CSSSelectorERPj(%"class.blink::CSSSelector"* nonnull dereferenceable(16) %16, i32** nonnull dereferenceable(8) %4)
  br label %26

26:                                               ; preds = %20, %23, %15, %25, %24
  %27 = phi i8 [ %17, %15 ], [ 0, %25 ], [ 1, %24 ], [ %17, %20 ], [ %17, %23 ]
  %28 = load i32*, i32** %4, align 8
  %29 = icmp eq i32* %28, %7
  br i1 %29, label %40, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.blink::CSSSelector"* %16 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 131072
  %34 = icmp ne i32 %33, 0
  %35 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %16, i64 1
  %36 = icmp eq %"class.blink::CSSSelector"* %35, null
  %37 = or i1 %36, %34
  br i1 %37, label %38, label %15

38:                                               ; preds = %30, %3
  %39 = phi i32* [ %1, %3 ], [ %28, %30 ]
  store i32 0, i32* %39, align 4
  br label %40

40:                                               ; preds = %26, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_141CollectDescendantSelectorIdentifierHashesERKNS_11CSSSelectorERPj(%"class.blink::CSSSelector"* nocapture readonly dereferenceable(16), i32** nocapture dereferenceable(8)) unnamed_addr #2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = bitcast %"class.blink::CSSSelector"* %0 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 4
  %7 = and i32 %6, 15
  switch i32 %7, label %192 [
    i32 2, label %8
    i32 3, label %31
    i32 1, label %54
    i32 7, label %71
    i32 8, label %71
    i32 10, label %71
    i32 11, label %71
    i32 12, label %71
    i32 13, label %71
    i32 9, label %71
  ]

8:                                                ; preds = %2
  %9 = and i32 %5, 262144
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1
  %12 = bitcast %"union.blink::CSSSelector::DataUnion"* %11 to %"struct.blink::CSSSelector::RareData"**
  %13 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %12, align 8
  %14 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %13, i64 0, i32 1
  %15 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %11, i64 0, i32 0
  %16 = select i1 %10, %"class.WTF::AtomicString"* %15, %"class.WTF::AtomicString"* %14
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %192, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %192, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = lshr i32 %26, 8
  %28 = mul nuw nsw i32 %27, 17
  %29 = load i32*, i32** %1, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 1
  store i32* %30, i32** %1, align 8
  store i32 %28, i32* %29, align 4
  br label %192

31:                                               ; preds = %2
  %32 = and i32 %5, 262144
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1
  %35 = bitcast %"union.blink::CSSSelector::DataUnion"* %34 to %"struct.blink::CSSSelector::RareData"**
  %36 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %35, align 8
  %37 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %36, i64 0, i32 1
  %38 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %34, i64 0, i32 0
  %39 = select i1 %33, %"class.WTF::AtomicString"* %38, %"class.WTF::AtomicString"* %37
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %192, label %43

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %192, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = lshr i32 %49, 8
  %51 = mul nuw nsw i32 %50, 19
  %52 = load i32*, i32** %1, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 1
  store i32* %53, i32** %1, align 8
  store i32 %51, i32* %52, align 4
  br label %192

54:                                               ; preds = %2
  %55 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1
  %56 = bitcast %"union.blink::CSSSelector::DataUnion"* %55 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %60, %62
  br i1 %63, label %192, label %64

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = lshr i32 %66, 8
  %68 = mul nuw nsw i32 %67, 13
  %69 = load i32*, i32** %1, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 1
  store i32* %70, i32** %1, align 8
  store i32 %68, i32* %69, align 4
  br label %192

71:                                               ; preds = %2, %2, %2, %2, %2, %2, %2
  %72 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9
  %73 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1
  %75 = bitcast %"union.blink::CSSSelector::DataUnion"* %74 to %"struct.blink::CSSSelector::RareData"**
  %76 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %75, align 8
  %77 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %76, i64 0, i32 4, i32 0, i32 0
  %78 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 3, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %73, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %100, label %82

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %100

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #9
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #9
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  br label %100

100:                                              ; preds = %82, %97, %71
  %101 = phi %"class.WTF::StringImpl"* [ null, %71 ], [ %99, %97 ], [ %80, %82 ]
  %102 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  %103 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %104, i64 0, i32 3, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %101, %106
  br i1 %107, label %175, label %108

108:                                              ; preds = %100
  %109 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 3, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %101, %113
  br i1 %114, label %175, label %115

115:                                              ; preds = %108
  %116 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %117 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %116, i64 0, i32 0, i32 0
  %118 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %118, i64 0, i32 3, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %101, %120
  br i1 %121, label %175, label %122

122:                                              ; preds = %115
  %123 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %123, label %154, label %124

124:                                              ; preds = %122
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %124
  %130 = tail call i32 @_ZNK3WTF10StringImpl17ComputeASCIIFlagsEv(%"class.WTF::StringImpl"* nonnull %101) #9
  br label %131

131:                                              ; preds = %124, %129
  %132 = phi i32 [ %130, %129 ], [ %126, %124 ]
  %133 = and i32 %132, 32
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %152, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %154

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i33
  %144 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %143, i33 1) #9
  %145 = extractvalue { i33, i1 } %144, 1
  %146 = extractvalue { i33, i1 } %144, 0
  %147 = icmp slt i33 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %149, label %150, !prof !2

149:                                              ; preds = %140
  tail call void @llvm.trap() #9
  unreachable

150:                                              ; preds = %140
  %151 = trunc i33 %146 to i32
  store i32 %151, i32* %141, align 4
  br label %154

152:                                              ; preds = %131
  %153 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* nonnull %3) #9
  br label %154

154:                                              ; preds = %122, %150, %135, %152
  %155 = phi %"class.WTF::StringImpl"* [ %153, %152 ], [ %101, %135 ], [ %101, %150 ], [ null, %122 ]
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = lshr i32 %157, 8
  %159 = mul nuw nsw i32 %158, 23
  %160 = load i32*, i32** %1, align 8
  %161 = getelementptr inbounds i32, i32* %160, i64 1
  store i32* %161, i32** %1, align 8
  store i32 %159, i32* %160, align 4
  %162 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %162, label %175, label %163

163:                                              ; preds = %154
  %164 = load atomic i32, i32* %156 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %163
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %163
  %172 = phi i32 [ %170, %169 ], [ %168, %163 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #9
  br label %175

175:                                              ; preds = %100, %108, %174, %171, %154, %115
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #9
  br label %191

191:                                              ; preds = %175, %187, %190
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9
  ret void

192:                                              ; preds = %54, %31, %8, %2, %64, %43, %47, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SelectorFilter16ParentStackFrame5TraceEPNS_7VisitorE(%"class.blink::SelectorFilter::ParentStackFrame"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SelectorFilter5TraceEPNS_7VisitorE(%"class.blink::SelectorFilter"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::SelectorFilter"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.blink::SelectorFilter"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #9
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.27"*, i32*) local_unnamed_addr #3 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element28LocalNameForSelectorMatchingEv(%"class.blink::Element"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink4Node15IsStyledElementEv(%"class.blink::Node"*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.26"*, i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.26"* %0, i32 %5) #9
  %14 = load i32*, i32** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i32* %1 to i64
  %17 = ptrtoint i32* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 2
  tail call void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.26"* %0, i32 %5) #9
  %20 = load i32*, i32** %6, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i32* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i32* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %23, i64 %26
  %28 = load i32, i32* %24, align 4
  store i32 %28, i32* %27, align 4
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.26"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 2
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.26"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.26"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i32*
  %10 = icmp eq i32* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i32* %6 to i8*
  %27 = shl nuw nsw i64 %25, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.27"* %19, i32* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #9
  %33 = lshr i64 %31, 2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i32* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i32* %36 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #9
  %46 = load i32*, i32** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i32* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.27"* %53, i32* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.23"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.23", %"class.WTF::Vector.23"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i32 @_ZNK3WTF10StringImpl17ComputeASCIIFlagsEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.blink::SelectorFilter::ParentStackFrame"* @_ZNK3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %24, i64 %25
  ret %"class.blink::SelectorFilter::ParentStackFrame"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.blink::SelectorFilter::ParentStackFrame"* @_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %24, i64 %25
  ret %"class.blink::SelectorFilter::ParentStackFrame"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SelectorFilter::ParentStackFrame"* @_ZN3WTF15ConstructTraitsIN5blink14SelectorFilter16ParentStackFrameENS_12VectorTraitsIS3_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS3_EEEPS3_PvDpOT_(i8*, %"class.blink::SelectorFilter::ParentStackFrame"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::SelectorFilter::ParentStackFrame"*
  %4 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to %"class.WTF::VectorBuffer.27"*
  %9 = getelementptr inbounds i8, i8* %0, i64 24
  %10 = bitcast i8* %7 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %0, i64 16
  %12 = bitcast i8* %11 to i32*
  store i32 4, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %0, i64 20
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIjS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer.27"* %8, %"class.WTF::VectorBuffer.27"* dereferenceable(32) %15, i64 0, i64 0) #9
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %51, label %18

18:                                               ; preds = %2
  %19 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %20 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %19, i64 0, i32 1
  %21 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %20) #9
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %25, !prof !2

23:                                               ; preds = %18
  %24 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %20, i8* %24) #9
  br label %25

25:                                               ; preds = %23, %18
  %26 = phi i8* [ %24, %23 ], [ %21, %18 ]
  %27 = bitcast i8* %26 to %"class.blink::ThreadState"**
  %28 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %28, i64 0, i32 9
  %30 = load i8, i8* %29, align 1, !range !4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %51, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %28, i64 0, i32 13
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %33, align 8
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %28, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %37 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %36, align 8
  %38 = load atomic i64, i64* %6 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %37, i64 0, i32 0, i32 0
  %42 = inttoptr i64 %38 to i8*
  %43 = bitcast %"class.blink::MarkingVisitor"* %37 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, i64 5
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %41, i8* nonnull %42, i8* %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  %47 = load i64, i64* %33, align 8
  br label %48

48:                                               ; preds = %40, %32
  %49 = phi i64 [ %35, %32 ], [ %47, %40 ]
  %50 = add i64 %49, -1
  store i64 %50, i64* %33, align 8
  br label %51

51:                                               ; preds = %2, %25, %48
  ret %"class.blink::SelectorFilter::ParentStackFrame"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::SelectorFilter::ParentStackFrame"* dereferenceable(40)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"** %6, align 8
  %8 = icmp ugt %"class.blink::SelectorFilter::ParentStackFrame"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %7, i64 %10
  %12 = icmp ugt %"class.blink::SelectorFilter::ParentStackFrame"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %22) #9
  %23 = load %"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::SelectorFilter::ParentStackFrame"* %1 to i64
  %26 = ptrtoint %"class.blink::SelectorFilter::ParentStackFrame"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 40
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %37) #9
  %38 = load %"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::SelectorFilter::ParentStackFrame"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::SelectorFilter::ParentStackFrame"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %41, i64 %44
  %46 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %45 to i8*
  %47 = tail call %"class.blink::SelectorFilter::ParentStackFrame"* @_ZN3WTF15ConstructTraitsIN5blink14SelectorFilter16ParentStackFrameENS_12VectorTraitsIS3_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS3_EEEPS3_PvDpOT_(i8* %46, %"class.blink::SelectorFilter::ParentStackFrame"* dereferenceable(40) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIjS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer.27"*, %"class.WTF::VectorBuffer.27"* dereferenceable(32), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %0, i64 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to i32*
  %12 = icmp eq i32* %9, %11
  %13 = ptrtoint i32* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %1, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to i32*
  %19 = icmp eq i32* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint i32* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer.27"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer.27"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %274

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to i32*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %1, i64 0, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi i32* [ %18, %14 ], [ %39, %32 ]
  %44 = phi i32* [ %16, %14 ], [ %41, %32 ]
  %45 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %48 = phi i32* [ null, %14 ], [ %9, %32 ]
  %49 = phi i32* [ null, %14 ], [ %39, %32 ]
  %50 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %1, i64 0, i32 1, i64 0
  %51 = icmp eq i32* %44, %43
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %1, i64 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %42, %52
  %56 = phi i32 [ %7, %52 ], [ 0, %42 ]
  %57 = phi i32 [ %5, %52 ], [ 0, %42 ]
  %58 = phi i32 [ %54, %52 ], [ 0, %42 ]
  %59 = phi i32* [ %43, %52 ], [ null, %42 ]
  %60 = phi i32* [ %11, %52 ], [ null, %42 ]
  %61 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %61, align 4
  store i32 %63, i32* %62, align 4
  %65 = icmp eq i32* %48, null
  %66 = icmp ne i32* %59, null
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = and i1 %65, %66
  br i1 %69, label %70, label %78

70:                                               ; preds = %68, %55
  %71 = phi %"class.WTF::VectorBuffer.27"* [ %1, %55 ], [ %0, %68 ]
  %72 = phi %"class.WTF::VectorBuffer.27"* [ %0, %55 ], [ %1, %68 ]
  %73 = phi i8* [ %50, %55 ], [ %10, %68 ]
  %74 = bitcast %"class.WTF::VectorBuffer.27"* %71 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::VectorBuffer.27"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = ptrtoint i8* %73 to i64
  store atomic i64 %77, i64* %74 monotonic, align 8
  br label %78

78:                                               ; preds = %70, %68
  %79 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %0, i64 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.WTF::VectorBuffer.27", %"class.WTF::VectorBuffer.27"* %1, i64 0, i32 0, i32 2
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %79, align 4
  store i32 %81, i32* %80, align 4
  %83 = icmp ne i32* %48, null
  %84 = icmp ult i32 %47, 4
  %85 = icmp eq i32 %46, %45
  %86 = icmp eq i32 %57, %56
  br label %87

87:                                               ; preds = %78, %272
  %88 = phi i32 [ 0, %78 ], [ %119, %272 ]
  %89 = icmp ult i32 %88, %47
  %90 = and i1 %83, %89
  %91 = and i1 %84, %90
  %92 = select i1 %91, i32 %47, i32 4
  br i1 %85, label %102, label %93

93:                                               ; preds = %87
  %94 = icmp ult i32 %88, %46
  %95 = icmp ult i32 %46, %92
  %96 = and i1 %94, %95
  %97 = select i1 %96, i32 %46, i32 %92
  %98 = icmp ult i32 %88, %45
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = icmp ult i32 %45, %97
  %101 = select i1 %100, i32 %45, i32 %97
  br label %102

102:                                              ; preds = %87, %99, %93
  %103 = phi i32 [ %101, %99 ], [ %97, %93 ], [ %92, %87 ]
  %104 = icmp ult i32 %88, %58
  %105 = and i1 %66, %104
  %106 = icmp ult i32 %58, %103
  %107 = and i1 %105, %106
  %108 = select i1 %107, i32 %58, i32 %103
  br i1 %86, label %118, label %109

109:                                              ; preds = %102
  %110 = icmp ult i32 %88, %57
  %111 = icmp ult i32 %57, %108
  %112 = and i1 %110, %111
  %113 = select i1 %112, i32 %57, i32 %108
  %114 = icmp ult i32 %88, %56
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = icmp ult i32 %56, %113
  %117 = select i1 %116, i32 %56, i32 %113
  br label %118

118:                                              ; preds = %102, %115, %109
  %119 = phi i32 [ %117, %115 ], [ %113, %109 ], [ %108, %102 ]
  br i1 %90, label %120, label %125

120:                                              ; preds = %118
  %121 = icmp ult i32 %88, %46
  %122 = or i1 %85, %121
  %123 = icmp uge i32 %88, %45
  %124 = or i1 %123, %122
  br label %125

125:                                              ; preds = %120, %118
  %126 = phi i1 [ false, %118 ], [ %124, %120 ]
  br i1 %105, label %127, label %239

127:                                              ; preds = %125
  %128 = icmp ult i32 %88, %57
  %129 = or i1 %86, %128
  %130 = xor i1 %129, true
  %131 = icmp ult i32 %88, %56
  %132 = and i1 %131, %130
  %133 = xor i1 %126, true
  %134 = or i1 %132, %133
  %135 = xor i1 %131, true
  %136 = or i1 %129, %135
  br i1 %134, label %239, label %137

137:                                              ; preds = %127
  %138 = zext i32 %88 to i64
  %139 = zext i32 %119 to i64
  %140 = getelementptr inbounds i32, i32* %48, i64 %139
  %141 = bitcast i32* %140 to i8*
  %142 = icmp eq i32 %88, %119
  br i1 %142, label %272, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds i32, i32* %48, i64 %138
  %145 = bitcast i32* %144 to i8*
  %146 = getelementptr inbounds i32, i32* %59, i64 %138
  %147 = bitcast i32* %146 to i8*
  %148 = sub nsw i64 %139, %138
  %149 = shl nsw i64 %148, 2
  %150 = icmp ult i64 %149, 32
  br i1 %150, label %228, label %151

151:                                              ; preds = %143
  %152 = getelementptr i32, i32* %59, i64 %139
  %153 = icmp ult i32* %144, %152
  %154 = icmp ult i32* %146, %140
  %155 = and i1 %153, %154
  br i1 %155, label %228, label %156

156:                                              ; preds = %151
  %157 = and i64 %149, -32
  %158 = getelementptr i8, i8* %147, i64 %157
  %159 = getelementptr i8, i8* %145, i64 %157
  %160 = add nsw i64 %157, -32
  %161 = lshr exact i64 %160, 5
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %206, label %165

165:                                              ; preds = %156
  %166 = sub nuw nsw i64 %162, %163
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi i64 [ 0, %165 ], [ %203, %167 ]
  %169 = phi i64 [ %166, %165 ], [ %204, %167 ]
  %170 = getelementptr i8, i8* %147, i64 %168
  %171 = getelementptr i8, i8* %145, i64 %168
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 1, !alias.scope !5, !noalias !8
  %174 = getelementptr i8, i8* %171, i64 16
  %175 = bitcast i8* %174 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1, !alias.scope !5, !noalias !8
  %177 = bitcast i8* %170 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !8
  %179 = getelementptr i8, i8* %170, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !8
  %182 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 1, !alias.scope !5, !noalias !8
  %183 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %183, align 1, !alias.scope !5, !noalias !8
  %184 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %173, <16 x i8>* %184, align 1, !alias.scope !8
  %185 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %176, <16 x i8>* %185, align 1, !alias.scope !8
  %186 = or i64 %168, 32
  %187 = getelementptr i8, i8* %147, i64 %186
  %188 = getelementptr i8, i8* %145, i64 %186
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !5, !noalias !8
  %191 = getelementptr i8, i8* %188, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !5, !noalias !8
  %194 = bitcast i8* %187 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !8
  %196 = getelementptr i8, i8* %187, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !8
  %199 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %195, <16 x i8>* %199, align 1, !alias.scope !5, !noalias !8
  %200 = bitcast i8* %191 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %200, align 1, !alias.scope !5, !noalias !8
  %201 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %201, align 1, !alias.scope !8
  %202 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %202, align 1, !alias.scope !8
  %203 = add i64 %168, 64
  %204 = add i64 %169, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %167, !llvm.loop !10

206:                                              ; preds = %167, %156
  %207 = phi i64 [ 0, %156 ], [ %203, %167 ]
  %208 = icmp eq i64 %163, 0
  br i1 %208, label %226, label %209

209:                                              ; preds = %206
  %210 = getelementptr i8, i8* %147, i64 %207
  %211 = getelementptr i8, i8* %145, i64 %207
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !5, !noalias !8
  %214 = getelementptr i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !5, !noalias !8
  %217 = bitcast i8* %210 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !8
  %219 = getelementptr i8, i8* %210, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  %221 = load <16 x i8>, <16 x i8>* %220, align 1, !alias.scope !8
  %222 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %222, align 1, !alias.scope !5, !noalias !8
  %223 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %221, <16 x i8>* %223, align 1, !alias.scope !5, !noalias !8
  %224 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %224, align 1, !alias.scope !8
  %225 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %225, align 1, !alias.scope !8
  br label %226

226:                                              ; preds = %206, %209
  %227 = icmp eq i64 %149, %157
  br i1 %227, label %272, label %228

228:                                              ; preds = %226, %151, %143
  %229 = phi i8* [ %147, %151 ], [ %147, %143 ], [ %158, %226 ]
  %230 = phi i8* [ %145, %151 ], [ %145, %143 ], [ %159, %226 ]
  br label %231

231:                                              ; preds = %228, %231
  %232 = phi i8* [ %237, %231 ], [ %229, %228 ]
  %233 = phi i8* [ %236, %231 ], [ %230, %228 ]
  %234 = load i8, i8* %233, align 1
  %235 = load i8, i8* %232, align 1
  store i8 %235, i8* %233, align 1
  store i8 %234, i8* %232, align 1
  %236 = getelementptr inbounds i8, i8* %233, i64 1
  %237 = getelementptr inbounds i8, i8* %232, i64 1
  %238 = icmp eq i8* %236, %141
  br i1 %238, label %272, label %231, !llvm.loop !12

239:                                              ; preds = %127, %125
  %240 = phi i1 [ false, %125 ], [ %136, %127 ]
  br i1 %126, label %241, label %256

241:                                              ; preds = %239
  %242 = zext i32 %88 to i64
  %243 = getelementptr inbounds i32, i32* %48, i64 %242
  %244 = getelementptr inbounds i32, i32* %49, i64 %242
  %245 = icmp ne i32* %244, null
  %246 = icmp ne i32* %243, null
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %272, !prof !3

248:                                              ; preds = %241
  %249 = zext i32 %119 to i64
  %250 = getelementptr inbounds i32, i32* %48, i64 %249
  %251 = bitcast i32* %243 to i8*
  %252 = ptrtoint i32* %250 to i64
  %253 = ptrtoint i32* %243 to i64
  %254 = sub i64 %252, %253
  %255 = bitcast i32* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %255, i8* nonnull align 4 %251, i64 %254, i1 false) #9
  br label %272

256:                                              ; preds = %239
  br i1 %240, label %257, label %272

257:                                              ; preds = %256
  %258 = zext i32 %88 to i64
  %259 = getelementptr inbounds i32, i32* %59, i64 %258
  %260 = getelementptr inbounds i32, i32* %60, i64 %258
  %261 = icmp ne i32* %260, null
  %262 = icmp ne i32* %259, null
  %263 = and i1 %262, %261
  br i1 %263, label %264, label %272, !prof !3

264:                                              ; preds = %257
  %265 = zext i32 %119 to i64
  %266 = getelementptr inbounds i32, i32* %59, i64 %265
  %267 = bitcast i32* %259 to i8*
  %268 = ptrtoint i32* %266 to i64
  %269 = ptrtoint i32* %259 to i64
  %270 = sub i64 %268, %269
  %271 = bitcast i32* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %271, i8* nonnull align 4 %267, i64 %270, i1 false) #9
  br label %272

272:                                              ; preds = %231, %226, %264, %257, %248, %241, %137, %256
  %273 = icmp ult i32 %119, 4
  br i1 %273, label %87, label %274

274:                                              ; preds = %272, %20
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"** %8, align 8
  %10 = icmp eq %"class.blink::SelectorFilter::ParentStackFrame"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_14SelectorFilter16ParentStackFrameEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 40
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"** %8, align 8
  %26 = icmp eq %"class.blink::SelectorFilter::ParentStackFrame"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 40
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14SelectorFilter16ParentStackFrameELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink14SelectorFilter16ParentStackFrameENS1_13HeapAllocatorEE4MoveEPS3_S6_S6_b(%"class.blink::SelectorFilter::ParentStackFrame"* %6, %"class.blink::SelectorFilter::ParentStackFrame"* %10, %"class.blink::SelectorFilter::ParentStackFrame"* null, i1 zeroext true)
  %13 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %6 to i8*
  %14 = mul nuw nsw i64 %9, 40
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %14) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %13) #9
  br label %82

15:                                               ; preds = %2
  %16 = zext i32 %1 to i64
  %17 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_14SelectorFilter16ParentStackFrameEEEmm(i64 %16) #9
  %18 = udiv i64 %17, 40
  %19 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE4CallEm(i64 %18) #9
  %20 = ptrtoint %"class.blink::HeapVectorBacking"* %19 to i64
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %22, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %15
  %29 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %22 to i8*
  %30 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %69

31:                                               ; preds = %15
  %32 = bitcast %"class.blink::HeapVectorBacking"* %19 to %"class.blink::SelectorFilter::ParentStackFrame"*
  br label %33

33:                                               ; preds = %31, %59
  %34 = phi %"class.blink::SelectorFilter::ParentStackFrame"* [ %61, %59 ], [ %22, %31 ]
  %35 = phi %"class.blink::SelectorFilter::ParentStackFrame"* [ %60, %59 ], [ %32, %31 ]
  %36 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %34 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %35 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %35, i64 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %39, i64 0, i32 0
  %41 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %35, i64 0, i32 1, i32 0, i32 1, i64 0
  %42 = bitcast %"class.WTF::Vector.26"* %39 to i8**
  store i8* %41, i8** %42, align 8
  %43 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %35, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 4, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %35, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %34, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIjS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer.27"* %40, %"class.WTF::VectorBuffer.27"* dereferenceable(32) %45, i64 0, i64 0) #9
  %46 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %34, i64 0, i32 1
  %47 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %34, i64 0, i32 1, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %51, label %50, !prof !2

50:                                               ; preds = %33
  store i32 0, i32* %47, align 4
  br label %51

51:                                               ; preds = %50, %33
  %52 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %46, i64 0, i32 0, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %34, i64 0, i32 1, i32 0, i32 1, i64 0
  %55 = bitcast i8* %54 to i32*
  %56 = icmp eq i32* %53, %55
  br i1 %56, label %59, label %57, !prof !3

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %46, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.27"* %58, i32* %53) #9
  br label %59

59:                                               ; preds = %57, %51
  store i32* null, i32** %52, align 8
  %60 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %35, i64 1
  %61 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %34, i64 1
  %62 = icmp eq %"class.blink::SelectorFilter::ParentStackFrame"* %61, %26
  br i1 %62, label %63, label %33

63:                                               ; preds = %59
  %64 = bitcast %"class.WTF::Vector"* %0 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = load i32, i32* %23, align 4
  %67 = zext i32 %66 to i64
  %68 = mul nuw nsw i64 %67, 40
  br label %69

69:                                               ; preds = %28, %63
  %70 = phi i8** [ %30, %28 ], [ %64, %63 ]
  %71 = phi i64 [ 0, %28 ], [ %68, %63 ]
  %72 = phi i8* [ %29, %28 ], [ %65, %63 ]
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %72, i64 %71) #9
  %73 = load i8*, i8** %70, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %73) #9
  %74 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %20, i64* %74 monotonic, align 8
  %75 = trunc i64 %18 to i32
  %76 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %75, i32* %76, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %69
  %80 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %19, i64 0, i32 0
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #9
  br label %82

82:                                               ; preds = %79, %69, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_14SelectorFilter16ParentStackFrameEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 3355443
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 3355443) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.6, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 40
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.8, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 40
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS2_EEE14AllocateObjectIS6_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS2_EEE14AllocateObjectIS6_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 4
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #9
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #9
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #9
  br i1 %28, label %68, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::SelectorFilter::ParentStackFrame"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 40
  %51 = icmp ugt i64 %49, 39
  br i1 %51, label %52, label %68

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %65, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %65 ]
  %56 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %30, i64 %55
  %57 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %65

65:                                               ; preds = %60, %54
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp ult i64 %66, %50
  br i1 %67, label %54, label %68

68:                                               ; preds = %65, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS4_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 40
  %22 = bitcast i8* %0 to %"class.blink::SelectorFilter::ParentStackFrame"*
  %23 = icmp ugt i64 %20, 39
  br i1 %23, label %24, label %44

24:                                               ; preds = %18, %40
  %25 = phi i64 [ %42, %40 ], [ 0, %18 ]
  %26 = phi i32 [ %41, %40 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %22, i64 %25, i32 1
  %28 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %22, i64 %25, i32 1, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %24
  store i32 0, i32* %28, align 4
  br label %32

32:                                               ; preds = %31, %24
  %33 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %27, i64 0, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %22, i64 %25, i32 1, i32 0, i32 1, i64 0
  %36 = bitcast i8* %35 to i32*
  %37 = icmp eq i32* %34, %36
  br i1 %37, label %40, label %38, !prof !3

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %27, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.27"* %39, i32* %34) #9
  br label %40

40:                                               ; preds = %38, %32
  store i32* null, i32** %33, align 8
  %41 = add i32 %26, 1
  %42 = zext i32 %41 to i64
  %43 = icmp ugt i64 %21, %42
  br i1 %43, label %24, label %44

44:                                               ; preds = %40, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_14SelectorFilter16ParentStackFrameEN3WTF12VectorTraitsIS3_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF20VectorTypeOperationsIN5blink14SelectorFilter16ParentStackFrameENS1_13HeapAllocatorEE4MoveEPS3_S6_S6_b(%"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"*, %"class.blink::SelectorFilter::ParentStackFrame"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::SelectorFilter::ParentStackFrame"* %0, %1
  br i1 %5, label %73, label %6

6:                                                ; preds = %4, %69
  %7 = phi %"class.blink::SelectorFilter::ParentStackFrame"* [ %71, %69 ], [ %0, %4 ]
  %8 = phi %"class.blink::SelectorFilter::ParentStackFrame"* [ %70, %69 ], [ %2, %4 ]
  %9 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::SelectorFilter::ParentStackFrame"* %8 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %8, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %8, i64 0, i32 1, i32 0, i32 1, i64 0
  %15 = bitcast %"class.WTF::Vector.26"* %12 to i8**
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %8, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 4, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %8, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %7, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIjS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer.27"* %13, %"class.WTF::VectorBuffer.27"* dereferenceable(32) %18, i64 0, i64 0) #9
  br i1 %3, label %19, label %55

19:                                               ; preds = %6
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %55, label %22

22:                                               ; preds = %19
  %23 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %24 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %23, i64 0, i32 1
  %25 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %24) #9
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %22
  %28 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %24, i8* %28) #9
  br label %29

29:                                               ; preds = %27, %22
  %30 = phi i8* [ %28, %27 ], [ %25, %22 ]
  %31 = bitcast i8* %30 to %"class.blink::ThreadState"**
  %32 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %32, i64 0, i32 9
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %55, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %32, i64 0, i32 13
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %37, align 8
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %32, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %41 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %40, align 8
  %42 = load atomic i64, i64* %11 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %41, i64 0, i32 0, i32 0
  %46 = inttoptr i64 %42 to i8*
  %47 = bitcast %"class.blink::MarkingVisitor"* %41 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, i64 5
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, align 8
  tail call void %50(%"class.blink::Visitor"* %45, i8* nonnull %46, i8* %46, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  %51 = load i64, i64* %37, align 8
  br label %52

52:                                               ; preds = %44, %36
  %53 = phi i64 [ %39, %36 ], [ %51, %44 ]
  %54 = add i64 %53, -1
  store i64 %54, i64* %37, align 8
  br label %55

55:                                               ; preds = %52, %29, %19, %6
  %56 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %7, i64 0, i32 1
  %57 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %7, i64 0, i32 1, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60, !prof !2

60:                                               ; preds = %55
  store i32 0, i32* %57, align 4
  br label %61

61:                                               ; preds = %60, %55
  %62 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %56, i64 0, i32 0, i32 0, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %7, i64 0, i32 1, i32 0, i32 1, i64 0
  %65 = bitcast i8* %64 to i32*
  %66 = icmp eq i32* %63, %65
  br i1 %66, label %69, label %67, !prof !3

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %56, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.27"* %68, i32* %63) #9
  br label %69

69:                                               ; preds = %67, %61
  store i32* null, i32** %62, align 8
  %70 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %8, i64 1
  %71 = getelementptr inbounds %"class.blink::SelectorFilter::ParentStackFrame", %"class.blink::SelectorFilter::ParentStackFrame"* %7, i64 1
  %72 = icmp eq %"class.blink::SelectorFilter::ParentStackFrame"* %71, %1
  br i1 %72, label %73, label %6

73:                                               ; preds = %69, %4
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #4

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.26"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.26"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !11}
