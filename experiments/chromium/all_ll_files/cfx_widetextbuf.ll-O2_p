; ModuleID = '../../third_party/pdfium/core/fxcrt/cfx_widetextbuf.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/cfx_widetextbuf.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_WideTextBuf = type { %class.CFX_BinaryBuf }
%class.CFX_BinaryBuf = type { i32 (...)**, i64, i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i32* }
%"class.pdfium::span.1" = type { %"class.fxcrt::UnownedPtr.2", i64 }
%"class.fxcrt::UnownedPtr.2" = type { i32* }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span.3" }
%"class.pdfium::span.3" = type { %"class.fxcrt::UnownedPtr.4", i64 }
%"class.fxcrt::UnownedPtr.4" = type { i32* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::StringViewTemplate.9" = type { %"class.pdfium::span.10" }
%"class.pdfium::span.10" = type { %"class.fxcrt::UnownedPtr.11", i64 }
%"class.fxcrt::UnownedPtr.11" = type { i8* }

$_ZN15CFX_WideTextBufD0Ev = comdat any

@_ZTV15CFX_WideTextBuf = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_BinaryBuf*)* @_ZN13CFX_BinaryBufD2Ev to i8*), i8* bitcast (void (%class.CFX_WideTextBuf*)* @_ZN15CFX_WideTextBufD0Ev to i8*), i8* bitcast (i64 (%class.CFX_WideTextBuf*)* @_ZNK15CFX_WideTextBuf9GetLengthEv to i8*)] }, align 8
@.str = private unnamed_addr constant [1 x i32] zeroinitializer, align 4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK15CFX_WideTextBuf9GetLengthEv(%class.CFX_WideTextBuf* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = lshr i64 %3, 2
  ret i64 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15CFX_WideTextBuf11GetWideSpanEv(%"class.pdfium::span"* noalias nocapture sret, %class.CFX_WideTextBuf* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %1, i64 0, i32 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 2
  %9 = bitcast %"class.pdfium::span"* %0 to i64*
  store i64 %5, i64* %9, align 8, !alias.scope !2
  %10 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %0, i64 0, i32 1
  store i64 %8, i64* %10, align 8, !alias.scope !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CFX_WideTextBuf11GetWideSpanEv(%"class.pdfium::span.1"* noalias nocapture sret, %class.CFX_WideTextBuf* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %1, i64 0, i32 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 2
  %9 = bitcast %"class.pdfium::span.1"* %0 to i64*
  store i64 %5, i64* %9, align 8
  %10 = getelementptr inbounds %"class.pdfium::span.1", %"class.pdfium::span.1"* %0, i64 0, i32 1
  store i64 %8, i64* %10, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CFX_WideTextBuf12AsStringViewEv(%"class.fxcrt::StringViewTemplate"* noalias nocapture sret, %class.CFX_WideTextBuf* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8, !noalias !5
  %6 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %1, i64 0, i32 0, i32 3
  %7 = load i64, i64* %6, align 8, !noalias !5
  %8 = lshr i64 %7, 2
  %9 = bitcast %"class.fxcrt::StringViewTemplate"* %0 to i64*
  store i64 %5, i64* %9, align 8
  %10 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 1
  store i64 %8, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CFX_WideTextBuf10MakeStringEv(%"class.fxcrt::WideString"* noalias sret, %class.CFX_WideTextBuf* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8, !noalias !8
  %7 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %1, i64 0, i32 0, i32 3
  %8 = load i64, i64* %7, align 8, !noalias !8
  %9 = lshr i64 %8, 2
  %10 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i64*
  store i64 %6, i64* %10, align 8, !alias.scope !13
  %11 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 1
  store i64 %9, i64* %11, align 8, !alias.scope !13
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* %0, %"class.fxcrt::StringViewTemplate"* nonnull %3) #11
  ret void
}

declare void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFX_WideTextBuf10AppendCharEw(%class.CFX_WideTextBuf*, i32 signext) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8, !noalias !14
  %5 = lshr i64 %4, 2
  %6 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0
  tail call void @_ZN13CFX_BinaryBuf9ExpandBufEm(%class.CFX_BinaryBuf* %6, i64 4) #11, !noalias !14
  %7 = load i64, i64* %3, align 8, !noalias !14
  %8 = add i64 %7, 4
  store i64 %8, i64* %3, align 8, !noalias !14
  %9 = lshr i64 %8, 2
  %10 = icmp ult i64 %9, %5
  br i1 %10, label %11, label %12, !prof !17

11:                                               ; preds = %2
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !noalias !18, !srcloc !21
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !noalias !18, !srcloc !22
  unreachable

12:                                               ; preds = %2
  %13 = icmp eq i64 %9, %5
  br i1 %13, label %14, label %15, !prof !17

14:                                               ; preds = %12
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !23
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !24
  unreachable

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %17 = bitcast i8** %16 to i32**
  %18 = load i32*, i32** %17, align 8, !noalias !25
  %19 = getelementptr inbounds i32, i32* %18, i64 %5
  store i32 %1, i32* %19, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFX_WideTextBuf13ExpandWideBufEm(%"class.pdfium::span"* noalias nocapture sret, %class.CFX_WideTextBuf*, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %1, i64 0, i32 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 2
  %7 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2, i64 4) #11
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = extractvalue { i64, i1 } %7, 0
  br i1 %8, label %10, label %11, !prof !17

10:                                               ; preds = %3
  tail call void @llvm.trap() #11
  unreachable

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %1, i64 0, i32 0
  tail call void @_ZN13CFX_BinaryBuf9ExpandBufEm(%class.CFX_BinaryBuf* %12, i64 %9) #11
  %13 = load i64, i64* %4, align 8
  %14 = add i64 %13, %9
  store i64 %14, i64* %4, align 8
  %15 = lshr i64 %14, 2
  %16 = icmp ult i64 %15, %6
  br i1 %16, label %17, label %18, !prof !17

17:                                               ; preds = %11
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !noalias !28, !srcloc !21
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !noalias !28, !srcloc !22
  unreachable

18:                                               ; preds = %11
  %19 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %20 = bitcast i8** %19 to i32**
  %21 = load i32*, i32** %20, align 8, !noalias !31
  %22 = sub nsw i64 %15, %6
  %23 = getelementptr inbounds i32, i32* %21, i64 %6
  %24 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %0, i64 0, i32 0, i32 0
  store i32* %23, i32** %24, align 8, !alias.scope !28
  %25 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %0, i64 0, i32 1
  store i64 %22, i64* %25, align 8, !alias.scope !28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFX_WideTextBuf6DeleteEii(%class.CFX_WideTextBuf*, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0
  %5 = sext i32 %1 to i64
  %6 = shl nsw i64 %5, 2
  %7 = sext i32 %2 to i64
  %8 = shl nsw i64 %7, 2
  tail call void @_ZN13CFX_BinaryBuf6DeleteEmm(%class.CFX_BinaryBuf* %4, i64 %6, i64 %8) #11
  ret void
}

declare void @_ZN13CFX_BinaryBuf6DeleteEmm(%class.CFX_BinaryBuf*, i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %class.CFX_WideTextBuf* @_ZN15CFX_WideTextBuflsEN5fxcrt18StringViewTemplateIcEE(%class.CFX_WideTextBuf* returned, %"class.fxcrt::StringViewTemplate.9"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.9", %"class.fxcrt::StringViewTemplate.9"* %1, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0, i32 3
  %6 = load i64, i64* %5, align 8, !noalias !34
  %7 = lshr i64 %6, 2
  %8 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %4, i64 4) #11
  %9 = extractvalue { i64, i1 } %8, 1
  %10 = extractvalue { i64, i1 } %8, 0
  br i1 %9, label %11, label %12, !prof !17

11:                                               ; preds = %2
  tail call void @llvm.trap() #11, !noalias !34
  unreachable

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0
  tail call void @_ZN13CFX_BinaryBuf9ExpandBufEm(%class.CFX_BinaryBuf* %13, i64 %10) #11, !noalias !34
  %14 = load i64, i64* %5, align 8, !noalias !34
  %15 = add i64 %14, %10
  store i64 %15, i64* %5, align 8, !noalias !34
  %16 = lshr i64 %15, 2
  %17 = icmp ult i64 %16, %7
  br i1 %17, label %18, label %19, !prof !17

18:                                               ; preds = %12
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !noalias !37, !srcloc !21
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !noalias !37, !srcloc !22
  unreachable

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %21 = bitcast i8** %20 to i32**
  %22 = load i32*, i32** %21, align 8, !noalias !40
  %23 = getelementptr inbounds i32, i32* %22, i64 %7
  %24 = load i64, i64* %3, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.9", %"class.fxcrt::StringViewTemplate.9"* %1, i64 0, i32 0, i32 0, i32 0
  %28 = sub nsw i64 %16, %7
  br label %30

29:                                               ; preds = %34, %19
  ret %class.CFX_WideTextBuf* %0

30:                                               ; preds = %26, %34
  %31 = phi i64 [ 0, %26 ], [ %40, %34 ]
  %32 = icmp eq i64 %31, %28
  br i1 %32, label %33, label %34, !prof !17

33:                                               ; preds = %30
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !23
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !24
  unreachable

34:                                               ; preds = %30
  %35 = load i8*, i8** %27, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 %31
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = getelementptr inbounds i32, i32* %23, i64 %31
  store i32 %38, i32* %39, align 4
  %40 = add nuw i64 %31, 1
  %41 = load i64, i64* %3, align 8
  %42 = icmp ult i64 %40, %41
  br i1 %42, label %30, label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %class.CFX_WideTextBuf* @_ZN15CFX_WideTextBuflsEN5fxcrt18StringViewTemplateIwEE(%class.CFX_WideTextBuf* returned, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0
  %4 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 2
  tail call void @_ZN13CFX_BinaryBuf11AppendBlockEPKvm(%class.CFX_BinaryBuf* %3, i8* %5, i64 %8) #11
  ret %class.CFX_WideTextBuf* %0
}

declare void @_ZN13CFX_BinaryBuf11AppendBlockEPKvm(%class.CFX_BinaryBuf*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %class.CFX_WideTextBuf* @_ZN15CFX_WideTextBuflsERKN5fxcrt10WideStringE(%class.CFX_WideTextBuf* returned, %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %6 = icmp eq %"class.fxcrt::StringDataTemplate"* %5, null
  %7 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 3
  %8 = bitcast [1 x i32]* %7 to i8*
  %9 = select i1 %6, i8* bitcast ([1 x i32]* @.str to i8*), i8* %8
  br i1 %6, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 2
  br label %14

14:                                               ; preds = %2, %10
  %15 = phi i64 [ %13, %10 ], [ 0, %2 ]
  tail call void @_ZN13CFX_BinaryBuf11AppendBlockEPKvm(%class.CFX_BinaryBuf* %3, i8* %9, i64 %15) #11
  ret %class.CFX_WideTextBuf* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %class.CFX_WideTextBuf* @_ZN15CFX_WideTextBuflsEi(%class.CFX_WideTextBuf* returned, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca [32 x i8], align 16
  %4 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 32, i1 false)
  %5 = call i8* @FXSYS_itoa(i32 %1, i8* nonnull %4, i32 10) #11
  %6 = call i64 @strlen(i8* nonnull %4) #12
  %7 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0, i32 3
  %8 = load i64, i64* %7, align 8, !noalias !43
  %9 = lshr i64 %8, 2
  %10 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %6, i64 4) #11
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  br i1 %11, label %13, label %14, !prof !17

13:                                               ; preds = %2
  call void @llvm.trap() #11, !noalias !43
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0
  call void @_ZN13CFX_BinaryBuf9ExpandBufEm(%class.CFX_BinaryBuf* %15, i64 %12) #11, !noalias !43
  %16 = load i64, i64* %7, align 8, !noalias !43
  %17 = add i64 %16, %12
  store i64 %17, i64* %7, align 8, !noalias !43
  %18 = lshr i64 %17, 2
  %19 = icmp ult i64 %18, %9
  br i1 %19, label %20, label %21, !prof !17

20:                                               ; preds = %14
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !noalias !46, !srcloc !21
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !noalias !46, !srcloc !22
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %23 = bitcast i8** %22 to i32**
  %24 = load i32*, i32** %23, align 8, !noalias !49
  %25 = getelementptr inbounds i32, i32* %24, i64 %9
  %26 = icmp eq i64 %6, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = sub nsw i64 %18, %9
  br label %30

29:                                               ; preds = %34, %21
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #11
  ret %class.CFX_WideTextBuf* %0

30:                                               ; preds = %34, %27
  %31 = phi i64 [ %39, %34 ], [ 0, %27 ]
  %32 = icmp eq i64 %31, %28
  br i1 %32, label %33, label %34, !prof !17

33:                                               ; preds = %30
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !23
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !24
  unreachable

34:                                               ; preds = %30
  %35 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %31
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = getelementptr inbounds i32, i32* %25, i64 %31
  store i32 %37, i32* %38, align 4
  %39 = add nuw i64 %31, 1
  %40 = icmp eq i64 %39, %6
  br i1 %40, label %29, label %30
}

declare i8* @FXSYS_itoa(i32, i8*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %class.CFX_WideTextBuf* @_ZN15CFX_WideTextBuflsEd(%class.CFX_WideTextBuf* returned, double) local_unnamed_addr #2 align 2 {
  %3 = alloca [32 x i8], align 16
  %4 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #11
  %5 = fptrunc double %1 to float
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 32, i1 false)
  %6 = call i64 @_Z13FloatToStringfPc(float %5, i8* nonnull %4) #11
  %7 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0, i32 3
  %8 = load i64, i64* %7, align 8, !noalias !52
  %9 = lshr i64 %8, 2
  %10 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %6, i64 4) #11
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  br i1 %11, label %13, label %14, !prof !17

13:                                               ; preds = %2
  call void @llvm.trap() #11, !noalias !52
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0
  call void @_ZN13CFX_BinaryBuf9ExpandBufEm(%class.CFX_BinaryBuf* %15, i64 %12) #11, !noalias !52
  %16 = load i64, i64* %7, align 8, !noalias !52
  %17 = add i64 %16, %12
  store i64 %17, i64* %7, align 8, !noalias !52
  %18 = lshr i64 %17, 2
  %19 = icmp ult i64 %18, %9
  br i1 %19, label %20, label %21, !prof !17

20:                                               ; preds = %14
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !noalias !55, !srcloc !21
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !noalias !55, !srcloc !22
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %23 = bitcast i8** %22 to i32**
  %24 = load i32*, i32** %23, align 8, !noalias !58
  %25 = getelementptr inbounds i32, i32* %24, i64 %9
  %26 = icmp eq i64 %6, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = sub nsw i64 %18, %9
  br label %30

29:                                               ; preds = %34, %21
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #11
  ret %class.CFX_WideTextBuf* %0

30:                                               ; preds = %34, %27
  %31 = phi i64 [ %39, %34 ], [ 0, %27 ]
  %32 = icmp eq i64 %31, %28
  br i1 %32, label %33, label %34, !prof !17

33:                                               ; preds = %30
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !23
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !24
  unreachable

34:                                               ; preds = %30
  %35 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %31
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = getelementptr inbounds i32, i32* %25, i64 %31
  store i32 %37, i32* %38, align 4
  %39 = add nuw i64 %31, 1
  %40 = icmp eq i64 %39, %6
  br i1 %40, label %29, label %30
}

declare i64 @_Z13FloatToStringfPc(float, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %class.CFX_WideTextBuf* @_ZN15CFX_WideTextBuflsEPKw(%class.CFX_WideTextBuf* returned, i32*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0
  %4 = bitcast i32* %1 to i8*
  %5 = tail call i64 @wcslen(i32* %1) #12
  %6 = shl i64 %5, 2
  tail call void @_ZN13CFX_BinaryBuf11AppendBlockEPKvm(%class.CFX_BinaryBuf* %3, i8* %4, i64 %6) #11
  ret %class.CFX_WideTextBuf* %0
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @wcslen(i32* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %class.CFX_WideTextBuf* @_ZN15CFX_WideTextBuflsERKS_(%class.CFX_WideTextBuf* returned, %class.CFX_WideTextBuf* nocapture readonly dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %1, i64 0, i32 0, i32 3
  %7 = load i64, i64* %6, align 8
  tail call void @_ZN13CFX_BinaryBuf11AppendBlockEPKvm(%class.CFX_BinaryBuf* %3, i8* %5, i64 %7) #11
  ret %class.CFX_WideTextBuf* %0
}

declare void @_ZN13CFX_BinaryBuf9ExpandBufEm(%class.CFX_BinaryBuf*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN13CFX_BinaryBufD2Ev(%class.CFX_BinaryBuf*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15CFX_WideTextBufD0Ev(%class.CFX_WideTextBuf*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.CFX_WideTextBuf, %class.CFX_WideTextBuf* %0, i64 0, i32 0
  tail call void @_ZN13CFX_BinaryBufD2Ev(%class.CFX_BinaryBuf* %2) #11
  %3 = bitcast %class.CFX_WideTextBuf* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium9make_spanIwEENS_4spanIT_EEPS2_m: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium9make_spanIwEENS_4spanIT_EEPS2_m"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK15CFX_WideTextBuf11GetWideSpanEv: argument 0"}
!7 = distinct !{!7, !"_ZNK15CFX_WideTextBuf11GetWideSpanEv"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNK15CFX_WideTextBuf11GetWideSpanEv: argument 0"}
!10 = distinct !{!10, !"_ZNK15CFX_WideTextBuf11GetWideSpanEv"}
!11 = distinct !{!11, !12, !"_ZNK15CFX_WideTextBuf12AsStringViewEv: argument 0"}
!12 = distinct !{!12, !"_ZNK15CFX_WideTextBuf12AsStringViewEv"}
!13 = !{!11}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN15CFX_WideTextBuf13ExpandWideBufEm: argument 0"}
!16 = distinct !{!16, !"_ZN15CFX_WideTextBuf13ExpandWideBufEm"}
!17 = !{!"branch_weights", i32 1, i32 2000}
!18 = !{!19, !15}
!19 = distinct !{!19, !20, !"_ZNK6pdfium4spanIwE7subspanEmm: argument 0"}
!20 = distinct !{!20, !"_ZNK6pdfium4spanIwE7subspanEmm"}
!21 = !{i32 -2143840236}
!22 = !{i32 -2143840215}
!23 = !{i32 -2143839110}
!24 = !{i32 -2143839089}
!25 = !{!26, !15}
!26 = distinct !{!26, !27, !"_ZN15CFX_WideTextBuf11GetWideSpanEv: argument 0"}
!27 = distinct !{!27, !"_ZN15CFX_WideTextBuf11GetWideSpanEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK6pdfium4spanIwE7subspanEmm: argument 0"}
!30 = distinct !{!30, !"_ZNK6pdfium4spanIwE7subspanEmm"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN15CFX_WideTextBuf11GetWideSpanEv: argument 0"}
!33 = distinct !{!33, !"_ZN15CFX_WideTextBuf11GetWideSpanEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN15CFX_WideTextBuf13ExpandWideBufEm: argument 0"}
!36 = distinct !{!36, !"_ZN15CFX_WideTextBuf13ExpandWideBufEm"}
!37 = !{!38, !35}
!38 = distinct !{!38, !39, !"_ZNK6pdfium4spanIwE7subspanEmm: argument 0"}
!39 = distinct !{!39, !"_ZNK6pdfium4spanIwE7subspanEmm"}
!40 = !{!41, !35}
!41 = distinct !{!41, !42, !"_ZN15CFX_WideTextBuf11GetWideSpanEv: argument 0"}
!42 = distinct !{!42, !"_ZN15CFX_WideTextBuf11GetWideSpanEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN15CFX_WideTextBuf13ExpandWideBufEm: argument 0"}
!45 = distinct !{!45, !"_ZN15CFX_WideTextBuf13ExpandWideBufEm"}
!46 = !{!47, !44}
!47 = distinct !{!47, !48, !"_ZNK6pdfium4spanIwE7subspanEmm: argument 0"}
!48 = distinct !{!48, !"_ZNK6pdfium4spanIwE7subspanEmm"}
!49 = !{!50, !44}
!50 = distinct !{!50, !51, !"_ZN15CFX_WideTextBuf11GetWideSpanEv: argument 0"}
!51 = distinct !{!51, !"_ZN15CFX_WideTextBuf11GetWideSpanEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN15CFX_WideTextBuf13ExpandWideBufEm: argument 0"}
!54 = distinct !{!54, !"_ZN15CFX_WideTextBuf13ExpandWideBufEm"}
!55 = !{!56, !53}
!56 = distinct !{!56, !57, !"_ZNK6pdfium4spanIwE7subspanEmm: argument 0"}
!57 = distinct !{!57, !"_ZNK6pdfium4spanIwE7subspanEmm"}
!58 = !{!59, !53}
!59 = distinct !{!59, !60, !"_ZN15CFX_WideTextBuf11GetWideSpanEv: argument 0"}
!60 = distinct !{!60, !"_ZN15CFX_WideTextBuf11GetWideSpanEv"}
