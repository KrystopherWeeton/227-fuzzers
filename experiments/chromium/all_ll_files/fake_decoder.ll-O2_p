; ModuleID = '../../third_party/webrtc/test/fake_decoder.cc'
source_filename = "../../third_party/webrtc/test/fake_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rtc::scoped_refptr.62" = type { %"class.webrtc::VideoFrameBuffer"* }
%"class.webrtc::VideoFrameBuffer" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%union.anon.22 = type { %"struct.webrtc::HdrMetadata" }
%"struct.webrtc::HdrMetadata" = type { %"struct.webrtc::HdrMasteringMetadata", i32, i32 }
%"struct.webrtc::HdrMasteringMetadata" = type { %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", float, float }
%"struct.webrtc::HdrMasteringMetadata::Chromaticity" = type { float, float }
%union.anon = type { i32 }
%union.anon.67 = type { %"struct.webrtc::VideoFrame::UpdateRect" }
%"struct.webrtc::VideoFrame::UpdateRect" = type { i32, i32, i32, i32 }
%"class.webrtc::RtpPacketInfos" = type { %"class.rtc::scoped_refptr.28" }
%"class.rtc::scoped_refptr.28" = type { %"class.webrtc::RtpPacketInfos::Data"* }
%"class.webrtc::RtpPacketInfos::Data" = type { %"class.rtc::RefCountedBase.base", %"class.std::__1::vector" }
%"class.rtc::RefCountedBase.base" = type <{ i32 (...)**, %"class.webrtc::webrtc_impl::RefCounter" }>
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::RtpPacketInfo"*, %"class.webrtc::RtpPacketInfo"*, %"class.std::__1::__compressed_pair.52" }
%"class.webrtc::RtpPacketInfo" = type { i32, %"class.std::__1::vector.30", i32, %"class.absl::optional.37", %"class.absl::optional.42", %"class.absl::optional.47", %"class.webrtc::Timestamp" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i32*, i32*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i32* }
%"class.absl::optional.37" = type { %"class.absl::optional_internal::optional_data.38" }
%"class.absl::optional_internal::optional_data.38" = type { %"class.absl::optional_internal::optional_data_base.39" }
%"class.absl::optional_internal::optional_data_base.39" = type { %"class.absl::optional_internal::optional_data_dtor_base.40" }
%"class.absl::optional_internal::optional_data_dtor_base.40" = type { i8, %union.anon.41 }
%union.anon.41 = type { i8 }
%"class.absl::optional.42" = type { %"class.absl::optional_internal::optional_data.43" }
%"class.absl::optional_internal::optional_data.43" = type { %"class.absl::optional_internal::optional_data_base.44" }
%"class.absl::optional_internal::optional_data_base.44" = type { %"class.absl::optional_internal::optional_data_dtor_base.45" }
%"class.absl::optional_internal::optional_data_dtor_base.45" = type { i8, %union.anon.46 }
%union.anon.46 = type { %"struct.webrtc::AbsoluteCaptureTime" }
%"struct.webrtc::AbsoluteCaptureTime" = type { i64, %"class.absl::optional.47" }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { i64 }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.webrtc::RtpPacketInfo"* }
%union.anon.72 = type { %"struct.webrtc::VideoFrame::ProcessingTime" }
%"struct.webrtc::VideoFrame::ProcessingTime" = type { %"class.webrtc::Timestamp", %"class.webrtc::Timestamp" }
%"class.webrtc::test::FakeDecoder" = type <{ %"class.webrtc::VideoDecoder", %"class.webrtc::DecodedImageCallback"*, i32, i32, %"class.std::__1::unique_ptr", %"class.webrtc::TaskQueueFactory"*, i32, [4 x i8] }>
%"class.webrtc::VideoDecoder" = type { i32 (...)** }
%"class.webrtc::DecodedImageCallback" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.rtc::TaskQueue"* }
%"class.rtc::TaskQueue" = type { %"class.webrtc::TaskQueueBase"* }
%"class.webrtc::TaskQueueBase" = type { i32 (...)** }
%"class.webrtc::TaskQueueFactory" = type { i32 (...)** }
%"class.webrtc::VideoCodec" = type { i32, i16, i16, i32, i32, i32, i32, i8, i32, i8, [3 x %"struct.webrtc::SpatialLayer"], [5 x %"struct.webrtc::SpatialLayer"], i32, i8, %"class.absl::optional", %"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds", i8, %"union.webrtc::VideoCodecUnion", %"class.std::__1::basic_string" }
%"struct.webrtc::SpatialLayer" = type { i16, i16, float, i8, i32, i32, i32, i32, i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds" = type { i64, i16 }
%"union.webrtc::VideoCodecUnion" = type { %"struct.webrtc::VideoCodecVP9" }
%"struct.webrtc::VideoCodecVP9" = type { i32, i8, i8, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.3 }
%union.anon.3 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webrtc::EncodedImage" = type <{ i32, i32, i64, i64, i32, i32, i8, [3 x i8], i32, %"struct.webrtc::VideoPlayoutDelay", %"struct.webrtc::EncodedImage::Timing", %"class.rtc::scoped_refptr", i64, i32, %"class.absl::optional", [4 x i8], %"class.std::__1::map", %"class.absl::optional.13", %"class.absl::optional.23", [4 x i8], %"class.webrtc::RtpPacketInfos", i8, [7 x i8] }>
%"struct.webrtc::VideoPlayoutDelay" = type { i32, i32 }
%"struct.webrtc::EncodedImage::Timing" = type { i8, i64, i64, i64, i64, i64, i64, i64, i64 }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::EncodedImageBufferInterface"* }
%"class.webrtc::EncodedImageBufferInterface" = type { %"class.rtc::RefCountInterface" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"class.webrtc::ColorSpace" }
%"class.webrtc::ColorSpace" = type { i8, i8, i8, i32, i32, i32, %"class.absl::optional.18" }
%"class.absl::optional.18" = type { %"class.absl::optional_internal::optional_data.19" }
%"class.absl::optional_internal::optional_data.19" = type { %"class.absl::optional_internal::optional_data_base.20" }
%"class.absl::optional_internal::optional_data_base.20" = type { %"class.absl::optional_internal::optional_data_dtor_base.21" }
%"class.absl::optional_internal::optional_data_dtor_base.21" = type { i8, %union.anon.22 }
%"class.absl::optional.23" = type { %"class.absl::optional_internal::optional_data.24" }
%"class.absl::optional_internal::optional_data.24" = type { %"class.absl::optional_internal::optional_data_base.25" }
%"class.absl::optional_internal::optional_data_base.25" = type { %"class.absl::optional_internal::optional_data_dtor_base.26" }
%"class.absl::optional_internal::optional_data_dtor_base.26" = type { i8, %union.anon.27 }
%union.anon.27 = type { i16 }
%"class.rtc::scoped_refptr.57" = type { %"class.webrtc::I420Buffer"* }
%"class.webrtc::I420Buffer" = type { %"class.webrtc::I420BufferInterface", i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.58" }
%"class.webrtc::I420BufferInterface" = type { %"class.webrtc::PlanarYuv8Buffer" }
%"class.webrtc::PlanarYuv8Buffer" = type { %"class.webrtc::PlanarYuvBuffer" }
%"class.webrtc::PlanarYuvBuffer" = type { %"class.webrtc::VideoFrameBuffer" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i8* }
%"class.webrtc::VideoFrame" = type { i16, %"class.rtc::scoped_refptr.62", i32, i64, i64, i32, %"class.absl::optional.13", %"class.absl::optional", %"class.absl::optional.63", %"class.webrtc::RtpPacketInfos", %"class.absl::optional.68" }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%"class.absl::optional.68" = type { %"class.absl::optional_internal::optional_data.69" }
%"class.absl::optional_internal::optional_data.69" = type { %"class.absl::optional_internal::optional_data_base.70" }
%"class.absl::optional_internal::optional_data_base.70" = type { %"class.absl::optional_internal::optional_data_dtor_base.71" }
%"class.absl::optional_internal::optional_data_dtor_base.71" = type { i8, %union.anon.72 }
%"class.webrtc::VideoFrame::Builder" = type { i16, %"class.rtc::scoped_refptr.62", i64, i32, i64, i32, %"class.absl::optional.13", %"class.absl::optional.63", %"class.webrtc::RtpPacketInfos" }
%class.anon = type { %"class.webrtc::VideoFrame", %"class.webrtc::test::FakeDecoder"* }
%"class.webrtc::QueuedTask" = type { i32 (...)** }
%"struct.webrtc::VideoDecoder::DecoderInfo" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webrtc::test::FakeH264Decoder" = type { %"class.webrtc::test::FakeDecoder.base", [4 x i8] }
%"class.webrtc::test::FakeDecoder.base" = type <{ %"class.webrtc::VideoDecoder", %"class.webrtc::DecodedImageCallback"*, i32, i32, %"class.std::__1::unique_ptr", %"class.webrtc::TaskQueueFactory"*, i32 }>
%"class.webrtc::webrtc_new_closure_impl::ClosureTask" = type { %"class.webrtc::QueuedTask", %class.anon }

$_ZNK6webrtc12EncodedImage4dataEv = comdat any

$_ZN6webrtc4test11FakeDecoderD2Ev = comdat any

$_ZN6webrtc4test11FakeDecoderD0Ev = comdat any

$_ZN6webrtc4test15FakeH264DecoderD0Ev = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_NS4_ILS5_9EPKcEEEEEvS8_iS8_DpRKT_E1t = comdat any

@_ZTVN6webrtc4test11FakeDecoderE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::test::FakeDecoder"*)* @_ZN6webrtc4test11FakeDecoderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::test::FakeDecoder"*)* @_ZN6webrtc4test11FakeDecoderD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeDecoder"*, %"class.webrtc::VideoCodec"*, i32)* @_ZN6webrtc4test11FakeDecoder10InitDecodeEPKNS_10VideoCodecEi to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeDecoder"*, %"class.webrtc::EncodedImage"*, i1, i64)* @_ZN6webrtc4test11FakeDecoder6DecodeERKNS_12EncodedImageEbl to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeDecoder"*, %"class.webrtc::DecodedImageCallback"*)* @_ZN6webrtc4test11FakeDecoder30RegisterDecodeCompleteCallbackEPNS_20DecodedImageCallbackE to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeDecoder"*)* @_ZN6webrtc4test11FakeDecoder7ReleaseEv to i8*), i8* bitcast (void (%"struct.webrtc::VideoDecoder::DecoderInfo"*, %"class.webrtc::test::FakeDecoder"*)* @_ZNK6webrtc4test11FakeDecoder14GetDecoderInfoEv to i8*), i8* bitcast (i8* (%"class.webrtc::test::FakeDecoder"*)* @_ZNK6webrtc4test11FakeDecoder18ImplementationNameEv to i8*)] }, align 8
@.str = private unnamed_addr constant [46 x i8] c"../../third_party/webrtc/test/fake_decoder.cc\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"task_queue_factory_\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"fake_decoder\00", align 1
@_ZN6webrtc4test11FakeDecoder19kImplementationNameE = hidden local_unnamed_addr global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), align 8
@__const._ZN6webrtc4test15FakeH264Decoder6DecodeERKNS_12EncodedImageEbl.kStartCode = private unnamed_addr constant [4 x i8] c"\00\00\00\01", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"value == input.data()[i]\00", align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"Bitstream mismatch between sender and receiver.\00", align 1
@_ZTVN6webrtc4test15FakeH264DecoderE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::test::FakeDecoder"*)* @_ZN6webrtc4test11FakeDecoderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::test::FakeH264Decoder"*)* @_ZN6webrtc4test15FakeH264DecoderD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeDecoder"*, %"class.webrtc::VideoCodec"*, i32)* @_ZN6webrtc4test11FakeDecoder10InitDecodeEPKNS_10VideoCodecEi to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeH264Decoder"*, %"class.webrtc::EncodedImage"*, i1, i64)* @_ZN6webrtc4test15FakeH264Decoder6DecodeERKNS_12EncodedImageEbl to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeDecoder"*, %"class.webrtc::DecodedImageCallback"*)* @_ZN6webrtc4test11FakeDecoder30RegisterDecodeCompleteCallbackEPNS_20DecodedImageCallbackE to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeDecoder"*)* @_ZN6webrtc4test11FakeDecoder7ReleaseEv to i8*), i8* bitcast (void (%"struct.webrtc::VideoDecoder::DecoderInfo"*, %"class.webrtc::test::FakeDecoder"*)* @_ZNK6webrtc4test11FakeDecoder14GetDecoderInfoEv to i8*), i8* bitcast (i8* (%"class.webrtc::test::FakeDecoder"*)* @_ZNK6webrtc4test11FakeDecoder18ImplementationNameEv to i8*)] }, align 8
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = linkonce_odr hidden constant [1 x i8] zeroinitializer, comdat, align 1
@"_ZTVN6webrtc23webrtc_new_closure_impl11ClosureTaskIZNS_4test11FakeDecoder6DecodeERKNS_12EncodedImageEblE3$_1EE" = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::webrtc_new_closure_impl::ClosureTask"*)* @"_ZN6webrtc23webrtc_new_closure_impl11ClosureTaskIZNS_4test11FakeDecoder6DecodeERKNS_12EncodedImageEblE3$_1ED2Ev" to i8*), i8* bitcast (void (%"class.webrtc::webrtc_new_closure_impl::ClosureTask"*)* @"_ZN6webrtc23webrtc_new_closure_impl11ClosureTaskIZNS_4test11FakeDecoder6DecodeERKNS_12EncodedImageEblE3$_1ED0Ev" to i8*), i8* bitcast (i1 (%"class.webrtc::webrtc_new_closure_impl::ClosureTask"*)* @"_ZN6webrtc23webrtc_new_closure_impl11ClosureTaskIZNS_4test11FakeDecoder6DecodeERKNS_12EncodedImageEblE3$_1E3RunEv" to i8*)] }, align 8
@"__const._ZZN6webrtc4test11FakeDecoder6DecodeERKNS_12EncodedImageEblENK3$_1clEv.copy" = private unnamed_addr constant { i16, [6 x i8], %"class.rtc::scoped_refptr.62", i32, [4 x i8], i64, i64, i32, { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.22 } } } } } } } } } }, { { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon.67 } } } }, %"class.webrtc::RtpPacketInfos", { { { { i8, [7 x i8], %union.anon.72 } } } } } { i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.rtc::scoped_refptr.62" { %"class.webrtc::VideoFrameBuffer"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::VideoFrameBuffer"*) }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.22 } } } } } } } } } } { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.22 } } } } } } } } } { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.22 } } } } } } } } { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.22 } } } } } } } { i8 -86, [3 x i8] c"\AA\AA\AA", { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.22 } } } } } } { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.22 } } } } } { i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, { { { { i8, [3 x i8], %union.anon.22 } } } } { { { { i8, [3 x i8], %union.anon.22 } } } { { { i8, [3 x i8], %union.anon.22 } } { { i8, [3 x i8], %union.anon.22 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.22 { %"struct.webrtc::HdrMetadata" { %"struct.webrtc::HdrMasteringMetadata" { %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 } } } } } } } } } } } }, { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.67 } } } } { { { { i8, [3 x i8], %union.anon.67 } } } { { { i8, [3 x i8], %union.anon.67 } } { { i8, [3 x i8], %union.anon.67 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.67 { %"struct.webrtc::VideoFrame::UpdateRect" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 } } } } } }, %"class.webrtc::RtpPacketInfos" { %"class.rtc::scoped_refptr.28" { %"class.webrtc::RtpPacketInfos::Data"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::RtpPacketInfos::Data"*) } }, { { { { i8, [7 x i8], %union.anon.72 } } } } { { { { i8, [7 x i8], %union.anon.72 } } } { { { i8, [7 x i8], %union.anon.72 } } { { i8, [7 x i8], %union.anon.72 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.72 { %"struct.webrtc::VideoFrame::ProcessingTime" { %"class.webrtc::Timestamp" { %"class.webrtc::rtc_units_impl::UnitBase" { i64 -6148914691236517206 } }, %"class.webrtc::Timestamp" { %"class.webrtc::rtc_units_impl::UnitBase" { i64 -6148914691236517206 } } } } } } } } }, align 8
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_NS4_ILS5_9EPKcEEEEEvS8_iS8_DpRKT_E1t = linkonce_odr hidden constant [5 x i8] c"\0D\01\01\09\00", comdat, align 1

@_ZN6webrtc4test11FakeDecoderC1Ev = hidden unnamed_addr alias void (%"class.webrtc::test::FakeDecoder"*), void (%"class.webrtc::test::FakeDecoder"*)* @_ZN6webrtc4test11FakeDecoderC2Ev
@_ZN6webrtc4test11FakeDecoderC1EPNS_16TaskQueueFactoryE = hidden unnamed_addr alias void (%"class.webrtc::test::FakeDecoder"*, %"class.webrtc::TaskQueueFactory"*), void (%"class.webrtc::test::FakeDecoder"*, %"class.webrtc::TaskQueueFactory"*)* @_ZN6webrtc4test11FakeDecoderC2EPNS_16TaskQueueFactoryE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc4test11FakeDecoderC2Ev(%"class.webrtc::test::FakeDecoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6webrtc4test11FakeDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 1
  store %"class.webrtc::DecodedImageCallback"* null, %"class.webrtc::DecodedImageCallback"** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 2
  store i32 320, i32* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 3
  store i32 180, i32* %5, align 4
  %6 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 4
  %7 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc4test11FakeDecoderC2EPNS_16TaskQueueFactoryE(%"class.webrtc::test::FakeDecoder"* nocapture, %"class.webrtc::TaskQueueFactory"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6webrtc4test11FakeDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 1
  store %"class.webrtc::DecodedImageCallback"* null, %"class.webrtc::DecodedImageCallback"** %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 2
  store i32 320, i32* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 3
  store i32 180, i32* %6, align 4
  %7 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 4
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 5
  store %"class.webrtc::TaskQueueFactory"* %1, %"class.webrtc::TaskQueueFactory"** %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 6
  store i32 0, i32* %10, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6webrtc4test11FakeDecoder10InitDecodeEPKNS_10VideoCodecEi(%"class.webrtc::test::FakeDecoder"* nocapture readnone, %"class.webrtc::VideoCodec"* nocapture readnone, i32) unnamed_addr #1 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc4test11FakeDecoder6DecodeERKNS_12EncodedImageEbl(%"class.webrtc::test::FakeDecoder"*, %"class.webrtc::EncodedImage"* nocapture readonly dereferenceable(272), i1 zeroext, i64) unnamed_addr #2 align 2 {
  %5 = alloca %"class.rtc::scoped_refptr.57", align 8
  %6 = alloca %"class.webrtc::VideoFrame", align 8
  %7 = alloca %"class.webrtc::VideoFrame::Builder", align 8
  %8 = alloca %"class.rtc::scoped_refptr.62", align 8
  %9 = alloca %class.anon, align 8
  %10 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 2
  store i32 %11, i32* %18, align 8
  %19 = load i32, i32* %14, align 4
  %20 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 3
  store i32 %19, i32* %20, align 4
  br label %21

21:                                               ; preds = %13, %4, %17
  %22 = bitcast %"class.rtc::scoped_refptr.57"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  %23 = getelementptr inbounds %"class.rtc::scoped_refptr.57", %"class.rtc::scoped_refptr.57"* %5, i64 0, i32 0
  store %"class.webrtc::I420Buffer"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::I420Buffer"*), %"class.webrtc::I420Buffer"** %23, align 8
  %24 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  call void @_ZN6webrtc10I420Buffer6CreateEii(%"class.rtc::scoped_refptr.57"* nonnull sret %5, i32 %25, i32 %27) #14
  %28 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %23, align 8
  call void @_ZN6webrtc10I420Buffer8SetBlackEPS0_(%"class.webrtc::I420Buffer"* %28) #14
  %29 = bitcast %"class.webrtc::VideoFrame"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %29) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 bitcast ({ i16, [6 x i8], %"class.rtc::scoped_refptr.62", i32, [4 x i8], i64, i64, i32, { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.22 } } } } } } } } } }, { { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon.67 } } } }, %"class.webrtc::RtpPacketInfos", { { { { i8, [7 x i8], %union.anon.72 } } } } }* @"__const._ZZN6webrtc4test11FakeDecoder6DecodeERKNS_12EncodedImageEblENK3$_1clEv.copy" to i8*), i64 176, i1 false)
  %30 = bitcast %"class.webrtc::VideoFrame::Builder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %30) #14
  call void @_ZN6webrtc10VideoFrame7BuilderC1Ev(%"class.webrtc::VideoFrame::Builder"* nonnull %7) #14
  %31 = bitcast %"class.rtc::scoped_refptr.62"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.rtc::scoped_refptr.62", %"class.rtc::scoped_refptr.62"* %8, i64 0, i32 0
  %33 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %23, align 8
  %34 = getelementptr inbounds %"class.webrtc::I420Buffer", %"class.webrtc::I420Buffer"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.webrtc::VideoFrameBuffer"* %34, %"class.webrtc::VideoFrameBuffer"** %32, align 8
  %35 = icmp eq %"class.webrtc::I420Buffer"* %33, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %21
  %37 = getelementptr inbounds %"class.webrtc::I420Buffer", %"class.webrtc::I420Buffer"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.webrtc::I420Buffer"* %33 to void (%"class.rtc::RefCountInterface"*)***
  %39 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %38, align 8
  %40 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %39, align 8
  call void %40(%"class.rtc::RefCountInterface"* %37) #14
  br label %41

41:                                               ; preds = %21, %36
  %42 = call dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder22set_video_frame_bufferERKN3rtc13scoped_refptrINS_16VideoFrameBufferEEE(%"class.webrtc::VideoFrame::Builder"* nonnull %7, %"class.rtc::scoped_refptr.62"* nonnull dereferenceable(8) %8) #14
  %43 = call dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder12set_rotationENS_13VideoRotationE(%"class.webrtc::VideoFrame::Builder"* %42, i32 0) #14
  %44 = call dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder16set_timestamp_msEl(%"class.webrtc::VideoFrame::Builder"* %43, i64 %3) #14
  call void @_ZN6webrtc10VideoFrame7Builder5buildEv(%"class.webrtc::VideoFrame"* nonnull sret %6, %"class.webrtc::VideoFrame::Builder"* %44) #14
  %45 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %32, align 8
  %46 = icmp eq %"class.webrtc::VideoFrameBuffer"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %45, i64 0, i32 0
  %49 = bitcast %"class.webrtc::VideoFrameBuffer"* %45 to i32 (%"class.rtc::RefCountInterface"*)***
  %50 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %50, i64 1
  %52 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %51, align 8
  %53 = call i32 %52(%"class.rtc::RefCountInterface"* %48) #14
  br label %54

54:                                               ; preds = %41, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  call void @_ZN6webrtc10VideoFrame7BuilderD1Ev(%"class.webrtc::VideoFrame::Builder"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %30) #14
  %55 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 13
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"class.webrtc::VideoFrame", %"class.webrtc::VideoFrame"* %6, i64 0, i32 2
  store i32 %56, i32* %57, align 8
  %58 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.webrtc::VideoFrame", %"class.webrtc::VideoFrame"* %6, i64 0, i32 3
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 6
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.rtc::TaskQueue"*, %"class.rtc::TaskQueue"** %65, align 8
  %67 = icmp eq %"class.rtc::TaskQueue"* %66, null
  br i1 %67, label %68, label %76

68:                                               ; preds = %64, %54
  %69 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 1
  %70 = load %"class.webrtc::DecodedImageCallback"*, %"class.webrtc::DecodedImageCallback"** %69, align 8
  %71 = bitcast %"class.webrtc::DecodedImageCallback"* %70 to i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)***
  %72 = load i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)**, i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)*** %71, align 8
  %73 = getelementptr inbounds i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)*, i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)** %72, i64 2
  %74 = load i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)*, i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)** %73, align 8
  %75 = call i32 %74(%"class.webrtc::DecodedImageCallback"* %70, %"class.webrtc::VideoFrame"* nonnull dereferenceable(176) %6) #14
  br label %90

76:                                               ; preds = %64
  %77 = bitcast %class.anon* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %77) #14
  %78 = getelementptr inbounds %class.anon, %class.anon* %9, i64 0, i32 0
  call void @_ZN6webrtc10VideoFrameC1ERKS0_(%"class.webrtc::VideoFrame"* nonnull %78, %"class.webrtc::VideoFrame"* nonnull dereferenceable(176) %6) #14
  %79 = getelementptr inbounds %class.anon, %class.anon* %9, i64 0, i32 1
  store %"class.webrtc::test::FakeDecoder"* %0, %"class.webrtc::test::FakeDecoder"** %79, align 8
  %80 = load i32, i32* %61, align 8
  %81 = call i8* @_Znwm(i64 192) #15
  %82 = bitcast i8* %81 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVN6webrtc23webrtc_new_closure_impl11ClosureTaskIZNS_4test11FakeDecoder6DecodeERKNS_12EncodedImageEblE3$_1EE", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %83 = getelementptr inbounds i8, i8* %81, i64 8
  %84 = bitcast i8* %83 to %"class.webrtc::VideoFrame"*
  call void @_ZN6webrtc10VideoFrameC1EOS0_(%"class.webrtc::VideoFrame"* %84, %"class.webrtc::VideoFrame"* nonnull dereferenceable(176) %78) #14
  %85 = getelementptr inbounds i8, i8* %81, i64 184
  %86 = bitcast %"class.webrtc::test::FakeDecoder"** %79 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast i8* %85 to i64*
  store i64 %87, i64* %88, align 8
  %89 = bitcast i8* %81 to %"class.webrtc::QueuedTask"*
  call void @_ZN3rtc9TaskQueue15PostDelayedTaskENSt3__110unique_ptrIN6webrtc10QueuedTaskENS1_14default_deleteIS4_EEEEj(%"class.rtc::TaskQueue"* nonnull %66, %"class.webrtc::QueuedTask"* nonnull %89, i32 %80) #14
  call void @_ZN6webrtc10VideoFrameD1Ev(%"class.webrtc::VideoFrame"* nonnull %78) #14
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %77) #14
  br label %90

90:                                               ; preds = %76, %68
  call void @_ZN6webrtc10VideoFrameD1Ev(%"class.webrtc::VideoFrame"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %29) #14
  %91 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %23, align 8
  %92 = icmp eq %"class.webrtc::I420Buffer"* %91, null
  br i1 %92, label %100, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.webrtc::I420Buffer", %"class.webrtc::I420Buffer"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.webrtc::I420Buffer"* %91 to i32 (%"class.rtc::RefCountInterface"*)***
  %96 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %95, align 8
  %97 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %96, i64 1
  %98 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %97, align 8
  %99 = call i32 %98(%"class.rtc::RefCountInterface"* %94) #14
  br label %100

100:                                              ; preds = %90, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #14
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN6webrtc10I420Buffer6CreateEii(%"class.rtc::scoped_refptr.57"* sret, i32, i32) local_unnamed_addr #4

declare void @_ZN6webrtc10I420Buffer8SetBlackEPS0_(%"class.webrtc::I420Buffer"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN6webrtc10VideoFrame7BuilderC1Ev(%"class.webrtc::VideoFrame::Builder"*) unnamed_addr #4

declare dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder22set_video_frame_bufferERKN3rtc13scoped_refptrINS_16VideoFrameBufferEEE(%"class.webrtc::VideoFrame::Builder"*, %"class.rtc::scoped_refptr.62"* dereferenceable(8)) local_unnamed_addr #4

declare dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder12set_rotationENS_13VideoRotationE(%"class.webrtc::VideoFrame::Builder"*, i32) local_unnamed_addr #4

declare dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder16set_timestamp_msEl(%"class.webrtc::VideoFrame::Builder"*, i64) local_unnamed_addr #4

declare void @_ZN6webrtc10VideoFrame7Builder5buildEv(%"class.webrtc::VideoFrame"* sret, %"class.webrtc::VideoFrame::Builder"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN6webrtc10VideoFrame7BuilderD1Ev(%"class.webrtc::VideoFrame::Builder"*) unnamed_addr #5

declare void @_ZN6webrtc10VideoFrameC1ERKS0_(%"class.webrtc::VideoFrame"*, %"class.webrtc::VideoFrame"* dereferenceable(176)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6webrtc10VideoFrameD1Ev(%"class.webrtc::VideoFrame"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test11FakeDecoder18SetDelayedDecodingEi(%"class.webrtc::test::FakeDecoder"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 5
  %4 = load %"class.webrtc::TaskQueueFactory"*, %"class.webrtc::TaskQueueFactory"** %3, align 8
  %5 = icmp eq %"class.webrtc::TaskQueueFactory"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 77, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t, i64 0, i64 0)) #16
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.rtc::TaskQueue"*, %"class.rtc::TaskQueue"** %9, align 8
  %11 = icmp eq %"class.rtc::TaskQueue"* %10, null
  br i1 %11, label %12, label %26

12:                                               ; preds = %7
  %13 = bitcast %"class.webrtc::TaskQueueFactory"* %4 to %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)***
  %14 = load %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)**, %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)*** %13, align 8
  %15 = getelementptr inbounds %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)*, %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)** %14, i64 2
  %16 = load %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)*, %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)** %15, align 8
  %17 = tail call %"class.webrtc::TaskQueueBase"* %16(%"class.webrtc::TaskQueueFactory"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i64 12, i32 0) #14
  %18 = tail call i8* @_Znwm(i64 8) #15
  %19 = bitcast i8* %18 to %"class.rtc::TaskQueue"*
  tail call void @_ZN3rtc9TaskQueueC1ENSt3__110unique_ptrIN6webrtc13TaskQueueBaseENS3_16TaskQueueDeleterEEE(%"class.rtc::TaskQueue"* nonnull %19, %"class.webrtc::TaskQueueBase"* %17) #14
  %20 = ptrtoint i8* %18 to i64
  %21 = load %"class.rtc::TaskQueue"*, %"class.rtc::TaskQueue"** %9, align 8
  %22 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %20, i64* %22, align 8
  %23 = icmp eq %"class.rtc::TaskQueue"* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %12
  tail call void @_ZN3rtc9TaskQueueD1Ev(%"class.rtc::TaskQueue"* nonnull %21) #14
  %25 = bitcast %"class.rtc::TaskQueue"* %21 to i8*
  tail call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %7, %24, %12
  %27 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 6
  store i32 %1, i32* %27, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN6webrtc4test11FakeDecoder30RegisterDecodeCompleteCallbackEPNS_20DecodedImageCallbackE(%"class.webrtc::test::FakeDecoder"* nocapture, %"class.webrtc::DecodedImageCallback"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 1
  store %"class.webrtc::DecodedImageCallback"* %1, %"class.webrtc::DecodedImageCallback"** %3, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6webrtc4test11FakeDecoder7ReleaseEv(%"class.webrtc::test::FakeDecoder"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc4test11FakeDecoder14GetDecoderInfoEv(%"struct.webrtc::VideoDecoder::DecoderInfo"* noalias sret, %"class.webrtc::test::FakeDecoder"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::VideoDecoder::DecoderInfo", %"struct.webrtc::VideoDecoder::DecoderInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.webrtc::VideoDecoder::DecoderInfo", %"struct.webrtc::VideoDecoder::DecoderInfo"* %0, i64 0, i32 1
  %5 = bitcast %"struct.webrtc::VideoDecoder::DecoderInfo"* %0 to i8*
  %6 = bitcast %"struct.webrtc::VideoDecoder::DecoderInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 32, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 25, i1 false) #14
  %7 = load i8*, i8** @_ZN6webrtc4test11FakeDecoder19kImplementationNameE, align 8
  %8 = load i8, i8* %7, align 1
  %9 = tail call i1 @llvm.is.constant.i8(i8 %8) #14
  br i1 %9, label %10, label %23

10:                                               ; preds = %2
  %11 = tail call i64 @strlen(i8* %7) #14
  %12 = icmp ult i64 %11, 23
  br i1 %12, label %13, label %21

13:                                               ; preds = %10
  %14 = bitcast %"struct.webrtc::VideoDecoder::DecoderInfo"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = trunc i64 %11 to i8
  store i8 %16, i8* %15, align 1
  %17 = icmp eq i64 %11, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %7, i64 %11, i1 false) #14
  br label %19

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds i8, i8* %5, i64 %11
  store i8 0, i8* %20, align 1
  br label %25

21:                                               ; preds = %10
  %22 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %3, i8* %7, i64 %11) #14
  br label %25

23:                                               ; preds = %2
  %24 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %3, i8* %7) #14
  br label %25

25:                                               ; preds = %19, %21, %23
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK6webrtc4test11FakeDecoder18ImplementationNameEv(%"class.webrtc::test::FakeDecoder"* nocapture readnone) unnamed_addr #6 align 2 {
  %2 = load i8*, i8** @_ZN6webrtc4test11FakeDecoder19kImplementationNameE, align 8
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc4test15FakeH264Decoder6DecodeERKNS_12EncodedImageEbl(%"class.webrtc::test::FakeH264Decoder"*, %"class.webrtc::EncodedImage"* dereferenceable(272), i1 zeroext, i64) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 12
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %72, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 11, i32 0
  br label %10

10:                                               ; preds = %8, %67
  %11 = phi i64 [ %6, %8 ], [ %70, %67 ]
  %12 = phi i64 [ 0, %8 ], [ %69, %67 ]
  %13 = phi i8 [ 0, %8 ], [ %68, %67 ]
  %14 = add i64 %11, -4
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %32

16:                                               ; preds = %10
  %17 = load %"class.webrtc::EncodedImageBufferInterface"*, %"class.webrtc::EncodedImageBufferInterface"** %9, align 8
  %18 = icmp eq %"class.webrtc::EncodedImageBufferInterface"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = bitcast %"class.webrtc::EncodedImageBufferInterface"* %17 to i8* (%"class.webrtc::EncodedImageBufferInterface"*)***
  %21 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)**, i8* (%"class.webrtc::EncodedImageBufferInterface"*)*** %20, align 8
  %22 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %21, i64 5
  %23 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %22, align 8
  %24 = tail call i8* %23(%"class.webrtc::EncodedImageBufferInterface"* nonnull %17) #14
  br label %25

25:                                               ; preds = %16, %19
  %26 = phi i8* [ %24, %19 ], [ null, %16 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 %12
  %28 = tail call i32 @bcmp(i8* %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__const._ZN6webrtc4test15FakeH264Decoder6DecodeERKNS_12EncodedImageEbl.kStartCode, i64 0, i64 0), i64 4)
  %29 = icmp eq i32 %28, 0
  %30 = add i64 %12, 5
  %31 = select i1 %29, i64 %30, i64 %12
  br label %32

32:                                               ; preds = %25, %10
  %33 = phi i64 [ %12, %10 ], [ %31, %25 ]
  %34 = load %"class.webrtc::EncodedImageBufferInterface"*, %"class.webrtc::EncodedImageBufferInterface"** %9, align 8
  %35 = icmp eq %"class.webrtc::EncodedImageBufferInterface"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.webrtc::EncodedImageBufferInterface"* %34 to i8* (%"class.webrtc::EncodedImageBufferInterface"*)***
  %38 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)**, i8* (%"class.webrtc::EncodedImageBufferInterface"*)*** %37, align 8
  %39 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %38, i64 5
  %40 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %39, align 8
  %41 = tail call i8* %40(%"class.webrtc::EncodedImageBufferInterface"* nonnull %34) #14
  br label %42

42:                                               ; preds = %32, %36
  %43 = phi i8* [ %41, %36 ], [ null, %32 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %33
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, %13
  br i1 %46, label %67, label %47

47:                                               ; preds = %42
  %48 = load %"class.webrtc::EncodedImageBufferInterface"*, %"class.webrtc::EncodedImageBufferInterface"** %9, align 8
  %49 = icmp eq %"class.webrtc::EncodedImageBufferInterface"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.webrtc::EncodedImageBufferInterface"* %48 to i8* (%"class.webrtc::EncodedImageBufferInterface"*)***
  %52 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)**, i8* (%"class.webrtc::EncodedImageBufferInterface"*)*** %51, align 8
  %53 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %52, i64 5
  %54 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %53, align 8
  %55 = tail call i8* %54(%"class.webrtc::EncodedImageBufferInterface"* nonnull %48) #14
  br label %56

56:                                               ; preds = %47, %50
  %57 = phi i8* [ %55, %50 ], [ null, %47 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 %33
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %13, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %56
  %62 = zext i8 %13 to i32
  %63 = call i8* @_ZNK6webrtc12EncodedImage4dataEv(%"class.webrtc::EncodedImage"* %1)
  %64 = getelementptr inbounds i8, i8* %63, i64 %33
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 118, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_NS4_ILS5_9EPKcEEEEEvS8_iS8_DpRKT_E1t, i64 0, i64 0), i32 %62, i32 %66, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

67:                                               ; preds = %42
  %68 = add i8 %13, 1
  %69 = add i64 %33, 1
  %70 = load i64, i64* %5, align 8
  %71 = icmp ult i64 %69, %70
  br i1 %71, label %10, label %72

72:                                               ; preds = %67, %4
  %73 = bitcast %"class.webrtc::test::FakeH264Decoder"* %0 to %"class.webrtc::test::FakeDecoder"*
  %74 = tail call i32 @_ZN6webrtc4test11FakeDecoder6DecodeERKNS_12EncodedImageEbl(%"class.webrtc::test::FakeDecoder"* %73, %"class.webrtc::EncodedImage"* dereferenceable(272) %1, i1 zeroext undef, i64 %3)
  br label %75

75:                                               ; preds = %56, %72
  %76 = phi i32 [ 0, %72 ], [ -1, %56 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK6webrtc12EncodedImage4dataEv(%"class.webrtc::EncodedImage"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %0, i64 0, i32 11, i32 0
  %3 = load %"class.webrtc::EncodedImageBufferInterface"*, %"class.webrtc::EncodedImageBufferInterface"** %2, align 8
  %4 = icmp eq %"class.webrtc::EncodedImageBufferInterface"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.webrtc::EncodedImageBufferInterface"* %3 to i8* (%"class.webrtc::EncodedImageBufferInterface"*)***
  %7 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)**, i8* (%"class.webrtc::EncodedImageBufferInterface"*)*** %6, align 8
  %8 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %7, i64 5
  %9 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %8, align 8
  %10 = tail call i8* %9(%"class.webrtc::EncodedImageBufferInterface"* nonnull %3) #14
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i8* [ %10, %5 ], [ null, %1 ]
  ret i8* %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4test11FakeDecoderD2Ev(%"class.webrtc::test::FakeDecoder"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6webrtc4test11FakeDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.rtc::TaskQueue"*, %"class.rtc::TaskQueue"** %3, align 8
  store %"class.rtc::TaskQueue"* null, %"class.rtc::TaskQueue"** %3, align 8
  %5 = icmp eq %"class.rtc::TaskQueue"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN3rtc9TaskQueueD1Ev(%"class.rtc::TaskQueue"* nonnull %4) #14
  %7 = bitcast %"class.rtc::TaskQueue"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4test11FakeDecoderD0Ev(%"class.webrtc::test::FakeDecoder"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6webrtc4test11FakeDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.rtc::TaskQueue"*, %"class.rtc::TaskQueue"** %3, align 8
  store %"class.rtc::TaskQueue"* null, %"class.rtc::TaskQueue"** %3, align 8
  %5 = icmp eq %"class.rtc::TaskQueue"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN3rtc9TaskQueueD1Ev(%"class.rtc::TaskQueue"* nonnull %4) #14
  %7 = bitcast %"class.rtc::TaskQueue"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.webrtc::test::FakeDecoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4test15FakeH264DecoderD0Ev(%"class.webrtc::test::FakeH264Decoder"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::FakeH264Decoder", %"class.webrtc::test::FakeH264Decoder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6webrtc4test11FakeDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::FakeH264Decoder", %"class.webrtc::test::FakeH264Decoder"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.rtc::TaskQueue"*, %"class.rtc::TaskQueue"** %3, align 8
  store %"class.rtc::TaskQueue"* null, %"class.rtc::TaskQueue"** %3, align 8
  %5 = icmp eq %"class.rtc::TaskQueue"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN3rtc9TaskQueueD1Ev(%"class.rtc::TaskQueue"* nonnull %4) #14
  %7 = bitcast %"class.rtc::TaskQueue"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.webrtc::test::FakeH264Decoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #15
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN3rtc9TaskQueueD1Ev(%"class.rtc::TaskQueue"*) unnamed_addr #5

declare void @_ZN3rtc9TaskQueue15PostDelayedTaskENSt3__110unique_ptrIN6webrtc10QueuedTaskENS1_14default_deleteIS4_EEEEj(%"class.rtc::TaskQueue"*, %"class.webrtc::QueuedTask"*, i32) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZN6webrtc23webrtc_new_closure_impl11ClosureTaskIZNS_4test11FakeDecoder6DecodeERKNS_12EncodedImageEblE3$_1ED2Ev"(%"class.webrtc::webrtc_new_closure_impl::ClosureTask"*) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::webrtc_new_closure_impl::ClosureTask", %"class.webrtc::webrtc_new_closure_impl::ClosureTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVN6webrtc23webrtc_new_closure_impl11ClosureTaskIZNS_4test11FakeDecoder6DecodeERKNS_12EncodedImageEblE3$_1EE", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::webrtc_new_closure_impl::ClosureTask", %"class.webrtc::webrtc_new_closure_impl::ClosureTask"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN6webrtc10VideoFrameD1Ev(%"class.webrtc::VideoFrame"* %3) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZN6webrtc23webrtc_new_closure_impl11ClosureTaskIZNS_4test11FakeDecoder6DecodeERKNS_12EncodedImageEblE3$_1ED0Ev"(%"class.webrtc::webrtc_new_closure_impl::ClosureTask"*) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::webrtc_new_closure_impl::ClosureTask", %"class.webrtc::webrtc_new_closure_impl::ClosureTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @"_ZTVN6webrtc23webrtc_new_closure_impl11ClosureTaskIZNS_4test11FakeDecoder6DecodeERKNS_12EncodedImageEblE3$_1EE", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::webrtc_new_closure_impl::ClosureTask", %"class.webrtc::webrtc_new_closure_impl::ClosureTask"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN6webrtc10VideoFrameD1Ev(%"class.webrtc::VideoFrame"* %3) #14
  %4 = bitcast %"class.webrtc::webrtc_new_closure_impl::ClosureTask"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZN6webrtc23webrtc_new_closure_impl11ClosureTaskIZNS_4test11FakeDecoder6DecodeERKNS_12EncodedImageEblE3$_1E3RunEv"(%"class.webrtc::webrtc_new_closure_impl::ClosureTask"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.webrtc::VideoFrame", align 8
  %3 = getelementptr inbounds %"class.webrtc::webrtc_new_closure_impl::ClosureTask", %"class.webrtc::webrtc_new_closure_impl::ClosureTask"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.webrtc::test::FakeDecoder"*, %"class.webrtc::test::FakeDecoder"** %3, align 8
  %5 = bitcast %"class.webrtc::VideoFrame"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %5) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ i16, [6 x i8], %"class.rtc::scoped_refptr.62", i32, [4 x i8], i64, i64, i32, { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.22 } } } } } } } } } }, { { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon.67 } } } }, %"class.webrtc::RtpPacketInfos", { { { { i8, [7 x i8], %union.anon.72 } } } } }* @"__const._ZZN6webrtc4test11FakeDecoder6DecodeERKNS_12EncodedImageEblENK3$_1clEv.copy" to i8*), i64 176, i1 false) #14
  %6 = getelementptr inbounds %"class.webrtc::webrtc_new_closure_impl::ClosureTask", %"class.webrtc::webrtc_new_closure_impl::ClosureTask"* %0, i64 0, i32 1, i32 0
  call void @_ZN6webrtc10VideoFrameC1ERKS0_(%"class.webrtc::VideoFrame"* nonnull %2, %"class.webrtc::VideoFrame"* dereferenceable(176) %6) #14
  %7 = getelementptr inbounds %"class.webrtc::test::FakeDecoder", %"class.webrtc::test::FakeDecoder"* %4, i64 0, i32 1
  %8 = load %"class.webrtc::DecodedImageCallback"*, %"class.webrtc::DecodedImageCallback"** %7, align 8
  %9 = bitcast %"class.webrtc::DecodedImageCallback"* %8 to i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)***
  %10 = load i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)**, i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)*, i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)** %10, i64 2
  %12 = load i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)*, i32 (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*)** %11, align 8
  %13 = call i32 %12(%"class.webrtc::DecodedImageCallback"* %8, %"class.webrtc::VideoFrame"* nonnull dereferenceable(176) %2) #14
  call void @_ZN6webrtc10VideoFrameD1Ev(%"class.webrtc::VideoFrame"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %5) #14
  ret i1 true
}

declare void @_ZN6webrtc10VideoFrameC1EOS0_(%"class.webrtc::VideoFrame"*, %"class.webrtc::VideoFrame"* dereferenceable(176)) unnamed_addr #4

declare void @_ZN3rtc9TaskQueueC1ENSt3__110unique_ptrIN6webrtc13TaskQueueBaseENS3_16TaskQueueDeleterEEE(%"class.rtc::TaskQueue"*, %"class.webrtc::TaskQueueBase"*) unnamed_addr #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #12

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
