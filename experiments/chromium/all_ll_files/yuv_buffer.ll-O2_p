; ModuleID = '../../third_party/libgav1/src/src/yuv_buffer.cc'
source_filename = "../../third_party/libgav1/src/src/yuv_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::nothrow_t" = type { i8 }
%"class.libgav1::YuvBuffer" = type <{ i32, i8, [3 x i8], i32, i32, i32, i32, [3 x i32], [3 x i32], [3 x i32], [3 x i32], [3 x i32], [4 x i8], [3 x i8*], %"class.std::__1::unique_ptr", i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%struct.Libgav1FrameBuffer = type { [3 x i8*], [3 x i32], i8* }

@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav19YuvBuffer7ReallocEibiiaaiiiiPF17Libgav1StatusCodePvi18Libgav1ImageFormatiiiiiiiP18Libgav1FrameBufferES2_PS2_(%"class.libgav1::YuvBuffer"*, i32, i1 zeroext, i32, i32, i8 signext, i8 signext, i32, i32, i32, i32, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)*, i8*, i8** nocapture) local_unnamed_addr #0 align 2 {
  %15 = alloca %struct.Libgav1FrameBuffer, align 8
  %16 = zext i1 %2 to i8
  %17 = or i32 %8, %7
  %18 = or i32 %17, %9
  %19 = or i32 %18, %10
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %207

22:                                               ; preds = %14
  %23 = sext i8 %5 to i32
  br i1 %2, label %24, label %26

24:                                               ; preds = %22
  %25 = sext i8 %6 to i32
  br label %32

26:                                               ; preds = %22
  %27 = add nsw i32 %23, %3
  %28 = ashr i32 %27, %23
  %29 = sext i8 %6 to i32
  %30 = add nsw i32 %29, %4
  %31 = ashr i32 %30, %29
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i32 [ %25, %24 ], [ %29, %26 ]
  %34 = phi i32 [ 0, %24 ], [ %28, %26 ]
  %35 = phi i32 [ 0, %24 ], [ %31, %26 ]
  %36 = ashr i32 %7, %23
  %37 = select i1 %2, i32 0, i32 %36
  %38 = ashr i32 %8, %23
  %39 = select i1 %2, i32 0, i32 %38
  %40 = ashr i32 %9, %33
  %41 = select i1 %2, i32 0, i32 %40
  %42 = ashr i32 %10, %33
  %43 = select i1 %2, i32 0, i32 %42
  %44 = icmp eq i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)* %11, null
  br i1 %44, label %102, label %45

45:                                               ; preds = %32
  %46 = icmp eq i8 %5, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %45
  %48 = icmp eq i8 %6, 0
  %49 = select i1 %2, i32 3, i32 0
  %50 = select i1 %48, i32 1, i32 %49
  br label %51

51:                                               ; preds = %45, %47
  %52 = phi i32 [ %50, %47 ], [ 2, %45 ]
  %53 = bitcast %struct.Libgav1FrameBuffer* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %53) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 48, i1 false)
  %54 = call i32 %11(i8* %12, i32 %1, i32 %52, i32 %3, i32 %4, i32 %7, i32 %8, i32 %9, i32 %10, i32 16, %struct.Libgav1FrameBuffer* nonnull %15) #4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %101

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.Libgav1FrameBuffer, %struct.Libgav1FrameBuffer* %15, i64 0, i32 0, i64 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  %60 = ptrtoint i8* %58 to i64
  br i1 %59, label %101, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.Libgav1FrameBuffer, %struct.Libgav1FrameBuffer* %15, i64 0, i32 0, i64 1
  br i1 %2, label %63, label %69

63:                                               ; preds = %61
  %64 = bitcast i8** %62 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %struct.Libgav1FrameBuffer, %struct.Libgav1FrameBuffer* %15, i64 0, i32 0, i64 2
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  br label %79

69:                                               ; preds = %61
  %70 = load i8*, i8** %62, align 8
  %71 = icmp eq i8* %70, null
  %72 = ptrtoint i8* %70 to i64
  br i1 %71, label %101, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.Libgav1FrameBuffer, %struct.Libgav1FrameBuffer* %15, i64 0, i32 0, i64 2
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %101, label %77

77:                                               ; preds = %73
  %78 = ptrtoint i8* %75 to i64
  br label %79

79:                                               ; preds = %77, %63
  %80 = phi i64 [ %68, %63 ], [ %78, %77 ]
  %81 = phi i64 [ %65, %63 ], [ %72, %77 ]
  %82 = getelementptr inbounds %struct.Libgav1FrameBuffer, %struct.Libgav1FrameBuffer* %15, i64 0, i32 1, i64 0
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 11, i64 0
  store i32 %83, i32* %84, align 8
  %85 = getelementptr inbounds %struct.Libgav1FrameBuffer, %struct.Libgav1FrameBuffer* %15, i64 0, i32 1, i64 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 11, i64 1
  store i32 %86, i32* %87, align 4
  %88 = getelementptr inbounds %struct.Libgav1FrameBuffer, %struct.Libgav1FrameBuffer* %15, i64 0, i32 1, i64 2
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 11, i64 2
  store i32 %89, i32* %90, align 8
  %91 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 13
  %92 = bitcast [3 x i8*]* %91 to i64*
  store i64 %60, i64* %92, align 8
  %93 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 13, i64 1
  %94 = bitcast i8** %93 to i64*
  store i64 %81, i64* %94, align 8
  %95 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 13, i64 2
  %96 = bitcast i8** %95 to i64*
  store i64 %80, i64* %96, align 8
  %97 = getelementptr inbounds %struct.Libgav1FrameBuffer, %struct.Libgav1FrameBuffer* %15, i64 0, i32 2
  %98 = bitcast i8** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i8** %13 to i64*
  store i64 %99, i64* %100, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %53) #4
  br label %186

101:                                              ; preds = %73, %69, %56, %51
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %53) #4
  br label %207

102:                                              ; preds = %32
  %103 = add nsw i32 %7, %3
  %104 = add nsw i32 %103, %8
  %105 = icmp sgt i32 %1, 8
  %106 = zext i1 %105 to i32
  %107 = shl i32 %104, %106
  %108 = add i32 %107, 15
  %109 = and i32 %108, -16
  %110 = add nsw i32 %9, %4
  %111 = add nsw i32 %110, %10
  %112 = sext i32 %111 to i64
  %113 = sext i32 %109 to i64
  %114 = mul nsw i64 %113, %112
  %115 = or i64 %114, 15
  %116 = add i32 %39, %37
  %117 = add i32 %116, %34
  %118 = shl i32 %117, %106
  %119 = add i32 %118, 15
  %120 = and i32 %119, -16
  br i1 %2, label %128, label %121

121:                                              ; preds = %102
  %122 = add i32 %43, %41
  %123 = add i32 %122, %35
  %124 = sext i32 %123 to i64
  %125 = sext i32 %120 to i64
  %126 = mul nsw i64 %125, %124
  %127 = or i64 %126, 15
  br label %128

128:                                              ; preds = %102, %121
  %129 = phi i64 [ %127, %121 ], [ 0, %102 ]
  %130 = shl i64 %129, 1
  %131 = add i64 %130, %115
  %132 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 15
  %133 = load i64, i64* %132, align 8
  %134 = icmp ugt i64 %131, %133
  br i1 %134, label %138, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  br label %150

138:                                              ; preds = %128
  %139 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %131, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #5
  %140 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  store i8* %139, i8** %140, align 8
  %142 = icmp eq i8* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %138
  tail call void @_ZdaPv(i8* nonnull %141) #5
  %144 = load i8*, i8** %140, align 8
  br label %145

145:                                              ; preds = %138, %143
  %146 = phi i8* [ %139, %138 ], [ %144, %143 ]
  %147 = icmp eq i8* %146, null
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  store i64 0, i64* %132, align 8
  br label %207

149:                                              ; preds = %145
  store i64 %131, i64* %132, align 8
  br label %150

150:                                              ; preds = %135, %149
  %151 = phi i8* [ %137, %135 ], [ %146, %149 ]
  %152 = getelementptr inbounds i8, i8* %151, i64 %115
  %153 = getelementptr inbounds i8, i8* %152, i64 %129
  %154 = select i1 %2, i8* null, i8* %152
  %155 = select i1 %2, i8* null, i8* %153
  %156 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 11, i64 0
  store i32 %109, i32* %156, align 8
  %157 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 11, i64 2
  store i32 %120, i32* %157, align 8
  %158 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 11, i64 1
  store i32 %120, i32* %158, align 4
  %159 = shl i32 %7, %106
  %160 = shl i32 %37, %106
  %161 = mul nsw i32 %109, %9
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* %151, i64 %162
  %164 = sext i32 %159 to i64
  %165 = getelementptr inbounds i8, i8* %163, i64 %164
  %166 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 13, i64 0
  %167 = mul nsw i32 %120, %41
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i8, i8* %154, i64 %168
  %170 = sext i32 %160 to i64
  %171 = getelementptr inbounds i8, i8* %169, i64 %170
  %172 = insertelement <2 x i8*> undef, i8* %165, i32 0
  %173 = insertelement <2 x i8*> %172, i8* %171, i32 1
  %174 = ptrtoint <2 x i8*> %173 to <2 x i64>
  %175 = add <2 x i64> %174, <i64 15, i64 15>
  %176 = and <2 x i64> %175, <i64 -16, i64 -16>
  %177 = inttoptr <2 x i64> %176 to <2 x i8*>
  %178 = bitcast i8** %166 to <2 x i8*>*
  store <2 x i8*> %177, <2 x i8*>* %178, align 8
  %179 = getelementptr inbounds i8, i8* %155, i64 %168
  %180 = getelementptr inbounds i8, i8* %179, i64 %170
  %181 = ptrtoint i8* %180 to i64
  %182 = add i64 %181, 15
  %183 = and i64 %182, -16
  %184 = inttoptr i64 %183 to i8*
  %185 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 13, i64 2
  store i8* %184, i8** %185, align 8
  br label %186

186:                                              ; preds = %150, %79
  %187 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 3
  store i32 %3, i32* %187, align 8
  %188 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 5
  store i32 %4, i32* %188, align 8
  %189 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 7, i64 0
  store i32 %7, i32* %189, align 8
  %190 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 8, i64 0
  store i32 %8, i32* %190, align 4
  %191 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 9, i64 0
  store i32 %9, i32* %191, align 8
  %192 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 10, i64 0
  store i32 %10, i32* %192, align 4
  %193 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 4
  store i32 %34, i32* %193, align 4
  %194 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 6
  store i32 %35, i32* %194, align 4
  %195 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 7, i64 2
  store i32 %37, i32* %195, align 8
  %196 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 7, i64 1
  store i32 %37, i32* %196, align 4
  %197 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 8, i64 2
  store i32 %39, i32* %197, align 4
  %198 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 8, i64 1
  store i32 %39, i32* %198, align 4
  %199 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 9, i64 2
  store i32 %41, i32* %199, align 8
  %200 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 9, i64 1
  store i32 %41, i32* %200, align 4
  %201 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 10, i64 2
  store i32 %43, i32* %201, align 4
  %202 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 10, i64 1
  store i32 %43, i32* %202, align 4
  %203 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 16
  store i8 %5, i8* %203, align 8
  %204 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 17
  store i8 %6, i8* %204, align 1
  %205 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 0
  store i32 %1, i32* %205, align 8
  %206 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %0, i64 0, i32 1
  store i8 %16, i8* %206, align 4
  br label %207

207:                                              ; preds = %186, %101, %148, %14
  %208 = phi i1 [ false, %14 ], [ true, %186 ], [ false, %101 ], [ false, %148 ]
  ret i1 %208
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
