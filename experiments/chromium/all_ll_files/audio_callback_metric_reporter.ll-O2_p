; ModuleID = '../../third_party/blink/renderer/platform/audio/audio_callback_metric_reporter.cc'
source_filename = "../../third_party/blink/renderer/platform/audio/audio_callback_metric_reporter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AudioCallbackMetricReporter" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", double, double, double, double, %"struct.blink::AudioCallbackMetric" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.blink::AudioCallbackMetric" = type { i64, double, double, double, double }
%"class.base::TimeDelta" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZNK4base9TimeDeltamiES0_ = comdat any

@.str = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27AudioCallbackMetricReporter10InitializeEif(%"class.blink::AudioCallbackMetricReporter"* nocapture, i32, float) local_unnamed_addr #0 align 2 {
  %4 = sitofp i32 %1 to double
  %5 = fpext float %2 to double
  %6 = fdiv double %4, %5
  %7 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 7, i32 2
  store double %6, double* %7, align 8
  %8 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 7, i32 3
  store double %6, double* %8, align 8
  %9 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 5
  %10 = load double, double* %9, align 8
  %11 = fdiv double 1.000000e+00, %6
  %12 = tail call double @_ZN5blink15audio_utilities33DiscreteTimeConstantForSampleRateEdd(double %10, double %11) #5
  %13 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 6
  store double %12, double* %13, align 8
  ret void
}

declare double @_ZN5blink15audio_utilities33DiscreteTimeConstantForSampleRateEdd(double, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27AudioCallbackMetricReporter10BeginTraceEv(%"class.blink::AudioCallbackMetricReporter"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  %4 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 7, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  br label %29

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 7, i32 2
  %13 = load double, double* %12, align 8
  %14 = fmul double %13, 1.000000e+06
  %15 = fcmp ult double %14, 0xC3E0000000000000
  %16 = fcmp ugt double %14, 0x43DFFFFFFFFFFFFF
  %17 = fcmp ogt double %14, 0xC3E0000000000000
  %18 = select i1 %17, double %14, double 0xC3E0000000000000
  %19 = fptosi double %18 to i64
  %20 = select i1 %15, i64 0, i64 9223372036854775807
  %21 = select i1 %16, i64 %20, i64 %19
  %22 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #5
  %23 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %3, i64* %23, align 8
  %24 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %2, i64 %21) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #5
  %25 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %24, i64* %26, align 8
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %4, align 8
  br label %29

29:                                               ; preds = %8, %11
  %30 = phi i64 [ %28, %11 ], [ %3, %8 ]
  %31 = phi i64 [ %24, %11 ], [ %10, %8 ]
  %32 = phi i64 [ %27, %11 ], [ %6, %8 ]
  %33 = add nsw i64 %32, 1
  store i64 %33, i64* %5, align 8
  %34 = sub nsw i64 %30, %31
  %35 = add i64 %34, -9223372036854775807
  %36 = icmp ult i64 %35, 2
  br i1 %36, label %40, label %37

37:                                               ; preds = %29
  %38 = sitofp i64 %34 to double
  %39 = fdiv double %38, 1.000000e+06
  br label %43

40:                                               ; preds = %29
  %41 = icmp slt i64 %34, 0
  %42 = select i1 %41, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %43

43:                                               ; preds = %40, %37
  %44 = phi double [ %42, %40 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 3
  store double %44, double* %45, align 8
  %46 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = sub nsw i64 %47, %31
  %49 = add i64 %48, -9223372036854775807
  %50 = icmp ult i64 %49, 2
  br i1 %50, label %54, label %51

51:                                               ; preds = %43
  %52 = sitofp i64 %48 to double
  %53 = fdiv double %52, 1.000000e+06
  br label %57

54:                                               ; preds = %43
  %55 = icmp slt i64 %48, 0
  %56 = select i1 %55, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %57

57:                                               ; preds = %51, %54
  %58 = phi double [ %56, %54 ], [ %53, %51 ]
  %59 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 4
  store double %58, double* %59, align 8
  %60 = fdiv double %58, %44
  %61 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 7, i32 1
  store double %60, double* %61, align 8
  %62 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 7, i32 3
  %63 = load double, double* %62, align 8
  %64 = fsub double %44, %63
  %65 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 6
  %66 = load double, double* %65, align 8
  %67 = fmul double %66, %64
  %68 = fadd double %63, %67
  store double %68, double* %62, align 8
  %69 = fsub double 1.000000e+00, %66
  %70 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 7, i32 4
  %71 = load double, double* %70, align 8
  %72 = fmul double %64, %67
  %73 = fadd double %71, %72
  %74 = fmul double %69, %73
  store double %74, double* %70, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27AudioCallbackMetricReporter12UpdateMetricEv(%"class.blink::AudioCallbackMetricReporter"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 7, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add nsw i64 %3, 1
  store i64 %4, i64* %2, align 8
  %5 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sub nsw i64 %8, %6
  %10 = add i64 %9, -9223372036854775807
  %11 = icmp ult i64 %10, 2
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = sitofp i64 %9 to double
  %14 = fdiv double %13, 1.000000e+06
  br label %18

15:                                               ; preds = %1
  %16 = icmp slt i64 %9, 0
  %17 = select i1 %16, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %18

18:                                               ; preds = %12, %15
  %19 = phi double [ %17, %15 ], [ %14, %12 ]
  %20 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 3
  store double %19, double* %20, align 8
  %21 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 2, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = sub nsw i64 %22, %6
  %24 = add i64 %23, -9223372036854775807
  %25 = icmp ult i64 %24, 2
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = sitofp i64 %23 to double
  %28 = fdiv double %27, 1.000000e+06
  br label %32

29:                                               ; preds = %18
  %30 = icmp slt i64 %23, 0
  %31 = select i1 %30, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %32

32:                                               ; preds = %26, %29
  %33 = phi double [ %31, %29 ], [ %28, %26 ]
  %34 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 4
  store double %33, double* %34, align 8
  %35 = fdiv double %33, %19
  %36 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 7, i32 1
  store double %35, double* %36, align 8
  %37 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 7, i32 3
  %38 = load double, double* %37, align 8
  %39 = fsub double %19, %38
  %40 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 6
  %41 = load double, double* %40, align 8
  %42 = fmul double %41, %39
  %43 = fadd double %38, %42
  store double %43, double* %37, align 8
  %44 = fsub double 1.000000e+00, %41
  %45 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 7, i32 4
  %46 = load double, double* %45, align 8
  %47 = fmul double %39, %42
  %48 = fadd double %46, %47
  %49 = fmul double %44, %48
  store double %49, double* %45, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27AudioCallbackMetricReporter8EndTraceEv(%"class.blink::AudioCallbackMetricReporter"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  %3 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %2, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::AudioCallbackMetricReporter", %"class.blink::AudioCallbackMetricReporter"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load i64, i64* %4, align 8
  store i64 %6, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #5
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #5
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #5
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %26, i8* %27) #5
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #5
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #5
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #5
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #4

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
