; ModuleID = '../../third_party/dawn/src/dawn_native/CommandBufferStateTracker.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/CommandBufferStateTracker.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.Result = type { %"class.std::__1::unique_ptr.126" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.129" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.131" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"class.dawn_native::CommandBufferStateTracker" = type { %"class.std::__1::bitset", %"class.ityp::array", %"class.ityp::bitset", i8, i32, i64, %"class.dawn_native::PipelineLayoutBase"*, %"class.dawn_native::RenderPipelineBase"*, %"class.ityp::array.104"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.ityp::array" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [4 x %"class.dawn_native::BindGroupBase"*] }
%"class.dawn_native::BindGroupBase" = type { %"class.dawn_native::ObjectBase", %class.Ref, %"struct.dawn_native::BindGroupLayoutBase::BindingDataPointers" }
%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_native::DeviceBase" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"struct.dawn_native::BindingCounts", %"class.ityp::vector", %"class.std::__1::map" }
%"class.dawn_native::CachedObject.base" = type <{ %"class.dawn_native::ObjectBase", i8, [7 x i8], i64, i8 }>
%"struct.dawn_native::BindingCounts" = type { i32, i32, i32, i32, i32, %"class.dawn_native::PerStage" }
%"class.dawn_native::PerStage" = type { %"struct.std::__1::array.1" }
%"struct.std::__1::array.1" = type { [3 x %"struct.dawn_native::PerStageBindingCounts"] }
%"struct.dawn_native::PerStageBindingCounts" = type { i32, i32, i32, i32, i32 }
%"class.ityp::vector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.dawn_native::BindingInfo"*, %"struct.dawn_native::BindingInfo"*, %"class.std::__1::__compressed_pair" }
%"struct.dawn_native::BindingInfo" = type { i32, i32, i32, %"struct.dawn_native::BufferBindingLayout", %"struct.dawn_native::SamplerBindingLayout", %"struct.dawn_native::TextureBindingLayout", %"struct.dawn_native::StorageTextureBindingLayout" }
%"struct.dawn_native::BufferBindingLayout" = type { %"struct.dawn_native::ChainedStruct"*, i32, i8, i64 }
%"struct.dawn_native::ChainedStruct" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::SamplerBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::TextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i8, [7 x i8] }>
%"struct.dawn_native::StorageTextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.dawn_native::BindingInfo"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"struct.dawn_native::BindGroupLayoutBase::BindingDataPointers" = type { %"class.ityp::span", %"class.ityp::span.11", %"class.ityp::span.15" }
%"class.ityp::span" = type <{ %"struct.dawn_native::BindGroupLayoutBase::BufferBindingData"*, i32, [4 x i8] }>
%"struct.dawn_native::BindGroupLayoutBase::BufferBindingData" = type { i64, i64 }
%"class.ityp::span.11" = type <{ %class.Ref.12*, i32, [4 x i8] }>
%class.Ref.12 = type { %class.RefBase.13 }
%class.RefBase.13 = type { %"class.dawn_native::ObjectBase"* }
%"class.ityp::span.15" = type <{ i64*, i32, [4 x i8] }>
%"class.ityp::bitset" = type { %"class.std::__1::bitset.17" }
%"class.std::__1::bitset.17" = type { %"class.std::__1::__bitset.18" }
%"class.std::__1::__bitset.18" = type { i64 }
%"class.dawn_native::PipelineLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"class.ityp::array.19", %"class.ityp::bitset.21" }
%"class.ityp::array.19" = type { %"struct.std::__1::array.20" }
%"struct.std::__1::array.20" = type { [4 x %class.Ref] }
%"class.ityp::bitset.21" = type { %"class.std::__1::bitset" }
%"class.dawn_native::RenderPipelineBase" = type <{ %"class.dawn_native::PipelineBase", i32, [4 x i8], %"class.ityp::bitset.113", %"class.ityp::array.114", %"class.ityp::bitset", %"class.ityp::array.116", %class.Ref.118, %"class.ityp::array.122", %"class.ityp::array.124", %"struct.dawn_native::PrimitiveState", %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::MultisampleState", i8, [7 x i8] }>
%"class.dawn_native::PipelineBase" = type { %"class.dawn_native::CachedObject.base", i32, %"class.dawn_native::PerStage.22", %class.Ref.102, %"class.ityp::array.104" }
%"class.dawn_native::PerStage.22" = type { %"struct.std::__1::array.23" }
%"struct.std::__1::array.23" = type { [3 x %"struct.dawn_native::ProgrammableStage"] }
%"struct.dawn_native::ProgrammableStage" = type { %class.Ref.24, %"class.std::__1::basic_string", %"struct.dawn_native::EntryPointMetadata"* }
%class.Ref.24 = type { %class.RefBase.25 }
%class.RefBase.25 = type { %"class.dawn_native::ShaderModuleBase"* }
%"class.dawn_native::ShaderModuleBase" = type { %"class.dawn_native::CachedObject.base", i32, %"class.std::__1::vector.26", %"class.std::__1::basic_string", %"class.std::__1::unordered_map", %"class.std::__1::vector.26", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.52", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { float }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { i32*, i32*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i32* }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.tint::Program"* }
%"class.tint::Program" = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.dawn_native::TintSource"* }
%"class.dawn_native::TintSource" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.dawn_native::OwnedCompilationMessages"* }
%"class.dawn_native::OwnedCompilationMessages" = type { %struct.WGPUCompilationInfo, %"class.std::__1::vector.69", %"class.std::__1::vector.76" }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %struct.WGPUCompilationMessage*, %struct.WGPUCompilationMessage*, %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %struct.WGPUCompilationMessage* }
%"struct.dawn_native::EntryPointMetadata" = type { %"class.ityp::array.86", %"class.std::__1::bitset.97", %"class.ityp::array.99", %"class.ityp::bitset.101", %"struct.dawn_native::Origin3D", i32 }
%"class.ityp::array.86" = type { %"struct.std::__1::array.87" }
%"struct.std::__1::array.87" = type { [4 x %"class.std::__1::map.88"] }
%"class.std::__1::map.88" = type { %"class.std::__1::__tree.89" }
%"class.std::__1::__tree.89" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::bitset.97" = type { %"class.std::__1::__bitset.98" }
%"class.std::__1::__bitset.98" = type { i64 }
%"class.ityp::array.99" = type { %"struct.std::__1::array.100" }
%"struct.std::__1::array.100" = type { [4 x i32] }
%"class.ityp::bitset.101" = type { %"class.std::__1::bitset" }
%"struct.dawn_native::Origin3D" = type { i32, i32, i32 }
%class.Ref.102 = type { %class.RefBase.103 }
%class.RefBase.103 = type { %"class.dawn_native::PipelineLayoutBase"* }
%"class.ityp::array.104" = type { %"struct.std::__1::array.105" }
%"struct.std::__1::array.105" = type { [4 x %"class.std::__1::vector.106"] }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { i64*, i64*, %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { i64* }
%"class.ityp::bitset.113" = type { %"class.std::__1::bitset.97" }
%"class.ityp::array.114" = type { %"struct.std::__1::array.115" }
%"struct.std::__1::array.115" = type { [16 x %"struct.dawn_native::VertexAttributeInfo"] }
%"struct.dawn_native::VertexAttributeInfo" = type { i32, i64, i8, i8 }
%"class.ityp::array.116" = type { %"struct.std::__1::array.117" }
%"struct.std::__1::array.117" = type { [8 x %"struct.dawn_native::VertexBufferInfo"] }
%"struct.dawn_native::VertexBufferInfo" = type { i64, i32 }
%class.Ref.118 = type { %class.RefBase.119 }
%class.RefBase.119 = type { %"class.dawn_native::AttachmentState"* }
%"class.dawn_native::AttachmentState" = type { %"class.dawn_native::CachedObject.base", %"class.dawn_native::AttachmentStateBlueprint" }
%"class.dawn_native::AttachmentStateBlueprint" = type { %"class.ityp::bitset.101", %"class.ityp::array.120", i32, i32 }
%"class.ityp::array.120" = type { %"struct.std::__1::array.121" }
%"struct.std::__1::array.121" = type { [4 x i32] }
%"class.ityp::array.122" = type { %"struct.std::__1::array.123" }
%"struct.std::__1::array.123" = type { [4 x %"struct.dawn_native::ColorTargetState"] }
%"struct.dawn_native::ColorTargetState" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8], %"struct.dawn_native::BlendState"*, i32, [4 x i8] }>
%"struct.dawn_native::BlendState" = type { %"struct.dawn_native::BlendComponent", %"struct.dawn_native::BlendComponent" }
%"struct.dawn_native::BlendComponent" = type { i32, i32, i32 }
%"class.ityp::array.124" = type { %"struct.std::__1::array.125" }
%"struct.std::__1::array.125" = type { [4 x %"struct.dawn_native::BlendState"] }
%"struct.dawn_native::PrimitiveState" = type { %"struct.dawn_native::ChainedStruct"*, i32, i32, i32, i32 }
%"struct.dawn_native::DepthStencilState" = type { %"struct.dawn_native::ChainedStruct"*, i32, i8, i32, %"struct.dawn_native::StencilFaceState", %"struct.dawn_native::StencilFaceState", i32, i32, i32, float, float }
%"struct.dawn_native::StencilFaceState" = type { i32, i32, i32, i32 }
%"struct.dawn_native::MultisampleState" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i8, [7 x i8] }>
%"class.std::__1::__bit_iterator.140" = type <{ i64*, i32, [4 x i8] }>
%"class.BitSetIterator<4, unsigned int>::Iterator" = type { %"class.std::__1::bitset", i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.dawn_native::ComputePipelineBase" = type { %"class.dawn_native::PipelineBase" }

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask = comdat any

@.str = private unnamed_addr constant [69 x i8] c"../../third_party/dawn/src/dawn_native/CommandBufferStateTracker.cpp\00", align 1
@__func__._ZN11dawn_native25CommandBufferStateTracker17ValidateOperationENSt3__16bitsetILm4EEE = private unnamed_addr constant [18 x i8] c"ValidateOperation\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"Missing index buffer\00", align 1
@__func__._ZN11dawn_native25CommandBufferStateTracker19CheckMissingAspectsENSt3__16bitsetILm4EEE = private unnamed_addr constant [20 x i8] c"CheckMissingAspects\00", align 1
@.str.2 = private unnamed_addr constant [63 x i8] c"Pipeline strip index format does not match index buffer format\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"Missing vertex buffer\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"Missing bind group \00", align 1
@.str.6 = private unnamed_addr constant [61 x i8] c"Pipeline and bind group layout doesn't match for bind group \00", align 1
@.str.7 = private unnamed_addr constant [40 x i8] c"Binding sizes too small for bind group \00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"Missing pipeline\00", align 1
@_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 15 }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native25CommandBufferStateTracker19ValidateCanDispatchEv(%class.Result* noalias nocapture sret, %"class.dawn_native::CommandBufferStateTracker"* nocapture) local_unnamed_addr #0 align 2 {
  tail call void @_ZN11dawn_native25CommandBufferStateTracker17ValidateOperationENSt3__16bitsetILm4EEE(%class.Result* sret %0, %"class.dawn_native::CommandBufferStateTracker"* %1, i64 3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native25CommandBufferStateTracker17ValidateOperationENSt3__16bitsetILm4EEE(%class.Result* noalias nocapture sret, %"class.dawn_native::CommandBufferStateTracker"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.Result, align 8
  %5 = alloca %class.Result, align 8
  %6 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 15
  %9 = xor i64 %8, 15
  %10 = and i64 %9, %2
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = bitcast %class.Result* %0 to i64*
  store i64 0, i64* %13, align 8
  br label %37

14:                                               ; preds = %3
  %15 = bitcast %class.Result* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = getelementptr inbounds %class.Result, %class.Result* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %16, align 8
  %17 = and i64 %10, 1
  call void @_ZN11dawn_native25CommandBufferStateTracker19CheckMissingAspectsENSt3__16bitsetILm4EEE(%class.Result* nonnull sret %4, %"class.dawn_native::CommandBufferStateTracker"* %1, i64 %17)
  %18 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %16, align 8
  %19 = icmp eq %"class.dawn_native::ErrorData"* %18, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %16, align 8
  br i1 %19, label %23, label %20, !prof !2

20:                                               ; preds = %14
  %21 = ptrtoint %"class.dawn_native::ErrorData"* %18 to i64
  tail call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %18, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN11dawn_native25CommandBufferStateTracker17ValidateOperationENSt3__16bitsetILm4EEE, i64 0, i64 0), i32 88) #9
  %22 = bitcast %class.Result* %0 to i64*
  store i64 %21, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  br label %37

23:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  tail call void @_ZN11dawn_native25CommandBufferStateTracker20RecomputeLazyAspectsENSt3__16bitsetILm4EEE(%"class.dawn_native::CommandBufferStateTracker"* %1, i64 %10)
  %24 = bitcast %class.Result* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %class.Result, %class.Result* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %25, align 8
  %26 = load i64, i64* %6, align 8
  %27 = and i64 %26, 15
  %28 = xor i64 %27, 15
  %29 = and i64 %28, %2
  call void @_ZN11dawn_native25CommandBufferStateTracker19CheckMissingAspectsENSt3__16bitsetILm4EEE(%class.Result* nonnull sret %5, %"class.dawn_native::CommandBufferStateTracker"* %1, i64 %29)
  %30 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %25, align 8
  %31 = icmp eq %"class.dawn_native::ErrorData"* %30, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %25, align 8
  br i1 %31, label %35, label %32, !prof !2

32:                                               ; preds = %23
  %33 = ptrtoint %"class.dawn_native::ErrorData"* %30 to i64
  tail call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %30, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN11dawn_native25CommandBufferStateTracker17ValidateOperationENSt3__16bitsetILm4EEE, i64 0, i64 0), i32 92) #9
  %34 = bitcast %class.Result* %0 to i64*
  store i64 %33, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %37

35:                                               ; preds = %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %36 = bitcast %class.Result* %0 to i64*
  store i64 0, i64* %36, align 8
  br label %37

37:                                               ; preds = %32, %20, %35, %12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native25CommandBufferStateTracker15ValidateCanDrawEv(%class.Result* noalias nocapture sret, %"class.dawn_native::CommandBufferStateTracker"* nocapture) local_unnamed_addr #0 align 2 {
  tail call void @_ZN11dawn_native25CommandBufferStateTracker17ValidateOperationENSt3__16bitsetILm4EEE(%class.Result* sret %0, %"class.dawn_native::CommandBufferStateTracker"* %1, i64 7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native25CommandBufferStateTracker22ValidateCanDrawIndexedEv(%class.Result* noalias nocapture sret, %"class.dawn_native::CommandBufferStateTracker"* nocapture) local_unnamed_addr #0 align 2 {
  tail call void @_ZN11dawn_native25CommandBufferStateTracker17ValidateOperationENSt3__16bitsetILm4EEE(%class.Result* sret %0, %"class.dawn_native::CommandBufferStateTracker"* %1, i64 15)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native25CommandBufferStateTracker19CheckMissingAspectsENSt3__16bitsetILm4EEE(%class.Result* noalias nocapture sret, %"class.dawn_native::CommandBufferStateTracker"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %5 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %6 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %7 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %8 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %9 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %10 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %11 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.BitSetIterator<4, unsigned int>::Iterator", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = and i64 %2, 15
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %3
  %26 = bitcast %class.Result* %0 to i64*
  store i64 0, i64* %26, align 8
  br label %321

27:                                               ; preds = %3
  %28 = and i64 %2, 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %71, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %1, i64 0, i32 7
  %32 = load %"class.dawn_native::RenderPipelineBase"*, %"class.dawn_native::RenderPipelineBase"** %31, align 8
  %33 = tail call i32 @_ZNK11dawn_native18RenderPipelineBase19GetStripIndexFormatEv(%"class.dawn_native::RenderPipelineBase"* %32) #9
  %34 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %1, i64 0, i32 3
  %35 = load i8, i8* %34, align 8, !range !3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %50

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  store i8 20, i8* %39, align 1
  %40 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 20, i1 false) #9
  %41 = getelementptr inbounds i8, i8* %40, i64 20
  store i8 0, i8* %41, align 4
  %42 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZN11dawn_native25CommandBufferStateTracker19CheckMissingAspectsENSt3__16bitsetILm4EEE, i64 0, i64 0), i32 145) #9
  %43 = ptrtoint %"class.dawn_native::ErrorData"* %42 to i64
  %44 = bitcast %class.Result* %0 to i64*
  store i64 %43, i64* %44, align 8
  %45 = load i8, i8* %39, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %321

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #10
  br label %321

50:                                               ; preds = %30
  %51 = load %"class.dawn_native::RenderPipelineBase"*, %"class.dawn_native::RenderPipelineBase"** %31, align 8
  %52 = tail call i32 @_ZNK11dawn_native18RenderPipelineBase20GetPrimitiveTopologyEv(%"class.dawn_native::RenderPipelineBase"* %51) #9
  %53 = tail call zeroext i1 @_ZN11dawn_native24IsStripPrimitiveTopologyEN4wgpu17PrimitiveTopologyE(i32 %52) #9
  tail call void @llvm.assume(i1 %53)
  %54 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %1, i64 0, i32 4
  %55 = load i32, i32* %54, align 4
  %56 = icmp ne i32 %55, %33
  tail call void @llvm.assume(i1 %56)
  %57 = tail call i8* @_Znwm(i64 64) #10
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %57, i8** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast i64* %59 to <2 x i64>*
  store <2 x i64> <i64 62, i64 -9223372036854775744>, <2 x i64>* %60, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* align 1 getelementptr inbounds ([63 x i8], [63 x i8]* @.str.2, i64 0, i64 0), i64 62, i1 false) #9
  %61 = getelementptr inbounds i8, i8* %57, i64 62
  store i8 0, i8* %61, align 1
  %62 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %13, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZN11dawn_native25CommandBufferStateTracker19CheckMissingAspectsENSt3__16bitsetILm4EEE, i64 0, i64 0), i32 149) #9
  %63 = ptrtoint %"class.dawn_native::ErrorData"* %62 to i64
  %64 = bitcast %class.Result* %0 to i64*
  store i64 %63, i64* %64, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %321

69:                                               ; preds = %50
  %70 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %70) #10
  br label %321

71:                                               ; preds = %27
  %72 = and i64 %2, 4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  store i8 21, i8* %76, align 1
  %77 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i64 21, i1 false) #9
  %78 = getelementptr inbounds i8, i8* %77, i64 21
  store i8 0, i8* %78, align 1
  %79 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %14, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZN11dawn_native25CommandBufferStateTracker19CheckMissingAspectsENSt3__16bitsetILm4EEE, i64 0, i64 0), i32 161) #9
  %80 = ptrtoint %"class.dawn_native::ErrorData"* %79 to i64
  %81 = bitcast %class.Result* %0 to i64*
  store i64 %80, i64* %81, align 8
  %82 = load i8, i8* %76, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %321

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #10
  br label %321

87:                                               ; preds = %71
  %88 = and i64 %2, 2
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %305, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %1, i64 0, i32 6
  %92 = load %"class.dawn_native::PipelineLayoutBase"*, %"class.dawn_native::PipelineLayoutBase"** %91, align 8
  %93 = tail call dereferenceable(8) %"class.ityp::bitset.21"* @_ZNK11dawn_native18PipelineLayoutBase23GetBindGroupLayoutsMaskEv(%"class.dawn_native::PipelineLayoutBase"* %92) #9
  %94 = getelementptr inbounds %"class.ityp::bitset.21", %"class.ityp::bitset.21"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load i64, i64* %94, align 8, !noalias !4
  %96 = bitcast %"class.BitSetIterator<4, unsigned int>::Iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #9
  %97 = getelementptr inbounds %"class.BitSetIterator<4, unsigned int>::Iterator", %"class.BitSetIterator<4, unsigned int>::Iterator"* %15, i64 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.BitSetIterator<4, unsigned int>::Iterator", %"class.BitSetIterator<4, unsigned int>::Iterator"* %15, i64 0, i32 1
  %99 = getelementptr inbounds %"class.BitSetIterator<4, unsigned int>::Iterator", %"class.BitSetIterator<4, unsigned int>::Iterator"* %15, i64 0, i32 2
  store i64 %95, i64* %97, align 8, !alias.scope !7
  %100 = bitcast i64* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #9, !alias.scope !7
  %101 = and i64 %95, 15
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %136, label %103

103:                                              ; preds = %90
  %104 = ptrtoint %"class.BitSetIterator<4, unsigned int>::Iterator"* %15 to i64
  %105 = bitcast %"class.std::__1::__bit_iterator.140"* %7 to i8*
  %106 = bitcast %"class.std::__1::__bit_iterator.140"* %4 to i8*
  %107 = bitcast %"class.std::__1::__bit_iterator.140"* %5 to i8*
  %108 = bitcast %"class.std::__1::__bit_iterator.140"* %6 to i8*
  %109 = bitcast %"class.std::__1::__bit_iterator.140"* %4 to i64*
  %110 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %4, i64 0, i32 1
  %111 = bitcast %"class.std::__1::__bit_iterator.140"* %5 to i64*
  %112 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %5, i64 0, i32 1
  %113 = bitcast %"class.std::__1::__bit_iterator.140"* %6 to i64*
  %114 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %6, i64 0, i32 1
  br label %115

115:                                              ; preds = %127, %103
  %116 = phi i64 [ %95, %103 ], [ %129, %127 ]
  %117 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %118 = and i64 %117, %116
  %119 = and i64 %118, 4294967295
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %127, label %121

121:                                              ; preds = %115
  %122 = trunc i64 %118 to i32
  %123 = call i32 @_Z11ScanForwardj(i32 %122) #9
  %124 = zext i32 %123 to i64
  %125 = load i64, i64* %99, align 8, !alias.scope !7
  %126 = add i64 %125, %124
  br label %133

127:                                              ; preds = %115
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #9, !noalias !7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #9, !noalias !7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #9, !noalias !7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #9, !noalias !7
  store i64 %104, i64* %109, align 8, !noalias !10
  store i32 4, i32* %110, align 8, !noalias !10
  store i64 %104, i64* %111, align 8, !noalias !10
  store i32 4, i32* %112, align 8, !noalias !10
  store i64 %104, i64* %113, align 8, !noalias !10
  store i32 0, i32* %114, align 8, !noalias !10
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.140"* nonnull sret %7, %"class.std::__1::__bit_iterator.140"* nonnull %4, %"class.std::__1::__bit_iterator.140"* nonnull %5, %"class.std::__1::__bit_iterator.140"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #9, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #9, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #9, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #9, !noalias !7
  %128 = load i64, i64* %97, align 8, !alias.scope !7
  %129 = and i64 %128, -16
  store i64 %129, i64* %97, align 8, !alias.scope !7
  %130 = load i64, i64* %99, align 8, !alias.scope !7
  %131 = add i64 %130, 32
  store i64 %131, i64* %99, align 8, !alias.scope !7
  %132 = icmp ult i64 %131, 4
  br i1 %132, label %115, label %133

133:                                              ; preds = %127, %121
  %134 = phi i64 [ %125, %121 ], [ %131, %127 ]
  %135 = phi i64 [ %126, %121 ], [ 0, %127 ]
  store i64 %135, i64* %98, align 8, !alias.scope !7
  br label %138

136:                                              ; preds = %90
  store i64 32, i64* %99, align 8, !alias.scope !7
  %137 = ptrtoint %"class.BitSetIterator<4, unsigned int>::Iterator"* %15 to i64
  br label %138

138:                                              ; preds = %133, %136
  %139 = phi i64 [ %104, %133 ], [ %137, %136 ]
  %140 = phi i64 [ %135, %133 ], [ 0, %136 ]
  %141 = phi i64 [ %134, %133 ], [ 32, %136 ]
  %142 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %1, i64 0, i32 8
  %143 = bitcast %"class.std::__1::__bit_iterator.140"* %11 to i8*
  %144 = bitcast %"class.std::__1::__bit_iterator.140"* %8 to i8*
  %145 = bitcast %"class.std::__1::__bit_iterator.140"* %9 to i8*
  %146 = bitcast %"class.std::__1::__bit_iterator.140"* %10 to i8*
  %147 = bitcast %"class.std::__1::__bit_iterator.140"* %8 to i64*
  %148 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %8, i64 0, i32 1
  %149 = bitcast %"class.std::__1::__bit_iterator.140"* %9 to i64*
  %150 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %9, i64 0, i32 1
  %151 = bitcast %"class.std::__1::__bit_iterator.140"* %10 to i64*
  %152 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %10, i64 0, i32 1
  br label %153

153:                                              ; preds = %298, %138
  %154 = phi i64 [ %300, %298 ], [ %140, %138 ]
  %155 = phi i64 [ %299, %298 ], [ %141, %138 ]
  %156 = icmp eq i64 %155, 32
  br i1 %156, label %157, label %161

157:                                              ; preds = %153
  %158 = load i64, i64* %97, align 8
  %159 = and i64 %158, 15
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %303, label %161

161:                                              ; preds = %157, %153
  %162 = and i64 %154, 4294967295
  %163 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %1, i64 0, i32 1, i32 0, i32 0, i64 %162
  %164 = load %"class.dawn_native::BindGroupBase"*, %"class.dawn_native::BindGroupBase"** %163, align 8
  %165 = icmp eq %"class.dawn_native::BindGroupBase"* %164, null
  %166 = trunc i64 %154 to i32
  br i1 %165, label %167, label %191

167:                                              ; preds = %161
  %168 = trunc i64 %154 to i32
  %169 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #9
  call void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* nonnull sret %17, i32 %168) #9
  %170 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %17, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0)) #9, !noalias !13
  %171 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %172 = bitcast %"class.std::__1::basic_string"* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %171, i8* align 8 %172, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %172, i8 0, i64 24, i1 false) #9, !noalias !13
  %173 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %16, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZN11dawn_native25CommandBufferStateTracker19CheckMissingAspectsENSt3__16bitsetILm4EEE, i64 0, i64 0), i32 168) #9
  %174 = ptrtoint %"class.dawn_native::ErrorData"* %173 to i64
  %175 = bitcast %class.Result* %0 to i64*
  store i64 %174, i64* %175, align 8
  %176 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %167
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %182) #10
  br label %183

183:                                              ; preds = %167, %180
  %184 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  br i1 %187, label %188, label %301

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load i8*, i8** %189, align 8
  call void @_ZdlPv(i8* %190) #10
  br label %301

191:                                              ; preds = %161
  %192 = load %"class.dawn_native::PipelineLayoutBase"*, %"class.dawn_native::PipelineLayoutBase"** %91, align 8
  %193 = call %"class.dawn_native::BindGroupLayoutBase"* @_ZN11dawn_native18PipelineLayoutBase18GetBindGroupLayoutEj(%"class.dawn_native::PipelineLayoutBase"* %192, i32 %166) #9
  %194 = load %"class.dawn_native::BindGroupBase"*, %"class.dawn_native::BindGroupBase"** %163, align 8
  %195 = call %"class.dawn_native::BindGroupLayoutBase"* @_ZN11dawn_native13BindGroupBase9GetLayoutEv(%"class.dawn_native::BindGroupBase"* %194) #9
  %196 = icmp eq %"class.dawn_native::BindGroupLayoutBase"* %193, %195
  br i1 %196, label %221, label %197

197:                                              ; preds = %191
  %198 = trunc i64 %154 to i32
  %199 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %199) #9
  call void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* nonnull sret %19, i32 %198) #9
  %200 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %19, i64 0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i64 0, i64 0)) #9, !noalias !16
  %201 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %202 = bitcast %"class.std::__1::basic_string"* %200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %201, i8* align 8 %202, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %202, i8 0, i64 24, i1 false) #9, !noalias !16
  %203 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %18, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZN11dawn_native25CommandBufferStateTracker19CheckMissingAspectsENSt3__16bitsetILm4EEE, i64 0, i64 0), i32 173) #9
  %204 = ptrtoint %"class.dawn_native::ErrorData"* %203 to i64
  %205 = bitcast %class.Result* %0 to i64*
  store i64 %204, i64* %205, align 8
  %206 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %206, i64 0, i32 1, i32 0
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %197
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %212) #10
  br label %213

213:                                              ; preds = %197, %210
  %214 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %214, i64 0, i32 1, i32 0
  %216 = load i8, i8* %215, align 1
  %217 = icmp slt i8 %216, 0
  br i1 %217, label %218, label %301

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load i8*, i8** %219, align 8
  call void @_ZdlPv(i8* %220) #10
  br label %301

221:                                              ; preds = %191
  %222 = load %"class.dawn_native::BindGroupBase"*, %"class.dawn_native::BindGroupBase"** %163, align 8
  %223 = call dereferenceable(16) %"class.ityp::span.15"* @_ZNK11dawn_native13BindGroupBase24GetUnverifiedBufferSizesEv(%"class.dawn_native::BindGroupBase"* %222) #9
  %224 = getelementptr inbounds %"class.ityp::span.15", %"class.ityp::span.15"* %223, i64 0, i32 0
  %225 = load i64*, i64** %224, align 8
  %226 = getelementptr inbounds %"class.ityp::span.15", %"class.ityp::span.15"* %223, i64 0, i32 1
  %227 = load i32, i32* %226, align 8
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %268, label %229

229:                                              ; preds = %221
  %230 = load %"class.ityp::array.104"*, %"class.ityp::array.104"** %142, align 8
  %231 = getelementptr inbounds %"class.ityp::array.104", %"class.ityp::array.104"* %230, i64 0, i32 0, i32 0, i64 %162, i32 0, i32 0
  %232 = load i64*, i64** %231, align 8
  %233 = zext i32 %227 to i64
  br label %236

234:                                              ; preds = %236
  %235 = icmp eq i64 %243, %233
  br i1 %235, label %268, label %236

236:                                              ; preds = %234, %229
  %237 = phi i64 [ 0, %229 ], [ %243, %234 ]
  %238 = getelementptr inbounds i64, i64* %225, i64 %237
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds i64, i64* %232, i64 %237
  %241 = load i64, i64* %240, align 8
  %242 = icmp ult i64 %239, %241
  %243 = add nuw nsw i64 %237, 1
  br i1 %242, label %244, label %234

244:                                              ; preds = %236
  %245 = trunc i64 %154 to i32
  %246 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %246) #9
  call void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* nonnull sret %21, i32 %245) #9
  %247 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %21, i64 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0)) #9, !noalias !19
  %248 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %249 = bitcast %"class.std::__1::basic_string"* %247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %248, i8* align 8 %249, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %249, i8 0, i64 24, i1 false) #9, !noalias !19
  %250 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %20, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZN11dawn_native25CommandBufferStateTracker19CheckMissingAspectsENSt3__16bitsetILm4EEE, i64 0, i64 0), i32 177) #9
  %251 = ptrtoint %"class.dawn_native::ErrorData"* %250 to i64
  %252 = bitcast %class.Result* %0 to i64*
  store i64 %251, i64* %252, align 8
  %253 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %254 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %253, i64 0, i32 1, i32 0
  %255 = load i8, i8* %254, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %260

257:                                              ; preds = %244
  %258 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  call void @_ZdlPv(i8* %259) #10
  br label %260

260:                                              ; preds = %244, %257
  %261 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %261, i64 0, i32 1, i32 0
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %301

265:                                              ; preds = %260
  %266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load i8*, i8** %266, align 8
  call void @_ZdlPv(i8* %267) #10
  br label %301

268:                                              ; preds = %234, %221
  %269 = load i64, i64* %98, align 8
  %270 = load i64, i64* %99, align 8
  %271 = sub i64 %269, %270
  %272 = icmp ugt i64 %271, 3
  br i1 %272, label %273, label %274

273:                                              ; preds = %268
  call void @abort() #11
  unreachable

274:                                              ; preds = %268
  %275 = shl i64 1, %271
  %276 = xor i64 %275, -1
  %277 = load i64, i64* %97, align 8
  %278 = and i64 %277, %276
  store i64 %278, i64* %97, align 8
  %279 = icmp ult i64 %270, 4
  br i1 %279, label %280, label %298

280:                                              ; preds = %274, %292
  %281 = phi i64 [ %294, %292 ], [ %278, %274 ]
  %282 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %283 = and i64 %282, %281
  %284 = and i64 %283, 4294967295
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %292, label %286

286:                                              ; preds = %280
  %287 = trunc i64 %283 to i32
  %288 = call i32 @_Z11ScanForwardj(i32 %287) #9
  %289 = zext i32 %288 to i64
  %290 = load i64, i64* %99, align 8
  %291 = add i64 %290, %289
  br label %298

292:                                              ; preds = %280
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %143) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %146) #9
  store i64 %139, i64* %147, align 8, !noalias !22
  store i32 4, i32* %148, align 8, !noalias !22
  store i64 %139, i64* %149, align 8, !noalias !22
  store i32 4, i32* %150, align 8, !noalias !22
  store i64 %139, i64* %151, align 8, !noalias !22
  store i32 0, i32* %152, align 8, !noalias !22
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.140"* nonnull sret %11, %"class.std::__1::__bit_iterator.140"* nonnull %8, %"class.std::__1::__bit_iterator.140"* nonnull %9, %"class.std::__1::__bit_iterator.140"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %146) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %143) #9
  %293 = load i64, i64* %97, align 8
  %294 = and i64 %293, -16
  store i64 %294, i64* %97, align 8
  %295 = load i64, i64* %99, align 8
  %296 = add i64 %295, 32
  store i64 %296, i64* %99, align 8
  %297 = icmp ult i64 %296, 4
  br i1 %297, label %280, label %298

298:                                              ; preds = %292, %274, %286
  %299 = phi i64 [ %290, %286 ], [ %270, %274 ], [ %296, %292 ]
  %300 = phi i64 [ %291, %286 ], [ 0, %274 ], [ 0, %292 ]
  store i64 %300, i64* %98, align 8
  br label %153

301:                                              ; preds = %265, %260, %218, %213, %188, %183
  %302 = phi i8* [ %169, %183 ], [ %169, %188 ], [ %199, %213 ], [ %199, %218 ], [ %246, %260 ], [ %246, %265 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %302) #9
  br label %303

303:                                              ; preds = %157, %301
  %304 = phi i1 [ true, %301 ], [ false, %157 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #9
  call void @llvm.assume(i1 %304)
  br label %321

305:                                              ; preds = %87
  %306 = and i64 %2, 1
  %307 = icmp ne i64 %306, 0
  tail call void @llvm.assume(i1 %307)
  %308 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %309 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %308, i64 0, i32 1, i32 0
  store i8 16, i8* %309, align 1
  %310 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %310, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i64 16, i1 false) #9
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %312 = bitcast i64* %311 to i8*
  store i8 0, i8* %312, align 8
  %313 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %22, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._ZN11dawn_native25CommandBufferStateTracker19CheckMissingAspectsENSt3__16bitsetILm4EEE, i64 0, i64 0), i32 190) #9
  %314 = ptrtoint %"class.dawn_native::ErrorData"* %313 to i64
  %315 = bitcast %class.Result* %0 to i64*
  store i64 %314, i64* %315, align 8
  %316 = load i8, i8* %309, align 1
  %317 = icmp slt i8 %316, 0
  br i1 %317, label %318, label %321

318:                                              ; preds = %305
  %319 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load i8*, i8** %319, align 8
  call void @_ZdlPv(i8* %320) #10
  br label %321

321:                                              ; preds = %318, %305, %84, %74, %69, %50, %47, %37, %303, %25
  ret void
}

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native25CommandBufferStateTracker20RecomputeLazyAspectsENSt3__16bitsetILm4EEE(%"class.dawn_native::CommandBufferStateTracker"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %4 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %5 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %6 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %7 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %8 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %9 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %10 = alloca %"class.std::__1::__bit_iterator.140", align 8
  %11 = alloca %"class.BitSetIterator<4, unsigned int>::Iterator", align 8
  %12 = and i64 %1, 2
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %158, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 6
  %16 = load %"class.dawn_native::PipelineLayoutBase"*, %"class.dawn_native::PipelineLayoutBase"** %15, align 8
  %17 = tail call dereferenceable(8) %"class.ityp::bitset.21"* @_ZNK11dawn_native18PipelineLayoutBase23GetBindGroupLayoutsMaskEv(%"class.dawn_native::PipelineLayoutBase"* %16) #9
  %18 = getelementptr inbounds %"class.ityp::bitset.21", %"class.ityp::bitset.21"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8, !noalias !25
  %20 = bitcast %"class.BitSetIterator<4, unsigned int>::Iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.BitSetIterator<4, unsigned int>::Iterator", %"class.BitSetIterator<4, unsigned int>::Iterator"* %11, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.BitSetIterator<4, unsigned int>::Iterator", %"class.BitSetIterator<4, unsigned int>::Iterator"* %11, i64 0, i32 1
  %23 = getelementptr inbounds %"class.BitSetIterator<4, unsigned int>::Iterator", %"class.BitSetIterator<4, unsigned int>::Iterator"* %11, i64 0, i32 2
  store i64 %19, i64* %21, align 8, !alias.scope !28
  %24 = bitcast i64* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #9, !alias.scope !28
  %25 = and i64 %19, 15
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %60, label %27

27:                                               ; preds = %14
  %28 = ptrtoint %"class.BitSetIterator<4, unsigned int>::Iterator"* %11 to i64
  %29 = bitcast %"class.std::__1::__bit_iterator.140"* %6 to i8*
  %30 = bitcast %"class.std::__1::__bit_iterator.140"* %3 to i8*
  %31 = bitcast %"class.std::__1::__bit_iterator.140"* %4 to i8*
  %32 = bitcast %"class.std::__1::__bit_iterator.140"* %5 to i8*
  %33 = bitcast %"class.std::__1::__bit_iterator.140"* %3 to i64*
  %34 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %3, i64 0, i32 1
  %35 = bitcast %"class.std::__1::__bit_iterator.140"* %4 to i64*
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %4, i64 0, i32 1
  %37 = bitcast %"class.std::__1::__bit_iterator.140"* %5 to i64*
  %38 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %5, i64 0, i32 1
  br label %39

39:                                               ; preds = %51, %27
  %40 = phi i64 [ %19, %27 ], [ %53, %51 ]
  %41 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %42 = and i64 %41, %40
  %43 = and i64 %42, 4294967295
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %39
  %46 = trunc i64 %42 to i32
  %47 = call i32 @_Z11ScanForwardj(i32 %46) #9
  %48 = zext i32 %47 to i64
  %49 = load i64, i64* %23, align 8, !alias.scope !28
  %50 = add i64 %49, %48
  br label %57

51:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #9, !noalias !28
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #9, !noalias !28
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #9, !noalias !28
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #9, !noalias !28
  store i64 %28, i64* %33, align 8, !noalias !31
  store i32 4, i32* %34, align 8, !noalias !31
  store i64 %28, i64* %35, align 8, !noalias !31
  store i32 4, i32* %36, align 8, !noalias !31
  store i64 %28, i64* %37, align 8, !noalias !31
  store i32 0, i32* %38, align 8, !noalias !31
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.140"* nonnull sret %6, %"class.std::__1::__bit_iterator.140"* nonnull %3, %"class.std::__1::__bit_iterator.140"* nonnull %4, %"class.std::__1::__bit_iterator.140"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #9, !noalias !28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #9, !noalias !28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #9, !noalias !28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #9, !noalias !28
  %52 = load i64, i64* %21, align 8, !alias.scope !28
  %53 = and i64 %52, -16
  store i64 %53, i64* %21, align 8, !alias.scope !28
  %54 = load i64, i64* %23, align 8, !alias.scope !28
  %55 = add i64 %54, 32
  store i64 %55, i64* %23, align 8, !alias.scope !28
  %56 = icmp ult i64 %55, 4
  br i1 %56, label %39, label %57

57:                                               ; preds = %51, %45
  %58 = phi i64 [ %49, %45 ], [ %55, %51 ]
  %59 = phi i64 [ %50, %45 ], [ 0, %51 ]
  store i64 %59, i64* %22, align 8, !alias.scope !28
  br label %62

60:                                               ; preds = %14
  store i64 32, i64* %23, align 8, !alias.scope !28
  %61 = ptrtoint %"class.BitSetIterator<4, unsigned int>::Iterator"* %11 to i64
  br label %62

62:                                               ; preds = %57, %60
  %63 = phi i64 [ %28, %57 ], [ %61, %60 ]
  %64 = phi i64 [ %59, %57 ], [ 0, %60 ]
  %65 = phi i64 [ %58, %57 ], [ 32, %60 ]
  %66 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 8
  %67 = bitcast %"class.std::__1::__bit_iterator.140"* %10 to i8*
  %68 = bitcast %"class.std::__1::__bit_iterator.140"* %7 to i8*
  %69 = bitcast %"class.std::__1::__bit_iterator.140"* %8 to i8*
  %70 = bitcast %"class.std::__1::__bit_iterator.140"* %9 to i8*
  %71 = bitcast %"class.std::__1::__bit_iterator.140"* %7 to i64*
  %72 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %7, i64 0, i32 1
  %73 = bitcast %"class.std::__1::__bit_iterator.140"* %8 to i64*
  %74 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %8, i64 0, i32 1
  %75 = bitcast %"class.std::__1::__bit_iterator.140"* %9 to i64*
  %76 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %9, i64 0, i32 1
  br label %77

77:                                               ; preds = %151, %62
  %78 = phi i64 [ %153, %151 ], [ %64, %62 ]
  %79 = phi i64 [ %152, %151 ], [ %65, %62 ]
  %80 = icmp eq i64 %79, 32
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  %82 = load i64, i64* %21, align 8
  %83 = and i64 %82, 15
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %154, label %85

85:                                               ; preds = %81, %77
  %86 = and i64 %78, 4294967295
  %87 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 1, i32 0, i32 0, i64 %86
  %88 = load %"class.dawn_native::BindGroupBase"*, %"class.dawn_native::BindGroupBase"** %87, align 8
  %89 = icmp eq %"class.dawn_native::BindGroupBase"* %88, null
  br i1 %89, label %120, label %90

90:                                               ; preds = %85
  %91 = trunc i64 %78 to i32
  %92 = load %"class.dawn_native::PipelineLayoutBase"*, %"class.dawn_native::PipelineLayoutBase"** %15, align 8
  %93 = call %"class.dawn_native::BindGroupLayoutBase"* @_ZN11dawn_native18PipelineLayoutBase18GetBindGroupLayoutEj(%"class.dawn_native::PipelineLayoutBase"* %92, i32 %91) #9
  %94 = load %"class.dawn_native::BindGroupBase"*, %"class.dawn_native::BindGroupBase"** %87, align 8
  %95 = call %"class.dawn_native::BindGroupLayoutBase"* @_ZN11dawn_native13BindGroupBase9GetLayoutEv(%"class.dawn_native::BindGroupBase"* %94) #9
  %96 = icmp eq %"class.dawn_native::BindGroupLayoutBase"* %93, %95
  br i1 %96, label %97, label %120

97:                                               ; preds = %90
  %98 = load %"class.dawn_native::BindGroupBase"*, %"class.dawn_native::BindGroupBase"** %87, align 8
  %99 = call dereferenceable(16) %"class.ityp::span.15"* @_ZNK11dawn_native13BindGroupBase24GetUnverifiedBufferSizesEv(%"class.dawn_native::BindGroupBase"* %98) #9
  %100 = getelementptr inbounds %"class.ityp::span.15", %"class.ityp::span.15"* %99, i64 0, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = getelementptr inbounds %"class.ityp::span.15", %"class.ityp::span.15"* %99, i64 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %97
  %106 = load %"class.ityp::array.104"*, %"class.ityp::array.104"** %66, align 8
  %107 = getelementptr inbounds %"class.ityp::array.104", %"class.ityp::array.104"* %106, i64 0, i32 0, i32 0, i64 %86, i32 0, i32 0
  %108 = load i64*, i64** %107, align 8
  %109 = zext i32 %103 to i64
  br label %112

110:                                              ; preds = %112
  %111 = icmp eq i64 %119, %109
  br i1 %111, label %121, label %112

112:                                              ; preds = %110, %105
  %113 = phi i64 [ 0, %105 ], [ %119, %110 ]
  %114 = getelementptr inbounds i64, i64* %101, i64 %113
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds i64, i64* %108, i64 %113
  %117 = load i64, i64* %116, align 8
  %118 = icmp ult i64 %115, %117
  %119 = add nuw nsw i64 %113, 1
  br i1 %118, label %120, label %110

120:                                              ; preds = %85, %90, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #9
  br label %158

121:                                              ; preds = %110, %97
  %122 = load i64, i64* %22, align 8
  %123 = load i64, i64* %23, align 8
  %124 = sub i64 %122, %123
  %125 = icmp ugt i64 %124, 3
  br i1 %125, label %126, label %127

126:                                              ; preds = %121
  call void @abort() #11
  unreachable

127:                                              ; preds = %121
  %128 = shl i64 1, %124
  %129 = xor i64 %128, -1
  %130 = load i64, i64* %21, align 8
  %131 = and i64 %130, %129
  store i64 %131, i64* %21, align 8
  %132 = icmp ult i64 %123, 4
  br i1 %132, label %133, label %151

133:                                              ; preds = %127, %145
  %134 = phi i64 [ %147, %145 ], [ %131, %127 ]
  %135 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %136 = and i64 %135, %134
  %137 = and i64 %136, 4294967295
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %133
  %140 = trunc i64 %136 to i32
  %141 = call i32 @_Z11ScanForwardj(i32 %140) #9
  %142 = zext i32 %141 to i64
  %143 = load i64, i64* %23, align 8
  %144 = add i64 %143, %142
  br label %151

145:                                              ; preds = %133
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #9
  store i64 %63, i64* %71, align 8, !noalias !34
  store i32 4, i32* %72, align 8, !noalias !34
  store i64 %63, i64* %73, align 8, !noalias !34
  store i32 4, i32* %74, align 8, !noalias !34
  store i64 %63, i64* %75, align 8, !noalias !34
  store i32 0, i32* %76, align 8, !noalias !34
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.140"* nonnull sret %10, %"class.std::__1::__bit_iterator.140"* nonnull %7, %"class.std::__1::__bit_iterator.140"* nonnull %8, %"class.std::__1::__bit_iterator.140"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #9
  %146 = load i64, i64* %21, align 8
  %147 = and i64 %146, -16
  store i64 %147, i64* %21, align 8
  %148 = load i64, i64* %23, align 8
  %149 = add i64 %148, 32
  store i64 %149, i64* %23, align 8
  %150 = icmp ult i64 %149, 4
  br i1 %150, label %133, label %151

151:                                              ; preds = %145, %127, %139
  %152 = phi i64 [ %143, %139 ], [ %123, %127 ], [ %149, %145 ]
  %153 = phi i64 [ %144, %139 ], [ 0, %127 ], [ 0, %145 ]
  store i64 %153, i64* %22, align 8
  br label %77

154:                                              ; preds = %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #9
  %155 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %156 = load i64, i64* %155, align 8
  %157 = or i64 %156, 2
  store i64 %157, i64* %155, align 8
  br label %158

158:                                              ; preds = %2, %120, %154
  %159 = and i64 %1, 4
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %177, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 7
  %163 = load %"class.dawn_native::RenderPipelineBase"*, %"class.dawn_native::RenderPipelineBase"** %162, align 8
  %164 = call dereferenceable(8) %"class.ityp::bitset"* @_ZNK11dawn_native18RenderPipelineBase24GetVertexBufferSlotsUsedEv(%"class.dawn_native::RenderPipelineBase"* %163) #9
  %165 = getelementptr inbounds %"class.ityp::bitset", %"class.ityp::bitset"* %164, i64 0, i32 0, i32 0, i32 0
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %168 = load i64, i64* %167, align 8
  %169 = xor i64 %168, 255
  %170 = and i64 %166, 255
  %171 = and i64 %170, %169
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %177

173:                                              ; preds = %161
  %174 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %175 = load i64, i64* %174, align 8
  %176 = or i64 %175, 4
  store i64 %176, i64* %174, align 8
  br label %177

177:                                              ; preds = %158, %161, %173
  %178 = and i64 %1, 8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %199, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 3
  %182 = load i8, i8* %181, align 8, !range !3
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %199, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 7
  %186 = load %"class.dawn_native::RenderPipelineBase"*, %"class.dawn_native::RenderPipelineBase"** %185, align 8
  %187 = call i32 @_ZNK11dawn_native18RenderPipelineBase20GetPrimitiveTopologyEv(%"class.dawn_native::RenderPipelineBase"* %186) #9
  %188 = call zeroext i1 @_ZN11dawn_native24IsStripPrimitiveTopologyEN4wgpu17PrimitiveTopologyE(i32 %187) #9
  br i1 %188, label %189, label %195

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 4
  %191 = load i32, i32* %190, align 4
  %192 = load %"class.dawn_native::RenderPipelineBase"*, %"class.dawn_native::RenderPipelineBase"** %185, align 8
  %193 = call i32 @_ZNK11dawn_native18RenderPipelineBase19GetStripIndexFormatEv(%"class.dawn_native::RenderPipelineBase"* %192) #9
  %194 = icmp eq i32 %191, %193
  br i1 %194, label %195, label %199

195:                                              ; preds = %189, %184
  %196 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %197 = load i64, i64* %196, align 8
  %198 = or i64 %197, 8
  store i64 %198, i64* %196, align 8
  br label %199

199:                                              ; preds = %177, %180, %189, %195
  ret void
}

declare dereferenceable(8) %"class.ityp::bitset.21"* @_ZNK11dawn_native18PipelineLayoutBase23GetBindGroupLayoutsMaskEv(%"class.dawn_native::PipelineLayoutBase"*) local_unnamed_addr #2

declare %"class.dawn_native::BindGroupLayoutBase"* @_ZN11dawn_native18PipelineLayoutBase18GetBindGroupLayoutEj(%"class.dawn_native::PipelineLayoutBase"*, i32) local_unnamed_addr #2

declare %"class.dawn_native::BindGroupLayoutBase"* @_ZN11dawn_native13BindGroupBase9GetLayoutEv(%"class.dawn_native::BindGroupBase"*) local_unnamed_addr #2

declare dereferenceable(16) %"class.ityp::span.15"* @_ZNK11dawn_native13BindGroupBase24GetUnverifiedBufferSizesEv(%"class.dawn_native::BindGroupBase"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.ityp::bitset"* @_ZNK11dawn_native18RenderPipelineBase24GetVertexBufferSlotsUsedEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZN11dawn_native24IsStripPrimitiveTopologyEN4wgpu17PrimitiveTopologyE(i32) local_unnamed_addr #2

declare i32 @_ZNK11dawn_native18RenderPipelineBase20GetPrimitiveTopologyEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #2

declare i32 @_ZNK11dawn_native18RenderPipelineBase19GetStripIndexFormatEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #2

declare %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32, %"class.std::__1::basic_string"*, i8*, i8*, i32) local_unnamed_addr #2

declare void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native25CommandBufferStateTracker18SetComputePipelineEPNS_19ComputePipelineBaseE(%"class.dawn_native::CommandBufferStateTracker"* nocapture, %"class.dawn_native::ComputePipelineBase"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::ComputePipelineBase", %"class.dawn_native::ComputePipelineBase"* %1, i64 0, i32 0
  %4 = tail call %"class.dawn_native::PipelineLayoutBase"* @_ZN11dawn_native12PipelineBase9GetLayoutEv(%"class.dawn_native::PipelineBase"* %3) #9
  %5 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 6
  store %"class.dawn_native::PipelineLayoutBase"* %4, %"class.dawn_native::PipelineLayoutBase"** %5, align 8
  %6 = tail call dereferenceable(96) %"class.ityp::array.104"* @_ZNK11dawn_native12PipelineBase17GetMinBufferSizesEv(%"class.dawn_native::PipelineBase"* %3) #9
  %7 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 8
  store %"class.ityp::array.104"* %6, %"class.ityp::array.104"** %7, align 8
  %8 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 1, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native25CommandBufferStateTracker17SetPipelineCommonEPNS_12PipelineBaseE(%"class.dawn_native::CommandBufferStateTracker"* nocapture, %"class.dawn_native::PipelineBase"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.dawn_native::PipelineLayoutBase"* @_ZN11dawn_native12PipelineBase9GetLayoutEv(%"class.dawn_native::PipelineBase"* %1) #9
  %4 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 6
  store %"class.dawn_native::PipelineLayoutBase"* %3, %"class.dawn_native::PipelineLayoutBase"** %4, align 8
  %5 = tail call dereferenceable(96) %"class.ityp::array.104"* @_ZNK11dawn_native12PipelineBase17GetMinBufferSizesEv(%"class.dawn_native::PipelineBase"* %1) #9
  %6 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 8
  store %"class.ityp::array.104"* %5, %"class.ityp::array.104"** %6, align 8
  %7 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 1, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native25CommandBufferStateTracker17SetRenderPipelineEPNS_18RenderPipelineBaseE(%"class.dawn_native::CommandBufferStateTracker"* nocapture, %"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 7
  store %"class.dawn_native::RenderPipelineBase"* %1, %"class.dawn_native::RenderPipelineBase"** %3, align 8
  %4 = getelementptr inbounds %"class.dawn_native::RenderPipelineBase", %"class.dawn_native::RenderPipelineBase"* %1, i64 0, i32 0
  %5 = tail call %"class.dawn_native::PipelineLayoutBase"* @_ZN11dawn_native12PipelineBase9GetLayoutEv(%"class.dawn_native::PipelineBase"* %4) #9
  %6 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 6
  store %"class.dawn_native::PipelineLayoutBase"* %5, %"class.dawn_native::PipelineLayoutBase"** %6, align 8
  %7 = tail call dereferenceable(96) %"class.ityp::array.104"* @_ZNK11dawn_native12PipelineBase17GetMinBufferSizesEv(%"class.dawn_native::PipelineBase"* %4) #9
  %8 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 8
  store %"class.ityp::array.104"* %7, %"class.ityp::array.104"** %8, align 8
  %9 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 1, i64* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11dawn_native25CommandBufferStateTracker12SetBindGroupEjPNS_13BindGroupBaseE(%"class.dawn_native::CommandBufferStateTracker"* nocapture, i32, %"class.dawn_native::BindGroupBase"*) local_unnamed_addr #3 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 1, i32 0, i32 0, i64 %4
  store %"class.dawn_native::BindGroupBase"* %2, %"class.dawn_native::BindGroupBase"** %5, align 8
  %6 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -3
  store i64 %8, i64* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11dawn_native25CommandBufferStateTracker14SetIndexBufferEN4wgpu11IndexFormatEm(%"class.dawn_native::CommandBufferStateTracker"* nocapture, i32, i64) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 3
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 4
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 5
  store i64 %2, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native25CommandBufferStateTracker15SetVertexBufferEh(%"class.dawn_native::CommandBufferStateTracker"* nocapture, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = icmp ugt i8 %1, 7
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @abort() #11
  unreachable

5:                                                ; preds = %2
  %6 = zext i8 %1 to i64
  %7 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = shl i64 1, %6
  %9 = load i64, i64* %7, align 8
  %10 = or i64 %9, %8
  store i64 %10, i64* %7, align 8
  ret void
}

declare %"class.dawn_native::PipelineLayoutBase"* @_ZN11dawn_native12PipelineBase9GetLayoutEv(%"class.dawn_native::PipelineBase"*) local_unnamed_addr #2

declare dereferenceable(96) %"class.ityp::array.104"* @_ZNK11dawn_native12PipelineBase17GetMinBufferSizesEv(%"class.dawn_native::PipelineBase"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.dawn_native::BindGroupBase"* @_ZNK11dawn_native25CommandBufferStateTracker12GetBindGroupEj(%"class.dawn_native::CommandBufferStateTracker"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 1, i32 0, i32 0, i64 %3
  %5 = load %"class.dawn_native::BindGroupBase"*, %"class.dawn_native::BindGroupBase"** %4, align 8
  ret %"class.dawn_native::BindGroupBase"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.dawn_native::PipelineLayoutBase"* @_ZNK11dawn_native25CommandBufferStateTracker17GetPipelineLayoutEv(%"class.dawn_native::CommandBufferStateTracker"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::CommandBufferStateTracker", %"class.dawn_native::CommandBufferStateTracker"* %0, i64 0, i32 6
  %3 = load %"class.dawn_native::PipelineLayoutBase"*, %"class.dawn_native::PipelineLayoutBase"** %2, align 8
  ret %"class.dawn_native::PipelineLayoutBase"* %3
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i32 @_Z11ScanForwardj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.140"* noalias sret, %"class.std::__1::__bit_iterator.140"*, %"class.std::__1::__bit_iterator.140"*, %"class.std::__1::__bit_iterator.140"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator.140"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator.140"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator.140"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator.140"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator.140", %"class.std::__1::__bit_iterator.140"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.assume(i1) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIjLm4EEE: argument 0"}
!6 = distinct !{!6, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIjLm4EEE"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK14BitSetIteratorILm4EjE5beginEv: argument 0"}
!9 = distinct !{!9, !"_ZNK14BitSetIteratorILm4EjE5beginEv"}
!10 = !{!11, !8}
!11 = distinct !{!11, !12, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIjLm4EEE: argument 0"}
!27 = distinct !{!27, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIjLm4EEE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK14BitSetIteratorILm4EjE5beginEv: argument 0"}
!30 = distinct !{!30, !"_ZNK14BitSetIteratorILm4EjE5beginEv"}
!31 = !{!32, !29}
!32 = distinct !{!32, !33, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
