; ModuleID = '../../third_party/skia/src/core/SkResourceCache.cpp'
source_filename = "../../third_party/skia/src/core/SkResourceCache.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkMessageBus = type { %class.SkTDArray, %class.SkMutex }
%class.SkTDArray = type { %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"**, i32, i32 }
%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %"struct.SkResourceCache::PurgeSharedIDMessage"*, i64 }
%"struct.SkResourceCache::PurgeSharedIDMessage" = type { i64 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkResourceCache = type { %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"*, %"class.SkResourceCache::Hash"*, %class.SkDiscardableMemory* (i64)*, i64, i64, i64, i32, [4 x i8], %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox" }
%"struct.SkResourceCache::Rec" = type { i32 (...)**, %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"* }
%"class.SkResourceCache::Hash" = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* }
%"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot" = type <{ %"struct.SkResourceCache::Rec"*, i32, [4 x i8] }>
%class.SkDiscardableMemory = type { i32 (...)** }
%"struct.SkResourceCache::Key" = type { i32, i32, i32, i32, i8* }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkCachedData = type <{ i32 (...)**, %class.SkMutex, %union.anon, i8*, i64, i32, i32, i8, i8, [6 x i8] }>
%union.anon = type { %class.SkDiscardableMemory* }
%class.SkTraceMemoryDump = type { i32 (...)** }

$_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej = comdat any

$_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxD2Ev = comdat any

$_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE4PostES1_ = comdat any

$_ZN8SkTArrayIN15SkResourceCache20PurgeSharedIDMessageELb0EE4swapERS2_ = comdat any

$_ZN8SkTArrayIN15SkResourceCache20PurgeSharedIDMessageELb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN8SkTArrayIN15SkResourceCache20PurgeSharedIDMessageELb0EEC2EOS2_ = comdat any

@_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once = internal global { { { i8 } } } zeroinitializer, align 1
@_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE3bus = internal unnamed_addr global %class.SkMessageBus* null, align 8
@.str = private unnamed_addr constant [52 x i8] c"../../third_party/skia/src/core/SkResourceCache.cpp\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"SkResourceCache: count=%d bytes=%d %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"discardable\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8
@_ZZL20resource_cache_mutexvE5mutex = internal unnamed_addr global %class.SkMutex* null, align 8
@_ZGVZL20resource_cache_mutexvE5mutex = internal global i64 0, align 8
@_ZL14gResourceCache = internal unnamed_addr global %class.SkResourceCache* null, align 8
@.str.7 = private unnamed_addr constant [37 x i8] c"RC: %12s bytes %9lu  discardable %p\0A\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"skia/sk_resource_cache/%s_%p\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"discardable_size\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.12 = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1

@_ZN15SkResourceCacheC1EPFP19SkDiscardableMemorymE = hidden unnamed_addr alias void (%class.SkResourceCache*, %class.SkDiscardableMemory* (i64)*), void (%class.SkResourceCache*, %class.SkDiscardableMemory* (i64)*)* @_ZN15SkResourceCacheC2EPFP19SkDiscardableMemorymE
@_ZN15SkResourceCacheC1Em = hidden unnamed_addr alias void (%class.SkResourceCache*, i64), void (%class.SkResourceCache*, i64)* @_ZN15SkResourceCacheC2Em
@_ZN15SkResourceCacheD1Ev = hidden unnamed_addr alias void (%class.SkResourceCache*), void (%class.SkResourceCache*)* @_ZN15SkResourceCacheD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkMessageBus* @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %1, label %2 [
    i8 2, label %16
    i8 0, label %3
  ]

2:                                                ; preds = %3, %0
  br label %13

3:                                                ; preds = %0
  %4 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %5 = extractvalue { i8, i1 } %4, 1
  br i1 %5, label %6, label %2

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 32) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #13
  %8 = getelementptr inbounds i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %7, i64 20
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds i8, i8* %7, i64 24
  %12 = bitcast i8* %11 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %12, align 8
  store i8* %7, i8** bitcast (%class.SkMessageBus** @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE3bus to i8**), align 8
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1
  br label %16

13:                                               ; preds = %2, %13
  %14 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %15 = icmp eq i8 %14, 2
  br i1 %15, label %16, label %13

16:                                               ; preds = %13, %0, %6
  %17 = load %class.SkMessageBus*, %class.SkMessageBus** @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE3bus, align 8
  ret %class.SkMessageBus* %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache3Key4initEPvmm(%"struct.SkResourceCache::Key"*, i8*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = lshr i64 %3, 2
  %6 = trunc i64 %5 to i32
  %7 = add i32 %6, 6
  %8 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %0, i64 0, i32 0
  store i32 %7, i32* %8, align 8
  %9 = trunc i64 %2 to i32
  %10 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %0, i64 0, i32 2
  store i32 %9, i32* %10, align 8
  %11 = lshr i64 %2, 32
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %0, i64 0, i32 3
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %0, i64 0, i32 4
  store i8* %1, i8** %14, align 8
  %15 = getelementptr inbounds i32, i32* %8, i64 2
  %16 = bitcast i32* %15 to i8*
  %17 = shl i32 %7, 2
  %18 = add i32 %17, -8
  %19 = sext i32 %18 to i64
  %20 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %21 = tail call i32 %20(i8* %16, i64 %19, i32 0) #13
  %22 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %0, i64 0, i32 1
  store i32 %21, i32* %22, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache4initEv(%class.SkResourceCache* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkResourceCache* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  %3 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #13
  %4 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 2
  %5 = bitcast %"class.SkResourceCache::Hash"** %4 to i8**
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 3
  %7 = bitcast %class.SkDiscardableMemory* (i64)** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCacheC2EPFP19SkDiscardableMemorymE(%class.SkResourceCache*, %class.SkDiscardableMemory* (i64)*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 9
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %3, i32 0)
  %4 = bitcast %class.SkResourceCache* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #13
  %5 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #13
  %6 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 2
  %7 = bitcast %"class.SkResourceCache::Hash"** %6 to i8**
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 3
  %9 = getelementptr inbounds %class.SkDiscardableMemory* (i64)*, %class.SkDiscardableMemory* (i64)** %8, i64 1
  %10 = bitcast %class.SkDiscardableMemory* (i64)** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* %1, %class.SkDiscardableMemory* (i64)** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %0, i64 0, i32 0, i32 0
  store %"struct.SkResourceCache::PurgeSharedIDMessage"* null, %"struct.SkResourceCache::PurgeSharedIDMessage"** %4, align 8
  store i64 1, i64* %3, align 8
  %5 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %0, i64 0, i32 1, i32 0, i32 2
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %7, align 8
  %8 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %0, i64 0, i32 2
  store i32 %1, i32* %8, align 8
  %9 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %9, label %10 [
    i8 2, label %24
    i8 0, label %11
  ]

10:                                               ; preds = %11, %2
  br label %21

11:                                               ; preds = %2
  %12 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %13 = extractvalue { i8, i1 } %12, 1
  br i1 %13, label %14, label %10

14:                                               ; preds = %11
  %15 = tail call i8* @_Znwm(i64 32) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false) #13
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 1, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %15, i64 20
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds i8, i8* %15, i64 24
  %20 = bitcast i8* %19 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %20, align 8
  store i8* %15, i8** bitcast (%class.SkMessageBus** @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE3bus to i8**), align 8
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1
  br label %24

21:                                               ; preds = %10, %21
  %22 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %23 = icmp eq i8 %22, 2
  br i1 %23, label %24, label %21

24:                                               ; preds = %21, %2, %14
  %25 = load %class.SkMessageBus*, %class.SkMessageBus** @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE3bus, align 8
  %26 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %25, i64 0, i32 1
  %27 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acquire
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %26, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %31) #13
  br label %32

32:                                               ; preds = %24, %30
  %33 = ptrtoint %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %0 to i64
  %34 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %25, i64 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, 1
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %39, label %38

38:                                               ; preds = %32
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.12, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0)) #14
  unreachable

39:                                               ; preds = %32
  %40 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %25, i64 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp slt i32 %41, %36
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %25, i64 0, i32 0, i32 0
  %45 = load %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"**, %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*** %44, align 8
  br label %59

46:                                               ; preds = %39
  %47 = add i32 %35, 5
  %48 = lshr i32 %47, 2
  %49 = add nuw i32 %48, %47
  %50 = icmp sgt i32 %49, -1
  br i1 %50, label %52, label %51

51:                                               ; preds = %46
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.12, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0)) #14
  unreachable

52:                                               ; preds = %46
  store i32 %49, i32* %40, align 8
  %53 = bitcast %class.SkMessageBus* %25 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = sext i32 %49 to i64
  %56 = shl nsw i64 %55, 3
  %57 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %54, i64 %56) #13
  store i8* %57, i8** %53, align 8
  %58 = bitcast i8* %57 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"**
  br label %59

59:                                               ; preds = %43, %52
  %60 = phi %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"** [ %45, %43 ], [ %58, %52 ]
  store i32 %36, i32* %34, align 4
  %61 = sext i32 %35 to i64
  %62 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"** %60, i64 %61
  %63 = bitcast %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"** %62 to i64*
  store i64 %33, i64* %63, align 8
  %64 = atomicrmw add i32* %27, i32 1 release
  %65 = icmp slt i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %59
  %67 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %26, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %67, i32 1) #13
  br label %68

68:                                               ; preds = %59, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCacheC2Em(%class.SkResourceCache*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 9
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %3, i32 0)
  %4 = bitcast %class.SkResourceCache* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #13
  %5 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #13
  %6 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 2
  %7 = bitcast %"class.SkResourceCache::Hash"** %6 to i8**
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 3
  %9 = bitcast %class.SkDiscardableMemory* (i64)** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 36, i1 false) #13
  %10 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 5
  store i64 %1, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCacheD2Ev(%class.SkResourceCache*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 0
  %3 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %2, align 8
  %4 = icmp eq %"struct.SkResourceCache::Rec"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.SkResourceCache::Rec"* [ %9, %5 ], [ %3, %1 ]
  %7 = bitcast %"struct.SkResourceCache::Rec"* %6 to void (%"struct.SkResourceCache::Rec"*)***
  %8 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %6, i64 0, i32 1
  %9 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %8, align 8
  %10 = load void (%"struct.SkResourceCache::Rec"*)**, void (%"struct.SkResourceCache::Rec"*)*** %7, align 8
  %11 = getelementptr inbounds void (%"struct.SkResourceCache::Rec"*)*, void (%"struct.SkResourceCache::Rec"*)** %10, i64 1
  %12 = load void (%"struct.SkResourceCache::Rec"*)*, void (%"struct.SkResourceCache::Rec"*)** %11, align 8
  tail call void %12(%"struct.SkResourceCache::Rec"* nonnull %6) #13
  %13 = icmp eq %"struct.SkResourceCache::Rec"* %9, null
  br i1 %13, label %14, label %5

14:                                               ; preds = %5, %1
  %15 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 2
  %16 = load %"class.SkResourceCache::Hash"*, %"class.SkResourceCache::Hash"** %15, align 8
  %17 = icmp eq %"class.SkResourceCache::Hash"* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.SkResourceCache::Hash", %"class.SkResourceCache::Hash"* %16, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"*, %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"** %19, align 8
  store %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* null, %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"** %19, align 8
  %21 = icmp eq %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %20 to i8*
  tail call void @_ZdaPv(i8* %23) #12
  br label %24

24:                                               ; preds = %18, %22
  %25 = bitcast %"class.SkResourceCache::Hash"* %16 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %24, %14
  %27 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 9
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxD2Ev(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %27) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxD2Ev(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*) unnamed_addr #0 comdat align 2 {
  %2 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %2, label %3 [
    i8 2, label %17
    i8 0, label %4
  ]

3:                                                ; preds = %4, %1
  br label %14

4:                                                ; preds = %1
  %5 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %6 = extractvalue { i8, i1 } %5, 1
  br i1 %6, label %7, label %3

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 32) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #13
  %9 = getelementptr inbounds i8, i8* %8, i64 16
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %8, i64 20
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %8, i64 24
  %13 = bitcast i8* %12 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %13, align 8
  store i8* %8, i8** bitcast (%class.SkMessageBus** @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE3bus to i8**), align 8
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1
  br label %17

14:                                               ; preds = %3, %14
  %15 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %16 = icmp eq i8 %15, 2
  br i1 %16, label %17, label %14

17:                                               ; preds = %14, %1, %7
  %18 = load %class.SkMessageBus*, %class.SkMessageBus** @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE3bus, align 8
  %19 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %18, i64 0, i32 1
  %20 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acquire
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %19, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %24) #13
  br label %25

25:                                               ; preds = %17, %23
  %26 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %18, i64 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %53

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %18, i64 0, i32 0, i32 0
  %31 = load %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"**, %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*** %30, align 8
  %32 = sext i32 %27 to i64
  br label %33

33:                                               ; preds = %29, %50
  %34 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %35 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"** %31, i64 %34
  %36 = load %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"** %35, align 8
  %37 = icmp eq %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %36, %0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = trunc i64 %34 to i32
  %40 = add nsw i32 %27, -1
  store i32 %40, i32* %26, align 4
  %41 = icmp eq i32 %40, %39
  br i1 %41, label %53, label %42

42:                                               ; preds = %38
  %43 = and i64 %34, 4294967295
  %44 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"** %31, i64 %43
  %45 = sext i32 %40 to i64
  %46 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"** %31, i64 %45
  %47 = bitcast %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"** %46 to i64*
  %48 = bitcast %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"** %44 to i64*
  %49 = load i64, i64* %47, align 8
  store i64 %49, i64* %48, align 8
  br label %53

50:                                               ; preds = %33
  %51 = add nuw nsw i64 %34, 1
  %52 = icmp slt i64 %51, %32
  br i1 %52, label %33, label %53

53:                                               ; preds = %50, %25, %42, %38
  %54 = atomicrmw add i32* %20, i32 1 release
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %19, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %57, i32 1) #13
  br label %58

58:                                               ; preds = %53, %56
  %59 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %59) #13
  %60 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %0, i64 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %58
  %65 = bitcast %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %0 to i8**
  %66 = load i8*, i8** %65, align 8
  tail call void @_Z7sk_freePv(i8* %66) #13
  br label %67

67:                                               ; preds = %58, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkResourceCache4findERKNS_3KeyEPFbRKNS_3RecEPvES6_(%class.SkResourceCache*, %"struct.SkResourceCache::Key"* nocapture readonly dereferenceable(24), i1 (%"struct.SkResourceCache::Rec"*, i8*)* nocapture, i8*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN15SkResourceCache13checkMessagesEv(%class.SkResourceCache* %0)
  %5 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 2
  %6 = bitcast %"class.SkResourceCache::Hash"** %5 to %class.SkTHashTable**
  %7 = load %class.SkTHashTable*, %class.SkTHashTable** %6, align 8
  %8 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = select i1 %10, i32 1, i32 %9
  %12 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %7, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %91

15:                                               ; preds = %4
  %16 = add nsw i32 %13, -1
  %17 = and i32 %11, %16
  %18 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %1, i64 0, i32 0
  br label %20

20:                                               ; preds = %55, %15
  %21 = phi i32 [ 0, %15 ], [ %61, %55 ]
  %22 = phi i32 [ %17, %15 ], [ %60, %55 ]
  %23 = sext i32 %22 to i64
  %24 = load %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"*, %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"** %18, align 8
  %25 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %24, i64 %23, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %91, label %28

28:                                               ; preds = %20
  %29 = icmp eq i32 %11, %26
  br i1 %29, label %30, label %55

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %24, i64 %23, i32 0
  %32 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %31, align 8
  %33 = bitcast %"struct.SkResourceCache::Rec"* %32 to %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)***
  %34 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)**, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*** %33, align 8
  %35 = getelementptr inbounds %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %34, i64 2
  %36 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %35, align 8
  %37 = tail call dereferenceable(24) %"struct.SkResourceCache::Key"* %36(%"struct.SkResourceCache::Rec"* %32) #13
  %38 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %37, i64 0, i32 0
  %39 = load i32, i32* %19, align 8
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %63

41:                                               ; preds = %30
  %42 = sext i32 %39 to i64
  %43 = load i32, i32* %38, align 4
  %44 = icmp eq i32 %39, %43
  br i1 %44, label %45, label %55

45:                                               ; preds = %41, %48
  %46 = phi i64 [ %54, %48 ], [ 1, %41 ]
  %47 = icmp eq i64 %46, %42
  br i1 %47, label %63, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds i32, i32* %19, i64 %46
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds i32, i32* %38, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %50, %52
  %54 = add nuw nsw i64 %46, 1
  br i1 %53, label %45, label %55

55:                                               ; preds = %48, %41, %28
  %56 = add nsw i32 %22, -1
  %57 = icmp slt i32 %22, 1
  %58 = load i32, i32* %12, align 4
  %59 = select i1 %57, i32 %58, i32 0
  %60 = add nsw i32 %56, %59
  %61 = add nuw nsw i32 %21, 1
  %62 = icmp slt i32 %61, %58
  br i1 %62, label %20, label %91

63:                                               ; preds = %30, %45
  %64 = icmp eq %"struct.SkResourceCache::Rec"** %31, null
  br i1 %64, label %91, label %65

65:                                               ; preds = %63
  %66 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %31, align 8
  %67 = tail call zeroext i1 %2(%"struct.SkResourceCache::Rec"* dereferenceable(24) %66, i8* %3) #13
  br i1 %67, label %68, label %90

68:                                               ; preds = %65
  %69 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 0
  %70 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %69, align 8
  %71 = icmp eq %"struct.SkResourceCache::Rec"* %70, %66
  br i1 %71, label %91, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %66, i64 0, i32 2
  %74 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %73, align 8
  %75 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %66, i64 0, i32 1
  %76 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %75, align 8
  %77 = icmp eq %"struct.SkResourceCache::Rec"* %74, null
  %78 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %74, i64 0, i32 1
  %79 = select i1 %77, %"struct.SkResourceCache::Rec"** %69, %"struct.SkResourceCache::Rec"** %78
  store %"struct.SkResourceCache::Rec"* %76, %"struct.SkResourceCache::Rec"** %79, align 8
  %80 = icmp eq %"struct.SkResourceCache::Rec"* %76, null
  %81 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %76, i64 0, i32 2
  %82 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 1
  %83 = select i1 %80, %"struct.SkResourceCache::Rec"** %82, %"struct.SkResourceCache::Rec"** %81
  store %"struct.SkResourceCache::Rec"* %74, %"struct.SkResourceCache::Rec"** %83, align 8
  %84 = bitcast %"struct.SkResourceCache::Rec"** %75 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 16, i1 false) #13
  %85 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %69, align 8
  %86 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %85, i64 0, i32 2
  store %"struct.SkResourceCache::Rec"* %66, %"struct.SkResourceCache::Rec"** %86, align 8
  %87 = bitcast %class.SkResourceCache* %0 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"struct.SkResourceCache::Rec"** %75 to i64*
  store i64 %88, i64* %89, align 8
  store %"struct.SkResourceCache::Rec"* %66, %"struct.SkResourceCache::Rec"** %69, align 8
  br label %91

90:                                               ; preds = %65
  tail call void @_ZN15SkResourceCache6removeEPNS_3RecE(%class.SkResourceCache* %0, %"struct.SkResourceCache::Rec"* %66)
  br label %91

91:                                               ; preds = %20, %55, %72, %68, %90, %4, %63
  %92 = phi i1 [ false, %63 ], [ false, %4 ], [ true, %72 ], [ true, %68 ], [ false, %90 ], [ false, %55 ], [ false, %20 ]
  ret i1 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache13checkMessagesEv(%class.SkResourceCache*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkTArray, align 8
  %3 = bitcast %class.SkTArray* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #13
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %2, i64 0, i32 0
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %2, i64 0, i32 1
  store %"struct.SkResourceCache::PurgeSharedIDMessage"* null, %"struct.SkResourceCache::PurgeSharedIDMessage"** %4, align 8
  store i64 1, i64* %5, align 8
  call void @_ZN8SkTArrayIN15SkResourceCache20PurgeSharedIDMessageELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* nonnull %2, i32 0, i32 2) #13
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967297
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 9, i32 1
  %9 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acquire
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %8, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %13) #13
  br label %14

14:                                               ; preds = %12, %1
  %15 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 9, i32 0
  call void @_ZN8SkTArrayIN15SkResourceCache20PurgeSharedIDMessageELb0EE4swapERS2_(%class.SkTArray* %15, %class.SkTArray* nonnull dereferenceable(16) %2) #13
  %16 = atomicrmw add i32* %9, i32 1 release
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %8, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %19, i32 1) #13
  br label %20

20:                                               ; preds = %14, %18
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, 4294967294
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 1
  br label %34

26:                                               ; preds = %73, %20
  %27 = phi i64 [ %21, %20 ], [ %74, %73 ]
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = bitcast %class.SkTArray* %2 to i8**
  %32 = load i8*, i8** %31, align 8
  call void @_Z7sk_freePv(i8* %32) #13
  br label %33

33:                                               ; preds = %26, %30
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  ret void

34:                                               ; preds = %24, %73
  %35 = phi i64 [ %21, %24 ], [ %74, %73 ]
  %36 = phi i64 [ 0, %24 ], [ %75, %73 ]
  %37 = load %"struct.SkResourceCache::PurgeSharedIDMessage"*, %"struct.SkResourceCache::PurgeSharedIDMessage"** %4, align 8
  %38 = getelementptr inbounds %"struct.SkResourceCache::PurgeSharedIDMessage", %"struct.SkResourceCache::PurgeSharedIDMessage"* %37, i64 %36, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %73, label %41

41:                                               ; preds = %34
  %42 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %25, align 8
  %43 = icmp eq %"struct.SkResourceCache::Rec"* %42, null
  br i1 %43, label %73, label %44

44:                                               ; preds = %41, %69
  %45 = phi %"struct.SkResourceCache::Rec"* [ %48, %69 ], [ %42, %41 ]
  %46 = bitcast %"struct.SkResourceCache::Rec"* %45 to %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)***
  %47 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %45, i64 0, i32 2
  %48 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %47, align 8
  %49 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)**, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*** %46, align 8
  %50 = getelementptr inbounds %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %49, i64 2
  %51 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %50, align 8
  %52 = call dereferenceable(24) %"struct.SkResourceCache::Key"* %51(%"struct.SkResourceCache::Rec"* nonnull %45) #13
  %53 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %52, i64 0, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = shl nuw i64 %55, 32
  %57 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %52, i64 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = zext i32 %58 to i64
  %60 = or i64 %56, %59
  %61 = icmp eq i64 %60, %39
  br i1 %61, label %62, label %69

62:                                               ; preds = %44
  %63 = bitcast %"struct.SkResourceCache::Rec"* %45 to i1 (%"struct.SkResourceCache::Rec"*)***
  %64 = load i1 (%"struct.SkResourceCache::Rec"*)**, i1 (%"struct.SkResourceCache::Rec"*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %64, i64 4
  %66 = load i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %65, align 8
  %67 = call zeroext i1 %66(%"struct.SkResourceCache::Rec"* nonnull %45) #13
  br i1 %67, label %68, label %69

68:                                               ; preds = %62
  call void @_ZN15SkResourceCache6removeEPNS_3RecE(%class.SkResourceCache* %0, %"struct.SkResourceCache::Rec"* nonnull %45) #13
  br label %69

69:                                               ; preds = %68, %62, %44
  %70 = icmp eq %"struct.SkResourceCache::Rec"* %48, null
  br i1 %70, label %71, label %44

71:                                               ; preds = %69
  %72 = load i64, i64* %5, align 8
  br label %73

73:                                               ; preds = %71, %34, %41
  %74 = phi i64 [ %72, %71 ], [ %35, %34 ], [ %35, %41 ]
  %75 = add nuw nsw i64 %36, 1
  %76 = lshr i64 %74, 1
  %77 = and i64 %76, 2147483647
  %78 = icmp ult i64 %75, %77
  br i1 %78, label %34, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache10moveToHeadEPNS_3RecE(%class.SkResourceCache* nocapture, %"struct.SkResourceCache::Rec"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 0
  %4 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %3, align 8
  %5 = icmp eq %"struct.SkResourceCache::Rec"* %4, %1
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %1, i64 0, i32 2
  %8 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %7, align 8
  %9 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %1, i64 0, i32 1
  %10 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %9, align 8
  %11 = icmp eq %"struct.SkResourceCache::Rec"* %8, null
  %12 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %8, i64 0, i32 1
  %13 = select i1 %11, %"struct.SkResourceCache::Rec"** %3, %"struct.SkResourceCache::Rec"** %12
  store %"struct.SkResourceCache::Rec"* %10, %"struct.SkResourceCache::Rec"** %13, align 8
  %14 = icmp eq %"struct.SkResourceCache::Rec"* %10, null
  %15 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %10, i64 0, i32 2
  %17 = select i1 %14, %"struct.SkResourceCache::Rec"** %15, %"struct.SkResourceCache::Rec"** %16
  store %"struct.SkResourceCache::Rec"* %8, %"struct.SkResourceCache::Rec"** %17, align 8
  %18 = bitcast %"struct.SkResourceCache::Rec"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #13
  %19 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %3, align 8
  %20 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %19, i64 0, i32 2
  store %"struct.SkResourceCache::Rec"* %1, %"struct.SkResourceCache::Rec"** %20, align 8
  %21 = bitcast %class.SkResourceCache* %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"struct.SkResourceCache::Rec"** %9 to i64*
  store i64 %22, i64* %23, align 8
  store %"struct.SkResourceCache::Rec"* %1, %"struct.SkResourceCache::Rec"** %3, align 8
  br label %24

24:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache6removeEPNS_3RecE(%class.SkResourceCache* nocapture, %"struct.SkResourceCache::Rec"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.SkResourceCache::Rec"* %1 to i64 (%"struct.SkResourceCache::Rec"*)***
  %4 = load i64 (%"struct.SkResourceCache::Rec"*)**, i64 (%"struct.SkResourceCache::Rec"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"struct.SkResourceCache::Rec"*)*, i64 (%"struct.SkResourceCache::Rec"*)** %4, i64 3
  %6 = load i64 (%"struct.SkResourceCache::Rec"*)*, i64 (%"struct.SkResourceCache::Rec"*)** %5, align 8
  %7 = tail call i64 %6(%"struct.SkResourceCache::Rec"* %1) #13
  %8 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %1, i64 0, i32 2
  %9 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %1, i64 0, i32 1
  %11 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %10, align 8
  %12 = icmp eq %"struct.SkResourceCache::Rec"* %9, null
  %13 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %9, i64 0, i32 1
  %14 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 0
  %15 = select i1 %12, %"struct.SkResourceCache::Rec"** %14, %"struct.SkResourceCache::Rec"** %13
  store %"struct.SkResourceCache::Rec"* %11, %"struct.SkResourceCache::Rec"** %15, align 8
  %16 = icmp eq %"struct.SkResourceCache::Rec"* %11, null
  %17 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %11, i64 0, i32 2
  %19 = select i1 %16, %"struct.SkResourceCache::Rec"** %17, %"struct.SkResourceCache::Rec"** %18
  store %"struct.SkResourceCache::Rec"* %9, %"struct.SkResourceCache::Rec"** %19, align 8
  %20 = bitcast %"struct.SkResourceCache::Rec"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #13
  %21 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 2
  %22 = bitcast %"class.SkResourceCache::Hash"** %21 to %class.SkTHashTable**
  %23 = load %class.SkTHashTable*, %class.SkTHashTable** %22, align 8
  %24 = bitcast %"struct.SkResourceCache::Rec"* %1 to %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)***
  %25 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)**, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*** %24, align 8
  %26 = getelementptr inbounds %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %25, i64 2
  %27 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %26, align 8
  %28 = tail call dereferenceable(24) %"struct.SkResourceCache::Key"* %27(%"struct.SkResourceCache::Rec"* %1) #13
  %29 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 1, i32 %30
  %33 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %23, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %131

36:                                               ; preds = %2
  %37 = add nsw i32 %34, -1
  %38 = and i32 %32, %37
  %39 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %28, i64 0, i32 0
  br label %41

41:                                               ; preds = %123, %36
  %42 = phi i32 [ 0, %36 ], [ %129, %123 ]
  %43 = phi i32 [ %38, %36 ], [ %128, %123 ]
  %44 = sext i32 %43 to i64
  %45 = load %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"*, %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"** %39, align 8
  %46 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %45, i64 %44, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %32, %47
  br i1 %48, label %49, label %123

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %45, i64 %44, i32 0
  %51 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %50, align 8
  %52 = bitcast %"struct.SkResourceCache::Rec"* %51 to %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)***
  %53 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)**, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*** %52, align 8
  %54 = getelementptr inbounds %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %53, i64 2
  %55 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %54, align 8
  %56 = tail call dereferenceable(24) %"struct.SkResourceCache::Key"* %55(%"struct.SkResourceCache::Rec"* %51) #13
  %57 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %56, i64 0, i32 0
  %58 = load i32, i32* %40, align 8
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %74

60:                                               ; preds = %49
  %61 = sext i32 %58 to i64
  %62 = load i32, i32* %57, align 4
  %63 = icmp eq i32 %58, %62
  br i1 %63, label %64, label %123

64:                                               ; preds = %60, %67
  %65 = phi i64 [ %73, %67 ], [ 1, %60 ]
  %66 = icmp eq i64 %65, %61
  br i1 %66, label %74, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds i32, i32* %40, i64 %65
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds i32, i32* %57, i64 %65
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %69, %71
  %73 = add nuw nsw i64 %65, 1
  br i1 %72, label %64, label %123

74:                                               ; preds = %49, %64
  %75 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %23, i64 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = add nsw i32 %76, -1
  store i32 %77, i32* %75, align 8
  br label %78

78:                                               ; preds = %108, %74
  %79 = phi i32 [ %43, %74 ], [ %91, %108 ]
  %80 = sext i32 %79 to i64
  %81 = load %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"*, %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"** %39, align 8
  %82 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %81, i64 %80
  br label %83

83:                                               ; preds = %107, %78
  %84 = phi i32 [ %79, %78 ], [ %91, %107 ]
  %85 = add nsw i32 %84, -1
  %86 = icmp slt i32 %84, 1
  br i1 %86, label %87, label %90

87:                                               ; preds = %83
  %88 = load i32, i32* %33, align 4
  %89 = add nsw i32 %88, %85
  br label %90

90:                                               ; preds = %87, %83
  %91 = phi i32 [ %89, %87 ], [ %85, %83 ]
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %81, i64 %92, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %112, label %96

96:                                               ; preds = %90
  %97 = load i32, i32* %33, align 4
  %98 = add nsw i32 %97, -1
  %99 = and i32 %98, %94
  %100 = icmp sle i32 %91, %99
  %101 = icmp slt i32 %99, %79
  %102 = and i1 %100, %101
  br i1 %102, label %107, label %103

103:                                              ; preds = %96
  %104 = icmp slt i32 %79, %91
  %105 = or i1 %101, %100
  %106 = and i1 %104, %105
  br i1 %106, label %107, label %108

107:                                              ; preds = %103, %96
  br label %83

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %81, i64 %92
  %110 = bitcast %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %82 to i8*
  %111 = bitcast %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 12, i1 false) #13
  br label %78

112:                                              ; preds = %90
  %113 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %82, i64 0, i32 0
  store %"struct.SkResourceCache::Rec"* null, %"struct.SkResourceCache::Rec"** %113, align 8
  %114 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %81, i64 %80, i32 1
  store i32 0, i32* %114, align 8
  %115 = load i32, i32* %75, align 8
  %116 = shl nsw i32 %115, 2
  %117 = load i32, i32* %33, align 4
  %118 = icmp sle i32 %116, %117
  %119 = icmp sgt i32 %117, 4
  %120 = and i1 %118, %119
  br i1 %120, label %121, label %131

121:                                              ; preds = %112
  %122 = lshr i32 %117, 1
  tail call fastcc void @_ZN12SkTHashTableIPN15SkResourceCache3RecENS0_3KeyEN12_GLOBAL__N_110HashTraitsEE6resizeEi(%class.SkTHashTable* %23, i32 %122) #13
  br label %131

123:                                              ; preds = %67, %60, %41
  %124 = add nsw i32 %43, -1
  %125 = icmp slt i32 %43, 1
  %126 = load i32, i32* %33, align 4
  %127 = select i1 %125, i32 %126, i32 0
  %128 = add nsw i32 %124, %127
  %129 = add nuw nsw i32 %42, 1
  %130 = icmp slt i32 %129, %126
  br i1 %130, label %41, label %131

131:                                              ; preds = %123, %2, %112, %121
  %132 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 4
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %133, %7
  store i64 %134, i64* %132, align 8
  %135 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 7
  %136 = load i32, i32* %135, align 8
  %137 = add nsw i32 %136, -1
  store i32 %137, i32* %135, align 8
  %138 = icmp eq %"struct.SkResourceCache::Rec"* %1, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %131
  %140 = bitcast %"struct.SkResourceCache::Rec"* %1 to void (%"struct.SkResourceCache::Rec"*)***
  %141 = load void (%"struct.SkResourceCache::Rec"*)**, void (%"struct.SkResourceCache::Rec"*)*** %140, align 8
  %142 = getelementptr inbounds void (%"struct.SkResourceCache::Rec"*)*, void (%"struct.SkResourceCache::Rec"*)** %141, i64 1
  %143 = load void (%"struct.SkResourceCache::Rec"*)*, void (%"struct.SkResourceCache::Rec"*)** %142, align 8
  tail call void %143(%"struct.SkResourceCache::Rec"* nonnull %1) #13
  br label %144

144:                                              ; preds = %139, %131
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache3addEPNS_3RecEPv(%class.SkResourceCache*, %"struct.SkResourceCache::Rec"*, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.SkResourceCache::Rec"*, align 8
  tail call void @_ZN15SkResourceCache13checkMessagesEv(%class.SkResourceCache* %0)
  %5 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 2
  %6 = bitcast %"class.SkResourceCache::Hash"** %5 to %class.SkTHashTable**
  %7 = load %class.SkTHashTable*, %class.SkTHashTable** %6, align 8
  %8 = bitcast %"struct.SkResourceCache::Rec"* %1 to %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)***
  %9 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)**, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*** %8, align 8
  %10 = getelementptr inbounds %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %9, i64 2
  %11 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %10, align 8
  %12 = tail call dereferenceable(24) %"struct.SkResourceCache::Key"* %11(%"struct.SkResourceCache::Rec"* %1) #13
  %13 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i32 1, i32 %14
  %17 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %7, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %89

20:                                               ; preds = %3
  %21 = add nsw i32 %18, -1
  %22 = and i32 %16, %21
  %23 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %12, i64 0, i32 0
  br label %25

25:                                               ; preds = %60, %20
  %26 = phi i32 [ 0, %20 ], [ %66, %60 ]
  %27 = phi i32 [ %22, %20 ], [ %65, %60 ]
  %28 = sext i32 %27 to i64
  %29 = load %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"*, %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"** %23, align 8
  %30 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %29, i64 %28, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %89, label %33

33:                                               ; preds = %25
  %34 = icmp eq i32 %16, %31
  br i1 %34, label %35, label %60

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %29, i64 %28, i32 0
  %37 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %36, align 8
  %38 = bitcast %"struct.SkResourceCache::Rec"* %37 to %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)***
  %39 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)**, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*** %38, align 8
  %40 = getelementptr inbounds %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %39, i64 2
  %41 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %40, align 8
  %42 = tail call dereferenceable(24) %"struct.SkResourceCache::Key"* %41(%"struct.SkResourceCache::Rec"* %37) #13
  %43 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %42, i64 0, i32 0
  %44 = load i32, i32* %24, align 8
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %68

46:                                               ; preds = %35
  %47 = sext i32 %44 to i64
  %48 = load i32, i32* %43, align 4
  %49 = icmp eq i32 %44, %48
  br i1 %49, label %50, label %60

50:                                               ; preds = %46, %53
  %51 = phi i64 [ %59, %53 ], [ 1, %46 ]
  %52 = icmp eq i64 %51, %47
  br i1 %52, label %68, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds i32, i32* %24, i64 %51
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds i32, i32* %43, i64 %51
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %55, %57
  %59 = add nuw nsw i64 %51, 1
  br i1 %58, label %50, label %60

60:                                               ; preds = %53, %46, %33
  %61 = add nsw i32 %27, -1
  %62 = icmp slt i32 %27, 1
  %63 = load i32, i32* %17, align 4
  %64 = select i1 %62, i32 %63, i32 0
  %65 = add nsw i32 %61, %64
  %66 = add nuw nsw i32 %26, 1
  %67 = icmp slt i32 %66, %63
  br i1 %67, label %25, label %89

68:                                               ; preds = %35, %50
  %69 = icmp eq %"struct.SkResourceCache::Rec"** %36, null
  br i1 %69, label %89, label %70

70:                                               ; preds = %68
  %71 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %36, align 8
  %72 = bitcast %"struct.SkResourceCache::Rec"* %71 to i1 (%"struct.SkResourceCache::Rec"*)***
  %73 = load i1 (%"struct.SkResourceCache::Rec"*)**, i1 (%"struct.SkResourceCache::Rec"*)*** %72, align 8
  %74 = getelementptr inbounds i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %73, i64 4
  %75 = load i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %74, align 8
  %76 = tail call zeroext i1 %75(%"struct.SkResourceCache::Rec"* %71) #13
  br i1 %76, label %88, label %77

77:                                               ; preds = %70
  %78 = bitcast %"struct.SkResourceCache::Rec"* %71 to void (%"struct.SkResourceCache::Rec"*, i8*)***
  %79 = load void (%"struct.SkResourceCache::Rec"*, i8*)**, void (%"struct.SkResourceCache::Rec"*, i8*)*** %78, align 8
  %80 = getelementptr inbounds void (%"struct.SkResourceCache::Rec"*, i8*)*, void (%"struct.SkResourceCache::Rec"*, i8*)** %79, i64 5
  %81 = load void (%"struct.SkResourceCache::Rec"*, i8*)*, void (%"struct.SkResourceCache::Rec"*, i8*)** %80, align 8
  tail call void %81(%"struct.SkResourceCache::Rec"* %71, i8* %2) #13
  %82 = icmp eq %"struct.SkResourceCache::Rec"* %1, null
  br i1 %82, label %164, label %83

83:                                               ; preds = %77
  %84 = bitcast %"struct.SkResourceCache::Rec"* %1 to void (%"struct.SkResourceCache::Rec"*)***
  %85 = load void (%"struct.SkResourceCache::Rec"*)**, void (%"struct.SkResourceCache::Rec"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"struct.SkResourceCache::Rec"*)*, void (%"struct.SkResourceCache::Rec"*)** %85, i64 1
  %87 = load void (%"struct.SkResourceCache::Rec"*)*, void (%"struct.SkResourceCache::Rec"*)** %86, align 8
  tail call void %87(%"struct.SkResourceCache::Rec"* nonnull %1) #13
  br label %164

88:                                               ; preds = %70
  tail call void @_ZN15SkResourceCache6removeEPNS_3RecE(%class.SkResourceCache* %0, %"struct.SkResourceCache::Rec"* %71)
  br label %89

89:                                               ; preds = %25, %60, %3, %88, %68
  %90 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %1, i64 0, i32 2
  store %"struct.SkResourceCache::Rec"* null, %"struct.SkResourceCache::Rec"** %90, align 8
  %91 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 0
  %92 = bitcast %class.SkResourceCache* %0 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %1, i64 0, i32 1
  %95 = bitcast %"struct.SkResourceCache::Rec"** %94 to i64*
  store i64 %93, i64* %95, align 8
  %96 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %91, align 8
  %97 = icmp eq %"struct.SkResourceCache::Rec"* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %96, i64 0, i32 2
  store %"struct.SkResourceCache::Rec"* %1, %"struct.SkResourceCache::Rec"** %99, align 8
  br label %100

100:                                              ; preds = %98, %89
  store %"struct.SkResourceCache::Rec"* %1, %"struct.SkResourceCache::Rec"** %91, align 8
  %101 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 1
  %102 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %101, align 8
  %103 = icmp eq %"struct.SkResourceCache::Rec"* %102, null
  br i1 %103, label %104, label %105

104:                                              ; preds = %100
  store %"struct.SkResourceCache::Rec"* %1, %"struct.SkResourceCache::Rec"** %101, align 8
  br label %105

105:                                              ; preds = %100, %104
  %106 = bitcast %"struct.SkResourceCache::Rec"* %1 to i64 (%"struct.SkResourceCache::Rec"*)***
  %107 = load i64 (%"struct.SkResourceCache::Rec"*)**, i64 (%"struct.SkResourceCache::Rec"*)*** %106, align 8
  %108 = getelementptr inbounds i64 (%"struct.SkResourceCache::Rec"*)*, i64 (%"struct.SkResourceCache::Rec"*)** %107, i64 3
  %109 = load i64 (%"struct.SkResourceCache::Rec"*)*, i64 (%"struct.SkResourceCache::Rec"*)** %108, align 8
  %110 = tail call i64 %109(%"struct.SkResourceCache::Rec"* %1) #13
  %111 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 4
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, %110
  store i64 %113, i64* %111, align 8
  %114 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 7
  %115 = load i32, i32* %114, align 8
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %114, align 8
  %117 = load %class.SkTHashTable*, %class.SkTHashTable** %6, align 8
  %118 = bitcast %"struct.SkResourceCache::Rec"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118)
  store %"struct.SkResourceCache::Rec"* %1, %"struct.SkResourceCache::Rec"** %4, align 8
  %119 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %117, i64 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = shl nsw i32 %120, 2
  %122 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %117, i64 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = mul nsw i32 %123, 3
  %125 = icmp slt i32 %121, %124
  br i1 %125, label %130, label %126

126:                                              ; preds = %105
  %127 = icmp sgt i32 %123, 0
  %128 = shl nsw i32 %123, 1
  %129 = select i1 %127, i32 %128, i32 4
  tail call fastcc void @_ZN12SkTHashTableIPN15SkResourceCache3RecENS0_3KeyEN12_GLOBAL__N_110HashTraitsEE6resizeEi(%class.SkTHashTable* %117, i32 %129) #13
  br label %130

130:                                              ; preds = %105, %126
  call fastcc void @_ZN12SkTHashTableIPN15SkResourceCache3RecENS0_3KeyEN12_GLOBAL__N_110HashTraitsEE12uncheckedSetEOS2_(%class.SkTHashTable* %117, %"struct.SkResourceCache::Rec"** nonnull dereferenceable(8) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118)
  %131 = bitcast %"struct.SkResourceCache::Rec"* %1 to void (%"struct.SkResourceCache::Rec"*, i8*)***
  %132 = load void (%"struct.SkResourceCache::Rec"*, i8*)**, void (%"struct.SkResourceCache::Rec"*, i8*)*** %131, align 8
  %133 = getelementptr inbounds void (%"struct.SkResourceCache::Rec"*, i8*)*, void (%"struct.SkResourceCache::Rec"*, i8*)** %132, i64 5
  %134 = load void (%"struct.SkResourceCache::Rec"*, i8*)*, void (%"struct.SkResourceCache::Rec"*, i8*)** %133, align 8
  tail call void %134(%"struct.SkResourceCache::Rec"* %1, i8* %2) #13
  %135 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 3
  %136 = load %class.SkDiscardableMemory* (i64)*, %class.SkDiscardableMemory* (i64)** %135, align 8
  %137 = icmp eq %class.SkDiscardableMemory* (i64)* %136, null
  br i1 %137, label %138, label %141

138:                                              ; preds = %130
  %139 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 5
  %140 = load i64, i64* %139, align 8
  br label %141

141:                                              ; preds = %138, %130
  %142 = phi i64 [ %140, %138 ], [ 4294967295, %130 ]
  %143 = phi i32 [ 2147483647, %138 ], [ 1024, %130 ]
  %144 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %101, align 8
  %145 = icmp eq %"struct.SkResourceCache::Rec"* %144, null
  br i1 %145, label %164, label %146

146:                                              ; preds = %141, %162
  %147 = phi %"struct.SkResourceCache::Rec"* [ %156, %162 ], [ %144, %141 ]
  %148 = bitcast %"struct.SkResourceCache::Rec"* %147 to i1 (%"struct.SkResourceCache::Rec"*)***
  %149 = load i64, i64* %111, align 8
  %150 = icmp ult i64 %149, %142
  br i1 %150, label %151, label %154

151:                                              ; preds = %146
  %152 = load i32, i32* %114, align 8
  %153 = icmp slt i32 %152, %143
  br i1 %153, label %164, label %154

154:                                              ; preds = %151, %146
  %155 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %147, i64 0, i32 2
  %156 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %155, align 8
  %157 = load i1 (%"struct.SkResourceCache::Rec"*)**, i1 (%"struct.SkResourceCache::Rec"*)*** %148, align 8
  %158 = getelementptr inbounds i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %157, i64 4
  %159 = load i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %158, align 8
  %160 = tail call zeroext i1 %159(%"struct.SkResourceCache::Rec"* nonnull %147) #13
  br i1 %160, label %161, label %162

161:                                              ; preds = %154
  tail call void @_ZN15SkResourceCache6removeEPNS_3RecE(%class.SkResourceCache* %0, %"struct.SkResourceCache::Rec"* nonnull %147) #13
  br label %162

162:                                              ; preds = %161, %154
  %163 = icmp eq %"struct.SkResourceCache::Rec"* %156, null
  br i1 %163, label %164, label %146

164:                                              ; preds = %162, %151, %141, %77, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache9addToHeadEPNS_3RecE(%class.SkResourceCache* nocapture, %"struct.SkResourceCache::Rec"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %1, i64 0, i32 2
  store %"struct.SkResourceCache::Rec"* null, %"struct.SkResourceCache::Rec"** %3, align 8
  %4 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 0
  %5 = bitcast %class.SkResourceCache* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %1, i64 0, i32 1
  %8 = bitcast %"struct.SkResourceCache::Rec"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %4, align 8
  %10 = icmp eq %"struct.SkResourceCache::Rec"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %9, i64 0, i32 2
  store %"struct.SkResourceCache::Rec"* %1, %"struct.SkResourceCache::Rec"** %12, align 8
  br label %13

13:                                               ; preds = %2, %11
  store %"struct.SkResourceCache::Rec"* %1, %"struct.SkResourceCache::Rec"** %4, align 8
  %14 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 1
  %15 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %14, align 8
  %16 = icmp eq %"struct.SkResourceCache::Rec"* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  store %"struct.SkResourceCache::Rec"* %1, %"struct.SkResourceCache::Rec"** %14, align 8
  br label %18

18:                                               ; preds = %13, %17
  %19 = bitcast %"struct.SkResourceCache::Rec"* %1 to i64 (%"struct.SkResourceCache::Rec"*)***
  %20 = load i64 (%"struct.SkResourceCache::Rec"*)**, i64 (%"struct.SkResourceCache::Rec"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"struct.SkResourceCache::Rec"*)*, i64 (%"struct.SkResourceCache::Rec"*)** %20, i64 3
  %22 = load i64 (%"struct.SkResourceCache::Rec"*)*, i64 (%"struct.SkResourceCache::Rec"*)** %21, align 8
  %23 = tail call i64 %22(%"struct.SkResourceCache::Rec"* %1) #13
  %24 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 4
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, %23
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 7
  %28 = load i32, i32* %27, align 8
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %27, align 8
  ret void
}

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache13purgeAsNeededEb(%class.SkResourceCache* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 3
  %4 = load %class.SkDiscardableMemory* (i64)*, %class.SkDiscardableMemory* (i64)** %3, align 8
  %5 = icmp eq %class.SkDiscardableMemory* (i64)* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i64 [ %8, %6 ], [ 4294967295, %2 ]
  %11 = phi i32 [ 2147483647, %6 ], [ 1024, %2 ]
  %12 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 1
  %13 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %12, align 8
  %14 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 7
  %15 = icmp eq %"struct.SkResourceCache::Rec"* %13, null
  br i1 %15, label %37, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 4
  br label %18

18:                                               ; preds = %16, %35
  %19 = phi %"struct.SkResourceCache::Rec"* [ %13, %16 ], [ %29, %35 ]
  %20 = bitcast %"struct.SkResourceCache::Rec"* %19 to i1 (%"struct.SkResourceCache::Rec"*)***
  br i1 %1, label %27, label %21

21:                                               ; preds = %18
  %22 = load i64, i64* %17, align 8
  %23 = icmp ult i64 %22, %10
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = load i32, i32* %14, align 8
  %26 = icmp slt i32 %25, %11
  br i1 %26, label %37, label %27

27:                                               ; preds = %24, %21, %18
  %28 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %19, i64 0, i32 2
  %29 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %28, align 8
  %30 = load i1 (%"struct.SkResourceCache::Rec"*)**, i1 (%"struct.SkResourceCache::Rec"*)*** %20, align 8
  %31 = getelementptr inbounds i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %30, i64 4
  %32 = load i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"struct.SkResourceCache::Rec"* nonnull %19) #13
  br i1 %33, label %34, label %35

34:                                               ; preds = %27
  tail call void @_ZN15SkResourceCache6removeEPNS_3RecE(%class.SkResourceCache* %0, %"struct.SkResourceCache::Rec"* nonnull %19)
  br label %35

35:                                               ; preds = %34, %27
  %36 = icmp eq %"struct.SkResourceCache::Rec"* %29, null
  br i1 %36, label %37, label %18

37:                                               ; preds = %24, %35, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache7releaseEPNS_3RecE(%class.SkResourceCache* nocapture, %"struct.SkResourceCache::Rec"* nocapture) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %1, i64 0, i32 2
  %4 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %1, i64 0, i32 1
  %6 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %5, align 8
  %7 = icmp eq %"struct.SkResourceCache::Rec"* %4, null
  %8 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %4, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 0
  %10 = select i1 %7, %"struct.SkResourceCache::Rec"** %9, %"struct.SkResourceCache::Rec"** %8
  store %"struct.SkResourceCache::Rec"* %6, %"struct.SkResourceCache::Rec"** %10, align 8
  %11 = icmp eq %"struct.SkResourceCache::Rec"* %6, null
  %12 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %6, i64 0, i32 2
  %13 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 1
  %14 = select i1 %11, %"struct.SkResourceCache::Rec"** %13, %"struct.SkResourceCache::Rec"** %12
  store %"struct.SkResourceCache::Rec"* %4, %"struct.SkResourceCache::Rec"** %14, align 8
  %15 = bitcast %"struct.SkResourceCache::Rec"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache13purgeSharedIDEm(%class.SkResourceCache* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %35, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 1
  %6 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %5, align 8
  %7 = icmp eq %"struct.SkResourceCache::Rec"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %4, %33
  %9 = phi %"struct.SkResourceCache::Rec"* [ %12, %33 ], [ %6, %4 ]
  %10 = bitcast %"struct.SkResourceCache::Rec"* %9 to %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)***
  %11 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %9, i64 0, i32 2
  %12 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %11, align 8
  %13 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)**, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*** %10, align 8
  %14 = getelementptr inbounds %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %13, i64 2
  %15 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %14, align 8
  %16 = tail call dereferenceable(24) %"struct.SkResourceCache::Key"* %15(%"struct.SkResourceCache::Rec"* nonnull %9) #13
  %17 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %16, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = shl nuw i64 %19, 32
  %21 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %16, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = or i64 %20, %23
  %25 = icmp eq i64 %24, %1
  br i1 %25, label %26, label %33

26:                                               ; preds = %8
  %27 = bitcast %"struct.SkResourceCache::Rec"* %9 to i1 (%"struct.SkResourceCache::Rec"*)***
  %28 = load i1 (%"struct.SkResourceCache::Rec"*)**, i1 (%"struct.SkResourceCache::Rec"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %28, i64 4
  %30 = load i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"struct.SkResourceCache::Rec"* nonnull %9) #13
  br i1 %31, label %32, label %33

32:                                               ; preds = %26
  tail call void @_ZN15SkResourceCache6removeEPNS_3RecE(%class.SkResourceCache* %0, %"struct.SkResourceCache::Rec"* nonnull %9)
  br label %33

33:                                               ; preds = %26, %32, %8
  %34 = icmp eq %"struct.SkResourceCache::Rec"* %12, null
  br i1 %34, label %35, label %8

35:                                               ; preds = %33, %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache8visitAllEPFvRKNS_3RecEPvES3_(%class.SkResourceCache* nocapture readonly, void (%"struct.SkResourceCache::Rec"*, i8*)* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 1
  %5 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %4, align 8
  %6 = icmp eq %"struct.SkResourceCache::Rec"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3, %7
  %8 = phi %"struct.SkResourceCache::Rec"* [ %10, %7 ], [ %5, %3 ]
  tail call void %1(%"struct.SkResourceCache::Rec"* nonnull dereferenceable(24) %8, i8* %2) #13
  %9 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %8, i64 0, i32 2
  %10 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %9, align 8
  %11 = icmp eq %"struct.SkResourceCache::Rec"* %10, null
  br i1 %11, label %12, label %7

12:                                               ; preds = %7, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN15SkResourceCache17setTotalByteLimitEm(%class.SkResourceCache* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  store i64 %1, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %36

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 3
  %8 = load %class.SkDiscardableMemory* (i64)*, %class.SkDiscardableMemory* (i64)** %7, align 8
  %9 = icmp eq %class.SkDiscardableMemory* (i64)* %8, null
  %10 = select i1 %9, i64 %1, i64 4294967295
  %11 = select i1 %9, i32 2147483647, i32 1024
  %12 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 1
  %13 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %12, align 8
  %14 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 7
  %15 = icmp eq %"struct.SkResourceCache::Rec"* %13, null
  br i1 %15, label %36, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 4
  br label %18

18:                                               ; preds = %34, %16
  %19 = phi %"struct.SkResourceCache::Rec"* [ %13, %16 ], [ %28, %34 ]
  %20 = bitcast %"struct.SkResourceCache::Rec"* %19 to i1 (%"struct.SkResourceCache::Rec"*)***
  %21 = load i64, i64* %17, align 8
  %22 = icmp ult i64 %21, %10
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = load i32, i32* %14, align 8
  %25 = icmp slt i32 %24, %11
  br i1 %25, label %36, label %26

26:                                               ; preds = %23, %18
  %27 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %19, i64 0, i32 2
  %28 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %27, align 8
  %29 = load i1 (%"struct.SkResourceCache::Rec"*)**, i1 (%"struct.SkResourceCache::Rec"*)*** %20, align 8
  %30 = getelementptr inbounds i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %29, i64 4
  %31 = load i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"struct.SkResourceCache::Rec"* nonnull %19) #13
  br i1 %32, label %33, label %34

33:                                               ; preds = %26
  tail call void @_ZN15SkResourceCache6removeEPNS_3RecE(%class.SkResourceCache* %0, %"struct.SkResourceCache::Rec"* nonnull %19) #13
  br label %34

34:                                               ; preds = %33, %26
  %35 = icmp eq %"struct.SkResourceCache::Rec"* %28, null
  br i1 %35, label %36, label %18

36:                                               ; preds = %34, %23, %6, %2
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCachedData* @_ZN15SkResourceCache13newCachedDataEm(%class.SkResourceCache*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN15SkResourceCache13checkMessagesEv(%class.SkResourceCache* %0)
  %3 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 3
  %4 = load %class.SkDiscardableMemory* (i64)*, %class.SkDiscardableMemory* (i64)** %3, align 8
  %5 = icmp eq %class.SkDiscardableMemory* (i64)* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = tail call %class.SkDiscardableMemory* %4(i64 %1) #13
  %8 = icmp eq %class.SkDiscardableMemory* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %6
  %10 = tail call i8* @_Znwm(i64 64) #12
  %11 = bitcast i8* %10 to %class.SkCachedData*
  tail call void @_ZN12SkCachedDataC1EmP19SkDiscardableMemory(%class.SkCachedData* nonnull %11, i64 %1, %class.SkDiscardableMemory* nonnull %7) #13
  br label %16

12:                                               ; preds = %2
  %13 = tail call i8* @_Znwm(i64 64) #12
  %14 = bitcast i8* %13 to %class.SkCachedData*
  %15 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #13
  tail call void @_ZN12SkCachedDataC1EPvm(%class.SkCachedData* nonnull %14, i8* %15, i64 %1) #13
  br label %16

16:                                               ; preds = %9, %6, %12
  %17 = phi %class.SkCachedData* [ %14, %12 ], [ %11, %9 ], [ null, %6 ]
  ret %class.SkCachedData* %17
}

declare void @_ZN12SkCachedDataC1EmP19SkDiscardableMemory(%class.SkCachedData*, i64, %class.SkDiscardableMemory*) unnamed_addr #4

declare void @_ZN12SkCachedDataC1EPvm(%class.SkCachedData*, i8*, i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15SkResourceCache4dumpEv(%class.SkResourceCache* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 3
  %7 = load %class.SkDiscardableMemory* (i64)*, %class.SkDiscardableMemory* (i64)** %6, align 8
  %8 = icmp eq %class.SkDiscardableMemory* (i64)* %7, null
  %9 = select i1 %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 416, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i32 %3, i64 %5, i8* %9) #13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN15SkResourceCache28setSingleAllocationByteLimitEm(%class.SkResourceCache* nocapture, i64) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 6
  %4 = load i64, i64* %3, align 8
  store i64 %1, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK15SkResourceCache28getSingleAllocationByteLimitEv(%class.SkResourceCache* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK15SkResourceCache37getEffectiveSingleAllocationByteLimitEv(%class.SkResourceCache* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 3
  %5 = load %class.SkDiscardableMemory* (i64)*, %class.SkDiscardableMemory* (i64)** %4, align 8
  %6 = icmp eq %class.SkDiscardableMemory* (i64)* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = icmp eq i64 %3, 0
  %9 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %0, i64 0, i32 5
  %10 = load i64, i64* %9, align 8
  br i1 %8, label %14, label %11

11:                                               ; preds = %7
  %12 = icmp ult i64 %10, %3
  %13 = select i1 %12, i64 %10, i64 %3
  br label %14

14:                                               ; preds = %7, %11, %1
  %15 = phi i64 [ %13, %11 ], [ %3, %1 ], [ %10, %7 ]
  ret i64 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN15SkResourceCache17GetTotalBytesUsedEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %12, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 16) #12
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 4
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %11, align 8
  store i8* %7, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %12

12:                                               ; preds = %0, %3, %6
  %13 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acquire
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %18) #13
  br label %19

19:                                               ; preds = %12, %17
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %31, !prof !2

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = tail call i8* @_Znwm(i64 16) #12
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %26, i64 4
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %26, i64 8
  %30 = bitcast i8* %29 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %30, align 8
  store i8* %26, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %31

31:                                               ; preds = %19, %22, %25
  %32 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %33 = icmp eq %class.SkResourceCache* %32, null
  br i1 %33, label %34, label %45

34:                                               ; preds = %31
  %35 = tail call i8* @_Znwm(i64 104) #12
  %36 = getelementptr inbounds i8, i8* %35, i64 64
  %37 = bitcast i8* %36 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %37, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #13
  %38 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #13
  %39 = getelementptr inbounds i8, i8* %35, i64 16
  %40 = bitcast i8* %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %35, i64 24
  %42 = bitcast i8* %41 to %class.SkDiscardableMemory* (i64)**
  %43 = getelementptr inbounds i8, i8* %35, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %42, align 8
  store i8* %35, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %44 = bitcast i8* %35 to %class.SkResourceCache*
  br label %45

45:                                               ; preds = %31, %34
  %46 = phi %class.SkResourceCache* [ %44, %34 ], [ %32, %31 ]
  %47 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %46, i64 0, i32 4
  %48 = load i64, i64* %47, align 8
  %49 = atomicrmw add i32* %14, i32 1 release
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  %52 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %52, i32 1) #13
  br label %53

53:                                               ; preds = %45, %51
  ret i64 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN15SkResourceCache17GetTotalByteLimitEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %12, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 16) #12
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 4
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %11, align 8
  store i8* %7, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %12

12:                                               ; preds = %0, %3, %6
  %13 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acquire
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %18) #13
  br label %19

19:                                               ; preds = %12, %17
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %31, !prof !2

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = tail call i8* @_Znwm(i64 16) #12
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %26, i64 4
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %26, i64 8
  %30 = bitcast i8* %29 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %30, align 8
  store i8* %26, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %31

31:                                               ; preds = %19, %22, %25
  %32 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %33 = icmp eq %class.SkResourceCache* %32, null
  br i1 %33, label %34, label %45

34:                                               ; preds = %31
  %35 = tail call i8* @_Znwm(i64 104) #12
  %36 = getelementptr inbounds i8, i8* %35, i64 64
  %37 = bitcast i8* %36 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %37, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #13
  %38 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #13
  %39 = getelementptr inbounds i8, i8* %35, i64 16
  %40 = bitcast i8* %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %35, i64 24
  %42 = bitcast i8* %41 to %class.SkDiscardableMemory* (i64)**
  %43 = getelementptr inbounds i8, i8* %35, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %42, align 8
  store i8* %35, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %44 = bitcast i8* %35 to %class.SkResourceCache*
  br label %45

45:                                               ; preds = %31, %34
  %46 = phi %class.SkResourceCache* [ %44, %34 ], [ %32, %31 ]
  %47 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %46, i64 0, i32 5
  %48 = load i64, i64* %47, align 8
  %49 = atomicrmw add i32* %14, i32 1 release
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  %52 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %52, i32 1) #13
  br label %53

53:                                               ; preds = %45, %51
  ret i64 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN15SkResourceCache17SetTotalByteLimitEm(i64) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %13, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 16) #12
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %12, align 8
  store i8* %8, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %13

13:                                               ; preds = %1, %4, %7
  %14 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %15 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acquire
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %19) #13
  br label %20

20:                                               ; preds = %13, %18
  %21 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %32, !prof !2

23:                                               ; preds = %20
  %24 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %23
  %27 = tail call i8* @_Znwm(i64 16) #12
  %28 = bitcast i8* %27 to i32*
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %27, i64 4
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds i8, i8* %27, i64 8
  %31 = bitcast i8* %30 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %31, align 8
  store i8* %27, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %32

32:                                               ; preds = %20, %23, %26
  %33 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %34 = icmp eq %class.SkResourceCache* %33, null
  br i1 %34, label %35, label %46

35:                                               ; preds = %32
  %36 = tail call i8* @_Znwm(i64 104) #12
  %37 = getelementptr inbounds i8, i8* %36, i64 64
  %38 = bitcast i8* %37 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %38, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 16, i1 false) #13
  %39 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 16, i1 false) #13
  %40 = getelementptr inbounds i8, i8* %36, i64 16
  %41 = bitcast i8* %40 to i8**
  store i8* %39, i8** %41, align 8
  %42 = getelementptr inbounds i8, i8* %36, i64 24
  %43 = bitcast i8* %42 to %class.SkDiscardableMemory* (i64)**
  %44 = getelementptr inbounds i8, i8* %36, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %43, align 8
  store i8* %36, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %45 = bitcast i8* %36 to %class.SkResourceCache*
  br label %46

46:                                               ; preds = %32, %35
  %47 = phi %class.SkResourceCache* [ %45, %35 ], [ %33, %32 ]
  %48 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %47, i64 0, i32 5
  %49 = load i64, i64* %48, align 8
  store i64 %0, i64* %48, align 8
  %50 = icmp ugt i64 %49, %0
  br i1 %50, label %51, label %81

51:                                               ; preds = %46
  %52 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %47, i64 0, i32 3
  %53 = load %class.SkDiscardableMemory* (i64)*, %class.SkDiscardableMemory* (i64)** %52, align 8
  %54 = icmp eq %class.SkDiscardableMemory* (i64)* %53, null
  %55 = select i1 %54, i64 %0, i64 4294967295
  %56 = select i1 %54, i32 2147483647, i32 1024
  %57 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %47, i64 0, i32 1
  %58 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %57, align 8
  %59 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %47, i64 0, i32 7
  %60 = icmp eq %"struct.SkResourceCache::Rec"* %58, null
  br i1 %60, label %81, label %61

61:                                               ; preds = %51
  %62 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %47, i64 0, i32 4
  br label %63

63:                                               ; preds = %79, %61
  %64 = phi %"struct.SkResourceCache::Rec"* [ %58, %61 ], [ %73, %79 ]
  %65 = bitcast %"struct.SkResourceCache::Rec"* %64 to i1 (%"struct.SkResourceCache::Rec"*)***
  %66 = load i64, i64* %62, align 8
  %67 = icmp ult i64 %66, %55
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = load i32, i32* %59, align 8
  %70 = icmp slt i32 %69, %56
  br i1 %70, label %81, label %71

71:                                               ; preds = %68, %63
  %72 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %64, i64 0, i32 2
  %73 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %72, align 8
  %74 = load i1 (%"struct.SkResourceCache::Rec"*)**, i1 (%"struct.SkResourceCache::Rec"*)*** %65, align 8
  %75 = getelementptr inbounds i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %74, i64 4
  %76 = load i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %75, align 8
  %77 = tail call zeroext i1 %76(%"struct.SkResourceCache::Rec"* nonnull %64) #13
  br i1 %77, label %78, label %79

78:                                               ; preds = %71
  tail call void @_ZN15SkResourceCache6removeEPNS_3RecE(%class.SkResourceCache* %47, %"struct.SkResourceCache::Rec"* nonnull %64) #13
  br label %79

79:                                               ; preds = %78, %71
  %80 = icmp eq %"struct.SkResourceCache::Rec"* %73, null
  br i1 %80, label %81, label %63

81:                                               ; preds = %68, %79, %46, %51
  %82 = atomicrmw add i32* %15, i32 1 release
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %85, i32 1) #13
  br label %86

86:                                               ; preds = %81, %84
  ret i64 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkDiscardableMemory* (i64)* @_ZN15SkResourceCache21GetDiscardableFactoryEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %12, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 16) #12
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 4
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %11, align 8
  store i8* %7, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %12

12:                                               ; preds = %0, %3, %6
  %13 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acquire
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %18) #13
  br label %19

19:                                               ; preds = %12, %17
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %31, !prof !2

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = tail call i8* @_Znwm(i64 16) #12
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %26, i64 4
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %26, i64 8
  %30 = bitcast i8* %29 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %30, align 8
  store i8* %26, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %31

31:                                               ; preds = %19, %22, %25
  %32 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %33 = icmp eq %class.SkResourceCache* %32, null
  br i1 %33, label %34, label %45

34:                                               ; preds = %31
  %35 = tail call i8* @_Znwm(i64 104) #12
  %36 = getelementptr inbounds i8, i8* %35, i64 64
  %37 = bitcast i8* %36 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %37, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #13
  %38 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #13
  %39 = getelementptr inbounds i8, i8* %35, i64 16
  %40 = bitcast i8* %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %35, i64 24
  %42 = bitcast i8* %41 to %class.SkDiscardableMemory* (i64)**
  %43 = getelementptr inbounds i8, i8* %35, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %42, align 8
  store i8* %35, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %44 = bitcast i8* %35 to %class.SkResourceCache*
  br label %45

45:                                               ; preds = %31, %34
  %46 = phi %class.SkResourceCache* [ %44, %34 ], [ %32, %31 ]
  %47 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %46, i64 0, i32 3
  %48 = load %class.SkDiscardableMemory* (i64)*, %class.SkDiscardableMemory* (i64)** %47, align 8
  %49 = atomicrmw add i32* %14, i32 1 release
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  %52 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %52, i32 1) #13
  br label %53

53:                                               ; preds = %45, %51
  ret %class.SkDiscardableMemory* (i64)* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCachedData* @_ZN15SkResourceCache13NewCachedDataEm(i64) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %13, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 16) #12
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %12, align 8
  store i8* %8, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %13

13:                                               ; preds = %1, %4, %7
  %14 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %15 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acquire
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %19) #13
  br label %20

20:                                               ; preds = %13, %18
  %21 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %32, !prof !2

23:                                               ; preds = %20
  %24 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %23
  %27 = tail call i8* @_Znwm(i64 16) #12
  %28 = bitcast i8* %27 to i32*
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %27, i64 4
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds i8, i8* %27, i64 8
  %31 = bitcast i8* %30 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %31, align 8
  store i8* %27, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %32

32:                                               ; preds = %20, %23, %26
  %33 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %34 = icmp eq %class.SkResourceCache* %33, null
  br i1 %34, label %35, label %46

35:                                               ; preds = %32
  %36 = tail call i8* @_Znwm(i64 104) #12
  %37 = getelementptr inbounds i8, i8* %36, i64 64
  %38 = bitcast i8* %37 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %38, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 16, i1 false) #13
  %39 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 16, i1 false) #13
  %40 = getelementptr inbounds i8, i8* %36, i64 16
  %41 = bitcast i8* %40 to i8**
  store i8* %39, i8** %41, align 8
  %42 = getelementptr inbounds i8, i8* %36, i64 24
  %43 = bitcast i8* %42 to %class.SkDiscardableMemory* (i64)**
  %44 = getelementptr inbounds i8, i8* %36, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %43, align 8
  store i8* %36, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %45 = bitcast i8* %36 to %class.SkResourceCache*
  br label %46

46:                                               ; preds = %32, %35
  %47 = phi %class.SkResourceCache* [ %45, %35 ], [ %33, %32 ]
  %48 = tail call %class.SkCachedData* @_ZN15SkResourceCache13newCachedDataEm(%class.SkResourceCache* nonnull %47, i64 %0)
  %49 = atomicrmw add i32* %15, i32 1 release
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %52, i32 1) #13
  br label %53

53:                                               ; preds = %46, %51
  ret %class.SkCachedData* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache4DumpEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %12, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 16) #12
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 4
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %11, align 8
  store i8* %7, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %12

12:                                               ; preds = %0, %3, %6
  %13 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acquire
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %18) #13
  br label %19

19:                                               ; preds = %12, %17
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %31, !prof !2

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = tail call i8* @_Znwm(i64 16) #12
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %26, i64 4
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %26, i64 8
  %30 = bitcast i8* %29 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %30, align 8
  store i8* %26, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %31

31:                                               ; preds = %19, %22, %25
  %32 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %33 = icmp eq %class.SkResourceCache* %32, null
  br i1 %33, label %34, label %45

34:                                               ; preds = %31
  %35 = tail call i8* @_Znwm(i64 104) #12
  %36 = getelementptr inbounds i8, i8* %35, i64 64
  %37 = bitcast i8* %36 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %37, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #13
  %38 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #13
  %39 = getelementptr inbounds i8, i8* %35, i64 16
  %40 = bitcast i8* %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %35, i64 24
  %42 = bitcast i8* %41 to %class.SkDiscardableMemory* (i64)**
  %43 = getelementptr inbounds i8, i8* %35, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %42, align 8
  store i8* %35, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %44 = bitcast i8* %35 to %class.SkResourceCache*
  br label %45

45:                                               ; preds = %31, %34
  %46 = phi %class.SkResourceCache* [ %44, %34 ], [ %32, %31 ]
  %47 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %46, i64 0, i32 7
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %46, i64 0, i32 4
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %46, i64 0, i32 3
  %52 = load %class.SkDiscardableMemory* (i64)*, %class.SkDiscardableMemory* (i64)** %51, align 8
  %53 = icmp eq %class.SkDiscardableMemory* (i64)* %52, null
  %54 = select i1 %53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 416, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i32 %48, i64 %50, i8* %54) #13
  %55 = atomicrmw add i32* %14, i32 1 release
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %45
  %58 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %58, i32 1) #13
  br label %59

59:                                               ; preds = %45, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN15SkResourceCache28SetSingleAllocationByteLimitEm(i64) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %13, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 16) #12
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %12, align 8
  store i8* %8, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %13

13:                                               ; preds = %1, %4, %7
  %14 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %15 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acquire
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %19) #13
  br label %20

20:                                               ; preds = %13, %18
  %21 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %32, !prof !2

23:                                               ; preds = %20
  %24 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %23
  %27 = tail call i8* @_Znwm(i64 16) #12
  %28 = bitcast i8* %27 to i32*
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %27, i64 4
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds i8, i8* %27, i64 8
  %31 = bitcast i8* %30 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %31, align 8
  store i8* %27, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %32

32:                                               ; preds = %20, %23, %26
  %33 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %34 = icmp eq %class.SkResourceCache* %33, null
  br i1 %34, label %35, label %46

35:                                               ; preds = %32
  %36 = tail call i8* @_Znwm(i64 104) #12
  %37 = getelementptr inbounds i8, i8* %36, i64 64
  %38 = bitcast i8* %37 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %38, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 16, i1 false) #13
  %39 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 16, i1 false) #13
  %40 = getelementptr inbounds i8, i8* %36, i64 16
  %41 = bitcast i8* %40 to i8**
  store i8* %39, i8** %41, align 8
  %42 = getelementptr inbounds i8, i8* %36, i64 24
  %43 = bitcast i8* %42 to %class.SkDiscardableMemory* (i64)**
  %44 = getelementptr inbounds i8, i8* %36, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %43, align 8
  store i8* %36, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %45 = bitcast i8* %36 to %class.SkResourceCache*
  br label %46

46:                                               ; preds = %32, %35
  %47 = phi %class.SkResourceCache* [ %45, %35 ], [ %33, %32 ]
  %48 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %47, i64 0, i32 6
  %49 = load i64, i64* %48, align 8
  store i64 %0, i64* %48, align 8
  %50 = atomicrmw add i32* %15, i32 1 release
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %53, i32 1) #13
  br label %54

54:                                               ; preds = %46, %52
  ret i64 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN15SkResourceCache28GetSingleAllocationByteLimitEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %12, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 16) #12
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 4
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %11, align 8
  store i8* %7, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %12

12:                                               ; preds = %0, %3, %6
  %13 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acquire
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %18) #13
  br label %19

19:                                               ; preds = %12, %17
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %31, !prof !2

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = tail call i8* @_Znwm(i64 16) #12
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %26, i64 4
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %26, i64 8
  %30 = bitcast i8* %29 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %30, align 8
  store i8* %26, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %31

31:                                               ; preds = %19, %22, %25
  %32 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %33 = icmp eq %class.SkResourceCache* %32, null
  br i1 %33, label %34, label %45

34:                                               ; preds = %31
  %35 = tail call i8* @_Znwm(i64 104) #12
  %36 = getelementptr inbounds i8, i8* %35, i64 64
  %37 = bitcast i8* %36 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %37, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #13
  %38 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #13
  %39 = getelementptr inbounds i8, i8* %35, i64 16
  %40 = bitcast i8* %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %35, i64 24
  %42 = bitcast i8* %41 to %class.SkDiscardableMemory* (i64)**
  %43 = getelementptr inbounds i8, i8* %35, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %42, align 8
  store i8* %35, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %44 = bitcast i8* %35 to %class.SkResourceCache*
  br label %45

45:                                               ; preds = %31, %34
  %46 = phi %class.SkResourceCache* [ %44, %34 ], [ %32, %31 ]
  %47 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %46, i64 0, i32 6
  %48 = load i64, i64* %47, align 8
  %49 = atomicrmw add i32* %14, i32 1 release
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  %52 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %52, i32 1) #13
  br label %53

53:                                               ; preds = %45, %51
  ret i64 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN15SkResourceCache37GetEffectiveSingleAllocationByteLimitEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %12, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 16) #12
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 4
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %11, align 8
  store i8* %7, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %12

12:                                               ; preds = %0, %3, %6
  %13 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acquire
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %18) #13
  br label %19

19:                                               ; preds = %12, %17
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %31, !prof !2

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = tail call i8* @_Znwm(i64 16) #12
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %26, i64 4
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %26, i64 8
  %30 = bitcast i8* %29 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %30, align 8
  store i8* %26, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %31

31:                                               ; preds = %19, %22, %25
  %32 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %33 = icmp eq %class.SkResourceCache* %32, null
  br i1 %33, label %34, label %45

34:                                               ; preds = %31
  %35 = tail call i8* @_Znwm(i64 104) #12
  %36 = getelementptr inbounds i8, i8* %35, i64 64
  %37 = bitcast i8* %36 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %37, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #13
  %38 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #13
  %39 = getelementptr inbounds i8, i8* %35, i64 16
  %40 = bitcast i8* %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %35, i64 24
  %42 = bitcast i8* %41 to %class.SkDiscardableMemory* (i64)**
  %43 = getelementptr inbounds i8, i8* %35, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %42, align 8
  store i8* %35, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %44 = bitcast i8* %35 to %class.SkResourceCache*
  br label %45

45:                                               ; preds = %31, %34
  %46 = phi %class.SkResourceCache* [ %44, %34 ], [ %32, %31 ]
  %47 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %46, i64 0, i32 6
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %46, i64 0, i32 3
  %50 = load %class.SkDiscardableMemory* (i64)*, %class.SkDiscardableMemory* (i64)** %49, align 8
  %51 = icmp eq %class.SkDiscardableMemory* (i64)* %50, null
  br i1 %51, label %52, label %59

52:                                               ; preds = %45
  %53 = icmp eq i64 %48, 0
  %54 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %46, i64 0, i32 5
  %55 = load i64, i64* %54, align 8
  br i1 %53, label %59, label %56

56:                                               ; preds = %52
  %57 = icmp ult i64 %55, %48
  %58 = select i1 %57, i64 %55, i64 %48
  br label %59

59:                                               ; preds = %45, %52, %56
  %60 = phi i64 [ %58, %56 ], [ %48, %45 ], [ %55, %52 ]
  %61 = atomicrmw add i32* %14, i32 1 release
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %64, i32 1) #13
  br label %65

65:                                               ; preds = %59, %63
  ret i64 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache8PurgeAllEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %12, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 16) #12
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 4
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %11, align 8
  store i8* %7, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %12

12:                                               ; preds = %0, %3, %6
  %13 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acquire
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %18) #13
  br label %19

19:                                               ; preds = %12, %17
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %31, !prof !2

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = tail call i8* @_Znwm(i64 16) #12
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %26, i64 4
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %26, i64 8
  %30 = bitcast i8* %29 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %30, align 8
  store i8* %26, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %31

31:                                               ; preds = %19, %22, %25
  %32 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %33 = icmp eq %class.SkResourceCache* %32, null
  br i1 %33, label %34, label %45

34:                                               ; preds = %31
  %35 = tail call i8* @_Znwm(i64 104) #12
  %36 = getelementptr inbounds i8, i8* %35, i64 64
  %37 = bitcast i8* %36 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %37, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #13
  %38 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #13
  %39 = getelementptr inbounds i8, i8* %35, i64 16
  %40 = bitcast i8* %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %35, i64 24
  %42 = bitcast i8* %41 to %class.SkDiscardableMemory* (i64)**
  %43 = getelementptr inbounds i8, i8* %35, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %42, align 8
  store i8* %35, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %44 = bitcast i8* %35 to %class.SkResourceCache*
  br label %45

45:                                               ; preds = %31, %34
  %46 = phi %class.SkResourceCache* [ %44, %34 ], [ %32, %31 ]
  %47 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %46, i64 0, i32 1
  %48 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %47, align 8
  %49 = icmp eq %"struct.SkResourceCache::Rec"* %48, null
  br i1 %49, label %62, label %50

50:                                               ; preds = %45, %60
  %51 = phi %"struct.SkResourceCache::Rec"* [ %54, %60 ], [ %48, %45 ]
  %52 = bitcast %"struct.SkResourceCache::Rec"* %51 to i1 (%"struct.SkResourceCache::Rec"*)***
  %53 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %51, i64 0, i32 2
  %54 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %53, align 8
  %55 = load i1 (%"struct.SkResourceCache::Rec"*)**, i1 (%"struct.SkResourceCache::Rec"*)*** %52, align 8
  %56 = getelementptr inbounds i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %55, i64 4
  %57 = load i1 (%"struct.SkResourceCache::Rec"*)*, i1 (%"struct.SkResourceCache::Rec"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"struct.SkResourceCache::Rec"* nonnull %51) #13
  br i1 %58, label %59, label %60

59:                                               ; preds = %50
  tail call void @_ZN15SkResourceCache6removeEPNS_3RecE(%class.SkResourceCache* %46, %"struct.SkResourceCache::Rec"* nonnull %51) #13
  br label %60

60:                                               ; preds = %59, %50
  %61 = icmp eq %"struct.SkResourceCache::Rec"* %54, null
  br i1 %61, label %62, label %50

62:                                               ; preds = %60, %45
  %63 = atomicrmw add i32* %14, i32 1 release
  %64 = icmp slt i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %62
  %66 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %66, i32 1) #13
  br label %67

67:                                               ; preds = %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache13CheckMessagesEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %12, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 16) #12
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 4
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %11, align 8
  store i8* %7, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %12

12:                                               ; preds = %0, %3, %6
  %13 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %14 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acquire
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %18) #13
  br label %19

19:                                               ; preds = %12, %17
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %31, !prof !2

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = tail call i8* @_Znwm(i64 16) #12
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %26, i64 4
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds i8, i8* %26, i64 8
  %30 = bitcast i8* %29 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %30, align 8
  store i8* %26, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %31

31:                                               ; preds = %19, %22, %25
  %32 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %33 = icmp eq %class.SkResourceCache* %32, null
  br i1 %33, label %34, label %45

34:                                               ; preds = %31
  %35 = tail call i8* @_Znwm(i64 104) #12
  %36 = getelementptr inbounds i8, i8* %35, i64 64
  %37 = bitcast i8* %36 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %37, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #13
  %38 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #13
  %39 = getelementptr inbounds i8, i8* %35, i64 16
  %40 = bitcast i8* %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %35, i64 24
  %42 = bitcast i8* %41 to %class.SkDiscardableMemory* (i64)**
  %43 = getelementptr inbounds i8, i8* %35, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %42, align 8
  store i8* %35, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %44 = bitcast i8* %35 to %class.SkResourceCache*
  br label %45

45:                                               ; preds = %31, %34
  %46 = phi %class.SkResourceCache* [ %44, %34 ], [ %32, %31 ]
  tail call void @_ZN15SkResourceCache13checkMessagesEv(%class.SkResourceCache* nonnull %46)
  %47 = atomicrmw add i32* %14, i32 1 release
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %13, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %50, i32 1) #13
  br label %51

51:                                               ; preds = %45, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkResourceCache4FindERKNS_3KeyEPFbRKNS_3RecEPvES6_(%"struct.SkResourceCache::Key"* nocapture readonly dereferenceable(24), i1 (%"struct.SkResourceCache::Rec"*, i8*)* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %15, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %6
  %10 = tail call i8* @_Znwm(i64 16) #12
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %10, i64 4
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %14, align 8
  store i8* %10, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %15

15:                                               ; preds = %3, %6, %9
  %16 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %17 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acquire
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %16, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %21) #13
  br label %22

22:                                               ; preds = %15, %20
  %23 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %34, !prof !2

25:                                               ; preds = %22
  %26 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = tail call i8* @_Znwm(i64 16) #12
  %30 = bitcast i8* %29 to i32*
  store i32 1, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %29, i64 4
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds i8, i8* %29, i64 8
  %33 = bitcast i8* %32 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %33, align 8
  store i8* %29, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %34

34:                                               ; preds = %22, %25, %28
  %35 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %36 = icmp eq %class.SkResourceCache* %35, null
  br i1 %36, label %37, label %48

37:                                               ; preds = %34
  %38 = tail call i8* @_Znwm(i64 104) #12
  %39 = getelementptr inbounds i8, i8* %38, i64 64
  %40 = bitcast i8* %39 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %40, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #13
  %41 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 16, i1 false) #13
  %42 = getelementptr inbounds i8, i8* %38, i64 16
  %43 = bitcast i8* %42 to i8**
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %38, i64 24
  %45 = bitcast i8* %44 to %class.SkDiscardableMemory* (i64)**
  %46 = getelementptr inbounds i8, i8* %38, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %45, align 8
  store i8* %38, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %47 = bitcast i8* %38 to %class.SkResourceCache*
  br label %48

48:                                               ; preds = %34, %37
  %49 = phi %class.SkResourceCache* [ %47, %37 ], [ %35, %34 ]
  %50 = tail call zeroext i1 @_ZN15SkResourceCache4findERKNS_3KeyEPFbRKNS_3RecEPvES6_(%class.SkResourceCache* nonnull %49, %"struct.SkResourceCache::Key"* dereferenceable(24) %0, i1 (%"struct.SkResourceCache::Rec"*, i8*)* %1, i8* %2)
  %51 = atomicrmw add i32* %17, i32 1 release
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %16, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %54, i32 1) #13
  br label %55

55:                                               ; preds = %48, %53
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache3AddEPNS_3RecEPv(%"struct.SkResourceCache::Rec"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %5
  %9 = tail call i8* @_Znwm(i64 16) #12
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %9, i64 4
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %13, align 8
  store i8* %9, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %14

14:                                               ; preds = %2, %5, %8
  %15 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %16 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acquire
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %15, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %20) #13
  br label %21

21:                                               ; preds = %14, %19
  %22 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %33, !prof !2

24:                                               ; preds = %21
  %25 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = tail call i8* @_Znwm(i64 16) #12
  %29 = bitcast i8* %28 to i32*
  store i32 1, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %28, i64 4
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds i8, i8* %28, i64 8
  %32 = bitcast i8* %31 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %32, align 8
  store i8* %28, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %33

33:                                               ; preds = %21, %24, %27
  %34 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %35 = icmp eq %class.SkResourceCache* %34, null
  br i1 %35, label %36, label %47

36:                                               ; preds = %33
  %37 = tail call i8* @_Znwm(i64 104) #12
  %38 = getelementptr inbounds i8, i8* %37, i64 64
  %39 = bitcast i8* %38 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %39, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 16, i1 false) #13
  %40 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false) #13
  %41 = getelementptr inbounds i8, i8* %37, i64 16
  %42 = bitcast i8* %41 to i8**
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %37, i64 24
  %44 = bitcast i8* %43 to %class.SkDiscardableMemory* (i64)**
  %45 = getelementptr inbounds i8, i8* %37, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %44, align 8
  store i8* %37, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %46 = bitcast i8* %37 to %class.SkResourceCache*
  br label %47

47:                                               ; preds = %33, %36
  %48 = phi %class.SkResourceCache* [ %46, %36 ], [ %34, %33 ]
  tail call void @_ZN15SkResourceCache3addEPNS_3RecEPv(%class.SkResourceCache* nonnull %48, %"struct.SkResourceCache::Rec"* %0, i8* %1)
  %49 = atomicrmw add i32* %16, i32 1 release
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %15, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %52, i32 1) #13
  br label %53

53:                                               ; preds = %47, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache8VisitAllEPFvRKNS_3RecEPvES3_(void (%"struct.SkResourceCache::Rec"*, i8*)* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %5
  %9 = tail call i8* @_Znwm(i64 16) #12
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %9, i64 4
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %13, align 8
  store i8* %9, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %14

14:                                               ; preds = %2, %5, %8
  %15 = load %class.SkMutex*, %class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex, align 8
  %16 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acquire
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %15, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %20) #13
  br label %21

21:                                               ; preds = %14, %19
  %22 = load atomic i8, i8* bitcast (i64* @_ZGVZL20resource_cache_mutexvE5mutex to i8*) acquire, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %33, !prof !2

24:                                               ; preds = %21
  %25 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = tail call i8* @_Znwm(i64 16) #12
  %29 = bitcast i8* %28 to i32*
  store i32 1, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %28, i64 4
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds i8, i8* %28, i64 8
  %32 = bitcast i8* %31 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %32, align 8
  store i8* %28, i8** bitcast (%class.SkMutex** @_ZZL20resource_cache_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL20resource_cache_mutexvE5mutex) #13
  br label %33

33:                                               ; preds = %21, %24, %27
  %34 = load %class.SkResourceCache*, %class.SkResourceCache** @_ZL14gResourceCache, align 8
  %35 = icmp eq %class.SkResourceCache* %34, null
  br i1 %35, label %36, label %47

36:                                               ; preds = %33
  %37 = tail call i8* @_Znwm(i64 104) #12
  %38 = getelementptr inbounds i8, i8* %37, i64 64
  %39 = bitcast i8* %38 to %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE5InboxC2Ej(%"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %39, i32 0) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 16, i1 false) #13
  %40 = tail call i8* @_Znwm(i64 16) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false) #13
  %41 = getelementptr inbounds i8, i8* %37, i64 16
  %42 = bitcast i8* %41 to i8**
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %37, i64 24
  %44 = bitcast i8* %43 to %class.SkDiscardableMemory* (i64)**
  %45 = getelementptr inbounds i8, i8* %37, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 28, i1 false) #13
  store %class.SkDiscardableMemory* (i64)* @_ZN19SkDiscardableMemory6CreateEm, %class.SkDiscardableMemory* (i64)** %44, align 8
  store i8* %37, i8** bitcast (%class.SkResourceCache** @_ZL14gResourceCache to i8**), align 8
  %46 = bitcast i8* %37 to %class.SkResourceCache*
  br label %47

47:                                               ; preds = %33, %36
  %48 = phi %class.SkResourceCache* [ %46, %36 ], [ %34, %33 ]
  %49 = getelementptr inbounds %class.SkResourceCache, %class.SkResourceCache* %48, i64 0, i32 1
  %50 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %49, align 8
  %51 = icmp eq %"struct.SkResourceCache::Rec"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %47, %52
  %53 = phi %"struct.SkResourceCache::Rec"* [ %55, %52 ], [ %50, %47 ]
  tail call void %0(%"struct.SkResourceCache::Rec"* nonnull dereferenceable(24) %53, i8* %1) #13
  %54 = getelementptr inbounds %"struct.SkResourceCache::Rec", %"struct.SkResourceCache::Rec"* %53, i64 0, i32 2
  %55 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %54, align 8
  %56 = icmp eq %"struct.SkResourceCache::Rec"* %55, null
  br i1 %56, label %57, label %52

57:                                               ; preds = %52, %47
  %58 = atomicrmw add i32* %16, i32 1 release
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %57
  %61 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %15, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %61, i32 1) #13
  br label %62

62:                                               ; preds = %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache17PostPurgeSharedIDEm(i64) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i64 %0, 0
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE4PostES1_(i64 %0)
  br label %4

4:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE4PostES1_(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %2, label %3 [
    i8 2, label %17
    i8 0, label %4
  ]

3:                                                ; preds = %4, %1
  br label %14

4:                                                ; preds = %1
  %5 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %6 = extractvalue { i8, i1 } %5, 1
  br i1 %6, label %7, label %3

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 32) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #13
  %9 = getelementptr inbounds i8, i8* %8, i64 16
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %8, i64 20
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %8, i64 24
  %13 = bitcast i8* %12 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %13, align 8
  store i8* %8, i8** bitcast (%class.SkMessageBus** @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE3bus to i8**), align 8
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1
  br label %17

14:                                               ; preds = %3, %14
  %15 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %16 = icmp eq i8 %15, 2
  br i1 %16, label %17, label %14

17:                                               ; preds = %14, %1, %7
  %18 = load %class.SkMessageBus*, %class.SkMessageBus** @_ZZN12SkMessageBusIN15SkResourceCache20PurgeSharedIDMessageEjLb1EE3GetEvE3bus, align 8
  %19 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %18, i64 0, i32 1
  %20 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acquire
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %19, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %24) #13
  br label %25

25:                                               ; preds = %17, %23
  %26 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %18, i64 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %18, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %65, %25
  %32 = atomicrmw add i32* %20, i32 1 release
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %19, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %35, i32 1) #13
  br label %36

36:                                               ; preds = %31, %34
  ret void

37:                                               ; preds = %29, %65
  %38 = phi i64 [ 0, %29 ], [ %66, %65 ]
  %39 = load %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"**, %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*** %30, align 8
  %40 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"** %39, i64 %38
  %41 = load %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"** %40, align 8
  %42 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %41, i64 0, i32 1
  %43 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acquire
  %45 = icmp slt i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %42, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %47) #13
  br label %48

48:                                               ; preds = %46, %37
  %49 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %41, i64 0, i32 0
  tail call void @_ZN8SkTArrayIN15SkResourceCache20PurgeSharedIDMessageELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %49, i32 1, i32 1) #13
  %50 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %41, i64 0, i32 0, i32 0
  %51 = load %"struct.SkResourceCache::PurgeSharedIDMessage"*, %"struct.SkResourceCache::PurgeSharedIDMessage"** %50, align 8
  %52 = getelementptr inbounds %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<SkResourceCache::PurgeSharedIDMessage, unsigned int, true>::Inbox"* %41, i64 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = lshr i64 %53, 1
  %55 = and i64 %54, 2147483647
  %56 = add i64 %53, 2
  %57 = and i64 %56, 4294967294
  %58 = and i64 %53, -4294967295
  %59 = or i64 %57, %58
  store i64 %59, i64* %52, align 8
  %60 = getelementptr inbounds %"struct.SkResourceCache::PurgeSharedIDMessage", %"struct.SkResourceCache::PurgeSharedIDMessage"* %51, i64 %55, i32 0
  store i64 %0, i64* %60, align 8
  %61 = atomicrmw add i32* %43, i32 1 release
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %48
  %64 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %42, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %64, i32 1) #13
  br label %65

65:                                               ; preds = %48, %63
  %66 = add nuw nsw i64 %38, 1
  %67 = load i32, i32* %26, align 4
  %68 = sext i32 %67 to i64
  %69 = icmp slt i64 %66, %68
  br i1 %69, label %37, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10SkGraphics30GetResourceCacheTotalBytesUsedEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i64 @_ZN15SkResourceCache17GetTotalBytesUsedEv()
  ret i64 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10SkGraphics30GetResourceCacheTotalByteLimitEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i64 @_ZN15SkResourceCache17GetTotalByteLimitEv()
  ret i64 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10SkGraphics30SetResourceCacheTotalByteLimitEm(i64) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN15SkResourceCache17SetTotalByteLimitEm(i64 %0)
  ret i64 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10SkGraphics41GetResourceCacheSingleAllocationByteLimitEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i64 @_ZN15SkResourceCache28GetSingleAllocationByteLimitEv()
  ret i64 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10SkGraphics41SetResourceCacheSingleAllocationByteLimitEm(i64) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN15SkResourceCache28SetSingleAllocationByteLimitEm(i64 %0)
  ret i64 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkGraphics18PurgeResourceCacheEv() local_unnamed_addr #0 align 2 {
  tail call void @_ZN18SkImageFilter_Base10PurgeCacheEv() #13
  tail call void @_ZN15SkResourceCache8PurgeAllEv()
  ret void
}

declare void @_ZN18SkImageFilter_Base10PurgeCacheEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache24TestDumpMemoryStatisticsEv() local_unnamed_addr #0 align 2 {
  tail call void @_ZN15SkResourceCache8VisitAllEPFvRKNS_3RecEPvES3_(void (%"struct.SkResourceCache::Rec"*, i8*)* nonnull @_ZL12dump_visitorRKN15SkResourceCache3RecEPv, i8* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL12dump_visitorRKN15SkResourceCache3RecEPv(%"struct.SkResourceCache::Rec"* dereferenceable(24), i8* nocapture readnone) #0 {
  %3 = bitcast %"struct.SkResourceCache::Rec"* %0 to i8* (%"struct.SkResourceCache::Rec"*)***
  %4 = load i8* (%"struct.SkResourceCache::Rec"*)**, i8* (%"struct.SkResourceCache::Rec"*)*** %3, align 8
  %5 = getelementptr inbounds i8* (%"struct.SkResourceCache::Rec"*)*, i8* (%"struct.SkResourceCache::Rec"*)** %4, i64 6
  %6 = load i8* (%"struct.SkResourceCache::Rec"*)*, i8* (%"struct.SkResourceCache::Rec"*)** %5, align 8
  %7 = tail call i8* %6(%"struct.SkResourceCache::Rec"* %0) #13
  %8 = bitcast %"struct.SkResourceCache::Rec"* %0 to i64 (%"struct.SkResourceCache::Rec"*)***
  %9 = load i64 (%"struct.SkResourceCache::Rec"*)**, i64 (%"struct.SkResourceCache::Rec"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"struct.SkResourceCache::Rec"*)*, i64 (%"struct.SkResourceCache::Rec"*)** %9, i64 3
  %11 = load i64 (%"struct.SkResourceCache::Rec"*)*, i64 (%"struct.SkResourceCache::Rec"*)** %10, align 8
  %12 = tail call i64 %11(%"struct.SkResourceCache::Rec"* %0) #13
  %13 = bitcast %"struct.SkResourceCache::Rec"* %0 to %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)***
  %14 = load %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)**, %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)*** %13, align 8
  %15 = getelementptr inbounds %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)*, %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)** %14, i64 7
  %16 = load %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)*, %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)** %15, align 8
  %17 = tail call %class.SkDiscardableMemory* %16(%"struct.SkResourceCache::Rec"* %0) #13
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 585, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0), i8* %7, i64 %12, %class.SkDiscardableMemory* %17) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkResourceCache20DumpMemoryStatisticsEP17SkTraceMemoryDump(%class.SkTraceMemoryDump*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkTraceMemoryDump* %0 to i8*
  tail call void @_ZN15SkResourceCache8VisitAllEPFvRKNS_3RecEPvES3_(void (%"struct.SkResourceCache::Rec"*, i8*)* nonnull @_ZL21sk_trace_dump_visitorRKN15SkResourceCache3RecEPv, i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL21sk_trace_dump_visitorRKN15SkResourceCache3RecEPv(%"struct.SkResourceCache::Rec"* dereferenceable(24), i8*) #0 {
  %3 = alloca %class.SkString, align 8
  %4 = bitcast i8* %1 to %class.SkTraceMemoryDump*
  %5 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %6, align 8
  %7 = bitcast %"struct.SkResourceCache::Rec"* %0 to i8* (%"struct.SkResourceCache::Rec"*)***
  %8 = load i8* (%"struct.SkResourceCache::Rec"*)**, i8* (%"struct.SkResourceCache::Rec"*)*** %7, align 8
  %9 = getelementptr inbounds i8* (%"struct.SkResourceCache::Rec"*)*, i8* (%"struct.SkResourceCache::Rec"*)** %8, i64 6
  %10 = load i8* (%"struct.SkResourceCache::Rec"*)*, i8* (%"struct.SkResourceCache::Rec"*)** %9, align 8
  %11 = tail call i8* %10(%"struct.SkResourceCache::Rec"* %0) #13
  call void (%class.SkString*, i8*, ...) @_Z14SkStringPrintfPKcz(%class.SkString* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i8* %11, %"struct.SkResourceCache::Rec"* %0) #13
  %12 = bitcast %"struct.SkResourceCache::Rec"* %0 to %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)***
  %13 = load %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)**, %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)*** %12, align 8
  %14 = getelementptr inbounds %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)*, %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)** %13, i64 7
  %15 = load %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)*, %class.SkDiscardableMemory* (%"struct.SkResourceCache::Rec"*)** %14, align 8
  %16 = call %class.SkDiscardableMemory* %15(%"struct.SkResourceCache::Rec"* %0) #13
  %17 = icmp eq %class.SkDiscardableMemory* %16, null
  %18 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %6, align 8
  %19 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %18, i64 0, i32 2
  br i1 %17, label %35, label %20

20:                                               ; preds = %2
  %21 = bitcast i8* %1 to void (%class.SkTraceMemoryDump*, i8*, %class.SkDiscardableMemory*)***
  %22 = load void (%class.SkTraceMemoryDump*, i8*, %class.SkDiscardableMemory*)**, void (%class.SkTraceMemoryDump*, i8*, %class.SkDiscardableMemory*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkTraceMemoryDump*, i8*, %class.SkDiscardableMemory*)*, void (%class.SkTraceMemoryDump*, i8*, %class.SkDiscardableMemory*)** %22, i64 3
  %24 = load void (%class.SkTraceMemoryDump*, i8*, %class.SkDiscardableMemory*)*, void (%class.SkTraceMemoryDump*, i8*, %class.SkDiscardableMemory*)** %23, align 8
  call void %24(%class.SkTraceMemoryDump* %4, i8* %19, %class.SkDiscardableMemory* nonnull dereferenceable(8) %16) #13
  %25 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %6, align 8
  %26 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %25, i64 0, i32 2
  %27 = bitcast %"struct.SkResourceCache::Rec"* %0 to i64 (%"struct.SkResourceCache::Rec"*)***
  %28 = load i64 (%"struct.SkResourceCache::Rec"*)**, i64 (%"struct.SkResourceCache::Rec"*)*** %27, align 8
  %29 = getelementptr inbounds i64 (%"struct.SkResourceCache::Rec"*)*, i64 (%"struct.SkResourceCache::Rec"*)** %28, i64 3
  %30 = load i64 (%"struct.SkResourceCache::Rec"*)*, i64 (%"struct.SkResourceCache::Rec"*)** %29, align 8
  %31 = call i64 %30(%"struct.SkResourceCache::Rec"* %0) #13
  %32 = bitcast i8* %1 to void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)***
  %33 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*** %32, align 8
  %34 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)** %33, align 8
  call void %34(%class.SkTraceMemoryDump* %4, i8* %26, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i64 %31) #13
  br label %50

35:                                               ; preds = %2
  %36 = bitcast %"struct.SkResourceCache::Rec"* %0 to i64 (%"struct.SkResourceCache::Rec"*)***
  %37 = load i64 (%"struct.SkResourceCache::Rec"*)**, i64 (%"struct.SkResourceCache::Rec"*)*** %36, align 8
  %38 = getelementptr inbounds i64 (%"struct.SkResourceCache::Rec"*)*, i64 (%"struct.SkResourceCache::Rec"*)** %37, i64 3
  %39 = load i64 (%"struct.SkResourceCache::Rec"*)*, i64 (%"struct.SkResourceCache::Rec"*)** %38, align 8
  %40 = call i64 %39(%"struct.SkResourceCache::Rec"* %0) #13
  %41 = bitcast i8* %1 to void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)***
  %42 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*** %41, align 8
  %43 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)** %42, align 8
  call void %43(%class.SkTraceMemoryDump* %4, i8* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i64 %40) #13
  %44 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %6, align 8
  %45 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %44, i64 0, i32 2
  %46 = bitcast i8* %1 to void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)***
  %47 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %47, i64 2
  %49 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %48, align 8
  call void %49(%class.SkTraceMemoryDump* %4, i8* %45, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8* null) #13
  br label %50

50:                                               ; preds = %35, %20
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #4

declare %class.SkDiscardableMemory* @_ZN19SkDiscardableMemory6CreateEm(i64) #4

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #4

declare void @_Z14SkStringPrintfPKcz(%class.SkString* sret, i8*, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #10

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12SkTHashTableIPN15SkResourceCache3RecENS0_3KeyEN12_GLOBAL__N_110HashTraitsEE6resizeEi(%class.SkTHashTable*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* null, %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i64 0, i64* %8, align 8
  br label %64

12:                                               ; preds = %2
  %13 = sext i32 %1 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 16) #13
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call i8* @_Znam(i64 %17) #12
  %19 = bitcast i8* %18 to %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"*
  %20 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %19, i64 %13
  %21 = shl nsw i64 %13, 4
  %22 = add nsw i64 %21, -16
  %23 = lshr exact i64 %22, 4
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %12, %27
  %28 = phi %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* [ %32, %27 ], [ %19, %12 ]
  %29 = phi i64 [ %33, %27 ], [ %25, %12 ]
  %30 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %28, i64 0, i32 0
  store %"struct.SkResourceCache::Rec"* null, %"struct.SkResourceCache::Rec"** %30, align 8
  %31 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %28, i64 0, i32 1
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %28, i64 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !3

35:                                               ; preds = %27, %12
  %36 = phi %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* [ %19, %12 ], [ %32, %27 ]
  %37 = icmp ult i64 %22, 112
  br i1 %37, label %58, label %38

38:                                               ; preds = %35, %38
  %39 = phi %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* [ %56, %38 ], [ %36, %35 ]
  %40 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 0, i32 0
  store %"struct.SkResourceCache::Rec"* null, %"struct.SkResourceCache::Rec"** %40, align 8
  %41 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 0, i32 1
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 1, i32 0
  store %"struct.SkResourceCache::Rec"* null, %"struct.SkResourceCache::Rec"** %42, align 8
  %43 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 1, i32 1
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 2, i32 0
  store %"struct.SkResourceCache::Rec"* null, %"struct.SkResourceCache::Rec"** %44, align 8
  %45 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 2, i32 1
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 3, i32 0
  store %"struct.SkResourceCache::Rec"* null, %"struct.SkResourceCache::Rec"** %46, align 8
  %47 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 3, i32 1
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 4, i32 0
  store %"struct.SkResourceCache::Rec"* null, %"struct.SkResourceCache::Rec"** %48, align 8
  %49 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 4, i32 1
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 5, i32 0
  store %"struct.SkResourceCache::Rec"* null, %"struct.SkResourceCache::Rec"** %50, align 8
  %51 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 5, i32 1
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 6, i32 0
  store %"struct.SkResourceCache::Rec"* null, %"struct.SkResourceCache::Rec"** %52, align 8
  %53 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 6, i32 1
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 7, i32 0
  store %"struct.SkResourceCache::Rec"* null, %"struct.SkResourceCache::Rec"** %54, align 8
  %55 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 7, i32 1
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %39, i64 8
  %57 = icmp eq %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %56, %20
  br i1 %57, label %58, label %38

58:                                               ; preds = %38, %35
  %59 = ptrtoint i8* %18 to i64
  %60 = load %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"*, %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"** %7, align 8
  %61 = icmp eq %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %60, null
  store i64 %59, i64* %8, align 8
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = bitcast %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %60 to i8*
  tail call void @_ZdaPv(i8* %63) #12
  br label %64

64:                                               ; preds = %62, %58, %11
  %65 = icmp sgt i32 %4, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %64
  %67 = inttoptr i64 %9 to %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"*
  %68 = zext i32 %4 to i64
  br label %74

69:                                               ; preds = %81, %64
  %70 = icmp eq i64 %9, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %72) #12
  br label %73

73:                                               ; preds = %69, %71
  ret void

74:                                               ; preds = %81, %66
  %75 = phi i64 [ 0, %66 ], [ %82, %81 ]
  %76 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %67, i64 %75, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %67, i64 %75, i32 0
  tail call fastcc void @_ZN12SkTHashTableIPN15SkResourceCache3RecENS0_3KeyEN12_GLOBAL__N_110HashTraitsEE12uncheckedSetEOS2_(%class.SkTHashTable* %0, %"struct.SkResourceCache::Rec"** dereferenceable(8) %80)
  br label %81

81:                                               ; preds = %79, %74
  %82 = add nuw nsw i64 %75, 1
  %83 = icmp eq i64 %82, %68
  br i1 %83, label %69, label %74
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12SkTHashTableIPN15SkResourceCache3RecENS0_3KeyEN12_GLOBAL__N_110HashTraitsEE12uncheckedSetEOS2_(%class.SkTHashTable* nocapture, %"struct.SkResourceCache::Rec"** nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %1, align 8
  %4 = bitcast %"struct.SkResourceCache::Rec"* %3 to %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)***
  %5 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)**, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %5, i64 2
  %7 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %6, align 8
  %8 = tail call dereferenceable(24) %"struct.SkResourceCache::Key"* %7(%"struct.SkResourceCache::Rec"* %3) #13
  %9 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, i32 1, i32 %10
  %13 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %76

16:                                               ; preds = %2
  %17 = add nsw i32 %14, -1
  %18 = and i32 %12, %17
  %19 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %8, i64 0, i32 0
  br label %21

21:                                               ; preds = %16, %68
  %22 = phi i32 [ 0, %16 ], [ %74, %68 ]
  %23 = phi i32 [ %18, %16 ], [ %73, %68 ]
  %24 = sext i32 %23 to i64
  %25 = load %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"*, %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"** %19, align 8
  %26 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %25, i64 %24
  %27 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %25, i64 %24, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %21
  %31 = bitcast %"struct.SkResourceCache::Rec"** %1 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %26 to i64*
  store i64 %32, i64* %33, align 8
  store i32 %12, i32* %27, align 8
  %34 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %34, align 8
  br label %76

37:                                               ; preds = %21
  %38 = icmp eq i32 %12, %28
  br i1 %38, label %39, label %68

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot", %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %26, i64 0, i32 0
  %41 = load %"struct.SkResourceCache::Rec"*, %"struct.SkResourceCache::Rec"** %40, align 8
  %42 = bitcast %"struct.SkResourceCache::Rec"* %41 to %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)***
  %43 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)**, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*** %42, align 8
  %44 = getelementptr inbounds %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %43, i64 2
  %45 = load %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)*, %"struct.SkResourceCache::Key"* (%"struct.SkResourceCache::Rec"*)** %44, align 8
  %46 = tail call dereferenceable(24) %"struct.SkResourceCache::Key"* %45(%"struct.SkResourceCache::Rec"* %41) #13
  %47 = getelementptr inbounds %"struct.SkResourceCache::Key", %"struct.SkResourceCache::Key"* %46, i64 0, i32 0
  %48 = load i32, i32* %20, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %64

50:                                               ; preds = %39
  %51 = sext i32 %48 to i64
  %52 = load i32, i32* %47, align 4
  %53 = icmp eq i32 %48, %52
  br i1 %53, label %54, label %68

54:                                               ; preds = %50, %57
  %55 = phi i64 [ %63, %57 ], [ 1, %50 ]
  %56 = icmp eq i64 %55, %51
  br i1 %56, label %64, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds i32, i32* %20, i64 %55
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds i32, i32* %47, i64 %55
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %59, %61
  %63 = add nuw nsw i64 %55, 1
  br i1 %62, label %54, label %68

64:                                               ; preds = %39, %54
  %65 = bitcast %"struct.SkResourceCache::Rec"** %1 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"struct.SkTHashTable<SkResourceCache::Rec *, SkResourceCache::Key, (anonymous namespace)::HashTraits>::Slot"* %26 to i64*
  store i64 %66, i64* %67, align 8
  br label %76

68:                                               ; preds = %57, %50, %37
  %69 = add nsw i32 %23, -1
  %70 = icmp slt i32 %23, 1
  %71 = load i32, i32* %13, align 4
  %72 = select i1 %70, i32 %71, i32 0
  %73 = add nsw i32 %69, %72
  %74 = add nuw nsw i32 %22, 1
  %75 = icmp slt i32 %74, %71
  br i1 %75, label %21, label %76

76:                                               ; preds = %68, %2, %30, %64
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN15SkResourceCache20PurgeSharedIDMessageELb0EE4swapERS2_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SkTArray, align 8
  %4 = icmp eq %class.SkTArray* %0, %1
  br i1 %4, label %117, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %37, label %15

15:                                               ; preds = %10
  %16 = bitcast %class.SkTArray* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %class.SkTArray* %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i64, i64* %6, align 8
  %21 = and i64 %20, 4294967294
  %22 = load i64, i64* %11, align 8
  %23 = and i64 %22, 4294967294
  %24 = and i64 %20, -4294967295
  %25 = or i64 %23, %24
  store i64 %25, i64* %6, align 8
  %26 = load i64, i64* %11, align 8
  %27 = and i64 %26, -4294967295
  %28 = or i64 %27, %21
  store i64 %28, i64* %11, align 8
  %29 = load i64, i64* %6, align 8
  %30 = and i64 %29, -8589934592
  %31 = and i64 %26, -8589934592
  %32 = and i64 %29, 8589934591
  %33 = or i64 %32, %31
  store i64 %33, i64* %6, align 8
  %34 = load i64, i64* %11, align 8
  %35 = and i64 %34, 8589934591
  %36 = or i64 %35, %30
  store i64 %36, i64* %11, align 8
  br label %117

37:                                               ; preds = %5, %10
  %38 = bitcast %class.SkTArray* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #13
  %39 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 0
  %40 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 1
  %41 = bitcast %class.SkTArray* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  call void @_ZN8SkTArrayIN15SkResourceCache20PurgeSharedIDMessageELb0EEC2EOS2_(%class.SkTArray* nonnull %3, %class.SkTArray* dereferenceable(16) %1)
  %42 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, -4294967295
  store i64 %44, i64* %42, align 8
  %45 = load i64, i64* %6, align 8
  %46 = lshr i64 %45, 1
  %47 = trunc i64 %46 to i32
  %48 = and i32 %47, 2147483647
  call void @_ZN8SkTArrayIN15SkResourceCache20PurgeSharedIDMessageELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %1, i32 %48, i32 0) #13
  %49 = load i64, i64* %6, align 8
  %50 = and i64 %49, 4294967294
  %51 = load i64, i64* %42, align 8
  %52 = and i64 %51, -4294967295
  %53 = or i64 %52, %50
  store i64 %53, i64* %42, align 8
  %54 = bitcast %class.SkTArray* %1 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = load i64, i64* %6, align 8
  %57 = and i64 %56, 4294967294
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %74, label %59

59:                                               ; preds = %37
  %60 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ 0, %59 ], [ %69, %61 ]
  %63 = shl nuw nsw i64 %62, 3
  %64 = getelementptr inbounds i8, i8* %55, i64 %63
  %65 = load %"struct.SkResourceCache::PurgeSharedIDMessage"*, %"struct.SkResourceCache::PurgeSharedIDMessage"** %60, align 8
  %66 = getelementptr inbounds %"struct.SkResourceCache::PurgeSharedIDMessage", %"struct.SkResourceCache::PurgeSharedIDMessage"* %65, i64 %62, i32 0
  %67 = bitcast i8* %64 to i64*
  %68 = load i64, i64* %66, align 8
  store i64 %68, i64* %67, align 8
  %69 = add nuw nsw i64 %62, 1
  %70 = load i64, i64* %6, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = icmp ult i64 %69, %72
  br i1 %73, label %61, label %74

74:                                               ; preds = %61, %37
  %75 = phi i64 [ %56, %37 ], [ %70, %61 ]
  %76 = and i64 %75, -4294967295
  store i64 %76, i64* %6, align 8
  %77 = icmp eq %class.SkTArray* %3, %0
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = load i64, i64* %40, align 8
  br label %109

80:                                               ; preds = %74
  store i64 %76, i64* %6, align 8
  %81 = load i64, i64* %40, align 8
  %82 = lshr i64 %81, 1
  %83 = trunc i64 %82 to i32
  %84 = and i32 %83, 2147483647
  call void @_ZN8SkTArrayIN15SkResourceCache20PurgeSharedIDMessageELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %0, i32 %84, i32 0) #13
  %85 = load i64, i64* %40, align 8
  %86 = and i64 %85, 4294967294
  %87 = load i64, i64* %6, align 8
  %88 = and i64 %87, -4294967295
  %89 = or i64 %88, %86
  store i64 %89, i64* %6, align 8
  %90 = bitcast %class.SkTArray* %0 to i8**
  %91 = load i8*, i8** %90, align 8
  %92 = icmp eq i64 %86, 0
  br i1 %92, label %106, label %93

93:                                               ; preds = %80, %93
  %94 = phi i64 [ %101, %93 ], [ 0, %80 ]
  %95 = shl nuw nsw i64 %94, 3
  %96 = getelementptr inbounds i8, i8* %91, i64 %95
  %97 = load %"struct.SkResourceCache::PurgeSharedIDMessage"*, %"struct.SkResourceCache::PurgeSharedIDMessage"** %39, align 8
  %98 = getelementptr inbounds %"struct.SkResourceCache::PurgeSharedIDMessage", %"struct.SkResourceCache::PurgeSharedIDMessage"* %97, i64 %94, i32 0
  %99 = bitcast i8* %96 to i64*
  %100 = load i64, i64* %98, align 8
  store i64 %100, i64* %99, align 8
  %101 = add nuw nsw i64 %94, 1
  %102 = load i64, i64* %40, align 8
  %103 = lshr i64 %102, 1
  %104 = and i64 %103, 2147483647
  %105 = icmp ult i64 %101, %104
  br i1 %105, label %93, label %106

106:                                              ; preds = %93, %80
  %107 = phi i64 [ %85, %80 ], [ %102, %93 ]
  %108 = and i64 %107, -4294967295
  store i64 %108, i64* %40, align 8
  br label %109

109:                                              ; preds = %78, %106
  %110 = phi i64 [ %79, %78 ], [ %108, %106 ]
  %111 = and i64 %110, 1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = bitcast %class.SkTArray* %3 to i8**
  %115 = load i8*, i8** %114, align 8
  call void @_Z7sk_freePv(i8* %115) #13
  br label %116

116:                                              ; preds = %109, %113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #13
  br label %117

117:                                              ; preds = %2, %116, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN15SkResourceCache20PurgeSharedIDMessageELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %75

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %75, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #13
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %58, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"struct.SkResourceCache::PurgeSharedIDMessage"*, %"struct.SkResourceCache::PurgeSharedIDMessage"** %49, align 8
  %55 = getelementptr inbounds %"struct.SkResourceCache::PurgeSharedIDMessage", %"struct.SkResourceCache::PurgeSharedIDMessage"* %54, i64 %51, i32 0
  %56 = bitcast i8* %53 to i64*
  %57 = load i64, i64* %55, align 8
  store i64 %57, i64* %56, align 8
  %58 = add nuw nsw i64 %51, 1
  %59 = load i64, i64* %4, align 8
  %60 = lshr i64 %59, 1
  %61 = and i64 %60, 2147483647
  %62 = icmp ult i64 %58, %61
  br i1 %62, label %50, label %63

63:                                               ; preds = %50, %35
  %64 = phi i64 [ %45, %35 ], [ %59, %50 ]
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %class.SkTArray* %0 to i8**
  br i1 %66, label %71, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %67, align 8
  tail call void @_Z7sk_freePv(i8* %69) #13
  %70 = load i64, i64* %4, align 8
  br label %71

71:                                               ; preds = %63, %68
  %72 = phi i64 [ %70, %68 ], [ %64, %63 ]
  store i8* %44, i8** %67, align 8
  %73 = and i64 %72, -4294967298
  %74 = or i64 %73, 1
  store i64 %74, i64* %4, align 8
  br label %75

75:                                               ; preds = %71, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN15SkResourceCache20PurgeSharedIDMessageELb0EEC2EOS2_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  %9 = bitcast %class.SkTArray* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.SkTArray* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %3, align 8
  %13 = and i64 %12, 4294967294
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967295
  %17 = or i64 %16, %13
  store i64 %17, i64* %14, align 8
  %18 = load i64, i64* %3, align 8
  %19 = and i64 %18, -8589934592
  %20 = and i64 %17, 8589934590
  %21 = or i64 %19, %20
  %22 = or i64 %21, 1
  store i64 %22, i64* %14, align 8
  %23 = load i64, i64* %3, align 8
  %24 = and i64 %23, 4294967296
  %25 = and i64 %22, -4294967297
  %26 = or i64 %25, %24
  store i64 %26, i64* %14, align 8
  store %"struct.SkResourceCache::PurgeSharedIDMessage"* null, %"struct.SkResourceCache::PurgeSharedIDMessage"** %8, align 8
  br label %76

27:                                               ; preds = %2
  %28 = lshr i64 %4, 1
  %29 = trunc i64 %28 to i32
  %30 = and i32 %29, 2147483647
  %31 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %4, 4294967294
  %34 = and i64 %32, -4294967295
  %35 = or i64 %34, %33
  store i64 %35, i64* %31, align 8
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %27
  %38 = and i64 %35, 8589934591
  store i64 %38, i64* %31, align 8
  %39 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  store %"struct.SkResourceCache::PurgeSharedIDMessage"* null, %"struct.SkResourceCache::PurgeSharedIDMessage"** %39, align 8
  br label %50

40:                                               ; preds = %27
  %41 = icmp ugt i32 %30, 8
  %42 = select i1 %41, i32 %30, i32 8
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 33
  %45 = and i64 %35, 8589934591
  %46 = or i64 %45, %44
  store i64 %46, i64* %31, align 8
  %47 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #13
  %48 = bitcast %class.SkTArray* %0 to i8**
  store i8* %47, i8** %48, align 8
  %49 = load i64, i64* %31, align 8
  br label %50

50:                                               ; preds = %37, %40
  %51 = phi i8* [ %47, %40 ], [ null, %37 ]
  %52 = phi i64 [ %49, %40 ], [ %38, %37 ]
  %53 = and i64 %52, -4294967298
  %54 = or i64 %53, 1
  store i64 %54, i64* %31, align 8
  %55 = load i64, i64* %3, align 8
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %73, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %68, %60 ]
  %62 = shl nuw nsw i64 %61, 3
  %63 = getelementptr inbounds i8, i8* %51, i64 %62
  %64 = load %"struct.SkResourceCache::PurgeSharedIDMessage"*, %"struct.SkResourceCache::PurgeSharedIDMessage"** %59, align 8
  %65 = getelementptr inbounds %"struct.SkResourceCache::PurgeSharedIDMessage", %"struct.SkResourceCache::PurgeSharedIDMessage"* %64, i64 %61, i32 0
  %66 = bitcast i8* %63 to i64*
  %67 = load i64, i64* %65, align 8
  store i64 %67, i64* %66, align 8
  %68 = add nuw nsw i64 %61, 1
  %69 = load i64, i64* %3, align 8
  %70 = lshr i64 %69, 1
  %71 = and i64 %70, 2147483647
  %72 = icmp ult i64 %68, %71
  br i1 %72, label %60, label %73

73:                                               ; preds = %60, %50
  %74 = phi i64 [ %55, %50 ], [ %69, %60 ]
  %75 = and i64 %74, -4294967295
  br label %76

76:                                               ; preds = %73, %7
  %77 = phi i64 [ %75, %73 ], [ 1, %7 ]
  store i64 %77, i64* %3, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
