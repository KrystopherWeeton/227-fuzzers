; ModuleID = '../../third_party/fontconfig/src/src/fcdir.c'
source_filename = "../../third_party/fontconfig/src/src/fcdir.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._FcFontSet = type { i32, i32, %struct._FcPattern** }
%struct._FcPattern = type { i32, i32, i64, %struct._FcRef }
%struct._FcRef = type { i32 }
%struct._FcStrSet = type { %struct._FcRef, i32, i32, i8**, i32 }
%struct._FcGlobalCache = type opaque
%struct._FcBlanks = type opaque
%struct._FcCache = type { i32, i32, i64, i64, i64, i32, i64, i32, i64 }
%struct._FcConfig = type { %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcStrSet*, [3 x %struct._FcPtrList*], i32, %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcFontSet*, %struct._FcFontSet*, [2 x %struct._FcFontSet*], i64, i32, %struct._FcRef, %struct._FcExprPage*, i8*, %struct._FcStrSet*, %struct._FcPtrList* }
%struct._FcExprPage = type { %struct._FcExprPage*, %struct._FcExpr*, [340 x %struct._FcExpr], [0 x %struct._FcExpr] }
%struct._FcExpr = type { i32, %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { %struct._FcExpr*, %struct._FcExpr* }
%struct._FcPtrList = type opaque
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }

@FcDebugVal = external hidden local_unnamed_addr global i32, align 4
@.str.1 = private unnamed_addr constant [18 x i8] c"\09Scanning dir %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"cache scan dir %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"\09Scanning file %s...\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@str = private unnamed_addr constant [20 x i8] c"Final font pattern:\00", align 1
@str.6 = private unnamed_addr constant [5 x i8] c"done\00", align 1

@FcFileIsDir = hidden alias i32 (i8*), i32 (i8*)* @IA__FcFileIsDir
@FcFileScan = hidden alias i32 (%struct._FcFontSet*, %struct._FcStrSet*, %struct._FcGlobalCache*, %struct._FcBlanks*, i8*, i32), i32 (%struct._FcFontSet*, %struct._FcStrSet*, %struct._FcGlobalCache*, %struct._FcBlanks*, i8*, i32)* @IA__FcFileScan
@FcDirScan = hidden alias i32 (%struct._FcFontSet*, %struct._FcStrSet*, %struct._FcGlobalCache*, %struct._FcBlanks*, i8*, i32), i32 (%struct._FcFontSet*, %struct._FcStrSet*, %struct._FcGlobalCache*, %struct._FcBlanks*, i8*, i32)* @IA__FcDirScan
@FcDirSave = hidden alias i32 (%struct._FcFontSet*, %struct._FcStrSet*, i8*), i32 (%struct._FcFontSet*, %struct._FcStrSet*, i8*)* @IA__FcDirSave
@FcDirCacheRescan = hidden alias %struct._FcCache* (i8*, %struct._FcConfig*), %struct._FcCache* (i8*, %struct._FcConfig*)* @IA__FcDirCacheRescan
@FcDirCacheRead = hidden alias %struct._FcCache* (i8*, i32, %struct._FcConfig*), %struct._FcCache* (i8*, i32, %struct._FcConfig*)* @IA__FcDirCacheRead

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcFileIsDir(i8*) #0 {
  %2 = alloca %struct.stat, align 8
  %3 = bitcast %struct.stat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %3) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 144, i1 false)
  %4 = call i32 @FcStat(i8* %0, %struct.stat* nonnull %2) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %2, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 61440
  %10 = icmp eq i32 %9, 16384
  %11 = zext i1 %10 to i32
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i32 [ %11, %6 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %3) #12
  ret i32 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare hidden i32 @FcStat(i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcFileIsLink(i8*) local_unnamed_addr #0 {
  %2 = alloca %struct.stat, align 8
  %3 = bitcast %struct.stat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %3) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 144, i1 false)
  %4 = bitcast %struct.stat* %2 to %struct.stat64*
  %5 = call i32 @__lxstat64(i32 1, i8* %0, %struct.stat64* nonnull %4) #12
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.stat, %struct.stat* %2, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 61440
  %11 = icmp eq i32 %10, 40960
  %12 = zext i1 %11 to i32
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i32 [ %12, %7 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %3) #12
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcFileIsFile(i8*) local_unnamed_addr #0 {
  %2 = alloca %struct.stat, align 8
  %3 = bitcast %struct.stat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %3) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 144, i1 false)
  %4 = call i32 @FcStat(i8* %0, %struct.stat* nonnull %2) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %2, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 61440
  %10 = icmp eq i32 %9, 32768
  %11 = zext i1 %10 to i32
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i32 [ %11, %6 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %3) #12
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcFileScanConfig(%struct._FcFontSet*, %struct._FcStrSet*, i8*, %struct._FcConfig*) local_unnamed_addr #0 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.stat, align 8
  %7 = bitcast %struct.stat* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 144, i1 false) #12
  %8 = call i32 @FcStat(i8* %2, %struct.stat* nonnull %6) #12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %7) #12
  br label %41

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.stat, %struct.stat* %6, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 61440
  %15 = icmp eq i32 %14, 16384
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %7) #12
  br i1 %15, label %16, label %41

16:                                               ; preds = %11
  %17 = call i8* @IA__FcConfigGetSysRoot(%struct._FcConfig* %3) #12
  %18 = icmp eq i8* %17, null
  br i1 %18, label %38, label %19

19:                                               ; preds = %16
  %20 = call i64 @strlen(i8* nonnull %17) #13
  %21 = call i32 @strncmp(i8* %2, i8* nonnull %17, i64 %20) #13
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %38

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %2, i64 %20
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 47
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = add i64 %20, -1
  br label %35

29:                                               ; preds = %23
  %30 = add i64 %20, 1
  %31 = getelementptr inbounds i8, i8* %2, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 47
  %34 = select i1 %33, i64 %30, i64 %20
  br label %35

35:                                               ; preds = %29, %27
  %36 = phi i64 [ %28, %27 ], [ %34, %29 ]
  %37 = getelementptr inbounds i8, i8* %2, i64 %36
  br label %38

38:                                               ; preds = %16, %19, %35
  %39 = phi i8* [ %37, %35 ], [ %2, %19 ], [ %2, %16 ]
  %40 = call i32 @IA__FcStrSetAdd(%struct._FcStrSet* %1, i8* %39) #12
  br label %122

41:                                               ; preds = %11, %10
  %42 = icmp eq %struct._FcFontSet* %0, null
  br i1 %42, label %122, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %0, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = call i8* @IA__FcConfigGetSysRoot(%struct._FcConfig* %3) #12
  %47 = load i32, i32* @FcDebugVal, align 4
  %48 = trunc i32 %47 to i8
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %43
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i8* %2) #12
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %53 = call i32 @fflush(%struct._IO_FILE* %52) #12
  br label %54

54:                                               ; preds = %50, %43
  %55 = call i32 @IA__FcFreeTypeQueryAll(i8* %2, i32 -1, %struct._FcBlanks* null, i32* null, %struct._FcFontSet* nonnull %0) #12
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %122, label %57

57:                                               ; preds = %54
  %58 = load i32, i32* @FcDebugVal, align 4
  %59 = trunc i32 %58 to i8
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  %62 = call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.6, i64 0, i64 0)) #12
  br label %63

63:                                               ; preds = %61, %57
  %64 = load i32, i32* %44, align 8
  %65 = icmp slt i32 %45, %64
  br i1 %65, label %66, label %122

66:                                               ; preds = %63
  %67 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %0, i64 0, i32 2
  %68 = icmp eq i8* %46, null
  %69 = bitcast i8** %5 to i8*
  %70 = icmp eq %struct._FcConfig* %3, null
  %71 = sext i32 %45 to i64
  br label %72

72:                                               ; preds = %117, %66
  %73 = phi i64 [ %71, %66 ], [ %118, %117 ]
  %74 = phi i32 [ 1, %66 ], [ %111, %117 ]
  %75 = load %struct._FcPattern**, %struct._FcPattern*** %67, align 8
  %76 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %75, i64 %73
  %77 = load %struct._FcPattern*, %struct._FcPattern** %76, align 8
  br i1 %68, label %105, label %78

78:                                               ; preds = %72
  %79 = call i64 @strlen(i8* nonnull %46) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #12
  store i8* null, i8** %5, align 8
  %80 = call i32 @FcPatternObjectGetString(%struct._FcPattern* %77, i32 21, i32 0, i8** nonnull %5) #12
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %104

82:                                               ; preds = %78
  %83 = load i8*, i8** %5, align 8
  %84 = call i32 @strncmp(i8* %83, i8* nonnull %46, i64 %79) #13
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %104

86:                                               ; preds = %82
  %87 = call noalias i8* @strdup(i8* %83) #12
  %88 = call i32 @FcPatternObjectDel(%struct._FcPattern* %77, i32 21) #12
  %89 = getelementptr inbounds i8, i8* %87, i64 %79
  %90 = load i8, i8* %89, align 1
  %91 = icmp eq i8 %90, 47
  br i1 %91, label %94, label %92

92:                                               ; preds = %86
  %93 = add i64 %79, -1
  br label %100

94:                                               ; preds = %86
  %95 = add i64 %79, 1
  %96 = getelementptr inbounds i8, i8* %87, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 47
  %99 = select i1 %98, i64 %95, i64 %79
  br label %100

100:                                              ; preds = %94, %92
  %101 = phi i64 [ %93, %92 ], [ %99, %94 ]
  %102 = getelementptr inbounds i8, i8* %87, i64 %101
  %103 = call i32 @FcPatternObjectAddString(%struct._FcPattern* %77, i32 21, i8* %102) #12
  call void @IA__FcStrFree(i8* %87) #12
  br label %104

104:                                              ; preds = %100, %82, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #12
  br label %105

105:                                              ; preds = %104, %72
  br i1 %70, label %110, label %106

106:                                              ; preds = %105
  %107 = call i32 @IA__FcConfigSubstitute(%struct._FcConfig* nonnull %3, %struct._FcPattern* %77, i32 2) #12
  %108 = icmp eq i32 %107, 0
  %109 = select i1 %108, i32 0, i32 %74
  br label %110

110:                                              ; preds = %106, %105
  %111 = phi i32 [ %74, %105 ], [ %109, %106 ]
  %112 = load i32, i32* @FcDebugVal, align 4
  %113 = and i32 %112, 256
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %110
  %116 = call i32 @puts(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str, i64 0, i64 0)) #12
  call void @IA__FcPatternPrint(%struct._FcPattern* %77) #12
  br label %117

117:                                              ; preds = %115, %110
  %118 = add nsw i64 %73, 1
  %119 = load i32, i32* %44, align 8
  %120 = sext i32 %119 to i64
  %121 = icmp slt i64 %118, %120
  br i1 %121, label %72, label %122

122:                                              ; preds = %117, %63, %54, %41, %38
  %123 = phi i32 [ %40, %38 ], [ 1, %41 ], [ 0, %54 ], [ 1, %63 ], [ %111, %117 ]
  ret i32 %123
}

declare hidden i8* @IA__FcConfigGetSysRoot(%struct._FcConfig*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

declare hidden i32 @IA__FcStrSetAdd(%struct._FcStrSet*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcFileScan(%struct._FcFontSet*, %struct._FcStrSet*, %struct._FcGlobalCache* nocapture readnone, %struct._FcBlanks* nocapture readnone, i8*, i32) #0 {
  %7 = tail call %struct._FcConfig* @IA__FcConfigReference(%struct._FcConfig* null) #12
  %8 = icmp eq %struct._FcConfig* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @FcFileScanConfig(%struct._FcFontSet* %0, %struct._FcStrSet* %1, i8* %4, %struct._FcConfig* nonnull %7)
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %7) #12
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %6 ]
  ret i32 %12
}

declare hidden %struct._FcConfig* @IA__FcConfigReference(%struct._FcConfig*) local_unnamed_addr #2

declare hidden void @IA__FcConfigDestroy(%struct._FcConfig*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcDirScanConfig(%struct._FcFontSet*, %struct._FcStrSet*, i8*, i32, %struct._FcConfig*) local_unnamed_addr #0 {
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %83, label %7

7:                                                ; preds = %5
  %8 = icmp ne %struct._FcFontSet* %0, null
  %9 = icmp ne %struct._FcStrSet* %1, null
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %83

11:                                               ; preds = %7
  %12 = tail call i64 @strlen(i8* %2) #13
  %13 = add i64 %12, 4098
  %14 = tail call noalias i8* @malloc(i64 %13) #12
  %15 = icmp eq i8* %14, null
  br i1 %15, label %83, label %16

16:                                               ; preds = %11
  %17 = tail call i8* @strcpy(i8* nonnull %14, i8* %2) #12
  %18 = tail call i64 @strlen(i8* nonnull %14)
  %19 = getelementptr i8, i8* %14, i64 %18
  %20 = bitcast i8* %19 to i16*
  store i16 47, i16* %20, align 1
  %21 = tail call i64 @strlen(i8* nonnull %14) #13
  %22 = getelementptr inbounds i8, i8* %14, i64 %21
  %23 = load i32, i32* @FcDebugVal, align 4
  %24 = trunc i32 %23 to i8
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %16
  %27 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* %2)
  br label %28

28:                                               ; preds = %26, %16
  %29 = tail call %struct.__dirstream* @opendir(i8* %2)
  %30 = icmp eq %struct.__dirstream* %29, null
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = tail call i32* @__errno_location() #14
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i32
  br label %81

36:                                               ; preds = %28
  %37 = tail call %struct._FcStrSet* @FcStrSetCreateEx(i32 3) #12
  %38 = icmp eq %struct._FcStrSet* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = tail call %struct.dirent* @readdir64(%struct.__dirstream* nonnull %29) #12
  %41 = icmp eq %struct.dirent* %40, null
  br i1 %41, label %59, label %44

42:                                               ; preds = %36
  %43 = tail call i32 @closedir(%struct.__dirstream* nonnull %29)
  br label %81

44:                                               ; preds = %39, %56
  %45 = phi %struct.dirent* [ %57, %56 ], [ %40, %39 ]
  %46 = getelementptr inbounds %struct.dirent, %struct.dirent* %45, i64 0, i32 4, i64 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 46
  br i1 %48, label %56, label %49

49:                                               ; preds = %44
  %50 = tail call i64 @strlen(i8* %46) #13
  %51 = icmp ult i64 %50, 4096
  br i1 %51, label %52, label %56

52:                                               ; preds = %49
  %53 = tail call i8* @strcpy(i8* %22, i8* %46) #12
  %54 = tail call i32 @IA__FcStrSetAdd(%struct._FcStrSet* nonnull %37, i8* nonnull %14) #12
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %78, label %56

56:                                               ; preds = %52, %44, %49
  %57 = tail call %struct.dirent* @readdir64(%struct.__dirstream* nonnull %29) #12
  %58 = icmp eq %struct.dirent* %57, null
  br i1 %58, label %59, label %44

59:                                               ; preds = %56, %39
  %60 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %37, i64 0, i32 3
  %61 = bitcast i8*** %60 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %37, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = sext i32 %64 to i64
  tail call void @qsort(i8* %62, i64 %65, i64 8, i32 (i8*, i8*)* nonnull @cmpstringp) #12
  %66 = load i32, i32* %63, align 4
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %78

68:                                               ; preds = %59, %68
  %69 = phi i64 [ %74, %68 ], [ 0, %59 ]
  %70 = load i8**, i8*** %60, align 8
  %71 = getelementptr inbounds i8*, i8** %70, i64 %69
  %72 = load i8*, i8** %71, align 8
  %73 = tail call i32 @FcFileScanConfig(%struct._FcFontSet* %0, %struct._FcStrSet* %1, i8* %72, %struct._FcConfig* %4)
  %74 = add nuw nsw i64 %69, 1
  %75 = load i32, i32* %63, align 4
  %76 = sext i32 %75 to i64
  %77 = icmp slt i64 %74, %76
  br i1 %77, label %68, label %78

78:                                               ; preds = %52, %68, %59
  %79 = phi i32 [ 1, %59 ], [ 1, %68 ], [ 0, %52 ]
  tail call void @IA__FcStrSetDestroy(%struct._FcStrSet* nonnull %37) #12
  %80 = tail call i32 @closedir(%struct.__dirstream* nonnull %29)
  br label %81

81:                                               ; preds = %78, %42, %31
  %82 = phi i32 [ %35, %31 ], [ %79, %78 ], [ 0, %42 ]
  tail call void @free(i8* nonnull %14) #12
  br label %83

83:                                               ; preds = %11, %81, %7, %5
  %84 = phi i32 [ 0, %5 ], [ 1, %7 ], [ %82, %81 ], [ 0, %11 ]
  ret i32 %84
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias %struct.__dirstream* @opendir(i8* nocapture readonly) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #6

declare hidden %struct._FcStrSet* @FcStrSetCreateEx(i32) local_unnamed_addr #2

declare %struct.dirent* @readdir64(%struct.__dirstream*) local_unnamed_addr #2

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @cmpstringp(i8* nocapture readonly, i8* nocapture readonly) #8 {
  %3 = bitcast i8* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @strcmp(i8* %4, i8* %6) #13
  ret i32 %7
}

declare hidden void @IA__FcStrSetDestroy(%struct._FcStrSet*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @closedir(%struct.__dirstream* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcDirScan(%struct._FcFontSet*, %struct._FcStrSet*, %struct._FcGlobalCache* readnone, %struct._FcBlanks* nocapture readnone, i8*, i32) #0 {
  %7 = icmp eq %struct._FcGlobalCache* %2, null
  %8 = icmp ne i32 %5, 0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  %11 = tail call %struct._FcConfig* @IA__FcConfigReference(%struct._FcConfig* null) #12
  %12 = icmp eq %struct._FcConfig* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  %14 = tail call i32 @FcDirScanConfig(%struct._FcFontSet* %0, %struct._FcStrSet* %1, i8* %4, i32 %5, %struct._FcConfig* nonnull %11)
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %11) #12
  br label %15

15:                                               ; preds = %10, %6, %13
  %16 = phi i32 [ %14, %13 ], [ 0, %6 ], [ 0, %10 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcCache* @FcDirCacheScan(i8*, %struct._FcConfig*) local_unnamed_addr #0 {
  %3 = alloca %struct.stat, align 8
  %4 = bitcast %struct.stat* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %4) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 144, i1 false)
  %5 = tail call i8* @IA__FcConfigGetSysRoot(%struct._FcConfig* %1) #12
  %6 = icmp eq i8* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call i8* (i8*, ...) @IA__FcStrBuildFilename(i8* nonnull %5, i8* %0, i8* null) #12
  br label %11

9:                                                ; preds = %2
  %10 = tail call noalias i8* @strdup(i8* %0) #12
  br label %11

11:                                               ; preds = %9, %7
  %12 = phi i8* [ %8, %7 ], [ %10, %9 ]
  %13 = load i32, i32* @FcDebugVal, align 4
  %14 = and i32 %13, 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i8* %12)
  br label %18

18:                                               ; preds = %11, %16
  %19 = call i32 @FcStatChecksum(i8* %12, %struct.stat* nonnull %3) #12
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %40, label %21

21:                                               ; preds = %18
  %22 = call %struct._FcFontSet* @IA__FcFontSetCreate() #12
  %23 = icmp eq %struct._FcFontSet* %22, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %21
  %25 = call %struct._FcStrSet* @FcStrSetCreateEx(i32 2) #12
  %26 = icmp eq %struct._FcStrSet* %25, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %24
  %28 = call i32 @FcDirCacheLock(i8* %0, %struct._FcConfig* %1) #12
  %29 = call i32 @FcDirScanConfig(%struct._FcFontSet* nonnull %22, %struct._FcStrSet* nonnull %25, i8* %12, i32 1, %struct._FcConfig* %1)
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = call %struct._FcCache* @FcDirCacheBuild(%struct._FcFontSet* nonnull %22, i8* %0, %struct.stat* nonnull %3, %struct._FcStrSet* nonnull %25) #12
  %33 = icmp eq %struct._FcCache* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = call i32 @FcDirCacheWrite(%struct._FcCache* nonnull %32, %struct._FcConfig* %1) #12
  br label %36

36:                                               ; preds = %31, %27, %34
  %37 = phi %struct._FcCache* [ %32, %34 ], [ null, %31 ], [ null, %27 ]
  call void @FcDirCacheUnlock(i32 %28) #12
  call void @IA__FcStrSetDestroy(%struct._FcStrSet* nonnull %25) #12
  br label %38

38:                                               ; preds = %24, %36
  %39 = phi %struct._FcCache* [ %37, %36 ], [ null, %24 ]
  call void @IA__FcFontSetDestroy(%struct._FcFontSet* nonnull %22) #12
  br label %40

40:                                               ; preds = %21, %18, %38
  %41 = phi %struct._FcCache* [ null, %18 ], [ %39, %38 ], [ null, %21 ]
  call void @IA__FcStrFree(i8* %12) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %4) #12
  ret %struct._FcCache* %41
}

declare hidden i8* @IA__FcStrBuildFilename(i8*, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #5

declare hidden i32 @FcStatChecksum(i8*, %struct.stat*) local_unnamed_addr #2

declare hidden %struct._FcFontSet* @IA__FcFontSetCreate() local_unnamed_addr #2

declare hidden i32 @FcDirCacheLock(i8*, %struct._FcConfig*) local_unnamed_addr #2

declare hidden %struct._FcCache* @FcDirCacheBuild(%struct._FcFontSet*, i8*, %struct.stat*, %struct._FcStrSet*) local_unnamed_addr #2

declare hidden i32 @FcDirCacheWrite(%struct._FcCache*, %struct._FcConfig*) local_unnamed_addr #2

declare hidden void @FcDirCacheUnlock(i32) local_unnamed_addr #2

declare hidden void @IA__FcFontSetDestroy(%struct._FcFontSet*) local_unnamed_addr #2

declare hidden void @IA__FcStrFree(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcCache* @IA__FcDirCacheRescan(i8*, %struct._FcConfig*) #0 {
  %3 = alloca %struct.stat, align 8
  %4 = bitcast %struct.stat* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %4) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 144, i1 false)
  %5 = tail call %struct._FcConfig* @IA__FcConfigReference(%struct._FcConfig* %1) #12
  %6 = icmp eq %struct._FcConfig* %5, null
  br i1 %6, label %41, label %7

7:                                                ; preds = %2
  %8 = tail call i8* @IA__FcConfigGetSysRoot(%struct._FcConfig* nonnull %5) #12
  %9 = tail call %struct._FcCache* @IA__FcDirCacheLoad(i8* %0, %struct._FcConfig* nonnull %5, i8** null) #12
  %10 = icmp eq %struct._FcCache* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %7
  %12 = icmp eq i8* %8, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = tail call i8* (i8*, ...) @IA__FcStrBuildFilename(i8* nonnull %8, i8* %0, i8* null) #12
  br label %17

15:                                               ; preds = %11
  %16 = tail call noalias i8* @strdup(i8* %0) #12
  br label %17

17:                                               ; preds = %15, %13
  %18 = phi i8* [ %14, %13 ], [ %16, %15 ]
  %19 = call i32 @FcStatChecksum(i8* %18, %struct.stat* nonnull %3) #12
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %17
  %22 = call %struct._FcStrSet* @FcStrSetCreateEx(i32 2) #12
  %23 = icmp eq %struct._FcStrSet* %22, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %21
  %25 = call i32 @FcDirCacheLock(i8* %0, %struct._FcConfig* nonnull %5) #12
  %26 = call i32 @FcDirScanConfig(%struct._FcFontSet* null, %struct._FcStrSet* nonnull %22, i8* %18, i32 1, %struct._FcConfig* nonnull %5)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = call %struct._FcCache* @FcDirCacheRebuild(%struct._FcCache* nonnull %9, %struct.stat* nonnull %3, %struct._FcStrSet* nonnull %22) #12
  %30 = icmp eq %struct._FcCache* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  call void @IA__FcDirCacheUnload(%struct._FcCache* nonnull %9) #12
  %32 = call i32 @FcDirCacheWrite(%struct._FcCache* nonnull %29, %struct._FcConfig* nonnull %5) #12
  br label %33

33:                                               ; preds = %28, %24, %31
  %34 = phi %struct._FcCache* [ %29, %31 ], [ null, %28 ], [ null, %24 ]
  call void @FcDirCacheUnlock(i32 %25) #12
  call void @IA__FcStrSetDestroy(%struct._FcStrSet* nonnull %22) #12
  br label %35

35:                                               ; preds = %21, %17, %33
  %36 = phi %struct._FcCache* [ null, %17 ], [ %34, %33 ], [ null, %21 ]
  %37 = icmp eq i8* %18, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  call void @IA__FcStrFree(i8* nonnull %18) #12
  br label %39

39:                                               ; preds = %7, %35, %38
  %40 = phi %struct._FcCache* [ %36, %35 ], [ %36, %38 ], [ null, %7 ]
  call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %5) #12
  br label %41

41:                                               ; preds = %2, %39
  %42 = phi %struct._FcCache* [ %40, %39 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %4) #12
  ret %struct._FcCache* %42
}

declare hidden %struct._FcCache* @IA__FcDirCacheLoad(i8*, %struct._FcConfig*, i8**) local_unnamed_addr #2

declare hidden %struct._FcCache* @FcDirCacheRebuild(%struct._FcCache*, %struct.stat*, %struct._FcStrSet*) local_unnamed_addr #2

declare hidden void @IA__FcDirCacheUnload(%struct._FcCache*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcCache* @IA__FcDirCacheRead(i8*, i32, %struct._FcConfig*) #0 {
  %4 = tail call %struct._FcConfig* @IA__FcConfigReference(%struct._FcConfig* %2) #12
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = tail call %struct._FcCache* @IA__FcDirCacheLoad(i8* %0, %struct._FcConfig* %4, i8** null) #12
  %8 = icmp eq %struct._FcCache* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %3, %6
  %10 = tail call %struct._FcCache* @FcDirCacheScan(i8* %0, %struct._FcConfig* %4)
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi %struct._FcCache* [ %7, %6 ], [ %10, %9 ]
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* %4) #12
  ret %struct._FcCache* %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @IA__FcDirSave(%struct._FcFontSet* nocapture readnone, %struct._FcStrSet* nocapture readnone, i8* nocapture readnone) #10 {
  ret i32 0
}

; Function Attrs: nounwind
declare i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) local_unnamed_addr #5

declare hidden i32 @IA__FcFreeTypeQueryAll(i8*, i32, %struct._FcBlanks*, i32*, %struct._FcFontSet*) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectGetString(%struct._FcPattern*, i32, i32, i8**) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectDel(%struct._FcPattern*, i32) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectAddString(%struct._FcPattern*, i32, i8*) local_unnamed_addr #2

declare hidden i32 @IA__FcConfigSubstitute(%struct._FcConfig*, %struct._FcPattern*, i32) local_unnamed_addr #2

declare hidden void @IA__FcPatternPrint(%struct._FcPattern*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
