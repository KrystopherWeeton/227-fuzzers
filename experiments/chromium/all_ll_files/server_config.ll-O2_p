; ModuleID = '../../third_party/openscreen/src/osp/public/server_config.cc'
source_filename = "../../third_party/openscreen/src/osp/public/server_config.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.openscreen::osp::ServerConfig" = type { %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.openscreen::IPEndpoint"*, %"struct.openscreen::IPEndpoint"*, %"class.std::__1::__compressed_pair.3" }
%"struct.openscreen::IPEndpoint" = type <{ %"class.openscreen::IPAddress", i16, [2 x i8] }>
%"class.openscreen::IPAddress" = type { i32, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.openscreen::IPEndpoint"* }

@_ZN10openscreen3osp12ServerConfigC1Ev = hidden unnamed_addr alias void (%"struct.openscreen::osp::ServerConfig"*), void (%"struct.openscreen::osp::ServerConfig"*)* @_ZN10openscreen3osp12ServerConfigC2Ev
@_ZN10openscreen3osp12ServerConfigD1Ev = hidden unnamed_addr alias void (%"struct.openscreen::osp::ServerConfig"*), void (%"struct.openscreen::osp::ServerConfig"*)* @_ZN10openscreen3osp12ServerConfigD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen3osp12ServerConfigC2Ev(%"struct.openscreen::osp::ServerConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.openscreen::osp::ServerConfig"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen3osp12ServerConfigD2Ev(%"struct.openscreen::osp::ServerConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.openscreen::osp::ServerConfig", %"struct.openscreen::osp::ServerConfig"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"struct.openscreen::IPEndpoint"*, %"struct.openscreen::IPEndpoint"** %2, align 8
  %4 = icmp eq %"struct.openscreen::IPEndpoint"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.openscreen::IPEndpoint"* %3 to i64
  %7 = getelementptr inbounds %"struct.openscreen::osp::ServerConfig", %"struct.openscreen::osp::ServerConfig"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.openscreen::IPEndpoint"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.openscreen::IPEndpoint"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #3
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.openscreen::osp::ServerConfig", %"struct.openscreen::osp::ServerConfig"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i64* %12 to i64
  %16 = getelementptr inbounds %"struct.openscreen::osp::ServerConfig", %"struct.openscreen::osp::ServerConfig"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i64* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #3
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
