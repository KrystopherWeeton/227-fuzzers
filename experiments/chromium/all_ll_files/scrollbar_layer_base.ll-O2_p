; ModuleID = '../../cc/layers/scrollbar_layer_base.cc'
source_filename = "../../cc/layers/scrollbar_layer_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::ScrollbarLayerBase" = type { %"class.cc::Layer", i32, i8, %"struct.cc::ElementId" }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.41" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair" }
%class.scoped_refptr = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.scoped_refptr* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.26", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.32" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.10" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.21" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.14", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.13, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.13 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.31 }
%class.scoped_refptr.31 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::unique_ptr.34" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::unique_ptr.34"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.50", %"class.std::__1::vector.50", %"class.std::__1::vector.57" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.46 }
%union.anon.46 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { i8**, i8**, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i8** }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.59" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"struct.cc::ElementId" = type { i64 }
%"class.cc::Scrollbar" = type <{ i32 (...)**, %"class.base::RefCounted.69", [4 x i8] }>
%"class.base::RefCounted.69" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::SolidColorScrollbarLayer" = type { %"class.cc::ScrollbarLayerBase", i32, i32 }
%"class.cc::PaintedScrollbarLayer" = type { %"class.cc::ScrollbarLayerBase", %class.scoped_refptr.68, %"struct.cc::ElementId", float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, i8, i8, i8, i8, %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72" }
%class.scoped_refptr.68 = type { %"class.cc::Scrollbar"* }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.cc::ScopedUIResource"* }
%"class.cc::ScopedUIResource" = type <{ %"class.cc::UIResourceClient", %"class.cc::UIResourceBitmap", %"class.cc::UIResourceManager"*, i32, [4 x i8] }>
%"class.cc::UIResourceClient" = type { i32 (...)** }
%"class.cc::UIResourceBitmap" = type { %class.sk_sp.75, i32, %struct.SkImageInfo }
%class.sk_sp.75 = type { %class.SkPixelRef* }
%class.SkPixelRef = type <{ %class.SkRefCnt.base, i32, i32, [4 x i8], i8*, i64, %"struct.std::__1::atomic.76", [4 x i8], %"class.SkIDChangeListener::List", %"struct.std::__1::atomic.86", i8, [6 x i8] }>
%"struct.std::__1::atomic.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.81" }
%"struct.std::__1::atomic.81" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__cxx_atomic_impl.84" }
%"struct.std::__1::__cxx_atomic_impl.84" = type { %"struct.std::__1::__cxx_atomic_base_impl.85" }
%"struct.std::__1::__cxx_atomic_base_impl.85" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.86", [3 x i8] }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i8 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.90, i32, i32 }
%class.sk_sp.90 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::PaintedOverlayScrollbarLayer" = type { %"class.cc::ScrollbarLayerBase", %class.scoped_refptr.68, %"class.gfx::Size", %"class.gfx::Rect", %"class.gfx::Rect", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72" }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.95", i8, [7 x i8] }>
%"class.cc::LayerTreeImpl" = type opaque
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.cc::Region"* }
%"class.cc::ScrollbarLayerImplBase" = type { %"class.cc::LayerImpl.base", %"struct.cc::ElementId", i8, float, float, float, float, i32, i8, float }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.95", i8 }>
%"class.std::__1::vector.101" = type opaque
%class.sk_sp.102 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.86", [7 x i8] }>
%"class.cc::MicroBenchmark" = type { i32 (...)**, %"class.base::OnceCallback", i8, i8, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }

@_ZTVN2cc18ScrollbarLayerBaseE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::Layer"*, i32)* @_ZN2cc5Layer18SetBackgroundColorEj to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.gfx::Rect"*)* @_ZN2cc5Layer19SetNeedsDisplayRectERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.cc::Layer"*, float)* @_ZN2cc5Layer10SetOpacityEf to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer11HitTestableEv to i8*), i8* bitcast (i1 (%"class.cc::ScrollbarLayerBase"*)* @_ZNK2cc18ScrollbarLayerBase26IsScrollbarLayerForTestingEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.gfx::Rect"*, %"class.std::__1::vector.101"*)* @_ZN2cc5Layer14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS5_9allocatorIS7_EEEE to i8*), i8* bitcast (void (%class.sk_sp.102*, %"class.cc::Layer"*)* @_ZNK2cc5Layer10GetPictureEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)* @_ZN2cc5Layer17RunMicroBenchmarkEPNS_14MicroBenchmarkE to i8*), i8* bitcast (%"class.cc::LayerImpl"* (%"class.cc::Layer"*, %"class.cc::LayerTreeImpl"*)* @_ZN2cc5Layer15CreateLayerImplEPNS_13LayerTreeImplE to i8*), i8* bitcast (void (%"class.cc::ScrollbarLayerBase"*, %"class.cc::LayerImpl"*)* @_ZN2cc18ScrollbarLayerBase16PushPropertiesToEPNS_9LayerImplE to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZN2cc5Layer6UpdateEv to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZN2cc5Layer28IsSnappedToPixelGridInTargetEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.cc::LayerTreeHost"*)* @_ZN2cc5Layer16SetLayerTreeHostEPNS_13LayerTreeHostE to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer29OpacityCanAnimateOnImplThreadEv to i8*), i8* bitcast (void (%"class.cc::ScrollbarLayerBase"*)* @_ZN2cc18ScrollbarLayerBaseD2Ev to i8*), i8* bitcast (void (%"class.cc::ScrollbarLayerBase"*)* @_ZN2cc18ScrollbarLayerBaseD0Ev to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer18HasDrawableContentEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8

@_ZN2cc18ScrollbarLayerBaseD1Ev = hidden unnamed_addr alias void (%"class.cc::ScrollbarLayerBase"*), void (%"class.cc::ScrollbarLayerBase"*)* @_ZN2cc18ScrollbarLayerBaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18ScrollbarLayerBaseC2ENS_20ScrollbarOrientationEb(%"class.cc::ScrollbarLayerBase"*, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %0, i64 0, i32 0
  tail call void @_ZN2cc5LayerC2Ev(%"class.cc::Layer"* %5) #6
  %6 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2cc18ScrollbarLayerBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %0, i64 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %0, i64 0, i32 2
  store i8 %4, i8* %8, align 4
  %9 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %0, i64 0, i32 3, i32 0
  %10 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %10, i64* %9, align 8
  ret void
}

declare void @_ZN2cc5LayerC2Ev(%"class.cc::Layer"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc5LayerD2Ev(%"class.cc::Layer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18ScrollbarLayerBaseD2Ev(%"class.cc::ScrollbarLayerBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %0, i64 0, i32 0
  tail call void @_ZN2cc5LayerD2Ev(%"class.cc::Layer"* %2) #6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2cc18ScrollbarLayerBaseD0Ev(%"class.cc::ScrollbarLayerBase"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::ScrollbarLayerBase"* @_ZN2cc18ScrollbarLayerBase13CreateOrReuseE13scoped_refptrINS_9ScrollbarEEPS0_(%"class.cc::Scrollbar"*, %"class.cc::ScrollbarLayerBase"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::Scrollbar"* %0 to i1 (%"class.cc::Scrollbar"*)***
  %4 = load i1 (%"class.cc::Scrollbar"*)**, i1 (%"class.cc::Scrollbar"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.cc::Scrollbar"*)*, i1 (%"class.cc::Scrollbar"*)** %4, i64 3
  %6 = load i1 (%"class.cc::Scrollbar"*)*, i1 (%"class.cc::Scrollbar"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.cc::Scrollbar"* %0) #6
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = load i1 (%"class.cc::Scrollbar"*)**, i1 (%"class.cc::Scrollbar"*)*** %3, align 8
  %10 = getelementptr inbounds i1 (%"class.cc::Scrollbar"*)*, i1 (%"class.cc::Scrollbar"*)** %9, i64 16
  %11 = load i1 (%"class.cc::Scrollbar"*)*, i1 (%"class.cc::Scrollbar"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.cc::Scrollbar"* %0) #6
  %13 = select i1 %12, i32 2, i32 1
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i32 [ 0, %2 ], [ %13, %8 ]
  %16 = icmp eq %"class.cc::ScrollbarLayerBase"* %1, null
  br i1 %16, label %43, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.cc::ScrollbarLayerBase"* %1 to i32 (%"class.cc::ScrollbarLayerBase"*)***
  %19 = load i32 (%"class.cc::ScrollbarLayerBase"*)**, i32 (%"class.cc::ScrollbarLayerBase"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.cc::ScrollbarLayerBase"*)*, i32 (%"class.cc::ScrollbarLayerBase"*)** %19, i64 17
  %21 = load i32 (%"class.cc::ScrollbarLayerBase"*)*, i32 (%"class.cc::ScrollbarLayerBase"*)** %20, align 8
  %22 = tail call i32 %21(%"class.cc::ScrollbarLayerBase"* nonnull %1) #6
  %23 = icmp eq i32 %22, %15
  br i1 %23, label %24, label %42

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %1, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = bitcast %"class.cc::Scrollbar"* %0 to i32 (%"class.cc::Scrollbar"*)***
  %28 = load i32 (%"class.cc::Scrollbar"*)**, i32 (%"class.cc::Scrollbar"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.cc::Scrollbar"*)*, i32 (%"class.cc::Scrollbar"*)** %28, i64 1
  %30 = load i32 (%"class.cc::Scrollbar"*)*, i32 (%"class.cc::Scrollbar"*)** %29, align 8
  %31 = tail call i32 %30(%"class.cc::Scrollbar"* %0) #6
  %32 = icmp eq i32 %26, %31
  br i1 %32, label %33, label %42

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %1, i64 0, i32 2
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp ne i8 %35, 0
  %37 = load i1 (%"class.cc::Scrollbar"*)**, i1 (%"class.cc::Scrollbar"*)*** %3, align 8
  %38 = getelementptr inbounds i1 (%"class.cc::Scrollbar"*)*, i1 (%"class.cc::Scrollbar"*)** %37, i64 2
  %39 = load i1 (%"class.cc::Scrollbar"*)*, i1 (%"class.cc::Scrollbar"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.cc::Scrollbar"* %0) #6
  %41 = xor i1 %36, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %24, %17, %33
  br label %43

43:                                               ; preds = %14, %42, %33
  %44 = phi %"class.cc::ScrollbarLayerBase"* [ null, %42 ], [ %1, %33 ], [ null, %14 ]
  switch i32 %15, label %57 [
    i32 0, label %45
    i32 1, label %49
    i32 2, label %53
  ]

45:                                               ; preds = %43
  %46 = bitcast %"class.cc::ScrollbarLayerBase"* %44 to %"class.cc::SolidColorScrollbarLayer"*
  %47 = tail call %"class.cc::SolidColorScrollbarLayer"* @_ZN2cc24SolidColorScrollbarLayer13CreateOrReuseE13scoped_refptrINS_9ScrollbarEEPS0_(%"class.cc::Scrollbar"* %0, %"class.cc::SolidColorScrollbarLayer"* %46) #6
  %48 = ptrtoint %"class.cc::SolidColorScrollbarLayer"* %47 to i64
  br label %72

49:                                               ; preds = %43
  %50 = bitcast %"class.cc::ScrollbarLayerBase"* %44 to %"class.cc::PaintedScrollbarLayer"*
  %51 = tail call %"class.cc::PaintedScrollbarLayer"* @_ZN2cc21PaintedScrollbarLayer13CreateOrReuseE13scoped_refptrINS_9ScrollbarEEPS0_(%"class.cc::Scrollbar"* %0, %"class.cc::PaintedScrollbarLayer"* %50) #6
  %52 = ptrtoint %"class.cc::PaintedScrollbarLayer"* %51 to i64
  br label %72

53:                                               ; preds = %43
  %54 = bitcast %"class.cc::ScrollbarLayerBase"* %44 to %"class.cc::PaintedOverlayScrollbarLayer"*
  %55 = tail call %"class.cc::PaintedOverlayScrollbarLayer"* @_ZN2cc28PaintedOverlayScrollbarLayer13CreateOrReuseE13scoped_refptrINS_9ScrollbarEEPS0_(%"class.cc::Scrollbar"* %0, %"class.cc::PaintedOverlayScrollbarLayer"* %54) #6
  %56 = ptrtoint %"class.cc::PaintedOverlayScrollbarLayer"* %55 to i64
  br label %72

57:                                               ; preds = %43
  %58 = icmp eq %"class.cc::Scrollbar"* %0, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.cc::Scrollbar", %"class.cc::Scrollbar"* %0, i64 0, i32 1
  %61 = getelementptr inbounds %"class.base::RefCounted.69", %"class.base::RefCounted.69"* %60, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #6
  %62 = getelementptr inbounds %"class.base::RefCounted.69", %"class.base::RefCounted.69"* %60, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %72

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.base::RefCounted.69", %"class.base::RefCounted.69"* %60, i64 -2
  %67 = bitcast %"class.base::RefCounted.69"* %66 to %"class.cc::Scrollbar"*
  %68 = bitcast %"class.base::RefCounted.69"* %66 to void (%"class.cc::Scrollbar"*)***
  %69 = load void (%"class.cc::Scrollbar"*)**, void (%"class.cc::Scrollbar"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.cc::Scrollbar"*)*, void (%"class.cc::Scrollbar"*)** %69, i64 20
  %71 = load void (%"class.cc::Scrollbar"*)*, void (%"class.cc::Scrollbar"*)** %70, align 8
  tail call void %71(%"class.cc::Scrollbar"* nonnull %67) #6
  br label %72

72:                                               ; preds = %45, %49, %53, %57, %59, %65
  %73 = phi i64 [ 0, %57 ], [ 0, %59 ], [ 0, %65 ], [ %48, %45 ], [ %52, %49 ], [ %56, %53 ]
  %74 = inttoptr i64 %73 to %"class.cc::ScrollbarLayerBase"*
  ret %"class.cc::ScrollbarLayerBase"* %74
}

declare %"class.cc::SolidColorScrollbarLayer"* @_ZN2cc24SolidColorScrollbarLayer13CreateOrReuseE13scoped_refptrINS_9ScrollbarEEPS0_(%"class.cc::Scrollbar"*, %"class.cc::SolidColorScrollbarLayer"*) local_unnamed_addr #1

declare %"class.cc::PaintedScrollbarLayer"* @_ZN2cc21PaintedScrollbarLayer13CreateOrReuseE13scoped_refptrINS_9ScrollbarEEPS0_(%"class.cc::Scrollbar"*, %"class.cc::PaintedScrollbarLayer"*) local_unnamed_addr #1

declare %"class.cc::PaintedOverlayScrollbarLayer"* @_ZN2cc28PaintedOverlayScrollbarLayer13CreateOrReuseE13scoped_refptrINS_9ScrollbarEEPS0_(%"class.cc::Scrollbar"*, %"class.cc::PaintedOverlayScrollbarLayer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18ScrollbarLayerBase18SetScrollElementIdENS_9ElementIdE(%"class.cc::ScrollbarLayerBase"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %0, i64 0, i32 3, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  store i64 %1, i64* %3, align 8
  %7 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %0, i64 0, i32 0
  tail call void @_ZN2cc5Layer14SetNeedsCommitEv(%"class.cc::Layer"* %7) #6
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN2cc5Layer14SetNeedsCommitEv(%"class.cc::Layer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18ScrollbarLayerBase16PushPropertiesToEPNS_9LayerImplE(%"class.cc::ScrollbarLayerBase"*, %"class.cc::LayerImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %0, i64 0, i32 0
  tail call void @_ZN2cc5Layer16PushPropertiesToEPNS_9LayerImplE(%"class.cc::Layer"* %3, %"class.cc::LayerImpl"* %1) #6
  %4 = bitcast %"class.cc::LayerImpl"* %1 to %"class.cc::ScrollbarLayerImplBase"*
  %5 = getelementptr inbounds %"class.cc::ScrollbarLayerBase", %"class.cc::ScrollbarLayerBase"* %0, i64 0, i32 3, i32 0
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN2cc22ScrollbarLayerImplBase18SetScrollElementIdENS_9ElementIdE(%"class.cc::ScrollbarLayerImplBase"* %4, i64 %6) #6
  ret void
}

declare void @_ZN2cc5Layer16PushPropertiesToEPNS_9LayerImplE(%"class.cc::Layer"*, %"class.cc::LayerImpl"*) unnamed_addr #1

declare void @_ZN2cc22ScrollbarLayerImplBase18SetScrollElementIdENS_9ElementIdE(%"class.cc::ScrollbarLayerImplBase"*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2cc18ScrollbarLayerBase26IsScrollbarLayerForTestingEv(%"class.cc::ScrollbarLayerBase"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

declare void @_ZN2cc5Layer18SetBackgroundColorEj(%"class.cc::Layer"*, i32) unnamed_addr #1

declare void @_ZN2cc5Layer19SetNeedsDisplayRectERKN3gfx4RectE(%"class.cc::Layer"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN2cc5Layer10SetOpacityEf(%"class.cc::Layer"*, float) unnamed_addr #1

declare zeroext i1 @_ZNK2cc5Layer11HitTestableEv(%"class.cc::Layer"*) unnamed_addr #1

declare void @_ZN2cc5Layer14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS5_9allocatorIS7_EEEE(%"class.cc::Layer"*, %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector.101"*) unnamed_addr #1

declare void @_ZNK2cc5Layer10GetPictureEv(%class.sk_sp.102* sret, %"class.cc::Layer"*) unnamed_addr #1

declare void @_ZN2cc5Layer17RunMicroBenchmarkEPNS_14MicroBenchmarkE(%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*) unnamed_addr #1

declare %"class.cc::LayerImpl"* @_ZN2cc5Layer15CreateLayerImplEPNS_13LayerTreeImplE(%"class.cc::Layer"*, %"class.cc::LayerTreeImpl"*) unnamed_addr #1

declare zeroext i1 @_ZN2cc5Layer6UpdateEv(%"class.cc::Layer"*) unnamed_addr #1

declare zeroext i1 @_ZN2cc5Layer28IsSnappedToPixelGridInTargetEv(%"class.cc::Layer"*) unnamed_addr #1

declare void @_ZN2cc5Layer16SetLayerTreeHostEPNS_13LayerTreeHostE(%"class.cc::Layer"*, %"class.cc::LayerTreeHost"*) unnamed_addr #1

declare zeroext i1 @_ZNK2cc5Layer29OpacityCanAnimateOnImplThreadEv(%"class.cc::Layer"*) unnamed_addr #1

declare zeroext i1 @_ZNK2cc5Layer18HasDrawableContentEv(%"class.cc::Layer"*) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
